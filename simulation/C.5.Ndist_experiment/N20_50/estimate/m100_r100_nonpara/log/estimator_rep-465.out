
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3296"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 4  3  3  7  4  4  3  4  1  3  7  3  2  3  4  6  4  7  2  1  4  4  4  2  1  1 
46 47 48 49 50 
 2  1  2  3  1 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02739 0.33058 0.61081 0.99781 6.00000 
[1] "event indicator table: "

   0    1 
1968 1328 
[1] "treatment indicator table: "

   0    1 
1230 2066 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1576
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 61"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1720
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 190.121 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.288 0.0637
 2 mu         0.1   0.2 0.380 0.0532
 3 mu         0.1   0.3 0.422 0.0602
 4 mu         0.1   0.4 0.447 0.0797
 5 mu         0.1   0.5 0.424 0.0760
 6 mu         0.2   0.1 0.347 0.0479
 7 mu         0.2   0.2 0.418 0.0392
 8 mu         0.2   0.3 0.462 0.0451
 9 mu         0.2   0.4 0.490 0.0465
10 mu         0.2   0.5 0.491 0.0452
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.660        0.555  0.000132      3.22
 2 mu         0.2      0.859        0.851  0.0350        2.26
 3 mu         0.3      0.989        0.977  0.219         2.59
 4 mu         0.4      1.00         0.995  0.549         1.58
 5 mu         0.5      0.985        0.968  0.684         1.37
 6 mu         0.6      0.998        0.997  0.702         1.35
 7 mu         0.7      1.01         1.01   0.688         1.32
 8 mu         0.8      1.01         1.01   0.660         1.34
 9 mu         0.9      0.990        0.992  0.330         1.76
10 mu_1       0.1      0.722        0.705  0.000399      3.82
11 mu_1       0.2      0.896        0.863  0.0650        2.29
12 mu_1       0.3      1.00         1.01   0.294         2.64
13 mu_1       0.4      0.997        0.982  0.565         1.48
14 mu_1       0.5      0.985        0.983  0.688         1.35
15 mu_1       0.6      1.00         0.996  0.714         1.34
16 mu_1       0.7      1.02         1.01   0.687         1.32
17 mu_1       0.8      1.00         1.00   0.658         1.36
18 mu_1       0.9      0.990        1.00   0.313         1.80
19 mu_0       0.1      0.653        0.527  0.000102      3.15
20 mu_0       0.2      0.849        0.829  0.0275        2.29
21 mu_0       0.3      0.982        0.966  0.187         2.57
22 mu_0       0.4      1.00         0.993  0.488         1.71
23 mu_0       0.5      0.985        0.975  0.645         1.42
24 mu_0       0.6      0.995        0.998  0.684         1.36
25 mu_0       0.7      1.01         1.00   0.686         1.31
26 mu_0       0.8      1.01         1.02   0.666         1.28
27 mu_0       0.9      0.988        0.968  0.477         1.47
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     58.0       7.96e-13  1.36e-34   3448.  
 2 mu         0.2      5.88      2.31e- 7  2.95e-22    229.  
 3 mu         0.3      1.11      2.07e- 4  3.29e-15     27.7 
 4 mu         0.4      0.852     2.17e- 2  2.31e-10     13.8 
 5 mu         0.5      0.923     2.67e- 1  9.09e- 7      8.29
 6 mu         0.6      1.09      7.93e- 1  9.76e- 9      5.61
 7 mu         0.7      1.26      8.07e- 1  4.82e-13      7.55
 8 mu         0.8      1.22      4.27e- 1  3.79e-19      7.83
 9 mu         0.9      0.949     3.07e- 3  1.24e-29     12.4 
10 mu_1       0.1     23.1       5.54e-12  1.19e-33    958.  
11 mu_1       0.2      2.89      7.45e- 7  1.29e-21    159.  
12 mu_1       0.3      0.927     4.97e- 4  9.61e-15     12.8 
13 mu_1       0.4      0.863     3.15e- 2  5.05e-10     13.8 
14 mu_1       0.5      0.942     2.86e- 1  1.11e- 6      8.57
15 mu_1       0.6      1.11      8.35e- 1  4.52e-10      4.84
16 mu_1       0.7      1.26      8.77e- 1  1.91e-14      7.70
17 mu_1       0.8      1.21      3.68e- 1  1.31e-20      8.12
18 mu_1       0.9      0.935     2.07e- 3  3.83e-31     12.4 
19 mu_0       0.1     61.9       2.69e-13  1.89e-35   3724.  
20 mu_0       0.2      6.63      9.07e- 8  4.61e-23    247.  
21 mu_0       0.3      1.20      8.68e- 5  5.88e-16     34.1 
22 mu_0       0.4      0.845     1.49e- 2  4.81e-11     13.8 
23 mu_0       0.5      0.903     1.69e- 1  2.27e- 7      8.20
24 mu_0       0.6      1.05      5.83e- 1  2.37e- 8      6.78
25 mu_0       0.7      1.24      8.72e- 1  1.56e-12      7.19
26 mu_0       0.8      1.26      5.19e- 1  1.84e-18      8.46
27 mu_0       0.9      1.07      1.20e- 2  1.21e-28     12.4 
[1] "Total run time was 193.491 seconds"
