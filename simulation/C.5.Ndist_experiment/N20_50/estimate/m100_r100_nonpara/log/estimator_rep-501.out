
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3486"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 34 35 36 37 38 39 40 41 42 44 45 46 47 
 4  5  3  1  3  5  4  2  3  2  5  2  4  2  3  2  8  2  6  4  3  4  3  4  4  5 
48 49 50 
 3  2  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0566  0.4188  0.6614  1.0000  6.0000 
[1] "event indicator table: "

   0    1 
2071 1415 
[1] "treatment indicator table: "

   0    1 
1170 2316 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1727
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1759
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 70"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 200.549 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.384 0.110 
 2 mu         0.1   0.2 0.444 0.139 
 3 mu         0.1   0.3 0.533 0.144 
 4 mu         0.1   0.4 0.588 0.157 
 5 mu         0.1   0.5 0.631 0.170 
 6 mu         0.2   0.1 0.270 0.0302
 7 mu         0.2   0.2 0.326 0.0394
 8 mu         0.2   0.3 0.401 0.0356
 9 mu         0.2   0.4 0.460 0.0372
10 mu         0.2   0.5 0.501 0.0424
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      1.13         0.186 0.0000128      20.5 
 2 mu         0.2      0.945        0.827 0.0190          3.77
 3 mu         0.3      0.947        0.960 0.238           1.61
 4 mu         0.4      0.980        0.968 0.542           1.63
 5 mu         0.5      1.00         1.01  0.517           1.43
 6 mu         0.6      1.01         0.997 0.754           1.42
 7 mu         0.7      1.00         0.993 0.722           1.34
 8 mu         0.8      0.995        0.996 0.650           1.42
 9 mu         0.9      0.981        0.959 0.382           2.09
10 mu_1       0.1      1.01         0.357 0.0000417      11.9 
11 mu_1       0.2      0.937        0.862 0.0316          2.92
12 mu_1       0.3      0.952        0.963 0.287           1.61
13 mu_1       0.4      0.984        0.980 0.488           1.60
14 mu_1       0.5      1.00         1.01  0.550           1.42
15 mu_1       0.6      1.01         0.990 0.750           1.39
16 mu_1       0.7      1.00         0.996 0.709           1.33
17 mu_1       0.8      0.994        1.00  0.645           1.43
18 mu_1       0.9      0.979        0.964 0.363           2.09
19 mu_0       0.1      1.14         0.167 0.00000954     21.5 
20 mu_0       0.2      0.946        0.839 0.0158          3.98
21 mu_0       0.3      0.944        0.949 0.218           1.70
22 mu_0       0.4      0.977        0.957 0.543           1.68
23 mu_0       0.5      1.00         1.00  0.484           1.50
24 mu_0       0.6      1.01         1.00  0.760           1.46
25 mu_0       0.7      1.01         0.996 0.728           1.37
26 mu_0       0.8      1.00         0.988 0.640           1.36
27 mu_0       0.9      0.992        0.979 0.399           2.05
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1   0.000584     3.23e-14  4.50e-35    0.0528
 2 mu         0.2   0.0835       8.24e- 8  6.18e-23    4.05  
 3 mu         0.3   0.641        7.78e- 5  6.00e-16   16.9   
 4 mu         0.4   1.10         1.46e- 2  4.30e-11   16.6   
 5 mu         0.5   1.18         2.75e- 1  1.62e- 7   10.9   
 6 mu         0.6   1.15         7.21e- 1  8.81e- 5    9.81  
 7 mu         0.7   0.991        7.36e- 1  1.21e- 5    4.38  
 8 mu         0.8   1.23         4.34e- 1  3.12e-10    7.85  
 9 mu         0.9   2.20         4.98e- 3  8.51e-19   41.3   
10 mu_1       0.1   0.00186      2.13e-13  4.10e-34    0.165 
11 mu_1       0.2   0.141        2.84e- 7  2.81e-22    6.32  
12 mu_1       0.3   0.783        1.82e- 4  1.82e-15   19.6   
13 mu_1       0.4   1.15         2.32e- 2  9.79e-11   14.4   
14 mu_1       0.5   1.19         3.21e- 1  3.07e- 7   11.4   
15 mu_1       0.6   1.13         6.70e- 1  1.39e- 4    9.04  
16 mu_1       0.7   0.981        7.47e- 1  5.65e- 6    4.39  
17 mu_1       0.8   1.27         3.74e- 1  1.27e-10    8.29  
18 mu_1       0.9   2.22         3.91e- 3  3.08e-19   41.8   
19 mu_0       0.1   0.000442     1.42e-14  0           0.0403
20 mu_0       0.2   0.0690       3.21e- 8  0           3.48  
21 mu_0       0.3   0.580        3.33e- 5  0          15.8   
22 mu_0       0.4   1.06         8.08e- 3  0          18.0   
23 mu_0       0.5   1.16         1.93e- 1  0          10.4   
24 mu_0       0.6   1.18         5.64e- 1  0          11.0   
25 mu_0       0.7   1.02         6.62e- 1  0           4.34  
26 mu_0       0.8   1.08         5.91e- 1  0           6.10  
27 mu_0       0.9   2.02         9.38e- 3  0          37.6   
[1] "Total run time was 203.696 seconds"
