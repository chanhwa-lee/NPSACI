
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3565"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 2  1  5  2  6  2  1  4  2  3  6  2  4  1  6  4  1  3  2  3  4  5  1  2  6  4 
46 47 48 49 50 
 4  7  4  2  1 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03932 0.38207 0.63426 1.00000 6.17228 
[1] "event indicator table: "

   0    1 
2146 1419 
[1] "treatment indicator table: "

   0    1 
1292 2273 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1850
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1715
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 34"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 199.099 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.461 0.0940
 2 mu         0.1   0.2 0.540 0.102 
 3 mu         0.1   0.3 0.630 0.123 
 4 mu         0.1   0.4 0.652 0.111 
 5 mu         0.1   0.5 0.655 0.100 
 6 mu         0.2   0.1 0.411 0.0548
 7 mu         0.2   0.2 0.493 0.0640
 8 mu         0.2   0.3 0.592 0.0995
 9 mu         0.2   0.4 0.609 0.0788
10 mu         0.2   0.5 0.617 0.0693
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.983        0.584   0.00143      6.24
 2 mu         0.2      1.03         0.921   0.173        3.08
 3 mu         0.3      1.05         0.993   0.474        2.01
 4 mu         0.4      1.03         0.996   0.583        1.63
 5 mu         0.5      1.02         1.01    0.671        1.35
 6 mu         0.6      0.993        1.00    0.667        1.29
 7 mu         0.7      0.989        0.978   0.678        1.35
 8 mu         0.8      1.00         1.01    0.479        1.55
 9 mu         0.9      0.989        0.986   0.349        1.90
10 mu_1       0.1      1.02         0.799   0.00389      3.84
11 mu_1       0.2      1.03         0.964   0.246        2.74
12 mu_1       0.3      1.04         0.999   0.502        1.96
13 mu_1       0.4      1.03         0.994   0.594        1.55
14 mu_1       0.5      1.01         1.01    0.696        1.34
15 mu_1       0.6      0.991        1.00    0.638        1.30
16 mu_1       0.7      0.990        0.977   0.675        1.37
17 mu_1       0.8      1.00         0.993   0.466        1.56
18 mu_1       0.9      0.989        0.986   0.349        1.90
19 mu_0       0.1      0.980        0.563   0.00116      6.72
20 mu_0       0.2      1.03         0.924   0.154        3.17
21 mu_0       0.3      1.05         0.985   0.461        2.07
22 mu_0       0.4      1.03         0.992   0.576        1.68
23 mu_0       0.5      1.02         1.00    0.645        1.36
24 mu_0       0.6      0.994        1.01    0.711        1.27
25 mu_0       0.7      0.987        0.968   0.667        1.31
26 mu_0       0.8      1.00         1.01    0.530        1.50
27 mu_0       0.9      0.989        0.987   0.350        1.97
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.598     9.44e-14  1.06e-39     29.6 
 2 mu         0.2      0.916     1.75e- 7  2.61e-26     34.9 
 3 mu         0.3      0.653     1.64e- 4  1.47e-18      7.75
 4 mu         0.4      1.04      2.02e- 2  3.87e-13      8.67
 5 mu         0.5      1.12      2.76e- 1  3.34e- 9     10.0 
 6 mu         0.6      1.06      5.28e- 1  2.25e- 6      5.89
 7 mu         0.7      1.18      8.66e- 1  3.64e-10      4.11
 8 mu         0.8      1.34      2.74e- 1  4.84e-16      6.31
 9 mu         0.9      1.08      9.80e- 4  1.81e-26     15.7 
10 mu_1       0.1      0.903     6.58e-13  9.89e-39     42.3 
11 mu_1       0.2      0.799     5.53e- 7  1.22e-25     31.7 
12 mu_1       0.3      0.699     3.83e- 4  4.58e-18      8.24
13 mu_1       0.4      1.10      3.27e- 2  9.07e-13      9.60
14 mu_1       0.5      1.11      3.05e- 1  6.37e- 9      9.26
15 mu_1       0.6      1.06      5.48e- 1  1.01e- 6      5.89
16 mu_1       0.7      1.20      8.34e- 1  9.44e-11      4.42
17 mu_1       0.8      1.33      2.38e- 1  1.10e-16      6.79
18 mu_1       0.9      1.07      7.26e- 4  3.65e-27     16.5 
19 mu_0       0.1      0.565     3.18e-14  0            28.2 
20 mu_0       0.2      0.946     7.34e- 8  0            35.7 
21 mu_0       0.3      0.633     7.39e- 5  0             8.54
22 mu_0       0.4      1.01      1.02e- 2  0             8.67
23 mu_0       0.5      1.13      1.53e- 1  0            10.8 
24 mu_0       0.6      1.06      5.02e- 1  0             6.47
25 mu_0       0.7      1.13      8.33e- 1  0             4.11
26 mu_0       0.8      1.36      2.81e- 1  0             5.94
27 mu_0       0.9      1.15      3.01e- 3  0            11.4 
[1] "Total run time was 202.057 seconds"
