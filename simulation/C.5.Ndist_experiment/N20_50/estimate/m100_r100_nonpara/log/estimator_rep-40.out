
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3349"
[1] "cluster size dist'n: "

20 21 22 23 24 25 27 28 29 30 31 32 33 34 35 36 37 38 39 41 42 43 44 45 46 47 
 8  4  2  4  3  2  5  2  5  4  2  7  3  6  4  6  2  2  3  4  3  1  2  2  3  3 
48 49 50 
 4  3  1 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04377 0.37096 0.62519 1.00000 5.00000 
[1] "event indicator table: "

   0    1 
1990 1359 
[1] "treatment indicator table: "

   0    1 
1197 2152 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1588
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 97"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1761
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 27"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 325.923 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.437 0.0704
 2 mu         0.1   0.2 0.559 0.0889
 3 mu         0.1   0.3 0.687 0.111 
 4 mu         0.1   0.4 0.771 0.128 
 5 mu         0.1   0.5 0.809 0.127 
 6 mu         0.2   0.1 0.348 0.0286
 7 mu         0.2   0.2 0.453 0.0372
 8 mu         0.2   0.3 0.559 0.0570
 9 mu         0.2   0.4 0.630 0.0696
10 mu         0.2   0.5 0.667 0.0568
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      1.26         0.478 0.0000000794     12.6 
 2 mu         0.2      1.12         0.985 0.00157           3.46
 3 mu         0.3      1.11         1.04  0.110             2.88
 4 mu         0.4      1.03         1.02  0.558             1.68
 5 mu         0.5      0.982        0.966 0.535             1.40
 6 mu         0.6      0.962        0.963 0.596             1.40
 7 mu         0.7      0.962        0.966 0.723             1.16
 8 mu         0.8      1.00         0.981 0.737             1.47
 9 mu         0.9      1.01         1.01  0.370             1.95
10 mu_1       0.1      1.09         0.731 0.000000315       5.28
11 mu_1       0.2      1.11         1.03  0.00318           3.50
12 mu_1       0.3      1.09         1.03  0.154             2.62
13 mu_1       0.4      1.02         1.00  0.533             1.56
14 mu_1       0.5      0.978        0.974 0.539             1.39
15 mu_1       0.6      0.960        0.962 0.619             1.38
16 mu_1       0.7      0.964        0.971 0.723             1.17
17 mu_1       0.8      1.00         0.984 0.736             1.49
18 mu_1       0.9      1.01         1.01  0.359             2.00
19 mu_0       0.1      1.28         0.443 0.0000000532     14.0 
20 mu_0       0.2      1.12         1.01  0.00117           3.45
21 mu_0       0.3      1.11         1.08  0.0905            2.98
22 mu_0       0.4      1.04         1.02  0.575             1.77
23 mu_0       0.5      0.986        0.977 0.530             1.43
24 mu_0       0.6      0.965        0.964 0.562             1.43
25 mu_0       0.7      0.956        0.971 0.703             1.15
26 mu_0       0.8      0.989        0.975 0.736             1.40
27 mu_0       0.9      1.02         1.00  0.462             1.74
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.206     1.16e-11  3.88e-48     11.8 
 2 mu         0.2      1.52      1.05e- 6  4.37e-33     61.9 
 3 mu         0.3      1.40      8.41e- 4  2.79e-24     19.3 
 4 mu         0.4      1.22      4.42e- 2  4.92e-18     12.2 
 5 mu         0.5      1.31      2.31e- 1  3.45e-13      8.89
 6 mu         0.6      1.19      6.38e- 1  3.14e- 9      6.16
 7 mu         0.7      0.953     6.66e- 1  1.22e- 8      4.10
 8 mu         0.8      1.05      2.62e- 1  5.50e-14      9.09
 9 mu         0.9      1.06      1.73e- 3  1.64e-23     12.9 
10 mu_1       0.1      0.425     7.21e-11  3.88e-47     23.0 
11 mu_1       0.2      1.70      3.84e- 6  2.18e-32     60.4 
12 mu_1       0.3      1.35      1.81e- 3  9.29e-24     17.1 
13 mu_1       0.4      1.23      7.37e- 2  1.23e-17     12.8 
14 mu_1       0.5      1.31      2.99e- 1  6.89e-13      7.73
15 mu_1       0.6      1.15      7.07e- 1  5.23e- 9      6.16
16 mu_1       0.7      0.935     6.80e- 1  3.41e- 9      4.10
17 mu_1       0.8      1.05      1.97e- 1  1.34e-14      9.27
18 mu_1       0.9      1.05      1.25e- 3  3.56e-24     13.4 
19 mu_0       0.1      0.182     4.28e-12  0            10.5 
20 mu_0       0.2      1.47      3.57e- 7  0            62.3 
21 mu_0       0.3      1.42      3.77e- 4  0            22.2 
22 mu_0       0.4      1.21      2.45e- 2  0            13.6 
23 mu_0       0.5      1.30      1.53e- 1  0            10.1 
24 mu_0       0.6      1.23      5.55e- 1  0             6.34
25 mu_0       0.7      0.995     6.48e- 1  0             4.52
26 mu_0       0.8      1.01      4.63e- 1  0             8.94
27 mu_0       0.9      1.13      4.04e- 3  0            13.7 
[1] "Total run time was 331.43 seconds"
