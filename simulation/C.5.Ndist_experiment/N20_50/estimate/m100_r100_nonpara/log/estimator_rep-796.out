
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3471"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 42 43 44 45 46 
 3  5  5  2  3  1  1  6  1  7  1  5  2  5  4  5  4  3  3  3  2  3  4  3  3  1 
47 48 49 50 
 3  2  5  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02218 0.31703 0.59343 1.00000 8.49139 
[1] "event indicator table: "

   0    1 
2110 1361 
[1] "treatment indicator table: "

   0    1 
1243 2228 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1720
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1751
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 208.853 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.293 0.111 
 2 mu         0.1   0.2 0.301 0.115 
 3 mu         0.1   0.3 0.383 0.120 
 4 mu         0.1   0.4 0.431 0.131 
 5 mu         0.1   0.5 0.442 0.129 
 6 mu         0.2   0.1 0.293 0.0894
 7 mu         0.2   0.2 0.341 0.0828
 8 mu         0.2   0.3 0.392 0.0940
 9 mu         0.2   0.4 0.422 0.109 
10 mu         0.2   0.5 0.455 0.108 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.905        0.238  1.01e- 9     10.4 
 2 mu         0.2      1.01         0.825  1.69e- 4     17.4 
 3 mu         0.3      0.947        0.955  3.58e- 2      2.48
 4 mu         0.4      0.992        1.01   3.85e- 1      1.62
 5 mu         0.5      1.01         0.992  7.18e- 1      1.71
 6 mu         0.6      1.01         0.998  7.98e- 1      1.40
 7 mu         0.7      1.01         1.01   7.31e- 1      1.34
 8 mu         0.8      1.00         0.988  6.64e- 1      1.42
 9 mu         0.9      1.01         0.983  2.37e- 1      2.36
10 mu_1       0.1      1.00         0.437  4.47e- 9     12.6 
11 mu_1       0.2      0.996        0.854  3.76e- 4     14.5 
12 mu_1       0.3      0.953        0.977  5.38e- 2      1.84
13 mu_1       0.4      0.997        0.999  4.48e- 1      1.56
14 mu_1       0.5      1.01         0.984  7.26e- 1      1.72
15 mu_1       0.6      1.01         1.00   8.02e- 1      1.35
16 mu_1       0.7      1.01         1.01   7.32e- 1      1.33
17 mu_1       0.8      1.00         0.992  6.45e- 1      1.43
18 mu_1       0.9      1.01         0.968  2.24e- 1      2.38
19 mu_0       0.1      0.894        0.215  6.30e-10     10.7 
20 mu_0       0.2      1.02         0.823  1.18e- 4     18.1 
21 mu_0       0.3      0.944        0.931  2.81e- 2      2.84
22 mu_0       0.4      0.988        0.997  3.19e- 1      1.66
23 mu_0       0.5      1.01         0.996  6.97e- 1      1.70
24 mu_0       0.6      1.01         0.998  7.92e- 1      1.48
25 mu_0       0.7      1.01         1.00   7.27e- 1      1.37
26 mu_0       0.8      1.00         0.991  7.21e- 1      1.38
27 mu_0       0.9      1.02         0.980  3.54e- 1      2.17
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.741     1.56e-13  3.75e-35     65.3 
 2 mu         0.2      1.45      1.10e- 7  9.15e-23     69.6 
 3 mu         0.3      1.22      2.25e- 4  1.17e-15     45.1 
 4 mu         0.4      1.36      3.20e- 2  9.55e-11     13.7 
 5 mu         0.5      1.24      4.16e- 1  3.51e- 7     13.0 
 6 mu         0.6      0.989     6.65e- 1  1.59e- 4      4.04
 7 mu         0.7      0.984     5.92e- 1  1.67e- 6      6.17
 8 mu         0.8      1.09      4.20e- 1  1.00e-10      7.11
 9 mu         0.9      1.29      3.30e- 3  2.42e-19     21.7 
10 mu_1       0.1      1.17      1.05e-12  3.35e-34     96.8 
11 mu_1       0.2      1.44      3.52e- 7  4.09e-22     73.5 
12 mu_1       0.3      1.17      4.58e- 4  3.48e-15     33.9 
13 mu_1       0.4      1.37      4.87e- 2  2.13e-10     14.4 
14 mu_1       0.5      1.19      5.05e- 1  6.65e- 7     11.9 
15 mu_1       0.6      0.979     6.63e- 1  1.66e- 4      4.55
16 mu_1       0.7      0.987     5.43e- 1  3.53e- 7      5.95
17 mu_1       0.8      1.11      3.54e- 1  3.89e-11      7.44
18 mu_1       0.9      1.29      2.51e- 3  8.37e-20     22.9 
19 mu_0       0.1      0.694     6.16e-14  4.43e-36     61.8 
20 mu_0       0.2      1.46      4.94e- 8  1.22e-23     74.1 
21 mu_0       0.3      1.24      1.19e- 4  1.77e-16     49.9 
22 mu_0       0.4      1.35      1.77e- 2  1.44e-11     13.2 
23 mu_0       0.5      1.28      3.26e- 1  3.69e- 8     14.1 
24 mu_0       0.6      1.00      6.77e- 1  2.09e- 5      3.64
25 mu_0       0.7      0.976     5.43e- 1  4.73e- 6      6.68
26 mu_0       0.8      1.04      4.39e- 1  3.44e-10      5.81
27 mu_0       0.9      1.33      1.04e- 2  1.67e-18     11.4 
[1] "Total run time was 212.383 seconds"
