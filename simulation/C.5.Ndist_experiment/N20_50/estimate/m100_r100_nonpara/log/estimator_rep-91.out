
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3421"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 4  4  4  6  2  4  1  2  7  2  1  3  3  4  4  7  1  3  1  4  2  4  3  2  6  5 
46 47 48 49 50 
 1  3  2  2  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04984 0.40198 0.65134 1.00000 5.30490 
[1] "event indicator table: "

   0    1 
2088 1333 
[1] "treatment indicator table: "

   0    1 
1184 2237 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1694
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 77"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1727
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 50"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 233.221 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.348 0.145 
 2 mu         0.1   0.2 0.500 0.185 
 3 mu         0.1   0.3 0.495 0.183 
 4 mu         0.1   0.4 0.544 0.175 
 5 mu         0.1   0.5 0.578 0.177 
 6 mu         0.2   0.1 0.312 0.0668
 7 mu         0.2   0.2 0.429 0.103 
 8 mu         0.2   0.3 0.431 0.0952
 9 mu         0.2   0.4 0.484 0.0698
10 mu         0.2   0.5 0.534 0.0499
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.923        0.216  0.000136     23.4 
 2 mu         0.2      0.923        0.822  0.0561        2.51
 3 mu         0.3      0.982        0.992  0.393         1.66
 4 mu         0.4      1.01         1.00   0.586         1.51
 5 mu         0.5      1.01         1.00   0.698         1.37
 6 mu         0.6      0.996        0.983  0.696         1.34
 7 mu         0.7      0.975        0.974  0.686         1.25
 8 mu         0.8      0.971        0.982  0.678         1.53
 9 mu         0.9      0.989        0.987  0.280         2.59
10 mu_1       0.1      0.871        0.394  0.000439      7.07
11 mu_1       0.2      0.941        0.916  0.0931        2.31
12 mu_1       0.3      0.992        1.01   0.407         1.61
13 mu_1       0.4      1.01         1.02   0.614         1.50
14 mu_1       0.5      1.01         0.999  0.726         1.32
15 mu_1       0.6      0.994        0.987  0.694         1.32
16 mu_1       0.7      0.974        0.974  0.696         1.26
17 mu_1       0.8      0.971        0.978  0.653         1.56
18 mu_1       0.9      0.990        0.990  0.262         2.67
19 mu_0       0.1      0.929        0.196  0.000102     25.3 
20 mu_0       0.2      0.918        0.794  0.0469        2.73
21 mu_0       0.3      0.977        0.979  0.382         1.68
22 mu_0       0.4      1.00         0.987  0.558         1.55
23 mu_0       0.5      1.01         1.02   0.670         1.43
24 mu_0       0.6      0.999        0.988  0.698         1.37
25 mu_0       0.7      0.978        0.989  0.663         1.27
26 mu_0       0.8      0.971        0.973  0.700         1.40
27 mu_0       0.9      0.978        0.965  0.313         1.90
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.183     2.00e-14  1.18e-38     13.1 
 2 mu         0.2      1.21      2.08e- 8  4.60e-26     46.6 
 3 mu         0.3      1.11      7.54e- 5  1.00e-18     22.5 
 4 mu         0.4      1.05      1.43e- 2  1.52e-13      9.82
 5 mu         0.5      1.02      2.11e- 1  1.49e- 9      7.39
 6 mu         0.6      1.05      6.50e- 1  2.52e- 6      7.39
 7 mu         0.7      1.31      8.23e- 1  1.10e- 9      8.45
 8 mu         0.8      1.21      7.04e- 1  6.47e-16      5.13
 9 mu         0.9      1.22      1.09e- 2  4.30e-27     16.3 
10 mu_1       0.1      0.361     1.32e-13  1.15e-37     23.8 
11 mu_1       0.2      1.36      6.39e- 8  2.25e-25     51.3 
12 mu_1       0.3      1.07      1.71e- 4  3.26e-18     18.1 
13 mu_1       0.4      1.06      2.30e- 2  3.71e-13     10.1 
14 mu_1       0.5      1.01      2.48e- 1  2.91e- 9      6.45
15 mu_1       0.6      1.07      6.69e- 1  4.10e- 6      8.11
16 mu_1       0.7      1.33      9.28e- 1  3.45e-10      7.95
17 mu_1       0.8      1.21      6.44e- 1  1.78e-16      5.34
18 mu_1       0.9      1.23      8.80e- 3  1.05e-27     17.6 
19 mu_0       0.1      0.163     7.52e-15  3.04e-40     11.9 
20 mu_0       0.2      1.17      9.99e- 9  1.34e-27     45.5 
21 mu_0       0.3      1.13      3.43e- 5  3.33e-20     24.6 
22 mu_0       0.4      1.04      8.03e- 3  5.88e-15      9.75
23 mu_0       0.5      1.03      1.30e- 1  6.92e-11      8.34
24 mu_0       0.6      1.01      6.26e- 1  1.46e- 7      6.84
25 mu_0       0.7      1.27      8.17e- 1  2.86e- 9      9.62
26 mu_0       0.8      1.25      8.87e- 1  2.52e-15      4.64
27 mu_0       0.9      1.15      3.24e- 2  3.36e-26     12.5 
[1] "Total run time was 237.471 seconds"
