
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3415"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 46 
 4  3  5  4  5  1  4  4  1  5  3  2  3  1  1  8  7  4  4  3  2  1  1  6  3  2 
47 48 49 50 
 3  2  6  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02989 0.33191 0.59862 1.00000 7.00000 
[1] "event indicator table: "

   0    1 
2042 1373 
[1] "treatment indicator table: "

   0    1 
1327 2088 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1665
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 40"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1750
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 368.233 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.522 0.128 
 2 mu         0.1   0.2 0.585 0.109 
 3 mu         0.1   0.3 0.650 0.117 
 4 mu         0.1   0.4 0.727 0.116 
 5 mu         0.1   0.5 0.750 0.112 
 6 mu         0.2   0.1 0.442 0.0716
 7 mu         0.2   0.2 0.520 0.0569
 8 mu         0.2   0.3 0.579 0.0599
 9 mu         0.2   0.4 0.645 0.0586
10 mu         0.2   0.5 0.674 0.0554
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.990        0.823  0.000441      8.07
 2 mu         0.2      1.04         1.08   0.0890        1.98
 3 mu         0.3      0.988        0.985  0.372         1.66
 4 mu         0.4      0.979        0.968  0.490         1.46
 5 mu         0.5      1.00         1.01   0.730         1.47
 6 mu         0.6      1.02         1.02   0.735         1.34
 7 mu         0.7      0.990        0.990  0.692         1.27
 8 mu         0.8      0.988        0.969  0.668         1.39
 9 mu         0.9      1.02         1.02   0.377         1.77
10 mu_1       0.1      1.06         0.958  0.00134       6.70
11 mu_1       0.2      1.04         1.08   0.141         1.95
12 mu_1       0.3      0.974        0.971  0.409         1.72
13 mu_1       0.4      0.983        0.986  0.535         1.43
14 mu_1       0.5      1.01         1.01   0.739         1.51
15 mu_1       0.6      1.02         1.02   0.732         1.29
16 mu_1       0.7      0.987        0.988  0.683         1.27
17 mu_1       0.8      0.989        0.973  0.663         1.41
18 mu_1       0.9      1.02         1.00   0.365         1.82
19 mu_0       0.1      0.983        0.804  0.000341      8.22
20 mu_0       0.2      1.05         1.09   0.0758        2.07
21 mu_0       0.3      0.994        0.996  0.356         1.64
22 mu_0       0.4      0.977        0.970  0.460         1.49
23 mu_0       0.5      1.00         0.992  0.666         1.44
24 mu_0       0.6      1.02         1.01   0.738         1.40
25 mu_0       0.7      0.996        0.999  0.712         1.28
26 mu_0       0.8      0.982        0.973  0.676         1.34
27 mu_0       0.9      1.01         1.02   0.399         1.49
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.85      2.20e-11  1.53e-42    107.  
 2 mu         0.2      1.02      2.99e- 6  9.56e-29     35.7 
 3 mu         0.3      0.975     2.11e- 3  1.05e-20     13.7 
 4 mu         0.4      1.36      1.31e- 1  5.05e-15     16.4 
 5 mu         0.5      1.26      5.43e- 1  1.21e-10      9.75
 6 mu         0.6      1.21      5.61e- 1  1.29e- 8      5.73
 7 mu         0.7      1.02      6.80e- 1  5.72e-13      5.15
 8 mu         0.8      1.07      1.27e- 1  2.98e-19      7.95
 9 mu         0.9      1.29      2.99e- 4  3.47e-30     14.7 
10 mu_1       0.1      2.02      1.22e-10  1.50e-41    105.  
11 mu_1       0.2      0.832     9.97e- 6  4.68e-28     24.8 
12 mu_1       0.3      1.06      4.23e- 3  3.44e-20     15.4 
13 mu_1       0.4      1.37      1.04e- 1  1.23e-14     14.8 
14 mu_1       0.5      1.25      4.57e- 1  2.36e-10      8.67
15 mu_1       0.6      1.20      5.25e- 1  2.11e- 9      6.04
16 mu_1       0.7      1.01      6.01e- 1  7.97e-14      4.82
17 mu_1       0.8      1.08      1.01e- 1  3.63e-20      8.28
18 mu_1       0.9      1.30      2.05e- 4  3.76e-31     15.4 
19 mu_0       0.1      1.83      9.32e-12  3.61e-44    108.  
20 mu_0       0.2      1.06      1.25e- 6  2.54e-30     38.4 
21 mu_0       0.3      0.936     1.22e- 3  3.20e-22     14.1 
22 mu_0       0.4      1.35      7.75e- 2  1.79e-16     17.5 
23 mu_0       0.5      1.28      6.42e- 1  5.13e-12     10.8 
24 mu_0       0.6      1.24      4.55e- 1  2.25e- 8      5.28
25 mu_0       0.7      1.04      6.48e- 1  1.72e-12      5.92
26 mu_0       0.8      1.05      1.77e- 1  1.34e-18      6.63
27 mu_0       0.9      1.18      1.15e- 3  3.13e-29     11.0 
[1] "Total run time was 372.271 seconds"
