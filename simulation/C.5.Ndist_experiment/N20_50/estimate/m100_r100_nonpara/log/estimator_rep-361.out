
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3655"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 35 36 37 38 39 40 41 42 43 44 45 46 
 6  2  1  3  1  4  3  3  3  2  3  3  5  3  3  2  1  1  3  7  3  4  3  3  3  7 
47 48 49 50 
 4  3  5  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0465  0.3896  0.6312  1.0000  6.8569 
[1] "event indicator table: "

   0    1 
2181 1474 
[1] "treatment indicator table: "

   0    1 
1347 2308 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1856
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 23"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 84"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1799
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 236.21 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.452 0.111 
 2 mu         0.1   0.2 0.563 0.114 
 3 mu         0.1   0.3 0.574 0.135 
 4 mu         0.1   0.4 0.580 0.145 
 5 mu         0.1   0.5 0.614 0.157 
 6 mu         0.2   0.1 0.355 0.0610
 7 mu         0.2   0.2 0.444 0.0596
 8 mu         0.2   0.3 0.474 0.0678
 9 mu         0.2   0.4 0.485 0.0729
10 mu         0.2   0.5 0.518 0.0799
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.18         0.791  0.000845      9.33
 2 mu         0.2      0.975        0.911  0.137         2.48
 3 mu         0.3      0.969        0.969  0.380         1.58
 4 mu         0.4      1.00         0.986  0.659         1.54
 5 mu         0.5      0.999        1.01   0.691         1.31
 6 mu         0.6      1.00         1.01   0.725         1.24
 7 mu         0.7      1.01         1.03   0.732         1.58
 8 mu         0.8      0.995        1.01   0.731         1.39
 9 mu         0.9      0.969        0.969  0.405         1.39
10 mu_1       0.1      1.13         0.883  0.00238       5.32
11 mu_1       0.2      0.957        0.945  0.180         1.96
12 mu_1       0.3      0.974        0.958  0.449         1.49
13 mu_1       0.4      1.01         0.993  0.652         1.52
14 mu_1       0.5      0.999        0.997  0.674         1.28
15 mu_1       0.6      1.00         1.01   0.724         1.25
16 mu_1       0.7      1.01         1.02   0.736         1.58
17 mu_1       0.8      0.993        1.00   0.721         1.39
18 mu_1       0.9      0.969        0.963  0.385         1.39
19 mu_0       0.1      1.19         0.784  0.000675      9.80
20 mu_0       0.2      0.980        0.924  0.126         2.66
21 mu_0       0.3      0.967        0.955  0.350         1.62
22 mu_0       0.4      1.00         0.984  0.636         1.55
23 mu_0       0.5      0.999        0.995  0.709         1.34
24 mu_0       0.6      0.999        1.02   0.725         1.23
25 mu_0       0.7      1.01         1.03   0.725         1.58
26 mu_0       0.8      1.00         1.01   0.744         1.37
27 mu_0       0.9      0.975        0.961  0.400         1.41
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.419     3.25e-14  1.42e-39     19.3 
 2 mu         0.2      1.58      1.99e- 8  6.22e-26     49.9 
 3 mu         0.3      1.09      5.94e- 5  4.60e-18     13.3 
 4 mu         0.4      1.04      9.33e- 3  1.39e-12      9.45
 5 mu         0.5      1.00      1.49e- 1  1.92e- 8      5.34
 6 mu         0.6      0.826     4.81e- 1  5.96e- 7      3.51
 7 mu         0.7      1.05      5.58e- 1  2.74e-11      4.76
 8 mu         0.8      1.28      6.37e- 1  1.08e-17      6.05
 9 mu         0.9      1.42      2.42e- 3  5.05e-29     19.0 
10 mu_1       0.1      0.768     2.41e-13  1.30e-38     32.8 
11 mu_1       0.2      1.60      7.26e- 8  2.86e-25     42.5 
12 mu_1       0.3      1.01      1.36e- 4  1.41e-17      9.44
13 mu_1       0.4      1.06      1.72e- 2  3.19e-12      9.56
14 mu_1       0.5      0.973     1.84e- 1  3.53e- 8      5.45
15 mu_1       0.6      0.830     4.52e- 1  1.69e- 7      3.68
16 mu_1       0.7      1.08      6.54e- 1  6.67e-12      4.67
17 mu_1       0.8      1.29      5.34e- 1  2.30e-18      6.19
18 mu_1       0.9      1.40      1.78e- 3  9.55e-30     19.4 
19 mu_0       0.1      0.381     9.30e-15  1.26e-40     17.8 
20 mu_0       0.2      1.58      6.72e- 9  6.22e-27     51.8 
21 mu_0       0.3      1.12      2.80e- 5  5.25e-19     15.5 
22 mu_0       0.4      1.02      4.19e- 3  1.85e-13      9.38
23 mu_0       0.5      1.03      9.33e- 2  3.07e- 9      5.56
24 mu_0       0.6      0.820     4.03e- 1  1.24e- 6      3.26
25 mu_0       0.7      0.994     4.04e- 1  7.58e-11      4.95
26 mu_0       0.8      1.23      7.02e- 1  4.49e-17      5.50
27 mu_0       0.9      1.55      8.02e- 3  4.19e-28     15.2 
[1] "Total run time was 241.611 seconds"
