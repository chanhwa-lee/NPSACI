
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3649"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 37 38 39 40 41 42 43 44 46 47 
 5  3  1  3  2  1  3  2  4  4  2  2  6  2  1  1  5  2  5  6  8  2  1  7  4  8 
48 49 50 
 2  2  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03277 0.33553 0.60291 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
2187 1462 
[1] "treatment indicator table: "

   0    1 
1373 2276 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1841
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 66"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1808
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 46"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 264.569 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.426 0.0749
 2 mu         0.1   0.2 0.502 0.0866
 3 mu         0.1   0.3 0.553 0.0989
 4 mu         0.1   0.4 0.623 0.109 
 5 mu         0.1   0.5 0.656 0.118 
 6 mu         0.2   0.1 0.329 0.0373
 7 mu         0.2   0.2 0.404 0.0386
 8 mu         0.2   0.3 0.453 0.0468
 9 mu         0.2   0.4 0.515 0.0481
10 mu         0.2   0.5 0.540 0.0523
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.20         0.404 0.0000262     10.8 
 2 mu         0.2      1.03         0.936 0.0188         5.51
 3 mu         0.3      0.976        0.964 0.199          1.70
 4 mu         0.4      0.985        1.00  0.513          1.57
 5 mu         0.5      0.980        0.995 0.559          1.58
 6 mu         0.6      0.991        0.984 0.706          1.31
 7 mu         0.7      1.00         1.00  0.769          1.31
 8 mu         0.8      1.01         0.986 0.610          1.45
 9 mu         0.9      0.989        0.975 0.337          1.75
10 mu_1       0.1      1.18         0.621 0.0000906     11.2 
11 mu_1       0.2      0.998        0.898 0.0341         4.04
12 mu_1       0.3      0.977        0.983 0.263          1.68
13 mu_1       0.4      0.986        1.01  0.512          1.57
14 mu_1       0.5      0.980        0.993 0.577          1.60
15 mu_1       0.6      0.993        0.988 0.742          1.31
16 mu_1       0.7      1.00         1.00  0.751          1.33
17 mu_1       0.8      1.01         0.988 0.598          1.48
18 mu_1       0.9      0.988        0.964 0.319          1.75
19 mu_0       0.1      1.20         0.379 0.0000190     11.3 
20 mu_0       0.2      1.04         0.922 0.0149         5.88
21 mu_0       0.3      0.975        0.960 0.171          1.72
22 mu_0       0.4      0.984        1.00  0.487          1.57
23 mu_0       0.5      0.981        0.995 0.542          1.57
24 mu_0       0.6      0.989        0.978 0.644          1.40
25 mu_0       0.7      1.00         1.00  0.727          1.30
26 mu_0       0.8      1.01         1.01  0.659          1.37
27 mu_0       0.9      0.999        0.992 0.408          1.78
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.0756     3.36e-13  1.30e-36      5.00
 2 mu         0.2     0.651      5.26e- 7  1.13e-23     33.2 
 3 mu         0.3     0.853      5.71e- 4  6.43e-17     16.8 
 4 mu         0.4     1.11       3.76e- 2  3.08e-12     11.9 
 5 mu         0.5     1.34       4.05e- 1  1.24e- 8     11.9 
 6 mu         0.6     1.35       8.98e- 1  1.01e- 5     15.4 
 7 mu         0.7     1.23       8.73e- 1  4.66e- 8      9.23
 8 mu         0.8     1.10       2.43e- 1  2.02e-13     11.1 
 9 mu         0.9     1.88       6.50e- 4  1.53e-23     65.3 
10 mu_1       0.1     0.163      2.07e-12  1.14e-35     10.3 
11 mu_1       0.2     0.749      1.81e- 6  4.96e-23     34.1 
12 mu_1       0.3     0.869      1.31e- 3  2.09e-16     13.1 
13 mu_1       0.4     1.18       6.08e- 2  7.50e-12     13.3 
14 mu_1       0.5     1.36       4.14e- 1  2.41e- 8     13.5 
15 mu_1       0.6     1.35       8.32e- 1  1.64e- 5     14.5 
16 mu_1       0.7     1.22       8.66e- 1  1.37e- 8      9.01
17 mu_1       0.8     1.11       1.89e- 1  7.08e-14     12.0 
18 mu_1       0.9     1.95       4.69e- 4  4.76e-24     69.8 
19 mu_0       0.1     0.0659     1.44e-13  0             4.41
20 mu_0       0.2     0.627      2.15e- 7  0            33.0 
21 mu_0       0.3     0.847      2.54e- 4  0            18.4 
22 mu_0       0.4     1.07       2.21e- 2  0            10.9 
23 mu_0       0.5     1.32       3.42e- 1  0            12.9 
24 mu_0       0.6     1.35       6.62e- 1  0            16.6 
25 mu_0       0.7     1.28       6.16e- 1  0             9.76
26 mu_0       0.8     1.07       3.42e- 1  0             7.48
27 mu_0       0.9     1.28       2.17e- 3  0            25.1 
[1] "Total run time was 268.626 seconds"
