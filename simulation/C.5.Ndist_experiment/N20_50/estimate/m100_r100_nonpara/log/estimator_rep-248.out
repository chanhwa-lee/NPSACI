
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3632"
[1] "cluster size dist'n: "

20 22 23 24 25 26 27 28 29 30 31 32 34 35 36 37 38 39 40 42 43 44 45 46 47 48 
 1  3  2  2  2  5  3  4  1  5  6  2  3  5  4  2  6  5  7  6  4  3  4  3  6  1 
49 50 
 2  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.05339 0.38370 0.64542 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
2173 1459 
[1] "treatment indicator table: "

   0    1 
1206 2426 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1792
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1840
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 244.692 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.513 0.133 
 2 mu         0.1   0.2 0.623 0.159 
 3 mu         0.1   0.3 0.714 0.183 
 4 mu         0.1   0.4 0.746 0.190 
 5 mu         0.1   0.5 0.848 0.216 
 6 mu         0.2   0.1 0.403 0.0752
 7 mu         0.2   0.2 0.478 0.0804
 8 mu         0.2   0.3 0.548 0.0917
 9 mu         0.2   0.4 0.573 0.0862
10 mu         0.2   0.5 0.645 0.0937
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1      1.25        0.0459 0.00000000353     16.1 
 2 mu         0.2      1.07        0.614  0.000115           9.60
 3 mu         0.3      1.02        1.00   0.0144             2.39
 4 mu         0.4      1.01        1.03   0.170              1.91
 5 mu         0.5      0.994       1.02   0.474              1.39
 6 mu         0.6      0.990       0.977  0.732              1.36
 7 mu         0.7      1.00        0.990  0.813              1.39
 8 mu         0.8      0.993       0.998  0.711              1.41
 9 mu         0.9      1.01        0.987  0.402              2.36
10 mu_1       0.1      1.34        0.114  0.0000000150      19.2 
11 mu_1       0.2      1.03        0.818  0.000252           5.78
12 mu_1       0.3      1.01        1.00   0.0221             2.24
13 mu_1       0.4      1.01        1.03   0.209              1.81
14 mu_1       0.5      0.992       1.01   0.524              1.39
15 mu_1       0.6      0.991       0.980  0.732              1.34
16 mu_1       0.7      1.00        0.991  0.795              1.41
17 mu_1       0.8      0.993       0.995  0.699              1.44
18 mu_1       0.9      1.01        0.987  0.384              2.46
19 mu_0       0.1      1.24        0.0384 0.00000000226     16.1 
20 mu_0       0.2      1.08        0.583  0.0000810         10.6 
21 mu_0       0.3      1.02        0.994  0.0111             2.56
22 mu_0       0.4      1.01        1.02   0.145              1.98
23 mu_0       0.5      0.997       1.02   0.423              1.43
24 mu_0       0.6      0.988       0.974  0.685              1.41
25 mu_0       0.7      0.998       0.992  0.790              1.35
26 mu_0       0.8      0.996       0.983  0.720              1.37
27 mu_0       0.9      0.999       1.01   0.560              1.85
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.09      3.56e-15  3.30e-38    109.  
 2 mu         0.2      1.11      1.65e- 8  1.15e-25    103.  
 3 mu         0.3      0.870     4.91e- 5  2.19e-18     21.2 
 4 mu         0.4      1.69      6.89e- 3  2.84e-13     27.4 
 5 mu         0.5      1.76      1.93e- 1  2.32e- 9     21.0 
 6 mu         0.6      1.35      7.03e- 1  3.14e- 6      8.34
 7 mu         0.7      1.18      7.00e- 1  9.27e- 7      7.27
 8 mu         0.8      1.24      3.44e- 1  9.39e-11      7.57
 9 mu         0.9      2.21      1.23e- 3  8.97e-18     54.4 
10 mu_1       0.1      1.56      2.81e-14  3.15e-37    156.  
11 mu_1       0.2      0.870     5.14e- 8  5.48e-25     73.8 
12 mu_1       0.3      0.956     1.12e- 4  6.95e-18     16.1 
13 mu_1       0.4      1.78      1.14e- 2  6.77e-13     28.7 
14 mu_1       0.5      1.71      2.55e- 1  4.42e- 9     20.5 
15 mu_1       0.6      1.32      7.64e- 1  4.99e- 6      8.27
16 mu_1       0.7      1.17      7.51e- 1  1.89e- 7      7.72
17 mu_1       0.8      1.26      2.77e- 1  1.68e-11      8.19
18 mu_1       0.9      2.30      9.41e- 4  1.42e-18     60.5 
19 mu_0       0.1      1.04      1.26e-15  0           104.  
20 mu_0       0.2      1.17      6.67e- 9  0           111.  
21 mu_0       0.3      0.833     2.24e- 5  0            26.0 
22 mu_0       0.4      1.62      3.93e- 3  0            26.5 
23 mu_0       0.5      1.81      1.28e- 1  0            21.7 
24 mu_0       0.6      1.40      6.74e- 1  0             8.44
25 mu_0       0.7      1.19      7.62e- 1  0             7.29
26 mu_0       0.8      1.17      2.81e- 1  0             7.77
27 mu_0       0.9      1.45      3.78e- 3  0            16.5 
[1] "Total run time was 248.529 seconds"
