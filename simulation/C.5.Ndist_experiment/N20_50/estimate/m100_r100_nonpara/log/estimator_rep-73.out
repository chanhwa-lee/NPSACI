
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3525"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 1  2  3  1  2  1  5  3  4  4  6  3  5  4  2  7  5  7  2  1  3  7  3  1  1  3 
46 47 48 49 50 
 3  2  2  3  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.01712 0.29766 0.57931 0.98909 6.00000 
[1] "event indicator table: "

   0    1 
2090 1435 
[1] "treatment indicator table: "

   0    1 
1347 2178 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1731
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1794
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 245.623 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.460 0.130 
 2 mu         0.1   0.2 0.501 0.104 
 3 mu         0.1   0.3 0.533 0.0793
 4 mu         0.1   0.4 0.579 0.0804
 5 mu         0.1   0.5 0.604 0.0911
 6 mu         0.2   0.1 0.376 0.0588
 7 mu         0.2   0.2 0.436 0.0487
 8 mu         0.2   0.3 0.492 0.0380
 9 mu         0.2   0.4 0.532 0.0381
10 mu         0.2   0.5 0.566 0.0443
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.988        0.795   0.00644      3.99
 2 mu         0.2      0.973        0.935   0.266        2.16
 3 mu         0.3      1.02         1.03    0.319        1.70
 4 mu         0.4      1.02         1.02    0.682        1.58
 5 mu         0.5      1.03         1.03    0.699        1.39
 6 mu         0.6      1.01         0.990   0.763        1.27
 7 mu         0.7      0.976        0.969   0.701        1.30
 8 mu         0.8      0.985        0.980   0.642        1.41
 9 mu         0.9      1.01         0.972   0.390        1.59
10 mu_1       0.1      0.965        0.904   0.0151       4.02
11 mu_1       0.2      0.987        0.959   0.212        2.01
12 mu_1       0.3      1.03         1.01    0.386        1.68
13 mu_1       0.4      1.02         1.03    0.687        1.54
14 mu_1       0.5      1.03         1.02    0.719        1.39
15 mu_1       0.6      1.00         0.975   0.757        1.26
16 mu_1       0.7      0.975        0.966   0.706        1.32
17 mu_1       0.8      0.987        0.994   0.640        1.43
18 mu_1       0.9      1.01         0.968   0.391        1.60
19 mu_0       0.1      0.991        0.774   0.00549      4.24
20 mu_0       0.2      0.969        0.932   0.279        2.20
21 mu_0       0.3      1.02         1.03    0.290        1.73
22 mu_0       0.4      1.02         1.02    0.675        1.60
23 mu_0       0.5      1.03         1.04    0.678        1.41
24 mu_0       0.6      1.01         1.00    0.771        1.29
25 mu_0       0.7      0.979        0.977   0.689        1.29
26 mu_0       0.8      0.977        0.977   0.650        1.39
27 mu_0       0.9      1.01         0.984   0.382        1.54
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.322     6.12e-13  9.77e-41     17.3 
 2 mu         0.2      1.24      6.81e- 7  2.72e-27     26.8 
 3 mu         0.3      1.08      1.01e- 3  1.75e-19     11.5 
 4 mu         0.4      0.871     6.90e- 2  5.38e-14      6.66
 5 mu         0.5      1.03      2.49e- 1  8.57e-10      5.77
 6 mu         0.6      1.10      7.29e- 1  2.01e- 6      5.02
 7 mu         0.7      1.08      7.01e- 1  2.64e- 9      4.51
 8 mu         0.8      0.966     2.08e- 1  7.61e-15      5.93
 9 mu         0.9      0.987     9.31e- 4  2.27e-25     10.5 
10 mu_1       0.1      0.571     3.83e-12  9.36e-40     26.6 
11 mu_1       0.2      1.33      2.13e- 6  1.30e-26     26.8 
12 mu_1       0.3      0.988     2.12e- 3  5.58e-19      9.56
13 mu_1       0.4      0.879     1.12e- 1  1.29e-13      6.51
14 mu_1       0.5      1.05      3.03e- 1  1.64e- 9      5.86
15 mu_1       0.6      1.11      8.07e- 1  3.20e- 6      4.74
16 mu_1       0.7      1.07      7.17e- 1  7.35e-10      4.65
17 mu_1       0.8      0.962     2.02e- 1  2.33e-15      6.18
18 mu_1       0.9      0.991     6.44e- 4  6.19e-26     11.2 
19 mu_0       0.1      0.294     2.54e-13  0            16.3 
20 mu_0       0.2      1.22      3.19e- 7  0            26.8 
21 mu_0       0.3      1.12      5.44e- 4  0            12.3 
22 mu_0       0.4      0.865     4.04e- 2  0             6.75
23 mu_0       0.5      1.01      2.34e- 1  0             5.77
24 mu_0       0.6      1.09      6.99e- 1  0             5.42
25 mu_0       0.7      1.10      5.20e- 1  0             4.17
26 mu_0       0.8      0.984     2.82e- 1  0             5.45
27 mu_0       0.9      0.955     2.17e- 3  0             8.62
[1] "Total run time was 250.156 seconds"
