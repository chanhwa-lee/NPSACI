
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3514"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 3  5  4  4  4  2  1  3  2  1  3  3  5  1  7  3  2  4  3  4  6  2  1  2  2  4 
46 47 48 49 50 
 6  4  4  2  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02828 0.32454 0.59951 1.00000 5.95040 
[1] "event indicator table: "

   0    1 
2054 1460 
[1] "treatment indicator table: "

   0    1 
1353 2161 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1843
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 24"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1671
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 51"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 223.113 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.565 0.144 
 2 mu         0.1   0.2 0.663 0.149 
 3 mu         0.1   0.3 0.734 0.163 
 4 mu         0.1   0.4 0.742 0.156 
 5 mu         0.1   0.5 0.754 0.156 
 6 mu         0.2   0.1 0.489 0.0849
 7 mu         0.2   0.2 0.578 0.0802
 8 mu         0.2   0.3 0.643 0.0850
 9 mu         0.2   0.4 0.653 0.0665
10 mu         0.2   0.5 0.667 0.0591
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.13         0.610 0.0000594     23.9 
 2 mu         0.2      1.02         0.846 0.0524         5.53
 3 mu         0.3      0.992        0.951 0.322          2.06
 4 mu         0.4      0.988        0.987 0.520          1.71
 5 mu         0.5      0.989        0.994 0.522          1.49
 6 mu         0.6      1.00         0.995 0.630          1.54
 7 mu         0.7      0.995        0.988 0.733          1.30
 8 mu         0.8      0.976        0.975 0.544          1.53
 9 mu         0.9      0.987        0.965 0.254          2.59
10 mu_1       0.1      1.18         0.701 0.000190      19.7 
11 mu_1       0.2      0.997        0.921 0.0862         3.92
12 mu_1       0.3      0.997        0.960 0.432          2.05
13 mu_1       0.4      0.989        0.986 0.555          1.71
14 mu_1       0.5      0.992        0.989 0.497          1.47
15 mu_1       0.6      1.00         0.993 0.637          1.54
16 mu_1       0.7      0.993        0.983 0.743          1.29
17 mu_1       0.8      0.975        0.980 0.541          1.55
18 mu_1       0.9      0.989        0.965 0.241          2.75
19 mu_0       0.1      1.12         0.610 0.0000449     24.3 
20 mu_0       0.2      1.03         0.827 0.0439         5.93
21 mu_0       0.3      0.990        0.948 0.274          2.11
22 mu_0       0.4      0.988        0.968 0.496          1.71
23 mu_0       0.5      0.987        0.988 0.548          1.51
24 mu_0       0.6      0.999        1.00  0.586          1.55
25 mu_0       0.7      1.00         0.999 0.706          1.32
26 mu_0       0.8      0.979        0.971 0.557          1.51
27 mu_0       0.9      0.967        0.949 0.363          1.79
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       2.65     1.66e-11  4.35e-39     261. 
 2 mu         0.2       1.95     6.10e- 6  6.05e-26     122. 
 3 mu         0.3       1.37     4.42e- 3  2.59e-18      34.1
 4 mu         0.4       1.39     2.17e- 1  5.98e-13      13.9
 5 mu         0.5       1.78     8.29e- 1  7.63e- 9      18.0
 6 mu         0.6       1.80     5.32e- 1  9.20e- 6      25.4
 7 mu         0.7       1.23     5.83e- 1  3.04e- 9      10.6
 8 mu         0.8       1.32     9.65e- 2  2.64e-14      13.9
 9 mu         0.9       3.53     9.98e- 5  4.99e-24      91.1
10 mu_1       0.1       3.16     9.27e-11  4.16e-38     307. 
11 mu_1       0.2       1.67     1.70e- 5  2.89e-25      71.8
12 mu_1       0.3       1.35     8.77e- 3  8.26e-18      28.4
13 mu_1       0.4       1.42     2.67e- 1  1.43e-12      15.3
14 mu_1       0.5       1.82     7.62e- 1  1.46e- 8      17.0
15 mu_1       0.6       1.74     5.77e- 1  1.80e- 6      25.2
16 mu_1       0.7       1.21     5.21e- 1  5.12e-10      11.1
17 mu_1       0.8       1.36     7.06e- 2  3.98e-15      13.6
18 mu_1       0.9       3.66     6.09e- 5  1.26e-24     101. 
19 mu_0       0.1       2.59     8.12e-12  0            256. 
20 mu_0       0.2       2.02     2.67e- 6  0            135. 
21 mu_0       0.3       1.38     2.56e- 3  0             36.6
22 mu_0       0.4       1.36     1.54e- 1  0             15.3
23 mu_0       0.5       1.74     7.59e- 1  0             19.0
24 mu_0       0.6       1.88     5.82e- 1  0             25.7
25 mu_0       0.7       1.29     5.91e- 1  0             12.2
26 mu_0       0.8       1.17     1.63e- 1  0             15.0
27 mu_0       0.9       2.37     3.61e- 4  0             36.1
[1] "Total run time was 226.907 seconds"
