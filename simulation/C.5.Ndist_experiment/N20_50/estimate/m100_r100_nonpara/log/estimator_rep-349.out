
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3444"
[1] "cluster size dist'n: "

20 21 22 23 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 
 2  1  7  3  6  6  1  1  3  4  6  3  7  2  5  4  1  1  5  3  5  2  2  6  4  3 
48 49 50 
 1  3  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02684 0.34094 0.61155 1.00000 7.00000 
[1] "event indicator table: "

   0    1 
2049 1395 
[1] "treatment indicator table: "

   0    1 
1251 2193 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1732
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 29"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 44"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1712
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 374.613 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.547 0.102 
 2 mu         0.1   0.2 0.645 0.105 
 3 mu         0.1   0.3 0.681 0.106 
 4 mu         0.1   0.4 0.778 0.118 
 5 mu         0.1   0.5 0.789 0.116 
 6 mu         0.2   0.1 0.439 0.0731
 7 mu         0.2   0.2 0.540 0.0822
 8 mu         0.2   0.3 0.586 0.0853
 9 mu         0.2   0.4 0.668 0.0825
10 mu         0.2   0.5 0.682 0.0823
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      1.10         0.593 0.000000348     13.7 
 2 mu         0.2      1.03         0.990 0.00160          4.27
 3 mu         0.3      1.00         1.00  0.0758           1.68
 4 mu         0.4      0.982        0.975 0.470            1.58
 5 mu         0.5      1.00         0.983 0.761            1.52
 6 mu         0.6      0.990        0.980 0.754            1.27
 7 mu         0.7      0.977        0.959 0.613            1.53
 8 mu         0.8      0.992        0.981 0.689            1.39
 9 mu         0.9      1.01         0.984 0.531            1.87
10 mu_1       0.1      1.07         0.721 0.00000153       9.62
11 mu_1       0.2      1.03         0.992 0.00357          3.73
12 mu_1       0.3      0.995        1.01  0.116            1.74
13 mu_1       0.4      0.985        0.985 0.562            1.53
14 mu_1       0.5      1.00         0.984 0.768            1.49
15 mu_1       0.6      0.987        0.980 0.741            1.28
16 mu_1       0.7      0.977        0.956 0.619            1.54
17 mu_1       0.8      0.993        0.981 0.684            1.38
18 mu_1       0.9      1.01         0.989 0.514            1.89
19 mu_0       0.1      1.10         0.576 0.000000217     14.2 
20 mu_0       0.2      1.03         0.974 0.00110          4.41
21 mu_0       0.3      1.00         1.01  0.0586           1.67
22 mu_0       0.4      0.980        0.963 0.409            1.61
23 mu_0       0.5      1.00         0.981 0.745            1.56
24 mu_0       0.6      0.995        0.974 0.745            1.28
25 mu_0       0.7      0.976        0.958 0.601            1.52
26 mu_0       0.8      0.987        0.980 0.711            1.43
27 mu_0       0.9      1.00         0.962 0.675            1.76
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      2.65      1.25e-14  4.29e-40    145.  
 2 mu         0.2      3.77      3.50e- 8  5.96e-27    238.  
 3 mu         0.3      1.63      1.17e- 4  2.56e-19     29.1 
 4 mu         0.4      1.12      1.11e- 2  5.90e-14     10.9 
 5 mu         0.5      1.05      8.52e- 2  7.53e-10     12.4 
 6 mu         0.6      0.920     2.20e- 1  1.47e- 6      5.99
 7 mu         0.7      1.12      5.43e- 1  2.66e-10      5.34
 8 mu         0.8      1.45      8.18e- 1  2.07e-16      9.22
 9 mu         0.9      1.23      1.29e- 2  3.43e-27     11.8 
10 mu_1       0.1      3.55      8.63e-14  4.10e-39    231.  
11 mu_1       0.2      3.25      1.14e- 7  2.85e-26    190.  
12 mu_1       0.3      1.42      2.74e- 4  8.15e-19     16.1 
13 mu_1       0.4      1.11      2.07e- 2  1.41e-13     12.4 
14 mu_1       0.5      1.03      1.02e- 1  1.44e- 9     11.3 
15 mu_1       0.6      0.919     2.33e- 1  1.01e- 6      5.67
16 mu_1       0.7      1.14      4.90e- 1  6.05e-11      5.40
17 mu_1       0.8      1.46      7.36e- 1  4.11e-17      9.46
18 mu_1       0.9      1.20      9.55e- 3  6.07e-28     11.9 
19 mu_0       0.1      2.55      4.30e-15  2.07e-41    136.  
20 mu_0       0.2      3.90      1.53e- 8  3.24e-28    251.  
21 mu_0       0.3      1.72      4.97e- 5  1.59e-20     35.0 
22 mu_0       0.4      1.13      4.70e- 3  4.28e-15     10.6 
23 mu_0       0.5      1.07      7.40e- 2  6.54e-11     13.5 
24 mu_0       0.6      0.921     1.93e- 1  1.60e- 7      6.47
25 mu_0       0.7      1.05      5.22e- 1  7.46e-10      5.21
26 mu_0       0.8      1.40      9.48e- 1  8.70e-16      8.28
27 mu_0       0.9      1.42      4.10e- 2  2.89e-26     11.0 
[1] "Total run time was 379.342 seconds"
