
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3444"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 3  2  4  4  4  4  3  6  3  2  3  3  4  5  5  4  1  2  2  2  1  5  4  4  4  1 
46 48 49 50 
 2  5  4  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03908 0.36287 0.61743 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
2019 1425 
[1] "treatment indicator table: "

   0    1 
1227 2217 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1658
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1786
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 28"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 52"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 358.63 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.469 0.0686
 2 mu         0.1   0.2 0.571 0.0811
 3 mu         0.1   0.3 0.723 0.136 
 4 mu         0.1   0.4 0.801 0.155 
 5 mu         0.1   0.5 0.825 0.143 
 6 mu         0.2   0.1 0.344 0.0347
 7 mu         0.2   0.2 0.427 0.0415
 8 mu         0.2   0.3 0.529 0.0675
 9 mu         0.2   0.4 0.591 0.0767
10 mu         0.2   0.5 0.609 0.0679
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.35         0.784  0.000215      9.27
 2 mu         0.2      1.08         0.983  0.0285        3.77
 3 mu         0.3      1.01         1.02   0.201         2.12
 4 mu         0.4      1.01         1.01   0.490         1.74
 5 mu         0.5      0.983        0.944  0.608         1.49
 6 mu         0.6      0.975        0.958  0.629         1.36
 7 mu         0.7      0.998        0.988  0.704         1.25
 8 mu         0.8      1.02         1.04   0.730         1.37
 9 mu         0.9      0.988        0.958  0.609         1.63
10 mu_1       0.1      1.30         1.05   0.000770      6.89
11 mu_1       0.2      1.04         0.978  0.0521        3.21
12 mu_1       0.3      1.00         1.00   0.264         1.93
13 mu_1       0.4      1.00         1.00   0.554         1.76
14 mu_1       0.5      0.980        0.951  0.610         1.49
15 mu_1       0.6      0.977        0.969  0.643         1.36
16 mu_1       0.7      1.00         0.992  0.719         1.26
17 mu_1       0.8      1.02         1.03   0.731         1.36
18 mu_1       0.9      0.986        0.951  0.592         1.63
19 mu_0       0.1      1.36         0.763  0.000153      9.57
20 mu_0       0.2      1.09         0.992  0.0226        3.91
21 mu_0       0.3      1.01         1.02   0.173         2.21
22 mu_0       0.4      1.01         1.02   0.447         1.72
23 mu_0       0.5      0.987        0.949  0.606         1.52
24 mu_0       0.6      0.972        0.966  0.607         1.37
25 mu_0       0.7      0.991        0.986  0.668         1.27
26 mu_0       0.8      1.02         1.02   0.713         1.37
27 mu_0       0.9      1.00         0.984  0.580         1.64
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.393     2.17e-13  1.35e-48     37.6 
 2 mu         0.2      0.860     3.29e- 7  1.52e-33     40.7 
 3 mu         0.3      1.41      3.27e- 4  9.68e-25     21.2 
 4 mu         0.4      1.46      2.56e- 2  1.71e-18     14.8 
 5 mu         0.5      1.13      2.37e- 1  1.20e-13      7.78
 6 mu         0.6      0.977     4.13e- 1  1.09e- 9      5.49
 7 mu         0.7      1.05      5.66e- 1  2.03e- 8      5.06
 8 mu         0.8      1.17      4.30e- 1  7.93e-14      7.26
 9 mu         0.9      0.940     3.75e- 3  1.50e-23     10.2 
10 mu_1       0.1      0.606     1.28e-12  1.35e-47     56.5 
11 mu_1       0.2      0.942     1.02e- 6  7.59e-33     30.5 
12 mu_1       0.3      1.49      7.47e- 4  3.23e-24     22.4 
13 mu_1       0.4      1.41      4.54e- 2  4.27e-18     12.9 
14 mu_1       0.5      1.09      3.30e- 1  2.39e-13      7.33
15 mu_1       0.6      0.965     4.06e- 1  1.82e- 9      5.44
16 mu_1       0.7      1.06      5.37e- 1  6.58e- 9      4.76
17 mu_1       0.8      1.16      4.05e- 1  2.25e-14      7.04
18 mu_1       0.9      0.935     2.85e- 3  3.79e-24     10.5 
19 mu_0       0.1      0.369     9.98e-14  0            35.6 
20 mu_0       0.2      0.840     1.21e- 7  0            43.2 
21 mu_0       0.3      1.37      1.47e- 4  0            20.7 
22 mu_0       0.4      1.50      1.30e- 2  0            16.1 
23 mu_0       0.5      1.17      1.90e- 1  0             8.24
24 mu_0       0.6      0.995     3.99e- 1  0             6.03
25 mu_0       0.7      1.01      4.92e- 1  0             5.76
26 mu_0       0.8      1.17      3.32e- 1  0             8.15
27 mu_0       0.9      0.992     5.14e- 3  0             7.47
[1] "Total run time was 362.393 seconds"
