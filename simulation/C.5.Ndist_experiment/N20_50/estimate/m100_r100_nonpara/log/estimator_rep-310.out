
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3450"
[1] "cluster size dist'n: "

20 21 22 23 24 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 
 2  4  3  2  2  2  2  7  5  8  3  3  3  6  5  4  4  4  3  3  2  5  2  3  1  2 
47 48 49 50 
 3  2  3  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03081 0.33114 0.59825 1.00000 5.00000 
[1] "event indicator table: "

   0    1 
2062 1388 
[1] "treatment indicator table: "

   0    1 
1265 2185 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1726
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 31"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 46"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1724
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 215.524 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.393 0.0850
 2 mu         0.1   0.2 0.525 0.136 
 3 mu         0.1   0.3 0.573 0.122 
 4 mu         0.1   0.4 0.647 0.107 
 5 mu         0.1   0.5 0.644 0.0969
 6 mu         0.2   0.1 0.362 0.0445
 7 mu         0.2   0.2 0.456 0.0643
 8 mu         0.2   0.3 0.520 0.0669
 9 mu         0.2   0.4 0.569 0.0628
10 mu         0.2   0.5 0.584 0.0562
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.948        0.651  0.000157      6.37
 2 mu         0.2      0.977        0.948  0.0579        3.76
 3 mu         0.3      0.976        0.957  0.348         2.05
 4 mu         0.4      0.976        0.951  0.640         1.44
 5 mu         0.5      1.01         0.997  0.691         1.38
 6 mu         0.6      0.997        0.980  0.719         1.33
 7 mu         0.7      1.00         1.00   0.679         1.30
 8 mu         0.8      1.03         1.06   0.648         1.78
 9 mu         0.9      1.00         0.988  0.333         1.96
10 mu_1       0.1      0.919        0.838  0.000560      3.34
11 mu_1       0.2      0.988        0.953  0.105         3.50
12 mu_1       0.3      0.970        0.960  0.438         1.69
13 mu_1       0.4      0.982        0.960  0.650         1.42
14 mu_1       0.5      1.01         1.00   0.715         1.40
15 mu_1       0.6      0.995        0.981  0.719         1.30
16 mu_1       0.7      1.01         1.00   0.688         1.31
17 mu_1       0.8      1.03         1.05   0.655         1.80
18 mu_1       0.9      1.00         0.992  0.336         1.99
19 mu_0       0.1      0.951        0.621  0.000112      6.70
20 mu_0       0.2      0.974        0.972  0.0460        3.83
21 mu_0       0.3      0.978        0.951  0.310         2.20
22 mu_0       0.4      0.973        0.949  0.633         1.45
23 mu_0       0.5      1.01         1.00   0.667         1.35
24 mu_0       0.6      0.999        0.982  0.720         1.37
25 mu_0       0.7      0.997        0.997  0.656         1.30
26 mu_0       0.8      1.03         1.03   0.618         1.71
27 mu_0       0.9      1.02         0.995  0.307         1.68
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.0906     7.17e-13  4.58e-36      7.64
 2 mu         0.2     0.666      2.76e- 7  7.07e-24     18.6 
 3 mu         0.3     1.28       5.52e- 4  7.86e-17     21.9 
 4 mu         0.4     1.21       5.84e- 2  6.56e-12     14.4 
 5 mu         0.5     1.10       3.67e- 1  3.57e- 8     12.8 
 6 mu         0.6     1.08       6.14e- 1  3.23e- 5      8.42
 7 mu         0.7     1.18       5.53e- 1  4.47e- 7      5.87
 8 mu         0.8     1.15       3.40e- 1  5.15e-12      5.61
 9 mu         0.9     1.31       8.64e- 4  4.93e-21     15.8 
10 mu_1       0.1     0.193      4.51e-12  4.27e-35     15.3 
11 mu_1       0.2     0.877      9.47e- 7  3.30e-23     18.6 
12 mu_1       0.3     1.30       1.17e- 3  2.44e-16     22.2 
13 mu_1       0.4     1.18       9.37e- 2  1.53e-11     15.9 
14 mu_1       0.5     1.08       3.12e- 1  6.66e- 8     11.3 
15 mu_1       0.6     1.09       6.54e- 1  5.01e- 5      8.81
16 mu_1       0.7     1.19       6.04e- 1  1.74e- 7      5.79
17 mu_1       0.8     1.15       2.67e- 1  1.76e-12      5.84
18 mu_1       0.9     1.31       6.11e- 4  1.49e-21     16.7 
19 mu_0       0.1     0.0791     2.77e-13  3.47e-37      6.79
20 mu_0       0.2     0.613      1.16e- 7  6.03e-25     18.6 
21 mu_0       0.3     1.27       2.89e- 4  7.66e-18     21.8 
22 mu_0       0.4     1.23       3.49e- 2  7.46e-13     16.2 
23 mu_0       0.5     1.12       3.42e- 1  4.87e- 9     14.3 
24 mu_0       0.6     1.06       5.69e- 1  5.50e- 6      7.83
25 mu_0       0.7     1.17       5.28e- 1  1.08e- 6      6.72
26 mu_0       0.8     1.14       4.13e- 1  1.87e-11      5.01
27 mu_0       0.9     1.32       3.14e- 3  3.58e-20     13.2 
[1] "Total run time was 218.868 seconds"
