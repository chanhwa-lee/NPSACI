
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3633"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 41 42 43 44 45 46 
 1  3  5  1  2  4  4  3  5  2  2  3  2  4  2  2  2  5  6  3  3  4  1  8  2  3 
47 48 49 50 
 1  4  6  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0225  0.3200  0.5784  0.9967  6.0000 
[1] "event indicator table: "

   0    1 
2149 1484 
[1] "treatment indicator table: "

   0    1 
1430 2203 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1818
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1815
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 227.992 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.461 0.0738
 2 mu         0.1   0.2 0.564 0.0897
 3 mu         0.1   0.3 0.639 0.133 
 4 mu         0.1   0.4 0.722 0.127 
 5 mu         0.1   0.5 0.729 0.125 
 6 mu         0.2   0.1 0.433 0.0470
 7 mu         0.2   0.2 0.519 0.0565
 8 mu         0.2   0.3 0.593 0.0808
 9 mu         0.2   0.4 0.666 0.0755
10 mu         0.2   0.5 0.691 0.0741
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.05         0.843   0.00476      4.50
 2 mu         0.2      1.08         1.04    0.150        2.74
 3 mu         0.3      1.03         0.990   0.546        1.89
 4 mu         0.4      0.990        0.971   0.527        1.41
 5 mu         0.5      0.975        0.973   0.623        1.27
 6 mu         0.6      0.988        0.980   0.734        1.40
 7 mu         0.7      1.01         0.989   0.794        1.44
 8 mu         0.8      1.00         1.01    0.591        1.43
 9 mu         0.9      0.982        0.976   0.458        1.64
10 mu_1       0.1      1.09         0.991   0.0118       3.38
11 mu_1       0.2      1.07         1.04    0.211        2.46
12 mu_1       0.3      1.01         0.991   0.600        1.78
13 mu_1       0.4      0.986        0.973   0.503        1.42
14 mu_1       0.5      0.975        0.976   0.639        1.26
15 mu_1       0.6      0.991        0.984   0.722        1.40
16 mu_1       0.7      1.01         0.984   0.772        1.47
17 mu_1       0.8      1.00         1.02    0.564        1.43
18 mu_1       0.9      0.981        0.965   0.451        1.66
19 mu_0       0.1      1.05         0.811   0.00397      4.67
20 mu_0       0.2      1.08         1.05    0.135        2.81
21 mu_0       0.3      1.03         1.00    0.505        1.94
22 mu_0       0.4      0.993        0.973   0.542        1.40
23 mu_0       0.5      0.976        0.975   0.588        1.30
24 mu_0       0.6      0.984        0.978   0.751        1.41
25 mu_0       0.7      1.01         0.996   0.763        1.40
26 mu_0       0.8      1.01         0.999   0.700        1.41
27 mu_0       0.9      0.986        1.00    0.344        1.55
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.0791     1.44e-11  2.55e-42      3.35
 2 mu         0.2     0.439      6.63e- 6  2.84e-28      7.24
 3 mu         0.3     1.00       3.67e- 3  4.11e-20     18.8 
 4 mu         0.4     1.22       1.23e- 1  2.25e-14     13.8 
 5 mu         0.5     1.16       6.92e- 1  5.60e-10      7.16
 6 mu         0.6     1.22       6.85e- 1  1.24e- 6      7.49
 7 mu         0.7     1.15       4.71e- 1  5.55e- 9      8.35
 8 mu         0.8     0.908      8.04e- 2  9.67e-14      6.11
 9 mu         0.9     1.28       8.15e- 5  3.65e-22     22.3 
10 mu_1       0.1     0.154      7.65e-11  2.45e-41      6.38
11 mu_1       0.2     0.555      2.08e- 5  1.36e-27      7.95
12 mu_1       0.3     1.07       7.17e- 3  1.31e-19     20.5 
13 mu_1       0.4     1.22       1.88e- 1  5.39e-14     13.7 
14 mu_1       0.5     1.16       8.40e- 1  1.07e- 9      6.83
15 mu_1       0.6     1.23       6.51e- 1  2.07e- 6      7.84
16 mu_1       0.7     1.13       3.93e- 1  1.36e- 9      7.88
17 mu_1       0.8     0.909      6.92e- 2  2.07e-14      6.43
18 mu_1       0.9     1.31       5.71e- 5  6.96e-23     23.7 
19 mu_0       0.1     0.0708     7.80e-12  0             3.01
20 mu_0       0.2     0.410      3.10e- 6  0             7.32
21 mu_0       0.3     0.971      2.18e- 3  0            18.1 
22 mu_0       0.4     1.22       1.02e- 1  0            13.9 
23 mu_0       0.5     1.15       5.45e- 1  0             7.48
24 mu_0       0.6     1.21       7.18e- 1  0             6.97
25 mu_0       0.7     1.19       5.78e- 1  0             9.47
26 mu_0       0.8     0.904      1.01e- 1  0             5.81
27 mu_0       0.9     1.02       1.31e- 4  0            11.2 
[1] "Total run time was 231.466 seconds"
