
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3557"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 
 6  1  3  4  4  3  5  3  1  2  2  3  2  3  3  2  4  5  4  6  5  3  3  1  2  5 
47 48 49 50 
 4  4  3  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02617 0.31938 0.59524 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
2066 1491 
[1] "treatment indicator table: "

   0    1 
1377 2180 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1821
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 40"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1736
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 209.952 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.467 0.132 
 2 mu         0.1   0.2 0.493 0.147 
 3 mu         0.1   0.3 0.542 0.180 
 4 mu         0.1   0.4 0.550 0.201 
 5 mu         0.1   0.5 0.619 0.203 
 6 mu         0.2   0.1 0.374 0.0497
 7 mu         0.2   0.2 0.429 0.0486
 8 mu         0.2   0.3 0.480 0.0656
 9 mu         0.2   0.4 0.516 0.0800
10 mu         0.2   0.5 0.578 0.0768
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.09         0.458 0.000139      31.9 
 2 mu         0.2      1.09         0.953 0.0302         6.26
 3 mu         0.3      0.983        0.926 0.287          3.05
 4 mu         0.4      0.971        0.949 0.580          1.94
 5 mu         0.5      0.995        0.996 0.669          1.30
 6 mu         0.6      1.01         1.00  0.805          1.27
 7 mu         0.7      1.01         1.00  0.690          1.31
 8 mu         0.8      1.01         1.01  0.444          1.45
 9 mu         0.9      1.02         1.02  0.0744         2.15
10 mu_1       0.1      1.02         0.632 0.000566      15.2 
11 mu_1       0.2      1.07         0.913 0.0629         5.83
12 mu_1       0.3      0.971        0.922 0.389          2.87
13 mu_1       0.4      0.976        0.947 0.594          1.78
14 mu_1       0.5      0.999        0.997 0.704          1.31
15 mu_1       0.6      1.01         1.01  0.794          1.25
16 mu_1       0.7      1.01         1.00  0.691          1.31
17 mu_1       0.8      1.01         1.00  0.420          1.46
18 mu_1       0.9      1.02         1.02  0.0685         2.24
19 mu_0       0.1      1.10         0.428 0.0000918     33.7 
20 mu_0       0.2      1.10         0.948 0.0221         6.36
21 mu_0       0.3      0.988        0.902 0.243          3.13
22 mu_0       0.4      0.967        0.949 0.570          2.05
23 mu_0       0.5      0.992        0.994 0.635          1.33
24 mu_0       0.6      1.01         1.01  0.821          1.28
25 mu_0       0.7      1.02         0.997 0.687          1.32
26 mu_0       0.8      1.01         1.00  0.539          1.38
27 mu_0       0.9      1.01         0.990 0.128          1.66
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.846     2.70e-12  1.03e-32     36.6 
 2 mu         0.2      2.77      2.87e- 7  4.38e-21     73.8 
 3 mu         0.3      2.33      6.87e- 4  9.62e-15     84.8 
 4 mu         0.4      1.38      6.40e- 2  2.54e-10     18.9 
 5 mu         0.5      1.16      5.43e- 1  5.66e- 7      6.98
 6 mu         0.6      1.20      6.93e- 1  5.25e- 5      7.19
 7 mu         0.7      1.25      7.52e- 1  1.41e- 8      6.25
 8 mu         0.8      1.23      2.69e- 1  4.82e-14     11.2 
 9 mu         0.9      0.981     2.53e- 4  5.77e-24     25.9 
10 mu_1       0.1      1.55      1.81e-11  9.20e-32     63.6 
11 mu_1       0.2      2.88      1.07e- 6  2.03e-20     68.0 
12 mu_1       0.3      2.06      1.35e- 3  2.97e-14     78.2 
13 mu_1       0.4      1.29      9.84e- 2  5.88e-10     13.1 
14 mu_1       0.5      1.14      3.90e- 1  1.05e- 6      7.33
15 mu_1       0.6      1.20      6.69e- 1  2.23e- 5      7.19
16 mu_1       0.7      1.24      7.79e- 1  5.16e- 9      6.42
17 mu_1       0.8      1.23      2.22e- 1  1.54e-14     11.5 
18 mu_1       0.9      0.962     1.84e- 4  1.64e-24     25.6 
19 mu_0       0.1      0.768     6.36e-13  1.28e-33     33.6 
20 mu_0       0.2      2.74      1.13e- 7  4.11e-22     75.2 
21 mu_0       0.3      2.44      4.03e- 4  1.03e-15     87.6 
22 mu_0       0.4      1.43      4.11e- 2  3.18e-11     22.8 
23 mu_0       0.5      1.18      4.53e- 1  8.50e- 8      7.56
24 mu_0       0.6      1.19      6.26e- 1  4.62e- 5      7.19
25 mu_0       0.7      1.25      7.43e- 1  3.51e- 8      6.21
26 mu_0       0.8      1.24      4.29e- 1  1.80e-13     10.1 
27 mu_0       0.9      1.15      8.76e- 4  4.30e-23     28.8 
[1] "Total run time was 213.17 seconds"
