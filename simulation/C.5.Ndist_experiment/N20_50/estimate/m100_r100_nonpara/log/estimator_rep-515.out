
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3450"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 3  3  5  7  3  6  1  1  5  3  3  2  3  4  5  2  2  2  1  5  2  1  6  1  3  2 
46 47 48 49 50 
 2  4  4  5  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02956 0.32628 0.59310 1.00000 5.00000 
[1] "event indicator table: "

   0    1 
2056 1394 
[1] "treatment indicator table: "

   0    1 
1220 2230 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1736
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 7"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 20"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1714
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 40"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 275.43 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.374 0.0477
 2 mu         0.1   0.2 0.518 0.0623
 3 mu         0.1   0.3 0.525 0.0580
 4 mu         0.1   0.4 0.613 0.0643
 5 mu         0.1   0.5 0.659 0.0700
 6 mu         0.2   0.1 0.339 0.0297
 7 mu         0.2   0.2 0.463 0.0316
 8 mu         0.2   0.3 0.492 0.0293
 9 mu         0.2   0.4 0.571 0.0319
10 mu         0.2   0.5 0.610 0.0353
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.02         0.568 0.0000841      5.77
 2 mu         0.2      1.00         0.911 0.0678         2.91
 3 mu         0.3      0.994        0.965 0.367          2.14
 4 mu         0.4      0.986        0.989 0.296          1.72
 5 mu         0.5      0.982        0.988 0.567          1.48
 6 mu         0.6      0.999        1.00  0.657          1.44
 7 mu         0.7      1.00         1.00  0.686          1.44
 8 mu         0.8      0.997        0.999 0.656          1.33
 9 mu         0.9      1.02         1.03  0.564          1.59
10 mu_1       0.1      1.02         0.772 0.000257       3.98
11 mu_1       0.2      0.994        0.929 0.101          2.43
12 mu_1       0.3      0.990        0.941 0.304          2.04
13 mu_1       0.4      0.984        0.992 0.328          1.70
14 mu_1       0.5      0.983        0.982 0.586          1.51
15 mu_1       0.6      1.00         0.995 0.667          1.44
16 mu_1       0.7      1.00         0.995 0.695          1.42
17 mu_1       0.8      0.996        0.999 0.650          1.32
18 mu_1       0.9      1.02         1.03  0.554          1.62
19 mu_0       0.1      1.02         0.545 0.0000649      6.08
20 mu_0       0.2      1.00         0.925 0.0596         3.04
21 mu_0       0.3      0.995        0.974 0.351          2.19
22 mu_0       0.4      0.988        0.979 0.275          1.73
23 mu_0       0.5      0.981        0.999 0.548          1.46
24 mu_0       0.6      0.994        1.00  0.644          1.49
25 mu_0       0.7      1.00         1.01  0.665          1.49
26 mu_0       0.8      0.997        0.994 0.676          1.35
27 mu_0       0.9      1.01         1.01  0.624          1.47
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1    0.00130     2.73e-13  1.28e-45    0.0644
 2 mu         0.2    0.140       3.50e- 7  3.61e-31    5.48  
 3 mu         0.3    0.811       2.46e- 4  1.02e-22   13.4   
 4 mu         0.4    1.27        1.76e- 2  1.02e-16   12.8   
 5 mu         0.5    1.14        2.87e- 1  4.56e-12    9.62  
 6 mu         0.6    0.994       4.89e- 1  2.88e- 8    4.35  
 7 mu         0.7    1.08        6.53e- 1  1.62e- 5    6.14  
 8 mu         0.8    1.07        4.51e- 1  9.08e-10    7.57  
 9 mu         0.9    1.22        4.31e- 3  1.57e-18   13.7   
10 mu_1       0.1    0.00386     1.81e-12  1.28e-44    0.186 
11 mu_1       0.2    0.222       1.14e- 6  1.81e-30    7.94  
12 mu_1       0.3    0.956       6.01e- 4  3.41e-22   15.5   
13 mu_1       0.4    1.29        2.86e- 2  2.54e-16   12.5   
14 mu_1       0.5    1.13        2.94e- 1  9.12e-12    9.33  
15 mu_1       0.6    0.991       4.41e- 1  4.80e- 8    4.32  
16 mu_1       0.7    1.09        6.74e- 1  6.61e- 6    6.67  
17 mu_1       0.8    1.06        3.74e- 1  3.94e-10    7.19  
18 mu_1       0.9    1.24        3.16e- 3  6.04e-19   14.2   
19 mu_0       0.1    0.00102     1.13e-13  0           0.0508
20 mu_0       0.2    0.119       1.53e- 7  0           4.87  
21 mu_0       0.3    0.749       9.39e- 5  0          13.1   
22 mu_0       0.4    1.25        1.05e- 2  0          14.0   
23 mu_0       0.5    1.15        2.07e- 1  0           9.91  
24 mu_0       0.6    0.998       3.49e- 1  0           5.16  
25 mu_0       0.7    1.05        6.76e- 1  0           5.21  
26 mu_0       0.8    1.10        3.86e- 1  0           9.08  
27 mu_0       0.9    0.974       1.24e- 2  0           9.13  
[1] "Total run time was 280.312 seconds"
