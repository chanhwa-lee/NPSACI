
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3534"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 34 35 36 37 38 39 40 41 42 43 44 45 46 
 6  3  2  2  3  2  4  4  4  3  4  3  4  3  3  3  3  2  2  3  3  3  3  5  2  5 
47 48 49 50 
 7  4  2  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0462  0.3588  0.6407  1.0000  6.0000 
[1] "event indicator table: "

   0    1 
2092 1442 
[1] "treatment indicator table: "

   0    1 
1280 2254 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1693
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 6"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1841
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 38"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 85"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 198.108 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.304 0.0387
 2 mu         0.1   0.2 0.426 0.0560
 3 mu         0.1   0.3 0.473 0.0643
 4 mu         0.1   0.4 0.546 0.0810
 5 mu         0.1   0.5 0.576 0.0705
 6 mu         0.2   0.1 0.277 0.0242
 7 mu         0.2   0.2 0.380 0.0313
 8 mu         0.2   0.3 0.428 0.0308
 9 mu         0.2   0.4 0.495 0.0380
10 mu         0.2   0.5 0.531 0.0339
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      0.978        0.823 0.00000486      8.25
 2 mu         0.2      0.984        0.981 0.00735         2.42
 3 mu         0.3      0.989        1.00  0.155           1.83
 4 mu         0.4      0.987        0.965 0.505           1.58
 5 mu         0.5      0.996        0.984 0.622           1.34
 6 mu         0.6      1.00         0.994 0.709           1.34
 7 mu         0.7      1.01         1.01  0.759           1.25
 8 mu         0.8      0.997        0.978 0.671           1.45
 9 mu         0.9      0.995        0.984 0.539           1.73
10 mu_1       0.1      0.967        0.886 0.0000195       5.90
11 mu_1       0.2      0.993        0.966 0.0149          1.98
12 mu_1       0.3      0.986        1.00  0.215           1.81
13 mu_1       0.4      0.988        0.975 0.533           1.57
14 mu_1       0.5      0.996        0.991 0.615           1.34
15 mu_1       0.6      1.00         0.991 0.726           1.35
16 mu_1       0.7      1.01         1.00  0.756           1.27
17 mu_1       0.8      0.996        0.982 0.671           1.46
18 mu_1       0.9      0.994        0.987 0.514           1.75
19 mu_0       0.1      0.979        0.820 0.00000323      8.51
20 mu_0       0.2      0.982        0.975 0.00546         2.53
21 mu_0       0.3      0.990        1.00  0.129           1.83
22 mu_0       0.4      0.987        0.977 0.487           1.59
23 mu_0       0.5      0.996        0.979 0.629           1.34
24 mu_0       0.6      0.999        1.00  0.683           1.34
25 mu_0       0.7      1.01         1.00  0.758           1.29
26 mu_0       0.8      0.999        0.985 0.668           1.43
27 mu_0       0.9      0.999        0.995 0.621           1.53
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      4.60      5.26e-14  6.91e-40    434.  
 2 mu         0.2      3.41      8.08e- 8  3.03e-26    198.  
 3 mu         0.3      1.11      2.90e- 4  2.24e-18     32.1 
 4 mu         0.4      0.833     3.37e- 2  6.75e-13      7.08
 5 mu         0.5      0.968     2.16e- 1  9.35e- 9      5.57
 6 mu         0.6      1.13      6.38e- 1  3.27e- 8     11.5 
 7 mu         0.7      1.09      4.73e- 1  4.67e-13      5.56
 8 mu         0.8      1.00      4.29e- 1  4.18e-20      5.52
 9 mu         0.9      1.30      2.44e- 3  1.93e-32     17.2 
10 mu_1       0.1      5.95      4.32e-13  6.35e-39    543.  
11 mu_1       0.2      2.75      2.41e- 7  1.40e-25    123.  
12 mu_1       0.3      0.961     6.95e- 4  6.87e-18     21.4 
13 mu_1       0.4      0.842     3.12e- 2  1.55e-12      5.61
14 mu_1       0.5      0.996     2.92e- 1  1.72e- 8      6.06
15 mu_1       0.6      1.13      6.55e- 1  6.82e- 9     11.6 
16 mu_1       0.7      1.09      5.12e- 1  8.34e-14      5.77
17 mu_1       0.8      1.01      3.68e- 1  6.54e-21      5.52
18 mu_1       0.9      1.33      1.71e- 3  2.68e-33     18.2 
19 mu_0       0.1      4.45      1.05e-14  0           422.  
20 mu_0       0.2      3.57      4.07e- 8  0           216.  
21 mu_0       0.3      1.18      1.28e- 4  0            36.7 
22 mu_0       0.4      0.827     2.04e- 2  0             8.36
23 mu_0       0.5      0.941     1.48e- 1  0             5.59
24 mu_0       0.6      1.12      5.43e- 1  0            11.4 
25 mu_0       0.7      1.10      4.96e- 1  0             5.61
26 mu_0       0.8      0.991     3.96e- 1  0             5.52
27 mu_0       0.9      1.08      5.49e- 3  0             9.66
[1] "Total run time was 201.242 seconds"
