
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3586"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 7  5  2  3  1  1  2  1  1  3  3  4  2  5  3  4  5  3  2  2  4  3  2  4  6  3 
46 47 48 49 50 
 3  4  1  7  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03359 0.35077 0.62883 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
2154 1432 
[1] "treatment indicator table: "

   0    1 
1272 2314 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1775
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 58"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1811
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 51"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 313.493 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.326 0.0672
 2 mu         0.1   0.2 0.423 0.0811
 3 mu         0.1   0.3 0.507 0.0925
 4 mu         0.1   0.4 0.507 0.0905
 5 mu         0.1   0.5 0.539 0.104 
 6 mu         0.2   0.1 0.336 0.0446
 7 mu         0.2   0.2 0.435 0.0548
 8 mu         0.2   0.3 0.508 0.0619
 9 mu         0.2   0.4 0.521 0.0580
10 mu         0.2   0.5 0.568 0.0741
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      0.791        0.379 0.00000799     12.2 
 2 mu         0.2      0.879        0.794 0.0159          4.62
 3 mu         0.3      0.949        0.934 0.251           2.30
 4 mu         0.4      0.946        0.943 0.450           1.56
 5 mu         0.5      0.973        0.960 0.558           1.53
 6 mu         0.6      1.01         0.996 0.749           1.49
 7 mu         0.7      1.02         1.02  0.703           1.45
 8 mu         0.8      1.01         1.02  0.640           1.32
 9 mu         0.9      1.01         0.999 0.478           1.59
10 mu_1       0.1      0.809        0.405 0.0000279       8.42
11 mu_1       0.2      0.895        0.818 0.0295          3.75
12 mu_1       0.3      0.957        0.949 0.305           2.11
13 mu_1       0.4      0.948        0.945 0.476           1.48
14 mu_1       0.5      0.980        0.960 0.578           1.56
15 mu_1       0.6      1.01         1.00  0.767           1.47
16 mu_1       0.7      1.02         1.03  0.690           1.45
17 mu_1       0.8      1.01         1.01  0.612           1.32
18 mu_1       0.9      1.01         1.01  0.475           1.61
19 mu_0       0.1      0.789        0.352 0.00000578     12.6 
20 mu_0       0.2      0.875        0.765 0.0125          4.83
21 mu_0       0.3      0.946        0.923 0.227           2.38
22 mu_0       0.4      0.944        0.947 0.431           1.63
23 mu_0       0.5      0.967        0.945 0.537           1.49
24 mu_0       0.6      1.00         0.989 0.720           1.52
25 mu_0       0.7      1.02         1.01  0.734           1.47
26 mu_0       0.8      1.01         1.02  0.702           1.30
27 mu_0       0.9      1.01         1.03  0.443           1.43
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       3.73     4.27e-14  1.18e-47    189.  
 2 mu         0.2       7.76     1.54e- 8  1.33e-32    356.  
 3 mu         0.3       2.98     6.55e- 5  8.45e-24     79.9 
 4 mu         0.4       1.58     1.17e- 2  1.49e-17     29.3 
 5 mu         0.5       1.50     2.02e- 1  1.05e-12     21.2 
 6 mu         0.6       1.34     6.81e- 1  9.52e- 9     10.6 
 7 mu         0.7       1.18     7.37e- 1  2.75e-11      6.22
 8 mu         0.8       1.17     2.91e- 1  4.82e-18     11.1 
 9 mu         0.9       1.13     1.53e- 3  5.62e-30     11.7 
10 mu_1       0.1       6.12     2.40e-13  1.18e-46    305.  
11 mu_1       0.2       6.91     6.17e- 8  6.63e-32    290.  
12 mu_1       0.3       2.42     1.44e- 4  2.82e-23     66.6 
13 mu_1       0.4       1.53     2.05e- 2  3.73e-17     26.7 
14 mu_1       0.5       1.50     1.89e- 1  2.09e-12     21.2 
15 mu_1       0.6       1.31     7.09e- 1  1.59e- 8      8.82
16 mu_1       0.7       1.17     7.77e- 1  6.41e-12      5.86
17 mu_1       0.8       1.18     2.82e- 1  9.83e-19     11.3 
18 mu_1       0.9       1.13     1.06e- 3  1.02e-30     13.0 
19 mu_0       0.1       3.46     1.73e-14  0           176.  
20 mu_0       0.2       7.98     4.93e- 9  0           372.  
21 mu_0       0.3       3.22     3.17e- 5  0            85.6 
22 mu_0       0.4       1.62     5.78e- 3  0            31.1 
23 mu_0       0.5       1.50     1.63e- 1  0            21.2 
24 mu_0       0.6       1.38     5.53e- 1  0            13.2 
25 mu_0       0.7       1.19     6.29e- 1  0             7.06
26 mu_0       0.8       1.14     3.77e- 1  0            10.2 
27 mu_0       0.9       1.13     2.49e- 3  0             8.77
[1] "Total run time was 318.388 seconds"
