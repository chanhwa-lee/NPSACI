
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3636"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 2  3  2  3  1  2  2  4  2  3  2  7  3  3  6  3  1  5  4  3  3  1  4  3  4  4 
46 47 48 49 50 
 1  7  8  1  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03085 0.30410 0.57884 0.99130 5.13603 
[1] "event indicator table: "

   0    1 
2156 1480 
[1] "treatment indicator table: "

   0    1 
1344 2292 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1841
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 21"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1795
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 96"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 227.897 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.430 0.0588
 2 mu         0.1   0.2 0.497 0.0820
 3 mu         0.1   0.3 0.506 0.0947
 4 mu         0.1   0.4 0.506 0.111 
 5 mu         0.1   0.5 0.551 0.123 
 6 mu         0.2   0.1 0.403 0.0393
 7 mu         0.2   0.2 0.504 0.0502
 8 mu         0.2   0.3 0.531 0.0417
 9 mu         0.2   0.4 0.549 0.0464
10 mu         0.2   0.5 0.609 0.0570
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.07         0.641  0.000258      8.65
 2 mu         0.2      1.04         1.03   0.0751        2.34
 3 mu         0.3      1.01         0.988  0.393         2.12
 4 mu         0.4      1.01         1.01   0.449         1.64
 5 mu         0.5      1.03         1.02   0.677         1.46
 6 mu         0.6      1.01         1.00   0.703         1.57
 7 mu         0.7      0.997        1.00   0.653         1.37
 8 mu         0.8      0.984        0.978  0.511         1.33
 9 mu         0.9      0.951        0.949  0.385         1.61
10 mu_1       0.1      1.03         0.826  0.000769      5.40
11 mu_1       0.2      1.03         1.02   0.119         2.36
12 mu_1       0.3      1.00         1.01   0.401         2.02
13 mu_1       0.4      1.01         0.996  0.471         1.62
14 mu_1       0.5      1.03         1.03   0.719         1.44
15 mu_1       0.6      1.01         0.995  0.688         1.56
16 mu_1       0.7      0.996        1.00   0.649         1.35
17 mu_1       0.8      0.982        0.974  0.509         1.33
18 mu_1       0.9      0.951        0.937  0.377         1.60
19 mu_0       0.1      1.08         0.601  0.000202      9.01
20 mu_0       0.2      1.04         1.02   0.0642        2.63
21 mu_0       0.3      1.01         1.00   0.380         2.17
22 mu_0       0.4      1.01         1.01   0.434         1.69
23 mu_0       0.5      1.03         1.01   0.635         1.48
24 mu_0       0.6      1.02         1.01   0.725         1.59
25 mu_0       0.7      0.998        0.998  0.662         1.41
26 mu_0       0.8      0.991        0.993  0.521         1.36
27 mu_0       0.9      0.945        0.930  0.456         1.70
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       2.57     1.22e-13  1.16e-41    168.  
 2 mu         0.2       2.00     1.32e- 7  6.44e-28    112.  
 3 mu         0.3       1.85     2.73e- 4  6.21e-20     65.6 
 4 mu         0.4       1.88     1.80e- 2  2.55e-14     35.4 
 5 mu         0.5       1.57     2.46e- 1  5.08e-10     22.0 
 6 mu         0.6       1.30     8.55e- 1  1.82e- 7      9.81
 7 mu         0.7       1.37     9.18e- 1  5.89e-11      6.33
 8 mu         0.8       1.12     3.16e- 1  7.48e-17      6.10
 9 mu         0.9       1.53     1.37e- 3  7.86e-28     18.8 
10 mu_1       0.1       2.83     7.35e-13  1.11e-40    217.  
11 mu_1       0.2       1.74     4.56e- 7  3.08e-27     72.1 
12 mu_1       0.3       1.88     6.35e- 4  1.98e-19     69.8 
13 mu_1       0.4       1.86     3.08e- 2  6.10e-14     31.8 
14 mu_1       0.5       1.51     3.15e- 1  9.73e-10     20.6 
15 mu_1       0.6       1.31     9.68e- 1  1.95e- 8      9.66
16 mu_1       0.7       1.36     9.37e- 1  5.43e-12      6.62
17 mu_1       0.8       1.11     2.79e- 1  1.79e-17      6.44
18 mu_1       0.9       1.55     9.77e- 4  1.67e-28     18.7 
19 mu_0       0.1       2.54     4.77e-14  5.36e-43    163.  
20 mu_0       0.2       2.06     5.05e- 8  3.35e-29    122.  
21 mu_0       0.3       1.84     1.18e- 4  3.69e-21     63.8 
22 mu_0       0.4       1.90     1.05e- 2  1.77e-15     40.1 
23 mu_0       0.5       1.63     1.77e- 1  4.23e-11     23.4 
24 mu_0       0.6       1.28     7.71e- 1  1.49e- 7     10.0 
25 mu_0       0.7       1.39     9.42e- 1  1.84e-10      5.66
26 mu_0       0.8       1.17     4.89e- 1  3.02e-16      5.40
27 mu_0       0.9       1.36     5.26e- 3  6.35e-27     20.0 
[1] "Total run time was 231.126 seconds"
