
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3557"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 1  2  3  5  3  1  3  3  7  4  3  3  2  5  3  5  2  3  2  1  4  4  3  5  1  3 
46 47 48 49 50 
 3  3  5  4  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04313 0.35568 0.63714 1.00000 7.00000 
[1] "event indicator table: "

   0    1 
2089 1468 
[1] "treatment indicator table: "

   0    1 
1291 2266 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1769
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 67"
[1] "     Cluster: 75"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1788
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 239.155 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.479 0.106 
 2 mu         0.1   0.2 0.550 0.103 
 3 mu         0.1   0.3 0.615 0.114 
 4 mu         0.1   0.4 0.680 0.124 
 5 mu         0.1   0.5 0.676 0.123 
 6 mu         0.2   0.1 0.388 0.0560
 7 mu         0.2   0.2 0.472 0.0388
 8 mu         0.2   0.3 0.537 0.0422
 9 mu         0.2   0.4 0.594 0.0508
10 mu         0.2   0.5 0.597 0.0442
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      1.00         0.251 0.0000120      13.4 
 2 mu         0.2      0.992        0.918 0.0271          2.52
 3 mu         0.3      1.03         0.996 0.353           1.85
 4 mu         0.4      1.02         1.02  0.596           1.38
 5 mu         0.5      1.01         0.998 0.658           1.39
 6 mu         0.6      0.997        0.984 0.738           1.25
 7 mu         0.7      0.987        0.986 0.752           1.20
 8 mu         0.8      0.993        0.989 0.668           1.32
 9 mu         0.9      1.03         1.02  0.567           1.60
10 mu_1       0.1      1.02         0.447 0.0000403       8.79
11 mu_1       0.2      1.00         0.935 0.0469          2.28
12 mu_1       0.3      1.03         0.995 0.411           1.73
13 mu_1       0.4      1.02         1.03  0.604           1.34
14 mu_1       0.5      1.01         0.991 0.658           1.41
15 mu_1       0.6      0.996        0.989 0.723           1.23
16 mu_1       0.7      0.987        0.991 0.739           1.21
17 mu_1       0.8      0.994        0.989 0.673           1.31
18 mu_1       0.9      1.03         1.02  0.560           1.60
19 mu_0       0.1      0.998        0.226 0.00000890     13.9 
20 mu_0       0.2      0.990        0.879 0.0222          2.64
21 mu_0       0.3      1.03         0.998 0.328           1.90
22 mu_0       0.4      1.02         1.01  0.567           1.42
23 mu_0       0.5      1.01         1.01  0.658           1.38
24 mu_0       0.6      0.998        0.978 0.761           1.29
25 mu_0       0.7      0.987        0.991 0.749           1.25
26 mu_0       0.8      0.989        0.974 0.647           1.38
27 mu_0       0.9      1.01         1.01  0.606           1.63
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.499     8.07e-14  5.14e-36     42.4 
 2 mu         0.2      1.30      1.09e- 7  4.47e-24     39.1 
 3 mu         0.3      1.60      2.00e- 4  3.78e-17     54.8 
 4 mu         0.4      1.09      2.46e- 2  2.76e-12     13.8 
 5 mu         0.5      1.07      3.82e- 1  1.44e- 8      9.39
 6 mu         0.6      1.18      1.02e+ 0  4.15e- 7      3.38
 7 mu         0.7      1.09      8.54e- 1  3.33e-11      5.52
 8 mu         0.8      0.963     2.41e- 1  3.39e-17      5.58
 9 mu         0.9      0.926     5.74e- 4  1.00e-27     12.0 
10 mu_1       0.1      0.764     5.13e-13  4.90e-35     60.6 
11 mu_1       0.2      1.46      4.02e- 7  2.13e-23     36.5 
12 mu_1       0.3      1.53      4.14e- 4  1.20e-16     50.5 
13 mu_1       0.4      1.07      3.31e- 2  6.58e-12     14.7 
14 mu_1       0.5      1.09      4.89e- 1  2.75e- 8      8.98
15 mu_1       0.6      1.19      1.01e+ 0  9.88e- 8      3.62
16 mu_1       0.7      1.07      8.52e- 1  6.79e-12      5.47
17 mu_1       0.8      0.971     1.93e- 1  6.06e-18      5.41
18 mu_1       0.9      0.924     4.25e- 4  1.59e-28     12.9 
19 mu_0       0.1      0.469     3.26e-14  2.72e-37     40.4 
20 mu_0       0.2      1.26      3.52e- 8  2.66e-25     41.9 
21 mu_0       0.3      1.63      1.08e- 4  2.57e-18     56.6 
22 mu_0       0.4      1.11      1.37e- 2  2.19e-13     14.7 
23 mu_0       0.5      1.06      2.91e- 1  1.37e- 9     10.7 
24 mu_0       0.6      1.17      9.47e- 1  8.89e- 7      3.83
25 mu_0       0.7      1.14      8.36e- 1  9.50e-11      5.63
26 mu_0       0.8      0.933     3.43e- 1  1.45e-16      6.27
27 mu_0       0.9      0.937     2.10e- 3  8.58e-27      8.61
[1] "Total run time was 241.923 seconds"
