
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3479"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 3  6  2  4  3  2  2  4  1  4  4  6  3  3  2  3  4  1  2  7  1  6  1  6  2  1 
46 47 49 50 
 7  4  2  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04445 0.36195 0.60642 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
2018 1461 
[1] "treatment indicator table: "

   0    1 
1247 2232 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1708
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1771
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 235.532 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.408 0.115 
 2 mu         0.1   0.2 0.497 0.150 
 3 mu         0.1   0.3 0.598 0.171 
 4 mu         0.1   0.4 0.647 0.178 
 5 mu         0.1   0.5 0.663 0.181 
 6 mu         0.2   0.1 0.364 0.0553
 7 mu         0.2   0.2 0.443 0.0669
 8 mu         0.2   0.3 0.528 0.0800
 9 mu         0.2   0.4 0.576 0.0808
10 mu         0.2   0.5 0.591 0.0691
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.10         0.325  3.49e-10     24.0 
 2 mu         0.2      0.984        0.934  4.23e- 5      5.25
 3 mu         0.3      1.01         0.988  9.85e- 3      2.62
 4 mu         0.4      0.988        1.00   1.64e- 1      1.77
 5 mu         0.5      1.01         1.00   6.24e- 1      1.40
 6 mu         0.6      1.02         1.02   7.63e- 1      1.30
 7 mu         0.7      0.996        0.983  7.57e- 1      1.35
 8 mu         0.8      1.00         0.967  7.42e- 1      1.64
 9 mu         0.9      0.995        1.03   4.49e- 1      1.54
10 mu_1       0.1      0.982        0.583  1.60e- 9     15.6 
11 mu_1       0.2      1.00         0.969  9.76e- 5      3.28
12 mu_1       0.3      1.01         0.995  1.56e- 2      2.49
13 mu_1       0.4      0.987        1.00   2.06e- 1      1.69
14 mu_1       0.5      1.01         1.01   6.80e- 1      1.41
15 mu_1       0.6      1.01         1.01   7.68e- 1      1.31
16 mu_1       0.7      0.996        0.984  7.57e- 1      1.36
17 mu_1       0.8      1.00         0.968  7.29e- 1      1.67
18 mu_1       0.9      0.995        1.03   4.41e- 1      1.57
19 mu_0       0.1      1.11         0.299  2.11e-10     25.4 
20 mu_0       0.2      0.980        0.899  2.84e- 5      5.74
21 mu_0       0.3      1.01         0.977  7.37e- 3      2.68
22 mu_0       0.4      0.988        0.996  1.36e- 1      1.83
23 mu_0       0.5      1.00         1.01   5.68e- 1      1.39
24 mu_0       0.6      1.02         1.01   7.56e- 1      1.28
25 mu_0       0.7      0.998        0.997  7.57e- 1      1.32
26 mu_0       0.8      0.998        0.965  7.72e- 1      1.53
27 mu_0       0.9      0.994        1.01   5.21e- 1      1.41
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.52      7.30e-14  7.35e-40    150.  
 2 mu         0.2      2.79      7.40e- 8  1.02e-26    195.  
 3 mu         0.3      2.70      3.15e- 4  4.38e-19     54.7 
 4 mu         0.4      1.99      3.10e- 2  1.01e-13     29.2 
 5 mu         0.5      1.22      3.42e- 1  1.29e- 9      7.50
 6 mu         0.6      1.29      7.04e- 1  7.75e- 7      7.41
 7 mu         0.7      1.34      8.37e- 1  3.06e-11     14.0 
 8 mu         0.8      1.09      4.29e- 1  1.06e-17      6.15
 9 mu         0.9      0.985     3.16e- 3  4.38e-29     17.0 
10 mu_1       0.1      2.34      4.38e-13  7.03e-39    229.  
11 mu_1       0.2      2.71      2.18e- 7  4.89e-26    148.  
12 mu_1       0.3      2.75      7.16e- 4  1.40e-18     54.0 
13 mu_1       0.4      1.82      5.11e- 2  2.42e-13     23.1 
14 mu_1       0.5      1.18      3.87e- 1  2.47e- 9      7.73
15 mu_1       0.6      1.30      7.23e- 1  1.97e- 7      8.06
16 mu_1       0.7      1.33      8.05e- 1  6.65e-12     14.2 
17 mu_1       0.8      1.07      3.55e- 1  2.01e-18      6.35
18 mu_1       0.9      0.992     2.36e- 3  7.41e-30     17.8 
19 mu_0       0.1      1.43      1.54e-14  3.55e-41    142.  
20 mu_0       0.2      2.81      3.80e- 8  5.56e-28    207.  
21 mu_0       0.3      2.67      1.43e- 4  2.72e-20     54.9 
22 mu_0       0.4      2.10      1.75e- 2  7.33e-15     34.2 
23 mu_0       0.5      1.26      2.55e- 1  1.12e-10      7.66
24 mu_0       0.6      1.27      7.00e- 1  2.74e- 7      6.44
25 mu_0       0.7      1.37      7.77e- 1  8.64e-11     13.3 
26 mu_0       0.8      1.14      3.75e- 1  4.48e-17      7.31
27 mu_0       0.9      0.919     1.03e- 2  3.72e-28      9.43
[1] "Total run time was 238.982 seconds"
