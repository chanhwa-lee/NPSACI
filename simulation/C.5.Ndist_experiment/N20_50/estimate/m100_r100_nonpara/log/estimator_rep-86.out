
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3507"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 31 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 
 2  3  3  2  5  3  3  5  4  2  3  3  5  3  6  3  7  6  4  4  4  3  2  5  2  1 
48 49 50 
 1  1  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02787 0.31402 0.58776 0.99107 8.00000 
[1] "event indicator table: "

   0    1 
2028 1479 
[1] "treatment indicator table: "

   0    1 
1337 2170 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1689
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 32"
[1] "     Cluster: 36"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1818
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 260.708 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.410 0.0510
 2 mu         0.1   0.2 0.464 0.0595
 3 mu         0.1   0.3 0.576 0.0716
 4 mu         0.1   0.4 0.589 0.0667
 5 mu         0.1   0.5 0.590 0.0639
 6 mu         0.2   0.1 0.372 0.0360
 7 mu         0.2   0.2 0.446 0.0375
 8 mu         0.2   0.3 0.528 0.0417
 9 mu         0.2   0.4 0.548 0.0365
10 mu         0.2   0.5 0.554 0.0300
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.908        0.703  0.000358      5.11
 2 mu         0.2      0.933        0.979  0.0826        1.95
 3 mu         0.3      0.953        0.948  0.348         2.10
 4 mu         0.4      1.00         0.981  0.593         1.62
 5 mu         0.5      1.00         1.00   0.599         1.35
 6 mu         0.6      0.997        1.01   0.686         1.32
 7 mu         0.7      0.993        0.978  0.701         1.30
 8 mu         0.8      1.00         1.00   0.648         1.37
 9 mu         0.9      1.01         0.985  0.491         1.81
10 mu_1       0.1      0.938        0.855  0.00108       3.53
11 mu_1       0.2      0.920        0.931  0.125         1.80
12 mu_1       0.3      0.963        0.939  0.399         2.04
13 mu_1       0.4      1.00         0.996  0.548         1.62
14 mu_1       0.5      0.999        1.01   0.629         1.34
15 mu_1       0.6      0.997        1.01   0.674         1.31
16 mu_1       0.7      0.993        0.974  0.714         1.33
17 mu_1       0.8      1.00         1.00   0.639         1.39
18 mu_1       0.9      1.01         0.982  0.475         1.83
19 mu_0       0.1      0.904        0.665  0.000277      5.28
20 mu_0       0.2      0.936        0.974  0.0720        1.98
21 mu_0       0.3      0.948        0.943  0.327         2.13
22 mu_0       0.4      0.997        0.965  0.597         1.62
23 mu_0       0.5      1.00         1.00   0.568         1.36
24 mu_0       0.6      0.996        1.01   0.703         1.32
25 mu_0       0.7      0.992        0.997  0.673         1.28
26 mu_0       0.8      1.00         0.995  0.686         1.43
27 mu_0       0.9      0.991        0.962  0.430         1.66
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      3.01      8.76e-13  1.50e-41    121.  
 2 mu         0.2      3.46      1.51e- 7  1.48e-27     79.5 
 3 mu         0.3      1.24      2.23e- 4  1.87e-19     19.7 
 4 mu         0.4      0.776     2.54e- 2  8.77e-14     12.1 
 5 mu         0.5      0.964     1.61e- 1  1.82e- 9      9.03
 6 mu         0.6      1.23      9.76e- 1  2.25e- 6      4.15
 7 mu         0.7      1.48      1.27e+ 0  2.37e-10      4.89
 8 mu         0.8      1.18      4.58e- 1  2.76e-16      5.58
 9 mu         0.9      0.983     2.03e- 3  9.15e-27     20.9 
10 mu_1       0.1      4.21      6.51e-12  1.41e-40    159.  
11 mu_1       0.2      2.82      5.87e- 7  6.95e-27     64.7 
12 mu_1       0.3      0.985     5.04e- 4  5.86e-19     18.4 
13 mu_1       0.4      0.781     4.19e- 2  2.06e-13     10.6 
14 mu_1       0.5      1.00      1.93e- 1  3.42e- 9      8.60
15 mu_1       0.6      1.27      1.03e+ 0  4.93e- 7      4.15
16 mu_1       0.7      1.48      1.36e+ 0  5.50e-11      4.93
17 mu_1       0.8      1.15      3.85e- 1  5.61e-17      5.63
18 mu_1       0.9      0.972     1.54e- 3  1.66e-27     21.5 
19 mu_0       0.1      2.87      2.67e-13  9.97e-43    117.  
20 mu_0       0.2      3.62      5.62e- 8  1.11e-28     86.3 
21 mu_0       0.3      1.36      1.03e- 4  1.60e-20     20.3 
22 mu_0       0.4      0.773     1.48e- 2  8.77e-15     13.0 
23 mu_0       0.5      0.929     1.44e- 1  2.19e-10      9.46
24 mu_0       0.6      1.17      7.85e- 1  7.37e- 7      4.71
25 mu_0       0.7      1.47      1.08e+ 0  6.60e-10      4.92
26 mu_0       0.8      1.29      5.98e- 1  1.15e-15      6.41
27 mu_0       0.9      1.08      6.69e- 3  7.66e-26     14.9 
[1] "Total run time was 265.283 seconds"
