
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3378"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 5  8  3  1  8  2  2  3  2  1  2  4  6  2  4  3  4  2  4  3  2  3  3  2  5  1 
46 47 48 49 
 4  5  2  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03446 0.36083 0.60202 1.00000 5.99422 
[1] "event indicator table: "

   0    1 
2067 1311 
[1] "treatment indicator table: "

   0    1 
1235 2143 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1726
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1652
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 205.974 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.355 0.0683
 2 mu         0.1   0.2 0.384 0.0707
 3 mu         0.1   0.3 0.423 0.0799
 4 mu         0.1   0.4 0.577 0.0616
 5 mu         0.1   0.5 0.600 0.0650
 6 mu         0.2   0.1 0.284 0.0514
 7 mu         0.2   0.2 0.343 0.0479
 8 mu         0.2   0.3 0.395 0.0527
 9 mu         0.2   0.4 0.519 0.0358
10 mu         0.2   0.5 0.544 0.0350
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.10         0.875   0.00226      4.55
 2 mu         0.2      1.06         1.04    0.174        2.35
 3 mu         0.3      1.01         0.982   0.331        2.02
 4 mu         0.4      0.997        1.01    0.581        1.68
 5 mu         0.5      1.00         1.02    0.619        1.27
 6 mu         0.6      1.01         1.01    0.780        1.25
 7 mu         0.7      1.00         1.01    0.705        1.27
 8 mu         0.8      0.986        0.990   0.601        1.41
 9 mu         0.9      0.971        0.985   0.373        1.58
10 mu_1       0.1      1.15         0.999   0.00654      4.63
11 mu_1       0.2      1.05         1.01    0.198        2.15
12 mu_1       0.3      1.01         0.989   0.355        1.99
13 mu_1       0.4      0.995        0.996   0.596        1.57
14 mu_1       0.5      1.00         1.02    0.622        1.26
15 mu_1       0.6      1.01         1.01    0.779        1.25
16 mu_1       0.7      1.00         1.00    0.709        1.26
17 mu_1       0.8      0.984        0.996   0.578        1.43
18 mu_1       0.9      0.970        0.986   0.358        1.61
19 mu_0       0.1      1.10         0.838   0.00179      4.54
20 mu_0       0.2      1.07         1.02    0.168        2.43
21 mu_0       0.3      1.02         0.986   0.320        2.03
22 mu_0       0.4      0.998        1.02    0.571        1.76
23 mu_0       0.5      0.999        1.01    0.616        1.30
24 mu_0       0.6      1.01         1.01    0.756        1.28
25 mu_0       0.7      1.01         1.01    0.698        1.31
26 mu_0       0.8      0.991        0.985   0.677        1.38
27 mu_0       0.9      0.977        0.986   0.476        1.39
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.296     6.14e-12  1.68e-46     17.3 
 2 mu         0.2      1.03      2.05e- 6  4.74e-32     36.4 
 3 mu         0.3      1.08      6.44e- 4  1.34e-23     15.8 
 4 mu         0.4      1.15      3.53e- 2  1.33e-17      8.21
 5 mu         0.5      1.29      2.99e- 1  5.98e-13     12.3 
 6 mu         0.6      1.17      3.91e- 1  3.78e- 9      8.47
 7 mu         0.7      1.05      7.69e- 1  9.96e- 9      8.07
 8 mu         0.8      1.13      2.64e- 1  1.51e-14      7.03
 9 mu         0.9      1.03      1.85e- 3  4.51e-25     20.8 
10 mu_1       0.1      0.549     3.69e-11  1.68e-45     29.7 
11 mu_1       0.2      1.11      7.67e- 6  2.37e-31     31.2 
12 mu_1       0.3      1.07      1.48e- 3  4.48e-23     12.9 
13 mu_1       0.4      1.17      5.57e- 2  3.34e-17      8.55
14 mu_1       0.5      1.30      3.73e- 1  1.20e-12     12.9 
15 mu_1       0.6      1.16      3.75e- 1  6.30e- 9      7.60
16 mu_1       0.7      1.04      8.00e- 1  3.49e- 9      7.69
17 mu_1       0.8      1.13      2.10e- 1  4.62e-15      7.29
18 mu_1       0.9      1.03      1.30e- 3  1.23e-25     21.5 
19 mu_0       0.1      0.268     2.72e-12  0            15.9 
20 mu_0       0.2      1.01      6.39e- 7  0            37.7 
21 mu_0       0.3      1.08      2.75e- 4  0            17.0 
22 mu_0       0.4      1.14      2.01e- 2  0             7.98
23 mu_0       0.5      1.29      2.47e- 1  0            11.6 
24 mu_0       0.6      1.20      4.42e- 1  0            10.0 
25 mu_0       0.7      1.05      5.57e- 1  0             8.97
26 mu_0       0.8      1.12      4.43e- 1  0             6.00
27 mu_0       0.9      1.06      5.25e- 3  0            14.2 
[1] "Total run time was 209.133 seconds"
