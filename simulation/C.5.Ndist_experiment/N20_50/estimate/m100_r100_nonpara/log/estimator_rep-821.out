
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3599"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 3  2  1  5  4  6  1  2  3  5  2  5  1  2  2  3  2  4  3  3  1  3  5  3  5  6 
46 47 48 49 50 
 2  2  3  4  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0433  0.3545  0.6198  1.0000  5.4757 
[1] "event indicator table: "

   0    1 
2124 1475 
[1] "treatment indicator table: "

   0    1 
1270 2329 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1754
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 14"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1845
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 54"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 205.654 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.513 0.123 
 2 mu         0.1   0.2 0.582 0.132 
 3 mu         0.1   0.3 0.623 0.144 
 4 mu         0.1   0.4 0.690 0.166 
 5 mu         0.1   0.5 0.703 0.171 
 6 mu         0.2   0.1 0.397 0.0761
 7 mu         0.2   0.2 0.452 0.0596
 8 mu         0.2   0.3 0.485 0.0489
 9 mu         0.2   0.4 0.535 0.0649
10 mu         0.2   0.5 0.547 0.0561
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.17         0.199 0.0000790     17.8 
 2 mu         0.2      0.976        0.959 0.0555         3.38
 3 mu         0.3      0.998        0.981 0.241          1.67
 4 mu         0.4      1.00         0.978 0.413          1.75
 5 mu         0.5      1.01         1.01  0.672          1.53
 6 mu         0.6      1.00         1.02  0.608          1.22
 7 mu         0.7      0.989        0.988 0.728          1.22
 8 mu         0.8      0.993        0.974 0.656          1.35
 9 mu         0.9      0.995        0.970 0.512          2.32
10 mu_1       0.1      1.17         0.385 0.000256      11.9 
11 mu_1       0.2      0.977        0.939 0.0863         3.14
12 mu_1       0.3      1.00         0.999 0.273          1.61
13 mu_1       0.4      0.999        1.00  0.437          1.77
14 mu_1       0.5      1.01         1.00  0.701          1.47
15 mu_1       0.6      1.00         1.01  0.610          1.22
16 mu_1       0.7      0.988        0.989 0.747          1.21
17 mu_1       0.8      0.994        0.977 0.653          1.39
18 mu_1       0.9      0.994        0.970 0.508          2.33
19 mu_0       0.1      1.17         0.178 0.0000593     18.7 
20 mu_0       0.2      0.976        0.927 0.0461         3.60
21 mu_0       0.3      0.996        0.976 0.227          1.70
22 mu_0       0.4      1.00         0.997 0.397          1.74
23 mu_0       0.5      1.01         0.999 0.640          1.59
24 mu_0       0.6      1.01         1.02  0.606          1.22
25 mu_0       0.7      0.990        0.992 0.684          1.27
26 mu_0       0.8      0.989        0.975 0.668          1.31
27 mu_0       0.9      1.00         0.966 0.540          2.23
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.0580     1.12e-13  6.00e-44      5.57
 2 mu         0.2     0.488      3.07e- 7  7.50e-30     30.0 
 3 mu         0.3     0.927      5.44e- 4  1.24e-21     20.7 
 4 mu         0.4     1.07       5.58e- 2  7.92e-16     11.3 
 5 mu         0.5     1.23       5.87e- 1  2.37e-11      9.74
 6 mu         0.6     1.12       8.38e- 1  9.98e- 8      4.39
 7 mu         0.7     0.885      5.22e- 1  1.79e- 6      4.86
 8 mu         0.8     0.941      1.42e- 1  4.05e-11      7.20
 9 mu         0.9     1.11       4.75e- 4  1.38e-19     12.9 
10 mu_1       0.1     0.130      7.30e-13  5.87e-43     12.4 
11 mu_1       0.2     0.616      9.44e- 7  3.67e-29     33.4 
12 mu_1       0.3     0.973      1.17e- 3  4.05e-21     17.1 
13 mu_1       0.4     1.10       8.94e- 2  1.94e-15      9.42
14 mu_1       0.5     1.24       6.24e- 1  4.64e-11      9.94
15 mu_1       0.6     1.09       8.08e- 1  1.63e- 7      4.34
16 mu_1       0.7     0.869      5.05e- 1  6.85e- 7      5.27
17 mu_1       0.8     0.955      1.20e- 1  1.36e-11      7.36
18 mu_1       0.9     1.11       3.28e- 4  4.11e-20     12.8 
19 mu_0       0.1     0.0500     4.57e-14  1.39e-45      4.81
20 mu_0       0.2     0.456      1.47e- 7  1.95e-31     29.2 
21 mu_0       0.3     0.908      2.78e- 4  3.69e-23     23.0 
22 mu_0       0.4     1.05       3.35e- 2  2.75e-17     12.6 
23 mu_0       0.5     1.22       5.14e- 1  9.87e-13      9.54
24 mu_0       0.6     1.16       9.06e- 1  5.20e- 9      5.37
25 mu_0       0.7     0.921      4.86e- 1  4.36e- 6      3.91
26 mu_0       0.8     0.884      2.46e- 1  1.48e-10      6.54
27 mu_0       0.9     1.11       1.74e- 3  1.01e-18     13.9 
[1] "Total run time was 208.634 seconds"
