
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3606"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 34 35 36 37 38 39 40 41 42 43 44 45 46 
 4  4  5  2  1  3  1  3  3  6  2  2  1  7  4  1  3  4  1  4  4  2  2  2  4 10 
47 48 49 50 
 3  3  5  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03361 0.34702 0.61205 1.00000 5.00000 
[1] "event indicator table: "

   0    1 
2173 1433 
[1] "treatment indicator table: "

   0    1 
1363 2243 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1855
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1751
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 247.891 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.532 0.136
 2 mu         0.1   0.2 0.624 0.158
 3 mu         0.1   0.3 0.694 0.157
 4 mu         0.1   0.4 0.809 0.170
 5 mu         0.1   0.5 0.847 0.162
 6 mu         0.2   0.1 0.370 0.112
 7 mu         0.2   0.2 0.430 0.129
 8 mu         0.2   0.3 0.479 0.119
 9 mu         0.2   0.4 0.569 0.121
10 mu         0.2   0.5 0.599 0.101
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.38         0.649 0.000113      15.2 
 2 mu         0.2      1.01         0.935 0.0656         2.60
 3 mu         0.3      0.954        0.965 0.357          2.33
 4 mu         0.4      0.987        0.995 0.518          1.48
 5 mu         0.5      0.996        0.994 0.716          1.30
 6 mu         0.6      0.999        0.999 0.755          1.28
 7 mu         0.7      1.01         0.983 0.798          1.41
 8 mu         0.8      0.995        1.01  0.546          1.61
 9 mu         0.9      0.994        0.992 0.358          2.21
10 mu_1       0.1      1.34         0.813 0.000351      12.4 
11 mu_1       0.2      0.975        0.923 0.106          2.55
12 mu_1       0.3      0.957        0.975 0.363          2.21
13 mu_1       0.4      0.990        1.01  0.544          1.46
14 mu_1       0.5      0.996        0.980 0.733          1.31
15 mu_1       0.6      1.00         0.999 0.763          1.29
16 mu_1       0.7      1.01         0.984 0.800          1.44
17 mu_1       0.8      0.995        0.995 0.538          1.60
18 mu_1       0.9      0.994        0.994 0.335          2.26
19 mu_0       0.1      1.39         0.610 0.0000861     15.5 
20 mu_0       0.2      1.02         0.933 0.0556         2.73
21 mu_0       0.3      0.952        0.960 0.337          2.38
22 mu_0       0.4      0.985        0.989 0.501          1.56
23 mu_0       0.5      0.996        1.00  0.695          1.31
24 mu_0       0.6      0.996        0.992 0.742          1.28
25 mu_0       0.7      1.01         0.982 0.784          1.36
26 mu_0       0.8      0.999        1.01  0.581          1.64
27 mu_0       0.9      0.990        0.963 0.440          1.83
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.411     1.52e-12  1.18e-45     36.6 
 2 mu         0.2      1.72      8.27e- 7  5.89e-31     94.8 
 3 mu         0.3      1.24      1.80e- 3  2.19e-22     25.4 
 4 mu         0.4      1.32      1.07e- 1  2.49e-16      8.13
 5 mu         0.5      1.22      3.61e- 1  1.16e-11     11.6 
 6 mu         0.6      1.05      4.25e- 1  7.05e- 8      6.77
 7 mu         0.7      1.01      6.20e- 1  5.21e-11      7.84
 8 mu         0.8      1.20      1.65e- 1  2.05e-17      9.93
 9 mu         0.9      1.45      9.02e- 4  9.59e-29     21.7 
10 mu_1       0.1      0.726     1.19e-11  1.15e-44     62.3 
11 mu_1       0.2      1.75      2.35e- 6  2.89e-30     80.7 
12 mu_1       0.3      1.24      3.50e- 3  7.16e-22     18.4 
13 mu_1       0.4      1.34      1.17e- 1  6.10e-16      8.02
14 mu_1       0.5      1.19      3.40e- 1  2.28e-11     11.2 
15 mu_1       0.6      1.03      4.80e- 1  1.15e- 7      6.48
16 mu_1       0.7      1.02      5.59e- 1  1.27e-11      7.55
17 mu_1       0.8      1.22      1.18e- 1  4.37e-18     10.5 
18 mu_1       0.9      1.44      6.35e- 4  1.81e-29     21.7 
19 mu_0       0.1      0.376     3.64e-13  2.62e-47     33.7 
20 mu_0       0.2      1.71      4.33e- 7  1.47e-32     98.3 
21 mu_0       0.3      1.23      1.10e- 3  6.26e-24     28.4 
22 mu_0       0.4      1.31      7.25e- 2  8.30e-18      8.47
23 mu_0       0.5      1.25      3.01e- 1  4.65e-13     12.1 
24 mu_0       0.6      1.07      4.71e- 1  3.53e- 9      7.20
25 mu_0       0.7      1.00      6.22e- 1  1.44e-10      8.53
26 mu_0       0.8      1.12      3.18e- 1  8.53e-17      7.84
27 mu_0       0.9      1.54      2.78e- 3  7.96e-28     21.7 
[1] "Total run time was 252.1 seconds"
