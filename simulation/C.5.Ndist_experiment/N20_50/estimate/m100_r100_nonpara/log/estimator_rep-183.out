
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3577"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 42 43 44 45 46 
 1  2  3  1  3  5  5  1  3  3  5  3  7  1  4  4  5  3  3  3  2  3  4  3  2  4 
47 48 49 50 
 7  3  4  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03511 0.34738 0.61248 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
2143 1434 
[1] "treatment indicator table: "

   0    1 
1321 2256 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1771
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1806
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 347.551 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.510 0.146 
 2 mu         0.1   0.2 0.561 0.174 
 3 mu         0.1   0.3 0.612 0.203 
 4 mu         0.1   0.4 0.706 0.218 
 5 mu         0.1   0.5 0.783 0.224 
 6 mu         0.2   0.1 0.329 0.0620
 7 mu         0.2   0.2 0.364 0.0582
 8 mu         0.2   0.3 0.401 0.0659
 9 mu         0.2   0.4 0.482 0.0689
10 mu         0.2   0.5 0.524 0.0533
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      1.25         0.493 0.00000823     33.9 
 2 mu         0.2      0.920        0.862 0.0274          2.62
 3 mu         0.3      0.966        0.920 0.334           1.97
 4 mu         0.4      0.993        0.994 0.544           1.35
 5 mu         0.5      0.993        0.994 0.693           1.28
 6 mu         0.6      0.989        0.986 0.709           1.33
 7 mu         0.7      0.995        0.996 0.634           1.25
 8 mu         0.8      1.02         1.00  0.788           1.49
 9 mu         0.9      1.01         0.961 0.490           1.91
10 mu_1       0.1      1.10         0.713 0.0000287      16.3 
11 mu_1       0.2      0.925        0.876 0.0480          2.51
12 mu_1       0.3      0.973        0.957 0.407           1.78
13 mu_1       0.4      0.996        0.978 0.594           1.36
14 mu_1       0.5      0.992        0.995 0.687           1.30
15 mu_1       0.6      0.989        0.992 0.677           1.33
16 mu_1       0.7      0.996        0.995 0.644           1.26
17 mu_1       0.8      1.02         1.01  0.773           1.52
18 mu_1       0.9      1.01         0.962 0.474           1.97
19 mu_0       0.1      1.27         0.463 0.00000596     35.9 
20 mu_0       0.2      0.918        0.858 0.0222          2.89
21 mu_0       0.3      0.963        0.924 0.302           2.06
22 mu_0       0.4      0.992        0.991 0.511           1.38
23 mu_0       0.5      0.994        0.991 0.699           1.33
24 mu_0       0.6      0.989        0.985 0.715           1.32
25 mu_0       0.7      0.993        0.985 0.612           1.28
26 mu_0       0.8      1.01         1.00  0.727           1.40
27 mu_0       0.9      1.03         0.996 0.635           1.90
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.579     7.69e-14  7.26e-33     33.1 
 2 mu         0.2      1.64      1.72e- 7  7.88e-22     61.0 
 3 mu         0.3      1.14      3.33e- 4  1.98e-15     15.6 
 4 mu         0.4      0.932     2.65e- 2  6.09e-11      6.84
 5 mu         0.5      0.944     2.93e- 1  1.63e- 7      5.83
 6 mu         0.6      0.999     5.79e- 1  1.94e- 6      5.28
 7 mu         0.7      1.18      7.63e- 1  1.81e-10     15.2 
 8 mu         0.8      1.30      4.51e- 1  2.12e-16      8.30
 9 mu         0.9      1.33      3.45e- 3  7.02e-27     20.0 
10 mu_1       0.1      1.01      5.83e-13  6.89e-32     53.8 
11 mu_1       0.2      1.61      5.77e- 7  3.74e-21     49.6 
12 mu_1       0.3      1.07      6.77e- 4  6.25e-15     14.6 
13 mu_1       0.4      0.925     4.27e- 2  1.45e-10      5.60
14 mu_1       0.5      0.943     3.16e- 1  3.09e- 7      5.51
15 mu_1       0.6      1.01      5.92e- 1  5.27e- 7      6.18
16 mu_1       0.7      1.21      7.17e- 1  4.22e-11     15.3 
17 mu_1       0.8      1.30      3.72e- 1  4.31e-17      8.71
18 mu_1       0.9      1.35      2.55e- 3  1.27e-27     21.0 
19 mu_0       0.1      0.531     2.37e-14  0            30.8 
20 mu_0       0.2      1.64      6.84e- 8  0            63.8 
21 mu_0       0.3      1.17      1.72e- 4  0            16.0 
22 mu_0       0.4      0.937     1.42e- 2  0             7.68
23 mu_0       0.5      0.945     1.92e- 1  0             6.15
24 mu_0       0.6      0.977     5.01e- 1  0             4.84
25 mu_0       0.7      1.13      7.87e- 1  0            15.1 
26 mu_0       0.8      1.29      4.29e- 1  0             6.64
27 mu_0       0.9      1.21      6.51e- 3  0            12.0 
[1] "Total run time was 351.768 seconds"
