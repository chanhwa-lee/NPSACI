
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3701"
[1] "cluster size dist'n: "

20 21 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 45 46 47 48 
 2  4  1  1  4  3  4  3  3  4  2  3  4  1  4  6  6  2  6  6  1  4  5  6  3  6 
49 
 6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02637 0.33787 0.59585 1.00000 5.54672 
[1] "event indicator table: "

   0    1 
2220 1481 
[1] "treatment indicator table: "

   0    1 
1389 2312 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1802
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1899
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 15"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 69"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 230.881 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.338 0.132 
 2 mu         0.1   0.2 0.377 0.129 
 3 mu         0.1   0.3 0.438 0.133 
 4 mu         0.1   0.4 0.437 0.138 
 5 mu         0.1   0.5 0.528 0.173 
 6 mu         0.2   0.1 0.312 0.0919
 7 mu         0.2   0.2 0.359 0.0920
 8 mu         0.2   0.3 0.417 0.0941
 9 mu         0.2   0.4 0.427 0.106 
10 mu         0.2   0.5 0.510 0.126 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.849        0.362   0.00330      6.20
 2 mu         0.2      0.932        0.882   0.173        2.73
 3 mu         0.3      0.983        0.979   0.466        1.93
 4 mu         0.4      1.01         1.01    0.576        1.62
 5 mu         0.5      1.00         1.01    0.636        1.37
 6 mu         0.6      0.997        0.997   0.696        1.31
 7 mu         0.7      0.996        0.997   0.621        1.47
 8 mu         0.8      0.994        0.972   0.635        1.59
 9 mu         0.9      0.996        0.973   0.309        1.67
10 mu_1       0.1      0.913        0.617   0.00845      6.30
11 mu_1       0.2      0.948        0.931   0.248        2.52
12 mu_1       0.3      0.990        0.970   0.509        1.92
13 mu_1       0.4      1.01         0.994   0.575        1.64
14 mu_1       0.5      1.00         1.01    0.645        1.37
15 mu_1       0.6      0.997        1.01    0.699        1.32
16 mu_1       0.7      0.996        0.997   0.628        1.48
17 mu_1       0.8      0.994        0.972   0.614        1.60
18 mu_1       0.9      0.996        0.972   0.315        1.68
19 mu_0       0.1      0.842        0.338   0.00273      6.42
20 mu_0       0.2      0.928        0.875   0.154        2.78
21 mu_0       0.3      0.980        0.987   0.446        1.93
22 mu_0       0.4      1.01         1.01    0.578        1.62
23 mu_0       0.5      1.00         1.01    0.626        1.39
24 mu_0       0.6      0.997        0.997   0.692        1.30
25 mu_0       0.7      0.998        1.00    0.605        1.46
26 mu_0       0.8      0.992        0.986   0.700        1.55
27 mu_0       0.9      1.00         0.999   0.261        1.63
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.0647     1.31e-12  1.74e-40      5.33
 2 mu         0.2     0.467      2.11e- 6  8.59e-27     23.0 
 3 mu         0.3     0.936      2.83e- 3  6.06e-19     28.7 
 4 mu         0.4     1.28       9.65e- 2  1.40e-13     17.7 
 5 mu         0.5     1.35       5.38e- 1  1.79e- 9     11.3 
 6 mu         0.6     1.04       6.05e- 1  3.48e- 6      6.78
 7 mu         0.7     0.953      3.89e- 1  3.85e- 9      4.10
 8 mu         0.8     1.20       4.28e- 2  5.10e-15      6.13
 9 mu         0.9     1.23       3.06e- 5  1.36e-25     18.7 
10 mu_1       0.1     0.123      8.11e-12  1.63e-39      9.51
11 mu_1       0.2     0.561      6.08e- 6  4.03e-26     26.3 
12 mu_1       0.3     1.03       6.61e- 3  1.93e-18     31.2 
13 mu_1       0.4     1.33       1.50e- 1  3.35e-13     14.4 
14 mu_1       0.5     1.33       5.96e- 1  3.42e- 9     11.1 
15 mu_1       0.6     0.998      5.91e- 1  5.55e- 6      6.36
16 mu_1       0.7     0.970      4.09e- 1  1.26e- 9      4.42
17 mu_1       0.8     1.20       2.95e- 2  1.46e-15      6.57
18 mu_1       0.9     1.22       1.81e- 5  3.45e-26     19.5 
19 mu_0       0.1     0.0583     6.16e-13  1.18e-41      4.86
20 mu_0       0.2     0.443      1.12e- 6  6.58e-28     22.1 
21 mu_0       0.3     0.896      1.21e- 3  3.77e-20     27.6 
22 mu_0       0.4     1.25       6.31e- 2  1.01e-14     19.8 
23 mu_0       0.5     1.37       3.71e- 1  1.55e-10     11.6 
24 mu_0       0.6     1.09       5.37e- 1  3.79e- 7      7.42
25 mu_0       0.7     0.913      5.41e- 1  9.89e- 9      3.44
26 mu_0       0.8     1.19       6.99e- 2  1.97e-14      5.42
27 mu_0       0.9     1.26       1.43e- 4  1.05e-24     14.8 
[1] "Total run time was 234.4 seconds"
