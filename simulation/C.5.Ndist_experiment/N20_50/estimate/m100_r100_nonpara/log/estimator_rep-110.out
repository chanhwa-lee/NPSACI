
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3476"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 36 37 38 39 40 41 42 43 44 45 46 
 2  3  6  3  5  5  2  3  2  5  1  4  4  1  2  4  2  3  3  6  8  5  2  4  1  2 
47 48 49 50 
 1  6  1  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02721 0.32535 0.60079 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
2113 1363 
[1] "treatment indicator table: "

   0    1 
1276 2200 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1728
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 63"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1748
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 43"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 192.849 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.348 0.0404
 2 mu         0.1   0.2 0.485 0.0745
 3 mu         0.1   0.3 0.500 0.0690
 4 mu         0.1   0.4 0.539 0.0670
 5 mu         0.1   0.5 0.571 0.0772
 6 mu         0.2   0.1 0.316 0.0583
 7 mu         0.2   0.2 0.415 0.0627
 8 mu         0.2   0.3 0.438 0.0657
 9 mu         0.2   0.4 0.480 0.0614
10 mu         0.2   0.5 0.504 0.0767
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.895        0.652    0.0202      3.53
 2 mu         0.2      0.991        0.913    0.296       1.87
 3 mu         0.3      0.993        1.01     0.479       1.58
 4 mu         0.4      0.994        1.01     0.572       1.32
 5 mu         0.5      0.998        1.01     0.760       1.30
 6 mu         0.6      0.994        0.983    0.742       1.23
 7 mu         0.7      1.00         0.987    0.734       1.30
 8 mu         0.8      1.02         1.04     0.713       1.33
 9 mu         0.9      1.01         1.01     0.521       1.56
10 mu_1       0.1      0.937        0.814    0.0467      3.25
11 mu_1       0.2      0.996        0.942    0.408       1.80
12 mu_1       0.3      0.993        0.994    0.515       1.53
13 mu_1       0.4      0.993        1.00     0.596       1.30
14 mu_1       0.5      0.998        1.00     0.751       1.32
15 mu_1       0.6      0.993        0.984    0.756       1.26
16 mu_1       0.7      1.01         0.996    0.729       1.28
17 mu_1       0.8      1.02         1.03     0.708       1.34
18 mu_1       0.9      1.01         1.01     0.509       1.55
19 mu_0       0.1      0.891        0.623    0.0173      3.56
20 mu_0       0.2      0.990        0.919    0.267       1.93
21 mu_0       0.3      0.994        1.01     0.462       1.60
22 mu_0       0.4      0.994        1.01     0.556       1.33
23 mu_0       0.5      0.998        1.01     0.740       1.29
24 mu_0       0.6      0.994        0.980    0.719       1.24
25 mu_0       0.7      0.999        0.977    0.720       1.35
26 mu_0       0.8      1.02         1.04     0.677       1.32
27 mu_0       0.9      1.01         0.996    0.590       1.68
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      3.75      1.01e-14  5.17e-38    232.  
 2 mu         0.2      1.50      3.17e- 8  3.20e-25     65.0 
 3 mu         0.3      0.720     2.43e- 4  7.99e-18      9.15
 4 mu         0.4      0.968     1.60e- 2  1.19e-12      5.58
 5 mu         0.5      1.04      2.80e- 1  1.01e- 8      6.08
 6 mu         0.6      0.972     5.96e- 1  2.07e- 9      3.78
 7 mu         0.7      1.01      5.90e- 1  5.88e-14      3.89
 8 mu         0.8      1.13      3.03e- 1  1.79e-20      4.98
 9 mu         0.9      1.22      1.12e- 3  9.25e-32     11.1 
10 mu_1       0.1      3.64      6.46e-14  4.84e-37    169.  
11 mu_1       0.2      1.13      1.14e- 7  1.49e-24     41.7 
12 mu_1       0.3      0.745     4.99e- 4  2.49e-17      7.62
13 mu_1       0.4      1.01      2.45e- 2  2.77e-12      5.68
14 mu_1       0.5      1.01      2.54e- 1  1.89e- 8      5.59
15 mu_1       0.6      0.973     5.08e- 1  2.53e-10      3.87
16 mu_1       0.7      1.02      5.66e- 1  6.15e-15      3.92
17 mu_1       0.8      1.14      2.46e- 1  1.63e-21      4.91
18 mu_1       0.9      1.21      8.23e- 4  7.52e-33     11.1 
19 mu_0       0.1      3.76      4.09e-15  0           238.  
20 mu_0       0.2      1.59      1.38e- 8  0            70.8 
21 mu_0       0.3      0.710     1.13e- 4  0             9.80
22 mu_0       0.4      0.939     7.59e- 3  0             5.51
23 mu_0       0.5      1.06      2.04e- 1  0             6.57
24 mu_0       0.6      0.971     6.56e- 1  0             3.74
25 mu_0       0.7      1.01      5.08e- 1  0             4.06
26 mu_0       0.8      1.07      3.44e- 1  0             5.28
27 mu_0       0.9      1.25      1.94e- 3  0            11.6 
[1] "Total run time was 195.968 seconds"
