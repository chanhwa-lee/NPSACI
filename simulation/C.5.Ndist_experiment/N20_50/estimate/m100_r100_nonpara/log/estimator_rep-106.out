
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3534"
[1] "cluster size dist'n: "

20 21 22 23 24 25 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 
 3  2  4  4  2  6  3  3  6  1  3  4  2  1  3  4  1  7  2  2  4 10  3  4  2  1 
47 48 49 50 
 5  1  4  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03047 0.32322 0.59272 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
2036 1498 
[1] "treatment indicator table: "

   0    1 
1446 2088 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1741
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1793
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 26"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 189.278 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.329 0.0393
 2 mu         0.1   0.2 0.368 0.0509
 3 mu         0.1   0.3 0.401 0.0633
 4 mu         0.1   0.4 0.458 0.0640
 5 mu         0.1   0.5 0.469 0.0724
 6 mu         0.2   0.1 0.331 0.0246
 7 mu         0.2   0.2 0.379 0.0313
 8 mu         0.2   0.3 0.425 0.0402
 9 mu         0.2   0.4 0.484 0.0429
10 mu         0.2   0.5 0.494 0.0494
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      0.876        0.725 0.00000634      6.19
 2 mu         0.2      0.990        0.955 0.0132          2.64
 3 mu         0.3      1.03         1.03  0.281           2.46
 4 mu         0.4      1.03         1.03  0.657           1.97
 5 mu         0.5      1.02         1.00  0.775           1.41
 6 mu         0.6      0.996        1.00  0.672           1.28
 7 mu         0.7      0.978        0.962 0.753           1.34
 8 mu         0.8      0.968        0.986 0.532           1.32
 9 mu         0.9      0.978        0.935 0.256           1.89
10 mu_1       0.1      0.956        0.828 0.0000231       4.63
11 mu_1       0.2      1.00         1.01  0.0249          2.78
12 mu_1       0.3      1.03         1.01  0.367           2.32
13 mu_1       0.4      1.03         1.02  0.664           1.98
14 mu_1       0.5      1.02         1.02  0.795           1.39
15 mu_1       0.6      0.994        1.00  0.649           1.25
16 mu_1       0.7      0.976        0.972 0.740           1.35
17 mu_1       0.8      0.968        0.985 0.520           1.34
18 mu_1       0.9      0.979        0.930 0.237           2.00
19 mu_0       0.1      0.867        0.687 0.00000447      6.54
20 mu_0       0.2      0.987        0.933 0.0103          2.61
21 mu_0       0.3      1.03         1.03  0.244           2.52
22 mu_0       0.4      1.03         1.04  0.652           1.96
23 mu_0       0.5      1.02         1.02  0.754           1.51
24 mu_0       0.6      0.999        1.00  0.706           1.34
25 mu_0       0.7      0.980        0.969 0.726           1.34
26 mu_0       0.8      0.969        0.980 0.580           1.30
27 mu_0       0.9      0.971        0.950 0.322           1.66
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       1.43     4.32e-11  6.97e-39     91.2 
 2 mu         0.2       1.75     6.62e- 6  8.61e-26     75.7 
 3 mu         0.3       1.55     4.66e- 3  3.23e-18     30.4 
 4 mu         0.4       1.30     1.47e- 1  6.39e-13     11.1 
 5 mu         0.5       1.13     3.53e- 1  6.79e- 9      5.68
 6 mu         0.6       1.03     6.02e- 1  5.23e- 9      6.71
 7 mu         0.7       1.13     7.95e- 1  2.31e-13      5.44
 8 mu         0.8       1.16     1.32e- 1  1.20e-19      8.54
 9 mu         0.9       1.13     2.43e- 4  1.40e-30     19.6 
10 mu_1       0.1       1.87     2.47e-10  6.52e-38    127.  
11 mu_1       0.2       1.71     2.16e- 5  4.03e-25     52.6 
12 mu_1       0.3       1.51     1.00e- 2  1.01e-17     28.5 
13 mu_1       0.4       1.28     1.85e- 1  1.50e-12      8.68
14 mu_1       0.5       1.11     3.69e- 1  1.27e- 8      5.74
15 mu_1       0.6       1.03     6.23e- 1  8.51e-10      7.11
16 mu_1       0.7       1.14     6.74e- 1  3.22e-14      5.11
17 mu_1       0.8       1.16     9.87e- 2  1.47e-20      8.64
18 mu_1       0.9       1.14     1.71e- 4  1.52e-31     20.5 
19 mu_0       0.1       1.38     1.57e-11  4.94e-40     87.2 
20 mu_0       0.2       1.76     3.19e- 6  6.87e-27     81.5 
21 mu_0       0.3       1.57     2.48e- 3  2.94e-19     31.1 
22 mu_0       0.4       1.31     8.95e- 2  6.80e-14     12.7 
23 mu_0       0.5       1.15     2.44e- 1  8.67e-10      6.42
24 mu_0       0.6       1.04     6.20e- 1  1.18e- 8      6.10
25 mu_0       0.7       1.11     6.11e- 1  6.95e-13      6.56
26 mu_0       0.8       1.17     1.80e- 1  5.43e-19      8.13
27 mu_0       0.9       1.07     8.51e- 4  1.27e-29     12.3 
[1] "Total run time was 192.675 seconds"
