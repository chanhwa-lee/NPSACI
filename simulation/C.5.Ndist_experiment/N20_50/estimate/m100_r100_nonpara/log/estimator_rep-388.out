
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3688"
[1] "cluster size dist'n: "

20 22 23 24 25 26 27 28 29 30 31 32 33 34 35 37 38 39 40 41 42 43 44 45 46 47 
 2  4  5  2  4  3  3  2  3  1  2  3  5  3  3  4  2  4  1  3  3  2  5  8  6  3 
48 49 50 
 6  5  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04071 0.35226 0.61871 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
2172 1516 
[1] "treatment indicator table: "

   0    1 
1421 2267 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1834
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 96"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1854
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 226.003 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.396 0.0463
 2 mu         0.1   0.2 0.455 0.0442
 3 mu         0.1   0.3 0.515 0.0844
 4 mu         0.1   0.4 0.532 0.0875
 5 mu         0.1   0.5 0.588 0.0708
 6 mu         0.2   0.1 0.355 0.0373
 7 mu         0.2   0.2 0.434 0.0421
 8 mu         0.2   0.3 0.472 0.0469
 9 mu         0.2   0.4 0.522 0.0545
10 mu         0.2   0.5 0.578 0.0556
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.909        0.913   0.00170      2.91
 2 mu         0.2      0.930        0.865   0.177        1.86
 3 mu         0.3      0.972        0.946   0.612        1.53
 4 mu         0.4      0.989        0.998   0.627        1.44
 5 mu         0.5      1.01         1.01    0.723        1.37
 6 mu         0.6      1.01         1.02    0.689        1.32
 7 mu         0.7      1.01         1.02    0.754        1.34
 8 mu         0.8      0.993        0.982   0.643        1.32
 9 mu         0.9      0.978        0.979   0.381        1.39
10 mu_1       0.1      0.904        0.831   0.00432      2.66
11 mu_1       0.2      0.942        0.892   0.250        1.75
12 mu_1       0.3      0.977        0.942   0.620        1.46
13 mu_1       0.4      0.994        0.992   0.637        1.44
14 mu_1       0.5      1.01         1.01    0.743        1.39
15 mu_1       0.6      1.02         1.02    0.699        1.31
16 mu_1       0.7      1.01         1.02    0.757        1.34
17 mu_1       0.8      0.991        0.986   0.640        1.31
18 mu_1       0.9      0.978        0.977   0.371        1.40
19 mu_0       0.1      0.909        0.908   0.00141      3.01
20 mu_0       0.2      0.926        0.855   0.159        1.89
21 mu_0       0.3      0.970        0.951   0.586        1.56
22 mu_0       0.4      0.986        0.987   0.621        1.43
23 mu_0       0.5      1.01         1.00    0.690        1.34
24 mu_0       0.6      1.01         1.01    0.675        1.35
25 mu_0       0.7      1.01         1.01    0.749        1.34
26 mu_0       0.8      0.999        0.992   0.656        1.35
27 mu_0       0.9      0.976        0.984   0.469        1.33
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.614     1.03e-11  5.51e-43     27.9 
 2 mu         0.2      0.835     1.04e- 6  3.44e-29     17.7 
 3 mu         0.3      0.995     1.27e- 3  3.80e-21     12.3 
 4 mu         0.4      1.09      8.79e- 2  1.82e-15     12.0 
 5 mu         0.5      1.11      4.55e- 1  4.35e-11      6.27
 6 mu         0.6      1.15      5.99e- 1  8.63e- 8      5.40
 7 mu         0.7      1.07      3.48e- 1  1.20e-11      5.55
 8 mu         0.8      0.998     1.54e- 1  3.17e-17      7.36
 9 mu         0.9      1.16      3.94e- 4  4.88e-27     12.7 
10 mu_1       0.1      0.808     6.25e-11  5.39e-42     30.4 
11 mu_1       0.2      0.837     3.69e- 6  1.69e-28     13.6 
12 mu_1       0.3      1.01      2.53e- 3  1.24e-20     14.2 
13 mu_1       0.4      1.08      1.35e- 1  4.45e-15     10.5 
14 mu_1       0.5      1.12      5.23e- 1  8.51e-11      6.52
15 mu_1       0.6      1.16      4.43e- 1  1.55e- 8      5.25
16 mu_1       0.7      1.05      3.86e- 1  1.86e-12      5.75
17 mu_1       0.8      1.01      1.20e- 1  4.29e-18      7.83
18 mu_1       0.9      1.16      2.80e- 4  7.11e-28     13.0 
19 mu_0       0.1      0.593     4.42e-12  1.30e-44     27.6 
20 mu_0       0.2      0.834     3.82e- 7  9.16e-31     19.2 
21 mu_0       0.3      0.989     7.32e- 4  1.15e-22     11.4 
22 mu_0       0.4      1.09      5.40e- 2  6.45e-17     13.1 
23 mu_0       0.5      1.09      3.12e- 1  1.85e-12      6.41
24 mu_0       0.6      1.14      5.96e- 1  8.12e- 9      5.63
25 mu_0       0.7      1.11      3.42e- 1  3.58e-11      5.44
26 mu_0       0.8      0.969     2.58e- 1  1.42e-16      6.59
27 mu_0       0.9      1.19      1.42e- 3  3.78e-26     10.4 
[1] "Total run time was 229.279 seconds"
