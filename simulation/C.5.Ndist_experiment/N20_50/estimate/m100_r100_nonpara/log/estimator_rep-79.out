
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3404"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 5  5  4  5  4  3  3  2  3  1  3  1  3  2  3  4  5  3  2  7  3  3  5  2  9  1 
46 47 48 49 50 
 1  1  3  2  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02401 0.31120 0.58690 1.00000 6.60870 
[1] "event indicator table: "

   0    1 
2028 1376 
[1] "treatment indicator table: "

   0    1 
1347 2057 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1724
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1680
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 37"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 347.518 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.344 0.0843
 2 mu         0.1   0.2 0.410 0.0773
 3 mu         0.1   0.3 0.506 0.0895
 4 mu         0.1   0.4 0.543 0.0994
 5 mu         0.1   0.5 0.544 0.0940
 6 mu         0.2   0.1 0.317 0.0363
 7 mu         0.2   0.2 0.380 0.0284
 8 mu         0.2   0.3 0.456 0.0381
 9 mu         0.2   0.4 0.484 0.0440
10 mu         0.2   0.5 0.499 0.0399
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.857        0.350  0.000170      9.46
 2 mu         0.2      0.923        0.899  0.0672        2.68
 3 mu         0.3      0.953        0.934  0.314         2.02
 4 mu         0.4      0.973        0.965  0.632         1.61
 5 mu         0.5      1.00         1.01   0.723         1.28
 6 mu         0.6      1.00         1.00   0.740         1.21
 7 mu         0.7      0.989        0.979  0.743         1.38
 8 mu         0.8      1.01         1.00   0.710         1.41
 9 mu         0.9      0.985        0.973  0.191         1.74
10 mu_1       0.1      0.866        0.548  0.000491      7.11
11 mu_1       0.2      0.942        0.967  0.103         2.46
12 mu_1       0.3      0.959        0.929  0.380         1.99
13 mu_1       0.4      0.978        0.973  0.680         1.51
14 mu_1       0.5      1.00         1.02   0.740         1.25
15 mu_1       0.6      1.00         0.999  0.748         1.22
16 mu_1       0.7      0.989        0.979  0.751         1.39
17 mu_1       0.8      1.01         1.00   0.690         1.41
18 mu_1       0.9      0.982        0.959  0.172         1.76
19 mu_0       0.1      0.856        0.333  0.000134      9.72
20 mu_0       0.2      0.918        0.882  0.0583        2.73
21 mu_0       0.3      0.951        0.936  0.285         2.03
22 mu_0       0.4      0.970        0.962  0.583         1.67
23 mu_0       0.5      0.997        0.995  0.706         1.31
24 mu_0       0.6      1.00         1.02   0.728         1.21
25 mu_0       0.7      0.988        0.982  0.723         1.37
26 mu_0       0.8      1.01         1.00   0.710         1.43
27 mu_0       0.9      1.01         0.982  0.361         1.61
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.203     5.49e-12  1.76e-37      9.79
 2 mu         0.2      0.910     1.37e- 6  6.11e-25     16.3 
 3 mu         0.3      1.11      1.03e- 3  1.16e-17     14.0 
 4 mu         0.4      0.954     7.47e- 2  1.51e-12      7.20
 5 mu         0.5      0.909     4.80e- 1  1.23e- 8      5.50
 6 mu         0.6      1.04      6.43e- 1  5.26e- 6      4.71
 7 mu         0.7      1.12      8.57e- 1  3.84e-10      4.57
 8 mu         0.8      1.16      1.33e- 1  2.26e-16     10.0 
 9 mu         0.9      1.00      3.72e- 4  1.50e-27     26.2 
10 mu_1       0.1      0.383     3.80e-11  1.68e-36     16.3 
11 mu_1       0.2      1.04      4.17e- 6  2.92e-24     17.9 
12 mu_1       0.3      1.09      2.07e- 3  3.70e-17     13.1 
13 mu_1       0.4      0.927     1.15e- 1  3.61e-12      6.96
14 mu_1       0.5      0.920     4.03e- 1  2.35e- 8      5.20
15 mu_1       0.6      1.05      7.43e- 1  1.93e- 6      4.84
16 mu_1       0.7      1.13      7.75e- 1  1.21e-10      4.81
17 mu_1       0.8      1.15      1.06e- 1  6.23e-17     10.2 
18 mu_1       0.9      1.01      2.56e- 4  3.68e-28     28.0 
19 mu_0       0.1      0.183     1.87e-12  8.88e-39      9.06
20 mu_0       0.2      0.877     6.25e- 7  3.47e-26     15.9 
21 mu_0       0.3      1.13      5.93e- 4  7.55e-19     14.3 
22 mu_0       0.4      0.971     4.77e- 2  1.14e-13      7.37
23 mu_0       0.5      0.898     3.61e- 1  1.12e- 9      5.81
24 mu_0       0.6      1.02      6.53e- 1  1.90e- 6      4.82
25 mu_0       0.7      1.11      8.44e- 1  9.99e-10      4.72
26 mu_0       0.8      1.18      2.43e- 1  8.83e-16      9.10
27 mu_0       0.9      0.939     1.50e- 3  1.17e-26     11.8 
[1] "Total run time was 353.215 seconds"
