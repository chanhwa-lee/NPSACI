
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3546"
[1] "cluster size dist'n: "

21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 47 
 3  5  2  5  2  1  1  2  6  6  3  4  4  2  4  4  2  5  5  3  3  2  7  1  6  1 
48 49 50 
 2  5  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02555 0.30484 0.57683 0.97861 5.00000 
[1] "event indicator table: "

   0    1 
2072 1474 
[1] "treatment indicator table: "

   0    1 
1376 2170 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1741
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1805
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 278.463 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.574 0.0926
 2 mu         0.1   0.2 0.680 0.116 
 3 mu         0.1   0.3 0.849 0.131 
 4 mu         0.1   0.4 0.897 0.138 
 5 mu         0.1   0.5 0.930 0.143 
 6 mu         0.2   0.1 0.451 0.0529
 7 mu         0.2   0.2 0.544 0.0718
 8 mu         0.2   0.3 0.679 0.0822
 9 mu         0.2   0.4 0.715 0.0803
10 mu         0.2   0.5 0.738 0.0780
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.31         0.450 0.0000145     11.1 
 2 mu         0.2      1.07         1.03  0.0259         6.11
 3 mu         0.3      0.977        0.978 0.406          1.93
 4 mu         0.4      0.986        0.949 0.528          1.44
 5 mu         0.5      1.01         1.00  0.809          1.44
 6 mu         0.6      1.01         1.00  0.775          1.30
 7 mu         0.7      0.999        0.992 0.722          1.28
 8 mu         0.8      1.00         1.01  0.650          1.42
 9 mu         0.9      1.04         1.01  0.189          2.64
10 mu_1       0.1      1.25         0.762 0.0000534     10.5 
11 mu_1       0.2      1.02         0.959 0.0483         4.56
12 mu_1       0.3      0.973        0.972 0.420          1.85
13 mu_1       0.4      0.989        0.948 0.544          1.39
14 mu_1       0.5      1.01         0.999 0.788          1.43
15 mu_1       0.6      1.01         1.00  0.773          1.30
16 mu_1       0.7      0.999        0.995 0.709          1.27
17 mu_1       0.8      1.00         1.00  0.639          1.46
18 mu_1       0.9      1.04         0.999 0.174          2.68
19 mu_0       0.1      1.31         0.425 0.0000102     11.7 
20 mu_0       0.2      1.09         1.03  0.0203         6.50
21 mu_0       0.3      0.978        0.978 0.394          1.96
22 mu_0       0.4      0.983        0.958 0.516          1.47
23 mu_0       0.5      1.01         0.997 0.816          1.46
24 mu_0       0.6      1.01         1.00  0.763          1.31
25 mu_0       0.7      0.999        0.988 0.734          1.28
26 mu_0       0.8      0.999        1.02  0.609          1.34
27 mu_0       0.9      1.03         1.06  0.323          2.27
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.193     1.29e-13  5.68e-36      8.99
 2 mu         0.2      1.11      3.75e- 7  9.86e-24     37.3 
 3 mu         0.3      1.13      3.35e- 4  1.25e-16     19.7 
 4 mu         0.4      1.15      4.62e- 2  1.22e-11     12.7 
 5 mu         0.5      1.07      3.74e- 1  7.97e- 8      4.06
 6 mu         0.6      1.13      7.07e- 1  7.12e- 6      6.04
 7 mu         0.7      1.07      7.32e- 1  1.04e- 9      5.84
 8 mu         0.8      1.14      8.33e- 2  2.07e-15      7.78
 9 mu         0.9      2.36      5.46e- 5  1.55e-25     93.2 
10 mu_1       0.1      0.396     8.69e-13  5.41e-35     16.7 
11 mu_1       0.2      1.22      1.11e- 6  4.70e-23     34.7 
12 mu_1       0.3      1.13      7.38e- 4  3.98e-16     21.4 
13 mu_1       0.4      1.14      7.10e- 2  2.91e-11     11.8 
14 mu_1       0.5      1.06      4.84e- 1  1.52e- 7      4.43
15 mu_1       0.6      1.13      7.28e- 1  2.21e- 6      5.93
16 mu_1       0.7      1.07      6.24e- 1  2.75e-10      5.75
17 mu_1       0.8      1.15      6.63e- 2  4.82e-16      7.78
18 mu_1       0.9      2.43      3.71e- 5  3.20e-26     98.8 
19 mu_0       0.1      0.171     4.64e-14  2.93e-37      8.13
20 mu_0       0.2      1.09      1.92e- 7  5.73e-25     38.0 
21 mu_0       0.3      1.14      1.62e- 4  8.32e-18     19.0 
22 mu_0       0.4      1.16      2.96e- 2  9.46e-13     14.2 
23 mu_0       0.5      1.07      3.31e- 1  7.41e- 9      4.36
24 mu_0       0.6      1.12      6.59e- 1  1.05e- 5      6.19
25 mu_0       0.7      1.05      7.45e- 1  2.81e- 9      6.06
26 mu_0       0.8      1.06      1.57e- 1  8.43e-15      7.78
27 mu_0       0.9      1.73      2.12e- 4  1.26e-24     43.4 
[1] "Total run time was 283.356 seconds"
