
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3486"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 37 38 39 40 41 42 43 44 45 46 
 1  5  2  4  3  5  5  2  3  3  4  2  3  2  4  5  4  4  5  1  3  5  5  6  1  2 
47 48 49 50 
 2  3  4  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02198 0.32900 0.59576 1.00000 5.00000 
[1] "event indicator table: "

   0    1 
1987 1499 
[1] "treatment indicator table: "

   0    1 
1256 2230 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1700
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1786
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 187.251 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.479 0.0635
 2 mu         0.1   0.2 0.574 0.0665
 3 mu         0.1   0.3 0.629 0.0774
 4 mu         0.1   0.4 0.687 0.0825
 5 mu         0.1   0.5 0.727 0.0823
 6 mu         0.2   0.1 0.407 0.0375
 7 mu         0.2   0.2 0.488 0.0367
 8 mu         0.2   0.3 0.544 0.0581
 9 mu         0.2   0.4 0.597 0.0515
10 mu         0.2   0.5 0.623 0.0352
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.14         0.865  0.000264      5.82
 2 mu         0.2      1.00         0.960  0.118         1.97
 3 mu         0.3      0.999        0.981  0.385         2.04
 4 mu         0.4      1.01         0.999  0.633         1.66
 5 mu         0.5      1.02         1.02   0.691         1.36
 6 mu         0.6      1.01         1.00   0.680         1.65
 7 mu         0.7      0.999        0.991  0.704         1.41
 8 mu         0.8      0.974        0.961  0.641         1.28
 9 mu         0.9      1.00         0.963  0.473         1.67
10 mu_1       0.1      1.14         0.954  0.000784      5.54
11 mu_1       0.2      0.987        0.963  0.183         2.01
12 mu_1       0.3      1.00         0.986  0.439         2.03
13 mu_1       0.4      1.02         1.01   0.635         1.70
14 mu_1       0.5      1.02         1.01   0.726         1.40
15 mu_1       0.6      1.01         1.00   0.680         1.66
16 mu_1       0.7      0.997        0.984  0.700         1.40
17 mu_1       0.8      0.974        0.966  0.631         1.30
18 mu_1       0.9      1.00         0.968  0.460         1.68
19 mu_0       0.1      1.14         0.829  0.000206      5.85
20 mu_0       0.2      1.01         0.975  0.102         2.08
21 mu_0       0.3      0.997        0.990  0.362         2.04
22 mu_0       0.4      1.01         1.00   0.611         1.64
23 mu_0       0.5      1.02         1.03   0.656         1.35
24 mu_0       0.6      1.01         0.999  0.679         1.63
25 mu_0       0.7      1.00         0.995  0.713         1.52
26 mu_0       0.8      0.975        0.965  0.616         1.22
27 mu_0       0.9      0.994        0.979  0.555         1.52
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.356     4.05e-14  1.66e-38     15.6 
 2 mu         0.2      1.65      8.46e- 8  3.65e-25     71.7 
 3 mu         0.3      1.31      1.67e- 4  1.79e-17     13.6 
 4 mu         0.4      0.915     1.70e- 2  4.06e-12     11.5 
 5 mu         0.5      0.882     1.94e- 1  4.49e- 8     11.1 
 6 mu         0.6      1.02      4.42e- 1  1.28e- 6      7.81
 7 mu         0.7      1.33      7.18e- 1  5.17e-11      9.83
 8 mu         0.8      1.53      8.27e- 1  1.55e-17     13.3 
 9 mu         0.9      1.59      8.24e- 3  4.08e-29     22.1 
10 mu_1       0.1      0.623     2.61e-13  1.52e-37     28.6 
11 mu_1       0.2      1.76      3.07e- 7  1.67e-24     65.8 
12 mu_1       0.3      1.22      4.03e- 4  5.49e-17     12.1 
13 mu_1       0.4      0.873     2.89e- 2  9.32e-12     11.8 
14 mu_1       0.5      0.893     1.98e- 1  8.25e- 8     11.6 
15 mu_1       0.6      1.06      5.28e- 1  3.93e- 7      8.28
16 mu_1       0.7      1.36      6.99e- 1  1.36e-11      9.63
17 mu_1       0.8      1.54      7.51e- 1  3.57e-18     13.7 
18 mu_1       0.9      1.57      6.49e- 3  8.33e-30     22.5 
19 mu_0       0.1      0.326     1.50e-14  1.51e-39     14.1 
20 mu_0       0.2      1.62      2.90e- 8  3.72e-26     73.1 
21 mu_0       0.3      1.35      6.76e- 5  2.09e-18     15.4 
22 mu_0       0.4      0.943     8.84e- 3  5.52e-13     11.3 
23 mu_0       0.5      0.870     1.06e- 1  7.34e- 9     10.6 
24 mu_0       0.6      0.971     3.97e- 1  2.62e- 6      7.48
25 mu_0       0.7      1.27      8.22e- 1  1.41e-10     10.3 
26 mu_0       0.8      1.51      6.68e- 1  6.34e-17     11.9 
27 mu_0       0.9      1.76      2.37e- 2  3.33e-28     18.0 
[1] "Total run time was 190.308 seconds"
