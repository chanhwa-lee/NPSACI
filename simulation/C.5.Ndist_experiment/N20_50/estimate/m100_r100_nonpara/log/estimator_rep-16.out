
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3659"
[1] "cluster size dist'n: "

20 21 22 24 25 26 27 28 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 
 3  4  1  2  2  4  2  3  3  3  4  1  2  7  4  5  7  4  5  3  6  3  1  4  3  4 
48 49 50 
 3  3  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03174 0.36238 0.62474 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
2169 1490 
[1] "treatment indicator table: "

   0    1 
1431 2228 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1895
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 87"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1764
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 23"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 76"
[1] "     Cluster: 80"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 280.088 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.365 0.0517
 2 mu         0.1   0.2 0.438 0.0585
 3 mu         0.1   0.3 0.490 0.0537
 4 mu         0.1   0.4 0.509 0.0507
 5 mu         0.1   0.5 0.544 0.0542
 6 mu         0.2   0.1 0.383 0.0332
 7 mu         0.2   0.2 0.479 0.0441
 8 mu         0.2   0.3 0.526 0.0366
 9 mu         0.2   0.4 0.554 0.0319
10 mu         0.2   0.5 0.597 0.0339
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.897        0.556  0.00105       3.84
 2 mu         0.2      1.06         1.02   0.144         3.75
 3 mu         0.3      0.983        0.988  0.410         1.87
 4 mu         0.4      0.996        0.976  0.595         1.51
 5 mu         0.5      1.01         1.01   0.669         1.33
 6 mu         0.6      1.01         1.01   0.714         1.30
 7 mu         0.7      0.999        0.983  0.744         1.34
 8 mu         0.8      0.997        0.992  0.608         1.31
 9 mu         0.9      0.992        1.01   0.410         1.61
10 mu_1       0.1      0.998        0.793  0.00275       4.93
11 mu_1       0.2      1.04         1.03   0.173         3.09
12 mu_1       0.3      0.980        0.955  0.411         1.83
13 mu_1       0.4      1.00         0.980  0.599         1.50
14 mu_1       0.5      1.01         1.01   0.659         1.34
15 mu_1       0.6      1.01         1.00   0.703         1.30
16 mu_1       0.7      0.998        0.992  0.727         1.35
17 mu_1       0.8      0.998        0.993  0.603         1.31
18 mu_1       0.9      0.991        1.00   0.389         1.65
19 mu_0       0.1      0.886        0.527  0.000866      3.86
20 mu_0       0.2      1.06         1.03   0.129         3.91
21 mu_0       0.3      0.985        0.999  0.363         1.89
22 mu_0       0.4      0.993        0.977  0.551         1.52
23 mu_0       0.5      1.01         0.997  0.667         1.36
24 mu_0       0.6      1.01         1.01   0.730         1.32
25 mu_0       0.7      1.00         0.989  0.718         1.32
26 mu_0       0.8      0.993        0.996  0.628         1.33
27 mu_0       0.9      0.999        1.01   0.542         1.52
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.646     3.93e-12  2.25e-41     26.1 
 2 mu         0.2      1.18      1.35e- 6  2.22e-27     39.9 
 3 mu         0.3      1.19      1.47e- 3  2.82e-19     14.8 
 4 mu         0.4      1.17      5.47e- 2  1.32e-13      8.66
 5 mu         0.5      1.18      2.66e- 1  2.74e- 9     11.1 
 6 mu         0.6      1.00      5.43e- 1  4.42e- 9      4.33
 7 mu         0.7      1.09      4.36e- 1  8.41e-14      6.49
 8 mu         0.8      1.18      1.11e- 1  1.13e-20      5.62
 9 mu         0.9      1.30      1.16e- 4  1.04e-32     21.8 
10 mu_1       0.1      0.979     2.57e-11  2.12e-40     38.9 
11 mu_1       0.2      1.18      4.13e- 6  1.05e-26     32.3 
12 mu_1       0.3      1.23      3.11e- 3  8.82e-19     15.5 
13 mu_1       0.4      1.16      8.34e- 2  3.10e-13      7.00
14 mu_1       0.5      1.16      2.93e- 1  5.16e- 9     11.1 
15 mu_1       0.6      0.986     6.02e- 1  9.41e-10      4.02
16 mu_1       0.7      1.11      3.56e- 1  1.53e-14      6.59
17 mu_1       0.8      1.17      8.72e- 2  1.80e-21      5.65
18 mu_1       0.9      1.30      8.00e- 5  1.48e-33     22.8 
19 mu_0       0.1      0.609     1.90e-12  1.50e-42     25.3 
20 mu_0       0.2      1.18      5.86e- 7  1.67e-28     41.7 
21 mu_0       0.3      1.18      8.14e- 4  2.41e-20     15.1 
22 mu_0       0.4      1.18      4.15e- 2  1.32e-14      9.89
23 mu_0       0.5      1.19      2.36e- 1  3.29e-10     11.1 
24 mu_0       0.6      1.03      5.37e- 1  9.64e- 9      5.41
25 mu_0       0.7      1.03      4.43e- 1  2.44e-13      6.27
26 mu_0       0.8      1.19      1.09e- 1  4.93e-20      5.94
27 mu_0       0.9      1.24      4.36e- 4  9.08e-32     15.7 
[1] "Total run time was 284.142 seconds"
