
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3416"
[1] "cluster size dist'n: "

20 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 44 45 46 47 
 4  5  1  3  1  4  8  3  4  5  3  7  4  2  3  5  3  4  5  2  3  3  2  2  4  4 
48 49 50 
 1  1  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.05279 0.39300 0.64365 1.00000 8.00000 
[1] "event indicator table: "

   0    1 
2078 1338 
[1] "treatment indicator table: "

   0    1 
1192 2224 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1698
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1718
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 153.564 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.213 0.0773
 2 mu         0.1   0.2 0.246 0.0686
 3 mu         0.1   0.3 0.270 0.0790
 4 mu         0.1   0.4 0.263 0.0826
 5 mu         0.1   0.5 0.267 0.0906
 6 mu         0.2   0.1 0.243 0.0445
 7 mu         0.2   0.2 0.322 0.0419
 8 mu         0.2   0.3 0.382 0.0488
 9 mu         0.2   0.4 0.401 0.0482
10 mu         0.2   0.5 0.424 0.0505
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      0.612       0.0595 0.00000115      12.5 
 2 mu         0.2      0.877       0.589  0.00775          5.61
 3 mu         0.3      0.973       0.924  0.149            3.35
 4 mu         0.4      1.02        0.982  0.370            2.14
 5 mu         0.5      1.02        1.01   0.578            1.62
 6 mu         0.6      1.01        1.00   0.563            1.54
 7 mu         0.7      1.00        0.994  0.727            1.37
 8 mu         0.8      0.986       0.972  0.572            1.39
 9 mu         0.9      0.993       0.934  0.447            1.78
10 mu_1       0.1      0.751       0.137  0.00000416      10.4 
11 mu_1       0.2      0.900       0.750  0.0152           4.84
12 mu_1       0.3      0.990       0.943  0.181            3.27
13 mu_1       0.4      1.03        1.00   0.413            2.13
14 mu_1       0.5      1.02        1.02   0.612            1.64
15 mu_1       0.6      1.01        0.992  0.574            1.50
16 mu_1       0.7      1.00        0.994  0.742            1.38
17 mu_1       0.8      0.984       0.974  0.548            1.39
18 mu_1       0.9      0.996       0.933  0.439            1.80
19 mu_0       0.1      0.596       0.0509 0.000000813     12.7 
20 mu_0       0.2      0.871       0.545  0.00588          5.81
21 mu_0       0.3      0.966       0.912  0.123            3.39
22 mu_0       0.4      1.02        0.961  0.341            2.14
23 mu_0       0.5      1.02        1.00   0.543            1.65
24 mu_0       0.6      1.02        1.01   0.547            1.60
25 mu_0       0.7      1.00        0.995  0.692            1.36
26 mu_0       0.8      0.993       0.977  0.667            1.38
27 mu_0       0.9      0.974       0.962  0.424            1.55
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1    0.00355     1.52e-13  1.57e-37     0.308
 2 mu         0.2    0.179       5.56e- 8  9.72e-25     8.41 
 3 mu         0.3    0.884       8.07e- 5  2.43e-17    24.9  
 4 mu         0.4    1.75        1.18e- 2  3.61e-12    19.9  
 5 mu         0.5    1.97        2.73e- 1  3.07e- 8    20.0  
 6 mu         0.6    1.43        8.25e- 1  3.99e- 5    10.9  
 7 mu         0.7    1.30        5.87e- 1  1.93e- 4    11.7  
 8 mu         0.8    1.19        3.53e- 1  2.19e- 8     8.35 
 9 mu         0.9    1.08        3.95e- 3  6.05e-16    23.3  
10 mu_1       0.1    0.0107      9.93e-13  1.47e-36     0.912
11 mu_1       0.2    0.289       1.89e- 7  4.55e-24    12.5  
12 mu_1       0.3    1.06        1.92e- 4  7.58e-17    27.7  
13 mu_1       0.4    1.86        1.99e- 2  8.43e-12    20.0  
14 mu_1       0.5    1.93        3.73e- 1  5.74e- 8    19.6  
15 mu_1       0.6    1.39        8.18e- 1  6.22e- 5     9.35 
16 mu_1       0.7    1.31        5.77e- 1  1.04e- 4    12.0  
17 mu_1       0.8    1.18        3.26e- 1  1.03e- 8     7.74 
18 mu_1       0.9    1.07        2.85e- 3  2.54e-16    24.2  
19 mu_0       0.1    0.00276     4.96e-14  1.14e-38     0.241
20 mu_0       0.2    0.151       2.22e- 8  7.93e-26     7.40 
21 mu_0       0.3    0.807       3.61e- 5  2.27e-18    23.7  
22 mu_0       0.4    1.68        6.53e- 3  3.92e-13    22.1  
23 mu_0       0.5    2.01        1.80e- 1  4.00e- 9    20.4  
24 mu_0       0.6    1.50        6.83e- 1  6.51e- 6    13.3  
25 mu_0       0.7    1.30        6.11e- 1  4.00e- 4    11.2  
26 mu_0       0.8    1.23        5.55e- 1  6.82e- 8    10.8  
27 mu_0       0.9    1.13        1.38e- 2  3.76e-15    15.2  
[1] "Total run time was 156.97 seconds"
