
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3380"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 4  1  6  7  3  3  3  4  4  5  3  2  1  1  5  4  3  2  4  3  2  6  4  2  1  7 
46 47 48 50 
 1  5  1  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0304  0.3393  0.5891  1.0000  8.0000 
[1] "event indicator table: "

   0    1 
2040 1340 
[1] "treatment indicator table: "

   0    1 
1353 2027 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1736
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 86"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1644
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 313.706 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.470 0.0963
 2 mu         0.1   0.2 0.566 0.0997
 3 mu         0.1   0.3 0.610 0.114 
 4 mu         0.1   0.4 0.660 0.110 
 5 mu         0.1   0.5 0.683 0.107 
 6 mu         0.2   0.1 0.435 0.0650
 7 mu         0.2   0.2 0.562 0.0679
 8 mu         0.2   0.3 0.607 0.0725
 9 mu         0.2   0.4 0.657 0.0639
10 mu         0.2   0.5 0.681 0.0576
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.868        0.715   0.00142      8.72
 2 mu         0.2      0.999        0.941   0.109        4.40
 3 mu         0.3      1.01         0.982   0.477        1.85
 4 mu         0.4      1.01         1.01    0.626        1.39
 5 mu         0.5      0.988        0.990   0.758        1.34
 6 mu         0.6      0.984        0.989   0.673        1.25
 7 mu         0.7      1.02         1.01    0.745        1.34
 8 mu         0.8      1.01         0.997   0.677        1.32
 9 mu         0.9      0.972        0.949   0.417        2.08
10 mu_1       0.1      0.912        0.836   0.00422      8.18
11 mu_1       0.2      1.01         0.952   0.170        3.46
12 mu_1       0.3      1.01         0.984   0.494        1.70
13 mu_1       0.4      1.01         0.998   0.633        1.37
14 mu_1       0.5      0.985        0.986   0.725        1.30
15 mu_1       0.6      0.988        0.993   0.682        1.26
16 mu_1       0.7      1.02         1.02    0.737        1.34
17 mu_1       0.8      1.00         0.993   0.675        1.32
18 mu_1       0.9      0.971        0.952   0.420        2.15
19 mu_0       0.1      0.863        0.688   0.00111      9.29
20 mu_0       0.2      0.995        0.937   0.0936       4.63
21 mu_0       0.3      1.00         0.968   0.442        1.91
22 mu_0       0.4      1.01         1.01    0.621        1.40
23 mu_0       0.5      0.992        0.990   0.791        1.37
24 mu_0       0.6      0.979        0.981   0.659        1.26
25 mu_0       0.7      1.01         1.01    0.737        1.35
26 mu_0       0.8      1.02         1.02    0.685        1.35
27 mu_0       0.9      0.974        0.954   0.289        1.59
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      24.7      7.43e-12  1.34e-36   2090.  
 2 mu         0.2       3.68     2.04e- 6  7.34e-24    148.  
 3 mu         0.3       1.21     1.74e- 3  1.61e-16     23.4 
 4 mu         0.4       1.09     9.46e- 2  2.04e-11      7.70
 5 mu         0.5       1.12     7.83e- 1  1.45e- 7      9.11
 6 mu         0.6       1.05     5.68e- 1  1.71e-10      5.03
 7 mu         0.7       1.08     6.51e- 1  5.66e-16      9.31
 8 mu         0.8       1.49     7.67e- 2  7.67e-24     13.5 
 9 mu         0.9       1.82     6.24e- 5  1.75e-37     25.8 
10 mu_1       0.1      20.0      4.84e-11  1.22e-35   1672.  
11 mu_1       0.2       2.43     6.10e- 6  3.36e-23     76.3 
12 mu_1       0.3       1.06     3.44e- 3  4.90e-16     13.8 
13 mu_1       0.4       1.09     1.29e- 1  4.68e-11      8.82
14 mu_1       0.5       1.11     6.44e- 1  2.65e- 7      8.35
15 mu_1       0.6       1.04     6.38e- 1  2.28e-11      5.36
16 mu_1       0.7       1.10     6.08e- 1  6.47e-17      9.73
17 mu_1       0.8       1.53     5.93e- 2  7.67e-25     13.2 
18 mu_1       0.9       1.80     4.19e- 5  1.55e-38     25.8 
19 mu_0       0.1      25.2      2.88e-12  1.26e-37   2137.  
20 mu_0       0.2       3.99     1.02e- 6  7.81e-25    171.  
21 mu_0       0.3       1.28     1.01e- 3  1.95e-17     27.6 
22 mu_0       0.4       1.09     6.98e- 2  2.90e-12      6.95
23 mu_0       0.5       1.14     6.02e- 1  2.47e- 8      9.87
24 mu_0       0.6       1.07     4.48e- 1  3.93e-10      4.66
25 mu_0       0.7       1.02     5.52e- 1  1.74e-15      8.32
26 mu_0       0.8       1.32     1.51e- 1  3.53e-23     14.4 
27 mu_0       0.9       1.96     2.45e- 4  1.61e-36     25.8 
[1] "Total run time was 318.077 seconds"
