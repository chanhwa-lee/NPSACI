
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3478"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 3  4  2  4  2  2  5  4  1  3  5  3  2  6  2  5  5  1  7  3  3  4  3  2  1  1 
46 47 48 49 50 
 5  2  4  2  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02922 0.31097 0.58566 1.00000 5.00000 
[1] "event indicator table: "

   0    1 
2032 1446 
[1] "treatment indicator table: "

   0    1 
1381 2097 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1770
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 59"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1708
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 190.965 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.371 0.0790
 2 mu         0.1   0.2 0.400 0.104 
 3 mu         0.1   0.3 0.436 0.107 
 4 mu         0.1   0.4 0.485 0.110 
 5 mu         0.1   0.5 0.527 0.129 
 6 mu         0.2   0.1 0.351 0.0439
 7 mu         0.2   0.2 0.412 0.0619
 8 mu         0.2   0.3 0.453 0.0590
 9 mu         0.2   0.4 0.499 0.0553
10 mu         0.2   0.5 0.559 0.0694
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.01         0.548   0.00234     10.4 
 2 mu         0.2      0.987        0.967   0.170        2.33
 3 mu         0.3      1.00         0.969   0.532        1.82
 4 mu         0.4      0.984        0.968   0.588        1.31
 5 mu         0.5      0.997        0.997   0.751        1.19
 6 mu         0.6      1.01         1.01    0.759        1.36
 7 mu         0.7      1.00         1.01    0.771        1.34
 8 mu         0.8      0.993        1.00    0.603        1.41
 9 mu         0.9      0.965        0.977   0.356        1.57
10 mu_1       0.1      1.02         0.798   0.00626      4.60
11 mu_1       0.2      0.995        0.981   0.251        1.98
12 mu_1       0.3      0.998        0.968   0.533        1.74
13 mu_1       0.4      0.983        0.970   0.586        1.25
14 mu_1       0.5      1.00         1.00    0.774        1.20
15 mu_1       0.6      1.01         1.01    0.761        1.37
16 mu_1       0.7      1.00         1.01    0.767        1.32
17 mu_1       0.8      0.992        1.00    0.599        1.44
18 mu_1       0.9      0.965        0.984   0.351        1.57
19 mu_0       0.1      1.01         0.522   0.00191     11.1 
20 mu_0       0.2      0.985        0.980   0.149        2.44
21 mu_0       0.3      1.00         0.979   0.510        1.85
22 mu_0       0.4      0.985        0.973   0.588        1.35
23 mu_0       0.5      0.994        0.994   0.727        1.20
24 mu_0       0.6      1.01         1.01    0.756        1.34
25 mu_0       0.7      1.01         1.00    0.782        1.38
26 mu_0       0.8      0.999        1.01    0.619        1.31
27 mu_0       0.9      0.962        0.960   0.402        1.63
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.292     2.47e-11  5.51e-32     16.9 
 2 mu         0.2      0.948     5.09e- 6  4.72e-20     22.8 
 3 mu         0.3      1.31      3.71e- 3  7.29e-14     12.6 
 4 mu         0.4      1.30      2.01e- 1  1.08e- 9      7.29
 5 mu         0.5      1.24      2.92e- 1  1.54e- 6      6.29
 6 mu         0.6      1.02      6.12e- 1  1.91e- 4      5.80
 7 mu         0.7      1.09      5.21e- 1  2.73e- 7      7.47
 8 mu         0.8      1.35      9.04e- 2  2.70e-12      6.70
 9 mu         0.9      1.06      1.01e- 4  8.17e-22     24.3 
10 mu_1       0.1      0.519     1.30e-10  4.61e-31     27.0 
11 mu_1       0.2      1.05      1.51e- 5  1.97e-19     18.2 
12 mu_1       0.3      1.32      7.36e- 3  2.24e-13     10.5 
13 mu_1       0.4      1.29      2.92e- 1  2.49e- 9      7.51
14 mu_1       0.5      1.22      3.80e- 1  2.85e- 6      6.02
15 mu_1       0.6      1.01      6.48e- 1  5.98e- 5      6.20
16 mu_1       0.7      1.11      4.49e- 1  7.30e- 8      7.47
17 mu_1       0.8      1.36      6.94e- 2  9.84e-13      6.90
18 mu_1       0.9      1.05      6.17e- 5  2.65e-22     25.4 
19 mu_0       0.1      0.267     1.21e-11  9.99e-33     15.8 
20 mu_0       0.2      0.922     2.41e- 6  7.37e-21     23.9 
21 mu_0       0.3      1.30      2.06e- 3  8.22e-15     13.6 
22 mu_0       0.4      1.30      1.33e- 1  1.42e-10      7.84
23 mu_0       0.5      1.26      2.24e- 1  2.44e- 7      6.57
24 mu_0       0.6      1.05      4.90e- 1  9.22e- 5      6.30
25 mu_0       0.7      1.03      5.46e- 1  7.38e- 7      7.47
26 mu_0       0.8      1.33      1.74e- 1  9.56e-12      5.91
27 mu_0       0.9      1.20      4.72e- 4  5.79e-21     14.7 
[1] "Total run time was 194.01 seconds"
