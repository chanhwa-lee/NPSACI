
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3452"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 
 1  4  3  6  2  1  5  4  3  4  6  4  3  4  4  3  4  4  4  2  3  7  2  3  1  5 
47 48 49 50 
 1  2  3  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04308 0.35859 0.63682 1.00000 5.00000 
[1] "event indicator table: "

   0    1 
2051 1401 
[1] "treatment indicator table: "

   0    1 
1367 2085 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1728
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 47"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 95"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1724
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 25"
[1] "     Cluster: 29"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 63"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 219.942 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.386 0.0835
 2 mu         0.1   0.2 0.529 0.120 
 3 mu         0.1   0.3 0.572 0.118 
 4 mu         0.1   0.4 0.582 0.102 
 5 mu         0.1   0.5 0.616 0.118 
 6 mu         0.2   0.1 0.348 0.0466
 7 mu         0.2   0.2 0.471 0.0693
 8 mu         0.2   0.3 0.522 0.0653
 9 mu         0.2   0.4 0.549 0.0571
10 mu         0.2   0.5 0.579 0.0653
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.901        0.637  0.000282      8.60
 2 mu         0.2      0.997        0.925  0.0827        2.66
 3 mu         0.3      1.04         1.01   0.259         1.99
 4 mu         0.4      1.02         1.01   0.607         1.52
 5 mu         0.5      1.01         0.998  0.761         1.30
 6 mu         0.6      0.991        0.981  0.770         1.19
 7 mu         0.7      0.988        0.984  0.710         1.41
 8 mu         0.8      0.995        1.00   0.592         1.40
 9 mu         0.9      1.01         1.02   0.397         1.75
10 mu_1       0.1      0.897        0.803  0.000865      4.01
11 mu_1       0.2      1.01         0.925  0.138         2.65
12 mu_1       0.3      1.04         1.02   0.281         1.80
13 mu_1       0.4      1.02         1.01   0.609         1.45
14 mu_1       0.5      1.00         0.990  0.776         1.25
15 mu_1       0.6      0.990        0.987  0.785         1.18
16 mu_1       0.7      0.988        0.983  0.701         1.43
17 mu_1       0.8      0.995        0.998  0.585         1.42
18 mu_1       0.9      1.01         1.03   0.386         1.75
19 mu_0       0.1      0.901        0.605  0.000218      9.47
20 mu_0       0.2      0.994        0.931  0.0684        2.67
21 mu_0       0.3      1.03         1.01   0.249         2.07
22 mu_0       0.4      1.02         0.994  0.587         1.58
23 mu_0       0.5      1.01         1.00   0.719         1.34
24 mu_0       0.6      0.993        0.986  0.748         1.21
25 mu_0       0.7      0.988        0.981  0.732         1.37
26 mu_0       0.8      0.992        0.983  0.620         1.46
27 mu_0       0.9      0.989        0.963  0.440         1.75
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.31      2.85e-12  3.12e-30    120.  
 2 mu         0.2      0.708     1.44e- 6  6.61e-20     24.7 
 3 mu         0.3      1.11      9.25e- 4  2.49e-14     19.1 
 4 mu         0.4      1.09      3.96e- 2  2.13e-10      7.05
 5 mu         0.5      1.07      4.74e- 1  2.24e- 7      7.40
 6 mu         0.6      1.08      9.42e- 1  5.03e- 7      3.34
 7 mu         0.7      1.15      7.99e- 1  3.31e-10      4.08
 8 mu         0.8      0.876     1.56e- 1  1.00e-14      6.18
 9 mu         0.9      0.729     4.03e- 4  1.68e-22     10.9 
10 mu_1       0.1      0.661     1.73e-11  2.81e-29     44.6 
11 mu_1       0.2      0.766     4.52e- 6  3.20e-19     22.9 
12 mu_1       0.3      1.13      2.05e- 3  8.06e-14     18.6 
13 mu_1       0.4      1.08      6.50e- 2  5.16e-10      7.17
14 mu_1       0.5      1.07      5.11e- 1  4.34e- 7      6.79
15 mu_1       0.6      1.09      1.03e+ 0  3.11e- 8      3.50
16 mu_1       0.7      1.15      7.14e- 1  1.75e-11      4.19
17 mu_1       0.8      0.856     1.22e- 1  4.63e-16      6.38
18 mu_1       0.9      0.741     2.83e- 4  6.90e-24     12.1 
19 mu_0       0.1      1.39      1.30e-12  0           129.  
20 mu_0       0.2      0.694     6.30e- 7  0            25.2 
21 mu_0       0.3      1.09      4.45e- 4  0            19.3 
22 mu_0       0.4      1.10      2.40e- 2  0             8.13
23 mu_0       0.5      1.08      3.43e- 1  0             8.02
24 mu_0       0.6      1.06      8.22e- 1  0             3.50
25 mu_0       0.7      1.16      7.29e- 1  0             3.85
26 mu_0       0.8      0.957     2.16e- 1  0             5.37
27 mu_0       0.9      0.628     1.20e- 3  0            10.7 
[1] "Total run time was 223.635 seconds"
