
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3419"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 
 5  4  5  2 11  1  1  2  3  5  5  1  2  4  7  2  4  3  3  4  1  4  3  4  1  2 
48 49 50 
 2  1  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04698 0.37508 0.63110 1.00000 7.00000 
[1] "event indicator table: "

   0    1 
2073 1346 
[1] "treatment indicator table: "

   0    1 
1231 2188 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1704
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1715
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 47"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 224.404 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.379 0.0872
 2 mu         0.1   0.2 0.481 0.0888
 3 mu         0.1   0.3 0.564 0.129 
 4 mu         0.1   0.4 0.590 0.110 
 5 mu         0.1   0.5 0.622 0.125 
 6 mu         0.2   0.1 0.282 0.0482
 7 mu         0.2   0.2 0.363 0.0570
 8 mu         0.2   0.3 0.422 0.0778
 9 mu         0.2   0.4 0.463 0.0676
10 mu         0.2   0.5 0.486 0.0795
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.877        0.437 0.0000210      5.07
 2 mu         0.2      0.941        0.857 0.0180         2.18
 3 mu         0.3      0.962        0.982 0.305          1.53
 4 mu         0.4      0.991        0.998 0.546          1.53
 5 mu         0.5      0.987        0.991 0.672          1.38
 6 mu         0.6      1.00         1.00  0.753          1.44
 7 mu         0.7      1.00         0.994 0.802          1.34
 8 mu         0.8      1.00         1.01  0.601          1.50
 9 mu         0.9      1.05         1.04  0.469          1.67
10 mu_1       0.1      0.937        0.715 0.0000781      4.13
11 mu_1       0.2      0.939        0.919 0.0346         2.12
12 mu_1       0.3      0.971        0.970 0.413          1.51
13 mu_1       0.4      0.991        1.01  0.545          1.52
14 mu_1       0.5      0.988        0.988 0.678          1.38
15 mu_1       0.6      1.01         1.00  0.761          1.43
16 mu_1       0.7      1.00         0.994 0.794          1.36
17 mu_1       0.8      1.00         1.01  0.601          1.49
18 mu_1       0.9      1.05         1.04  0.448          1.69
19 mu_0       0.1      0.870        0.401 0.0000147      5.17
20 mu_0       0.2      0.942        0.843 0.0139         2.25
21 mu_0       0.3      0.958        0.985 0.259          1.57
22 mu_0       0.4      0.991        0.994 0.542          1.54
23 mu_0       0.5      0.985        0.999 0.645          1.38
24 mu_0       0.6      1.00         0.994 0.731          1.47
25 mu_0       0.7      1.00         0.990 0.794          1.32
26 mu_0       0.8      1.00         0.982 0.600          1.53
27 mu_0       0.9      1.02         1.01  0.424          1.49
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      4.58      3.44e-13  6.07e-38    445.  
 2 mu         0.2      0.964     1.02e- 7  1.18e-24     18.3 
 3 mu         0.3      0.966     2.01e- 4  5.10e-17     13.9 
 4 mu         0.4      0.825     1.95e- 2  9.89e-12      8.25
 5 mu         0.5      0.911     2.17e- 1  9.12e- 8      5.41
 6 mu         0.6      1.07      6.39e- 1  6.38e- 9      4.19
 7 mu         0.7      1.13      9.17e- 1  5.61e-13      3.91
 8 mu         0.8      1.09      4.44e- 1  9.90e-19      5.15
 9 mu         0.9      0.940     3.42e- 3  1.30e-28      8.97
10 mu_1       0.1      1.56      2.70e-12  5.46e-37    131.  
11 mu_1       0.2      0.957     3.67e- 7  5.33e-24     19.2 
12 mu_1       0.3      0.936     4.64e- 4  1.53e-16     11.3 
13 mu_1       0.4      0.822     3.23e- 2  2.22e-11      7.37
14 mu_1       0.5      0.930     2.66e- 1  1.64e- 7      5.56
15 mu_1       0.6      1.08      7.50e- 1  3.13e-10      4.38
16 mu_1       0.7      1.13      7.95e- 1  2.36e-14      4.04
17 mu_1       0.8      1.09      4.12e- 1  3.64e-20      5.21
18 mu_1       0.9      0.941     2.55e- 3  4.24e-30      8.99
19 mu_0       0.1      4.91      8.15e-14  0           480.  
20 mu_0       0.2      0.966     3.56e- 8  0            22.2 
21 mu_0       0.3      0.978     1.04e- 4  0            15.0 
22 mu_0       0.4      0.827     1.09e- 2  0             8.84
23 mu_0       0.5      0.891     1.70e- 1  0             5.25
24 mu_0       0.6      1.05      5.17e- 1  0             4.42
25 mu_0       0.7      1.13      9.49e- 1  0             4.17
26 mu_0       0.8      1.11      4.04e- 1  0             4.91
27 mu_0       0.9      0.934     1.12e- 2  0             8.97
[1] "Total run time was 227.831 seconds"
