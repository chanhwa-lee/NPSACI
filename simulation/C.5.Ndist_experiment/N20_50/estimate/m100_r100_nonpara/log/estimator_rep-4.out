
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3551"
[1] "cluster size dist'n: "

20 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 
 4  5  4  2  2  2  2  4  2  3  5  4  5  1  2  3  3  3  4  5  6  6  1  3  7  2 
47 48 49 50 
 1  5  3  1 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03244 0.34171 0.58787 0.99582 5.00000 
[1] "event indicator table: "

   0    1 
2153 1398 
[1] "treatment indicator table: "

   0    1 
1305 2246 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1833
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1718
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 58"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 78"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 255.476 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.361 0.0912
 2 mu         0.1   0.2 0.517 0.0978
 3 mu         0.1   0.3 0.569 0.0948
 4 mu         0.1   0.4 0.624 0.113 
 5 mu         0.1   0.5 0.649 0.115 
 6 mu         0.2   0.1 0.381 0.0684
 7 mu         0.2   0.2 0.487 0.0663
 8 mu         0.2   0.3 0.542 0.0597
 9 mu         0.2   0.4 0.603 0.0809
10 mu         0.2   0.5 0.624 0.0771
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.976        0.450  0.000836     12.2 
 2 mu         0.2      0.994        0.929  0.0896        2.66
 3 mu         0.3      0.982        0.983  0.458         1.75
 4 mu         0.4      0.977        0.987  0.402         1.55
 5 mu         0.5      1.00         1.01   0.598         1.49
 6 mu         0.6      1.01         1.00   0.743         1.30
 7 mu         0.7      1.00         1.01   0.622         1.40
 8 mu         0.8      1.01         0.983  0.590         1.51
 9 mu         0.9      1.03         0.995  0.387         2.41
10 mu_1       0.1      0.991        0.649  0.00274       9.07
11 mu_1       0.2      0.986        0.966  0.151         2.45
12 mu_1       0.3      0.980        0.961  0.348         1.76
13 mu_1       0.4      0.978        0.987  0.426         1.48
14 mu_1       0.5      1.01         1.01   0.615         1.45
15 mu_1       0.6      1.01         1.01   0.729         1.28
16 mu_1       0.7      1.00         1.01   0.613         1.42
17 mu_1       0.8      1.01         0.984  0.598         1.54
18 mu_1       0.9      1.03         0.998  0.375         2.46
19 mu_0       0.1      0.975        0.421  0.000624     12.6 
20 mu_0       0.2      0.996        0.923  0.0743        3.05
21 mu_0       0.3      0.983        0.975  0.431         1.79
22 mu_0       0.4      0.976        0.965  0.379         1.60
23 mu_0       0.5      0.999        1.00   0.581         1.54
24 mu_0       0.6      1.02         1.01   0.764         1.33
25 mu_0       0.7      1.00         1.02   0.643         1.37
26 mu_0       0.8      1.01         0.991  0.557         1.39
27 mu_0       0.9      1.04         1.01   0.495         1.98
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.0680     4.62e-13  2.53e-32      5.55
 2 mu         0.2     0.683      5.45e- 7  3.50e-21     42.1 
 3 mu         0.3     1.19       7.47e- 4  7.68e-15     29.2 
 4 mu         0.4     1.30       8.96e- 2  6.57e-11     10.5 
 5 mu         0.5     1.18       5.83e- 1  6.63e- 8     10.7 
 6 mu         0.6     1.03       4.32e- 1  1.89e- 5      6.32
 7 mu         0.7     0.970      5.31e- 1  1.50e- 6      7.24
 8 mu         0.8     1.17       1.86e- 1  1.31e-11     11.3 
 9 mu         0.9     1.13       3.69e- 4  5.02e-21     15.3 
10 mu_1       0.1     0.161      3.12e-12  2.28e-31     12.5 
11 mu_1       0.2     0.871      1.71e- 6  1.62e-20     47.5 
12 mu_1       0.3     1.23       1.56e- 3  2.37e-14     22.0 
13 mu_1       0.4     1.30       1.41e- 1  1.64e-10     11.8 
14 mu_1       0.5     1.16       4.32e- 1  1.33e- 7      9.68
15 mu_1       0.6     1.01       4.52e- 1  3.15e- 5      6.23
16 mu_1       0.7     0.964      4.69e- 1  6.86e- 7      7.39
17 mu_1       0.8     1.18       1.48e- 1  5.24e-12     11.3 
18 mu_1       0.9     1.14       2.42e- 4  1.78e-21     16.2 
19 mu_0       0.1     0.0576     1.67e-13  0             4.78
20 mu_0       0.2     0.636      2.54e- 7  0            40.7 
21 mu_0       0.3     1.17       4.14e- 4  0            32.3 
22 mu_0       0.4     1.31       5.56e- 2  0             9.56
23 mu_0       0.5     1.21       5.30e- 1  0            11.8 
24 mu_0       0.6     1.06       5.14e- 1  0             6.45
25 mu_0       0.7     0.983      4.97e- 1  0             6.89
26 mu_0       0.8     1.11       2.43e- 1  0            11.0 
27 mu_0       0.9     1.07       9.16e- 4  0            13.0 
[1] "Total run time was 259.465 seconds"
