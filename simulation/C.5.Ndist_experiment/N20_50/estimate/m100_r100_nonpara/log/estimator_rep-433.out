
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3388"
[1] "cluster size dist'n: "

21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 
 5  3  3  4  5  4  4  4  3  5  2  7  5  3  3  1  5  3  4  4  2  3  1  3  1  1 
47 48 49 50 
 2  5  1  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.05309 0.39753 0.64926 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
2059 1329 
[1] "treatment indicator table: "

   0    1 
1185 2203 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1697
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 34"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1691
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 18"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 292.394 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.366 0.211
 2 mu         0.1   0.2 0.448 0.220
 3 mu         0.1   0.3 0.544 0.256
 4 mu         0.1   0.4 0.579 0.264
 5 mu         0.1   0.5 0.613 0.274
 6 mu         0.2   0.1 0.248 0.132
 7 mu         0.2   0.2 0.327 0.115
 8 mu         0.2   0.3 0.402 0.138
 9 mu         0.2   0.4 0.434 0.129
10 mu         0.2   0.5 0.464 0.128
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      1.21        0.0493 0.000000112      33.8 
 2 mu         0.2      1.01        0.632  0.00113           7.61
 3 mu         0.3      0.937       0.848  0.0640            2.97
 4 mu         0.4      0.994       1.00   0.393             1.79
 5 mu         0.5      1.02        1.04   0.707             1.37
 6 mu         0.6      1.01        1.01   0.821             1.22
 7 mu         0.7      0.993       0.979  0.776             1.33
 8 mu         0.8      0.977       0.989  0.659             1.25
 9 mu         0.9      0.999       1.01   0.355             1.96
10 mu_1       0.1      1.07        0.115  0.000000472      20.5 
11 mu_1       0.2      0.946       0.772  0.00240           5.72
12 mu_1       0.3      0.945       0.882  0.0932            2.97
13 mu_1       0.4      1.00        1.02   0.458             1.60
14 mu_1       0.5      1.02        1.04   0.701             1.38
15 mu_1       0.6      1.01        1.01   0.823             1.22
16 mu_1       0.7      0.991       0.979  0.779             1.32
17 mu_1       0.8      0.976       0.987  0.634             1.25
18 mu_1       0.9      1.00        0.995  0.351             2.00
19 mu_0       0.1      1.23        0.0408 0.0000000724     37.5 
20 mu_0       0.2      1.03        0.632  0.000810          8.08
21 mu_0       0.3      0.933       0.875  0.0514            2.97
22 mu_0       0.4      0.988       1.01   0.350             1.91
23 mu_0       0.5      1.02        1.04   0.707             1.42
24 mu_0       0.6      1.02        1.01   0.799             1.24
25 mu_0       0.7      0.997       0.982  0.769             1.37
26 mu_0       0.8      0.977       0.977  0.739             1.23
27 mu_0       0.9      0.990       0.997  0.394             1.53
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.0410     7.80e-13  1.51e-41      2.91
 2 mu         0.2     1.04       3.31e- 7  1.49e-27     54.3 
 3 mu         0.3     1.53       1.62e- 4  1.89e-19     49.0 
 4 mu         0.4     1.27       1.00e- 2  8.85e-14     21.1 
 5 mu         0.5     1.23       2.28e- 1  1.84e- 9     10.1 
 6 mu         0.6     1.07       7.53e- 1  4.95e- 6      7.53
 7 mu         0.7     1.01       1.00e+ 0  4.93e- 8      4.06
 8 mu         0.8     0.995      3.02e- 1  1.93e-13     10.7 
 9 mu         0.9     1.40       2.07e- 3  3.65e-23     30.2 
10 mu_1       0.1     0.0993     5.19e-12  1.42e-40      6.61
11 mu_1       0.2     1.33       1.05e- 6  7.00e-27     61.7 
12 mu_1       0.3     1.50       4.00e- 4  5.91e-19     48.5 
13 mu_1       0.4     1.28       1.80e- 2  2.08e-13     15.7 
14 mu_1       0.5     1.22       2.79e- 1  3.45e- 9     10.1 
15 mu_1       0.6     1.05       8.30e- 1  7.76e- 6      7.06
16 mu_1       0.7     1.00       9.47e- 1  1.60e- 8      4.40
17 mu_1       0.8     0.998      2.48e- 1  5.48e-14     11.2 
18 mu_1       0.9     1.42       1.47e- 3  9.21e-24     31.9 
19 mu_0       0.1     0.0345     2.90e-13  1.00e-42      2.50
20 mu_0       0.2     0.971      1.20e- 7  1.12e-28     52.5 
21 mu_0       0.3     1.54       6.01e- 5  1.62e-20     49.2 
22 mu_0       0.4     1.27       5.23e- 3  8.85e-15     24.7 
23 mu_0       0.5     1.23       1.52e- 1  2.20e-10     10.1 
24 mu_0       0.6     1.10       6.17e- 1  7.43e- 7      8.24
25 mu_0       0.7     1.02       8.98e- 1  1.27e- 7      3.27
26 mu_0       0.8     0.981      3.44e- 1  7.45e-13      8.66
27 mu_0       0.9     1.23       6.83e- 3  2.82e-22     14.4 
[1] "Total run time was 297.446 seconds"
