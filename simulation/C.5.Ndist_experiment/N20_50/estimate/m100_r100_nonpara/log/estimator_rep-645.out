
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3512"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 1  3  1  6  5  3  2  4  3  2  2  7  2  2  6  1  1  8  2  3  6  3  4  3  4  1 
46 47 48 49 50 
 2  2  6  4  1 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03238 0.34404 0.61060 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
2062 1450 
[1] "treatment indicator table: "

   0    1 
1320 2192 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1748
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1764
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 239.528 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.385 0.0791
 2 mu         0.1   0.2 0.468 0.0948
 3 mu         0.1   0.3 0.539 0.0966
 4 mu         0.1   0.4 0.617 0.107 
 5 mu         0.1   0.5 0.636 0.127 
 6 mu         0.2   0.1 0.326 0.0402
 7 mu         0.2   0.2 0.396 0.0478
 8 mu         0.2   0.3 0.454 0.0438
 9 mu         0.2   0.4 0.516 0.0473
10 mu         0.2   0.5 0.541 0.0603
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.04         0.297  0.000330      9.77
 2 mu         0.2      0.918        0.860  0.118         2.17
 3 mu         0.3      0.980        0.916  0.389         1.95
 4 mu         0.4      1.02         1.02   0.604         1.70
 5 mu         0.5      1.02         1.01   0.662         1.38
 6 mu         0.6      1.00         0.992  0.787         1.35
 7 mu         0.7      0.985        0.974  0.747         1.38
 8 mu         0.8      1.02         0.996  0.610         1.45
 9 mu         0.9      1.04         1.03   0.439         2.03
10 mu_1       0.1      1.03         0.501  0.000967      6.57
11 mu_1       0.2      0.911        0.825  0.179         2.24
12 mu_1       0.3      0.995        0.960  0.403         1.83
13 mu_1       0.4      1.02         1.01   0.637         1.66
14 mu_1       0.5      1.02         1.02   0.693         1.36
15 mu_1       0.6      0.997        0.989  0.794         1.37
16 mu_1       0.7      0.986        0.975  0.733         1.36
17 mu_1       0.8      1.02         1.01   0.604         1.48
18 mu_1       0.9      1.05         1.03   0.433         2.07
19 mu_0       0.1      1.04         0.272  0.000260     10.2 
20 mu_0       0.2      0.920        0.848  0.103         2.19
21 mu_0       0.3      0.974        0.914  0.383         2.00
22 mu_0       0.4      1.01         0.995  0.582         1.73
23 mu_0       0.5      1.02         1.01   0.632         1.41
24 mu_0       0.6      1.01         1.00   0.778         1.31
25 mu_0       0.7      0.982        0.971  0.752         1.42
26 mu_0       0.8      1.01         1.01   0.626         1.38
27 mu_0       0.9      1.03         0.983  0.494         1.74
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1    0.00946     3.09e-12  3.95e-40     0.387
 2 mu         0.2    0.406       1.06e- 6  1.95e-26    11.2  
 3 mu         0.3    1.07        1.38e- 3  1.65e-18    14.2  
 4 mu         0.4    1.16        6.10e- 2  5.79e-13     8.58 
 5 mu         0.5    1.02        4.24e- 1  9.62e- 9     8.71 
 6 mu         0.6    1.10        7.97e- 1  2.16e- 5     4.97 
 7 mu         0.7    1.32        7.98e- 1  1.75e- 8     7.31 
 8 mu         0.8    1.02        2.46e- 1  3.98e-14     7.17 
 9 mu         0.9    1.36        4.50e- 4  2.38e-24    42.6  
10 mu_1       0.1    0.0267      1.86e-11  3.71e-39     1.02 
11 mu_1       0.2    0.589       3.22e- 6  9.16e-26    14.0  
12 mu_1       0.3    1.17        2.98e- 3  5.15e-18    14.1  
13 mu_1       0.4    1.13        9.76e- 2  1.36e-12     8.26 
14 mu_1       0.5    1.01        4.87e- 1  1.81e- 8     8.13 
15 mu_1       0.6    1.12        7.48e- 1  3.38e- 5     5.08 
16 mu_1       0.7    1.32        8.37e- 1  6.26e- 9     7.53 
17 mu_1       0.8    0.987       1.96e- 1  1.24e-14     7.13 
18 mu_1       0.9    1.38        3.21e- 4  6.61e-25    44.4  
19 mu_0       0.1    0.00755     1.20e-12  2.69e-41     0.316
20 mu_0       0.2    0.360       5.17e- 7  1.49e-27    10.5  
21 mu_0       0.3    1.03        6.97e- 4  1.44e-19    14.9  
22 mu_0       0.4    1.17        3.38e- 2  5.91e-14     9.90 
23 mu_0       0.5    1.04        3.60e- 1  1.18e- 9     9.29 
24 mu_0       0.6    1.07        7.08e- 1  3.31e- 6     4.81 
25 mu_0       0.7    1.32        9.59e- 1  4.38e- 8     6.80 
26 mu_0       0.8    1.13        3.40e- 1  1.49e-13     7.31 
27 mu_0       0.9    1.13        1.79e- 3  1.79e-23    26.1  
[1] "Total run time was 244.421 seconds"
