
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3447"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 42 43 44 45 46 
 5  3  4  2  1  3  6  4  2  4  3  4  3  3  3  1  5  4  3  3  6  3  5  2  4  6 
47 48 49 50 
 2  4  1  1 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04058 0.35251 0.62614 1.00000 5.72806 
[1] "event indicator table: "

   0    1 
2049 1398 
[1] "treatment indicator table: "

   0    1 
1183 2264 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1757
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1690
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 258.875 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.365 0.0946
 2 mu         0.1   0.2 0.432 0.112 
 3 mu         0.1   0.3 0.530 0.136 
 4 mu         0.1   0.4 0.549 0.146 
 5 mu         0.1   0.5 0.606 0.148 
 6 mu         0.2   0.1 0.299 0.0468
 7 mu         0.2   0.2 0.366 0.0628
 8 mu         0.2   0.3 0.461 0.0666
 9 mu         0.2   0.4 0.513 0.0712
10 mu         0.2   0.5 0.547 0.0658
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.853        0.125 0.0000000184     13.8 
 2 mu         0.2      0.884        0.740 0.000462          5.67
 3 mu         0.3      0.991        0.948 0.0467            2.69
 4 mu         0.4      0.999        0.955 0.413             1.69
 5 mu         0.5      1.01         0.997 0.689             1.71
 6 mu         0.6      1.02         1.01  0.728             1.40
 7 mu         0.7      1.01         1.02  0.805             1.31
 8 mu         0.8      0.989        0.990 0.690             1.21
 9 mu         0.9      0.989        1.01  0.410             1.85
10 mu_1       0.1      0.759        0.266 0.0000000810      7.80
11 mu_1       0.2      0.932        0.823 0.00103           5.44
12 mu_1       0.3      0.997        0.971 0.0712            2.09
13 mu_1       0.4      1.00         0.954 0.494             1.69
14 mu_1       0.5      1.01         1.01  0.701             1.69
15 mu_1       0.6      1.02         1.02  0.738             1.41
16 mu_1       0.7      1.01         1.02  0.802             1.30
17 mu_1       0.8      0.988        0.987 0.680             1.24
18 mu_1       0.9      0.989        1.01  0.397             1.87
19 mu_0       0.1      0.863        0.105 0.0000000115     14.7 
20 mu_0       0.2      0.872        0.701 0.000319          5.72
21 mu_0       0.3      0.989        0.955 0.0362            2.95
22 mu_0       0.4      0.998        0.971 0.359             1.69
23 mu_0       0.5      1.01         0.994 0.675             1.74
24 mu_0       0.6      1.02         1.00  0.715             1.39
25 mu_0       0.7      1.02         1.01  0.786             1.35
26 mu_0       0.8      0.993        0.993 0.729             1.23
27 mu_0       0.9      0.987        1.00  0.534             1.69
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1    0.00871     1.29e-12  7.08e-38     0.821
 2 mu         0.2    0.170       6.32e- 7  4.37e-25     8.98 
 3 mu         0.3    0.755       1.04e- 3  1.09e-17    13.8  
 4 mu         0.4    1.43        7.96e- 2  1.62e-12    18.7  
 5 mu         0.5    1.53        7.11e- 1  1.38e- 8    10.7  
 6 mu         0.6    1.16        6.38e- 1  1.79e- 5     5.50 
 7 mu         0.7    0.937       6.23e- 1  5.33e- 5     8.01 
 8 mu         0.8    1.10        2.02e- 1  4.64e- 9     4.89 
 9 mu         0.9    1.07        1.23e- 3  1.01e-16    10.5  
10 mu_1       0.1    0.0253      7.35e-12  6.62e-37     2.35 
11 mu_1       0.2    0.276       1.97e- 6  2.04e-24    12.8  
12 mu_1       0.3    0.925       2.04e- 3  3.41e-17    13.1  
13 mu_1       0.4    1.50        1.26e- 1  3.79e-12    19.0  
14 mu_1       0.5    1.49        8.71e- 1  2.58e- 8     9.36 
15 mu_1       0.6    1.11        5.93e- 1  2.80e- 5     5.37 
16 mu_1       0.7    0.929       6.04e- 1  2.66e- 5     8.10 
17 mu_1       0.8    1.11        1.52e- 1  2.02e- 9     5.01 
18 mu_1       0.9    1.05        8.13e- 4  3.92e-17    10.9  
19 mu_0       0.1    0.00687     6.11e-13  5.13e-39     0.651
20 mu_0       0.2    0.143       2.97e- 7  3.56e-26     8.01 
21 mu_0       0.3    0.682       6.10e- 4  1.02e-18    14.1  
22 mu_0       0.4    1.39        4.86e- 2  1.76e-13    18.5  
23 mu_0       0.5    1.57        5.57e- 1  1.80e- 9    12.7  
24 mu_0       0.6    1.23        7.48e- 1  2.93e- 6     6.05 
25 mu_0       0.7    0.954       5.17e- 1  1.16e- 4     7.78 
26 mu_0       0.8    1.05        3.49e- 1  1.51e- 8     4.39 
27 mu_0       0.9    1.23        4.98e- 3  6.58e-16    10.8  
[1] "Total run time was 263.748 seconds"
