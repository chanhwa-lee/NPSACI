
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3357"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 4  5  1  2  7  6  2  3  4  4  1  4  5  4  2  5  6  1  2  2  2  4  4  4  2  4 
46 47 48 49 50 
 3  2  2  1  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02999 0.33818 0.61114 1.00000 7.00000 
[1] "event indicator table: "

   0    1 
2005 1352 
[1] "treatment indicator table: "

   0    1 
1229 2128 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1633
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1724
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 216.592 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.552 0.135 
 2 mu         0.1   0.2 0.685 0.174 
 3 mu         0.1   0.3 0.756 0.195 
 4 mu         0.1   0.4 0.803 0.209 
 5 mu         0.1   0.5 0.853 0.215 
 6 mu         0.2   0.1 0.375 0.0461
 7 mu         0.2   0.2 0.447 0.0558
 8 mu         0.2   0.3 0.503 0.0582
 9 mu         0.2   0.4 0.549 0.0608
10 mu         0.2   0.5 0.582 0.0586
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.47         0.497 0.0000931     26.2 
 2 mu         0.2      1.09         0.925 0.0388         5.75
 3 mu         0.3      1.03         1.01  0.219          2.02
 4 mu         0.4      0.999        0.986 0.507          1.48
 5 mu         0.5      0.984        0.974 0.529          1.48
 6 mu         0.6      0.986        0.978 0.687          1.38
 7 mu         0.7      0.994        0.995 0.699          1.24
 8 mu         0.8      1.00         0.986 0.684          1.35
 9 mu         0.9      1.03         1.04  0.435          1.65
10 mu_1       0.1      1.33         0.707 0.000283      21.2 
11 mu_1       0.2      1.05         0.970 0.0609         4.30
12 mu_1       0.3      1.03         1.02  0.272          1.88
13 mu_1       0.4      0.993        0.979 0.543          1.45
14 mu_1       0.5      0.983        0.972 0.544          1.50
15 mu_1       0.6      0.987        0.985 0.703          1.36
16 mu_1       0.7      0.995        0.986 0.696          1.27
17 mu_1       0.8      1.01         0.996 0.677          1.38
18 mu_1       0.9      1.03         1.04  0.427          1.65
19 mu_0       0.1      1.48         0.460 0.0000719     26.7 
20 mu_0       0.2      1.11         0.907 0.0332         6.22
21 mu_0       0.3      1.03         1.00  0.196          2.14
22 mu_0       0.4      1.00         0.977 0.483          1.56
23 mu_0       0.5      0.986        0.970 0.515          1.47
24 mu_0       0.6      0.984        0.980 0.663          1.41
25 mu_0       0.7      0.992        0.981 0.705          1.24
26 mu_0       0.8      1.00         0.985 0.709          1.36
27 mu_0       0.9      1.03         1.01  0.505          1.60
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.0414     3.03e-13  1.35e-38      2.01
 2 mu         0.2     1.29       3.07e- 7  1.67e-25     75.0 
 3 mu         0.3     2.23       4.05e- 4  6.26e-18     69.2 
 4 mu         0.4     1.42       3.28e- 2  1.24e-12     18.1 
 5 mu         0.5     1.00       3.09e- 1  1.32e- 8      6.85
 6 mu         0.6     0.995      5.25e- 1  7.85e- 6      6.94
 7 mu         0.7     0.989      5.00e- 1  5.68e- 8      5.74
 8 mu         0.8     0.888      2.45e- 1  1.47e-13      5.05
 9 mu         0.9     1.32       2.43e- 3  9.92e-24     18.0 
10 mu_1       0.1     0.105      2.05e-12  1.27e-37      4.91
11 mu_1       0.2     1.69       9.68e- 7  7.82e-25     91.7 
12 mu_1       0.3     2.18       9.73e- 4  1.95e-17     56.4 
13 mu_1       0.4     1.33       5.50e- 2  2.90e-12     13.6 
14 mu_1       0.5     0.981      3.63e- 1  2.47e- 8      6.49
15 mu_1       0.6     1.01       4.96e- 1  1.31e- 5      7.36
16 mu_1       0.7     0.977      4.89e- 1  2.15e- 8      5.47
17 mu_1       0.8     0.894      2.12e- 1  4.89e-14      5.11
18 mu_1       0.9     1.34       1.74e- 3  2.93e-24     18.7 
19 mu_0       0.1     0.0344     1.09e-13  0             1.69
20 mu_0       0.2     1.19       1.42e- 7  0            70.8 
21 mu_0       0.3     2.25       1.62e- 4  0            74.7 
22 mu_0       0.4     1.48       1.80e- 2  0            21.1 
23 mu_0       0.5     1.02       2.06e- 1  0             7.21
24 mu_0       0.6     0.976      4.96e- 1  0             6.31
25 mu_0       0.7     1.02       4.70e- 1  0             6.38
26 mu_0       0.8     0.861      3.96e- 1  0             4.84
27 mu_0       0.9     1.19       5.36e- 3  0            14.8 
[1] "Total run time was 220.482 seconds"
