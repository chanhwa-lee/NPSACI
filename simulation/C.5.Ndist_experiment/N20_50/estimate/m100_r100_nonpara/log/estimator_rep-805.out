
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3431"
[1] "cluster size dist'n: "

20 21 22 23 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 
 1  5  5  3  3  1  4  3  4  7  2  5  4  6  1  3  3  9  5  2  4  3  1  2  2  4 
47 48 49 50 
 3  3  1  1 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.05429 0.38782 0.64775 1.00000 5.00000 
[1] "event indicator table: "

   0    1 
2057 1374 
[1] "treatment indicator table: "

   0    1 
1206 2225 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1737
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 19"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1694
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 82"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 243.032 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.495 0.131 
 2 mu         0.1   0.2 0.687 0.188 
 3 mu         0.1   0.3 0.702 0.173 
 4 mu         0.1   0.4 0.713 0.171 
 5 mu         0.1   0.5 0.739 0.175 
 6 mu         0.2   0.1 0.346 0.0618
 7 mu         0.2   0.2 0.475 0.0864
 8 mu         0.2   0.3 0.503 0.0764
 9 mu         0.2   0.4 0.530 0.0760
10 mu         0.2   0.5 0.554 0.0797
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.19         0.389 0.000118      12.5 
 2 mu         0.2      0.994        0.823 0.0187         3.30
 3 mu         0.3      0.979        0.943 0.195          2.06
 4 mu         0.4      0.977        0.983 0.437          1.83
 5 mu         0.5      0.989        0.965 0.573          1.59
 6 mu         0.6      0.998        0.983 0.786          1.47
 7 mu         0.7      0.998        0.997 0.708          1.28
 8 mu         0.8      0.995        1.00  0.621          1.31
 9 mu         0.9      1.00         0.993 0.510          1.62
10 mu_1       0.1      1.04         0.559 0.000498       8.51
11 mu_1       0.2      0.979        0.911 0.0409         2.49
12 mu_1       0.3      0.977        0.961 0.297          2.01
13 mu_1       0.4      0.980        0.966 0.450          1.77
14 mu_1       0.5      0.990        0.969 0.621          1.57
15 mu_1       0.6      1.00         0.981 0.789          1.48
16 mu_1       0.7      0.998        1.00  0.704          1.27
17 mu_1       0.8      0.996        1.00  0.611          1.32
18 mu_1       0.9      1.00         0.995 0.500          1.63
19 mu_0       0.1      1.20         0.352 0.0000756     13.3 
20 mu_0       0.2      0.998        0.805 0.0131         3.65
21 mu_0       0.3      0.980        0.949 0.152          2.08
22 mu_0       0.4      0.975        0.969 0.428          1.87
23 mu_0       0.5      0.988        0.970 0.526          1.60
24 mu_0       0.6      0.996        0.984 0.750          1.46
25 mu_0       0.7      0.998        0.985 0.718          1.31
26 mu_0       0.8      0.994        1.00  0.663          1.25
27 mu_0       0.9      1.01         0.994 0.601          1.61
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.0348     1.58e-13  8.81e-36      1.84
 2 mu         0.2     0.537      1.38e- 7  2.15e-24     14.0 
 3 mu         0.3     1.29       1.95e- 4  9.26e-18     19.1 
 4 mu         0.4     1.39       1.92e- 2  4.44e-13     19.3 
 5 mu         0.5     1.28       2.59e- 1  1.78e- 9     11.4 
 6 mu         0.6     1.06       4.31e- 1  1.45e- 6      6.22
 7 mu         0.7     1.06       7.71e- 1  2.34e- 7      6.36
 8 mu         0.8     1.16       3.82e- 1  1.80e-12      7.24
 9 mu         0.9     0.861      6.89e- 3  8.61e-22     15.3 
10 mu_1       0.1     0.0899     1.23e-12  8.58e-35      4.38
11 mu_1       0.2     0.757      5.09e- 7  1.05e-23     18.7 
12 mu_1       0.3     1.38       4.48e- 4  3.01e-17     17.0 
13 mu_1       0.4     1.37       3.24e- 2  1.08e-12     19.0 
14 mu_1       0.5     1.24       3.16e- 1  3.47e- 9     11.4 
15 mu_1       0.6     1.04       4.88e- 1  2.36e- 6      5.60
16 mu_1       0.7     1.07       7.18e- 1  8.93e- 8      6.81
17 mu_1       0.8     1.15       3.13e- 1  6.00e-13      7.40
18 mu_1       0.9     0.866      5.23e- 3  2.55e-22     15.5 
19 mu_0       0.1     0.0287     3.91e-14  0             1.56
20 mu_0       0.2     0.482      4.52e- 8  0            12.9 
21 mu_0       0.3     1.25       8.63e- 5  0            20.0 
22 mu_0       0.4     1.41       1.03e- 2  0            19.5 
23 mu_0       0.5     1.31       2.18e- 1  0            12.3 
24 mu_0       0.6     1.09       3.74e- 1  0             7.14
25 mu_0       0.7     1.02       7.73e- 1  0             5.30
26 mu_0       0.8     1.22       3.66e- 1  0             7.61
27 mu_0       0.9     0.816      1.34e- 2  0            13.5 
[1] "Total run time was 247.602 seconds"
