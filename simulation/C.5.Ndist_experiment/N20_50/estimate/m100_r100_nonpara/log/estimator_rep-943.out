
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3486"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 6  3  1  2  2  4  8  3  3  2  2  3  1  5  4  1  1  6  3  3  5  3  5  2  5  3 
46 47 48 49 50 
 2  5  1  3  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02678 0.32028 0.58853 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
2005 1481 
[1] "treatment indicator table: "

   0    1 
1324 2162 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1731
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 21"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 35"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1755
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 44"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 229.043 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.623 0.212 
 2 mu         0.1   0.2 0.751 0.261 
 3 mu         0.1   0.3 0.856 0.298 
 4 mu         0.1   0.4 0.911 0.322 
 5 mu         0.1   0.5 0.975 0.330 
 6 mu         0.2   0.1 0.379 0.0449
 7 mu         0.2   0.2 0.491 0.0521
 8 mu         0.2   0.3 0.577 0.0629
 9 mu         0.2   0.4 0.622 0.0694
10 mu         0.2   0.5 0.669 0.0703
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.43         0.302 0.0000738     47.2 
 2 mu         0.2      0.973        0.816 0.0506         3.65
 3 mu         0.3      0.986        0.975 0.376          1.94
 4 mu         0.4      0.984        0.999 0.503          1.48
 5 mu         0.5      0.997        0.989 0.641          1.39
 6 mu         0.6      1.00         0.991 0.793          1.33
 7 mu         0.7      1.00         0.999 0.639          1.31
 8 mu         0.8      1.00         1.00  0.721          1.32
 9 mu         0.9      1.08         1.05  0.406          2.40
10 mu_1       0.1      1.24         0.510 0.000235      28.9 
11 mu_1       0.2      0.975        0.922 0.0840         2.80
12 mu_1       0.3      0.991        1.01  0.390          1.89
13 mu_1       0.4      0.983        0.989 0.550          1.41
14 mu_1       0.5      0.999        0.993 0.641          1.39
15 mu_1       0.6      1.00         0.991 0.786          1.31
16 mu_1       0.7      1.00         0.998 0.632          1.30
17 mu_1       0.8      1.00         1.00  0.706          1.34
18 mu_1       0.9      1.08         1.05  0.390          2.47
19 mu_0       0.1      1.45         0.279 0.0000559     49.3 
20 mu_0       0.2      0.973        0.777 0.0422         3.87
21 mu_0       0.3      0.984        0.972 0.319          1.99
22 mu_0       0.4      0.984        1.02  0.472          1.56
23 mu_0       0.5      0.996        0.994 0.642          1.38
24 mu_0       0.6      1.00         0.997 0.794          1.36
25 mu_0       0.7      1.00         1.00  0.656          1.34
26 mu_0       0.8      0.992        0.996 0.711          1.27
27 mu_0       0.9      1.05         1.03  0.516          1.83
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      7.23      2.09e-12  1.75e-38    635.  
 2 mu         0.2      4.65      2.01e- 6  6.84e-26    188.  
 3 mu         0.3      1.74      2.08e- 3  1.49e-18     39.8 
 4 mu         0.4      0.941     8.09e- 2  2.26e-13      7.10
 5 mu         0.5      0.998     4.12e- 1  2.21e- 9      5.66
 6 mu         0.6      1.18      7.81e- 1  6.65e- 7      7.19
 7 mu         0.7      1.12      8.54e- 1  8.72e-11      4.55
 8 mu         0.8      1.19      2.52e- 1  3.44e-17      8.00
 9 mu         0.9      1.34      1.33e- 3  1.61e-28     23.3 
10 mu_1       0.1      7.67      1.27e-11  1.71e-37    615.  
11 mu_1       0.2      3.63      6.07e- 6  3.34e-25    135.  
12 mu_1       0.3      1.47      4.46e- 3  4.85e-18     33.9 
13 mu_1       0.4      0.905     1.15e- 1  5.51e-13      6.61
14 mu_1       0.5      1.03      5.09e- 1  4.32e- 9      5.95
15 mu_1       0.6      1.18      9.25e- 1  1.66e- 7      6.81
16 mu_1       0.7      1.11      8.78e- 1  2.03e-11      4.49
17 mu_1       0.8      1.19      2.00e- 1  7.33e-18      8.20
18 mu_1       0.9      1.35      9.95e- 4  3.04e-29     25.3 
19 mu_0       0.1      7.18      9.12e-13  4.52e-40    637.  
20 mu_0       0.2      4.90      9.90e- 7  1.99e-27    212.  
21 mu_0       0.3      1.86      9.63e- 4  4.95e-20     42.4 
22 mu_0       0.4      0.965     5.47e- 2  8.74e-15      8.20
23 mu_0       0.5      0.965     3.94e- 1  1.03e-10      5.66
24 mu_0       0.6      1.18      7.61e- 1  2.18e- 7      7.77
25 mu_0       0.7      1.15      9.70e- 1  2.41e-10      4.70
26 mu_0       0.8      1.15      4.00e- 1  1.43e-16      8.17
27 mu_0       0.9      1.28      4.30e- 3  1.33e-27     12.9 
[1] "Total run time was 232.506 seconds"
