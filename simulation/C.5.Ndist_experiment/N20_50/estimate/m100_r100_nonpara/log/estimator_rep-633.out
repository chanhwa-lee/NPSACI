
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3331"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 
 3  1  5  4  8  4  6  4  3  4  7  2  1  3  2  3  5  5  4  4  3  2  2  2  2  1 
47 48 49 50 
 3  3  2  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03594 0.35087 0.61770 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
1996 1335 
[1] "treatment indicator table: "

   0    1 
1186 2145 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1670
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1661
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 485.092 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.517 0.106 
 2 mu         0.1   0.2 0.659 0.133 
 3 mu         0.1   0.3 0.703 0.136 
 4 mu         0.1   0.4 0.772 0.148 
 5 mu         0.1   0.5 0.815 0.159 
 6 mu         0.2   0.1 0.376 0.0419
 7 mu         0.2   0.2 0.484 0.0465
 8 mu         0.2   0.3 0.533 0.0479
 9 mu         0.2   0.4 0.593 0.0576
10 mu         0.2   0.5 0.630 0.0569
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.21         0.397 0.0000477     18.2 
 2 mu         0.2      1.00         0.944 0.0198         5.49
 3 mu         0.3      1.02         0.964 0.229          2.47
 4 mu         0.4      1.04         1.01  0.346          1.80
 5 mu         0.5      1.01         1.02  0.593          1.56
 6 mu         0.6      0.991        0.985 0.649          1.46
 7 mu         0.7      0.985        0.987 0.685          1.32
 8 mu         0.8      0.974        0.966 0.678          1.36
 9 mu         0.9      0.980        0.972 0.529          1.71
10 mu_1       0.1      1.04         0.651 0.000163       9.81
11 mu_1       0.2      1.00         0.931 0.0359         3.72
12 mu_1       0.3      1.03         0.976 0.237          1.95
13 mu_1       0.4      1.03         1.01  0.399          1.75
14 mu_1       0.5      1.00         1.01  0.646          1.57
15 mu_1       0.6      0.991        0.987 0.657          1.44
16 mu_1       0.7      0.984        0.991 0.683          1.33
17 mu_1       0.8      0.974        0.974 0.680          1.35
18 mu_1       0.9      0.980        0.968 0.531          1.76
19 mu_0       0.1      1.22         0.356 0.0000348     19.1 
20 mu_0       0.2      1.01         0.948 0.0158         5.94
21 mu_0       0.3      1.02         0.963 0.200          2.69
22 mu_0       0.4      1.04         1.01  0.310          1.83
23 mu_0       0.5      1.01         1.01  0.541          1.55
24 mu_0       0.6      0.992        0.991 0.636          1.49
25 mu_0       0.7      0.988        0.993 0.690          1.32
26 mu_0       0.8      0.975        0.973 0.649          1.40
27 mu_0       0.9      0.975        0.958 0.502          1.52
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.696     1.76e-12  9.71e-46     54.9 
 2 mu         0.2      1.60      2.49e- 7  4.86e-31     50.8 
 3 mu         0.3      1.39      2.74e- 4  1.81e-22     37.6 
 4 mu         0.4      0.878     2.87e- 2  2.05e-16      7.79
 5 mu         0.5      0.909     3.77e- 1  9.58e-12      7.65
 6 mu         0.6      1.26      7.04e- 1  5.81e- 8      7.49
 7 mu         0.7      1.41      8.72e- 1  5.76e- 9     12.0 
 8 mu         0.8      1.32      3.42e- 1  1.15e-13      8.09
 9 mu         0.9      1.17      3.11e- 3  5.27e-23     20.9 
10 mu_1       0.1      0.999     1.34e-11  9.51e-45     68.6 
11 mu_1       0.2      1.71      8.95e- 7  2.38e-30     53.5 
12 mu_1       0.3      1.27      6.06e- 4  5.90e-22     32.0 
13 mu_1       0.4      0.838     4.71e- 2  5.02e-16      7.32
14 mu_1       0.5      0.939     4.86e- 1  1.88e-11      8.13
15 mu_1       0.6      1.31      6.77e- 1  9.49e- 8      8.64
16 mu_1       0.7      1.41      9.37e- 1  1.03e- 9     11.9 
17 mu_1       0.8      1.31      2.74e- 1  1.80e-14      7.89
18 mu_1       0.9      1.16      2.28e- 3  1.50e-23     21.7 
19 mu_0       0.1      0.662     4.68e-13  2.16e-47     53.3 
20 mu_0       0.2      1.57      8.79e- 8  1.21e-32     50.1 
21 mu_0       0.3      1.44      1.42e- 4  5.16e-24     40.0 
22 mu_0       0.4      0.905     1.74e- 2  6.84e-18      9.02
23 mu_0       0.5      0.880     3.04e- 1  3.83e-13      7.17
24 mu_0       0.6      1.18      6.23e- 1  2.91e- 9      7.00
25 mu_0       0.7      1.40      8.59e- 1  1.68e- 8     12.3 
26 mu_0       0.8      1.36      5.44e- 1  5.04e-13      8.88
27 mu_0       0.9      1.21      9.73e- 3  3.93e-22     13.6 
[1] "Total run time was 489.95 seconds"
