
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3560"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 
 5  4  3  2  2  2  1  3  4  5  4  3  2  5  1  2  3  3  6  4  6  6  4  3  5  2 
48 49 50 
 5  1  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02019 0.30994 0.58193 0.96843 6.00000 
[1] "event indicator table: "

   0    1 
2111 1449 
[1] "treatment indicator table: "

   0    1 
1373 2187 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1755
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1805
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 32"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 214.424 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.461 0.117 
 2 mu         0.1   0.2 0.558 0.144 
 3 mu         0.1   0.3 0.611 0.162 
 4 mu         0.1   0.4 0.712 0.185 
 5 mu         0.1   0.5 0.779 0.200 
 6 mu         0.2   0.1 0.361 0.0469
 7 mu         0.2   0.2 0.446 0.0495
 8 mu         0.2   0.3 0.503 0.0512
 9 mu         0.2   0.4 0.585 0.0666
10 mu         0.2   0.5 0.651 0.0625
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.16         0.420 0.0000181     24.4 
 2 mu         0.2      1.02         0.932 0.0394         5.25
 3 mu         0.3      0.984        0.990 0.407          1.97
 4 mu         0.4      0.977        0.977 0.567          1.61
 5 mu         0.5      0.984        0.965 0.765          1.24
 6 mu         0.6      0.997        0.996 0.779          1.29
 7 mu         0.7      0.997        0.994 0.705          1.26
 8 mu         0.8      0.992        0.991 0.500          1.63
 9 mu         0.9      1.05         0.988 0.0288         2.85
10 mu_1       0.1      1.07         0.595 0.0000614     18.4 
11 mu_1       0.2      1.00         0.953 0.0682         4.10
12 mu_1       0.3      0.982        0.992 0.515          1.89
13 mu_1       0.4      0.976        0.975 0.576          1.56
14 mu_1       0.5      0.985        0.974 0.743          1.24
15 mu_1       0.6      0.998        1.00  0.764          1.29
16 mu_1       0.7      0.996        0.989 0.688          1.27
17 mu_1       0.8      0.993        0.995 0.472          1.66
18 mu_1       0.9      1.05         0.996 0.0246         2.94
19 mu_0       0.1      1.17         0.389 0.0000132     25.1 
20 mu_0       0.2      1.02         0.914 0.0316         5.54
21 mu_0       0.3      0.985        0.991 0.348          2.00
22 mu_0       0.4      0.977        0.972 0.561          1.65
23 mu_0       0.5      0.983        0.965 0.773          1.25
24 mu_0       0.6      0.997        0.987 0.760          1.30
25 mu_0       0.7      0.997        0.990 0.744          1.24
26 mu_0       0.8      0.988        0.985 0.610          1.52
27 mu_0       0.9      1.03         1.01  0.0673         2.22
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.143     6.94e-12  3.86e-41     10.5 
 2 mu         0.2      0.807     8.25e- 6  3.82e-27     43.6 
 3 mu         0.3      0.923     4.69e- 3  4.68e-19     13.9 
 4 mu         0.4      1.08      1.82e- 1  1.65e-13      7.41
 5 mu         0.5      1.17      9.72e- 1  2.73e- 9      5.36
 6 mu         0.6      1.08      6.26e- 1  6.14e- 6      4.29
 7 mu         0.7      0.946     6.56e- 1  1.21e- 9      4.91
 8 mu         0.8      1.30      8.31e- 2  2.42e-15     18.2 
 9 mu         0.9      2.96      8.85e- 5  1.81e-25     77.9 
10 mu_1       0.1      0.291     4.60e-11  3.63e-40     19.6 
11 mu_1       0.2      0.912     2.21e- 5  1.79e-26     40.6 
12 mu_1       0.3      0.949     9.38e- 3  1.46e-18     11.9 
13 mu_1       0.4      1.09      2.49e- 1  3.86e-13      7.09
14 mu_1       0.5      1.17      1.04e+ 0  5.13e- 9      4.80
15 mu_1       0.6      1.05      5.91e- 1  2.58e- 6      4.25
16 mu_1       0.7      0.951     5.57e- 1  3.22e-10      5.11
17 mu_1       0.8      1.34      5.97e- 2  5.63e-16     19.8 
18 mu_1       0.9      3.01      5.78e- 5  3.74e-26     80.0 
19 mu_0       0.1      0.127     3.03e-12  2.58e-42      9.50
20 mu_0       0.2      0.780     4.30e- 6  2.86e-28     44.4 
21 mu_0       0.3      0.912     2.56e- 3  4.09e-20     14.9 
22 mu_0       0.4      1.06      1.22e- 1  1.68e-14      7.63
23 mu_0       0.5      1.18      8.48e- 1  3.35e-10      5.93
24 mu_0       0.6      1.11      5.64e- 1  9.41e- 7      4.34
25 mu_0       0.7      0.934     5.58e- 1  3.29e- 9      4.43
26 mu_0       0.8      1.14      1.69e- 1  9.85e-15     11.7 
27 mu_0       0.9      2.59      3.65e- 4  1.47e-24     58.4 
[1] "Total run time was 217.817 seconds"
