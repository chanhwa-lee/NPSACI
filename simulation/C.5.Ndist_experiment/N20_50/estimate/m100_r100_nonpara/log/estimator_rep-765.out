
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3426"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 
 5  2  4  1  8  5  2  4  2  6  3  2  4  4  2  4  1  4  5  1  4  2  3  4  3  6 
47 48 49 50 
 2  2  1  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.01793 0.29275 0.57175 0.95492 6.55017 
[1] "event indicator table: "

   0    1 
2029 1397 
[1] "treatment indicator table: "

   0    1 
1363 2063 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1671
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1755
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 349.99 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.260 0.112 
 2 mu         0.1   0.2 0.349 0.108 
 3 mu         0.1   0.3 0.438 0.0902
 4 mu         0.1   0.4 0.483 0.0991
 5 mu         0.1   0.5 0.530 0.0992
 6 mu         0.2   0.1 0.277 0.0563
 7 mu         0.2   0.2 0.370 0.0634
 8 mu         0.2   0.3 0.454 0.0439
 9 mu         0.2   0.4 0.515 0.0461
10 mu         0.2   0.5 0.557 0.0450
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.907        0.605 0.000122       5.47
 2 mu         0.2      0.978        0.942 0.0434         3.16
 3 mu         0.3      0.981        0.969 0.417          2.10
 4 mu         0.4      1.00         0.995 0.588          1.54
 5 mu         0.5      1.00         1.00  0.578          1.45
 6 mu         0.6      1.01         1.01  0.713          1.34
 7 mu         0.7      1.02         1.01  0.670          1.32
 8 mu         0.8      1.03         1.01  0.641          1.41
 9 mu         0.9      1.01         0.961 0.248          2.09
10 mu_1       0.1      0.927        0.821 0.000432       3.90
11 mu_1       0.2      0.979        0.966 0.0792         3.07
12 mu_1       0.3      0.984        0.970 0.526          1.96
13 mu_1       0.4      1.01         0.997 0.590          1.52
14 mu_1       0.5      1.00         0.989 0.583          1.43
15 mu_1       0.6      1.01         1.01  0.708          1.35
16 mu_1       0.7      1.03         1.02  0.657          1.32
17 mu_1       0.8      1.03         1.02  0.641          1.40
18 mu_1       0.9      1.01         0.961 0.236          2.12
19 mu_0       0.1      0.905        0.584 0.0000872      5.65
20 mu_0       0.2      0.978        0.929 0.0345         3.18
21 mu_0       0.3      0.979        0.960 0.370          2.17
22 mu_0       0.4      1.00         1.00  0.584          1.59
23 mu_0       0.5      1.00         0.997 0.573          1.48
24 mu_0       0.6      1.01         1.01  0.721          1.32
25 mu_0       0.7      1.02         1.01  0.701          1.35
26 mu_0       0.8      1.03         1.01  0.642          1.43
27 mu_0       0.9      1.02         0.983 0.352          1.81
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.306     1.19e-11  9.91e-36     12.4 
 2 mu         0.2      1.57      6.11e- 6  1.53e-23     35.0 
 3 mu         0.3      1.58      4.17e- 3  1.70e-16     47.7 
 4 mu         0.4      1.07      1.13e- 1  1.42e-11     13.5 
 5 mu         0.5      0.955     4.99e- 1  7.73e- 8      7.35
 6 mu         0.6      1.04      4.39e- 1  1.58e- 5      5.06
 7 mu         0.7      0.998     5.26e- 1  2.69e- 9      5.40
 8 mu         0.8      1.03      1.58e- 1  6.14e-15     10.7 
 9 mu         0.9      1.03      4.20e- 4  5.16e-25     18.1 
10 mu_1       0.1      0.543     8.57e-11  9.23e-35     15.5 
11 mu_1       0.2      1.79      1.71e- 5  7.13e-23     46.3 
12 mu_1       0.3      1.46      8.33e- 3  5.28e-16     42.1 
13 mu_1       0.4      1.00      1.70e- 1  3.31e-11      8.92
14 mu_1       0.5      0.971     5.51e- 1  1.44e- 7      7.53
15 mu_1       0.6      1.06      3.98e- 1  5.40e- 6      5.10
16 mu_1       0.7      0.996     4.95e- 1  7.86e-10      5.43
17 mu_1       0.8      1.03      1.21e- 1  1.57e-15     11.0 
18 mu_1       0.9      1.03      2.76e- 4  1.17e-25     18.7 
19 mu_0       0.1      0.280     4.13e-12  7.51e-37     12.0 
20 mu_0       0.2      1.52      3.21e- 6  1.30e-24     32.1 
21 mu_0       0.3      1.63      2.29e- 3  1.66e-17     50.1 
22 mu_0       0.4      1.11      7.09e- 2  1.61e-12     16.5 
23 mu_0       0.5      0.938     3.27e- 1  1.05e- 8      7.16
24 mu_0       0.6      1.03      4.07e- 1  8.14e- 6      5.56
25 mu_0       0.7      1.00      5.81e- 1  7.13e- 9      5.34
26 mu_0       0.8      1.03      2.46e- 1  2.44e-14      9.13
27 mu_0       0.9      1.04      1.68e- 3  4.11e-24     12.3 
[1] "Total run time was 355.315 seconds"
