
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3529"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 34 36 37 38 39 40 41 42 43 44 46 47 48 
 2  2  3  2  6  2  2  3  6  4  5  2  4  5  4  3  6  1  2  6  5  5  5  4  2  2 
49 50 
 3  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03931 0.34228 0.60051 1.00000 7.00000 
[1] "event indicator table: "

   0    1 
2082 1447 
[1] "treatment indicator table: "

   0    1 
1352 2177 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1823
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1706
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 88"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 186.71 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.507 0.148 
 2 mu         0.1   0.2 0.583 0.183 
 3 mu         0.1   0.3 0.613 0.203 
 4 mu         0.1   0.4 0.691 0.229 
 5 mu         0.1   0.5 0.734 0.249 
 6 mu         0.2   0.1 0.435 0.0533
 7 mu         0.2   0.2 0.507 0.0536
 8 mu         0.2   0.3 0.542 0.0527
 9 mu         0.2   0.4 0.613 0.0636
10 mu         0.2   0.5 0.658 0.0727
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       1.32        0.625 0.0000441     45.1 
 2 mu         0.2       1.20        0.915 0.0377        10.5 
 3 mu         0.3       1.03        0.964 0.327          2.51
 4 mu         0.4       1.02        0.996 0.580          1.74
 5 mu         0.5       1.01        0.980 0.680          1.57
 6 mu         0.6       1.00        1.01  0.735          1.37
 7 mu         0.7       1.01        1.01  0.744          1.22
 8 mu         0.8       1.01        1.02  0.535          1.48
 9 mu         0.9       1.00        0.991 0.290          1.73
10 mu_1       0.1       1.25        0.804 0.000147      23.8 
11 mu_1       0.2       1.15        0.968 0.0651         8.98
12 mu_1       0.3       1.02        0.962 0.378          2.37
13 mu_1       0.4       1.02        0.980 0.584          1.71
14 mu_1       0.5       1.01        0.995 0.694          1.55
15 mu_1       0.6       1.00        1.01  0.729          1.35
16 mu_1       0.7       1.01        1.02  0.753          1.23
17 mu_1       0.8       1.01        1.02  0.531          1.49
18 mu_1       0.9       1.00        0.982 0.272          1.76
19 mu_0       0.1       1.33        0.612 0.0000326     47.5 
20 mu_0       0.2       1.21        0.893 0.0308        10.9 
21 mu_0       0.3       1.03        0.981 0.300          2.57
22 mu_0       0.4       1.02        0.996 0.561          1.76
23 mu_0       0.5       1.02        0.986 0.667          1.59
24 mu_0       0.6       1.00        0.988 0.741          1.40
25 mu_0       0.7       1.00        1.00  0.723          1.23
26 mu_0       0.8       1.02        1.03  0.549          1.44
27 mu_0       0.9       1.00        1.03  0.373          1.73
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      32.0      2.10e-13  2.68e-33   3044.  
 2 mu         0.2       7.75     3.85e- 7  5.18e-22    346.  
 3 mu         0.3       2.24     4.58e- 4  1.51e-15     52.1 
 4 mu         0.4       1.14     3.17e- 2  3.50e-11     12.4 
 5 mu         0.5       1.03     2.90e- 1  7.48e- 8      5.95
 6 mu         0.6       1.21     6.93e- 1  6.37e- 9     12.3 
 7 mu         0.7       1.21     8.16e- 1  6.68e-14      4.84
 8 mu         0.8       1.15     3.91e- 1  4.58e-21      6.14
 9 mu         0.9       1.27     2.19e- 3  1.67e-33     32.8 
10 mu_1       0.1      29.0      1.50e-12  2.49e-32   2647.  
11 mu_1       0.2       5.66     1.15e- 6  2.40e-21    189.  
12 mu_1       0.3       1.92     1.06e- 3  4.78e-15     45.7 
13 mu_1       0.4       1.07     3.84e- 2  8.28e-11      8.13
14 mu_1       0.5       1.04     3.55e- 1  1.42e- 7      7.04
15 mu_1       0.6       1.23     7.68e- 1  9.24e-10     12.1 
16 mu_1       0.7       1.21     7.99e- 1  8.30e-15      4.44
17 mu_1       0.8       1.15     3.21e- 1  4.98e-22      7.13
18 mu_1       0.9       1.27     1.66e- 3  1.61e-34     33.9 
19 mu_0       0.1      32.4      7.30e-14  2.18e-34   3088.  
20 mu_0       0.2       8.27     1.92e- 7  4.74e-23    395.  
21 mu_0       0.3       2.38     1.82e- 4  1.14e-16     54.9 
22 mu_0       0.4       1.18     1.90e- 2  3.07e-12     15.2 
23 mu_0       0.5       1.02     2.11e- 1  7.88e- 9      5.53
24 mu_0       0.6       1.19     5.73e- 1  1.45e- 8     12.6 
25 mu_0       0.7       1.22     7.60e- 1  2.03e-13      5.76
26 mu_0       0.8       1.13     3.98e- 1  2.09e-20      4.41
27 mu_0       0.9       1.27     6.90e- 3  1.52e-32     23.5 
[1] "Total run time was 190.199 seconds"
