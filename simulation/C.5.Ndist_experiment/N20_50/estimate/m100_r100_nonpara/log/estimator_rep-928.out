
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3610"
[1] "cluster size dist'n: "

21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 
 3  4  4  1  5  2  1  2  3  5  3  4  2  3  6  4  3  3  2  4  2  5  3  7  3  1 
47 48 49 50 
 2  5  4  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03077 0.34790 0.59951 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
2152 1458 
[1] "treatment indicator table: "

   0    1 
1277 2333 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1851
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 10"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1759
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 53"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 197.682 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.238 0.0455
 2 mu         0.1   0.2 0.279 0.0546
 3 mu         0.1   0.3 0.335 0.0586
 4 mu         0.1   0.4 0.314 0.0615
 5 mu         0.1   0.5 0.321 0.0931
 6 mu         0.2   0.1 0.302 0.0350
 7 mu         0.2   0.2 0.370 0.0426
 8 mu         0.2   0.3 0.437 0.0446
 9 mu         0.2   0.4 0.435 0.0451
10 mu         0.2   0.5 0.454 0.0784
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      0.608        0.144 0.00000165      4.90
 2 mu         0.2      0.893        0.760 0.00608         4.26
 3 mu         0.3      0.969        0.965 0.115           2.94
 4 mu         0.4      1.03         0.986 0.463           2.02
 5 mu         0.5      1.01         1.02  0.610           1.45
 6 mu         0.6      0.984        0.989 0.764           1.24
 7 mu         0.7      0.996        0.995 0.748           1.40
 8 mu         0.8      1.00         0.982 0.715           1.42
 9 mu         0.9      1.05         1.00  0.313           2.17
10 mu_1       0.1      0.709        0.284 0.00000639      4.31
11 mu_1       0.2      0.925        0.811 0.0123          4.23
12 mu_1       0.3      0.984        0.986 0.179           2.61
13 mu_1       0.4      1.03         0.987 0.526           1.96
14 mu_1       0.5      1.01         0.996 0.620           1.40
15 mu_1       0.6      0.983        0.982 0.770           1.22
16 mu_1       0.7      0.997        0.994 0.754           1.40
17 mu_1       0.8      1.00         0.981 0.705           1.44
18 mu_1       0.9      1.06         1.00  0.293           2.31
19 mu_0       0.1      0.597        0.123 0.00000112      5.20
20 mu_0       0.2      0.885        0.735 0.00444         4.26
21 mu_0       0.3      0.963        0.952 0.0875          3.11
22 mu_0       0.4      1.03         1.01  0.397           2.07
23 mu_0       0.5      1.02         1.02  0.595           1.50
24 mu_0       0.6      0.985        0.979 0.735           1.29
25 mu_0       0.7      0.992        0.993 0.734           1.40
26 mu_0       0.8      1.00         0.981 0.683           1.40
27 mu_0       0.9      1.02         0.989 0.454           1.81
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.0683     2.86e-14  6.77e-43      6.36
 2 mu         0.2     0.347      7.07e- 8  7.53e-29     13.8 
 3 mu         0.3     0.778      1.62e- 4  1.09e-20     18.9 
 4 mu         0.4     1.00       1.85e- 2  5.96e-15     11.5 
 5 mu         0.5     1.21       3.95e- 1  1.48e-10      7.55
 6 mu         0.6     1.30       8.64e- 1  5.00e- 7      7.10
 7 mu         0.7     1.14       7.43e- 1  1.15e- 4      4.41
 8 mu         0.8     0.980      2.49e- 1  3.40e- 8      7.53
 9 mu         0.9     0.900      3.81e- 4  5.40e-15      9.24
10 mu_1       0.1     0.135      1.65e-13  6.49e-42     12.1 
11 mu_1       0.2     0.448      2.47e- 7  3.61e-28     13.1 
12 mu_1       0.3     0.837      3.52e- 4  3.48e-20     19.6 
13 mu_1       0.4     1.03       3.18e- 2  1.43e-14      9.47
14 mu_1       0.5     1.24       4.69e- 1  2.85e-10      7.76
15 mu_1       0.6     1.29       9.50e- 1  8.00e- 7      7.23
16 mu_1       0.7     1.12       6.39e- 1  3.22e- 5      4.08
17 mu_1       0.8     0.978      2.01e- 1  1.19e- 8      8.03
18 mu_1       0.9     0.894      2.60e- 4  2.10e-15      9.24
19 mu_0       0.1     0.0609     1.34e-14  0             5.73
20 mu_0       0.2     0.321      2.65e- 8  0            13.9 
21 mu_0       0.3     0.752      8.46e- 5  0            18.6 
22 mu_0       0.4     0.982      9.88e- 3  0            13.3 
23 mu_0       0.5     1.18       2.59e- 1  0             7.35
24 mu_0       0.6     1.31       9.95e- 1  0             6.90
25 mu_0       0.7     1.18       7.27e- 1  0             5.20
26 mu_0       0.8     0.986      2.95e- 1  0             5.67
27 mu_0       0.9     0.952      1.17e- 3  0            10.5 
[1] "Total run time was 200.595 seconds"
