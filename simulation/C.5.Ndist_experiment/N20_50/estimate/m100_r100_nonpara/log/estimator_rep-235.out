
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3405"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 36 37 38 39 40 41 42 43 44 45 46 
 5  2  3  6  2  1 10  4  2  1  2  1  7  4  6  3  1  3  3  4  4  1  8  4  2  2 
47 48 49 50 
 2  2  2  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02741 0.34401 0.59923 1.00000 5.54959 
[1] "event indicator table: "

   0    1 
2028 1377 
[1] "treatment indicator table: "

   0    1 
1330 2075 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1693
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1712
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 204.171 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.522 0.144 
 2 mu         0.1   0.2 0.545 0.121 
 3 mu         0.1   0.3 0.573 0.116 
 4 mu         0.1   0.4 0.626 0.108 
 5 mu         0.1   0.5 0.661 0.105 
 6 mu         0.2   0.1 0.422 0.0716
 7 mu         0.2   0.2 0.474 0.0567
 8 mu         0.2   0.3 0.526 0.0529
 9 mu         0.2   0.4 0.574 0.0501
10 mu         0.2   0.5 0.612 0.0507
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.997        0.453 0.000129      10.0 
 2 mu         0.2      1.04         1.02  0.0613         3.02
 3 mu         0.3      1.05         1.03  0.364          2.28
 4 mu         0.4      1.01         1.00  0.463          1.65
 5 mu         0.5      0.979        0.971 0.448          1.62
 6 mu         0.6      0.978        0.960 0.508          1.50
 7 mu         0.7      0.980        0.973 0.629          1.35
 8 mu         0.8      1.01         1.02  0.560          1.39
 9 mu         0.9      1.09         1.07  0.292          1.83
10 mu_1       0.1      0.982        0.715 0.000420       4.82
11 mu_1       0.2      1.03         1.05  0.103          2.90
12 mu_1       0.3      1.05         1.03  0.353          2.06
13 mu_1       0.4      1.00         0.993 0.505          1.54
14 mu_1       0.5      0.977        0.974 0.428          1.61
15 mu_1       0.6      0.977        0.963 0.533          1.48
16 mu_1       0.7      0.982        0.976 0.616          1.35
17 mu_1       0.8      1.02         1.00  0.555          1.41
18 mu_1       0.9      1.09         1.08  0.273          1.88
19 mu_0       0.1      0.999        0.419 0.0000966     10.6 
20 mu_0       0.2      1.04         0.999 0.0508         3.18
21 mu_0       0.3      1.05         1.01  0.369          2.37
22 mu_0       0.4      1.02         1.02  0.434          1.73
23 mu_0       0.5      0.981        0.965 0.468          1.62
24 mu_0       0.6      0.978        0.960 0.471          1.54
25 mu_0       0.7      0.976        0.976 0.610          1.34
26 mu_0       0.8      1.00         0.994 0.579          1.33
27 mu_0       0.9      1.06         1.07  0.418          1.61
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.705     1.61e-11  9.92e-40     37.6 
 2 mu         0.2      1.77      1.24e- 5  7.75e-27     37.2 
 3 mu         0.3      1.38      5.84e- 3  2.53e-19     22.5 
 4 mu         0.4      1.23      2.33e- 1  5.11e-14      8.03
 5 mu         0.5      1.74      8.54e- 1  6.26e-10     15.9 
 6 mu         0.6      1.87      1.15e+ 0  1.27e- 6     28.5 
 7 mu         0.7      1.31      5.95e- 1  2.16e- 7      8.65
 8 mu         0.8      1.48      1.11e- 1  8.47e-12     16.4 
 9 mu         0.9      1.23      2.18e- 4  1.16e-20     16.0 
10 mu_1       0.1      1.18      8.82e-11  9.69e-39     53.7 
11 mu_1       0.2      1.82      3.61e- 5  3.79e-26     33.9 
12 mu_1       0.3      1.25      1.19e- 2  8.25e-19     18.8 
13 mu_1       0.4      1.26      3.03e- 1  1.25e-13      8.20
14 mu_1       0.5      1.80      8.62e- 1  1.22e- 9     18.6 
15 mu_1       0.6      1.83      9.47e- 1  2.07e- 6     27.8 
16 mu_1       0.7      1.27      5.70e- 1  5.61e- 8      7.23
17 mu_1       0.8      1.51      8.46e- 2  1.92e-12     17.5 
18 mu_1       0.9      1.20      1.43e- 4  3.72e-21     15.2 
19 mu_0       0.1      0.653     8.04e-12  2.50e-41     35.8 
20 mu_0       0.2      1.75      6.48e- 6  2.20e-28     38.1 
21 mu_0       0.3      1.44      3.61e- 3  8.22e-21     24.1 
22 mu_0       0.4      1.21      1.57e- 1  1.94e-15      9.87
23 mu_0       0.5      1.67      7.90e- 1  2.85e-11     13.2 
24 mu_0       0.6      1.91      1.07e+ 0  7.23e- 8     29.5 
25 mu_0       0.7      1.40      5.84e- 1  5.89e- 7     12.0 
26 mu_0       0.8      1.38      2.25e- 1  3.46e-11     12.2 
27 mu_0       0.9      1.53      9.73e- 4  8.25e-20     23.4 
[1] "Total run time was 207.463 seconds"
