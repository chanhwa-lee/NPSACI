
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3500"
[1] "cluster size dist'n: "

20 21 22 23 24 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 
 4  2  2  1  3  6  4  6  1  4  2  5  3  5  2  3  3  5  4  6  5  5  5  2  1  2 
47 48 49 50 
 2  2  3  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02999 0.35156 0.60500 1.00000 5.00000 
[1] "event indicator table: "

   0    1 
2030 1470 
[1] "treatment indicator table: "

   0    1 
1353 2147 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1761
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 30"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1739
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 192.321 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.512 0.108 
 2 mu         0.1   0.2 0.715 0.189 
 3 mu         0.1   0.3 0.754 0.176 
 4 mu         0.1   0.4 0.794 0.174 
 5 mu         0.1   0.5 0.823 0.170 
 6 mu         0.2   0.1 0.410 0.0565
 7 mu         0.2   0.2 0.567 0.110 
 8 mu         0.2   0.3 0.628 0.108 
 9 mu         0.2   0.4 0.672 0.112 
10 mu         0.2   0.5 0.702 0.104 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.985        0.571  0.000221      7.07
 2 mu         0.2      0.954        0.900  0.147         2.23
 3 mu         0.3      0.994        0.950  0.433         1.76
 4 mu         0.4      1.00         1.01   0.636         1.80
 5 mu         0.5      1.00         1.01   0.558         1.64
 6 mu         0.6      1.01         1.01   0.657         1.30
 7 mu         0.7      0.997        1.01   0.693         1.34
 8 mu         0.8      0.997        0.994  0.586         1.33
 9 mu         0.9      1.04         1.01   0.510         2.11
10 mu_1       0.1      0.967        0.723  0.000679      5.05
11 mu_1       0.2      0.959        0.920  0.154         2.28
12 mu_1       0.3      1.00         0.973  0.503         1.71
13 mu_1       0.4      1.00         1.00   0.610         1.80
14 mu_1       0.5      1.00         0.995  0.554         1.61
15 mu_1       0.6      1.01         1.01   0.654         1.30
16 mu_1       0.7      0.995        1.00   0.699         1.34
17 mu_1       0.8      0.999        0.998  0.581         1.34
18 mu_1       0.9      1.05         1.01   0.485         2.14
19 mu_0       0.1      0.987        0.539  0.000170      7.30
20 mu_0       0.2      0.952        0.888  0.126         2.22
21 mu_0       0.3      0.991        0.944  0.403         1.79
22 mu_0       0.4      1.00         0.997  0.613         1.80
23 mu_0       0.5      1.00         1.02   0.561         1.68
24 mu_0       0.6      1.01         1.01   0.603         1.34
25 mu_0       0.7      1.00         0.997  0.678         1.35
26 mu_0       0.8      0.992        0.995  0.603         1.34
27 mu_0       0.9      1.03         1.02   0.627         1.79
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.463     1.29e-12  2.80e-35     25.5 
 2 mu         0.2      2.48      6.07e- 7  2.16e-23    151.  
 3 mu         0.3      1.99      4.77e- 4  1.60e-16     53.8 
 4 mu         0.4      1.18      5.13e- 2  1.00e-11     11.8 
 5 mu         0.5      1.01      3.79e- 1  4.37e- 8      6.98
 6 mu         0.6      1.16      5.05e- 1  3.29e- 5      7.27
 7 mu         0.7      1.11      6.91e- 1  7.93e- 8      6.20
 8 mu         0.8      1.01      1.14e- 1  5.35e-13      5.95
 9 mu         0.9      0.786     4.18e- 4  3.20e-22      8.42
10 mu_1       0.1      0.919     7.74e-12  2.61e-34     51.0 
11 mu_1       0.2      2.67      1.96e- 6  1.01e-22    151.  
12 mu_1       0.3      1.80      1.15e- 3  4.97e-16     35.9 
13 mu_1       0.4      1.08      8.17e- 2  2.33e-11     12.1 
14 mu_1       0.5      1.02      3.41e- 1  8.13e- 8      6.60
15 mu_1       0.6      1.17      5.53e- 1  3.77e- 5      6.84
16 mu_1       0.7      1.12      6.83e- 1  2.27e- 8      6.29
17 mu_1       0.8      1.00      1.15e- 1  1.34e-13      6.11
18 mu_1       0.9      0.781     2.70e- 4  7.10e-23      8.65
19 mu_0       0.1      0.412     5.78e-13  0            22.7 
20 mu_0       0.2      2.43      2.34e- 7  0           151.  
21 mu_0       0.3      2.07      2.15e- 4  0            61.5 
22 mu_0       0.4      1.25      2.92e- 2  0            11.5 
23 mu_0       0.5      0.997     2.84e- 1  0             8.21
24 mu_0       0.6      1.15      5.67e- 1  0             7.92
25 mu_0       0.7      1.11      7.05e- 1  0             6.00
26 mu_0       0.8      1.06      1.74e- 1  0             5.31
27 mu_0       0.9      0.831     3.76e- 4  0             6.31
[1] "Total run time was 195.396 seconds"
