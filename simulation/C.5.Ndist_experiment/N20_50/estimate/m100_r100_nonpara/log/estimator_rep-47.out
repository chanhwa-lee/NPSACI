
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3499"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 2  1  1  3  5  5  4  4  5  5  1  2  4  1  1  7  4  4  5  3  5  2  3  3  2  6 
46 47 48 49 50 
 1  3  2  4  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04328 0.36651 0.62819 1.00000 5.37794 
[1] "event indicator table: "

   0    1 
2041 1458 
[1] "treatment indicator table: "

   0    1 
1284 2215 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1786
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1713
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 69"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 201.741 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.333 0.0753
 2 mu         0.1   0.2 0.399 0.0735
 3 mu         0.1   0.3 0.458 0.0879
 4 mu         0.1   0.4 0.491 0.0833
 5 mu         0.1   0.5 0.568 0.0937
 6 mu         0.2   0.1 0.357 0.0547
 7 mu         0.2   0.2 0.425 0.0466
 8 mu         0.2   0.3 0.484 0.0532
 9 mu         0.2   0.4 0.537 0.0493
10 mu         0.2   0.5 0.621 0.0618
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.801        0.462   0.00389      6.11
 2 mu         0.2      1.00         1.01    0.303        1.91
 3 mu         0.3      1.01         1.01    0.509        1.79
 4 mu         0.4      0.979        0.958   0.627        1.49
 5 mu         0.5      0.982        0.967   0.591        1.54
 6 mu         0.6      1.00         1.01    0.668        1.42
 7 mu         0.7      1.01         0.984   0.709        1.55
 8 mu         0.8      0.997        0.990   0.702        1.42
 9 mu         0.9      1.04         1.03    0.517        1.62
10 mu_1       0.1      0.880        0.693   0.00971      3.99
11 mu_1       0.2      1.03         1.01    0.365        1.93
12 mu_1       0.3      1.01         0.973   0.494        1.80
13 mu_1       0.4      0.976        0.958   0.655        1.55
14 mu_1       0.5      0.984        0.970   0.595        1.56
15 mu_1       0.6      1.00         1.02    0.653        1.39
16 mu_1       0.7      1.01         0.988   0.719        1.57
17 mu_1       0.8      0.998        0.990   0.694        1.43
18 mu_1       0.9      1.05         1.03    0.501        1.65
19 mu_0       0.1      0.792        0.440   0.00324      6.35
20 mu_0       0.2      0.993        1.01    0.287        1.97
21 mu_0       0.3      1.01         1.01    0.489        1.79
22 mu_0       0.4      0.982        0.969   0.609        1.52
23 mu_0       0.5      0.981        0.956   0.588        1.53
24 mu_0       0.6      0.998        1.01    0.690        1.45
25 mu_0       0.7      1.01         0.994   0.672        1.52
26 mu_0       0.8      0.994        0.991   0.697        1.43
27 mu_0       0.9      1.02         1.02    0.615        1.46
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1    0.00372     1.01e-12  5.04e-35    0.110 
 2 mu         0.2    0.317       5.41e- 7  1.23e-23    7.39  
 3 mu         0.3    1.22        6.78e- 4  5.30e-17   15.5   
 4 mu         0.4    1.41        4.49e- 2  2.54e-12   14.0   
 5 mu         0.5    1.41        4.92e- 1  1.02e- 8   22.4   
 6 mu         0.6    1.31        5.64e- 1  8.32e- 6    8.15  
 7 mu         0.7    1.15        6.32e- 1  5.75e- 7    5.91  
 8 mu         0.8    1.16        1.79e- 1  4.39e-12    8.47  
 9 mu         0.9    1.30        3.36e- 4  1.50e-21   11.6   
10 mu_1       0.1    0.0112      6.24e-12  4.91e-34    0.302 
11 mu_1       0.2    0.490       1.85e- 6  6.00e-23   10.2   
12 mu_1       0.3    1.36        1.46e- 3  1.72e-16   16.7   
13 mu_1       0.4    1.41        7.43e- 2  6.19e-12   14.0   
14 mu_1       0.5    1.42        5.58e- 1  1.99e- 8   21.9   
15 mu_1       0.6    1.29        6.18e- 1  1.35e- 5    7.58  
16 mu_1       0.7    1.14        5.98e- 1  2.52e- 7    5.40  
17 mu_1       0.8    1.16        1.42e- 1  1.68e-12    9.14  
18 mu_1       0.9    1.31        2.25e- 4  5.09e-22   11.3   
19 mu_0       0.1    0.00289     4.31e-13  1.44e-36    0.0885
20 mu_0       0.2    0.274       2.21e- 7  3.95e-25    6.70  
21 mu_0       0.3    1.17        3.47e- 4  1.94e-18   15.0   
22 mu_0       0.4    1.42        2.53e- 2  1.09e-13   15.0   
23 mu_0       0.5    1.40        4.17e- 1  5.23e-10   23.0   
24 mu_0       0.6    1.33        5.23e- 1  5.33e- 7    9.74  
25 mu_0       0.7    1.17        7.68e- 1  1.33e- 6    7.09  
26 mu_0       0.8    1.14        2.22e- 1  1.52e-11    6.16  
27 mu_0       0.9    1.19        1.41e- 3  1.04e-20   15.9   
[1] "Total run time was 205.036 seconds"
