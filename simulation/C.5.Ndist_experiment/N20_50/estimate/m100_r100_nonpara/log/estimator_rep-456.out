
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3585"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 1  3  1  2  2  2  1  3  5  5  3  7  2  4  6  4  3  2  2  3  5  9  3  4  1  2 
46 47 48 49 50 
 3  2  3  5  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0342  0.3427  0.6022  1.0000  5.0000 
[1] "event indicator table: "

   0    1 
2167 1418 
[1] "treatment indicator table: "

   0    1 
1312 2273 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1762
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1823
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 42"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 206.384 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.348 0.0570
 2 mu         0.1   0.2 0.446 0.0522
 3 mu         0.1   0.3 0.470 0.0492
 4 mu         0.1   0.4 0.531 0.0583
 5 mu         0.1   0.5 0.591 0.0821
 6 mu         0.2   0.1 0.365 0.0474
 7 mu         0.2   0.2 0.474 0.0382
 8 mu         0.2   0.3 0.501 0.0364
 9 mu         0.2   0.4 0.573 0.0406
10 mu         0.2   0.5 0.635 0.0558
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.870        0.701 0.0000275      4.62
 2 mu         0.2      1.01         0.958 0.0348         2.49
 3 mu         0.3      1.01         0.993 0.432          1.98
 4 mu         0.4      1.03         0.994 0.664          1.58
 5 mu         0.5      1.00         0.998 0.682          1.61
 6 mu         0.6      0.984        0.971 0.568          1.46
 7 mu         0.7      1.01         1.00  0.714          1.42
 8 mu         0.8      1.01         1.00  0.641          1.45
 9 mu         0.9      1.05         1.05  0.136          1.71
10 mu_1       0.1      0.949        0.837 0.0000903      4.02
11 mu_1       0.2      1.02         0.986 0.0590         2.62
12 mu_1       0.3      1.02         0.987 0.519          1.93
13 mu_1       0.4      1.03         1.00  0.678          1.57
14 mu_1       0.5      0.998        0.988 0.676          1.63
15 mu_1       0.6      0.986        0.977 0.569          1.43
16 mu_1       0.7      1.01         1.00  0.702          1.42
17 mu_1       0.8      1.01         1.02  0.638          1.45
18 mu_1       0.9      1.05         1.05  0.126          1.74
19 mu_0       0.1      0.861        0.680 0.0000205      4.71
20 mu_0       0.2      1.01         0.952 0.0288         2.46
21 mu_0       0.3      1.01         0.987 0.395          2.01
22 mu_0       0.4      1.03         0.996 0.655          1.59
23 mu_0       0.5      1.01         1.01  0.688          1.60
24 mu_0       0.6      0.982        0.962 0.568          1.50
25 mu_0       0.7      1.00         1.00  0.684          1.42
26 mu_0       0.8      1.01         0.987 0.646          1.49
27 mu_0       0.9      1.04         1.03  0.225          1.65
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      7.04      2.13e-13  1.05e-38    682.  
 2 mu         0.2      1.12      3.69e- 7  4.11e-26     39.8 
 3 mu         0.3      0.686     8.31e- 4  8.94e-19     16.5 
 4 mu         0.4      0.960     5.03e- 2  1.35e-13     12.0 
 5 mu         0.5      1.23      4.39e- 1  1.33e- 9     10.5 
 6 mu         0.6      1.25      7.26e- 1  1.11e- 7      6.55
 7 mu         0.7      1.38      4.79e- 1  2.32e-11     17.8 
 8 mu         0.8      1.20      2.04e- 1  1.38e-16      8.75
 9 mu         0.9      1.25      8.23e- 4  1.45e-25     14.4 
10 mu_1       0.1      2.61      1.48e-12  1.03e-37    220.  
11 mu_1       0.2      0.820     1.18e- 6  2.01e-25     32.2 
12 mu_1       0.3      0.662     1.81e- 3  2.91e-18     11.3 
13 mu_1       0.4      1.02      8.45e- 2  3.31e-13     12.8 
14 mu_1       0.5      1.24      3.90e- 1  2.59e- 9      9.66
15 mu_1       0.6      1.26      6.94e- 1  5.98e- 9      7.76
16 mu_1       0.7      1.37      5.09e- 1  1.07e-12     18.0 
17 mu_1       0.8      1.19      2.02e- 1  5.57e-18      9.38
18 mu_1       0.9      1.26      5.94e- 4  5.19e-27     15.2 
19 mu_0       0.1      7.53      7.15e-14  2.71e-40    733.  
20 mu_0       0.2      1.20      1.62e- 7  1.19e-27     48.2 
21 mu_0       0.3      0.697     4.12e- 4  2.97e-20     18.6 
22 mu_0       0.4      0.918     2.75e- 2  5.25e-15     11.4 
23 mu_0       0.5      1.21      3.36e- 1  6.17e-11     11.4 
24 mu_0       0.6      1.23      9.11e- 1  1.31e- 7      6.14
25 mu_0       0.7      1.38      6.41e- 1  7.48e-11     17.1 
26 mu_0       0.8      1.24      1.98e- 1  6.69e-16     10.9 
27 mu_0       0.9      1.11      2.83e- 3  1.40e-24     13.7 
[1] "Total run time was 209.441 seconds"
