
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3338"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 41 42 43 44 45 46 
 5  5  3  2  2  5  4  4  5  6  3  2  3  4  5  2  2  6  2  2  2  6  4  1  3  4 
47 48 49 
 3  1  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03547 0.36334 0.62902 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
2044 1294 
[1] "treatment indicator table: "

   0    1 
1194 2144 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1704
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 69"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1634
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 48"
[1] "     Cluster: 53"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 160.575 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.361 0.0946
 2 mu         0.1   0.2 0.367 0.129 
 3 mu         0.1   0.3 0.496 0.144 
 4 mu         0.1   0.4 0.562 0.159 
 5 mu         0.1   0.5 0.580 0.159 
 6 mu         0.2   0.1 0.289 0.0296
 7 mu         0.2   0.2 0.289 0.0633
 8 mu         0.2   0.3 0.398 0.0730
 9 mu         0.2   0.4 0.451 0.0823
10 mu         0.2   0.5 0.467 0.0751
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      1.07        0.0941 0.000000890     15.9 
 2 mu         0.2      0.943       0.751  0.00350          4.24
 3 mu         0.3      0.942       0.900  0.141            2.14
 4 mu         0.4      0.974       0.967  0.476            1.73
 5 mu         0.5      1.00        0.991  0.680            1.42
 6 mu         0.6      1.01        1.01   0.692            1.32
 7 mu         0.7      1.01        1.00   0.718            1.31
 8 mu         0.8      0.988       0.982  0.570            1.58
 9 mu         0.9      0.962       0.989  0.199            1.87
10 mu_1       0.1      1.02        0.209  0.00000387      15.1 
11 mu_1       0.2      0.947       0.808  0.00769          3.69
12 mu_1       0.3      0.943       0.916  0.210            1.79
13 mu_1       0.4      0.980       0.983  0.523            1.76
14 mu_1       0.5      1.01        0.994  0.706            1.37
15 mu_1       0.6      1.02        1.02   0.679            1.33
16 mu_1       0.7      1.01        1.00   0.739            1.32
17 mu_1       0.8      0.986       0.974  0.566            1.62
18 mu_1       0.9      0.960       0.971  0.183            1.91
19 mu_0       0.1      1.08        0.0826 0.000000560     16.3 
20 mu_0       0.2      0.943       0.747  0.00245          4.44
21 mu_0       0.3      0.941       0.895  0.111            2.36
22 mu_0       0.4      0.970       0.961  0.444            1.71
23 mu_0       0.5      0.999       0.983  0.652            1.46
24 mu_0       0.6      1.01        1.01   0.710            1.31
25 mu_0       0.7      1.01        1.01   0.670            1.29
26 mu_0       0.8      0.996       1.01   0.589            1.39
27 mu_0       0.9      0.975       1.00   0.341            2.04
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     38.6       1.45e-11  9.66e-38   3859.  
 2 mu         0.2      9.30      2.90e- 6  1.06e-24    902.  
 3 mu         0.3      1.29      2.22e- 3  3.48e-17     55.4 
 4 mu         0.4      1.13      1.05e- 1  5.90e-12     18.0 
 5 mu         0.5      1.62      6.51e- 1  5.23e- 8     19.2 
 6 mu         0.6      1.58      1.13e+ 0  2.27e- 5      9.51
 7 mu         0.7      1.20      7.78e- 1  6.43e- 9      7.02
 8 mu         0.8      1.22      2.78e- 1  5.00e-14     10.2 
 9 mu         0.9      1.75      1.16e- 3  6.64e-23     41.6 
10 mu_1       0.1     35.1       1.02e-10  8.85e-37   3508.  
11 mu_1       0.2      4.51      9.50e- 6  4.86e-24    410.  
12 mu_1       0.3      0.986     4.34e- 3  1.06e-16     19.7 
13 mu_1       0.4      1.20      1.73e- 1  1.35e-11     20.4 
14 mu_1       0.5      1.67      8.03e- 1  9.59e- 8     17.5 
15 mu_1       0.6      1.55      1.07e+ 0  3.43e- 6      9.13
16 mu_1       0.7      1.18      7.34e- 1  8.35e-10      7.64
17 mu_1       0.8      1.24      2.09e- 1  5.69e-15     11.1 
18 mu_1       0.9      1.78      8.52e- 4  6.70e-24     46.3 
19 mu_0       0.1     39.0       4.78e-12  0          3898.  
20 mu_0       0.2     10.5       1.23e- 6  0          1024.  
21 mu_0       0.3      1.42      1.18e- 3  0            71.9 
22 mu_0       0.4      1.08      6.12e- 2  0            16.3 
23 mu_0       0.5      1.58      5.06e- 1  0            20.9 
24 mu_0       0.6      1.64      1.20e+ 0  0            11.4 
25 mu_0       0.7      1.25      9.37e- 1  0             7.20
26 mu_0       0.8      1.17      3.15e- 1  0            10.4 
27 mu_0       0.9      1.42      3.62e- 3  0            22.5 
[1] "Total run time was 163.252 seconds"
