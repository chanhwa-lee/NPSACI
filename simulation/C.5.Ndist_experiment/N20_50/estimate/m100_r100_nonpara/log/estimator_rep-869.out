
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3526"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 
 3  2  6  1  1  3  6  2  3  4  6  6  3  4  3  4  3  2  3  3  2  1  4  1  7  3 
47 48 49 50 
 3  4  2  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0261  0.3300  0.5999  1.0000  7.0000 
[1] "event indicator table: "

   0    1 
2083 1443 
[1] "treatment indicator table: "

   0    1 
1352 2174 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1726
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1800
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 43"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 244.621 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.380 0.108 
 2 mu         0.1   0.2 0.436 0.119 
 3 mu         0.1   0.3 0.508 0.107 
 4 mu         0.1   0.4 0.511 0.0953
 5 mu         0.1   0.5 0.549 0.0937
 6 mu         0.2   0.1 0.369 0.0711
 7 mu         0.2   0.2 0.437 0.0788
 8 mu         0.2   0.3 0.528 0.0656
 9 mu         0.2   0.4 0.543 0.0555
10 mu         0.2   0.5 0.588 0.0485
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.854        0.244 0.0000207      6.03
 2 mu         0.2      0.989        0.931 0.0231         2.85
 3 mu         0.3      1.04         0.979 0.227          3.09
 4 mu         0.4      1.02         1.00  0.504          1.99
 5 mu         0.5      1.01         1.01  0.685          1.49
 6 mu         0.6      1.00         0.998 0.711          1.28
 7 mu         0.7      0.993        0.986 0.751          1.28
 8 mu         0.8      0.996        0.992 0.573          1.41
 9 mu         0.9      0.964        0.964 0.207          2.35
10 mu_1       0.1      0.869        0.453 0.0000672      5.30
11 mu_1       0.2      1.02         0.960 0.0405         2.91
12 mu_1       0.3      1.04         0.992 0.305          3.12
13 mu_1       0.4      1.02         1.02  0.534          1.80
14 mu_1       0.5      1.01         1.01  0.694          1.46
15 mu_1       0.6      0.998        0.998 0.707          1.30
16 mu_1       0.7      0.992        0.980 0.742          1.28
17 mu_1       0.8      0.995        0.997 0.570          1.41
18 mu_1       0.9      0.963        0.960 0.194          2.38
19 mu_0       0.1      0.852        0.218 0.0000155      6.66
20 mu_0       0.2      0.982        0.933 0.0186         2.90
21 mu_0       0.3      1.05         0.977 0.192          3.08
22 mu_0       0.4      1.02         1.00  0.485          2.12
23 mu_0       0.5      1.01         1.01  0.661          1.52
24 mu_0       0.6      1.00         1.00  0.716          1.27
25 mu_0       0.7      0.994        0.991 0.773          1.28
26 mu_0       0.8      0.999        1.00  0.582          1.39
27 mu_0       0.9      0.971        0.958 0.318          2.08
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.685     1.54e-12  4.66e-37     56.2 
 2 mu         0.2      2.49      6.30e- 7  5.12e-25    145.  
 3 mu         0.3      1.82      1.10e- 3  5.66e-18     41.9 
 4 mu         0.4      1.34      6.98e- 2  5.63e-13     22.9 
 5 mu         0.5      1.08      5.80e- 1  4.24e- 9      6.29
 6 mu         0.6      1.16      8.41e- 1  1.74e- 6      6.47
 7 mu         0.7      1.34      7.28e- 1  7.99e-11      5.68
 8 mu         0.8      1.26      3.28e- 1  3.15e-17      8.58
 9 mu         0.9      2.16      8.16e- 4  1.47e-28     68.9 
10 mu_1       0.1      1.25      1.02e-11  4.66e-36     95.6 
11 mu_1       0.2      2.51      2.01e- 6  2.56e-24    124.  
12 mu_1       0.3      1.72      2.30e- 3  1.89e-17     35.4 
13 mu_1       0.4      1.26      1.09e- 1  1.41e-12     19.1 
14 mu_1       0.5      1.09      5.59e- 1  8.48e- 9      6.86
15 mu_1       0.6      1.17      1.02e+ 0  4.92e- 7      6.37
16 mu_1       0.7      1.35      6.56e- 1  1.94e-11      5.86
17 mu_1       0.8      1.24      2.70e- 1  6.71e-18      8.63
18 mu_1       0.9      2.27      5.55e- 4  2.78e-29     76.5 
19 mu_0       0.1      0.623     5.72e-13  0            51.8 
20 mu_0       0.2      2.48      2.78e- 7  0           151.  
21 mu_0       0.3      1.87      5.94e- 4  0            45.5 
22 mu_0       0.4      1.39      4.23e- 2  0            25.4 
23 mu_0       0.5      1.07      4.63e- 1  0             5.71
24 mu_0       0.6      1.15      8.31e- 1  0             6.61
25 mu_0       0.7      1.31      7.24e- 1  0             5.26
26 mu_0       0.8      1.33      3.18e- 1  0             8.37
27 mu_0       0.9      1.19      2.24e- 3  0            19.2 
[1] "Total run time was 248.858 seconds"
