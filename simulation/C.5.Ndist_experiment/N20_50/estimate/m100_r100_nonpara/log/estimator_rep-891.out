
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3704"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 3  3  2  3  1  1  5  3  1  3  1  2  1  3  4  8  4  5  3  2  2  2  4  3  4  1 
46 47 48 49 50 
 5  4  4  7  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03085 0.34099 0.60869 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
2197 1507 
[1] "treatment indicator table: "

   0    1 
1357 2347 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1846
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 16"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 97"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1858
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 5"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 60"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 274.806 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.389 0.0768
 2 mu         0.1   0.2 0.489 0.0993
 3 mu         0.1   0.3 0.625 0.123 
 4 mu         0.1   0.4 0.662 0.134 
 5 mu         0.1   0.5 0.674 0.138 
 6 mu         0.2   0.1 0.352 0.0305
 7 mu         0.2   0.2 0.449 0.0479
 8 mu         0.2   0.3 0.552 0.0575
 9 mu         0.2   0.4 0.584 0.0599
10 mu         0.2   0.5 0.602 0.0587
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.06         0.191  0.000158     15.1 
 2 mu         0.2      0.987        0.874  0.0759        3.38
 3 mu         0.3      0.967        0.942  0.465         2.27
 4 mu         0.4      0.967        0.960  0.549         1.84
 5 mu         0.5      0.986        0.975  0.564         1.26
 6 mu         0.6      1.00         1.00   0.687         1.44
 7 mu         0.7      1.01         1.01   0.734         1.24
 8 mu         0.8      1.02         1.02   0.690         1.36
 9 mu         0.9      0.993        1.00   0.313         1.99
10 mu_1       0.1      1.04         0.350  0.000491     11.2 
11 mu_1       0.2      0.973        0.871  0.123         3.19
12 mu_1       0.3      0.967        0.947  0.465         2.02
13 mu_1       0.4      0.969        0.970  0.592         1.77
14 mu_1       0.5      0.990        0.981  0.574         1.27
15 mu_1       0.6      1.00         1.00   0.683         1.45
16 mu_1       0.7      1.01         1.01   0.731         1.25
17 mu_1       0.8      1.02         1.01   0.674         1.38
18 mu_1       0.9      0.993        1.01   0.296         2.03
19 mu_0       0.1      1.07         0.174  0.000121     16.3 
20 mu_0       0.2      0.990        0.887  0.0640        3.63
21 mu_0       0.3      0.967        0.939  0.456         2.39
22 mu_0       0.4      0.967        0.960  0.520         1.88
23 mu_0       0.5      0.982        0.970  0.555         1.29
24 mu_0       0.6      1.00         1.00   0.692         1.43
25 mu_0       0.7      1.01         1.00   0.740         1.29
26 mu_0       0.8      1.03         1.04   0.674         1.34
27 mu_0       0.9      0.995        0.993  0.461         1.61
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.123     5.46e-13  2.78e-44      9.30
 2 mu         0.2      0.887     3.45e- 7  6.95e-30     30.9 
 3 mu         0.3      0.911     3.08e- 4  1.72e-21     23.8 
 4 mu         0.4      0.875     3.42e- 2  1.47e-15      8.09
 5 mu         0.5      1.14      3.87e- 1  5.49e-11      5.63
 6 mu         0.6      1.09      9.47e- 1  2.70e- 7      4.63
 7 mu         0.7      0.882     3.82e- 1  3.08e- 9      4.49
 8 mu         0.8      0.870     1.17e- 1  3.11e-15      5.33
 9 mu         0.9      1.40      1.66e- 4  4.65e-26     19.7 
10 mu_1       0.1      0.237     3.21e-12  2.72e-43     17.1 
11 mu_1       0.2      0.990     1.18e- 6  3.41e-29     28.5 
12 mu_1       0.3      0.882     7.49e- 4  5.63e-21     23.8 
13 mu_1       0.4      0.928     5.54e- 2  3.60e-15      6.85
14 mu_1       0.5      1.16      4.62e- 1  1.07e-10      5.40
15 mu_1       0.6      1.08      9.49e- 1  4.51e- 7      4.76
16 mu_1       0.7      0.868     3.70e- 1  1.05e- 9      4.58
17 mu_1       0.8      0.882     9.00e- 2  9.33e-16      5.86
18 mu_1       0.9      1.41      1.09e- 4  1.24e-26     21.4 
19 mu_0       0.1      0.110     2.50e-13  0             8.43
20 mu_0       0.2      0.861     1.58e- 7  0            31.5 
21 mu_0       0.3      0.924     1.35e- 4  0            23.8 
22 mu_0       0.4      0.840     2.08e- 2  0             9.43
23 mu_0       0.5      1.12      2.74e- 1  0             5.87
24 mu_0       0.6      1.12      9.52e- 1  0             4.43
25 mu_0       0.7      0.914     3.94e- 1  0             4.27
26 mu_0       0.8      0.820     1.58e- 1  0             4.44
27 mu_0       0.9      1.31      5.51e- 4  0            17.9 
[1] "Total run time was 278.006 seconds"
