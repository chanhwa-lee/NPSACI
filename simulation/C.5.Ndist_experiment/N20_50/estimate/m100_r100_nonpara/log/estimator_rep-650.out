
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3560"
[1] "cluster size dist'n: "

20 21 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 
 3  2  5  2  1  1  5  3  2  2  7  7  5  5  2  4  2  5  6  1  3  2  2  4  3  3 
47 48 49 50 
 2  2  3  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03223 0.36004 0.59622 1.00000 5.00000 
[1] "event indicator table: "

   0    1 
2115 1445 
[1] "treatment indicator table: "

   0    1 
1316 2244 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1768
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1792
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 196.231 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.356 0.0660
 2 mu         0.1   0.2 0.480 0.113 
 3 mu         0.1   0.3 0.501 0.0923
 4 mu         0.1   0.4 0.574 0.120 
 5 mu         0.1   0.5 0.644 0.157 
 6 mu         0.2   0.1 0.349 0.0418
 7 mu         0.2   0.2 0.457 0.0766
 8 mu         0.2   0.3 0.496 0.0582
 9 mu         0.2   0.4 0.566 0.0786
10 mu         0.2   0.5 0.632 0.103 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      0.869        0.439 0.000000800      7.30
 2 mu         0.2      0.997        0.960 0.00777          2.80
 3 mu         0.3      1.05         1.05  0.285            2.27
 4 mu         0.4      1.02         1.02  0.591            1.84
 5 mu         0.5      1.02         1.02  0.768            1.51
 6 mu         0.6      1.01         0.999 0.752            1.29
 7 mu         0.7      0.985        1.00  0.703            1.19
 8 mu         0.8      0.984        0.988 0.640            1.49
 9 mu         0.9      0.973        0.978 0.344            1.80
10 mu_1       0.1      0.888        0.632 0.00000298       5.19
11 mu_1       0.2      1.03         1.00  0.0148           2.43
12 mu_1       0.3      1.05         1.04  0.384            2.19
13 mu_1       0.4      1.02         0.997 0.606            1.78
14 mu_1       0.5      1.02         1.02  0.766            1.47
15 mu_1       0.6      1.00         0.994 0.745            1.29
16 mu_1       0.7      0.984        0.998 0.689            1.19
17 mu_1       0.8      0.984        0.993 0.627            1.50
18 mu_1       0.9      0.974        0.968 0.320            1.82
19 mu_0       0.1      0.867        0.413 0.000000558      7.53
20 mu_0       0.2      0.990        0.920 0.00600          2.89
21 mu_0       0.3      1.05         1.05  0.240            2.31
22 mu_0       0.4      1.02         1.01  0.570            1.89
23 mu_0       0.5      1.02         1.01  0.740            1.56
24 mu_0       0.6      1.01         1.01  0.762            1.32
25 mu_0       0.7      0.987        0.993 0.737            1.21
26 mu_0       0.8      0.985        0.988 0.655            1.46
27 mu_0       0.9      0.969        0.976 0.421            1.69
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.385     2.31e-13  5.17e-36     34.3 
 2 mu         0.2      0.842     2.48e- 7  4.48e-23     29.9 
 3 mu         0.3      1.12      5.15e- 4  1.13e-15     23.9 
 4 mu         0.4      1.05      4.18e- 2  1.40e-10      8.37
 5 mu         0.5      0.984     3.46e- 1  3.69e- 7      9.30
 6 mu         0.6      1.02      4.34e- 1  8.64e- 5      7.99
 7 mu         0.7      0.994     8.25e- 1  5.07e- 7      4.90
 8 mu         0.8      1.10      2.90e- 1  1.73e-11      5.12
 9 mu         0.9      1.26      5.24e- 4  1.46e-19     14.6 
10 mu_1       0.1      0.442     1.66e-12  4.55e-35     34.3 
11 mu_1       0.2      0.936     8.29e- 7  1.97e-22     35.4 
12 mu_1       0.3      1.11      1.09e- 3  3.30e-15     18.9 
13 mu_1       0.4      1.03      6.86e- 2  3.09e-10      7.61
14 mu_1       0.5      0.986     2.53e- 1  6.83e- 7      8.81
15 mu_1       0.6      1.02      4.77e- 1  9.43e- 5      7.92
16 mu_1       0.7      0.995     7.11e- 1  1.61e- 7      5.04
17 mu_1       0.8      1.11      2.90e- 1  4.81e-12      5.15
18 mu_1       0.9      1.25      3.81e- 4  3.85e-20     14.9 
19 mu_0       0.1      0.379     7.27e-14  6.89e-37     34.3 
20 mu_0       0.2      0.819     1.29e- 7  6.72e-24     28.5 
21 mu_0       0.3      1.12      2.70e- 4  1.93e-16     26.1 
22 mu_0       0.4      1.06      2.40e- 2  2.07e-11      9.50
23 mu_0       0.5      0.982     2.85e- 1  2.94e- 8      9.79
24 mu_0       0.6      1.01      4.11e- 1  6.97e- 6      8.10
25 mu_0       0.7      0.991     6.21e- 1  1.31e- 6      4.57
26 mu_0       0.8      1.03      3.32e- 1  6.73e-11      5.01
27 mu_0       0.9      1.35      1.81e- 3  1.12e-18     11.3 
[1] "Total run time was 199.606 seconds"
