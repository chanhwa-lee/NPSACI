
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3682"
[1] "cluster size dist'n: "

20 21 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 
 3  3  3  3  1  1  3  4  3  3  1  4  3  3  4  3  2  4  3  2  6  4  7  4  6  5 
47 48 50 
 5  5  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03313 0.33680 0.59336 0.99947 5.72562 
[1] "event indicator table: "

   0    1 
2199 1483 
[1] "treatment indicator table: "

   0    1 
1446 2236 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1818
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1864
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 200.011 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.381 0.0735
 2 mu         0.1   0.2 0.429 0.0874
 3 mu         0.1   0.3 0.566 0.0786
 4 mu         0.1   0.4 0.652 0.0858
 5 mu         0.1   0.5 0.726 0.0851
 6 mu         0.2   0.1 0.337 0.0403
 7 mu         0.2   0.2 0.397 0.0463
 8 mu         0.2   0.3 0.511 0.0357
 9 mu         0.2   0.4 0.598 0.0414
10 mu         0.2   0.5 0.654 0.0357
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.13         0.751   0.00167      8.99
 2 mu         0.2      1.10         1.05    0.161        2.37
 3 mu         0.3      1.05         1.02    0.589        1.82
 4 mu         0.4      1.01         1.00    0.650        1.59
 5 mu         0.5      0.998        1.01    0.685        1.54
 6 mu         0.6      0.999        0.999   0.769        1.33
 7 mu         0.7      0.996        0.993   0.705        1.26
 8 mu         0.8      0.998        0.988   0.722        1.32
 9 mu         0.9      0.986        0.991   0.414        1.61
10 mu_1       0.1      1.13         1.04    0.00530      8.61
11 mu_1       0.2      1.09         1.05    0.263        1.93
12 mu_1       0.3      1.04         1.01    0.551        1.70
13 mu_1       0.4      1.01         1.00    0.626        1.64
14 mu_1       0.5      0.998        1.01    0.686        1.49
15 mu_1       0.6      0.999        0.995   0.775        1.34
16 mu_1       0.7      0.996        0.994   0.705        1.26
17 mu_1       0.8      0.998        0.985   0.716        1.33
18 mu_1       0.9      0.986        0.992   0.411        1.64
19 mu_0       0.1      1.13         0.717   0.00127      9.04
20 mu_0       0.2      1.10         1.08    0.135        2.54
21 mu_0       0.3      1.06         1.01    0.591        1.87
22 mu_0       0.4      1.01         1.01    0.667        1.57
23 mu_0       0.5      0.998        0.999   0.684        1.58
24 mu_0       0.6      0.999        0.998   0.759        1.30
25 mu_0       0.7      0.997        0.999   0.705        1.27
26 mu_0       0.8      0.998        0.990   0.737        1.29
27 mu_0       0.9      0.986        0.972   0.413        1.49
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.154     1.17e-12  6.38e-38      9.12
 2 mu         0.2      1.29      4.46e- 7  3.94e-25     37.8 
 3 mu         0.3      1.55      5.63e- 4  9.86e-18     16.8 
 4 mu         0.4      1.29      5.76e- 2  1.46e-12     12.0 
 5 mu         0.5      1.05      4.24e- 1  1.18e- 8      6.85
 6 mu         0.6      1.09      6.20e- 1  7.23e- 6      4.96
 7 mu         0.7      1.08      4.85e- 1  1.05e- 9      6.76
 8 mu         0.8      0.972     1.52e- 1  2.10e-15      8.89
 9 mu         0.9      0.952     2.02e- 4  1.57e-25     13.9 
10 mu_1       0.1      0.319     7.41e-12  5.96e-37     17.0 
11 mu_1       0.2      1.52      1.52e- 6  1.84e-24     35.2 
12 mu_1       0.3      1.52      1.23e- 3  3.07e-17     18.0 
13 mu_1       0.4      1.23      8.84e- 2  3.42e-12      9.62
14 mu_1       0.5      1.02      5.29e- 1  2.26e- 8      6.20
15 mu_1       0.6      1.11      4.81e- 1  2.24e- 6      5.52
16 mu_1       0.7      1.07      6.08e- 1  2.79e-10      6.44
17 mu_1       0.8      0.967     1.22e- 1  4.89e-16      8.98
18 mu_1       0.9      0.946     1.45e- 4  3.24e-26     14.7 
19 mu_0       0.1      0.135     4.79e-13  4.62e-39      8.25
20 mu_0       0.2      1.23      2.02e- 7  3.21e-26     38.5 
21 mu_0       0.3      1.56      2.91e- 4  9.18e-19     16.3 
22 mu_0       0.4      1.33      3.28e- 2  1.41e-13     13.5 
23 mu_0       0.5      1.07      3.03e- 1  1.10e- 9      7.51
24 mu_0       0.6      1.07      7.39e- 1  1.55e- 6      4.84
25 mu_0       0.7      1.10      4.77e- 1  2.85e- 9      7.51
26 mu_0       0.8      0.991     2.27e- 1  8.55e-15      8.51
27 mu_0       0.9      1.00      7.10e- 4  1.28e-24     11.4 
[1] "Total run time was 203.353 seconds"
