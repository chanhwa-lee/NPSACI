
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3398"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 4  8  3  4  2  5  2  5  2  2  4  3  5  3  3  2  1  1  3  2  2  4  4  5  3  3 
46 47 48 49 50 
 4  4  2  3  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02643 0.34573 0.61185 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
2030 1368 
[1] "treatment indicator table: "

   0    1 
1316 2082 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1730
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 43"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1668
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 226.467 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.255 0.0400
 2 mu         0.1   0.2 0.371 0.0734
 3 mu         0.1   0.3 0.379 0.0591
 4 mu         0.1   0.4 0.431 0.0788
 5 mu         0.1   0.5 0.448 0.0726
 6 mu         0.2   0.1 0.291 0.0313
 7 mu         0.2   0.2 0.408 0.0585
 8 mu         0.2   0.3 0.424 0.0436
 9 mu         0.2   0.4 0.487 0.0618
10 mu         0.2   0.5 0.511 0.0555
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.701        0.277 0.0000000808      5.80
 2 mu         0.2      0.862        0.792 0.00131           3.26
 3 mu         0.3      0.986        0.958 0.0847            2.34
 4 mu         0.4      0.993        1.02  0.450             1.49
 5 mu         0.5      0.980        0.976 0.553             1.49
 6 mu         0.6      0.984        0.972 0.749             1.33
 7 mu         0.7      0.994        0.993 0.703             1.41
 8 mu         0.8      0.993        1.01  0.608             1.51
 9 mu         0.9      1.01         0.990 0.270             1.95
10 mu_1       0.1      0.733        0.511 0.000000329       5.55
11 mu_1       0.2      0.907        0.844 0.00273           3.34
12 mu_1       0.3      0.991        0.992 0.120             2.27
13 mu_1       0.4      0.989        1.01  0.461             1.49
14 mu_1       0.5      0.980        0.980 0.577             1.45
15 mu_1       0.6      0.985        0.985 0.748             1.33
16 mu_1       0.7      0.994        0.986 0.695             1.41
17 mu_1       0.8      0.993        1.01  0.601             1.53
18 mu_1       0.9      1.01         0.984 0.254             2.00
19 mu_0       0.1      0.698        0.250 0.0000000532      5.82
20 mu_0       0.2      0.851        0.773 0.000960          3.24
21 mu_0       0.3      0.984        0.948 0.0696            2.37
22 mu_0       0.4      0.996        1.04  0.420             1.53
23 mu_0       0.5      0.981        0.976 0.528             1.52
24 mu_0       0.6      0.982        0.977 0.751             1.33
25 mu_0       0.7      0.993        1.00  0.720             1.43
26 mu_0       0.8      0.993        0.991 0.639             1.44
27 mu_0       0.9      0.988        0.965 0.336             1.77
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.837     7.92e-11  5.84e-33     42.6 
 2 mu         0.2      2.75      5.43e- 6  2.00e-21     90.9 
 3 mu         0.3      2.31      3.16e- 3  8.66e-15     32.0 
 4 mu         0.4      1.62      9.05e- 2  3.48e-10     19.7 
 5 mu         0.5      1.35      5.31e- 1  1.01e- 6      6.61
 6 mu         0.6      1.26      7.64e- 1  1.98e- 4      6.17
 7 mu         0.7      1.19      5.98e- 1  3.49e- 8      5.49
 8 mu         0.8      1.24      1.92e- 1  6.05e-14      7.78
 9 mu         0.9      1.09      5.77e- 4  2.04e-24     15.3 
10 mu_1       0.1      1.57      4.05e-10  5.29e-32     76.1 
11 mu_1       0.2      2.86      1.84e- 5  9.08e-21     81.1 
12 mu_1       0.3      2.09      6.44e- 3  2.62e-14     34.0 
13 mu_1       0.4      1.55      1.32e- 1  7.90e-10     16.1 
14 mu_1       0.5      1.33      6.63e- 1  1.83e- 6      5.97
15 mu_1       0.6      1.26      7.32e- 1  8.56e- 5      6.58
16 mu_1       0.7      1.18      5.90e- 1  1.30e- 8      5.38
17 mu_1       0.8      1.24      1.55e- 1  1.97e-14      8.15
18 mu_1       0.9      1.06      4.12e- 4  5.88e-25     15.1 
19 mu_0       0.1      0.755     3.21e-11  6.03e-34     38.9 
20 mu_0       0.2      2.72      2.61e- 6  2.33e-22     93.3 
21 mu_0       0.3      2.40      1.75e- 3  1.15e-15     37.5 
22 mu_0       0.4      1.67      6.05e- 2  5.40e-11     22.1 
23 mu_0       0.5      1.37      3.90e- 1  1.88e- 7      7.55
24 mu_0       0.6      1.27      7.63e- 1  1.17e- 4      5.55
25 mu_0       0.7      1.20      6.43e- 1  8.62e- 8      6.55
26 mu_0       0.8      1.23      3.38e- 1  2.24e-13      6.27
27 mu_0       0.9      1.31      2.08e- 3  1.51e-23     17.0 
[1] "Total run time was 230.757 seconds"
