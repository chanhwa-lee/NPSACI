
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3492"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 4  3  5  1  2  2  5  6  1  2  2  3  4  6  3  2  4  1  3  3  6  7  1  2  4  3 
46 47 48 49 50 
 4  6  1  3  1 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04572 0.40795 0.66503 1.00000 5.00000 
[1] "event indicator table: "

   0    1 
2044 1448 
[1] "treatment indicator table: "

   0    1 
1258 2234 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1692
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1800
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 216.983 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.508 0.0716
 2 mu         0.1   0.2 0.561 0.0661
 3 mu         0.1   0.3 0.655 0.0953
 4 mu         0.1   0.4 0.716 0.104 
 5 mu         0.1   0.5 0.799 0.144 
 6 mu         0.2   0.1 0.404 0.0367
 7 mu         0.2   0.2 0.466 0.0386
 8 mu         0.2   0.3 0.550 0.0447
 9 mu         0.2   0.4 0.598 0.0456
10 mu         0.2   0.5 0.664 0.0695
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.19         0.690  0.000247      8.97
 2 mu         0.2      1.05         0.935  0.107         3.71
 3 mu         0.3      1.00         0.987  0.377         2.14
 4 mu         0.4      1.00         0.975  0.614         1.52
 5 mu         0.5      0.994        0.979  0.655         1.34
 6 mu         0.6      0.982        0.971  0.696         1.42
 7 mu         0.7      1.00         0.991  0.744         1.32
 8 mu         0.8      1.02         1.02   0.611         1.27
 9 mu         0.9      1.01         0.947  0.417         1.97
10 mu_1       0.1      1.14         0.829  0.000764      7.57
11 mu_1       0.2      1.03         0.993  0.175         3.11
12 mu_1       0.3      0.997        0.974  0.406         2.07
13 mu_1       0.4      1.00         0.983  0.605         1.51
14 mu_1       0.5      0.989        0.983  0.653         1.32
15 mu_1       0.6      0.982        0.987  0.706         1.43
16 mu_1       0.7      1.00         0.989  0.728         1.32
17 mu_1       0.8      1.02         1.03   0.599         1.32
18 mu_1       0.9      1.01         0.959  0.392         1.98
19 mu_0       0.1      1.19         0.667  0.000189      9.12
20 mu_0       0.2      1.05         0.905  0.0898        3.86
21 mu_0       0.3      1.00         0.999  0.349         2.17
22 mu_0       0.4      1.00         0.980  0.621         1.52
23 mu_0       0.5      0.998        0.981  0.657         1.36
24 mu_0       0.6      0.981        0.968  0.680         1.40
25 mu_0       0.7      0.999        0.989  0.750         1.37
26 mu_0       0.8      1.01         1.04   0.659         1.29
27 mu_0       0.9      1.02         0.995  0.475         1.86
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      5.00      6.03e-13  4.62e-37    392.  
 2 mu         0.2      3.50      4.69e- 7  2.54e-24    225.  
 3 mu         0.3      1.53      3.34e- 4  5.55e-17     36.2 
 4 mu         0.4      0.973     2.30e- 2  7.06e-12      9.41
 5 mu         0.5      0.898     2.70e- 1  5.00e- 8      7.08
 6 mu         0.6      1.05      4.59e- 1  1.49e- 7      7.41
 7 mu         0.7      1.19      7.37e- 1  3.79e-12      6.81
 8 mu         0.8      1.06      7.07e- 1  7.64e-19      6.13
 9 mu         0.9      1.02      7.79e- 3  1.41e-30     16.6 
10 mu_1       0.1      6.46      4.23e-12  4.23e-36    511.  
11 mu_1       0.2      2.77      1.42e- 6  1.16e-23    147.  
12 mu_1       0.3      1.40      7.61e- 4  1.69e-16     34.1 
13 mu_1       0.4      0.911     3.54e- 2  1.61e-11      6.65
14 mu_1       0.5      0.910     2.56e- 1  9.15e- 8      7.08
15 mu_1       0.6      1.08      4.71e- 1  3.25e- 8      7.25
16 mu_1       0.7      1.19      7.81e- 1  7.06e-13      6.59
17 mu_1       0.8      1.05      6.01e- 1  1.25e-19      5.94
18 mu_1       0.9      1.01      5.82e- 3  2.04e-31     16.3 
19 mu_0       0.1      4.84      2.27e-13  4.37e-38    378.  
20 mu_0       0.2      3.68      1.89e- 7  2.70e-25    245.  
21 mu_0       0.3      1.58      1.52e- 4  6.74e-18     37.1 
22 mu_0       0.4      1.01      1.12e- 2  1.00e-12     11.3 
23 mu_0       0.5      0.887     1.58e- 1  8.51e- 9      7.08
24 mu_0       0.6      1.01      3.46e- 1  3.25e- 7      7.65
25 mu_0       0.7      1.20      6.12e- 1  1.10e-11      7.35
26 mu_0       0.8      1.11      5.86e- 1  3.32e-18      7.08
27 mu_0       0.9      1.14      2.55e- 2  1.22e-29     18.8 
[1] "Total run time was 220.677 seconds"
