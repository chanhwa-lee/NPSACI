
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3409"
[1] "cluster size dist'n: "

20 21 22 24 25 26 27 28 29 30 31 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 
 4  5  2  8  5  3  2  3  2  6  6  2  3  6  3  3  2  3  3  2  3  4  5  2  2  4 
48 49 50 
 2  3  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03559 0.34433 0.59601 1.00000 6.59881 
[1] "event indicator table: "

   0    1 
1987 1422 
[1] "treatment indicator table: "

   0    1 
1221 2188 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1722
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 94"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1687
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 15"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 200.884 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.421 0.0552
 2 mu         0.1   0.2 0.512 0.0619
 3 mu         0.1   0.3 0.550 0.0772
 4 mu         0.1   0.4 0.667 0.0932
 5 mu         0.1   0.5 0.725 0.0792
 6 mu         0.2   0.1 0.328 0.0281
 7 mu         0.2   0.2 0.419 0.0274
 8 mu         0.2   0.3 0.466 0.0389
 9 mu         0.2   0.4 0.562 0.0524
10 mu         0.2   0.5 0.595 0.0362
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.20         0.737  0.000637      6.46
 2 mu         0.2      1.01         1.04   0.116         2.42
 3 mu         0.3      0.977        0.958  0.353         1.60
 4 mu         0.4      0.978        0.982  0.641         1.50
 5 mu         0.5      0.997        0.992  0.582         1.62
 6 mu         0.6      1.02         1.01   0.561         1.35
 7 mu         0.7      1.02         1.02   0.786         1.43
 8 mu         0.8      0.996        1.01   0.663         1.28
 9 mu         0.9      0.973        0.974  0.485         1.51
10 mu_1       0.1      1.11         0.937  0.00177       4.98
11 mu_1       0.2      1.00         1.01   0.170         2.13
12 mu_1       0.3      0.971        0.966  0.377         1.58
13 mu_1       0.4      0.981        0.957  0.656         1.47
14 mu_1       0.5      0.999        0.991  0.580         1.59
15 mu_1       0.6      1.02         1.01   0.574         1.39
16 mu_1       0.7      1.02         1.02   0.784         1.41
17 mu_1       0.8      0.995        1.01   0.665         1.27
18 mu_1       0.9      0.973        0.966  0.473         1.52
19 mu_0       0.1      1.21         0.695  0.000512      6.63
20 mu_0       0.2      1.01         1.03   0.103         2.50
21 mu_0       0.3      0.979        0.961  0.343         1.63
22 mu_0       0.4      0.977        0.991  0.616         1.53
23 mu_0       0.5      0.996        0.987  0.585         1.66
24 mu_0       0.6      1.01         1.00   0.542         1.38
25 mu_0       0.7      1.02         1.02   0.744         1.47
26 mu_0       0.8      1.00         1.01   0.656         1.31
27 mu_0       0.9      0.979        1.01   0.592         1.42
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.352     3.54e-14  2.22e-44     19.1 
 2 mu         0.2      0.972     6.71e- 8  1.56e-30     39.6 
 3 mu         0.3      0.970     1.41e- 4  1.97e-22      8.76
 4 mu         0.4      1.23      1.25e- 2  1.10e-16     10.1 
 5 mu         0.5      1.08      1.59e- 1  3.16e-12      7.77
 6 mu         0.6      1.06      4.55e- 1  1.38e- 8      5.65
 7 mu         0.7      1.20      7.23e- 1  3.14e-10      7.59
 8 mu         0.8      1.14      3.18e- 1  5.50e-16      8.40
 9 mu         0.9      1.03      6.30e- 3  3.58e-26     12.5 
10 mu_1       0.1      0.589     2.76e-13  2.22e-43     31.8 
11 mu_1       0.2      0.970     2.04e- 7  7.81e-30     33.0 
12 mu_1       0.3      1.04      3.06e- 4  6.56e-22      8.71
13 mu_1       0.4      1.25      2.28e- 2  2.75e-16     10.5 
14 mu_1       0.5      1.06      2.37e- 1  6.31e-12      7.95
15 mu_1       0.6      1.07      4.37e- 1  2.31e- 8      6.12
16 mu_1       0.7      1.21      7.28e- 1  7.49e-11      7.83
17 mu_1       0.8      1.12      3.68e- 1  1.15e-16      8.09
18 mu_1       0.9      1.03      4.88e- 3  6.76e-27     13.1 
19 mu_0       0.1      0.325     9.22e-15  0            17.7 
20 mu_0       0.2      0.972     3.17e- 8  0            41.3 
21 mu_0       0.3      0.942     7.03e- 5  0             9.51
22 mu_0       0.4      1.21      6.00e- 3  0            10.0 
23 mu_0       0.5      1.10      9.59e- 2  0             7.98
24 mu_0       0.6      1.05      3.90e- 1  0             6.20
25 mu_0       0.7      1.17      6.03e- 1  0             7.03
26 mu_0       0.8      1.18      3.69e- 1  0             9.62
27 mu_0       0.9      1.04      8.06e- 3  0             8.60
[1] "Total run time was 204.232 seconds"
