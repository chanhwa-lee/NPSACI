
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3476"
[1] "cluster size dist'n: "

20 21 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 
 5  8  4  4  3  4  2  1  1  4  3  3  2  2  4  3  6  2  2  4  3  2  2  3  6  6 
47 48 49 50 
 2  4  4  1 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03327 0.32099 0.60499 1.00000 7.00000 
[1] "event indicator table: "

   0    1 
2084 1392 
[1] "treatment indicator table: "

   0    1 
1279 2197 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1733
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 8"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 27"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1743
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 64"
[1] "     Cluster: 68"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 192.493 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.368 0.116 
 2 mu         0.1   0.2 0.492 0.0886
 3 mu         0.1   0.3 0.543 0.0815
 4 mu         0.1   0.4 0.572 0.0716
 5 mu         0.1   0.5 0.600 0.0762
 6 mu         0.2   0.1 0.374 0.0721
 7 mu         0.2   0.2 0.502 0.0545
 8 mu         0.2   0.3 0.563 0.0528
 9 mu         0.2   0.4 0.606 0.0547
10 mu         0.2   0.5 0.631 0.0522
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.895        0.657   0.00567      4.61
 2 mu         0.2      1.04         0.980   0.257        2.79
 3 mu         0.3      1.02         0.966   0.554        1.68
 4 mu         0.4      1.02         1.01    0.628        2.07
 5 mu         0.5      1.01         0.997   0.622        1.57
 6 mu         0.6      0.999        1.01    0.614        1.45
 7 mu         0.7      0.999        1.00    0.744        1.39
 8 mu         0.8      0.987        0.991   0.648        1.36
 9 mu         0.9      0.976        0.965   0.507        1.66
10 mu_1       0.1      0.947        0.848   0.0161       4.55
11 mu_1       0.2      1.04         0.978   0.274        2.68
12 mu_1       0.3      1.02         0.974   0.583        1.79
13 mu_1       0.4      1.02         0.993   0.654        2.05
14 mu_1       0.5      1.01         0.996   0.593        1.49
15 mu_1       0.6      0.999        1.01    0.636        1.45
16 mu_1       0.7      0.998        0.992   0.729        1.38
17 mu_1       0.8      0.986        0.985   0.648        1.34
18 mu_1       0.9      0.977        0.975   0.505        1.65
19 mu_0       0.1      0.889        0.654   0.00450      4.62
20 mu_0       0.2      1.04         0.976   0.245        2.81
21 mu_0       0.3      1.02         0.972   0.525        1.74
22 mu_0       0.4      1.03         1.02    0.611        2.09
23 mu_0       0.5      1.01         0.990   0.651        1.64
24 mu_0       0.6      0.998        1.01    0.581        1.45
25 mu_0       0.7      1.00         0.995   0.733        1.39
26 mu_0       0.8      0.994        1.00    0.649        1.42
27 mu_0       0.9      0.968        0.987   0.526        1.70
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.722     2.51e-13  4.28e-38     44.0 
 2 mu         0.2      0.898     1.47e- 7  1.49e-25     28.5 
 3 mu         0.3      1.11      2.59e- 4  2.83e-18     23.8 
 4 mu         0.4      1.31      2.00e- 2  3.68e-13     22.8 
 5 mu         0.5      1.29      2.70e- 1  3.00e- 9      9.53
 6 mu         0.6      1.25      7.37e- 1  3.78e- 8      6.84
 7 mu         0.7      1.21      8.19e- 1  1.28e-12      5.20
 8 mu         0.8      1.06      2.84e- 1  3.86e-19      6.60
 9 mu         0.9      0.967     2.97e- 3  1.42e-30      9.31
10 mu_1       0.1      1.04      1.42e-12  4.09e-37     58.7 
11 mu_1       0.2      0.858     5.09e- 7  7.10e-25     19.0 
12 mu_1       0.3      1.16      5.80e- 4  9.02e-18     27.5 
13 mu_1       0.4      1.31      3.02e- 2  8.78e-13     19.8 
14 mu_1       0.5      1.29      3.72e- 1  5.73e- 9     10.0 
15 mu_1       0.6      1.25      7.31e- 1  8.40e- 9      6.84
16 mu_1       0.7      1.22      8.60e- 1  2.43e-13      5.30
17 mu_1       0.8      1.04      2.63e- 1  6.44e-20      6.73
18 mu_1       0.9      0.991     2.09e- 3  2.11e-31      9.51
19 mu_0       0.1      0.688     8.73e-14  0            42.4 
20 mu_0       0.2      0.908     5.68e- 8  0            30.9 
21 mu_0       0.3      1.08      1.13e- 4  0            22.2 
22 mu_0       0.4      1.31      1.06e- 2  0            24.8 
23 mu_0       0.5      1.29      2.04e- 1  0             9.03
24 mu_0       0.6      1.25      5.92e- 1  0             7.79
25 mu_0       0.7      1.20      7.06e- 1  0             5.80
26 mu_0       0.8      1.11      3.10e- 1  0             6.08
27 mu_0       0.9      0.752     1.51e- 3  0             7.55
[1] "Total run time was 195.538 seconds"
