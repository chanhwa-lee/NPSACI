
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3464"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 38 39 40 41 42 44 45 46 47 
 2  4  2  1  3  6  7  2  5  2  3  2  4  3  5  6  3  5  3  2  1  5  7  3  2  5 
48 49 50 
 3  2  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.05459 0.38803 0.64322 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
2086 1378 
[1] "treatment indicator table: "

   0    1 
1169 2295 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1728
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 65"
[1] "     Cluster: 71"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1736
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 55"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 246.253 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.399 0.0699
 2 mu         0.1   0.2 0.500 0.0894
 3 mu         0.1   0.3 0.564 0.107 
 4 mu         0.1   0.4 0.649 0.126 
 5 mu         0.1   0.5 0.685 0.123 
 6 mu         0.2   0.1 0.287 0.0310
 7 mu         0.2   0.2 0.362 0.0494
 8 mu         0.2   0.3 0.417 0.0576
 9 mu         0.2   0.4 0.499 0.0621
10 mu         0.2   0.5 0.536 0.0634
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.08         0.587  0.000227     11.6 
 2 mu         0.2      0.926        0.909  0.0676        2.12
 3 mu         0.3      0.977        0.963  0.443         2.03
 4 mu         0.4      0.970        0.952  0.500         1.57
 5 mu         0.5      0.954        0.948  0.677         1.38
 6 mu         0.6      0.979        0.983  0.719         1.26
 7 mu         0.7      1.01         0.999  0.677         1.29
 8 mu         0.8      1.00         1.02   0.739         1.29
 9 mu         0.9      1.01         0.997  0.643         1.53
10 mu_1       0.1      1.06         0.762  0.000703      5.17
11 mu_1       0.2      0.921        0.907  0.107         1.92
12 mu_1       0.3      0.984        0.935  0.452         2.06
13 mu_1       0.4      0.965        0.951  0.548         1.50
14 mu_1       0.5      0.955        0.945  0.688         1.37
15 mu_1       0.6      0.983        0.988  0.716         1.26
16 mu_1       0.7      1.01         1.00   0.683         1.28
17 mu_1       0.8      1.00         1.01   0.726         1.29
18 mu_1       0.9      1.01         0.990  0.646         1.54
19 mu_0       0.1      1.08         0.552  0.000174     12.4 
20 mu_0       0.2      0.927        0.851  0.0576        2.21
21 mu_0       0.3      0.974        0.963  0.411         2.02
22 mu_0       0.4      0.972        0.948  0.464         1.61
23 mu_0       0.5      0.953        0.949  0.665         1.39
24 mu_0       0.6      0.972        0.962  0.721         1.28
25 mu_0       0.7      1.01         1.00   0.665         1.30
26 mu_0       0.8      1.01         1.01   0.701         1.31
27 mu_0       0.9      1.01         0.997  0.622         1.65
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.635     9.16e-16  8.07e-43     31.0 
 2 mu         0.2      3.30      5.36e- 9  8.98e-29    111.  
 3 mu         0.3      2.05      4.59e- 5  1.30e-20     38.2 
 4 mu         0.4      1.18      7.11e- 3  7.11e-15      9.99
 5 mu         0.5      1.07      1.41e- 1  1.77e-10      9.37
 6 mu         0.6      1.12      3.86e- 1  5.97e- 7      6.33
 7 mu         0.7      1.19      7.52e- 1  4.03e- 9      7.35
 8 mu         0.8      1.12      5.93e- 1  6.14e-15      9.32
 9 mu         0.9      0.954     1.07e- 2  2.58e-25      7.70
10 mu_1       0.1      1.20      6.96e-15  7.74e-42     51.6 
11 mu_1       0.2      3.45      2.00e- 8  4.30e-28    111.  
12 mu_1       0.3      1.78      1.10e- 4  4.15e-20     30.0 
13 mu_1       0.4      1.12      1.25e- 2  1.70e-14      8.55
14 mu_1       0.5      1.07      1.67e- 1  3.40e-10      9.75
15 mu_1       0.6      1.12      3.99e- 1  9.54e- 7      6.73
16 mu_1       0.7      1.19      8.06e- 1  1.15e- 9      7.29
17 mu_1       0.8      1.11      6.05e- 1  1.54e-15      9.51
18 mu_1       0.9      0.955     7.89e- 3  5.73e-26      8.15
19 mu_0       0.1      0.572     2.74e-16  0            28.7 
20 mu_0       0.2      3.26      1.86e- 9  0           111.  
21 mu_0       0.3      2.17      1.76e- 5  0            41.7 
22 mu_0       0.4      1.21      3.62e- 3  0            11.3 
23 mu_0       0.5      1.06      8.61e- 2  0             9.00
24 mu_0       0.6      1.12      2.93e- 1  0             6.08
25 mu_0       0.7      1.20      6.93e- 1  0             7.48
26 mu_0       0.8      1.14      4.84e- 1  0             8.56
27 mu_0       0.9      0.937     2.78e- 2  0             9.70
[1] "Total run time was 250.227 seconds"
