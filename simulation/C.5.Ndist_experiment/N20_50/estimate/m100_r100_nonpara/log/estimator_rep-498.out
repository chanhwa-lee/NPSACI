
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3417"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 37 38 39 40 41 42 43 44 45 46 
 2  4  3  5  6  1  4  5  3  5  2  3  3  2  4  5  1  4  3  6  3  2  4  4  5  2 
47 48 49 
 4  2  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02127 0.29774 0.56690 0.96018 6.00000 
[1] "event indicator table: "

   0    1 
1993 1424 
[1] "treatment indicator table: "

   0    1 
1332 2085 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1782
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 53"
[1] "     Cluster: 57"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1635
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 80"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 176.941 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.466 0.0883
 2 mu         0.1   0.2 0.535 0.0957
 3 mu         0.1   0.3 0.593 0.103 
 4 mu         0.1   0.4 0.633 0.118 
 5 mu         0.1   0.5 0.655 0.114 
 6 mu         0.2   0.1 0.409 0.0461
 7 mu         0.2   0.2 0.502 0.0502
 8 mu         0.2   0.3 0.566 0.0516
 9 mu         0.2   0.4 0.612 0.0611
10 mu         0.2   0.5 0.667 0.0549
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.04         0.393  0.000706      8.92
 2 mu         0.2      1.09         1.01   0.0602        3.44
 3 mu         0.3      1.04         1.03   0.309         2.00
 4 mu         0.4      1.02         1.00   0.600         1.73
 5 mu         0.5      1.00         0.984  0.659         1.55
 6 mu         0.6      0.983        0.982  0.707         1.20
 7 mu         0.7      0.984        0.973  0.809         1.37
 8 mu         0.8      0.989        0.986  0.612         1.44
 9 mu         0.9      0.981        1.01   0.309         1.47
10 mu_1       0.1      1.13         0.644  0.00264       7.69
11 mu_1       0.2      1.07         1.02   0.119         3.00
12 mu_1       0.3      1.03         1.02   0.335         1.80
13 mu_1       0.4      1.02         0.994  0.598         1.80
14 mu_1       0.5      0.998        0.992  0.648         1.48
15 mu_1       0.6      0.981        0.980  0.720         1.21
16 mu_1       0.7      0.985        0.975  0.802         1.39
17 mu_1       0.8      0.988        0.988  0.610         1.43
18 mu_1       0.9      0.982        1.01   0.290         1.48
19 mu_0       0.1      1.03         0.361  0.000491      9.06
20 mu_0       0.2      1.10         0.996  0.0455        3.55
21 mu_0       0.3      1.04         1.04   0.298         2.08
22 mu_0       0.4      1.02         0.993  0.577         1.68
23 mu_0       0.5      1.00         0.987  0.649         1.62
24 mu_0       0.6      0.986        0.989  0.686         1.22
25 mu_0       0.7      0.982        0.974  0.800         1.32
26 mu_0       0.8      0.992        0.992  0.620         1.48
27 mu_0       0.9      0.975        0.969  0.486         1.42
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.244     3.84e-11  2.62e-35     15.1 
 2 mu         0.2      1.35      4.04e- 6  3.59e-23     32.5 
 3 mu         0.3      1.60      2.45e- 3  3.49e-16     28.1 
 4 mu         0.4      1.18      9.99e- 2  2.50e-11     11.6 
 5 mu         0.5      1.19      3.51e- 1  1.13e- 7     13.4 
 6 mu         0.6      1.11      5.59e- 1  1.69e- 6      6.58
 7 mu         0.7      0.962     5.17e- 1  1.21e-10      5.33
 8 mu         0.8      1.12      2.08e- 1  8.17e-17      5.67
 9 mu         0.9      1.05      5.01e- 4  8.57e-28     11.5 
10 mu_1       0.1      0.485     2.24e-10  2.38e-34     28.7 
11 mu_1       0.2      1.55      1.26e- 5  1.64e-22     31.0 
12 mu_1       0.3      1.51      4.93e- 3  1.06e-15     25.1 
13 mu_1       0.4      1.16      1.49e- 1  5.69e-11      9.96
14 mu_1       0.5      1.20      3.21e- 1  2.07e- 7     13.4 
15 mu_1       0.6      1.09      6.11e- 1  5.38e- 7      6.43
16 mu_1       0.7      0.961     4.82e- 1  3.30e-11      5.41
17 mu_1       0.8      1.14      1.55e- 1  1.95e-17      5.91
18 mu_1       0.9      1.03      3.66e- 4  1.82e-28     11.8 
19 mu_0       0.1      0.217     1.78e-11  2.58e-36     13.5 
20 mu_0       0.2      1.30      1.92e- 6  3.99e-24     32.9 
21 mu_0       0.3      1.65      1.39e- 3  4.44e-17     29.4 
22 mu_0       0.4      1.20      6.63e- 2  3.70e-12     12.7 
23 mu_0       0.5      1.17      4.11e- 1  2.02e- 8     13.4 
24 mu_0       0.6      1.13      4.11e- 1  3.41e- 6      7.39
25 mu_0       0.7      0.963     6.12e- 1  3.25e-10      5.13
26 mu_0       0.8      1.04      3.03e- 1  3.30e-16      4.72
27 mu_0       0.9      1.25      1.77e- 3  6.93e-27      8.86
[1] "Total run time was 179.993 seconds"
