
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3539"
[1] "cluster size dist'n: "

20 21 22 23 24 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 
 4  7  3  4  2  2  4  3  2  4  3  3  2  3  2  4  3  4  3  2  3  2  3  3  5  7 
47 48 49 50 
 3  1  1  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.05375 0.38885 0.65019 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
2104 1435 
[1] "treatment indicator table: "

   0    1 
1356 2183 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1741
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1798
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 261.029 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.427 0.0541
 2 mu         0.1   0.2 0.591 0.0772
 3 mu         0.1   0.3 0.684 0.100 
 4 mu         0.1   0.4 0.749 0.113 
 5 mu         0.1   0.5 0.787 0.120 
 6 mu         0.2   0.1 0.336 0.0298
 7 mu         0.2   0.2 0.473 0.0350
 8 mu         0.2   0.3 0.552 0.0452
 9 mu         0.2   0.4 0.612 0.0537
10 mu         0.2   0.5 0.649 0.0536
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.13         0.616   0.00375      8.09
 2 mu         0.2      1.03         0.977   0.290        3.17
 3 mu         0.3      1.03         0.985   0.571        1.96
 4 mu         0.4      1.02         1.00    0.627        1.71
 5 mu         0.5      1.02         0.999   0.689        1.50
 6 mu         0.6      0.998        0.988   0.710        1.34
 7 mu         0.7      0.993        0.988   0.505        1.25
 8 mu         0.8      0.981        0.967   0.615        1.38
 9 mu         0.9      1.02         0.967   0.585        2.09
10 mu_1       0.1      1.04         0.772   0.00929      5.55
11 mu_1       0.2      1.04         0.965   0.389        2.80
12 mu_1       0.3      1.03         1.01    0.551        1.90
13 mu_1       0.4      1.03         1.01    0.663        1.67
14 mu_1       0.5      1.01         1.00    0.701        1.52
15 mu_1       0.6      0.999        0.988   0.679        1.31
16 mu_1       0.7      0.992        1.00    0.504        1.24
17 mu_1       0.8      0.982        0.958   0.591        1.40
18 mu_1       0.9      1.02         0.961   0.580        2.10
19 mu_0       0.1      1.13         0.588   0.00313      8.38
20 mu_0       0.2      1.03         0.925   0.265        3.27
21 mu_0       0.3      1.03         1.00    0.542        2.03
22 mu_0       0.4      1.02         1.01    0.595        1.74
23 mu_0       0.5      1.02         1.01    0.676        1.48
24 mu_0       0.6      0.997        0.994   0.704        1.40
25 mu_0       0.7      0.997        0.999   0.508        1.27
26 mu_0       0.8      0.980        0.986   0.605        1.34
27 mu_0       0.9      1.01         0.991   0.483        2.00
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.979     1.06e-11  8.38e-42     90.0 
 2 mu         0.2      0.760     4.05e- 6  2.62e-28     19.2 
 3 mu         0.3      0.886     2.18e- 3  1.93e-20     12.8 
 4 mu         0.4      0.985     1.12e- 1  6.92e-15      8.45
 5 mu         0.5      1.09      4.38e- 1  1.32e-10      7.37
 6 mu         0.6      1.08      6.67e- 1  3.87e- 7      5.57
 7 mu         0.7      1.13      6.55e- 1  2.41e- 7      7.16
 8 mu         0.8      1.01      1.14e- 1  1.85e-12      5.49
 9 mu         0.9      0.777     6.55e- 4  8.83e-22     15.5 
10 mu_1       0.1      0.630     7.16e-11  8.20e-41     45.0 
11 mu_1       0.2      0.741     1.35e- 5  1.28e-27     15.4 
12 mu_1       0.3      0.879     4.13e- 3  6.28e-20     11.4 
13 mu_1       0.4      0.998     1.51e- 1  1.69e-14      9.33
14 mu_1       0.5      1.11      4.93e- 1  2.59e-10      6.52
15 mu_1       0.6      1.09      7.39e- 1  6.31e- 7      5.77
16 mu_1       0.7      1.14      6.22e- 1  3.87e- 8      7.16
17 mu_1       0.8      0.988     1.00e- 1  6.15e-13      5.76
18 mu_1       0.9      0.785     4.87e- 4  2.62e-22     16.8 
19 mu_0       0.1      1.02      4.16e-12  2.02e-43     94.9 
20 mu_0       0.2      0.765     1.49e- 6  7.12e-30     22.8 
21 mu_0       0.3      0.889     1.34e- 3  5.98e-22     13.5 
22 mu_0       0.4      0.976     6.09e- 2  2.51e-16      8.99
23 mu_0       0.5      1.08      3.73e- 1  5.75e-12      8.23
24 mu_0       0.6      1.08      7.45e- 1  2.10e- 8      5.28
25 mu_0       0.7      1.12      6.09e- 1  5.88e- 7      7.16
26 mu_0       0.8      1.11      1.60e- 1  6.77e-12      5.02
27 mu_0       0.9      0.708     2.17e- 3  6.47e-21     11.4 
[1] "Total run time was 265.366 seconds"
