
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3403"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 46 
 3  3  3  5  3  8  4  2  4  5  4  3  3  3  2  4  2  4  2  2  1  1  3  3  6  5 
47 48 49 50 
 1  1  3  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0325  0.3341  0.6004  1.0000  5.0000 
[1] "event indicator table: "

   0    1 
1977 1426 
[1] "treatment indicator table: "

   0    1 
1411 1992 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1749
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 51"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1654
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 69"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 231.743 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.350 0.0411
 2 mu         0.1   0.2 0.510 0.0595
 3 mu         0.1   0.3 0.610 0.0946
 4 mu         0.1   0.4 0.634 0.0945
 5 mu         0.1   0.5 0.681 0.0849
 6 mu         0.2   0.1 0.326 0.0288
 7 mu         0.2   0.2 0.435 0.0347
 8 mu         0.2   0.3 0.498 0.0457
 9 mu         0.2   0.4 0.536 0.0520
10 mu         0.2   0.5 0.587 0.0521
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.10         1.00    0.00946      4.31
 2 mu         0.2      1.03         1.02    0.258        2.03
 3 mu         0.3      0.998        0.997   0.506        1.48
 4 mu         0.4      0.987        0.993   0.708        1.29
 5 mu         0.5      0.990        0.985   0.692        1.23
 6 mu         0.6      1.00         0.988   0.651        1.28
 7 mu         0.7      1.00         1.02    0.764        1.23
 8 mu         0.8      1.01         1.00    0.573        1.50
 9 mu         0.9      0.975        0.974   0.147        1.66
10 mu_1       0.1      1.05         0.995   0.0218       3.63
11 mu_1       0.2      1.02         1.01    0.328        1.67
12 mu_1       0.3      0.993        0.992   0.551        1.49
13 mu_1       0.4      0.986        0.995   0.715        1.28
14 mu_1       0.5      0.992        0.986   0.693        1.23
15 mu_1       0.6      1.00         0.991   0.653        1.28
16 mu_1       0.7      1.00         1.01    0.747        1.24
17 mu_1       0.8      1.01         1.01    0.549        1.52
18 mu_1       0.9      0.974        0.967   0.137        1.68
19 mu_0       0.1      1.11         1.00    0.00809      4.46
20 mu_0       0.2      1.03         1.02    0.240        2.14
21 mu_0       0.3      1.00         0.999   0.487        1.48
22 mu_0       0.4      0.987        0.990   0.692        1.32
23 mu_0       0.5      0.988        0.986   0.690        1.22
24 mu_0       0.6      1.00         0.993   0.647        1.28
25 mu_0       0.7      1.01         1.01    0.771        1.22
26 mu_0       0.8      1.01         1.01    0.670        1.41
27 mu_0       0.9      0.978        0.975   0.236        1.62
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.212     1.68e-10  6.93e-36     11.6 
 2 mu         0.2      0.901     8.54e- 6  1.61e-23     14.4 
 3 mu         0.3      1.08      3.32e- 3  1.36e-16      8.27
 4 mu         0.4      0.939     1.46e- 1  9.93e-12      5.54
 5 mu         0.5      0.864     5.01e- 1  5.19e- 8      3.98
 6 mu         0.6      0.969     5.28e- 1  1.24e- 5      4.80
 7 mu         0.7      1.12      7.54e- 1  1.84e- 9      6.72
 8 mu         0.8      1.36      1.20e- 1  2.26e-15      9.62
 9 mu         0.9      1.22      5.84e- 5  3.38e-26     33.7 
10 mu_1       0.1      0.369     9.28e-10  6.10e-35     17.5 
11 mu_1       0.2      1.03      2.73e- 5  7.65e-23     15.6 
12 mu_1       0.3      1.07      6.91e- 3  4.32e-16      6.87
13 mu_1       0.4      0.917     2.19e- 1  2.36e-11      4.76
14 mu_1       0.5      0.861     4.16e- 1  9.88e- 8      3.82
15 mu_1       0.6      0.989     4.76e- 1  3.13e- 6      4.96
16 mu_1       0.7      1.14      8.34e- 1  5.70e-10      6.67
17 mu_1       0.8      1.36      9.29e- 2  6.79e-16      9.67
18 mu_1       0.9      1.21      4.24e- 5  9.02e-27     35.7 
19 mu_0       0.1      0.194     8.27e-11  9.24e-37     10.9 
20 mu_0       0.2      0.868     3.85e- 6  9.56e-25     14.5 
21 mu_0       0.3      1.09      1.77e- 3  9.25e-18      8.98
22 mu_0       0.4      0.953     1.04e- 1  7.88e-13      6.06
23 mu_0       0.5      0.867     3.65e- 1  4.94e- 9      4.14
24 mu_0       0.6      0.938     3.83e- 1  5.81e- 6      4.56
25 mu_0       0.7      1.07      6.00e- 1  4.79e- 9      6.85
26 mu_0       0.8      1.36      2.22e- 1  8.60e-15      9.38
27 mu_0       0.9      1.30      2.05e- 4  2.57e-25     18.7 
[1] "Total run time was 236.467 seconds"
