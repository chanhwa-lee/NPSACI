
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3575"
[1] "cluster size dist'n: "

20 21 22 23 24 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 
 3  3  2  2  5  2  4  1  7  5  3  6  2  2  2  1  2  3  4  7  4  3  2  2  4  5 
47 48 49 50 
 5  2  3  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04017 0.37959 0.65215 1.00000 5.98908 
[1] "event indicator table: "

   0    1 
2186 1389 
[1] "treatment indicator table: "

   0    1 
1233 2342 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1794
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 12"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 26"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1781
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 383.881 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.278 0.0479
 2 mu         0.1   0.2 0.374 0.0642
 3 mu         0.1   0.3 0.468 0.0804
 4 mu         0.1   0.4 0.575 0.0904
 5 mu         0.1   0.5 0.635 0.104 
 6 mu         0.2   0.1 0.260 0.0351
 7 mu         0.2   0.2 0.352 0.0472
 8 mu         0.2   0.3 0.446 0.0474
 9 mu         0.2   0.4 0.549 0.0474
10 mu         0.2   0.5 0.601 0.0558
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      1.09         0.428 0.0000125      11.0 
 2 mu         0.2      1.09         0.951 0.0168          3.40
 3 mu         0.3      1.02         1.00  0.310           1.97
 4 mu         0.4      0.983        0.968 0.455           1.54
 5 mu         0.5      1.00         1.02  0.537           1.30
 6 mu         0.6      1.00         1.01  0.723           1.29
 7 mu         0.7      1.01         0.984 0.583           1.36
 8 mu         0.8      1.01         1.02  0.667           1.34
 9 mu         0.9      0.962        0.956 0.444           1.53
10 mu_1       0.1      1.11         0.590 0.0000460      10.7 
11 mu_1       0.2      1.06         0.991 0.0319          3.12
12 mu_1       0.3      1.01         1.02  0.407           1.89
13 mu_1       0.4      0.984        0.965 0.423           1.47
14 mu_1       0.5      1.01         1.01  0.559           1.31
15 mu_1       0.6      0.998        1.01  0.724           1.28
16 mu_1       0.7      1.01         0.985 0.591           1.37
17 mu_1       0.8      1.01         1.01  0.660           1.32
18 mu_1       0.9      0.962        0.958 0.437           1.57
19 mu_0       0.1      1.09         0.391 0.00000877     11.1 
20 mu_0       0.2      1.09         0.934 0.0130          3.80
21 mu_0       0.3      1.02         0.996 0.268           2.04
22 mu_0       0.4      0.983        0.975 0.477           1.58
23 mu_0       0.5      1.00         1.02  0.514           1.31
24 mu_0       0.6      1.00         1.01  0.686           1.30
25 mu_0       0.7      1.00         0.984 0.565           1.35
26 mu_0       0.8      1.02         1.01  0.674           1.40
27 mu_0       0.9      0.964        0.969 0.498           1.39
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.109      5.68e-14  2.80e-43      7.34
 2 mu         0.2     0.626      1.33e- 7  6.23e-29     15.9 
 3 mu         0.3     1.09       1.71e- 4  1.35e-20     16.3 
 4 mu         0.4     1.44       1.95e- 2  9.87e-15     13.4 
 5 mu         0.5     1.40       2.46e- 1  3.07e-10     13.3 
 6 mu         0.6     1.15       6.53e- 1  4.66e- 7     12.6 
 7 mu         0.7     1.13       4.80e- 1  6.18e- 7      8.47
 8 mu         0.8     0.909      4.65e- 1  1.23e-11      5.38
 9 mu         0.9     1.44       7.95e- 3  3.71e-20     22.0 
10 mu_1       0.1     0.221      3.40e-13  2.69e-42     14.0 
11 mu_1       0.2     0.773      5.04e- 7  2.99e-28     16.8 
12 mu_1       0.3     1.16       3.80e- 4  4.33e-20     14.5 
13 mu_1       0.4     1.48       3.37e- 2  2.37e-14     15.1 
14 mu_1       0.5     1.35       2.47e- 1  5.90e-10     11.9 
15 mu_1       0.6     1.14       6.40e- 1  7.77e- 7     13.3 
16 mu_1       0.7     1.12       4.22e- 1  2.21e- 7      7.66
17 mu_1       0.8     0.901      3.97e- 1  3.83e-12      5.42
18 mu_1       0.9     1.46       6.00e- 3  1.03e-20     23.5 
19 mu_0       0.1     0.0967     2.54e-14  0             6.60
20 mu_0       0.2     0.590      4.01e- 8  0            16.0 
21 mu_0       0.3     1.06       8.15e- 5  0            17.1 
22 mu_0       0.4     1.41       1.00e- 2  0            12.3 
23 mu_0       0.5     1.45       1.75e- 1  0            14.6 
24 mu_0       0.6     1.15       6.05e- 1  0            11.6 
25 mu_0       0.7     1.15       5.81e- 1  0            10.4 
26 mu_0       0.8     0.943      4.15e- 1  0             5.21
27 mu_0       0.9     1.29       1.98e- 2  0            14.5 
[1] "Total run time was 388.923 seconds"
