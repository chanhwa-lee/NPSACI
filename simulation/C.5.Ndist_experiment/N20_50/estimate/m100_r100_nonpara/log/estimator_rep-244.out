
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3547"
[1] "cluster size dist'n: "

20 21 22 23 24 25 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 
 3  3  2  4  3  3  5  5  4  5  3  1  3  2  1  2  3  2  8  4  3  3  4  2  4  6 
47 49 50 
 6  5  1 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03798 0.36130 0.61019 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
2095 1452 
[1] "treatment indicator table: "

   0    1 
1268 2279 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1760
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1787
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 456.699 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.317 0.0525
 2 mu         0.1   0.2 0.428 0.0695
 3 mu         0.1   0.3 0.456 0.0742
 4 mu         0.1   0.4 0.543 0.107 
 5 mu         0.1   0.5 0.569 0.108 
 6 mu         0.2   0.1 0.336 0.0438
 7 mu         0.2   0.2 0.432 0.0471
 8 mu         0.2   0.3 0.463 0.0457
 9 mu         0.2   0.4 0.540 0.0664
10 mu         0.2   0.5 0.571 0.0662
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.785        0.209 0.0000275      5.85
 2 mu         0.2      0.855        0.839 0.0228         2.81
 3 mu         0.3      0.921        0.893 0.339          1.80
 4 mu         0.4      0.977        0.944 0.602          1.49
 5 mu         0.5      0.992        0.991 0.662          1.31
 6 mu         0.6      1.00         0.991 0.747          1.47
 7 mu         0.7      0.988        0.982 0.773          1.21
 8 mu         0.8      0.983        0.981 0.683          1.42
 9 mu         0.9      0.979        0.941 0.412          1.99
10 mu_1       0.1      0.817        0.375 0.0000926      4.52
11 mu_1       0.2      0.862        0.857 0.0402         2.46
12 mu_1       0.3      0.936        0.897 0.435          1.56
13 mu_1       0.4      0.982        0.961 0.620          1.50
14 mu_1       0.5      0.994        0.996 0.650          1.28
15 mu_1       0.6      1.00         0.990 0.752          1.45
16 mu_1       0.7      0.986        0.979 0.763          1.20
17 mu_1       0.8      0.983        0.977 0.676          1.45
18 mu_1       0.9      0.978        0.946 0.404          2.01
19 mu_0       0.1      0.781        0.188 0.0000203      6.00
20 mu_0       0.2      0.853        0.815 0.0184         2.90
21 mu_0       0.3      0.915        0.890 0.298          1.91
22 mu_0       0.4      0.973        0.939 0.582          1.49
23 mu_0       0.5      0.991        0.993 0.675          1.34
24 mu_0       0.6      1.00         1.00  0.739          1.49
25 mu_0       0.7      0.992        0.998 0.796          1.26
26 mu_0       0.8      0.983        0.990 0.706          1.30
27 mu_0       0.9      0.985        0.953 0.478          1.79
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1    0.00472     9.76e-14  9.67e-37    0.110 
 2 mu         0.2    0.235       5.04e- 7  2.99e-24    4.65  
 3 mu         0.3    0.909       1.01e- 3  4.98e-17   10.8   
 4 mu         0.4    1.16        6.97e- 2  5.54e-12    9.75  
 5 mu         0.5    1.15        7.48e- 1  3.77e- 8    4.98  
 6 mu         0.6    1.10        7.32e- 1  4.08e- 5    7.05  
 7 mu         0.7    0.859       5.30e- 1  4.89e- 6    3.98  
 8 mu         0.8    1.07        1.17e- 1  2.49e-10    7.32  
 9 mu         0.9    1.28        2.53e- 4  1.94e-18   21.9   
10 mu_1       0.1    0.0151      7.05e-13  9.02e-36    0.351 
11 mu_1       0.2    0.378       1.44e- 6  1.39e-23    6.98  
12 mu_1       0.3    1.05        2.12e- 3  1.55e-16   10.8   
13 mu_1       0.4    1.16        1.05e- 1  1.29e-11    8.93  
14 mu_1       0.5    1.14        5.74e- 1  7.04e- 8    4.68  
15 mu_1       0.6    1.07        7.26e- 1  6.35e- 5    6.90  
16 mu_1       0.7    0.844       4.98e- 1  1.97e- 6    3.84  
17 mu_1       0.8    1.09        9.10e- 2  8.80e-11    7.59  
18 mu_1       0.9    1.28        1.71e- 4  7.32e-19   23.1   
19 mu_0       0.1    0.00357     3.36e-14  7.16e-38    0.0838
20 mu_0       0.2    0.199       2.64e- 7  2.49e-25    4.07  
21 mu_0       0.3    0.849       5.34e- 4  4.74e-18   10.8   
22 mu_0       0.4    1.16        4.60e- 2  6.16e-13   10.3   
23 mu_0       0.5    1.17        6.07e- 1  5.03e- 9    5.27  
24 mu_0       0.6    1.14        6.52e- 1  5.79e- 6    7.28  
25 mu_0       0.7    0.895       4.45e- 1  1.17e- 5    4.42  
26 mu_0       0.8    0.970       2.20e- 1  8.96e-10    6.23  
27 mu_0       0.9    1.35        9.95e- 4  1.28e-17   10.7   
[1] "Total run time was 462.646 seconds"
