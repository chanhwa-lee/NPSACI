
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3516"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 4  2  5  1  4  2  5  3  3  5  3  1  4  4  2  1  5  5  2  3  2  6  2  4  2  1 
46 47 48 49 50 
 3  4  2  4  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02998 0.35300 0.60844 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
2078 1438 
[1] "treatment indicator table: "

   0    1 
1375 2141 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1826
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1690
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 225.547 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.410 0.0719
 2 mu         0.1   0.2 0.499 0.0789
 3 mu         0.1   0.3 0.579 0.100 
 4 mu         0.1   0.4 0.592 0.0893
 5 mu         0.1   0.5 0.611 0.0823
 6 mu         0.2   0.1 0.384 0.0419
 7 mu         0.2   0.2 0.481 0.0434
 8 mu         0.2   0.3 0.540 0.0499
 9 mu         0.2   0.4 0.562 0.0454
10 mu         0.2   0.5 0.596 0.0412
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.948        0.653  0.000151      4.19
 2 mu         0.2      1.07         1.03   0.0814        2.48
 3 mu         0.3      1.01         0.998  0.472         1.73
 4 mu         0.4      1.01         1.03   0.579         1.53
 5 mu         0.5      1.01         1.00   0.785         1.36
 6 mu         0.6      1.01         0.999  0.713         1.32
 7 mu         0.7      0.993        0.986  0.698         1.31
 8 mu         0.8      0.977        0.983  0.553         1.45
 9 mu         0.9      1.00         0.968  0.0898        2.05
10 mu_1       0.1      1.02         0.881  0.000481      4.07
11 mu_1       0.2      1.05         1.07   0.133         2.23
12 mu_1       0.3      1.01         1.00   0.519         1.66
13 mu_1       0.4      1.01         1.02   0.612         1.46
14 mu_1       0.5      1.01         0.996  0.776         1.38
15 mu_1       0.6      1.00         0.997  0.716         1.30
16 mu_1       0.7      0.991        0.979  0.695         1.33
17 mu_1       0.8      0.977        0.977  0.544         1.44
18 mu_1       0.9      1.00         0.963  0.0806        2.10
19 mu_0       0.1      0.940        0.625  0.000114      4.21
20 mu_0       0.2      1.07         1.02   0.0684        2.65
21 mu_0       0.3      1.02         1.00   0.446         1.75
22 mu_0       0.4      1.01         1.03   0.557         1.58
23 mu_0       0.5      1.01         0.994  0.769         1.34
24 mu_0       0.6      1.01         0.994  0.708         1.35
25 mu_0       0.7      0.996        0.998  0.706         1.28
26 mu_0       0.8      0.977        0.980  0.588         1.48
27 mu_0       0.9      0.988        0.954  0.173         1.84
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       2.10     7.71e-12  1.79e-37    169.  
 2 mu         0.2       2.05     2.39e- 6  3.49e-24     77.9 
 3 mu         0.3       1.31     2.07e- 3  1.50e-16     16.4 
 4 mu         0.4       1.50     8.17e- 2  2.91e-11     20.6 
 5 mu         0.5       1.23     4.73e- 1  1.12e- 7      7.78
 6 mu         0.6       1.06     9.66e- 1  2.75e- 7      4.47
 7 mu         0.7       1.10     6.00e- 1  1.89e-11      4.71
 8 mu         0.8       1.30     1.85e- 1  1.69e-17      8.13
 9 mu         0.9       2.56     5.42e- 4  4.43e-28     37.0 
10 mu_1       0.1       2.83     5.09e-11  1.61e-36    206.  
11 mu_1       0.2       1.77     7.45e- 6  1.57e-23     47.5 
12 mu_1       0.3       1.28     4.26e- 3  4.51e-16     18.7 
13 mu_1       0.4       1.50     1.23e- 1  6.55e-11     18.7 
14 mu_1       0.5       1.20     5.63e- 1  2.17e- 7      7.08
15 mu_1       0.6       1.06     1.02e+ 0  5.60e- 8      4.26
16 mu_1       0.7       1.11     5.71e- 1  3.30e-12      5.01
17 mu_1       0.8       1.32     1.50e- 1  2.57e-18      8.41
18 mu_1       0.9       2.62     3.48e- 4  6.00e-29     38.9 
19 mu_0       0.1       2.01     2.92e-12  1.99e-38    165.  
20 mu_0       0.2       2.12     1.13e- 6  4.36e-25     85.5 
21 mu_0       0.3       1.33     9.72e- 4  2.15e-17     19.1 
22 mu_0       0.4       1.50     6.19e- 2  1.96e-12     21.8 
23 mu_0       0.5       1.27     3.26e- 1  6.03e- 9      8.60
24 mu_0       0.6       1.06     7.34e- 1  6.05e- 7      4.79
25 mu_0       0.7       1.08     5.17e- 1  5.54e-11      4.47
26 mu_0       0.8       1.23     2.56e- 1  7.42e-17      7.01
27 mu_0       0.9       1.99     2.13e- 3  3.89e-27     26.4 
[1] "Total run time was 230.172 seconds"
