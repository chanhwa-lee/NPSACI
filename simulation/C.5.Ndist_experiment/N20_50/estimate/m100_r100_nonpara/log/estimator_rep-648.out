
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3484"
[1] "cluster size dist'n: "

20 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 
 2  3  2  7  5  4  4  5  2  4  4  2  1  5  4  2  4  4  3  1  2  1  4  6  5  3 
47 48 49 
 6  1  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03325 0.35075 0.61271 1.00000 5.79443 
[1] "event indicator table: "

   0    1 
2088 1396 
[1] "treatment indicator table: "

   0    1 
1217 2267 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1806
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1678
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 48"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 180.267 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.340 0.0659
 2 mu         0.1   0.2 0.385 0.0954
 3 mu         0.1   0.3 0.447 0.0803
 4 mu         0.1   0.4 0.513 0.0821
 5 mu         0.1   0.5 0.541 0.0925
 6 mu         0.2   0.1 0.391 0.0547
 7 mu         0.2   0.2 0.469 0.0601
 8 mu         0.2   0.3 0.524 0.0464
 9 mu         0.2   0.4 0.611 0.0593
10 mu         0.2   0.5 0.653 0.0656
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.910        0.480   0.00269      6.28
 2 mu         0.2      1.08         1.06    0.186        2.88
 3 mu         0.3      1.03         0.995   0.244        1.87
 4 mu         0.4      0.992        0.965   0.223        1.87
 5 mu         0.5      0.978        0.966   0.476        1.57
 6 mu         0.6      0.973        0.977   0.569        1.57
 7 mu         0.7      0.985        0.973   0.596        1.55
 8 mu         0.8      1.00         0.996   0.664        1.45
 9 mu         0.9      1.02         1.03    0.524        1.52
10 mu_1       0.1      0.976        0.711   0.00722      6.44
11 mu_1       0.2      1.09         1.06    0.197        2.41
12 mu_1       0.3      1.02         0.955   0.221        1.88
13 mu_1       0.4      0.988        0.969   0.238        1.89
14 mu_1       0.5      0.977        0.963   0.507        1.55
15 mu_1       0.6      0.972        0.971   0.592        1.62
16 mu_1       0.7      0.987        0.989   0.595        1.50
17 mu_1       0.8      1.00         0.998   0.664        1.45
18 mu_1       0.9      1.02         1.03    0.516        1.52
19 mu_0       0.1      0.903        0.441   0.00219      6.26
20 mu_0       0.2      1.08         1.04    0.162        3.14
21 mu_0       0.3      1.04         0.989   0.253        1.94
22 mu_0       0.4      0.994        0.974   0.213        1.86
23 mu_0       0.5      0.979        0.971   0.424        1.58
24 mu_0       0.6      0.974        0.978   0.534        1.49
25 mu_0       0.7      0.981        0.970   0.597        1.65
26 mu_0       0.8      1.00         0.999   0.665        1.48
27 mu_0       0.9      1.01         1.02    0.596        1.58
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.332     7.88e-14  3.00e-41     23.5 
 2 mu         0.2      1.09      5.04e- 8  4.70e-28     28.5 
 3 mu         0.3      1.19      1.06e- 4  2.30e-20     24.8 
 4 mu         0.4      1.03      1.26e- 2  6.20e-15     21.3 
 5 mu         0.5      1.02      1.81e- 1  9.49e-11      8.86
 6 mu         0.6      1.18      5.33e- 1  2.31e- 7      8.64
 7 mu         0.7      1.21      5.88e- 1  5.40e- 9      7.79
 8 mu         0.8      1.10      2.31e- 1  8.18e-15      8.21
 9 mu         0.9      0.924     1.43e- 3  2.45e-25      7.15
10 mu_1       0.1      0.550     5.41e-13  2.94e-40     33.6 
11 mu_1       0.2      1.20      1.90e- 7  2.30e-27     29.4 
12 mu_1       0.3      1.16      2.58e- 4  7.50e-20     28.2 
13 mu_1       0.4      1.02      2.06e- 2  1.52e-14     18.1 
14 mu_1       0.5      1.03      2.20e- 1  1.86e-10      9.71
15 mu_1       0.6      1.19      5.14e- 1  3.77e- 7      8.44
16 mu_1       0.7      1.20      6.13e- 1  1.89e- 9      7.24
17 mu_1       0.8      1.09      1.87e- 1  2.51e-15      7.81
18 mu_1       0.9      0.922     9.84e- 4  6.66e-26      7.33
19 mu_0       0.1      0.307     2.01e-14  0            22.4 
20 mu_0       0.2      1.06      1.57e- 8  0            28.3 
21 mu_0       0.3      1.20      4.63e- 5  0            23.4 
22 mu_0       0.4      1.04      7.48e- 3  0            23.4 
23 mu_0       0.5      1.01      1.13e- 1  0             8.00
24 mu_0       0.6      1.17      4.17e- 1  0             9.76
25 mu_0       0.7      1.22      5.46e- 1  0             9.05
26 mu_0       0.8      1.12      2.43e- 1  0             9.82
27 mu_0       0.9      0.949     3.57e- 3  0             7.91
[1] "Total run time was 183.649 seconds"
