
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3501"
[1] "cluster size dist'n: "

20 21 22 23 24 26 27 28 29 30 31 32 33 34 35 36 37 38 40 41 42 43 44 45 46 47 
 2  3  5  5  2  4  4  2  4  4  2  4  2  4  5  7  4  1  3  2  4  5  3  2  5  4 
48 49 50 
 3  3  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04275 0.33264 0.58987 0.98035 6.00000 
[1] "event indicator table: "

   0    1 
2028 1473 
[1] "treatment indicator table: "

   0    1 
1390 2111 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1705
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 69"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1796
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 8"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 239.067 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.397 0.0881
 2 mu         0.1   0.2 0.513 0.0942
 3 mu         0.1   0.3 0.597 0.120 
 4 mu         0.1   0.4 0.602 0.0989
 5 mu         0.1   0.5 0.581 0.0767
 6 mu         0.2   0.1 0.386 0.0577
 7 mu         0.2   0.2 0.492 0.0587
 8 mu         0.2   0.3 0.557 0.0691
 9 mu         0.2   0.4 0.596 0.0548
10 mu         0.2   0.5 0.612 0.0375
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.870        0.555  0.000561      5.65
 2 mu         0.2      0.999        0.973  0.106         2.07
 3 mu         0.3      0.966        0.966  0.346         1.44
 4 mu         0.4      0.970        0.972  0.548         1.42
 5 mu         0.5      0.990        0.992  0.718         1.36
 6 mu         0.6      1.00         1.01   0.659         1.23
 7 mu         0.7      1.02         1.02   0.774         1.49
 8 mu         0.8      1.02         1.00   0.647         1.70
 9 mu         0.9      1.02         1.04   0.344         2.08
10 mu_1       0.1      0.968        0.772  0.00179       3.87
11 mu_1       0.2      0.992        0.955  0.176         1.81
12 mu_1       0.3      0.963        0.957  0.336         1.37
13 mu_1       0.4      0.973        0.976  0.612         1.41
14 mu_1       0.5      0.992        0.994  0.718         1.37
15 mu_1       0.6      1.01         1.02   0.657         1.21
16 mu_1       0.7      1.02         1.02   0.761         1.50
17 mu_1       0.8      1.02         0.993  0.642         1.72
18 mu_1       0.9      1.02         1.04   0.326         2.12
19 mu_0       0.1      0.859        0.524  0.000425      5.85
20 mu_0       0.2      1.00         0.989  0.0886        2.26
21 mu_0       0.3      0.968        0.967  0.351         1.48
22 mu_0       0.4      0.968        0.966  0.506         1.42
23 mu_0       0.5      0.988        0.980  0.690         1.35
24 mu_0       0.6      1.00         1.01   0.662         1.29
25 mu_0       0.7      1.02         1.01   0.736         1.46
26 mu_0       0.8      1.03         1.01   0.667         1.61
27 mu_0       0.9      1.03         0.983  0.502         1.74
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.330     1.32e-11  5.52e-36     23.5 
 2 mu         0.2      1.08      1.46e- 6  2.69e-23     50.1 
 3 mu         0.3      1.11      2.74e- 3  5.15e-16     17.6 
 4 mu         0.4      0.991     1.57e- 1  5.62e-11      4.83
 5 mu         0.5      1.04      5.35e- 1  1.84e- 7      4.37
 6 mu         0.6      0.976     7.53e- 1  7.23e- 5      3.97
 7 mu         0.7      0.936     5.19e- 1  3.89e- 7      3.55
 8 mu         0.8      0.987     3.74e- 2  3.41e-12      6.35
 9 mu         0.9      1.17      4.50e- 5  1.84e-21     19.3 
10 mu_1       0.1      0.615     7.38e-11  4.94e-35     42.0 
11 mu_1       0.2      1.17      4.79e- 6  1.21e-22     44.7 
12 mu_1       0.3      1.06      5.47e- 3  1.54e-15     13.5 
13 mu_1       0.4      0.981     2.26e- 1  1.26e-10      4.93
14 mu_1       0.5      1.03      4.62e- 1  3.57e- 7      4.46
15 mu_1       0.6      0.964     6.92e- 1  1.17e- 4      3.80
16 mu_1       0.7      0.940     4.26e- 1  1.57e- 7      3.74
17 mu_1       0.8      0.987     2.61e- 2  1.21e-12      6.46
18 mu_1       0.9      1.19      2.97e- 5  5.77e-22     19.7 
19 mu_0       0.1      0.299     6.52e-12  6.39e-37     21.4 
20 mu_0       0.2      1.06      6.26e- 7  3.51e-24     51.4 
21 mu_0       0.3      1.13      1.56e- 3  7.67e-17     20.7 
22 mu_0       0.4      0.998     1.09e- 1  5.32e-12      5.52
23 mu_0       0.5      1.05      4.30e- 1  1.05e- 8      4.28
24 mu_0       0.6      0.995     7.71e- 1  5.16e- 6      4.22
25 mu_0       0.7      0.929     6.29e- 1  9.31e- 7      4.12
26 mu_0       0.8      0.989     8.29e- 2  1.22e-11      5.90
27 mu_0       0.9      0.999     1.93e- 4  1.32e-20     15.7 
[1] "Total run time was 243.325 seconds"
