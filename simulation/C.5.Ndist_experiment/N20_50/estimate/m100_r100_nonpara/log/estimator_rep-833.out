
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3465"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 
 3  4  5  1  4  4  3  2  4  5  4  2  2  3  5  5  5  2  4  2  5  4  2  2  3  4 
47 48 49 
 6  3  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04526 0.38639 0.63606 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
2063 1402 
[1] "treatment indicator table: "

   0    1 
1288 2177 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1700
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 80"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1765
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 47"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 515.663 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.364 0.0998
 2 mu         0.1   0.2 0.448 0.0971
 3 mu         0.1   0.3 0.511 0.0998
 4 mu         0.1   0.4 0.502 0.107 
 5 mu         0.1   0.5 0.538 0.128 
 6 mu         0.2   0.1 0.371 0.0781
 7 mu         0.2   0.2 0.438 0.0731
 8 mu         0.2   0.3 0.506 0.0681
 9 mu         0.2   0.4 0.522 0.0669
10 mu         0.2   0.5 0.555 0.0779
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.959        0.743   0.00452      6.57
 2 mu         0.2      1.05         1.04    0.214        3.58
 3 mu         0.3      1.02         1.01    0.353        1.83
 4 mu         0.4      0.995        0.931   0.488        1.65
 5 mu         0.5      1.00         0.996   0.683        1.40
 6 mu         0.6      0.998        1.00    0.664        1.38
 7 mu         0.7      0.989        0.997   0.670        1.22
 8 mu         0.8      0.995        0.987   0.610        1.46
 9 mu         0.9      1.01         0.999   0.403        1.83
10 mu_1       0.1      1.01         0.875   0.0130       4.80
11 mu_1       0.2      1.06         0.997   0.324        3.28
12 mu_1       0.3      1.01         0.992   0.379        1.81
13 mu_1       0.4      0.993        0.930   0.545        1.59
14 mu_1       0.5      1.00         0.990   0.689        1.37
15 mu_1       0.6      0.996        1.00    0.653        1.36
16 mu_1       0.7      0.990        0.995   0.683        1.22
17 mu_1       0.8      0.995        0.996   0.603        1.47
18 mu_1       0.9      1.01         1.01    0.400        1.86
19 mu_0       0.1      0.954        0.705   0.00357      6.76
20 mu_0       0.2      1.05         1.04    0.187        3.65
21 mu_0       0.3      1.03         1.01    0.333        1.84
22 mu_0       0.4      0.997        0.943   0.450        1.68
23 mu_0       0.5      1.00         0.984   0.675        1.46
24 mu_0       0.6      1.00         0.987   0.681        1.42
25 mu_0       0.7      0.989        1.00    0.639        1.23
26 mu_0       0.8      0.993        0.972   0.638        1.44
27 mu_0       0.9      1.00         1.01    0.432        1.61
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.52      9.36e-12  3.50e-36     96.1 
 2 mu         0.2      1.32      2.41e- 6  5.05e-24     58.9 
 3 mu         0.3      1.14      1.24e- 3  1.65e-17     20.5 
 4 mu         0.4      1.18      4.85e- 2  6.94e-13     10.1 
 5 mu         0.5      1.10      4.52e- 1  2.67e- 9      7.55
 6 mu         0.6      1.07      6.77e- 1  1.63e- 8      6.07
 7 mu         0.7      0.953     5.75e- 1  3.10e-13      6.51
 8 mu         0.8      0.782     1.65e- 1  4.16e-20      6.36
 9 mu         0.9      1.01      5.76e- 4  3.84e-32     11.9 
10 mu_1       0.1      2.08      5.40e-11  3.26e-35    123.  
11 mu_1       0.2      1.13      8.05e- 6  2.52e-23     44.2 
12 mu_1       0.3      1.14      2.56e- 3  5.52e-17     15.4 
13 mu_1       0.4      1.15      7.78e- 2  1.74e-12      9.67
14 mu_1       0.5      1.09      4.46e- 1  5.35e- 9      7.71
15 mu_1       0.6      1.06      6.11e- 1  3.47e- 9      6.17
16 mu_1       0.7      0.933     5.12e- 1  5.65e-14      6.79
17 mu_1       0.8      0.780     1.20e- 1  6.64e-21      6.60
18 mu_1       0.9      1.02      4.14e- 4  5.44e-33     12.6 
19 mu_0       0.1      1.46      4.12e-12  0            93.1 
20 mu_0       0.2      1.37      9.98e- 7  0            62.6 
21 mu_0       0.3      1.14      6.72e- 4  0            24.9 
22 mu_0       0.4      1.20      3.20e- 2  0            10.4 
23 mu_0       0.5      1.11      4.93e- 1  0             7.39
24 mu_0       0.6      1.08      6.10e- 1  0             5.92
25 mu_0       0.7      1.00      4.74e- 1  0             5.86
26 mu_0       0.8      0.787     1.94e- 1  0             5.61
27 mu_0       0.9      0.899     1.72e- 3  0             9.16
[1] "Total run time was 521.928 seconds"
