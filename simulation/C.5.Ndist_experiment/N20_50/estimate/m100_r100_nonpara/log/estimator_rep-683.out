
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3442"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 3  2  3  4  5  6  3  4  2  1  1  5  2  2  4  2  4  7  5  5  2  4  5  3  2  2 
46 47 49 50 
 2  6  3  1 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02065 0.30119 0.57236 0.96980 5.92990 
[1] "event indicator table: "

   0    1 
1994 1448 
[1] "treatment indicator table: "

   0    1 
1368 2074 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1754
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 6"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1688
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 171.378 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.443 0.0776
 2 mu         0.1   0.2 0.549 0.0751
 3 mu         0.1   0.3 0.664 0.0764
 4 mu         0.1   0.4 0.687 0.0651
 5 mu         0.1   0.5 0.756 0.0663
 6 mu         0.2   0.1 0.378 0.0458
 7 mu         0.2   0.2 0.479 0.0454
 8 mu         0.2   0.3 0.578 0.0407
 9 mu         0.2   0.4 0.615 0.0329
10 mu         0.2   0.5 0.683 0.0424
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.15         0.932  0.000437      3.85
 2 mu         0.2      1.08         1.05   0.0769        2.10
 3 mu         0.3      0.983        0.985  0.440         1.47
 4 mu         0.4      0.972        0.948  0.654         1.40
 5 mu         0.5      0.996        0.984  0.736         1.31
 6 mu         0.6      1.00         0.991  0.789         1.26
 7 mu         0.7      0.993        0.977  0.771         1.28
 8 mu         0.8      0.975        0.966  0.605         1.30
 9 mu         0.9      1.01         0.988  0.353         1.88
10 mu_1       0.1      1.18         1.08   0.00121       3.80
11 mu_1       0.2      1.04         1.03   0.112         1.97
12 mu_1       0.3      0.972        0.970  0.464         1.47
13 mu_1       0.4      0.975        0.952  0.682         1.39
14 mu_1       0.5      0.999        0.992  0.719         1.30
15 mu_1       0.6      1.00         0.991  0.780         1.25
16 mu_1       0.7      0.991        0.973  0.750         1.29
17 mu_1       0.8      0.974        0.963  0.601         1.31
18 mu_1       0.9      1.01         0.991  0.335         1.93
19 mu_0       0.1      1.14         0.934  0.000351      3.97
20 mu_0       0.2      1.09         1.03   0.0682        2.20
21 mu_0       0.3      0.987        0.970  0.406         1.47
22 mu_0       0.4      0.971        0.948  0.618         1.40
23 mu_0       0.5      0.993        0.975  0.752         1.32
24 mu_0       0.6      1.00         1.01   0.777         1.28
25 mu_0       0.7      0.997        0.983  0.803         1.26
26 mu_0       0.8      0.976        0.971  0.623         1.30
27 mu_0       0.9      0.990        0.992  0.520         1.42
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.233     7.06e-11  5.04e-39     12.7 
 2 mu         0.2      0.756     1.53e- 5  6.22e-26     33.8 
 3 mu         0.3      0.904     5.84e- 3  2.33e-18     10.6 
 4 mu         0.4      1.44      2.03e- 1  4.62e-13      9.64
 5 mu         0.5      1.28      4.44e- 1  4.91e- 9      7.53
 6 mu         0.6      0.898     4.26e- 1  1.17e- 6      5.35
 7 mu         0.7      0.936     3.38e- 1  1.70e-10      6.54
 8 mu         0.8      1.20      9.29e- 2  3.39e-16      9.95
 9 mu         0.9      1.54      5.10e- 4  2.53e-26     19.7 
10 mu_1       0.1      0.389     4.28e-10  4.71e-38     17.3 
11 mu_1       0.2      0.798     4.51e- 5  2.91e-25     33.0 
12 mu_1       0.3      0.976     1.12e- 2  7.28e-18      6.88
13 mu_1       0.4      1.49      2.66e- 1  1.08e-12      9.99
14 mu_1       0.5      1.23      4.50e- 1  9.19e- 9      6.88
15 mu_1       0.6      0.889     3.96e- 1  3.62e- 7      5.82
16 mu_1       0.7      0.949     2.96e- 1  4.51e-11      6.89
17 mu_1       0.8      1.22      9.60e- 2  7.89e-17     10.1 
18 mu_1       0.9      1.54      3.37e- 4  5.24e-27     20.2 
19 mu_0       0.1      0.216     3.09e-11  0            12.1 
20 mu_0       0.2      0.746     7.34e- 6  0            34.0 
21 mu_0       0.3      0.873     3.52e- 3  0            12.2 
22 mu_0       0.4      1.41      1.32e- 1  0             9.40
23 mu_0       0.5      1.34      4.16e- 1  0             8.19
24 mu_0       0.6      0.913     4.31e- 1  0             5.41
25 mu_0       0.7      0.907     1.74e- 1  0             7.00
26 mu_0       0.8      1.12      1.29e- 1  0             9.53
27 mu_0       0.9      1.53      1.48e- 3  0            18.4 
[1] "Total run time was 174.732 seconds"
