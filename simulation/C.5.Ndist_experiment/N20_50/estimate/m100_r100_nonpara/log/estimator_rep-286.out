
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3618"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 3  1  3  2  2  4  5  2  2  5  1  1  4  4  7  1  1  2  3  4  3  5  3  4  7  6 
46 47 48 49 50 
 4  4  1  3  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02876 0.34079 0.61307 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
2146 1472 
[1] "treatment indicator table: "

   0    1 
1344 2274 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1844
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1774
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 223.207 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.313 0.0805
 2 mu         0.1   0.2 0.345 0.0664
 3 mu         0.1   0.3 0.389 0.0671
 4 mu         0.1   0.4 0.433 0.0701
 5 mu         0.1   0.5 0.461 0.0771
 6 mu         0.2   0.1 0.362 0.0583
 7 mu         0.2   0.2 0.421 0.0475
 8 mu         0.2   0.3 0.476 0.0462
 9 mu         0.2   0.4 0.533 0.0469
10 mu         0.2   0.5 0.573 0.0464
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.694        0.291  0.000186      5.47
 2 mu         0.2      0.977        0.860  0.0669        3.69
 3 mu         0.3      1.01         0.960  0.332         2.00
 4 mu         0.4      1.03         1.02   0.515         1.67
 5 mu         0.5      1.01         1.03   0.629         1.32
 6 mu         0.6      1.00         1.01   0.735         1.30
 7 mu         0.7      0.995        1.00   0.759         1.29
 8 mu         0.8      0.994        1.01   0.547         1.46
 9 mu         0.9      0.991        0.988  0.391         1.82
10 mu_1       0.1      0.833        0.488  0.000593      6.80
11 mu_1       0.2      0.997        0.892  0.106         3.05
12 mu_1       0.3      1.02         0.990  0.347         2.00
13 mu_1       0.4      1.03         1.04   0.564         1.60
14 mu_1       0.5      1.01         1.02   0.597         1.28
15 mu_1       0.6      1.00         1.01   0.736         1.30
16 mu_1       0.7      0.994        1.00   0.741         1.31
17 mu_1       0.8      0.994        1.01   0.547         1.47
18 mu_1       0.9      0.991        0.994  0.371         1.84
19 mu_0       0.1      0.679        0.264  0.000141      5.33
20 mu_0       0.2      0.972        0.842  0.0572        3.84
21 mu_0       0.3      1.01         0.954  0.325         2.00
22 mu_0       0.4      1.03         1.00   0.482         1.71
23 mu_0       0.5      1.02         1.03   0.661         1.38
24 mu_0       0.6      1.00         1.01   0.683         1.29
25 mu_0       0.7      0.995        0.994  0.745         1.30
26 mu_0       0.8      0.996        1.00   0.546         1.41
27 mu_0       0.9      0.991        0.973  0.537         1.67
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.0204     1.67e-12  1.05e-40      1.74
 2 mu         0.2     0.604      1.13e- 6  4.54e-27     36.0 
 3 mu         0.3     1.11       1.05e- 3  1.48e-19     25.0 
 4 mu         0.4     1.28       6.25e- 2  2.99e-14     11.0 
 5 mu         0.5     1.29       5.65e- 1  3.67e-10      6.23
 6 mu         0.6     1.20       7.00e- 1  7.45e- 7      5.26
 7 mu         0.7     1.08       5.82e- 1  8.49e-10      5.97
 8 mu         0.8     0.895      1.15e- 1  5.00e-16      6.00
 9 mu         0.9     1.25       2.79e- 4  3.32e-27     25.0 
10 mu_1       0.1     0.0474     9.60e-12  9.89e-40      3.83
11 mu_1       0.2     0.771      3.71e- 6  2.22e-26     39.6 
12 mu_1       0.3     1.19       2.20e- 3  4.83e-19     24.5 
13 mu_1       0.4     1.29       1.04e- 1  7.32e-14      8.08
14 mu_1       0.5     1.29       6.51e- 1  7.17e-10      6.75
15 mu_1       0.6     1.19       7.88e- 1  1.21e- 6      5.21
16 mu_1       0.7     1.08       6.56e- 1  2.67e-10      5.97
17 mu_1       0.8     0.882      9.47e- 2  1.38e-16      6.16
18 mu_1       0.9     1.28       1.72e- 4  8.12e-28     27.1 
19 mu_0       0.1     0.0174     7.28e-13  7.17e-42      1.51
20 mu_0       0.2     0.563      4.94e- 7  1.29e-28     35.1 
21 mu_0       0.3     1.08       5.05e- 4  4.81e-21     25.2 
22 mu_0       0.4     1.26       3.80e- 2  1.13e-15     12.9 
23 mu_0       0.5     1.30       5.00e- 1  1.67e-11      5.71
24 mu_0       0.6     1.22       7.98e- 1  4.23e- 8      6.03
25 mu_0       0.7     1.10       4.96e- 1  2.21e- 9      5.97
26 mu_0       0.8     0.945      1.75e- 1  1.95e-15      5.42
27 mu_0       0.9     1.03       1.24e- 3  2.59e-26     15.7 
[1] "Total run time was 227.192 seconds"
