
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3467"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 3  4  3  6  3  3  7  2  3  1  3  2  2  2  3  6  6  3  2  2  2  2  4  4  1  6 
46 47 48 49 50 
 3  1  1  1  9 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02148 0.31306 0.55905 0.94822 5.00000 
[1] "event indicator table: "

   0    1 
2031 1436 
[1] "treatment indicator table: "

   0    1 
1415 2052 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1749
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 26"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1718
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 47"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 92"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 252.63 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.456 0.0898
 2 mu         0.1   0.2 0.520 0.0791
 3 mu         0.1   0.3 0.527 0.0780
 4 mu         0.1   0.4 0.543 0.0851
 5 mu         0.1   0.5 0.582 0.114 
 6 mu         0.2   0.1 0.340 0.0303
 7 mu         0.2   0.2 0.434 0.0311
 8 mu         0.2   0.3 0.462 0.0338
 9 mu         0.2   0.4 0.499 0.0396
10 mu         0.2   0.5 0.533 0.0524
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.04         0.795    0.0387      3.73
 2 mu         0.2      1.01         0.951    0.392       2.07
 3 mu         0.3      0.993        0.979    0.453       1.51
 4 mu         0.4      0.991        0.978    0.633       1.48
 5 mu         0.5      0.988        0.984    0.706       1.38
 6 mu         0.6      0.978        0.984    0.741       1.20
 7 mu         0.7      0.991        0.986    0.694       1.40
 8 mu         0.8      1.02         1.02     0.416       1.55
 9 mu         0.9      1.04         0.994    0.269       2.38
10 mu_1       0.1      1.04         0.886    0.0796      3.50
11 mu_1       0.2      1.01         0.964    0.361       2.00
12 mu_1       0.3      0.992        0.975    0.496       1.48
13 mu_1       0.4      0.991        0.983    0.673       1.50
14 mu_1       0.5      0.987        0.997    0.715       1.35
15 mu_1       0.6      0.978        0.979    0.714       1.20
16 mu_1       0.7      0.994        0.991    0.691       1.40
17 mu_1       0.8      1.02         1.03     0.409       1.56
18 mu_1       0.9      1.04         0.979    0.260       2.41
19 mu_0       0.1      1.04         0.762    0.0341      3.85
20 mu_0       0.2      1.02         0.930    0.400       2.08
21 mu_0       0.3      0.994        0.980    0.434       1.52
22 mu_0       0.4      0.991        0.981    0.606       1.47
23 mu_0       0.5      0.990        0.983    0.697       1.41
24 mu_0       0.6      0.979        0.984    0.750       1.19
25 mu_0       0.7      0.985        0.979    0.683       1.41
26 mu_0       0.8      1.02         1.03     0.447       1.53
27 mu_0       0.9      1.03         1.03     0.351       2.29
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.04      2.31e-11  2.57e-39     54.9 
 2 mu         0.2      1.04      3.46e- 6  1.13e-25     20.7 
 3 mu         0.3      1.09      3.75e- 3  8.33e-18     11.3 
 4 mu         0.4      1.05      1.32e- 1  2.51e-12      8.93
 5 mu         0.5      1.02      5.27e- 1  3.48e- 8      5.92
 6 mu         0.6      1.01      6.97e- 1  1.43e- 7      6.16
 7 mu         0.7      0.970     5.20e- 1  3.05e-11      3.98
 8 mu         0.8      1.27      8.29e- 2  1.58e-16      7.78
 9 mu         0.9      1.96      1.37e- 4  1.05e-25     39.9 
10 mu_1       0.1      1.19      1.57e-10  2.36e-38     48.5 
11 mu_1       0.2      1.04      1.11e- 5  5.19e-25     17.3 
12 mu_1       0.3      1.08      7.34e- 3  2.56e-17     11.3 
13 mu_1       0.4      1.03      1.82e- 1  5.78e-12      8.55
14 mu_1       0.5      1.02      4.95e- 1  6.40e- 8      5.37
15 mu_1       0.6      1.01      7.16e- 1  2.11e- 8      5.97
16 mu_1       0.7      0.982     5.29e- 1  3.85e-12      4.39
17 mu_1       0.8      1.30      6.06e- 2  1.75e-17      8.05
18 mu_1       0.9      2.01      8.68e- 5  1.03e-26     43.2 
19 mu_0       0.1      1.02      1.05e-11  2.28e-40     55.7 
20 mu_0       0.2      1.03      1.55e- 6  1.13e-26     22.0 
21 mu_0       0.3      1.09      2.11e- 3  9.52e-19     11.3 
22 mu_0       0.4      1.06      8.81e- 2  3.35e-13      9.18
23 mu_0       0.5      1.02      4.46e- 1  2.04e- 9      6.57
24 mu_0       0.6      1.01      5.23e- 1  3.27e- 7      6.45
25 mu_0       0.7      0.944     5.61e- 1  9.27e-11      3.28
26 mu_0       0.8      1.18      1.38e- 1  7.22e-16      6.67
27 mu_0       0.9      1.56      5.92e- 4  9.57e-25     24.6 
[1] "Total run time was 257.111 seconds"
