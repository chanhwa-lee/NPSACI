
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3413"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 3  3  4  4  5  3  5  3  6  1  2  3  6  2  1  1  7  2  2  4  4  4  6  1  4  2 
46 47 48 49 50 
 1  2  2  2  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.01988 0.31959 0.59383 1.00000 6.13657 
[1] "event indicator table: "

   0    1 
2032 1381 
[1] "treatment indicator table: "

   0    1 
1343 2070 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1640
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1773
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 264.518 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.449 0.0934
 2 mu         0.1   0.2 0.503 0.0920
 3 mu         0.1   0.3 0.578 0.135 
 4 mu         0.1   0.4 0.604 0.126 
 5 mu         0.1   0.5 0.681 0.156 
 6 mu         0.2   0.1 0.390 0.0410
 7 mu         0.2   0.2 0.447 0.0422
 8 mu         0.2   0.3 0.489 0.0614
 9 mu         0.2   0.4 0.535 0.0601
10 mu         0.2   0.5 0.600 0.0672
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.884        0.615 0.0000779      4.62
 2 mu         0.2      0.981        0.976 0.0565         2.24
 3 mu         0.3      1.03         1.05  0.353          1.47
 4 mu         0.4      1.04         1.03  0.675          1.47
 5 mu         0.5      1.02         1.01  0.738          1.48
 6 mu         0.6      1.01         1.00  0.753          1.24
 7 mu         0.7      0.992        0.994 0.741          1.29
 8 mu         0.8      0.969        0.976 0.621          1.30
 9 mu         0.9      0.946        0.940 0.335          1.87
10 mu_1       0.1      0.979        0.879 0.000237       4.72
11 mu_1       0.2      0.996        1.01  0.0888         1.99
12 mu_1       0.3      1.03         1.04  0.423          1.54
13 mu_1       0.4      1.04         1.02  0.670          1.48
14 mu_1       0.5      1.02         1.02  0.735          1.48
15 mu_1       0.6      1.01         0.998 0.762          1.24
16 mu_1       0.7      0.990        0.996 0.714          1.29
17 mu_1       0.8      0.968        0.968 0.634          1.31
18 mu_1       0.9      0.946        0.939 0.329          1.91
19 mu_0       0.1      0.873        0.590 0.0000603      4.61
20 mu_0       0.2      0.978        0.962 0.0484         2.30
21 mu_0       0.3      1.03         1.05  0.323          1.47
22 mu_0       0.4      1.04         1.04  0.654          1.47
23 mu_0       0.5      1.02         0.995 0.730          1.49
24 mu_0       0.6      1.01         1.01  0.739          1.25
25 mu_0       0.7      0.997        0.999 0.805          1.29
26 mu_0       0.8      0.975        0.995 0.569          1.25
27 mu_0       0.9      0.947        0.937 0.389          1.60
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      3.62      1.65e-11  1.45e-41    187.  
 2 mu         0.2      1.33      1.54e- 6  1.43e-27     67.3 
 3 mu         0.3      0.847     1.45e- 3  1.81e-19      8.44
 4 mu         0.4      0.864     4.43e- 2  8.49e-14      7.48
 5 mu         0.5      1.04      3.45e- 1  1.76e- 9     14.7 
 6 mu         0.6      1.21      8.38e- 1  2.79e- 9      9.54
 7 mu         0.7      1.18      7.46e- 1  2.24e-14      8.43
 8 mu         0.8      0.804     1.87e- 1  8.91e-22      5.52
 9 mu         0.9      0.880     8.71e- 4  1.03e-34     14.0 
10 mu_1       0.1      3.82      9.40e-11  1.36e-40    225.  
11 mu_1       0.2      1.02      5.34e- 6  6.72e-27     40.4 
12 mu_1       0.3      0.870     2.95e- 3  5.67e-19      8.62
13 mu_1       0.4      0.887     7.05e- 2  2.00e-13      8.20
14 mu_1       0.5      1.08      3.05e- 1  3.31e- 9     15.1 
15 mu_1       0.6      1.22      8.95e- 1  5.58e-10      8.20
16 mu_1       0.7      1.16      6.02e- 1  3.84e-15      8.31
17 mu_1       0.8      0.785     1.58e- 1  1.34e-22      5.24
18 mu_1       0.9      0.900     6.31e- 4  1.37e-35     14.7 
19 mu_0       0.1      3.60      6.66e-12  0           183.  
20 mu_0       0.2      1.40      6.02e- 7  0            74.1 
21 mu_0       0.3      0.837     7.90e- 4  0             8.37
22 mu_0       0.4      0.848     3.08e- 2  0             7.98
23 mu_0       0.5      1.01      2.65e- 1  0            14.2 
24 mu_0       0.6      1.21      7.35e- 1  0            11.5 
25 mu_0       0.7      1.23      9.19e- 1  0             8.69
26 mu_0       0.8      0.880     1.83e- 1  0             6.62
27 mu_0       0.9      0.695     2.16e- 3  0             9.94
[1] "Total run time was 269.163 seconds"
