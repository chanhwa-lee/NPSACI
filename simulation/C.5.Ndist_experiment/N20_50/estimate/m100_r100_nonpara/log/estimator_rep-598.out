
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3543"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 46 
 1  1  3  3  8  2  3  6  1  7  1  2  4  5  1  4  3  2  6  1  4  1  4  3  1  6 
47 48 49 50 
 2  6  4  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02754 0.32263 0.59791 1.00000 6.49058 
[1] "event indicator table: "

   0    1 
2143 1400 
[1] "treatment indicator table: "

   0    1 
1331 2212 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1763
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1780
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 36"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 80"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 249.842 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.330 0.105 
 2 mu         0.1   0.2 0.462 0.125 
 3 mu         0.1   0.3 0.584 0.131 
 4 mu         0.1   0.4 0.663 0.134 
 5 mu         0.1   0.5 0.737 0.145 
 6 mu         0.2   0.1 0.219 0.0590
 7 mu         0.2   0.2 0.319 0.0689
 8 mu         0.2   0.3 0.396 0.0572
 9 mu         0.2   0.4 0.453 0.0402
10 mu         0.2   0.5 0.504 0.0468
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.40         0.468  0.000194     16.6 
 2 mu         0.2      0.927        0.858  0.0632        2.87
 3 mu         0.3      0.980        0.965  0.412         1.84
 4 mu         0.4      1.01         1.01   0.502         1.80
 5 mu         0.5      1.02         1.03   0.647         1.35
 6 mu         0.6      1.01         1.01   0.669         1.33
 7 mu         0.7      1.00         1.01   0.753         1.27
 8 mu         0.8      1.00         0.998  0.637         1.45
 9 mu         0.9      1.04         1.00   0.368         1.85
10 mu_1       0.1      1.19         0.645  0.000577     12.7 
11 mu_1       0.2      0.912        0.856  0.103         2.29
12 mu_1       0.3      0.993        1.00   0.411         1.73
13 mu_1       0.4      1.02         0.999  0.533         1.77
14 mu_1       0.5      1.02         1.03   0.646         1.31
15 mu_1       0.6      1.01         1.01   0.675         1.34
16 mu_1       0.7      0.999        1.00   0.728         1.30
17 mu_1       0.8      1.00         1.00   0.636         1.47
18 mu_1       0.9      1.04         1.00   0.360         1.90
19 mu_0       0.1      1.42         0.439  0.000151     17.0 
20 mu_0       0.2      0.930        0.846  0.0532        3.02
21 mu_0       0.3      0.974        0.952  0.413         1.92
22 mu_0       0.4      1.01         1.02   0.482         1.83
23 mu_0       0.5      1.01         1.02   0.637         1.40
24 mu_0       0.6      1.02         1.02   0.660         1.32
25 mu_0       0.7      1.00         1.00   0.770         1.27
26 mu_0       0.8      0.993        0.988  0.642         1.44
27 mu_0       0.9      1.03         0.994  0.437         1.54
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.703     4.79e-13  3.65e-36     69.0 
 2 mu         0.2      0.714     6.37e- 7  2.24e-23     40.8 
 3 mu         0.3      1.09      6.33e- 4  4.29e-16     15.6 
 4 mu         0.4      1.44      3.41e- 2  4.68e-11     13.8 
 5 mu         0.5      1.21      3.63e- 1  2.77e- 7      8.72
 6 mu         0.6      0.986     5.98e- 1  1.23e- 5      6.28
 7 mu         0.7      1.17      5.37e- 1  7.24e- 9     14.9 
 8 mu         0.8      1.27      2.78e- 1  1.45e-13     14.1 
 9 mu         0.9      1.30      1.29e- 3  8.65e-22     20.6 
10 mu_1       0.1      0.896     3.41e-12  3.21e-35     86.2 
11 mu_1       0.2      0.689     1.85e- 6  1.00e-22     25.5 
12 mu_1       0.3      1.20      1.35e- 3  1.28e-15     16.7 
13 mu_1       0.4      1.45      5.61e- 2  1.05e-10     12.5 
14 mu_1       0.5      1.16      4.57e- 1  4.95e- 7      8.72
15 mu_1       0.6      0.991     5.62e- 1  2.56e- 6      6.66
16 mu_1       0.7      1.18      5.32e- 1  1.29e- 9     15.1 
17 mu_1       0.8      1.27      2.22e- 1  2.26e-14     14.4 
18 mu_1       0.9      1.32      9.23e- 4  1.20e-22     21.9 
19 mu_0       0.1      0.682     1.79e-13  0            67.0 
20 mu_0       0.2      0.721     3.34e- 7  0            44.6 
21 mu_0       0.3      1.04      3.01e- 4  0            16.8 
22 mu_0       0.4      1.44      1.95e- 2  0            14.6 
23 mu_0       0.5      1.26      2.63e- 1  0             8.72
24 mu_0       0.6      0.979     5.82e- 1  0             5.71
25 mu_0       0.7      1.13      5.56e- 1  0            14.4 
26 mu_0       0.8      1.29      4.60e- 1  0            13.0 
27 mu_0       0.9      1.16      3.45e- 3  0            16.4 
[1] "Total run time was 253.76 seconds"
