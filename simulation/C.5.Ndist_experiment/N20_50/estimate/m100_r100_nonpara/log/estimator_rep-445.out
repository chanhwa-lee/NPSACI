
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3452"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 2  1  2  4  4  6  5  3  3  3  7  3  3  1  6  2  2  3  1  4  6  6  2  3  3  3 
47 48 49 50 
 3  6  1  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0262  0.3068  0.5717  0.9617  6.0000 
[1] "event indicator table: "

   0    1 
1973 1479 
[1] "treatment indicator table: "

   0    1 
1403 2049 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1768
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 35"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 71"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1684
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 60"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 321.456 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.460 0.121 
 2 mu         0.1   0.2 0.533 0.115 
 3 mu         0.1   0.3 0.626 0.118 
 4 mu         0.1   0.4 0.651 0.100 
 5 mu         0.1   0.5 0.683 0.0896
 6 mu         0.2   0.1 0.398 0.0531
 7 mu         0.2   0.2 0.457 0.0530
 8 mu         0.2   0.3 0.522 0.0574
 9 mu         0.2   0.4 0.571 0.0472
10 mu         0.2   0.5 0.599 0.0409
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.06         0.584  0.000770      4.65
 2 mu         0.2      0.977        0.935  0.131         2.52
 3 mu         0.3      0.972        0.977  0.407         1.59
 4 mu         0.4      1.00         0.996  0.566         1.42
 5 mu         0.5      1.01         1.01   0.744         1.28
 6 mu         0.6      1.00         1.00   0.794         1.30
 7 mu         0.7      0.991        0.989  0.703         1.34
 8 mu         0.8      0.990        0.996  0.532         1.47
 9 mu         0.9      0.979        0.952  0.143         1.90
10 mu_1       0.1      0.967        0.823  0.00230       3.51
11 mu_1       0.2      0.970        0.934  0.189         2.39
12 mu_1       0.3      0.974        0.987  0.452         1.51
13 mu_1       0.4      1.01         1.00   0.590         1.42
14 mu_1       0.5      1.01         1.00   0.734         1.26
15 mu_1       0.6      1.00         0.998  0.800         1.33
16 mu_1       0.7      0.990        0.983  0.694         1.33
17 mu_1       0.8      0.990        0.991  0.509         1.50
18 mu_1       0.9      0.980        0.960  0.134         1.96
19 mu_0       0.1      1.07         0.554  0.000599      4.78
20 mu_0       0.2      0.979        0.948  0.116         2.55
21 mu_0       0.3      0.971        0.982  0.387         1.63
22 mu_0       0.4      1.00         0.993  0.550         1.42
23 mu_0       0.5      1.01         1.01   0.743         1.30
24 mu_0       0.6      1.01         1.01   0.784         1.26
25 mu_0       0.7      0.992        0.997  0.721         1.37
26 mu_0       0.8      0.993        0.994  0.623         1.35
27 mu_0       0.9      0.967        0.955  0.224         1.78
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.630     7.92e-11  1.44e-37     58.3 
 2 mu         0.2      1.21      9.03e- 6  1.58e-24     26.5 
 3 mu         0.3      1.39      3.45e- 3  5.18e-17     20.7 
 4 mu         0.4      0.931     1.06e- 1  8.79e-12      6.10
 5 mu         0.5      0.924     4.15e- 1  7.78e- 8      4.33
 6 mu         0.6      1.09      7.70e- 1  4.39e- 9      5.30
 7 mu         0.7      1.15      8.22e- 1  6.27e-14      5.96
 8 mu         0.8      1.25      1.45e- 1  5.61e-21      8.29
 9 mu         0.9      1.01      4.42e- 4  2.59e-33     21.2 
10 mu_1       0.1      0.844     4.54e-10  1.32e-36     72.9 
11 mu_1       0.2      1.37      2.85e- 5  7.23e-24     22.6 
12 mu_1       0.3      1.32      7.45e- 3  1.58e-16     19.1 
13 mu_1       0.4      0.907     1.64e- 1  2.01e-11      6.10
14 mu_1       0.5      0.947     4.76e- 1  1.43e- 7      4.01
15 mu_1       0.6      1.11      8.08e- 1  9.15e-10      5.30
16 mu_1       0.7      1.15      7.75e- 1  1.12e-14      5.86
17 mu_1       0.8      1.26      1.09e- 1  8.77e-22      8.40
18 mu_1       0.9      0.987     2.92e- 4  3.59e-34     21.6 
19 mu_0       0.1      0.607     3.76e-11  0            56.7 
20 mu_0       0.2      1.17      4.31e- 6  0            29.0 
21 mu_0       0.3      1.42      1.74e- 3  0            21.4 
22 mu_0       0.4      0.948     6.69e- 2  0             6.10
23 mu_0       0.5      0.901     3.32e- 1  0             4.91
24 mu_0       0.6      1.06      8.31e- 1  0             5.30
25 mu_0       0.7      1.15      8.67e- 1  0             6.18
26 mu_0       0.8      1.24      2.43e- 1  0             7.84
27 mu_0       0.9      1.19      1.07e- 3  0            17.7 
[1] "Total run time was 325.915 seconds"
