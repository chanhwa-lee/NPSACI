
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3486"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 38 39 40 41 42 43 44 45 46 
 3  2  3  5  3  3  2  6  2  3  5  3  3  1  6  2  5  3  4  5  4  3  3  1  5  4 
47 48 49 50 
 3  3  4  1 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04665 0.37330 0.62329 1.00000 5.00000 
[1] "event indicator table: "

   0    1 
2123 1363 
[1] "treatment indicator table: "

   0    1 
1133 2353 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1698
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 72"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1788
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 270.545 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.172 0.0389
 2 mu         0.1   0.2 0.216 0.0462
 3 mu         0.1   0.3 0.271 0.0669
 4 mu         0.1   0.4 0.344 0.0846
 5 mu         0.1   0.5 0.371 0.0879
 6 mu         0.2   0.1 0.288 0.0294
 7 mu         0.2   0.2 0.378 0.0398
 8 mu         0.2   0.3 0.464 0.0461
 9 mu         0.2   0.4 0.542 0.0581
10 mu         0.2   0.5 0.587 0.0666
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.524       0.0921 0.0000000408      9.31
 2 mu         0.2      0.946       0.752  0.000516          4.18
 3 mu         0.3      0.996       0.942  0.0418            2.36
 4 mu         0.4      0.945       0.957  0.369             2.10
 5 mu         0.5      0.970       0.970  0.575             1.38
 6 mu         0.6      0.998       1.00   0.586             1.34
 7 mu         0.7      1.00        1.00   0.715             1.42
 8 mu         0.8      0.993       1.01   0.665             1.35
 9 mu         0.9      0.997       0.980  0.390             1.56
10 mu_1       0.1      0.638       0.202  0.000000173       6.87
11 mu_1       0.2      1.02        0.873  0.00113           4.00
12 mu_1       0.3      0.981       0.947  0.0637            2.32
13 mu_1       0.4      0.945       0.948  0.415             2.08
14 mu_1       0.5      0.976       0.977  0.563             1.30
15 mu_1       0.6      1.00        1.00   0.601             1.33
16 mu_1       0.7      1.00        1.00   0.707             1.43
17 mu_1       0.8      0.993       0.996  0.658             1.35
18 mu_1       0.9      0.997       0.985  0.380             1.58
19 mu_0       0.1      0.511       0.0792 0.0000000262      9.58
20 mu_0       0.2      0.928       0.724  0.000363          4.23
21 mu_0       0.3      1.00        0.922  0.0324            2.45
22 mu_0       0.4      0.945       0.953  0.318             2.11
23 mu_0       0.5      0.964       0.958  0.543             1.48
24 mu_0       0.6      0.995       1.01   0.564             1.36
25 mu_0       0.7      1.00        1.00   0.732             1.40
26 mu_0       0.8      0.993       1.00   0.683             1.36
27 mu_0       0.9      0.992       0.964  0.483             1.55
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.130     1.35e-14  4.47e-41     10.3 
 2 mu         0.2      0.989     1.92e- 8  1.24e-27     43.3 
 3 mu         0.3      1.37      8.75e- 5  7.98e-20     51.5 
 4 mu         0.4      1.28      9.60e- 3  2.46e-14     19.7 
 5 mu         0.5      1.26      1.37e- 1  3.92e-10      7.85
 6 mu         0.6      1.26      6.86e- 1  9.17e- 7      6.22
 7 mu         0.7      1.06      7.94e- 1  3.63e- 7      6.27
 8 mu         0.8      0.926     4.27e- 1  2.79e-12      6.95
 9 mu         0.9      0.825     2.19e- 3  1.33e-21      8.43
10 mu_1       0.1      0.295     9.19e-14  4.28e-40     22.4 
11 mu_1       0.2      1.23      7.13e- 8  5.95e-27     55.9 
12 mu_1       0.3      1.34      1.88e- 4  2.55e-19     44.3 
13 mu_1       0.4      1.28      1.61e- 2  5.88e-14     18.8 
14 mu_1       0.5      1.25      1.91e- 1  7.50e-10      7.23
15 mu_1       0.6      1.24      6.72e- 1  1.46e- 6      5.90
16 mu_1       0.7      1.04      7.03e- 1  1.38e- 7      5.90
17 mu_1       0.8      0.921     3.56e- 1  9.29e-13      7.37
18 mu_1       0.9      0.819     1.63e- 3  3.95e-22      8.32
19 mu_0       0.1      0.112     4.80e-15  0             8.97
20 mu_0       0.2      0.929     6.24e- 9  0            40.2 
21 mu_0       0.3      1.38      4.38e- 5  0            54.6 
22 mu_0       0.4      1.29      5.27e- 3  0            20.2 
23 mu_0       0.5      1.27      9.83e- 2  0             9.60
24 mu_0       0.6      1.30      5.95e- 1  0             6.83
25 mu_0       0.7      1.11      8.26e- 1  0             7.12
26 mu_0       0.8      0.948     5.80e- 1  0             5.71
27 mu_0       0.9      0.883     5.88e- 3  0             9.36
[1] "Total run time was 275.541 seconds"
