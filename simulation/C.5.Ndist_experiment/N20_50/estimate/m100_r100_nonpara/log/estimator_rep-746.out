
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3380"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 37 38 39 40 41 42 44 45 46 47 
 4  3  4  6  5  3  1  4  6  2  6  4  2  2  3  2  4  7  2  5  2  1  4  1  5  1 
48 49 50 
 6  2  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02838 0.34415 0.60360 1.00000 5.68335 
[1] "event indicator table: "

   0    1 
2037 1343 
[1] "treatment indicator table: "

   0    1 
1182 2198 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1643
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 56"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1737
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 18"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 204.546 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.673 0.335 
 2 mu         0.1   0.2 0.851 0.425 
 3 mu         0.1   0.3 0.913 0.472 
 4 mu         0.1   0.4 1.00  0.541 
 5 mu         0.1   0.5 1.07  0.594 
 6 mu         0.2   0.1 0.437 0.0837
 7 mu         0.2   0.2 0.569 0.117 
 8 mu         0.2   0.3 0.629 0.122 
 9 mu         0.2   0.4 0.680 0.136 
10 mu         0.2   0.5 0.729 0.144 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1      1.75         0.118 0.00000000230    106.  
 2 mu         0.2      1.17         0.792 0.000132          24.4 
 3 mu         0.3      0.996        0.966 0.0214             2.80
 4 mu         0.4      0.987        0.977 0.305              1.57
 5 mu         0.5      1.00         1.02  0.561              1.41
 6 mu         0.6      0.990        0.993 0.758              1.35
 7 mu         0.7      1.01         0.992 0.739              1.28
 8 mu         0.8      1.01         1.01  0.701              1.32
 9 mu         0.9      1.00         0.990 0.453              1.61
10 mu_1       0.1      1.90         0.254 0.0000000100     110.  
11 mu_1       0.2      1.11         0.898 0.000294          14.7 
12 mu_1       0.3      0.989        0.982 0.0332             2.00
13 mu_1       0.4      0.991        0.980 0.378              1.57
14 mu_1       0.5      1.00         1.03  0.577              1.41
15 mu_1       0.6      0.989        0.978 0.761              1.34
16 mu_1       0.7      1.01         0.995 0.728              1.30
17 mu_1       0.8      1.01         1.01  0.712              1.31
18 mu_1       0.9      0.999        0.988 0.436              1.65
19 mu_0       0.1      1.74         0.104 0.00000000144    105.  
20 mu_0       0.2      1.19         0.793 0.0000919         26.8 
21 mu_0       0.3      0.999        0.977 0.0164             3.14
22 mu_0       0.4      0.984        0.967 0.256              1.57
23 mu_0       0.5      1.00         1.01  0.545              1.41
24 mu_0       0.6      0.991        0.990 0.724              1.37
25 mu_0       0.7      1.00         0.984 0.766              1.25
26 mu_0       0.8      1.02         1.01  0.658              1.37
27 mu_0       0.9      1.00         1.01  0.559              1.52
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.698     3.01e-13  1.70e-41     58.5 
 2 mu         0.2      2.42      1.61e- 7  9.45e-28     99.8 
 3 mu         0.3      1.99      1.21e- 4  9.11e-20     58.8 
 4 mu         0.4      1.14      1.08e- 2  3.74e-14     15.9 
 5 mu         0.5      1.06      2.16e- 1  7.45e-10      7.71
 6 mu         0.6      1.19      8.21e- 1  2.09e- 6      6.40
 7 mu         0.7      1.13      9.67e- 1  5.41e- 8      4.01
 8 mu         0.8      1.00      3.80e- 1  2.78e-13      6.07
 9 mu         0.9      0.981     2.84e- 3  9.35e-23     16.5 
10 mu_1       0.1      1.26      1.79e-12  1.63e-40    102.  
11 mu_1       0.2      2.55      6.45e- 7  4.53e-27     86.8 
12 mu_1       0.3      1.74      2.75e- 4  2.91e-19     53.9 
13 mu_1       0.4      1.07      1.84e- 2  8.96e-14     11.0 
14 mu_1       0.5      1.08      2.76e- 1  1.43e- 9      7.01
15 mu_1       0.6      1.20      9.39e- 1  3.34e- 6      6.46
16 mu_1       0.7      1.12      8.92e- 1  1.66e- 8      4.25
17 mu_1       0.8      0.997     3.25e- 1  7.45e-14      6.10
18 mu_1       0.9      0.986     2.00e- 3  2.23e-23     17.5 
19 mu_0       0.1      0.635     1.25e-13  0            53.7 
20 mu_0       0.2      2.38      4.92e- 8  0           103.  
21 mu_0       0.3      2.10      5.59e- 5  0            60.9 
22 mu_0       0.4      1.19      6.12e- 3  0            19.3 
23 mu_0       0.5      1.04      1.59e- 1  0             8.41
24 mu_0       0.6      1.18      5.74e- 1  0             6.32
25 mu_0       0.7      1.15      1.00e+ 0  0             4.13
26 mu_0       0.8      1.03      4.20e- 1  0             5.93
27 mu_0       0.9      0.936     5.24e- 3  0             6.86
[1] "Total run time was 207.98 seconds"
