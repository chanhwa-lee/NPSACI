
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3566"
[1] "cluster size dist'n: "

20 21 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 
 3  1  3  4  2  3  6  2  8  4  4  2  1  1  4  1 10  1  1  4  3  6  3  2  3  5 
47 48 49 50 
 5  2  4  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04235 0.37863 0.63433 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
2121 1445 
[1] "treatment indicator table: "

   0    1 
1198 2368 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1795
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 37"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1771
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 83"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 254.04 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.378 0.0770
 2 mu         0.1   0.2 0.456 0.0877
 3 mu         0.1   0.3 0.501 0.0952
 4 mu         0.1   0.4 0.544 0.104 
 5 mu         0.1   0.5 0.569 0.107 
 6 mu         0.2   0.1 0.333 0.0725
 7 mu         0.2   0.2 0.461 0.0575
 8 mu         0.2   0.3 0.529 0.0656
 9 mu         0.2   0.4 0.558 0.0771
10 mu         0.2   0.5 0.618 0.0796
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      0.889        0.133 0.00000230      9.52
 2 mu         0.2      0.963        0.791 0.00304         3.88
 3 mu         0.3      0.997        0.953 0.0795          2.72
 4 mu         0.4      0.975        0.946 0.380           1.77
 5 mu         0.5      0.982        0.996 0.543           1.38
 6 mu         0.6      1.00         1.01  0.595           1.45
 7 mu         0.7      1.01         0.989 0.730           1.34
 8 mu         0.8      1.00         0.994 0.632           1.59
 9 mu         0.9      1.05         1.03  0.340           3.00
10 mu_1       0.1      0.867        0.251 0.0000101      11.7 
11 mu_1       0.2      0.977        0.832 0.00676         3.64
12 mu_1       0.3      0.997        0.956 0.121           2.57
13 mu_1       0.4      0.976        0.951 0.438           1.77
14 mu_1       0.5      0.985        0.991 0.561           1.39
15 mu_1       0.6      1.00         1.01  0.614           1.46
16 mu_1       0.7      1.01         0.995 0.733           1.34
17 mu_1       0.8      1.00         0.993 0.634           1.64
18 mu_1       0.9      1.05         1.03  0.324           3.07
19 mu_0       0.1      0.891        0.120 0.00000144      9.28
20 mu_0       0.2      0.959        0.785 0.00211         4.25
21 mu_0       0.3      0.997        0.952 0.0617          2.89
22 mu_0       0.4      0.974        0.956 0.328           1.77
23 mu_0       0.5      0.978        0.998 0.525           1.46
24 mu_0       0.6      0.999        0.993 0.567           1.44
25 mu_0       0.7      1.01         0.990 0.668           1.33
26 mu_0       0.8      1.00         0.993 0.623           1.41
27 mu_0       0.9      1.04         1.01  0.482           2.38
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       7.77     5.26e-15  4.10e-38    701.  
 2 mu         0.2       4.41     1.99e- 8  8.01e-26    229.  
 3 mu         0.3       2.43     8.76e- 5  1.16e-18     71.1 
 4 mu         0.4       1.72     9.66e- 3  1.32e-13     31.4 
 5 mu         0.5       1.55     8.10e- 2  1.04e- 9     32.1 
 6 mu         0.6       1.20     4.23e- 1  1.41e- 8      9.29
 7 mu         0.7       1.31     7.25e- 1  5.34e-13      8.82
 8 mu         0.8       1.24     4.94e- 1  2.43e-19     10.4 
 9 mu         0.9       1.66     1.21e- 2  2.52e-30     36.1 
10 mu_1       0.1       6.72     3.79e-14  4.00e-37    526.  
11 mu_1       0.2       4.08     6.65e- 8  3.91e-25    216.  
12 mu_1       0.3       2.14     1.95e- 4  3.78e-18     44.8 
13 mu_1       0.4       1.73     1.39e- 2  3.22e-13     35.4 
14 mu_1       0.5       1.49     9.84e- 2  2.02e- 9     29.0 
15 mu_1       0.6       1.18     4.94e- 1  1.76e- 9      6.99
16 mu_1       0.7       1.31     6.13e- 1  5.72e-14      9.24
17 mu_1       0.8       1.23     4.17e- 1  2.28e-20     10.1 
18 mu_1       0.9       1.67     9.28e- 3  2.10e-31     36.7 
19 mu_0       0.1       7.89     1.46e-15  1.08e-39    720.  
20 mu_0       0.2       4.49     8.31e- 9  2.38e-27    232.  
21 mu_0       0.3       2.55     4.11e- 5  3.95e-20     82.4 
22 mu_0       0.4       1.72     4.41e- 3  5.24e-15     28.7 
23 mu_0       0.5       1.61     7.39e- 2  4.93e-11     35.2 
24 mu_0       0.6       1.23     4.10e- 1  3.26e- 8     12.7 
25 mu_0       0.7       1.29     7.70e- 1  1.65e-12      7.84
26 mu_0       0.8       1.25     6.95e- 1  1.12e-18     11.6 
27 mu_0       0.9       1.58     3.58e- 2  2.33e-29     30.7 
[1] "Total run time was 258.46 seconds"
