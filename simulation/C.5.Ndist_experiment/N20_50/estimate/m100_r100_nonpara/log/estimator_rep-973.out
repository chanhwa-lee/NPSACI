
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3595"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 30 31 32 33 34 36 37 38 39 40 41 42 43 44 45 46 47 
 3  3  3  3  3  6  6  3  2  2  1  1  3  2  4  4  6  3  5  2  4  5  4  2  3  5 
48 49 50 
 3  3  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.05475 0.40676 0.65088 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
2114 1481 
[1] "treatment indicator table: "

   0    1 
1251 2344 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1781
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1814
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 168.187 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.421 0.0995
 2 mu         0.1   0.2 0.498 0.144 
 3 mu         0.1   0.3 0.547 0.128 
 4 mu         0.1   0.4 0.627 0.138 
 5 mu         0.1   0.5 0.627 0.123 
 6 mu         0.2   0.1 0.401 0.0738
 7 mu         0.2   0.2 0.479 0.110 
 8 mu         0.2   0.3 0.529 0.0945
 9 mu         0.2   0.4 0.610 0.101 
10 mu         0.2   0.5 0.622 0.0873
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      0.893        0.500 0.00000408      7.07
 2 mu         0.2      0.963        0.910 0.0135          2.37
 3 mu         0.3      1.01         0.976 0.257           1.91
 4 mu         0.4      0.991        1.00  0.581           1.56
 5 mu         0.5      0.982        0.960 0.588           1.51
 6 mu         0.6      0.982        0.982 0.563           1.30
 7 mu         0.7      0.997        0.999 0.617           1.32
 8 mu         0.8      1.02         1.03  0.630           1.50
 9 mu         0.9      1.01         0.998 0.605           1.66
10 mu_1       0.1      0.904        0.625 0.0000140       4.67
11 mu_1       0.2      0.978        0.926 0.0235          2.40
12 mu_1       0.3      1.01         0.986 0.317           1.84
13 mu_1       0.4      0.987        0.990 0.594           1.51
14 mu_1       0.5      0.984        0.959 0.557           1.54
15 mu_1       0.6      0.983        0.982 0.585           1.29
16 mu_1       0.7      0.999        1.00  0.611           1.32
17 mu_1       0.8      1.02         1.03  0.618           1.52
18 mu_1       0.9      1.01         0.999 0.586           1.67
19 mu_0       0.1      0.892        0.477 0.00000298      7.34
20 mu_0       0.2      0.959        0.886 0.0110          2.38
21 mu_0       0.3      1.01         0.976 0.231           1.99
22 mu_0       0.4      0.993        0.992 0.559           1.59
23 mu_0       0.5      0.981        0.969 0.579           1.49
24 mu_0       0.6      0.980        0.986 0.529           1.36
25 mu_0       0.7      0.992        0.991 0.630           1.31
26 mu_0       0.8      1.02         1.03  0.673           1.45
27 mu_0       0.9      1.02         0.995 0.597           1.62
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.676     5.96e-14  2.44e-46     35.2 
 2 mu         0.2      1.56      3.63e- 8  1.22e-31     92.5 
 3 mu         0.3      1.21      1.77e- 4  4.54e-23     19.3 
 4 mu         0.4      1.38      1.26e- 2  5.16e-17     16.3 
 5 mu         0.5      1.08      1.76e- 1  2.41e-12      8.25
 6 mu         0.6      1.07      4.62e- 1  1.46e- 8      6.86
 7 mu         0.7      1.25      4.84e- 1  7.49e-11     12.0 
 8 mu         0.8      1.36      4.85e- 1  2.57e-17     13.9 
 9 mu         0.9      1.10      5.42e- 3  7.60e-29      9.59
10 mu_1       0.1      1.07      3.99e-13  2.39e-45     61.7 
11 mu_1       0.2      1.47      1.38e- 7  5.98e-31     81.0 
12 mu_1       0.3      1.27      3.66e- 4  1.48e-22     17.2 
13 mu_1       0.4      1.37      2.09e- 2  1.26e-16     14.8 
14 mu_1       0.5      1.06      2.39e- 1  4.72e-12      7.92
15 mu_1       0.6      1.08      4.15e- 1  2.39e- 8      7.21
16 mu_1       0.7      1.26      4.14e- 1  1.64e-11     12.5 
17 mu_1       0.8      1.36      4.27e- 1  6.44e-18     13.8 
18 mu_1       0.9      1.09      4.05e- 3  1.69e-29      9.33
19 mu_0       0.1      0.633     2.20e-14  0            32.3 
20 mu_0       0.2      1.58      1.08e- 8  0            95.4 
21 mu_0       0.3      1.19      9.58e- 5  0            22.7 
22 mu_0       0.4      1.38      6.50e- 3  0            17.4 
23 mu_0       0.5      1.11      1.08e- 1  0             8.58
24 mu_0       0.6      1.06      4.47e- 1  0             6.47
25 mu_0       0.7      1.23      4.26e- 1  0            10.8 
26 mu_0       0.8      1.37      3.52e- 1  0            14.2 
27 mu_0       0.9      1.19      1.09e- 2  0            12.0 
[1] "Total run time was 171.443 seconds"
