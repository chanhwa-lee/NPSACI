
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3513"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 4  4  4  1  3  1  2  2  5  5  3  1  7  1  5  4  2  1  4  7  2  2  4  6  1  5 
46 47 48 49 50 
 4  3  1  2  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02132 0.31354 0.57345 0.98835 5.00000 
[1] "event indicator table: "

   0    1 
2054 1459 
[1] "treatment indicator table: "

   0    1 
1347 2166 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1642
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1871
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 45"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 347.528 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.500 0.0513
 2 mu         0.1   0.2 0.593 0.0600
 3 mu         0.1   0.3 0.654 0.0634
 4 mu         0.1   0.4 0.685 0.0722
 5 mu         0.1   0.5 0.781 0.0763
 6 mu         0.2   0.1 0.426 0.0458
 7 mu         0.2   0.2 0.505 0.0450
 8 mu         0.2   0.3 0.571 0.0475
 9 mu         0.2   0.4 0.600 0.0496
10 mu         0.2   0.5 0.689 0.0586
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.16         0.980   0.00170      4.97
 2 mu         0.2      1.07         0.881   0.154        4.13
 3 mu         0.3      0.998        0.996   0.362        1.69
 4 mu         0.4      1.00         0.984   0.384        1.62
 5 mu         0.5      1.02         1.00    0.647        1.39
 6 mu         0.6      1.03         1.02    0.614        1.60
 7 mu         0.7      0.998        0.983   0.613        1.61
 8 mu         0.8      0.954        0.955   0.572        1.41
 9 mu         0.9      0.931        0.904   0.118        1.65
10 mu_1       0.1      1.20         1.09    0.00506      6.16
11 mu_1       0.2      1.03         0.871   0.201        3.54
12 mu_1       0.3      0.999        0.987   0.335        1.62
13 mu_1       0.4      1.01         0.996   0.420        1.59
14 mu_1       0.5      1.02         0.987   0.639        1.39
15 mu_1       0.6      1.02         1.02    0.598        1.59
16 mu_1       0.7      0.995        0.986   0.627        1.56
17 mu_1       0.8      0.952        0.951   0.559        1.42
18 mu_1       0.9      0.931        0.904   0.108        1.68
19 mu_0       0.1      1.16         0.937   0.00133      4.84
20 mu_0       0.2      1.09         0.918   0.143        4.28
21 mu_0       0.3      0.997        0.992   0.373        1.72
22 mu_0       0.4      1.00         1.00    0.361        1.64
23 mu_0       0.5      1.02         0.998   0.655        1.39
24 mu_0       0.6      1.03         1.01    0.638        1.62
25 mu_0       0.7      1.01         0.994   0.581        1.70
26 mu_0       0.8      0.965        0.960   0.583        1.41
27 mu_0       0.9      0.933        0.923   0.204        1.62
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.08      7.10e-13  3.53e-37     82.9 
 2 mu         0.2      1.62      8.03e- 7  6.88e-24     75.4 
 3 mu         0.3      0.772     1.14e- 3  2.96e-16     14.7 
 4 mu         0.4      0.720     5.29e- 2  5.75e-11      5.78
 5 mu         0.5      1.09      2.16e- 1  5.30e- 7      7.86
 6 mu         0.6      1.18      5.55e- 1  3.75e- 8      7.79
 7 mu         0.7      1.04      6.45e- 1  6.24e-13      5.87
 8 mu         0.8      1.28      2.61e- 1  6.39e-20      8.73
 9 mu         0.9      1.71      4.89e- 4  3.31e-32     52.1 
10 mu_1       0.1      1.63      3.99e-12  3.17e-36    118.  
11 mu_1       0.2      1.46      2.54e- 6  3.10e-23     53.8 
12 mu_1       0.3      0.703     2.27e- 3  8.89e-16     11.6 
13 mu_1       0.4      0.757     7.87e- 2  1.29e-10      5.78
14 mu_1       0.5      1.14      2.64e- 1  9.54e- 7      8.49
15 mu_1       0.6      1.16      6.00e- 1  8.93e- 9      7.61
16 mu_1       0.7      1.04      6.68e- 1  1.27e-13      6.28
17 mu_1       0.8      1.30      2.00e- 1  1.14e-20      9.36
18 mu_1       0.9      1.70      3.42e- 4  5.26e-33     52.1 
19 mu_0       0.1      1.02      3.45e-13  3.92e-38     78.9 
20 mu_0       0.2      1.66      3.68e- 7  8.60e-25     80.8 
21 mu_0       0.3      0.802     6.74e- 4  4.23e-17     16.5 
22 mu_0       0.4      0.696     4.24e- 2  9.58e-12      5.91
23 mu_0       0.5      1.04      2.18e- 1  1.06e- 7      7.23
24 mu_0       0.6      1.19      4.07e- 1  8.03e- 8      8.06
25 mu_0       0.7      1.04      5.76e- 1  1.78e-12      6.79
26 mu_0       0.8      1.18      2.86e- 1  2.74e-19      8.54
27 mu_0       0.9      1.79      1.81e- 3  2.84e-31     52.1 
[1] "Total run time was 352.378 seconds"
