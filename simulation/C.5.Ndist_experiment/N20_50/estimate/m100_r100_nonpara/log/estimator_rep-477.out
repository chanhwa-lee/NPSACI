
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3461"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 4  8  2  1  1  5  7  2  2  2  5  2  3  3  3  1  2  4  6  1  2  8  3  3  1  2 
46 47 48 49 50 
 4  2  1  7  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02792 0.32420 0.57594 0.99649 7.00000 
[1] "event indicator table: "

   0    1 
2013 1448 
[1] "treatment indicator table: "

   0    1 
1328 2133 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1718
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1743
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 205.91 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.484 0.0923
 2 mu         0.1   0.2 0.562 0.104 
 3 mu         0.1   0.3 0.621 0.112 
 4 mu         0.1   0.4 0.632 0.105 
 5 mu         0.1   0.5 0.658 0.104 
 6 mu         0.2   0.1 0.442 0.0611
 7 mu         0.2   0.2 0.520 0.0644
 8 mu         0.2   0.3 0.566 0.0632
 9 mu         0.2   0.4 0.606 0.0636
10 mu         0.2   0.5 0.632 0.0603
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.963        0.444  0.00107       5.22
 2 mu         0.2      0.993        0.955  0.109         2.47
 3 mu         0.3      0.961        0.993  0.303         1.53
 4 mu         0.4      0.981        0.986  0.573         1.40
 5 mu         0.5      1.02         1.01   0.541         1.29
 6 mu         0.6      1.01         1.01   0.668         1.44
 7 mu         0.7      0.990        0.997  0.715         1.32
 8 mu         0.8      1.00         0.990  0.681         1.50
 9 mu         0.9      1.02         0.973  0.503         1.59
10 mu_1       0.1      0.984        0.635  0.00305       4.67
11 mu_1       0.2      0.984        0.982  0.0941        2.00
12 mu_1       0.3      0.957        0.949  0.291         1.59
13 mu_1       0.4      0.988        0.998  0.633         1.34
14 mu_1       0.5      1.02         1.02   0.533         1.30
15 mu_1       0.6      1.01         1.01   0.680         1.44
16 mu_1       0.7      0.988        0.996  0.724         1.31
17 mu_1       0.8      1.00         0.981  0.671         1.50
18 mu_1       0.9      1.02         0.977  0.495         1.61
19 mu_0       0.1      0.960        0.422  0.000852      5.28
20 mu_0       0.2      0.996        0.912  0.0952        2.59
21 mu_0       0.3      0.963        0.978  0.278         1.55
22 mu_0       0.4      0.977        0.973  0.533         1.45
23 mu_0       0.5      1.01         1.01   0.548         1.28
24 mu_0       0.6      1.02         1.02   0.638         1.44
25 mu_0       0.7      0.995        0.993  0.694         1.33
26 mu_0       0.8      0.995        0.983  0.668         1.49
27 mu_0       0.9      1.02         0.997  0.578         1.61
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.572     3.52e-11  2.07e-38     36.7 
 2 mu         0.2      1.57      2.38e- 6  4.05e-25     42.4 
 3 mu         0.3      1.24      1.38e- 3  1.74e-17     19.8 
 4 mu         0.4      1.22      4.94e- 2  3.38e-12     13.7 
 5 mu         0.5      1.34      3.97e- 1  2.30e- 8     23.3 
 6 mu         0.6      1.11      5.08e- 1  1.66e- 8      6.07
 7 mu         0.7      0.988     7.01e- 1  2.76e-13      6.22
 8 mu         0.8      0.984     1.53e- 1  2.82e-20      5.19
 9 mu         0.9      0.829     5.30e- 4  1.46e-32     10.9 
10 mu_1       0.1      0.959     2.35e-10  1.86e-37     52.4 
11 mu_1       0.2      1.63      7.78e- 6  1.82e-24     44.6 
12 mu_1       0.3      1.15      2.97e- 3  5.23e-17     13.9 
13 mu_1       0.4      1.26      7.96e- 2  7.60e-12     16.3 
14 mu_1       0.5      1.34      4.59e- 1  4.38e- 8     22.3 
15 mu_1       0.6      1.09      5.39e- 1  3.95e- 9      4.84
16 mu_1       0.7      0.979     5.93e- 1  5.63e-14      6.61
17 mu_1       0.8      0.985     1.19e- 1  5.04e-21      5.03
18 mu_1       0.9      0.822     3.71e- 4  2.32e-33     11.2 
19 mu_0       0.1      0.529     1.30e-11  2.30e-39     34.9 
20 mu_0       0.2      1.56      1.03e- 6  5.06e-26     41.9 
21 mu_0       0.3      1.28      6.81e- 4  2.49e-18     22.3 
22 mu_0       0.4      1.19      3.06e- 2  4.48e-13     11.9 
23 mu_0       0.5      1.35      2.92e- 1  2.24e- 9     24.3 
24 mu_0       0.6      1.15      4.75e- 1  3.55e- 8      7.92
25 mu_0       0.7      1.01      6.61e- 1  7.88e-13      5.32
26 mu_0       0.8      0.983     2.70e- 1  1.21e-19      6.65
27 mu_0       0.9      0.893     2.11e- 3  1.26e-31      8.42
[1] "Total run time was 209.247 seconds"
