
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3497"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 
 4  2  3  2  1  5  4  5  5  1  5  7  6  3  1  3  3  6  5  4  2  2  3  6  2  3 
48 49 50 
 2  4  1 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03013 0.35820 0.61772 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
2121 1376 
[1] "treatment indicator table: "

   0    1 
1198 2299 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1655
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 10"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 93"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1842
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 318.372 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.363 0.0742
 2 mu         0.1   0.2 0.413 0.0958
 3 mu         0.1   0.3 0.483 0.0970
 4 mu         0.1   0.4 0.576 0.100 
 5 mu         0.1   0.5 0.626 0.111 
 6 mu         0.2   0.1 0.336 0.0497
 7 mu         0.2   0.2 0.400 0.0612
 8 mu         0.2   0.3 0.459 0.0631
 9 mu         0.2   0.4 0.542 0.0666
10 mu         0.2   0.5 0.582 0.0747
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.881        0.504  0.000733      5.19
 2 mu         0.2      0.937        0.799  0.0797        3.15
 3 mu         0.3      1.02         0.955  0.274         2.40
 4 mu         0.4      1.00         0.968  0.422         1.83
 5 mu         0.5      0.989        0.974  0.522         1.58
 6 mu         0.6      1.02         1.00   0.527         1.46
 7 mu         0.7      1.02         0.991  0.648         1.61
 8 mu         0.8      0.997        0.984  0.648         1.69
 9 mu         0.9      0.998        0.982  0.549         1.50
10 mu_1       0.1      0.893        0.631  0.00223       5.20
11 mu_1       0.2      0.960        0.913  0.124         2.75
12 mu_1       0.3      1.02         0.962  0.332         2.39
13 mu_1       0.4      0.999        0.958  0.415         1.73
14 mu_1       0.5      0.991        0.971  0.514         1.55
15 mu_1       0.6      1.02         1.00   0.536         1.46
16 mu_1       0.7      1.02         0.995  0.660         1.60
17 mu_1       0.8      0.996        0.990  0.623         1.71
18 mu_1       0.9      0.998        0.981  0.534         1.52
19 mu_0       0.1      0.879        0.474  0.000566      5.53
20 mu_0       0.2      0.932        0.758  0.0686        3.27
21 mu_0       0.3      1.01         0.952  0.250         2.41
22 mu_0       0.4      1.01         0.979  0.427         1.92
23 mu_0       0.5      0.988        0.980  0.483         1.61
24 mu_0       0.6      1.01         0.989  0.512         1.50
25 mu_0       0.7      1.02         0.999  0.618         1.66
26 mu_0       0.8      1.00         0.977  0.624         1.60
27 mu_0       0.9      0.994        0.989  0.510         1.51
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       1.67     1.00e-13  1.90e-45     94.0 
 2 mu         0.2       1.94     1.67e- 7  2.67e-31     89.0 
 3 mu         0.3       1.28     1.69e- 4  5.05e-23     18.3 
 4 mu         0.4       1.91     1.06e- 2  3.76e-17     41.9 
 5 mu         0.5       1.70     1.69e- 1  1.35e-12     20.7 
 6 mu         0.6       1.12     5.14e- 1  7.11e- 9     10.1 
 7 mu         0.7       1.01     4.41e- 1  2.67e-10     11.1 
 8 mu         0.8       1.23     3.82e- 1  4.66e-16      8.61
 9 mu         0.9       1.25     4.15e- 3  3.09e-26     24.0 
10 mu_1       0.1       2.40     6.55e-13  1.90e-44    134.  
11 mu_1       0.2       1.58     5.74e- 7  1.34e-30     63.6 
12 mu_1       0.3       1.28     3.65e- 4  1.68e-22     20.2 
13 mu_1       0.4       1.96     1.78e- 2  9.41e-17     41.9 
14 mu_1       0.5       1.62     2.21e- 1  2.70e-12     21.2 
15 mu_1       0.6       1.09     4.36e- 1  1.18e- 8     10.1 
16 mu_1       0.7       1.02     4.03e- 1  6.35e-11     11.2 
17 mu_1       0.8       1.24     3.12e- 1  9.71e-17      8.43
18 mu_1       0.9       1.23     3.02e- 3  5.73e-27     24.3 
19 mu_0       0.1       1.59     3.87e-14  0            89.5 
20 mu_0       0.2       2.02     6.55e- 8  0            95.4 
21 mu_0       0.3       1.28     7.71e- 5  0            22.4 
22 mu_0       0.4       1.88     6.11e- 3  0            41.9 
23 mu_0       0.5       1.78     1.14e- 1  0            20.3 
24 mu_0       0.6       1.17     4.13e- 1  0            12.4 
25 mu_0       0.7       1.00     4.89e- 1  0            10.8 
26 mu_0       0.8       1.17     5.92e- 1  0             9.36
27 mu_0       0.9       1.39     1.19e- 2  0            21.3 
[1] "Total run time was 323.845 seconds"
