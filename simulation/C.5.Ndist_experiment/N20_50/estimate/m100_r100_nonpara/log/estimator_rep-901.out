
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3402"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 3  4  1  4  4  6  7  4  1  4  5  3  3  2  3  2  2  5  1  2  3  4  3  5  2  5 
46 47 48 49 50 
 3  1  3  3  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03752 0.36402 0.61956 1.00000 6.95725 
[1] "event indicator table: "

   0    1 
2022 1380 
[1] "treatment indicator table: "

   0    1 
1233 2169 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1711
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 23"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1691
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 187.72 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.304 0.0718
 2 mu         0.1   0.2 0.368 0.0557
 3 mu         0.1   0.3 0.369 0.0625
 4 mu         0.1   0.4 0.401 0.0943
 5 mu         0.1   0.5 0.407 0.0833
 6 mu         0.2   0.1 0.345 0.0543
 7 mu         0.2   0.2 0.426 0.0424
 8 mu         0.2   0.3 0.441 0.0494
 9 mu         0.2   0.4 0.475 0.0721
10 mu         0.2   0.5 0.492 0.0626
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.774        0.418   0.00829      7.13
 2 mu         0.2      0.944        0.835   0.222        3.26
 3 mu         0.3      0.993        0.953   0.452        1.95
 4 mu         0.4      0.995        0.959   0.576        1.69
 5 mu         0.5      0.987        0.973   0.561        1.40
 6 mu         0.6      0.986        0.988   0.632        1.44
 7 mu         0.7      0.999        1.01    0.625        1.44
 8 mu         0.8      1.00         0.991   0.722        1.53
 9 mu         0.9      1.01         0.965   0.502        1.68
10 mu_1       0.1      0.758        0.570   0.0154       2.97
11 mu_1       0.2      0.970        0.902   0.286        3.24
12 mu_1       0.3      0.995        0.948   0.473        1.86
13 mu_1       0.4      0.995        0.962   0.575        1.66
14 mu_1       0.5      0.985        0.979   0.581        1.38
15 mu_1       0.6      0.986        0.993   0.614        1.46
16 mu_1       0.7      1.00         1.00    0.637        1.43
17 mu_1       0.8      1.00         0.989   0.706        1.54
18 mu_1       0.9      1.02         0.971   0.486        1.70
19 mu_0       0.1      0.776        0.396   0.00703      7.92
20 mu_0       0.2      0.937        0.831   0.199        3.26
21 mu_0       0.3      0.992        0.951   0.431        2.11
22 mu_0       0.4      0.994        0.950   0.577        1.72
23 mu_0       0.5      0.988        0.974   0.541        1.44
24 mu_0       0.6      0.985        0.985   0.630        1.42
25 mu_0       0.7      0.998        1.01    0.596        1.47
26 mu_0       0.8      1.00         0.997   0.687        1.49
27 mu_0       0.9      1.00         0.989   0.601        1.71
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.400     1.19e-11  2.91e-35     30.8 
 2 mu         0.2      1.38      1.79e- 6  1.26e-22     72.7 
 3 mu         0.3      1.55      1.08e- 3  2.12e-15     22.5 
 4 mu         0.4      1.61      6.02e- 2  1.98e-10     28.7 
 5 mu         0.5      1.24      2.66e- 1  6.68e- 7     21.3 
 6 mu         0.6      1.03      4.96e- 1  1.98e- 4      6.16
 7 mu         0.7      1.12      5.68e- 1  1.58e- 7      5.81
 8 mu         0.8      1.34      4.52e- 1  4.14e-12      9.36
 9 mu         0.9      1.76      4.17e- 3  1.01e-20     19.8 
10 mu_1       0.1      0.748     7.87e-11  2.56e-34     54.3 
11 mu_1       0.2      1.48      5.76e- 6  5.55e-22     64.2 
12 mu_1       0.3      1.56      2.33e- 3  6.20e-15     19.1 
13 mu_1       0.4      1.60      9.74e- 2  4.34e-10     30.8 
14 mu_1       0.5      1.19      2.29e- 1  1.23e- 6     18.2 
15 mu_1       0.6      1.03      4.47e- 1  5.81e- 5      6.08
16 mu_1       0.7      1.12      4.66e- 1  3.99e- 8      5.67
17 mu_1       0.8      1.36      3.82e- 1  9.12e-13     10.1 
18 mu_1       0.9      1.77      2.92e- 3  3.06e-21     19.9 
19 mu_0       0.1      0.361     4.53e-12  0            28.1 
20 mu_0       0.2      1.36      8.01e- 7  0            74.9 
21 mu_0       0.3      1.55      5.02e- 4  0            25.2 
22 mu_0       0.4      1.62      3.54e- 2  0            27.3 
23 mu_0       0.5      1.29      2.92e- 1  0            24.3 
24 mu_0       0.6      1.03      4.00e- 1  0             6.68
25 mu_0       0.7      1.11      4.64e- 1  0             6.46
26 mu_0       0.8      1.27      6.01e- 1  0             6.34
27 mu_0       0.9      1.74      8.53e- 3  0            18.9 
[1] "Total run time was 191.059 seconds"
