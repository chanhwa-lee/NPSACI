
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3646"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 46 
 2  2  1  1  3  4  7  1  1  1  3  1  5  5  3  3  3  3  9  3  6  1  3  3  7  5 
47 48 49 50 
 1  9  3  1 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02226 0.32332 0.58963 1.00000 5.03068 
[1] "event indicator table: "

   0    1 
2155 1491 
[1] "treatment indicator table: "

   0    1 
1357 2289 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1834
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1812
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 38"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 211.752 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.481 0.122 
 2 mu         0.1   0.2 0.503 0.104 
 3 mu         0.1   0.3 0.541 0.115 
 4 mu         0.1   0.4 0.627 0.154 
 5 mu         0.1   0.5 0.647 0.143 
 6 mu         0.2   0.1 0.417 0.0764
 7 mu         0.2   0.2 0.450 0.0626
 8 mu         0.2   0.3 0.510 0.0684
 9 mu         0.2   0.4 0.590 0.0955
10 mu         0.2   0.5 0.612 0.0869
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.970        0.539  0.000207      6.88
 2 mu         0.2      1.00         0.886  0.0624        2.51
 3 mu         0.3      1.00         0.975  0.510         1.79
 4 mu         0.4      0.988        0.985  0.433         1.64
 5 mu         0.5      0.998        0.998  0.585         1.74
 6 mu         0.6      1.01         0.995  0.697         1.74
 7 mu         0.7      1.01         1.01   0.597         1.41
 8 mu         0.8      1.03         1.03   0.641         1.55
 9 mu         0.9      1.01         1.02   0.384         2.11
10 mu_1       0.1      0.972        0.771  0.000629      5.91
11 mu_1       0.2      1.01         0.944  0.0998        2.49
12 mu_1       0.3      1.00         0.961  0.526         1.82
13 mu_1       0.4      0.987        0.982  0.452         1.54
14 mu_1       0.5      1.00         0.995  0.563         1.79
15 mu_1       0.6      1.01         0.988  0.669         1.74
16 mu_1       0.7      1.01         1.00   0.601         1.38
17 mu_1       0.8      1.03         1.03   0.636         1.54
18 mu_1       0.9      1.01         1.01   0.357         2.13
19 mu_0       0.1      0.970        0.522  0.000160      6.99
20 mu_0       0.2      1.00         0.866  0.0531        2.51
21 mu_0       0.3      1.00         0.979  0.464         1.83
22 mu_0       0.4      0.989        0.994  0.421         1.71
23 mu_0       0.5      0.995        1.02   0.607         1.70
24 mu_0       0.6      1.01         0.985  0.669         1.74
25 mu_0       0.7      1.00         1.00   0.587         1.47
26 mu_0       0.8      1.03         1.03   0.661         1.61
27 mu_0       0.9      1.02         0.999  0.523         1.90
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.188     3.89e-14  1.18e-47      9.39
 2 mu         0.2      1.19      1.47e- 7  6.67e-33     43.2 
 3 mu         0.3      1.21      3.02e- 4  2.84e-24     17.4 
 4 mu         0.4      1.48      4.91e- 2  3.76e-18     14.0 
 5 mu         0.5      1.54      2.08e- 1  2.10e-13     14.7 
 6 mu         0.6      1.59      6.08e- 1  1.60e- 9     30.0 
 7 mu         0.7      1.64      5.47e- 1  3.12e-11     17.3 
 8 mu         0.8      1.21      2.54e- 1  9.38e-18      8.77
 9 mu         0.9      0.951     9.59e- 4  2.46e-29     11.5 
10 mu_1       0.1      0.370     2.34e-13  1.18e-46     17.3 
11 mu_1       0.2      1.29      4.70e- 7  3.34e-32     39.7 
12 mu_1       0.3      1.26      6.49e- 4  9.45e-24     13.5 
13 mu_1       0.4      1.52      7.83e- 2  9.39e-18     15.9 
14 mu_1       0.5      1.52      2.13e- 1  4.21e-13     13.4 
15 mu_1       0.6      1.61      6.65e- 1  2.66e- 9     31.3 
16 mu_1       0.7      1.63      5.35e- 1  8.18e-12     15.4 
17 mu_1       0.8      1.18      2.07e- 1  2.15e-18      8.49
18 mu_1       0.9      0.943     6.84e- 4  5.02e-30     11.8 
19 mu_0       0.1      0.168     1.73e-14  0             8.52
20 mu_0       0.2      1.16      5.31e- 8  0            44.1 
21 mu_0       0.3      1.19      1.53e- 4  0            19.1 
22 mu_0       0.4      1.45      2.96e- 2  0            12.8 
23 mu_0       0.5      1.57      1.50e- 1  0            16.1 
24 mu_0       0.6      1.56      5.74e- 1  0            28.1 
25 mu_0       0.7      1.67      7.66e- 1  0            21.6 
26 mu_0       0.8      1.32      3.75e- 1  0             9.90
27 mu_0       0.9      1.02      2.77e- 3  0             9.09
[1] "Total run time was 214.867 seconds"
