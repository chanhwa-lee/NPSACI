
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3577"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 4  4  2  2  3  3  4  2  4  2  2  3  1  4  5  3  3  4  1  3  5  3  2  5  4  3 
46 47 48 50 
 5  4  3  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02918 0.31797 0.60225 1.00000 5.00000 
[1] "event indicator table: "

   0    1 
2115 1462 
[1] "treatment indicator table: "

   0    1 
1324 2253 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1795
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 17"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1782
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 50"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 260.876 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.402 0.0574
 2 mu         0.1   0.2 0.468 0.0610
 3 mu         0.1   0.3 0.539 0.0694
 4 mu         0.1   0.4 0.551 0.0616
 5 mu         0.1   0.5 0.569 0.0599
 6 mu         0.2   0.1 0.353 0.0540
 7 mu         0.2   0.2 0.447 0.0500
 8 mu         0.2   0.3 0.477 0.0542
 9 mu         0.2   0.4 0.510 0.0406
10 mu         0.2   0.5 0.539 0.0423
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.906        0.861  0.000495      2.91
 2 mu         0.2      0.978        0.983  0.0784        2.16
 3 mu         0.3      1.01         1.00   0.433         1.78
 4 mu         0.4      0.999        1.01   0.534         1.40
 5 mu         0.5      0.994        1.00   0.675         1.30
 6 mu         0.6      0.983        0.991  0.747         1.27
 7 mu         0.7      0.986        0.993  0.652         1.32
 8 mu         0.8      0.985        0.994  0.643         1.33
 9 mu         0.9      1.03         0.977  0.602         1.79
10 mu_1       0.1      0.928        0.936  0.00145       2.50
11 mu_1       0.2      0.992        0.957  0.112         2.31
12 mu_1       0.3      1.01         1.01   0.479         1.68
13 mu_1       0.4      1.00         1.00   0.547         1.38
14 mu_1       0.5      0.992        0.999  0.686         1.29
15 mu_1       0.6      0.983        0.989  0.745         1.30
16 mu_1       0.7      0.986        0.996  0.655         1.34
17 mu_1       0.8      0.984        0.992  0.636         1.35
18 mu_1       0.9      1.03         0.983  0.596         1.81
19 mu_0       0.1      0.903        0.836  0.000389      3.12
20 mu_0       0.2      0.975        0.975  0.0690        2.12
21 mu_0       0.3      1.01         1.02   0.401         1.86
22 mu_0       0.4      0.999        1.00   0.525         1.41
23 mu_0       0.5      0.996        0.994  0.664         1.31
24 mu_0       0.6      0.983        0.997  0.737         1.24
25 mu_0       0.7      0.987        0.985  0.637         1.30
26 mu_0       0.8      0.987        0.976  0.668         1.41
27 mu_0       0.9      1.02         0.988  0.558         1.66
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.522     1.78e-12  9.61e-40     43.3 
 2 mu         0.2      0.933     3.33e- 7  2.37e-26     33.1 
 3 mu         0.3      1.51      5.51e- 4  1.34e-18     24.9 
 4 mu         0.4      1.47      3.81e- 2  3.52e-13     24.9 
 5 mu         0.5      1.35      4.99e- 1  4.68e- 9     14.2 
 6 mu         0.6      1.15      2.91e- 1  2.80e- 6      6.66
 7 mu         0.7      0.906     4.62e- 1  2.04e-10      4.05
 8 mu         0.8      1.16      1.62e- 1  1.20e-16      6.98
 9 mu         0.9      1.31      2.14e- 4  8.00e-28     11.5 
10 mu_1       0.1      0.592     1.02e-11  9.01e-39     39.3 
11 mu_1       0.2      1.04      9.71e- 7  1.11e-25     35.4 
12 mu_1       0.3      1.56      1.25e- 3  4.17e-18     29.0 
13 mu_1       0.4      1.44      5.95e- 2  8.26e-13     21.7 
14 mu_1       0.5      1.34      4.71e- 1  8.78e- 9     14.5 
15 mu_1       0.6      1.11      3.42e- 1  1.02e- 6      5.67
16 mu_1       0.7      0.900     3.97e- 1  6.42e-11      4.19
17 mu_1       0.8      1.19      1.60e- 1  3.31e-17      7.33
18 mu_1       0.9      1.30      1.44e- 4  1.96e-28     12.0 
19 mu_0       0.1      0.514     4.74e-13  0            43.7 
20 mu_0       0.2      0.907     1.75e- 7  0            32.5 
21 mu_0       0.3      1.48      2.53e- 4  0            23.2 
22 mu_0       0.4      1.49      2.27e- 2  0            27.0 
23 mu_0       0.5      1.37      3.37e- 1  0            13.9 
24 mu_0       0.6      1.21      3.49e- 1  0             8.15
25 mu_0       0.7      0.919     4.27e- 1  0             3.75
26 mu_0       0.8      1.07      1.39e- 1  0             5.58
27 mu_0       0.9      1.36      5.59e- 4  0             8.78
[1] "Total run time was 265.463 seconds"
