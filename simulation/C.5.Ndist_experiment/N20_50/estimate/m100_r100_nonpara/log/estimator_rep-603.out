
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3522"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 36 37 38 39 40 41 42 43 44 45 46 
 5  1  1  3  1  2  5  2  2  5  5  6  6  5  2  2  5  2  5  4  1  3  2  6  5  7 
47 48 49 50 
 3  1  1  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03273 0.31979 0.60594 1.00000 5.42772 
[1] "event indicator table: "

   0    1 
2132 1390 
[1] "treatment indicator table: "

   0    1 
1307 2215 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1744
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1778
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 72"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 244.197 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.360 0.0369
 2 mu         0.1   0.2 0.429 0.0459
 3 mu         0.1   0.3 0.506 0.0748
 4 mu         0.1   0.4 0.585 0.0958
 5 mu         0.1   0.5 0.606 0.100 
 6 mu         0.2   0.1 0.404 0.0279
 7 mu         0.2   0.2 0.485 0.0345
 8 mu         0.2   0.3 0.564 0.0562
 9 mu         0.2   0.4 0.646 0.0737
10 mu         0.2   0.5 0.677 0.0771
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.872        0.691  0.000333      4.80
 2 mu         0.2      1.09         1.01   0.0839        4.35
 3 mu         0.3      1.05         1.00   0.457         2.11
 4 mu         0.4      1.02         0.983  0.598         1.68
 5 mu         0.5      1.03         1.02   0.508         1.72
 6 mu         0.6      1.02         1.01   0.610         1.37
 7 mu         0.7      1.01         1.01   0.708         1.30
 8 mu         0.8      0.993        0.988  0.675         1.50
 9 mu         0.9      0.969        0.978  0.305         2.01
10 mu_1       0.1      0.986        0.793  0.00103       4.74
11 mu_1       0.2      1.10         1.06   0.136         3.63
12 mu_1       0.3      1.04         0.993  0.469         2.06
13 mu_1       0.4      1.02         0.978  0.569         1.77
14 mu_1       0.5      1.03         1.01   0.512         1.66
15 mu_1       0.6      1.02         1.02   0.624         1.33
16 mu_1       0.7      1.00         1.01   0.698         1.30
17 mu_1       0.8      0.992        0.977  0.669         1.50
18 mu_1       0.9      0.969        0.975  0.287         2.02
19 mu_0       0.1      0.859        0.670  0.000255      4.82
20 mu_0       0.2      1.09         0.996  0.0708        4.53
21 mu_0       0.3      1.05         0.989  0.425         2.14
22 mu_0       0.4      1.02         0.998  0.583         1.62
23 mu_0       0.5      1.03         1.02   0.503         1.77
24 mu_0       0.6      1.02         1.02   0.589         1.45
25 mu_0       0.7      1.01         1.00   0.692         1.30
26 mu_0       0.8      0.999        0.985  0.685         1.50
27 mu_0       0.9      0.974        0.968  0.461         1.97
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.399     8.73e-13  2.81e-38     23.4 
 2 mu         0.2      1.67      5.69e- 7  5.48e-25     76.6 
 3 mu         0.3      1.15      4.93e- 4  2.36e-17     23.1 
 4 mu         0.4      1.32      4.68e- 2  1.24e-12     11.8 
 5 mu         0.5      1.50      2.25e- 1  4.99e- 9     12.0 
 6 mu         0.6      1.36      6.91e- 1  3.66e- 6     12.8 
 7 mu         0.7      1.32      4.17e- 1  2.99e-10     17.3 
 8 mu         0.8      1.33      2.26e- 1  2.66e-16     21.4 
 9 mu         0.9      1.18      1.64e- 3  4.96e-27     13.9 
10 mu_1       0.1      0.733     5.60e-12  2.53e-37     41.6 
11 mu_1       0.2      1.68      1.90e- 6  2.47e-24     68.1 
12 mu_1       0.3      1.12      1.15e- 3  7.08e-17     20.1 
13 mu_1       0.4      1.37      7.58e- 2  3.03e-12     12.2 
14 mu_1       0.5      1.51      2.86e- 1  9.73e- 9     13.1 
15 mu_1       0.6      1.33      5.86e- 1  1.08e- 6     12.2 
16 mu_1       0.7      1.33      4.47e- 1  7.60e-11     18.8 
17 mu_1       0.8      1.32      1.76e- 1  5.91e-17     20.3 
18 mu_1       0.9      1.18      1.12e- 3  9.80e-28     14.3 
19 mu_0       0.1      0.362     3.48e-13  3.12e-39     21.4 
20 mu_0       0.2      1.67      2.15e- 7  6.85e-26     78.7 
21 mu_0       0.3      1.16      2.10e- 4  9.51e-19     24.4 
22 mu_0       0.4      1.28      2.79e- 2  5.32e-14     11.6 
23 mu_0       0.5      1.49      1.75e- 1  2.56e-10     10.9 
24 mu_0       0.6      1.39      6.75e- 1  2.61e- 7     13.7 
25 mu_0       0.7      1.28      4.78e- 1  8.20e-10     13.8 
26 mu_0       0.8      1.39      2.61e- 1  1.09e-15     25.6 
27 mu_0       0.9      1.15      6.32e- 3  4.08e-26      9.55
[1] "Total run time was 249.254 seconds"
