
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3567"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 44 45 46 
 1  4  3  2  4  4  3  4  2  3  5  3  5  4  2  2  2  4  4  3  1  3  3  4  1  3 
47 48 49 50 
 6  5  6  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04056 0.35981 0.61959 1.00000 5.92932 
[1] "event indicator table: "

   0    1 
2139 1428 
[1] "treatment indicator table: "

   0    1 
1249 2318 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1854
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1713
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 54"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 115.191 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.484 0.162 
 2 mu         0.1   0.2 0.599 0.190 
 3 mu         0.1   0.3 0.760 0.226 
 4 mu         0.1   0.4 0.789 0.240 
 5 mu         0.1   0.5 0.795 0.247 
 6 mu         0.2   0.1 0.342 0.0564
 7 mu         0.2   0.2 0.427 0.0621
 8 mu         0.2   0.3 0.542 0.0816
 9 mu         0.2   0.4 0.555 0.0808
10 mu         0.2   0.5 0.558 0.0715
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      1.09        0.0789 0.0000000330     35.1 
 2 mu         0.2      0.883       0.758  0.000795          4.91
 3 mu         0.3      0.964       0.945  0.0660            2.39
 4 mu         0.4      0.970       0.929  0.310             1.70
 5 mu         0.5      1.00        0.992  0.436             1.48
 6 mu         0.6      1.01        1.00   0.614             1.41
 7 mu         0.7      0.996       1.00   0.741             1.44
 8 mu         0.8      1.01        1.01   0.573             1.61
 9 mu         0.9      1.00        0.984  0.471             2.12
10 mu_1       0.1      0.857       0.176  0.000000134      14.6 
11 mu_1       0.2      0.902       0.842  0.00165           3.83
12 mu_1       0.3      0.970       0.968  0.0953            2.39
13 mu_1       0.4      0.971       0.937  0.266             1.59
14 mu_1       0.5      1.01        0.999  0.473             1.46
15 mu_1       0.6      1.01        1.01   0.625             1.39
16 mu_1       0.7      0.996       1.01   0.734             1.46
17 mu_1       0.8      1.01        1.00   0.570             1.61
18 mu_1       0.9      1.00        0.979  0.461             2.15
19 mu_0       0.1      1.11        0.0676 0.0000000217     37.4 
20 mu_0       0.2      0.878       0.715  0.000582          5.19
21 mu_0       0.3      0.961       0.947  0.0535            2.39
22 mu_0       0.4      0.969       0.940  0.339             1.78
23 mu_0       0.5      0.997       0.987  0.398             1.51
24 mu_0       0.6      1.01        1.01   0.575             1.43
25 mu_0       0.7      0.996       1.00   0.717             1.39
26 mu_0       0.8      1.00        0.994  0.588             1.60
27 mu_0       0.9      1.01        0.995  0.511             1.80
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.284     1.89e-14  4.58e-43     20.6 
 2 mu         0.2      1.21      3.20e- 8  5.09e-29     31.3 
 3 mu         0.3      1.53      6.40e- 5  7.37e-21     40.4 
 4 mu         0.4      1.33      7.34e- 3  4.03e-15     21.1 
 5 mu         0.5      1.16      1.31e- 1  1.00e-10     13.5 
 6 mu         0.6      1.46      6.35e- 1  3.39e- 7     37.4 
 7 mu         0.7      1.52      1.05e+ 0  6.85e- 7     18.8 
 8 mu         0.8      1.33      5.56e- 1  1.03e-11      9.91
 9 mu         0.9      1.04      7.82e- 3  1.76e-20     27.1 
10 mu_1       0.1      0.523     1.32e-13  4.39e-42     34.3 
11 mu_1       0.2      1.39      1.05e- 7  2.44e-28     31.8 
12 mu_1       0.3      1.48      1.42e- 4  2.36e-20     37.8 
13 mu_1       0.4      1.28      1.40e- 2  9.67e-15     20.8 
14 mu_1       0.5      1.17      1.79e- 1  1.93e-10     12.8 
15 mu_1       0.6      1.51      7.39e- 1  5.41e- 7     38.6 
16 mu_1       0.7      1.52      1.04e+ 0  2.56e- 7     16.7 
17 mu_1       0.8      1.32      4.96e- 1  3.39e-12     10.4 
18 mu_1       0.9      1.02      6.22e- 3  5.12e-21     27.7 
19 mu_0       0.1      0.258     6.26e-15  0            19.1 
20 mu_0       0.2      1.16      1.28e- 8  0            32.6 
21 mu_0       0.3      1.56      2.74e- 5  0            41.4 
22 mu_0       0.4      1.37      3.53e- 3  0            21.2 
23 mu_0       0.5      1.16      1.20e- 1  0            14.3 
24 mu_0       0.6      1.39      5.05e- 1  0            35.5 
25 mu_0       0.7      1.52      8.52e- 1  0            23.8 
26 mu_0       0.8      1.39      8.21e- 1  0             7.93
27 mu_0       0.9      1.17      1.90e- 2  0            22.1 
[1] "Total run time was 117.279 seconds"
