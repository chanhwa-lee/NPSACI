
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3514"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 6  1  2  3  2  3  1  1  5  5  3  5  2  5  6  3  3  4  4  2  5  4  1  1  3  2 
46 47 48 49 50 
 3  6  4  3  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03266 0.35839 0.63297 1.00000 5.00000 
[1] "event indicator table: "

   0    1 
2068 1446 
[1] "treatment indicator table: "

   0    1 
1331 2183 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1738
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1776
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 209.409 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.259 0.117 
 2 mu         0.1   0.2 0.359 0.149 
 3 mu         0.1   0.3 0.469 0.182 
 4 mu         0.1   0.4 0.466 0.184 
 5 mu         0.1   0.5 0.464 0.195 
 6 mu         0.2   0.1 0.345 0.0486
 7 mu         0.2   0.2 0.454 0.0740
 8 mu         0.2   0.3 0.533 0.0837
 9 mu         0.2   0.4 0.549 0.0703
10 mu         0.2   0.5 0.553 0.0685
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.808        0.136  0.000245     33.3 
 2 mu         0.2      0.977        0.860  0.0778        3.75
 3 mu         0.3      1.01         0.910  0.352         2.15
 4 mu         0.4      0.993        0.970  0.526         1.66
 5 mu         0.5      1.01         1.00   0.761         1.32
 6 mu         0.6      1.02         1.02   0.765         1.29
 7 mu         0.7      1.01         1.00   0.776         1.33
 8 mu         0.8      0.990        0.997  0.619         1.47
 9 mu         0.9      0.970        0.914  0.197         2.33
10 mu_1       0.1      0.808        0.292  0.000710     16.7 
11 mu_1       0.2      1.01         0.897  0.128         3.69
12 mu_1       0.3      1.00         0.939  0.368         2.11
13 mu_1       0.4      0.994        0.978  0.564         1.53
14 mu_1       0.5      1.01         1.01   0.798         1.33
15 mu_1       0.6      1.02         1.02   0.756         1.29
16 mu_1       0.7      1.01         1.00   0.768         1.34
17 mu_1       0.8      0.988        0.994  0.578         1.47
18 mu_1       0.9      0.970        0.912  0.178         2.40
19 mu_0       0.1      0.808        0.120  0.000193     35.1 
20 mu_0       0.2      0.968        0.816  0.0652        3.77
21 mu_0       0.3      1.01         0.913  0.345         2.25
22 mu_0       0.4      0.991        0.961  0.500         1.75
23 mu_0       0.5      1.01         0.983  0.724         1.31
24 mu_0       0.6      1.02         1.00   0.778         1.31
25 mu_0       0.7      1.01         1.00   0.776         1.32
26 mu_0       0.8      0.998        0.997  0.676         1.46
27 mu_0       0.9      0.967        0.950  0.342         1.76
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.103      2.08e-13  1.26e-37      5.61
 2 mu         0.2     0.899      1.52e- 7  1.38e-24     22.5 
 3 mu         0.3     1.48       2.54e- 4  4.53e-17     40.8 
 4 mu         0.4     1.21       2.29e- 2  7.69e-12     10.7 
 5 mu         0.5     1.04       3.68e- 1  6.81e- 8      6.75
 6 mu         0.6     1.02       9.21e- 1  5.00e- 5      3.96
 7 mu         0.7     1.02       9.55e- 1  8.66e- 9      4.05
 8 mu         0.8     1.14       1.61e- 1  1.72e-14      6.81
 9 mu         0.9     1.00       2.82e- 4  9.16e-25     23.2 
10 mu_1       0.1     0.229      1.56e-12  1.15e-36     11.2 
11 mu_1       0.2     1.14       5.00e- 7  6.33e-24     30.4 
12 mu_1       0.3     1.48       5.78e- 4  1.38e-16     36.9 
13 mu_1       0.4     1.17       3.76e- 2  1.76e-11      9.45
14 mu_1       0.5     1.01       4.67e- 1  1.25e- 7      5.71
15 mu_1       0.6     1.03       8.91e- 1  1.95e- 5      4.30
16 mu_1       0.7     1.02       9.30e- 1  2.90e- 9      3.77
17 mu_1       0.8     1.15       1.29e- 1  5.04e-15      6.93
18 mu_1       0.9     0.978      2.06e- 4  2.38e-25     23.1 
19 mu_0       0.1     0.0888     5.79e-14  1.16e-38      4.99
20 mu_0       0.2     0.839      6.73e- 8  1.44e-25     20.5 
21 mu_0       0.3     1.48       1.28e- 4  5.39e-18     42.5 
22 mu_0       0.4     1.24       1.34e- 2  1.07e-12     12.1 
23 mu_0       0.5     1.07       2.82e- 1  1.13e- 8      7.79
24 mu_0       0.6     1.02       7.76e- 1  1.77e- 5      4.64
25 mu_0       0.7     1.02       6.73e- 1  2.21e- 8      4.69
26 mu_0       0.8     1.11       2.88e- 1  6.60e-14      6.34
27 mu_0       0.9     1.23       9.69e- 4  7.01e-24     23.8 
[1] "Total run time was 212.535 seconds"
