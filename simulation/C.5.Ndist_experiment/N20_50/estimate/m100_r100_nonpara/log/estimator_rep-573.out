
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3634"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 3  2  3  2  2  2  3  1  5  2  3  4  2  5  2  2  5  3  3  5  6  2  5  3  5  2 
46 47 48 49 50 
 2  6  2  3  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03503 0.34358 0.60739 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
2165 1469 
[1] "treatment indicator table: "

   0    1 
1334 2300 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1756
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 86"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1878
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 53"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 270.61 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.433 0.124 
 2 mu         0.1   0.2 0.433 0.108 
 3 mu         0.1   0.3 0.535 0.0893
 4 mu         0.1   0.4 0.532 0.0780
 5 mu         0.1   0.5 0.532 0.0739
 6 mu         0.2   0.1 0.403 0.0610
 7 mu         0.2   0.2 0.441 0.0661
 8 mu         0.2   0.3 0.560 0.0615
 9 mu         0.2   0.4 0.575 0.0530
10 mu         0.2   0.5 0.585 0.0470
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.894        0.329 0.0000348      5.97
 2 mu         0.2      1.06         0.996 0.0311         3.23
 3 mu         0.3      0.977        0.965 0.249          2.00
 4 mu         0.4      0.986        0.986 0.402          1.86
 5 mu         0.5      1.00         1.00  0.650          1.39
 6 mu         0.6      1.01         0.993 0.720          1.41
 7 mu         0.7      1.00         0.993 0.729          1.30
 8 mu         0.8      0.997        0.993 0.537          1.38
 9 mu         0.9      1.01         1.03  0.218          1.49
10 mu_1       0.1      1.04         0.622 0.000108       6.42
11 mu_1       0.2      1.04         1.03  0.0506         2.69
12 mu_1       0.3      0.972        0.972 0.278          2.12
13 mu_1       0.4      0.990        0.997 0.428          1.78
14 mu_1       0.5      1.00         0.998 0.676          1.39
15 mu_1       0.6      1.01         1.00  0.728          1.39
16 mu_1       0.7      1.00         0.996 0.752          1.30
17 mu_1       0.8      0.998        0.998 0.540          1.42
18 mu_1       0.9      1.01         1.02  0.208          1.50
19 mu_0       0.1      0.878        0.293 0.0000266      5.92
20 mu_0       0.2      1.06         0.994 0.0263         3.45
21 mu_0       0.3      0.979        0.959 0.236          1.95
22 mu_0       0.4      0.983        0.971 0.384          1.91
23 mu_0       0.5      1.00         1.00  0.604          1.38
24 mu_0       0.6      1.01         0.992 0.702          1.45
25 mu_0       0.7      1.00         1.00  0.675          1.28
26 mu_0       0.8      0.994        0.983 0.523          1.42
27 mu_0       0.9      1.02         1.03  0.311          1.60
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.0240     4.22e-13  3.79e-41      1.63
 2 mu         0.2     0.328      5.39e- 7  3.75e-27     10.3 
 3 mu         0.3     0.845      6.93e- 4  4.74e-19     16.3 
 4 mu         0.4     1.13       4.05e- 2  2.22e-13     10.5 
 5 mu         0.5     1.14       4.44e- 1  4.62e- 9      6.38
 6 mu         0.6     1.07       7.12e- 1  4.11e- 6      7.71
 7 mu         0.7     1.12       5.89e- 1  1.66e- 6      7.56
 8 mu         0.8     1.06       1.76e- 1  3.76e-11     12.2 
 9 mu         0.9     1.53       4.67e- 4  1.28e-19     36.8 
10 mu_1       0.1     0.0609     2.69e-12  3.56e-40      4.07
11 mu_1       0.2     0.456      1.59e- 6  1.76e-26     13.9 
12 mu_1       0.3     0.920      1.51e- 3  1.49e-18     14.6 
13 mu_1       0.4     1.14       6.64e- 2  5.23e-13     10.9 
14 mu_1       0.5     1.13       4.85e- 1  8.68e- 9      6.38
15 mu_1       0.6     1.08       7.68e- 1  6.85e- 6      7.82
16 mu_1       0.7     1.12       6.07e- 1  6.36e- 7      8.33
17 mu_1       0.8     1.05       1.67e- 1  1.26e-11     11.8 
18 mu_1       0.9     1.57       3.04e- 4  3.81e-20     38.4 
19 mu_0       0.1     0.0199     1.70e-13  0             1.36
20 mu_0       0.2     0.296      2.75e- 7  0             9.45
21 mu_0       0.3     0.813      3.32e- 4  0            17.0 
22 mu_0       0.4     1.12       2.55e- 2  0            10.3 
23 mu_0       0.5     1.15       3.08e- 1  0             6.88
24 mu_0       0.6     1.06       7.72e- 1  0             7.54
25 mu_0       0.7     1.12       6.53e- 1  0             5.78
26 mu_0       0.8     1.09       2.39e- 1  0            14.0 
27 mu_0       0.9     1.19       7.24e- 4  0            22.1 
[1] "Total run time was 274.562 seconds"
