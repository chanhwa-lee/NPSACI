
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3348"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 7  4  7  5  1  5  2  1  2  8  2  2  3  3  5  2  2  1  3  4  3  2  5  1  4  1 
46 47 48 49 50 
 3  1  2  4  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04624 0.38282 0.63745 1.00000 5.00000 
[1] "event indicator table: "

   0    1 
2043 1305 
[1] "treatment indicator table: "

   0    1 
1101 2247 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1626
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 26"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 84"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1722
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 7"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 276.486 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.368 0.124 
 2 mu         0.1   0.2 0.382 0.105 
 3 mu         0.1   0.3 0.421 0.127 
 4 mu         0.1   0.4 0.500 0.101 
 5 mu         0.1   0.5 0.529 0.0970
 6 mu         0.2   0.1 0.271 0.0953
 7 mu         0.2   0.2 0.336 0.0853
 8 mu         0.2   0.3 0.367 0.0933
 9 mu         0.2   0.4 0.409 0.0851
10 mu         0.2   0.5 0.442 0.0790
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      0.856        0.236 0.00000426      7.98
 2 mu         0.2      0.803        0.763 0.0115          2.70
 3 mu         0.3      0.935        0.899 0.181           1.91
 4 mu         0.4      0.982        0.986 0.461           1.62
 5 mu         0.5      1.00         0.969 0.641           1.68
 6 mu         0.6      0.997        0.988 0.752           1.43
 7 mu         0.7      0.996        0.996 0.691           1.27
 8 mu         0.8      1.00         0.996 0.745           1.24
 9 mu         0.9      1.02         0.994 0.658           1.52
10 mu_1       0.1      0.686        0.398 0.0000150       3.22
11 mu_1       0.2      0.840        0.833 0.0198          2.54
12 mu_1       0.3      0.954        0.938 0.223           1.72
13 mu_1       0.4      0.987        0.980 0.494           1.65
14 mu_1       0.5      1.00         0.975 0.665           1.65
15 mu_1       0.6      0.996        0.991 0.764           1.42
16 mu_1       0.7      0.997        0.997 0.690           1.26
17 mu_1       0.8      1.00         0.994 0.747           1.24
18 mu_1       0.9      1.02         1.00  0.641           1.54
19 mu_0       0.1      0.875        0.214 0.00000306      8.85
20 mu_0       0.2      0.793        0.728 0.00940         2.75
21 mu_0       0.3      0.927        0.886 0.164           1.99
22 mu_0       0.4      0.979        0.968 0.439           1.60
23 mu_0       0.5      1.00         0.972 0.610           1.72
24 mu_0       0.6      0.997        0.981 0.724           1.47
25 mu_0       0.7      0.994        1.01  0.687           1.29
26 mu_0       0.8      1.00         0.996 0.705           1.28
27 mu_0       0.9      1.01         0.999 0.670           1.36
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.939     1.05e-12  6.60e-44     84.8 
 2 mu         0.2      1.05      4.09e- 7  1.47e-29     32.2 
 3 mu         0.3      1.57      3.87e- 4  3.19e-21     47.2 
 4 mu         0.4      1.61      2.28e- 2  2.32e-15     24.2 
 5 mu         0.5      1.47      2.35e- 1  7.24e-11     12.6 
 6 mu         0.6      1.28      6.36e- 1  2.93e- 7     16.8 
 7 mu         0.7      1.09      5.91e- 1  1.19e- 6      7.79
 8 mu         0.8      1.25      5.19e- 1  4.68e-10     12.9 
 9 mu         0.9      1.13      1.30e- 2  2.06e-16      9.69
10 mu_1       0.1      0.989     6.92e-12  6.34e-43     77.1 
11 mu_1       0.2      1.13      1.35e- 6  7.05e-29     26.7 
12 mu_1       0.3      1.62      9.01e- 4  1.02e-20     47.6 
13 mu_1       0.4      1.57      3.99e- 2  5.58e-15     18.3 
14 mu_1       0.5      1.44      2.84e- 1  1.39e-10     11.6 
15 mu_1       0.6      1.25      5.40e- 1  4.69e- 7     16.8 
16 mu_1       0.7      1.09      6.22e- 1  1.55e- 7      7.79
17 mu_1       0.8      1.26      4.55e- 1  5.32e-11     13.1 
18 mu_1       0.9      1.11      1.02e- 2  5.71e-17      9.30
19 mu_0       0.1      0.934     4.00e-13  0            85.7 
20 mu_0       0.2      1.03      1.64e- 7  0            36.6 
21 mu_0       0.3      1.56      1.81e- 4  0            47.0 
22 mu_0       0.4      1.65      1.15e- 2  0            28.1 
23 mu_0       0.5      1.50      1.56e- 1  0            13.7 
24 mu_0       0.6      1.32      4.73e- 1  0            16.8 
25 mu_0       0.7      1.10      5.66e- 1  0             7.79
26 mu_0       0.8      1.22      5.07e- 1  0            12.1 
27 mu_0       0.9      1.29      3.10e- 2  0            13.2 
[1] "Total run time was 281.04 seconds"
