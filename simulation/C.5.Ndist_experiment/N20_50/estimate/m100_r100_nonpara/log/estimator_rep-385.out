
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3581"
[1] "cluster size dist'n: "

20 21 22 23 25 26 27 28 29 30 31 32 33 34 36 37 38 39 40 41 42 43 44 45 46 47 
 6  1  3  3  4  2  4  4  3  4  3  2  3  3  3  3  5  9  1  2  4  2  2  5  2  3 
48 49 50 
 4  6  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.05235 0.41132 0.66296 1.00000 5.00000 
[1] "event indicator table: "

   0    1 
2149 1432 
[1] "treatment indicator table: "

   0    1 
1257 2324 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1735
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 8"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 28"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1846
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 48"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 213.591 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.357 0.0971
 2 mu         0.1   0.2 0.462 0.104 
 3 mu         0.1   0.3 0.482 0.121 
 4 mu         0.1   0.4 0.545 0.129 
 5 mu         0.1   0.5 0.580 0.142 
 6 mu         0.2   0.1 0.338 0.0649
 7 mu         0.2   0.2 0.441 0.0565
 8 mu         0.2   0.3 0.476 0.0681
 9 mu         0.2   0.4 0.528 0.0633
10 mu         0.2   0.5 0.565 0.0709
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      1.08        0.0868 0.00000432     14.0 
 2 mu         0.2      1.08        0.740  0.0153          4.92
 3 mu         0.3      0.978       0.990  0.219           2.26
 4 mu         0.4      0.999       1.02   0.526           1.58
 5 mu         0.5      1.01        0.983  0.715           1.48
 6 mu         0.6      0.994       0.982  0.671           1.33
 7 mu         0.7      0.991       0.994  0.711           1.36
 8 mu         0.8      0.978       0.995  0.623           1.34
 9 mu         0.9      0.989       0.963  0.219           2.16
10 mu_1       0.1      1.14        0.211  0.0000151      11.9 
11 mu_1       0.2      1.05        0.873  0.0270          3.53
12 mu_1       0.3      0.974       0.965  0.260           2.06
13 mu_1       0.4      1.00        1.02   0.585           1.60
14 mu_1       0.5      1.01        0.990  0.718           1.43
15 mu_1       0.6      0.994       0.980  0.675           1.34
16 mu_1       0.7      0.992       0.999  0.706           1.35
17 mu_1       0.8      0.978       0.991  0.600           1.37
18 mu_1       0.9      0.991       0.954  0.201           2.25
19 mu_0       0.1      1.08        0.0713 0.00000312     14.4 
20 mu_0       0.2      1.09        0.702  0.0123          5.29
21 mu_0       0.3      0.980       1.02   0.200           2.35
22 mu_0       0.4      0.995       1.01   0.486           1.60
23 mu_0       0.5      1.01        0.998  0.709           1.53
24 mu_0       0.6      0.995       0.992  0.665           1.32
25 mu_0       0.7      0.990       0.984  0.686           1.38
26 mu_0       0.8      0.980       0.989  0.702           1.23
27 mu_0       0.9      0.966       0.958  0.206           1.72
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      3.39      1.23e-14  1.38e-37    221.  
 2 mu         0.2      3.54      9.69e- 8  4.79e-25    145.  
 3 mu         0.3      1.11      2.16e- 4  9.12e-18     34.6 
 4 mu         0.4      0.915     1.85e- 2  1.18e-12     10.9 
 5 mu         0.5      1.05      2.43e- 1  9.67e- 9      7.80
 6 mu         0.6      1.15      8.15e- 1  6.84e- 7      9.58
 7 mu         0.7      1.16      8.55e- 1  9.55e-11      5.36
 8 mu         0.8      1.10      3.62e- 1  2.52e-16      6.74
 9 mu         0.9      1.23      2.22e- 3  4.69e-26     28.8 
10 mu_1       0.1      4.42      7.83e-14  1.31e-36    239.  
11 mu_1       0.2      2.91      2.88e- 7  2.28e-24    130.  
12 mu_1       0.3      0.922     4.50e- 4  2.90e-17     20.7 
13 mu_1       0.4      0.937     2.66e- 2  2.83e-12     10.8 
14 mu_1       0.5      1.07      3.43e- 1  1.85e- 8      7.45
15 mu_1       0.6      1.16      7.56e- 1  1.23e- 7      9.18
16 mu_1       0.7      1.16      7.97e- 1  1.47e-11      5.10
17 mu_1       0.8      1.09      3.05e- 1  3.40e-17      6.74
18 mu_1       0.9      1.24      1.53e- 3  5.64e-27     29.8 
19 mu_0       0.1      3.27      4.96e-15  6.96e-39    219.  
20 mu_0       0.2      3.70      4.92e- 8  2.72e-26    149.  
21 mu_0       0.3      1.19      1.13e- 4  5.92e-19     40.6 
22 mu_0       0.4      0.900     9.10e- 3  8.97e-14     11.0 
23 mu_0       0.5      1.03      1.47e- 1  8.79e-10      8.42
24 mu_0       0.6      1.14      6.36e- 1  1.49e- 6     10.2 
25 mu_0       0.7      1.18      9.22e- 1  2.84e-10      5.95
26 mu_0       0.8      1.11      5.44e- 1  1.12e-15      6.74
27 mu_0       0.9      1.12      7.70e- 3  4.18e-25     20.6 
[1] "Total run time was 216.804 seconds"
