
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3515"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 5  2  1  4  5  2  2  4  3  4  2  3  2  6  5  3  1  4  3  3  3  1  5  3  5  2 
46 47 48 49 50 
 5  2  3  4  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.01606 0.28474 0.55963 0.95759 6.00000 
[1] "event indicator table: "

   0    1 
2013 1502 
[1] "treatment indicator table: "

   0    1 
1443 2072 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1826
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1689
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 81"
[1] "     Cluster: 85"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 153.652 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.552 0.120 
 2 mu         0.1   0.2 0.622 0.124 
 3 mu         0.1   0.3 0.686 0.135 
 4 mu         0.1   0.4 0.696 0.125 
 5 mu         0.1   0.5 0.720 0.117 
 6 mu         0.2   0.1 0.446 0.0382
 7 mu         0.2   0.2 0.513 0.0336
 8 mu         0.2   0.3 0.561 0.0316
 9 mu         0.2   0.4 0.596 0.0377
10 mu         0.2   0.5 0.625 0.0391
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.928        0.761   0.00225      5.38
 2 mu         0.2      0.932        0.916   0.180        2.49
 3 mu         0.3      0.973        0.973   0.557        1.34
 4 mu         0.4      0.995        0.985   0.720        1.29
 5 mu         0.5      1.00         0.997   0.742        1.33
 6 mu         0.6      1.01         0.996   0.646        1.35
 7 mu         0.7      1.01         1.03    0.690        1.29
 8 mu         0.8      1.00         0.998   0.678        1.38
 9 mu         0.9      0.959        0.959   0.235        1.61
10 mu_1       0.1      0.938        0.864   0.00610      4.94
11 mu_1       0.2      0.937        0.915   0.248        2.08
12 mu_1       0.3      0.979        0.956   0.589        1.34
13 mu_1       0.4      0.997        0.986   0.723        1.29
14 mu_1       0.5      1.01         1.01    0.752        1.33
15 mu_1       0.6      1.01         1.00    0.644        1.34
16 mu_1       0.7      1.02         1.03    0.688        1.27
17 mu_1       0.8      1.00         0.987   0.675        1.39
18 mu_1       0.9      0.959        0.948   0.217        1.61
19 mu_0       0.1      0.927        0.768   0.00182      5.43
20 mu_0       0.2      0.931        0.907   0.155        2.60
21 mu_0       0.3      0.970        0.970   0.515        1.36
22 mu_0       0.4      0.993        0.982   0.719        1.30
23 mu_0       0.5      1.00         0.988   0.727        1.33
24 mu_0       0.6      1.01         1.01    0.648        1.35
25 mu_0       0.7      1.01         1.01    0.693        1.33
26 mu_0       0.8      1.01         0.998   0.689        1.38
27 mu_0       0.9      0.967        0.987   0.290        1.59
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.72      3.56e-12  4.17e-48    115.  
 2 mu         0.2      0.930     2.05e- 6  4.69e-33     21.5 
 3 mu         0.3      0.804     1.71e- 3  2.99e-24      7.67
 4 mu         0.4      0.883     1.11e- 1  5.28e-18      5.39
 5 mu         0.5      1.02      2.95e- 1  3.70e-13      5.07
 6 mu         0.6      1.06      5.53e- 1  2.65e-10      4.44
 7 mu         0.7      1.13      4.50e- 1  2.43e-15      5.22
 8 mu         0.8      0.991     1.50e- 1  1.27e-22      6.31
 9 mu         0.9      0.988     2.04e- 4  2.60e-35     11.6 
10 mu_1       0.1      1.05      2.14e-11  4.17e-47     49.5 
11 mu_1       0.2      0.949     6.35e- 6  2.35e-32     21.5 
12 mu_1       0.3      0.798     3.40e- 3  9.97e-24      6.65
13 mu_1       0.4      0.909     1.17e- 1  1.32e-17      5.13
14 mu_1       0.5      1.03      3.30e- 1  7.40e-13      5.07
15 mu_1       0.6      1.07      6.42e- 1  4.60e-11      4.38
16 mu_1       0.7      1.13      4.25e- 1  3.62e-16      5.42
17 mu_1       0.8      0.988     1.16e- 1  1.65e-23      6.84
18 mu_1       0.9      0.984     1.42e- 4  3.01e-36     11.7 
19 mu_0       0.1      1.80      1.45e-12  0           124.  
20 mu_0       0.2      0.925     8.21e- 7  0            21.5 
21 mu_0       0.3      0.807     9.84e- 4  0             8.76
22 mu_0       0.4      0.866     7.33e- 2  0             5.76
23 mu_0       0.5      1.02      1.86e- 1  0             5.07
24 mu_0       0.6      1.05      6.00e- 1  0             4.53
25 mu_0       0.7      1.14      3.94e- 1  0             5.27
26 mu_0       0.8      1.00      1.77e- 1  0             4.33
27 mu_0       0.9      1.02      7.66e- 4  0            13.0 
[1] "Total run time was 158.533 seconds"
