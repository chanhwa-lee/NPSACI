
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3466"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 35 36 37 38 39 40 41 42 43 44 45 46 
 5  3  5  6  4  3  3  1  3  2  3  1  4  2  5  2  5  4  2  2  4  3  6  3  4  3 
47 48 49 50 
 2  5  2  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02604 0.32161 0.59557 1.00000 5.00000 
[1] "event indicator table: "

   0    1 
2030 1436 
[1] "treatment indicator table: "

   0    1 
1317 2149 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1777
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1689
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 45"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 259.963 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.380 0.161 
 2 mu         0.1   0.2 0.460 0.134 
 3 mu         0.1   0.3 0.538 0.145 
 4 mu         0.1   0.4 0.563 0.134 
 5 mu         0.1   0.5 0.645 0.164 
 6 mu         0.2   0.1 0.424 0.117 
 7 mu         0.2   0.2 0.517 0.0975
 8 mu         0.2   0.3 0.600 0.106 
 9 mu         0.2   0.4 0.625 0.0977
10 mu         0.2   0.5 0.709 0.119 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.690        0.475 0.0000000467      4.90
 2 mu         0.2      0.941        0.882 0.00123           2.82
 3 mu         0.3      0.985        0.991 0.0982            1.96
 4 mu         0.4      1.00         1.00  0.523             1.59
 5 mu         0.5      0.995        1.00  0.727             1.41
 6 mu         0.6      0.990        0.990 0.704             1.28
 7 mu         0.7      1.01         1.01  0.714             1.37
 8 mu         0.8      1.03         1.04  0.576             1.39
 9 mu         0.9      1.01         1.02  0.349             1.96
10 mu_1       0.1      0.778        0.650 0.000000198       4.30
11 mu_1       0.2      0.961        0.904 0.00262           2.58
12 mu_1       0.3      0.991        1.01  0.142             2.06
13 mu_1       0.4      1.00         0.997 0.578             1.55
14 mu_1       0.5      0.992        1.00  0.724             1.38
15 mu_1       0.6      0.992        0.991 0.688             1.30
16 mu_1       0.7      1.01         1.01  0.696             1.35
17 mu_1       0.8      1.03         1.04  0.578             1.41
18 mu_1       0.9      1.01         1.01  0.329             2.01
19 mu_0       0.1      0.680        0.453 0.0000000299      5.12
20 mu_0       0.2      0.936        0.870 0.000884          2.94
21 mu_0       0.3      0.982        0.986 0.0796            1.92
22 mu_0       0.4      1.00         0.988 0.486             1.62
23 mu_0       0.5      0.997        1.01  0.729             1.45
24 mu_0       0.6      0.988        0.992 0.698             1.27
25 mu_0       0.7      1.00         0.995 0.713             1.40
26 mu_0       0.8      1.02         1.04  0.565             1.32
27 mu_0       0.9      1.03         1.03  0.452             1.69
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.05      2.73e-13  9.58e-36     95.2 
 2 mu         0.2      3.11      1.94e- 7  4.68e-23    195.  
 3 mu         0.3      2.41      1.85e- 4  8.95e-16     40.6 
 4 mu         0.4      1.79      2.58e- 2  7.23e-11     18.8 
 5 mu         0.5      1.14      2.76e- 1  1.49e- 7      8.24
 6 mu         0.6      0.904     5.51e- 1  5.81e- 7      3.35
 7 mu         0.7      1.00      8.20e- 1  1.50e-11      3.71
 8 mu         0.8      1.28      2.17e- 1  2.64e-18      8.01
 9 mu         0.9      1.53      9.53e- 4  3.08e-30     25.5 
10 mu_1       0.1      1.79      1.93e-12  8.58e-35    155.  
11 mu_1       0.2      3.08      7.64e- 7  2.10e-22    159.  
12 mu_1       0.3      2.37      3.78e- 4  2.67e-15     42.3 
13 mu_1       0.4      1.68      4.40e- 2  1.76e-10     14.7 
14 mu_1       0.5      1.06      3.89e- 1  2.89e- 7      7.53
15 mu_1       0.6      0.899     5.67e- 1  1.58e- 7      3.55
16 mu_1       0.7      1.02      7.76e- 1  3.51e-12      3.89
17 mu_1       0.8      1.30      1.77e- 1  5.39e-19      8.39
18 mu_1       0.9      1.52      7.22e- 4  5.59e-31     27.6 
19 mu_0       0.1      0.971     8.94e-14  1.11e-36     88.5 
20 mu_0       0.2      3.11      5.12e- 8  6.09e-24    204.  
21 mu_0       0.3      2.43      8.90e- 5  1.33e-16     39.9 
22 mu_0       0.4      1.86      1.53e- 2  3.35e-12     21.5 
23 mu_0       0.5      1.23      2.85e- 1  8.25e- 9      8.95
24 mu_0       0.6      0.912     4.81e- 1  1.22e- 6      3.19
25 mu_0       0.7      0.955     5.75e- 1  4.20e-11      3.59
26 mu_0       0.8      1.19      3.42e- 1  1.10e-17      6.49
27 mu_0       0.9      1.64      3.03e- 3  2.58e-29     18.2 
[1] "Total run time was 264.518 seconds"
