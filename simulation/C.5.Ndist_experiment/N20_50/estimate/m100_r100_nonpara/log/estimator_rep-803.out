
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3465"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 1  5  3  4  5  3  2  3  2  3  2  3  5  5  8  4  2  5  2  1  2  1  3  5  2  5 
46 47 48 49 50 
 4  1  3  1  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.05752 0.39862 0.63764 1.00000 5.00000 
[1] "event indicator table: "

   0    1 
2066 1399 
[1] "treatment indicator table: "

   0    1 
1155 2310 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1718
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 31"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 85"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1747
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 292.709 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.499 0.131
 2 mu         0.1   0.2 0.680 0.174
 3 mu         0.1   0.3 0.741 0.200
 4 mu         0.1   0.4 0.847 0.221
 5 mu         0.1   0.5 0.876 0.233
 6 mu         0.2   0.1 0.439 0.109
 7 mu         0.2   0.2 0.632 0.158
 8 mu         0.2   0.3 0.737 0.192
 9 mu         0.2   0.4 0.823 0.214
10 mu         0.2   0.5 0.866 0.233
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1      1.23         0.225 0.0000000109      27.3 
 2 mu         0.2      1.45         0.828 0.000407          51.2 
 3 mu         0.3      1.35         0.936 0.0217            41.4 
 4 mu         0.4      1.04         1.00  0.184              4.58
 5 mu         0.5      1.01         0.991 0.561              2.68
 6 mu         0.6      0.992        0.992 0.690              1.38
 7 mu         0.7      1.01         0.987 0.498              1.44
 8 mu         0.8      1.05         1.02  0.691              1.74
 9 mu         0.9      1.05         1.03  0.0953             2.76
10 mu_1       0.1      1.11         0.425 0.0000000458      15.3 
11 mu_1       0.2      1.52         0.866 0.000964          61.2 
12 mu_1       0.3      1.27         0.985 0.0352            33.0 
13 mu_1       0.4      1.03         0.982 0.238              3.11
14 mu_1       0.5      1.01         0.979 0.566              2.46
15 mu_1       0.6      0.992        0.994 0.680              1.27
16 mu_1       0.7      1.01         1.00  0.485              1.47
17 mu_1       0.8      1.05         1.03  0.677              1.75
18 mu_1       0.9      1.05         1.02  0.0867             2.73
19 mu_0       0.1      1.24         0.201 0.00000000702     28.6 
20 mu_0       0.2      1.44         0.800 0.000268          48.7 
21 mu_0       0.3      1.38         0.948 0.0159            45.0 
22 mu_0       0.4      1.05         1.00  0.148              5.74
23 mu_0       0.5      1.01         0.986 0.524              2.90
24 mu_0       0.6      0.993        0.984 0.706              1.56
25 mu_0       0.7      1.00         0.996 0.529              1.36
26 mu_0       0.8      1.03         1.01  0.684              1.76
27 mu_0       0.9      1.07         1.04  0.173              2.98
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.0789     6.37e-14  9.21e-41      3.68
 2 mu         0.2     1.13       6.12e- 8  9.10e-27     41.3 
 3 mu         0.3     2.49       8.95e- 5  1.15e-18     96.7 
 4 mu         0.4     3.65       9.75e- 3  5.40e-13    249.  
 5 mu         0.5     2.78       1.64e- 1  1.12e- 8    147.  
 6 mu         0.6     1.56       8.23e- 1  3.02e- 5     21.8 
 7 mu         0.7     1.24       9.70e- 1  2.91e- 8      6.10
 8 mu         0.8     1.27       4.43e- 1  1.50e-13     12.0 
 9 mu         0.9     2.44       3.62e- 3  2.02e-23     89.3 
10 mu_1       0.1     0.184      4.22e-13  8.65e-40      7.57
11 mu_1       0.2     1.49       1.99e- 7  4.28e-26     58.1 
12 mu_1       0.3     2.80       2.11e- 4  3.61e-18    133.  
13 mu_1       0.4     3.70       1.79e- 2  1.27e-12    256.  
14 mu_1       0.5     2.53       2.11e- 1  2.11e- 8    121.  
15 mu_1       0.6     1.47       8.69e- 1  2.46e- 5     15.0 
16 mu_1       0.7     1.23       9.02e- 1  9.90e- 9      5.93
17 mu_1       0.8     1.29       4.32e- 1  5.09e-14     12.9 
18 mu_1       0.9     2.47       2.72e- 3  6.09e-24     93.2 
19 mu_0       0.1     0.0673     2.39e-14  0             3.24
20 mu_0       0.2     1.04       2.50e- 8  0            37.1 
21 mu_0       0.3     2.36       3.77e- 5  0            81.2 
22 mu_0       0.4     3.61       4.66e- 3  0           244.  
23 mu_0       0.5     3.02       1.04e- 1  0           173.  
24 mu_0       0.6     1.69       6.10e- 1  0            32.1 
25 mu_0       0.7     1.27       8.26e- 1  0             6.51
26 mu_0       0.8     1.18       6.54e- 1  0             8.35
27 mu_0       0.9     2.14       1.22e- 2  0            53.6 
[1] "Total run time was 297.085 seconds"
