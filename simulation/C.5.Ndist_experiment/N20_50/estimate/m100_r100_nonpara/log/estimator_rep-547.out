
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3378"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 4  5  4  3  5  3  3  2  3  4  4  1  3  4  5  6  3  2  2  4  2  1  5  7  2  2 
46 47 48 49 50 
 3  1  3  3  1 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02606 0.35510 0.61664 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
2060 1318 
[1] "treatment indicator table: "

   0    1 
1250 2128 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1592
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1786
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 243.079 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.571 0.0902
 2 mu         0.1   0.2 0.638 0.107 
 3 mu         0.1   0.3 0.696 0.131 
 4 mu         0.1   0.4 0.738 0.115 
 5 mu         0.1   0.5 0.744 0.122 
 6 mu         0.2   0.1 0.472 0.0504
 7 mu         0.2   0.2 0.553 0.0570
 8 mu         0.2   0.3 0.608 0.0596
 9 mu         0.2   0.4 0.633 0.0523
10 mu         0.2   0.5 0.662 0.0501
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.19         0.797   0.00631      9.64
 2 mu         0.2      1.03         0.990   0.255        2.55
 3 mu         0.3      0.973        0.967   0.351        1.84
 4 mu         0.4      0.998        0.965   0.376        1.62
 5 mu         0.5      0.990        0.975   0.625        1.39
 6 mu         0.6      0.981        0.974   0.674        1.35
 7 mu         0.7      0.994        0.981   0.654        1.58
 8 mu         0.8      1.01         1.01    0.454        1.47
 9 mu         0.9      0.995        0.977   0.352        1.80
10 mu_1       0.1      1.16         1.00    0.0165       8.19
11 mu_1       0.2      1.01         0.996   0.177        2.35
12 mu_1       0.3      0.973        0.960   0.336        1.68
13 mu_1       0.4      1.00         0.965   0.365        1.58
14 mu_1       0.5      0.987        0.978   0.676        1.36
15 mu_1       0.6      0.982        0.975   0.659        1.40
16 mu_1       0.7      0.996        0.978   0.658        1.56
17 mu_1       0.8      1.01         1.02    0.449        1.50
18 mu_1       0.9      0.994        0.973   0.350        1.81
19 mu_0       0.1      1.19         0.766   0.00518      9.80
20 mu_0       0.2      1.04         1.01    0.274        2.60
21 mu_0       0.3      0.973        0.983   0.358        1.92
22 mu_0       0.4      0.996        0.964   0.382        1.64
23 mu_0       0.5      0.992        0.982   0.575        1.43
24 mu_0       0.6      0.979        0.966   0.696        1.33
25 mu_0       0.7      0.989        0.981   0.646        1.63
26 mu_0       0.8      1.01         0.981   0.475        1.51
27 mu_0       0.9      1.01         0.994   0.365        1.81
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.675     2.01e-13  1.79e-34     40.6 
 2 mu         0.2      0.962     4.94e- 7  2.19e-23     33.1 
 3 mu         0.3      1.09      7.41e- 4  3.19e-17     20.4 
 4 mu         0.4      1.02      4.80e- 2  7.53e-13     11.1 
 5 mu         0.5      1.18      3.08e- 1  1.86e- 9     16.5 
 6 mu         0.6      1.51      5.53e- 1  1.02e- 6     12.3 
 7 mu         0.7      1.55      6.68e- 1  7.82e-10     15.4 
 8 mu         0.8      1.16      2.50e- 1  7.34e-15      7.58
 9 mu         0.9      0.720     3.14e- 3  1.95e-25      9.78
10 mu_1       0.1      0.708     1.55e-12  1.53e-33     29.0 
11 mu_1       0.2      1.04      1.46e- 6  1.10e-22     37.9 
12 mu_1       0.3      1.07      1.55e- 3  1.06e-16     15.6 
13 mu_1       0.4      1.01      7.66e- 2  1.88e-12     10.9 
14 mu_1       0.5      1.21      3.55e- 1  3.71e- 9     17.3 
15 mu_1       0.6      1.55      5.62e- 1  1.21e- 7     13.7 
16 mu_1       0.7      1.54      6.96e- 1  7.98e-11     14.7 
17 mu_1       0.8      1.14      2.11e- 1  2.10e-15      7.66
18 mu_1       0.9      0.703     2.13e- 3  4.97e-26      9.60
19 mu_0       0.1      0.671     7.97e-14  0            41.9 
20 mu_0       0.2      0.943     2.51e- 7  0            31.9 
21 mu_0       0.3      1.09      3.39e- 4  0            22.5 
22 mu_0       0.4      1.03      2.86e- 2  0            11.2 
23 mu_0       0.5      1.14      2.31e- 1  0            15.7 
24 mu_0       0.6      1.45      4.76e- 1  0            13.0 
25 mu_0       0.7      1.58      5.51e- 1  0            17.2 
26 mu_0       0.8      1.26      4.15e- 1  0             7.29
27 mu_0       0.9      0.873     5.17e- 3  0            11.4 
[1] "Total run time was 248.467 seconds"
