
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3634"
[1] "cluster size dist'n: "

20 21 22 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 
 3  5  3  2  3  3  1  2  1  3  5  9  2  2  2  2  3  4  1  7  4  2  3  4  3  2 
47 49 50 
 8  7  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.05441 0.39404 0.65446 1.00000 6.66250 
[1] "event indicator table: "

   0    1 
2188 1446 
[1] "treatment indicator table: "

   0    1 
1307 2327 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1791
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1843
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 228.611 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.462 0.111 
 2 mu         0.1   0.2 0.576 0.126 
 3 mu         0.1   0.3 0.731 0.144 
 4 mu         0.1   0.4 0.773 0.148 
 5 mu         0.1   0.5 0.808 0.157 
 6 mu         0.2   0.1 0.310 0.0537
 7 mu         0.2   0.2 0.409 0.0735
 8 mu         0.2   0.3 0.532 0.0850
 9 mu         0.2   0.4 0.572 0.0836
10 mu         0.2   0.5 0.603 0.0922
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.28         0.323 0.000111      11.3 
 2 mu         0.2      1.07         1.02  0.0692         3.72
 3 mu         0.3      1.03         1.03  0.516          1.88
 4 mu         0.4      1.02         1.03  0.457          1.46
 5 mu         0.5      0.995        1.01  0.508          1.32
 6 mu         0.6      0.985        0.970 0.742          1.28
 7 mu         0.7      0.992        0.984 0.783          1.25
 8 mu         0.8      1.01         1.02  0.642          1.27
 9 mu         0.9      0.995        0.985 0.560          1.89
10 mu_1       0.1      1.20         0.601 0.000357       8.31
11 mu_1       0.2      1.05         0.998 0.115          2.75
12 mu_1       0.3      1.03         1.04  0.440          1.88
13 mu_1       0.4      1.02         1.04  0.459          1.39
14 mu_1       0.5      0.992        0.999 0.531          1.32
15 mu_1       0.6      0.985        0.979 0.750          1.29
16 mu_1       0.7      0.993        0.983 0.794          1.26
17 mu_1       0.8      1.01         1.02  0.635          1.28
18 mu_1       0.9      0.995        0.975 0.551          1.92
19 mu_0       0.1      1.29         0.298 0.0000838     11.6 
20 mu_0       0.2      1.08         1.02  0.0577         3.96
21 mu_0       0.3      1.03         1.02  0.491          1.89
22 mu_0       0.4      1.03         1.03  0.456          1.52
23 mu_0       0.5      0.999        1.02  0.484          1.34
24 mu_0       0.6      0.987        0.969 0.731          1.28
25 mu_0       0.7      0.989        0.984 0.757          1.23
26 mu_0       0.8      1.00         1.01  0.670          1.27
27 mu_0       0.9      0.997        0.993 0.572          1.66
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.602     1.59e-12  1.06e-38     59.5 
 2 mu         0.2      1.13      1.19e- 6  2.33e-25     86.7 
 3 mu         0.3      1.09      7.35e- 4  6.57e-18     16.7 
 4 mu         0.4      1.34      5.13e- 2  5.60e-13     13.2 
 5 mu         0.5      1.28      5.84e- 1  3.51e- 9      6.59
 6 mu         0.6      1.12      9.68e- 1  6.90e- 7      4.44
 7 mu         0.7      0.924     3.42e- 1  3.63e-11      5.79
 8 mu         0.8      0.965     1.28e- 1  1.88e-17      4.64
 9 mu         0.9      1.36      1.77e- 4  1.56e-28     14.1 
10 mu_1       0.1      0.944     9.41e-12  9.76e-38     92.6 
11 mu_1       0.2      1.07      3.73e- 6  1.07e-24     67.5 
12 mu_1       0.3      1.18      1.56e- 3  2.14e-17     15.4 
13 mu_1       0.4      1.36      7.82e- 2  1.36e-12     11.5 
14 mu_1       0.5      1.26      6.41e- 1  6.85e- 9      5.89
15 mu_1       0.6      1.09      7.88e- 1  1.79e- 7      4.56
16 mu_1       0.7      0.914     4.14e- 1  8.07e-12      5.85
17 mu_1       0.8      0.973     9.74e- 2  3.66e-18      4.44
18 mu_1       0.9      1.36      1.19e- 4  2.70e-29     14.4 
19 mu_0       0.1      0.563     7.20e-13  9.64e-40     55.9 
20 mu_0       0.2      1.14      5.36e- 7  2.07e-26     91.6 
21 mu_0       0.3      1.05      3.52e- 4  2.29e-19     17.3 
22 mu_0       0.4      1.33      3.24e- 2  2.27e-14     14.3 
23 mu_0       0.5      1.30      4.37e- 1  1.71e-10      7.66
24 mu_0       0.6      1.15      8.77e- 1  2.52e- 7      4.76
25 mu_0       0.7      0.950     4.11e- 1  1.02e-10      5.65
26 mu_0       0.8      0.936     1.88e- 1  7.94e-17      5.59
27 mu_0       0.9      1.29      7.04e- 4  1.32e-27     14.3 
[1] "Total run time was 232.087 seconds"
