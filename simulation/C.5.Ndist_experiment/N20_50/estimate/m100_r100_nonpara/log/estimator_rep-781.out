
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3411"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 6  2  3  3  5  1  3  5  2  5  2  4  4  3  4  5  4  2  2  5  3  2  4  2  5  1 
47 48 49 
 6  2  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03718 0.34537 0.58338 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
2010 1401 
[1] "treatment indicator table: "

   0    1 
1278 2133 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1852
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1559
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 172.757 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.392 0.110 
 2 mu         0.1   0.2 0.496 0.0801
 3 mu         0.1   0.3 0.573 0.0857
 4 mu         0.1   0.4 0.709 0.102 
 5 mu         0.1   0.5 0.749 0.0924
 6 mu         0.2   0.1 0.330 0.0683
 7 mu         0.2   0.2 0.401 0.0449
 8 mu         0.2   0.3 0.469 0.0461
 9 mu         0.2   0.4 0.576 0.0638
10 mu         0.2   0.5 0.613 0.0499
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.17         0.906  0.000175      9.26
 2 mu         0.2      1.04         1.02   0.0446        2.55
 3 mu         0.3      1.01         0.995  0.371         2.35
 4 mu         0.4      1.00         0.996  0.637         1.95
 5 mu         0.5      1.01         1.00   0.671         1.58
 6 mu         0.6      1.01         0.998  0.740         1.29
 7 mu         0.7      0.997        0.999  0.642         1.56
 8 mu         0.8      1.00         0.995  0.518         1.48
 9 mu         0.9      1.01         0.979  0.297         1.87
10 mu_1       0.1      1.17         1.08   0.000607      8.47
11 mu_1       0.2      1.03         1.00   0.0799        2.26
12 mu_1       0.3      1.00         1.00   0.469         2.37
13 mu_1       0.4      1.01         1.00   0.660         1.88
14 mu_1       0.5      1.01         0.992  0.666         1.54
15 mu_1       0.6      1.00         1.00   0.733         1.27
16 mu_1       0.7      0.996        0.997  0.644         1.58
17 mu_1       0.8      1.00         1.00   0.516         1.47
18 mu_1       0.9      1.01         0.968  0.278         1.88
19 mu_0       0.1      1.17         0.895  0.000127      9.35
20 mu_0       0.2      1.05         1.00   0.0357        2.74
21 mu_0       0.3      1.01         0.999  0.329         2.35
22 mu_0       0.4      1.00         0.991  0.612         1.99
23 mu_0       0.5      1.01         1.00   0.676         1.63
24 mu_0       0.6      1.01         0.989  0.741         1.33
25 mu_0       0.7      0.998        1.00   0.638         1.50
26 mu_0       0.8      0.997        1.00   0.529         1.56
27 mu_0       0.9      1.01         1.01   0.440         1.76
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.315     7.11e-12  5.23e-37     17.9 
 2 mu         0.2      1.18      1.75e- 6  1.82e-24     47.8 
 3 mu         0.3      1.11      1.60e- 3  3.46e-17     14.8 
 4 mu         0.4      1.05      6.76e- 2  4.50e-12      8.95
 5 mu         0.5      1.04      2.89e- 1  2.37e- 8      7.76
 6 mu         0.6      1.11      6.54e- 1  7.36e- 6      5.03
 7 mu         0.7      1.04      7.32e- 1  1.43e- 9      4.75
 8 mu         0.8      1.14      2.56e- 1  4.28e-15      8.80
 9 mu         0.9      2.06      1.32e- 3  6.39e-25     77.3 
10 mu_1       0.1      0.589     5.02e-11  4.99e-36     32.6 
11 mu_1       0.2      1.23      5.93e- 6  8.67e-24     43.4 
12 mu_1       0.3      1.09      3.17e- 3  1.10e-16     12.7 
13 mu_1       0.4      1.05      1.08e- 1  1.07e-11      8.64
14 mu_1       0.5      1.06      3.75e- 1  4.62e- 8      7.76
15 mu_1       0.6      1.12      7.31e- 1  2.34e- 6      5.42
16 mu_1       0.7      1.03      6.57e- 1  3.88e-10      4.81
17 mu_1       0.8      1.16      2.17e- 1  1.02e-15      9.40
18 mu_1       0.9      2.12      9.59e- 4  1.35e-25     82.0 
19 mu_0       0.1      0.284     2.45e-12  2.64e-38     16.3 
20 mu_0       0.2      1.17      6.98e- 7  1.03e-25     48.8 
21 mu_0       0.3      1.12      8.74e- 4  2.25e-18     17.3 
22 mu_0       0.4      1.05      4.06e- 2  2.52e-13      9.15
23 mu_0       0.5      1.03      3.21e- 1  1.21e- 9      7.76
24 mu_0       0.6      1.11      5.23e- 1  1.24e- 6      5.48
25 mu_0       0.7      1.06      8.34e- 1  3.85e- 9      5.57
26 mu_0       0.8      1.08      3.67e- 1  1.73e-14      6.91
27 mu_0       0.9      1.53      4.83e- 3  5.17e-24     35.1 
[1] "Total run time was 187.425 seconds"
