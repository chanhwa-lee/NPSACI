
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3416"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 44 45 46 
 5  4  5  2  2  6  5  2  5  3  2  2  4  4  5  1  3  3  1  4  1  2  2  3  6  6 
47 48 49 50 
 2  5  1  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03344 0.36058 0.64425 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
2065 1351 
[1] "treatment indicator table: "

   0    1 
1258 2158 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1699
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 89"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1717
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 217.14 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.520 0.0909
 2 mu         0.1   0.2 0.694 0.156 
 3 mu         0.1   0.3 0.702 0.128 
 4 mu         0.1   0.4 0.728 0.108 
 5 mu         0.1   0.5 0.798 0.135 
 6 mu         0.2   0.1 0.418 0.0399
 7 mu         0.2   0.2 0.507 0.0528
 8 mu         0.2   0.3 0.558 0.0499
 9 mu         0.2   0.4 0.594 0.0426
10 mu         0.2   0.5 0.622 0.0474
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.04         0.964    0.0228      2.86
 2 mu         0.2      1.01         0.988    0.273       1.95
 3 mu         0.3      1.00         0.997    0.598       1.56
 4 mu         0.4      1.00         1.00     0.646       1.37
 5 mu         0.5      0.994        0.991    0.668       1.38
 6 mu         0.6      0.994        0.993    0.734       1.28
 7 mu         0.7      0.993        0.982    0.603       1.27
 8 mu         0.8      1.01         1.02     0.598       1.28
 9 mu         0.9      0.999        0.988    0.548       1.47
10 mu_1       0.1      1.02         0.977    0.0655      2.69
11 mu_1       0.2      1.00         1.01     0.404       1.88
12 mu_1       0.3      1.00         1.01     0.596       1.50
13 mu_1       0.4      1.00         1.01     0.629       1.33
14 mu_1       0.5      0.994        0.989    0.683       1.39
15 mu_1       0.6      0.994        0.991    0.724       1.25
16 mu_1       0.7      0.994        0.987    0.592       1.29
17 mu_1       0.8      1.01         1.01     0.588       1.28
18 mu_1       0.9      0.998        0.989    0.535       1.48
19 mu_0       0.1      1.04         0.965    0.0181      2.94
20 mu_0       0.2      1.01         0.981    0.234       1.97
21 mu_0       0.3      1.00         0.983    0.585       1.62
22 mu_0       0.4      1.00         1.00     0.658       1.40
23 mu_0       0.5      0.994        0.993    0.653       1.37
24 mu_0       0.6      0.995        0.989    0.748       1.34
25 mu_0       0.7      0.991        0.978    0.628       1.25
26 mu_0       0.8      1.01         1.00     0.589       1.32
27 mu_0       0.9      1.01         0.990    0.567       1.47
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.01      4.24e-12  1.93e-41     49.3 
 2 mu         0.2      0.617     7.41e- 7  3.02e-28     10.3 
 3 mu         0.3      0.713     6.29e- 4  1.48e-20      7.59
 4 mu         0.4      0.825     3.25e- 2  3.98e-15      7.80
 5 mu         0.5      0.936     1.96e- 1  6.10e-11      5.00
 6 mu         0.6      1.14      4.47e- 1  5.15e-13      4.05
 7 mu         0.7      1.20      8.70e- 1  2.23e-18      5.67
 8 mu         0.8      1.19      3.05e- 1  5.20e-26      5.33
 9 mu         0.9      1.17      1.83e- 3  3.74e-39     11.2 
10 mu_1       0.1      0.577     2.98e-11  1.89e-40     23.5 
11 mu_1       0.2      0.623     2.48e- 6  1.48e-27     11.1 
12 mu_1       0.3      0.728     1.37e- 3  4.82e-20      6.52
13 mu_1       0.4      0.852     5.32e- 2  9.74e-15      7.37
14 mu_1       0.5      0.969     2.61e- 1  1.19e-10      5.33
15 mu_1       0.6      1.15      5.73e- 1  3.73e-14      4.19
16 mu_1       0.7      1.21      8.19e- 1  1.38e-19      5.74
17 mu_1       0.8      1.19      2.65e- 1  2.83e-27      5.58
18 mu_1       0.9      1.17      1.38e- 3  1.81e-40     11.6 
19 mu_0       0.1      1.06      1.40e-12  0            52.1 
20 mu_0       0.2      0.615     3.06e- 7  0            11.1 
21 mu_0       0.3      0.707     2.77e- 4  0             8.34
22 mu_0       0.4      0.807     1.86e- 2  0             8.09
23 mu_0       0.5      0.904     1.76e- 1  0             4.74
24 mu_0       0.6      1.11      4.78e- 1  0             4.28
25 mu_0       0.7      1.20      6.85e- 1  0             5.52
26 mu_0       0.8      1.18      3.10e- 1  0             5.25
27 mu_0       0.9      1.17      1.75e- 3  0             8.63
[1] "Total run time was 220.071 seconds"
