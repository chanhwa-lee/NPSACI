
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3380"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 5  6  3  8  2  2  1  2  2  4  5  3  3  2  6  2  2  1  6  3  6  3  2  4  1  3 
46 47 48 49 50 
 2  3  4  2  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03234 0.33461 0.58959 1.00000 5.00000 
[1] "event indicator table: "

   0    1 
1973 1407 
[1] "treatment indicator table: "

   0    1 
1221 2159 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1713
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 21"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1667
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 97"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 230.275 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.268 0.0479
 2 mu         0.1   0.2 0.278 0.0462
 3 mu         0.1   0.3 0.286 0.0422
 4 mu         0.1   0.4 0.346 0.0458
 5 mu         0.1   0.5 0.373 0.0492
 6 mu         0.2   0.1 0.308 0.0372
 7 mu         0.2   0.2 0.364 0.0364
 8 mu         0.2   0.3 0.383 0.0317
 9 mu         0.2   0.4 0.447 0.0361
10 mu         0.2   0.5 0.487 0.0397
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.559        0.191 0.0000162      3.09
 2 mu         0.2      0.790        0.737 0.0164         2.87
 3 mu         0.3      0.964        0.930 0.193          2.54
 4 mu         0.4      1.01         1.01  0.566          1.64
 5 mu         0.5      1.01         0.994 0.687          1.38
 6 mu         0.6      0.986        0.984 0.791          1.20
 7 mu         0.7      1.00         0.991 0.680          1.23
 8 mu         0.8      1.02         1.02  0.578          1.41
 9 mu         0.9      1.01         0.992 0.427          2.29
10 mu_1       0.1      0.643        0.383 0.0000542      4.00
11 mu_1       0.2      0.847        0.782 0.0278         3.23
12 mu_1       0.3      0.983        0.953 0.237          2.33
13 mu_1       0.4      1.02         1.03  0.626          1.54
14 mu_1       0.5      1.01         0.994 0.702          1.38
15 mu_1       0.6      0.985        0.987 0.786          1.22
16 mu_1       0.7      1.00         0.996 0.677          1.24
17 mu_1       0.8      1.02         1.03  0.582          1.44
18 mu_1       0.9      1.01         0.984 0.407          2.34
19 mu_0       0.1      0.550        0.169 0.0000120      3.19
20 mu_0       0.2      0.775        0.717 0.0136         2.96
21 mu_0       0.3      0.956        0.925 0.174          2.62
22 mu_0       0.4      1.01         1.01  0.526          1.70
23 mu_0       0.5      1.01         0.991 0.671          1.39
24 mu_0       0.6      0.986        0.990 0.768          1.21
25 mu_0       0.7      0.995        0.992 0.687          1.23
26 mu_0       0.8      1.02         1.01  0.562          1.30
27 mu_0       0.9      1.02         1.00  0.608          1.91
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.651     1.66e-12  1.01e-35     26.7 
 2 mu         0.2      2.55      3.90e- 7  4.93e-23     82.9 
 3 mu         0.3      2.10      7.01e- 4  9.44e-16     42.7 
 4 mu         0.4      1.63      6.90e- 2  1.03e-10     16.3 
 5 mu         0.5      1.30      6.43e- 1  6.08e- 7     11.8 
 6 mu         0.6      1.29      5.78e- 1  1.58e- 5      6.68
 7 mu         0.7      1.07      7.90e- 1  2.30e- 9      5.19
 8 mu         0.8      1.28      2.56e- 1  4.60e-15      7.72
 9 mu         0.9      1.71      1.01e- 3  3.44e-25     18.4 
10 mu_1       0.1      1.25      9.63e-12  9.05e-35     46.4 
11 mu_1       0.2      2.69      1.44e- 6  2.21e-22     77.2 
12 mu_1       0.3      1.95      1.45e- 3  2.82e-15     33.7 
13 mu_1       0.4      1.53      1.10e- 1  2.30e-10     14.0 
14 mu_1       0.5      1.27      6.49e- 1  1.09e- 6     11.6 
15 mu_1       0.6      1.28      4.81e- 1  4.91e- 6      6.22
16 mu_1       0.7      1.06      7.15e- 1  6.12e-10      5.44
17 mu_1       0.8      1.32      2.01e- 1  1.07e-15      7.96
18 mu_1       0.9      1.71      6.89e- 4  7.11e-26     19.2 
19 mu_0       0.1      0.585     7.80e-13  1.17e-36     24.5 
20 mu_0       0.2      2.51      1.27e- 7  6.42e-24     84.4 
21 mu_0       0.3      2.17      3.76e- 4  1.40e-16     46.5 
22 mu_0       0.4      1.69      3.81e- 2  1.79e-11     17.8 
23 mu_0       0.5      1.33      4.91e- 1  1.27e- 7     12.1 
24 mu_0       0.6      1.30      6.30e- 1  3.22e- 5      7.36
25 mu_0       0.7      1.10      7.64e- 1  6.25e- 9      5.78
26 mu_0       0.8      1.13      4.40e- 1  1.87e-14      6.75
27 mu_0       0.9      1.72      4.06e- 3  2.80e-24     19.2 
[1] "Total run time was 233.54 seconds"
