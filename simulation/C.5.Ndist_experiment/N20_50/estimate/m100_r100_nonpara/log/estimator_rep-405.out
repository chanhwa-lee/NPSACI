
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3487"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 2  3  4  2  4  3  2  2  3  6  1  5  5  1  3  8  3 10  1  2  1  3  1  5  2  2 
46 47 48 49 50 
 5  4  1  3  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03323 0.34125 0.60177 1.00000 5.49678 
[1] "event indicator table: "

   0    1 
2134 1353 
[1] "treatment indicator table: "

   0    1 
1205 2282 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1719
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 73"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1768
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 252.635 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.421 0.0888
 2 mu         0.1   0.2 0.533 0.101 
 3 mu         0.1   0.3 0.683 0.128 
 4 mu         0.1   0.4 0.757 0.145 
 5 mu         0.1   0.5 0.792 0.143 
 6 mu         0.2   0.1 0.396 0.0517
 7 mu         0.2   0.2 0.494 0.0540
 8 mu         0.2   0.3 0.629 0.0772
 9 mu         0.2   0.4 0.727 0.105 
10 mu         0.2   0.5 0.751 0.0921
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.11         0.267 0.0000632     10.4 
 2 mu         0.2      1.10         1.00  0.0254         4.17
 3 mu         0.3      1.03         0.954 0.258          2.68
 4 mu         0.4      1.01         0.984 0.525          2.04
 5 mu         0.5      1.01         1.00  0.559          1.62
 6 mu         0.6      1.01         1.00  0.685          1.51
 7 mu         0.7      0.998        0.991 0.709          1.40
 8 mu         0.8      1.00         1.01  0.680          1.39
 9 mu         0.9      0.975        0.935 0.420          1.88
10 mu_1       0.1      1.04         0.494 0.000197       5.58
11 mu_1       0.2      1.08         0.950 0.0493         3.66
12 mu_1       0.3      1.02         0.958 0.338          2.68
13 mu_1       0.4      1.01         0.990 0.529          1.96
14 mu_1       0.5      1.01         1.00  0.556          1.57
15 mu_1       0.6      1.01         1.00  0.683          1.49
16 mu_1       0.7      0.998        0.992 0.703          1.42
17 mu_1       0.8      1.00         1.00  0.662          1.43
18 mu_1       0.9      0.974        0.929 0.423          1.91
19 mu_0       0.1      1.12         0.240 0.0000484     10.9 
20 mu_0       0.2      1.10         1.00  0.0194         4.30
21 mu_0       0.3      1.03         0.970 0.219          2.68
22 mu_0       0.4      1.01         0.980 0.495          2.10
23 mu_0       0.5      1.01         1.01  0.562          1.68
24 mu_0       0.6      1.01         1.00  0.687          1.53
25 mu_0       0.7      0.998        0.991 0.723          1.39
26 mu_0       0.8      1.00         0.998 0.671          1.40
27 mu_0       0.9      0.988        0.971 0.400          1.76
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       4.08     1.76e-12  1.11e-38     405. 
 2 mu         0.2       1.38     3.32e- 7  5.37e-26      67.4
 3 mu         0.3       1.76     4.11e- 4  1.17e-18      62.9
 4 mu         0.4       1.91     4.29e- 2  1.77e-13      60.3
 5 mu         0.5       1.63     6.43e- 1  1.74e- 9      37.6
 6 mu         0.6       1.52     7.75e- 1  2.94e- 6      24.4
 7 mu         0.7       1.34     7.54e- 1  2.61e- 9      20.6
 8 mu         0.8       1.45     2.68e- 1  5.99e-14      13.3
 9 mu         0.9       1.65     1.08e- 3  5.65e-22      18.3
10 mu_1       0.1       2.86     1.22e-11  1.06e-37     280. 
11 mu_1       0.2       1.17     1.06e- 6  2.62e-25      62.8
12 mu_1       0.3       1.85     9.05e- 4  3.81e-18      72.7
13 mu_1       0.4       1.90     6.55e- 2  4.33e-13      52.3
14 mu_1       0.5       1.63     6.72e- 1  3.39e- 9      38.8
15 mu_1       0.6       1.50     7.19e- 1  5.20e- 7      21.0
16 mu_1       0.7       1.32     8.44e- 1  2.57e-10      21.3
17 mu_1       0.8       1.47     2.66e- 1  5.16e-15      12.0
18 mu_1       0.9       1.65     7.09e- 4  4.33e-23      19.8
19 mu_0       0.1       4.21     5.95e-13  0            419. 
20 mu_0       0.2       1.43     1.49e- 7  0             78.5
21 mu_0       0.3       1.72     2.11e- 4  0             58.7
22 mu_0       0.4       1.92     2.52e- 2  0             65.6
23 mu_0       0.5       1.62     4.95e- 1  0             36.3
24 mu_0       0.6       1.55     8.11e- 1  0             29.6
25 mu_0       0.7       1.38     6.17e- 1  0             19.0
26 mu_0       0.8       1.41     3.49e- 1  0             18.3
27 mu_0       0.9       1.60     3.47e- 3  0             17.4
[1] "Total run time was 256.596 seconds"
