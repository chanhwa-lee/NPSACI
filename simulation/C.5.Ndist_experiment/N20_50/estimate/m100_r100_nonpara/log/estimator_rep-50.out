
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3624"
[1] "cluster size dist'n: "

21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 
 4  4  2  3  2  2  4  1  7  1  2  4  5  1  4  3  3  3  5  2  2  6  3  6  3  3 
47 48 49 50 
 4  3  6  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03051 0.33733 0.60029 1.00000 5.43192 
[1] "event indicator table: "

   0    1 
2105 1519 
[1] "treatment indicator table: "

   0    1 
1423 2201 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1832
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 63"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1792
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 20"
[1] "     Cluster: 25"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 204.88 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.310 0.0696
 2 mu         0.1   0.2 0.427 0.0771
 3 mu         0.1   0.3 0.515 0.0916
 4 mu         0.1   0.4 0.533 0.0958
 5 mu         0.1   0.5 0.577 0.105 
 6 mu         0.2   0.1 0.274 0.0447
 7 mu         0.2   0.2 0.388 0.0483
 8 mu         0.2   0.3 0.458 0.0543
 9 mu         0.2   0.4 0.490 0.0736
10 mu         0.2   0.5 0.529 0.0834
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.976        0.529  0.000487      7.26
 2 mu         0.2      0.952        0.927  0.103         2.22
 3 mu         0.3      1.01         1.03   0.401         1.73
 4 mu         0.4      0.995        0.989  0.682         1.41
 5 mu         0.5      0.985        0.993  0.718         1.33
 6 mu         0.6      0.998        0.994  0.783         1.30
 7 mu         0.7      0.998        0.984  0.726         1.31
 8 mu         0.8      1.01         0.997  0.525         1.66
 9 mu         0.9      0.953        0.947  0.309         1.94
10 mu_1       0.1      0.956        0.740  0.00142       4.54
11 mu_1       0.2      0.965        0.932  0.146         2.19
12 mu_1       0.3      1.02         1.05   0.469         1.74
13 mu_1       0.4      0.989        0.987  0.676         1.37
14 mu_1       0.5      0.986        0.986  0.705         1.31
15 mu_1       0.6      0.999        0.981  0.775         1.31
16 mu_1       0.7      0.998        0.986  0.721         1.33
17 mu_1       0.8      1.01         0.997  0.499         1.70
18 mu_1       0.9      0.951        0.947  0.291         1.97
19 mu_0       0.1      0.978        0.505  0.000383      7.56
20 mu_0       0.2      0.949        0.940  0.0918        2.22
21 mu_0       0.3      1.01         1.03   0.363         1.73
22 mu_0       0.4      1.00         0.993  0.672         1.48
23 mu_0       0.5      0.985        0.993  0.714         1.37
24 mu_0       0.6      0.997        0.990  0.749         1.28
25 mu_0       0.7      0.999        0.986  0.722         1.30
26 mu_0       0.8      1.01         1.00   0.628         1.57
27 mu_0       0.9      0.973        0.953  0.334         1.95
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.591     3.01e-11  2.83e-39     55.6 
 2 mu         0.2      0.639     3.38e- 6  2.21e-26     22.8 
 3 mu         0.3      0.719     1.17e- 3  7.23e-19     12.1 
 4 mu         0.4      0.910     3.96e- 2  1.46e-13     10.6 
 5 mu         0.5      0.955     3.78e- 1  1.79e- 9      7.52
 6 mu         0.6      0.965     6.45e- 1  4.03e- 8      6.19
 7 mu         0.7      1.22      7.00e- 1  2.08e-12     10.5 
 8 mu         0.8      1.17      1.33e- 1  1.24e-18     10.1 
 9 mu         0.9      1.63      1.71e- 4  1.62e-29     39.9 
10 mu_1       0.1      0.746     1.72e-10  2.77e-38     66.2 
11 mu_1       0.2      0.669     1.12e- 5  1.08e-25     16.2 
12 mu_1       0.3      0.747     2.48e- 3  2.36e-18      9.77
13 mu_1       0.4      0.931     6.53e- 2  3.57e-13     11.2 
14 mu_1       0.5      0.937     4.51e- 1  3.50e- 9      6.38
15 mu_1       0.6      0.986     6.45e- 1  7.99e- 9      6.74
16 mu_1       0.7      1.22      6.68e- 1  3.53e-13     10.4 
17 mu_1       0.8      1.17      1.01e- 1  1.84e-19     10.4 
18 mu_1       0.9      1.70      1.15e- 4  2.14e-30     44.3 
19 mu_0       0.1      0.574     1.45e-11  0            54.4 
20 mu_0       0.2      0.631     1.42e- 6  0            25.1 
21 mu_0       0.3      0.706     6.11e- 4  0            13.2 
22 mu_0       0.4      0.897     2.55e- 2  0            10.1 
23 mu_0       0.5      0.972     3.48e- 1  0             8.66
24 mu_0       0.6      0.934     6.26e- 1  0             5.37
25 mu_0       0.7      1.19      5.45e- 1  0            10.7 
26 mu_0       0.8      1.18      1.98e- 1  0             9.09
27 mu_0       0.9      1.07      5.82e- 4  0            15.8 
[1] "Total run time was 208.124 seconds"
