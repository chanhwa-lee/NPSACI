
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3562"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 2  2  5  2  4  3  1  4  4  2  5  1  2  1  2  5  3  5  6  4  5  3  1  4  6  3 
46 47 48 49 50 
 5  1  4  4  1 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04959 0.36387 0.61915 1.00000 4.00000 
[1] "event indicator table: "

   0    1 
2082 1480 
[1] "treatment indicator table: "

   0    1 
1244 2318 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1805
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1757
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 266.336 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.533 0.160 
 2 mu         0.1   0.2 0.636 0.197 
 3 mu         0.1   0.3 0.701 0.216 
 4 mu         0.1   0.4 0.809 0.252 
 5 mu         0.1   0.5 0.915 0.271 
 6 mu         0.2   0.1 0.319 0.0351
 7 mu         0.2   0.2 0.385 0.0362
 8 mu         0.2   0.3 0.428 0.0375
 9 mu         0.2   0.4 0.498 0.0582
10 mu         0.2   0.5 0.565 0.0595
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.48         0.251  0.000678     42.1 
 2 mu         0.2      1.01         0.903  0.115         6.61
 3 mu         0.3      0.973        0.921  0.250         2.35
 4 mu         0.4      0.975        0.984  0.490         1.55
 5 mu         0.5      0.977        0.973  0.590         1.46
 6 mu         0.6      1.00         0.984  0.733         1.37
 7 mu         0.7      1.02         1.02   0.593         1.54
 8 mu         0.8      0.997        1.01   0.759         1.35
 9 mu         0.9      0.998        1.00   0.148         1.79
10 mu_1       0.1      1.32         0.450  0.00196      35.1 
11 mu_1       0.2      1.01         0.924  0.183         4.37
12 mu_1       0.3      0.971        0.936  0.257         2.04
13 mu_1       0.4      0.973        0.973  0.542         1.51
14 mu_1       0.5      0.978        0.972  0.608         1.50
15 mu_1       0.6      1.00         0.989  0.710         1.38
16 mu_1       0.7      1.02         1.02   0.595         1.55
17 mu_1       0.8      0.996        0.997  0.744         1.37
18 mu_1       0.9      0.998        1.01   0.135         1.84
19 mu_0       0.1      1.50         0.225  0.000526     42.9 
20 mu_0       0.2      1.01         0.880  0.0982        7.17
21 mu_0       0.3      0.973        0.929  0.248         2.49
22 mu_0       0.4      0.976        0.968  0.455         1.58
23 mu_0       0.5      0.976        0.972  0.572         1.42
24 mu_0       0.6      0.996        0.983  0.729         1.44
25 mu_0       0.7      1.02         1.01   0.588         1.51
26 mu_0       0.8      1.00         1.02   0.745         1.29
27 mu_0       0.9      1.00         1.02   0.267         1.43
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.241     1.83e-14  4.24e-38     14.0 
 2 mu         0.2      1.01      1.04e- 7  8.29e-25     32.0 
 3 mu         0.3      1.38      1.94e- 4  3.57e-17     32.8 
 4 mu         0.4      1.16      2.65e- 2  6.92e-12     12.4 
 5 mu         0.5      0.990     2.97e- 1  6.38e- 8      5.24
 6 mu         0.6      1.18      6.86e- 1  7.65e- 5      7.28
 7 mu         0.7      1.28      6.61e- 1  6.14e- 7     11.4 
 8 mu         0.8      1.35      4.88e- 1  6.18e-12      7.68
 9 mu         0.9      1.42      3.12e- 3  5.26e-21     21.2 
10 mu_1       0.1      0.471     1.12e-13  3.82e-37     25.4 
11 mu_1       0.2      1.16      3.42e- 7  3.73e-24     34.8 
12 mu_1       0.3      1.34      4.59e- 4  1.07e-16     28.0 
13 mu_1       0.4      1.11      4.31e- 2  1.56e-11     11.6 
14 mu_1       0.5      1.01      3.03e- 1  1.15e- 7      4.82
15 mu_1       0.6      1.19      6.89e- 1  1.15e- 4      7.78
16 mu_1       0.7      1.29      7.49e- 1  2.24e- 7     12.0 
17 mu_1       0.8      1.36      3.98e- 1  1.98e-12      8.50
18 mu_1       0.9      1.42      2.29e- 3  1.50e-21     22.3 
19 mu_0       0.1      0.216     7.89e-15  0            12.7 
20 mu_0       0.2      0.979     4.43e- 8  0            31.6 
21 mu_0       0.3      1.40      8.98e- 5  0            34.9 
22 mu_0       0.4      1.19      1.55e- 2  0            13.1 
23 mu_0       0.5      0.970     2.56e- 1  0             5.67
24 mu_0       0.6      1.16      5.66e- 1  0             6.54
25 mu_0       0.7      1.27      7.50e- 1  0            10.1 
26 mu_0       0.8      1.31      5.40e- 1  0             9.52
27 mu_0       0.9      1.42      8.73e- 3  0            21.1 
[1] "Total run time was 270.235 seconds"
