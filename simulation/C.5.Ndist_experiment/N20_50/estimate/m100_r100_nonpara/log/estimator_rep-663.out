
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3561"
[1] "cluster size dist'n: "

21 22 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 42 43 44 45 46 47 48 
 6  6  2  4  2  2  2  8  4  2  1  5  3  6  1  4  4  1  2  2  4  6  3  4  2  6 
49 50 
 6  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.05715 0.41495 0.67558 1.00000 5.92509 
[1] "event indicator table: "

   0    1 
2087 1474 
[1] "treatment indicator table: "

   0    1 
1267 2294 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1823
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 43"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 93"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1738
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 20"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 261.489 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.295 0.0951
 2 mu         0.1   0.2 0.345 0.154 
 3 mu         0.1   0.3 0.430 0.138 
 4 mu         0.1   0.4 0.471 0.137 
 5 mu         0.1   0.5 0.485 0.151 
 6 mu         0.2   0.1 0.314 0.0672
 7 mu         0.2   0.2 0.385 0.123 
 8 mu         0.2   0.3 0.482 0.0992
 9 mu         0.2   0.4 0.540 0.0947
10 mu         0.2   0.5 0.571 0.108 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.952        0.163 0.000104      10.1 
 2 mu         0.2      1.15         0.977 0.0357         4.75
 3 mu         0.3      1.07         1.05  0.325          1.87
 4 mu         0.4      1.04         1.03  0.674          1.45
 5 mu         0.5      1.01         1.02  0.590          1.41
 6 mu         0.6      0.994        0.998 0.690          1.25
 7 mu         0.7      0.992        0.988 0.774          1.25
 8 mu         0.8      0.983        0.989 0.369          1.38
 9 mu         0.9      1.03         0.992 0.159          2.05
10 mu_1       0.1      1.05         0.304 0.000405       9.16
11 mu_1       0.2      1.13         1.00  0.0715         3.46
12 mu_1       0.3      1.06         1.01  0.400          1.83
13 mu_1       0.4      1.03         1.03  0.702          1.46
14 mu_1       0.5      1.01         1.02  0.584          1.39
15 mu_1       0.6      0.993        0.995 0.706          1.25
16 mu_1       0.7      0.992        0.981 0.762          1.24
17 mu_1       0.8      0.983        0.991 0.351          1.40
18 mu_1       0.9      1.03         0.985 0.151          2.09
19 mu_0       0.1      0.941        0.146 0.0000709     10.2 
20 mu_0       0.2      1.16         0.957 0.0268         5.10
21 mu_0       0.3      1.07         1.06  0.293          1.93
22 mu_0       0.4      1.04         1.03  0.637          1.46
23 mu_0       0.5      1.01         1.01  0.596          1.42
24 mu_0       0.6      0.995        0.990 0.666          1.29
25 mu_0       0.7      0.994        0.991 0.763          1.29
26 mu_0       0.8      0.984        0.972 0.442          1.31
27 mu_0       0.9      1.03         0.995 0.222          1.81
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     25.4       5.09e-14  8.11e-42   2541.  
 2 mu         0.2      5.63      4.08e- 8  2.85e-28    535.  
 3 mu         0.3      1.18      8.09e- 5  2.40e-20     42.7 
 4 mu         0.4      1.07      1.16e- 2  1.00e-14     11.8 
 5 mu         0.5      0.935     2.67e- 1  2.31e-10      4.96
 6 mu         0.6      0.986     5.91e- 1  8.43e- 7      5.56
 7 mu         0.7      1.09      8.90e- 1  1.47e- 7      4.59
 8 mu         0.8      1.29      2.51e- 1  7.60e-12      7.46
 9 mu         0.9      2.59      6.08e- 4  2.87e-19     72.0 
10 mu_1       0.1     18.9       3.77e-13  8.11e-41   1883.  
11 mu_1       0.2      2.35      1.49e- 7  1.43e-27    198.  
12 mu_1       0.3      0.966     1.80e- 4  7.99e-20     13.4 
13 mu_1       0.4      1.07      1.92e- 2  2.51e-14     11.7 
14 mu_1       0.5      0.923     3.47e- 1  4.61e-10      4.51
15 mu_1       0.6      0.986     6.16e- 1  1.41e- 6      5.45
16 mu_1       0.7      1.11      9.16e- 1  1.56e- 8      4.57
17 mu_1       0.8      1.30      2.03e- 1  7.04e-13      8.36
18 mu_1       0.9      2.71      4.35e- 4  2.36e-20     78.7 
19 mu_0       0.1     26.2       1.54e-14  0          2615.  
20 mu_0       0.2      6.45      1.23e- 8  0           619.  
21 mu_0       0.3      1.27      3.93e- 5  0            56.5 
22 mu_0       0.4      1.07      6.93e- 3  0            11.9 
23 mu_0       0.5      0.947     1.82e- 1  0             5.55
24 mu_0       0.6      0.986     4.59e- 1  0             5.73
25 mu_0       0.7      1.05      9.19e- 1  0             4.63
26 mu_0       0.8      1.24      3.41e- 1  0             6.18
27 mu_0       0.9      1.53      1.66e- 3  0            22.0 
[1] "Total run time was 266.09 seconds"
