
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3491"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 3  4  1  1  1  4  4  2  3  3  7  7  2  6  4  1  6  3  1  2  4  7  5  1  4  1 
46 47 48 49 50 
 2  1  6  2  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02804 0.32211 0.57517 0.94635 5.00000 
[1] "event indicator table: "

   0    1 
2064 1427 
[1] "treatment indicator table: "

   0    1 
1405 2086 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1733
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 27"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1758
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 189.011 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.503 0.134 
 2 mu         0.1   0.2 0.552 0.116 
 3 mu         0.1   0.3 0.612 0.106 
 4 mu         0.1   0.4 0.684 0.116 
 5 mu         0.1   0.5 0.745 0.132 
 6 mu         0.2   0.1 0.428 0.0575
 7 mu         0.2   0.2 0.491 0.0525
 8 mu         0.2   0.3 0.558 0.0532
 9 mu         0.2   0.4 0.605 0.0571
10 mu         0.2   0.5 0.663 0.0678
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.08         0.514   0.00185     13.8 
 2 mu         0.2      1.03         0.902   0.163        3.41
 3 mu         0.3      1.01         0.996   0.284        2.34
 4 mu         0.4      1.02         1.00    0.660        1.55
 5 mu         0.5      1.02         1.00    0.628        1.44
 6 mu         0.6      1.00         1.01    0.740        1.35
 7 mu         0.7      0.992        0.996   0.673        1.28
 8 mu         0.8      0.978        0.998   0.552        1.39
 9 mu         0.9      1.00         1.05    0.237        1.72
10 mu_1       0.1      1.03         0.748   0.00543      7.12
11 mu_1       0.2      1.03         0.946   0.266        3.26
12 mu_1       0.3      1.01         1.00    0.349        2.14
13 mu_1       0.4      1.02         1.01    0.658        1.49
14 mu_1       0.5      1.02         1.01    0.621        1.43
15 mu_1       0.6      1.00         1.00    0.731        1.38
16 mu_1       0.7      0.991        0.992   0.662        1.28
17 mu_1       0.8      0.978        1.00    0.530        1.41
18 mu_1       0.9      1.00         1.05    0.220        1.74
19 mu_0       0.1      1.08         0.491   0.00145     14.5 
20 mu_0       0.2      1.03         0.900   0.137        3.44
21 mu_0       0.3      1.01         1.00    0.256        2.43
22 mu_0       0.4      1.02         1.01    0.640        1.59
23 mu_0       0.5      1.02         1.01    0.634        1.45
24 mu_0       0.6      1.00         0.999   0.746        1.30
25 mu_0       0.7      0.995        1.00    0.699        1.27
26 mu_0       0.8      0.978        0.996   0.608        1.35
27 mu_0       0.9      0.985        0.988   0.384        1.79
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.956     1.21e-11  1.90e-32     64.7 
 2 mu         0.2      2.69      4.62e- 6  1.84e-20     92.2 
 3 mu         0.3      1.97      3.82e- 3  1.20e-13     56.2 
 4 mu         0.4      1.10      1.32e- 1  1.23e- 9      8.03
 5 mu         0.5      1.04      3.19e- 1  6.35e- 7      7.79
 6 mu         0.6      1.05      6.29e- 1  1.05e- 7      5.40
 7 mu         0.7      1.05      6.35e- 1  7.24e-12      6.13
 8 mu         0.8      1.09      1.71e- 1  6.46e-18     14.6 
 9 mu         0.9      0.812     6.29e- 4  1.69e-28     12.0 
10 mu_1       0.1      1.43      6.76e-11  1.63e-31     78.9 
11 mu_1       0.2      2.84      1.41e- 5  7.84e-20    102.  
12 mu_1       0.3      1.73      7.38e- 3  3.41e-13     41.6 
13 mu_1       0.4      1.06      2.10e- 1  3.07e- 9      6.48
14 mu_1       0.5      1.05      3.72e- 1  1.27e- 6      7.42
15 mu_1       0.6      1.05      6.53e- 1  2.14e- 8      5.54
16 mu_1       0.7      1.04      6.41e- 1  1.26e-12      6.08
17 mu_1       0.8      1.09      1.27e- 1  9.85e-19     15.0 
18 mu_1       0.9      0.808     4.11e- 4  2.30e-29     11.9 
19 mu_0       0.1      0.904     5.89e-12  0            63.1 
20 mu_0       0.2      2.65      2.33e- 6  0            89.6 
21 mu_0       0.3      2.07      2.11e- 3  0            62.4 
22 mu_0       0.4      1.13      7.74e- 2  0             9.71
23 mu_0       0.5      1.03      2.27e- 1  0             8.16
24 mu_0       0.6      1.05      6.48e- 1  0             5.20
25 mu_0       0.7      1.07      7.04e- 1  0             6.24
26 mu_0       0.8      1.09      3.04e- 1  0            12.7 
27 mu_0       0.9      0.842     2.36e- 3  0            12.4 
[1] "Total run time was 192.081 seconds"
