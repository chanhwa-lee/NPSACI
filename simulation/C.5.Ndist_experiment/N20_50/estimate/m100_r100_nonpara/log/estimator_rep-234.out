
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3403"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 6  4  3  4  2  3  3  1  6  5  2  2  4  6  3  3  3  4  2  2  5  1  5  2  4  1 
47 48 49 50 
 4  4  3  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.01923 0.31087 0.57106 0.97865 6.00000 
[1] "event indicator table: "

   0    1 
2029 1374 
[1] "treatment indicator table: "

   0    1 
1305 2098 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1706
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1697
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 200.678 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.390 0.0915
 2 mu         0.1   0.2 0.404 0.0634
 3 mu         0.1   0.3 0.434 0.0643
 4 mu         0.1   0.4 0.449 0.0691
 5 mu         0.1   0.5 0.541 0.0749
 6 mu         0.2   0.1 0.371 0.0544
 7 mu         0.2   0.2 0.426 0.0470
 8 mu         0.2   0.3 0.463 0.0466
 9 mu         0.2   0.4 0.512 0.0467
10 mu         0.2   0.5 0.566 0.0465
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.870        0.386 0.0000448      5.35
 2 mu         0.2      0.966        0.936 0.0235         2.59
 3 mu         0.3      1.01         0.980 0.243          1.93
 4 mu         0.4      1.01         0.987 0.601          1.62
 5 mu         0.5      1.01         1.02  0.638          1.31
 6 mu         0.6      1.01         0.998 0.706          1.27
 7 mu         0.7      1.00         1.00  0.751          1.41
 8 mu         0.8      0.984        0.974 0.694          1.51
 9 mu         0.9      1.02         0.990 0.487          1.98
10 mu_1       0.1      0.911        0.659 0.000143       5.60
11 mu_1       0.2      0.984        0.942 0.0384         2.59
12 mu_1       0.3      1.01         0.973 0.305          1.98
13 mu_1       0.4      1.01         0.991 0.572          1.61
14 mu_1       0.5      1.01         1.02  0.659          1.32
15 mu_1       0.6      1.01         0.999 0.700          1.28
16 mu_1       0.7      0.999        0.997 0.746          1.40
17 mu_1       0.8      0.984        0.978 0.684          1.53
18 mu_1       0.9      1.02         0.993 0.495          2.00
19 mu_0       0.1      0.865        0.352 0.0000340      5.33
20 mu_0       0.2      0.961        0.918 0.0197         2.72
21 mu_0       0.3      1.00         0.975 0.216          1.91
22 mu_0       0.4      1.01         0.991 0.592          1.67
23 mu_0       0.5      1.01         1.03  0.616          1.32
24 mu_0       0.6      1.01         0.998 0.714          1.30
25 mu_0       0.7      1.01         1.00  0.764          1.44
26 mu_0       0.8      0.981        0.971 0.704          1.41
27 mu_0       0.9      1.00         0.978 0.421          1.82
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.276     1.16e-11  5.61e-38      9.39
 2 mu         0.2      1.69      3.34e- 6  1.10e-25     48.7 
 3 mu         0.3      1.39      2.26e- 3  1.59e-18     22.7 
 4 mu         0.4      1.05      1.18e- 1  1.81e-13      8.37
 5 mu         0.5      1.24      4.12e- 1  1.42e- 9      8.67
 6 mu         0.6      1.18      8.22e- 1  1.74e- 6      9.95
 7 mu         0.7      1.06      5.47e- 1  9.35e-11      8.74
 8 mu         0.8      1.09      1.55e- 1  4.22e-17      6.96
 9 mu         0.9      1.02      5.04e- 4  2.22e-28     11.0 
10 mu_1       0.1      0.544     7.79e-11  5.48e-37     17.6 
11 mu_1       0.2      1.84      1.06e- 5  5.35e-25     45.6 
12 mu_1       0.3      1.27      4.76e- 3  5.18e-18     18.9 
13 mu_1       0.4      1.08      1.51e- 1  4.41e-13      8.11
14 mu_1       0.5      1.25      4.55e- 1  2.77e- 9      8.13
15 mu_1       0.6      1.17      7.71e- 1  5.44e- 7      9.87
16 mu_1       0.7      1.06      4.86e- 1  2.51e-11      8.33
17 mu_1       0.8      1.09      1.39e- 1  9.89e-18      7.02
18 mu_1       0.9      1.02      3.51e- 4  4.62e-29     10.7 
19 mu_0       0.1      0.246     4.19e-12  1.48e-39      8.48
20 mu_0       0.2      1.65      1.62e- 6  3.26e-27     49.4 
21 mu_0       0.3      1.44      1.14e- 3  5.41e-20     24.3 
22 mu_0       0.4      1.04      6.88e- 2  7.18e-15      8.54
23 mu_0       0.5      1.22      3.81e- 1  6.75e-11      9.21
24 mu_0       0.6      1.21      6.70e- 1  1.19e- 7     10.1 
25 mu_0       0.7      1.07      4.79e- 1  2.53e-10      9.72
26 mu_0       0.8      1.09      2.02e- 1  1.71e-16      6.74
27 mu_0       0.9      1.05      1.88e- 3  1.80e-27     14.1 
[1] "Total run time was 203.979 seconds"
