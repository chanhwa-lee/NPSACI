
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3440"
[1] "cluster size dist'n: "

20 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 
 4  1  5  3  4  5  1  4  4  4  4  7  6  4  1  2  5  3  2  3  4  3  3  2  3  5 
47 48 49 50 
 3  1  1  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0448  0.3938  0.6478  1.0000  7.0000 
[1] "event indicator table: "

   0    1 
2056 1384 
[1] "treatment indicator table: "

   0    1 
1158 2282 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1710
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1730
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 12"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 469.745 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.250 0.0912
 2 mu         0.1   0.2 0.263 0.0826
 3 mu         0.1   0.3 0.262 0.0653
 4 mu         0.1   0.4 0.343 0.114 
 5 mu         0.1   0.5 0.319 0.0972
 6 mu         0.2   0.1 0.378 0.0882
 7 mu         0.2   0.2 0.425 0.0802
 8 mu         0.2   0.3 0.446 0.0643
 9 mu         0.2   0.4 0.546 0.112 
10 mu         0.2   0.5 0.540 0.0969
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      0.391       0.0644 0.00000319      3.82
 2 mu         0.2      0.839       0.678  0.0131          5.08
 3 mu         0.3      0.963       0.948  0.254           4.18
 4 mu         0.4      1.00        0.981  0.359           1.61
 5 mu         0.5      1.01        1.02   0.718           1.33
 6 mu         0.6      0.988       0.994  0.784           1.22
 7 mu         0.7      0.985       0.987  0.749           1.22
 8 mu         0.8      1.02        1.02   0.804           1.38
 9 mu         0.9      1.00        0.971  0.441           1.66
10 mu_1       0.1      0.527       0.162  0.0000116       3.62
11 mu_1       0.2      0.899       0.768  0.0240          5.07
12 mu_1       0.3      0.978       0.934  0.327           3.68
13 mu_1       0.4      1.01        1.00   0.358           1.57
14 mu_1       0.5      1.00        1.02   0.722           1.29
15 mu_1       0.6      0.986       0.986  0.784           1.20
16 mu_1       0.7      0.986       0.990  0.747           1.22
17 mu_1       0.8      1.02        1.02   0.786           1.39
18 mu_1       0.9      1.00        0.967  0.414           1.68
19 mu_0       0.1      0.375       0.0535 0.00000226      3.98
20 mu_0       0.2      0.824       0.650  0.0104          5.24
21 mu_0       0.3      0.957       0.953  0.215           4.39
22 mu_0       0.4      0.999       0.986  0.360           1.73
23 mu_0       0.5      1.01        1.02   0.685           1.37
24 mu_0       0.6      0.992       0.990  0.763           1.25
25 mu_0       0.7      0.982       0.976  0.737           1.21
26 mu_0       0.8      1.01        1.01   0.812           1.31
27 mu_0       0.9      1.02        1.01   0.569           1.53
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     13.0       8.23e-15  3.29e-36   1300.  
 2 mu         0.2      7.11      1.08e- 8  9.04e-24    665.  
 3 mu         0.3      1.73      2.36e- 5  1.32e-16     31.7 
 4 mu         0.4      1.64      3.96e- 3  1.26e-11     18.3 
 5 mu         0.5      1.12      1.49e- 1  7.13e- 8     10.7 
 6 mu         0.6      0.947     7.28e- 1  2.20e- 7      3.50
 7 mu         0.7      1.17      1.05e+ 0  4.19e-12      4.60
 8 mu         0.8      1.08      6.76e- 1  5.63e-19      4.46
 9 mu         0.9      1.21      9.33e- 3  5.19e-31     14.7 
10 mu_1       0.1     16.6       5.61e-14  3.01e-35   1659.  
11 mu_1       0.2      4.91      3.94e- 8  4.13e-23    424.  
12 mu_1       0.3      1.72      5.94e- 5  4.01e-16     23.7 
13 mu_1       0.4      1.58      7.07e- 3  2.87e-11     16.7 
14 mu_1       0.5      1.05      1.93e- 1  1.30e- 7     10.5 
15 mu_1       0.6      0.955     7.06e- 1  4.69e- 8      3.45
16 mu_1       0.7      1.18      9.60e- 1  7.65e-13      4.56
17 mu_1       0.8      1.07      6.63e- 1  8.99e-20      4.92
18 mu_1       0.9      1.21      7.35e- 3  7.37e-32     15.5 
19 mu_0       0.1     12.6       2.54e-15  3.18e-37   1260.  
20 mu_0       0.2      7.66      3.61e- 9  9.83e-25    725.  
21 mu_0       0.3      1.73      8.21e- 6  1.64e-17     39.6 
22 mu_0       0.4      1.68      1.92e- 3  1.82e-12     19.3 
23 mu_0       0.5      1.18      9.47e- 2  7.33e- 9     11.0 
24 mu_0       0.6      0.936     6.00e- 1  4.81e- 7      4.47
25 mu_0       0.7      1.14      9.34e- 1  1.22e-11      4.69
26 mu_0       0.8      1.12      6.74e- 1  2.46e-18      3.87
27 mu_0       0.9      1.20      2.71e- 2  4.53e-30     14.2 
[1] "Total run time was 473.804 seconds"
