
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3548"
[1] "cluster size dist'n: "

20 21 22 23 24 25 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 
 2  4  3  4  2  3  3  2  7  6  1  3  1  1  5  1  4  5  6  1  3  7  8  5  1  2 
47 48 49 50 
 2  1  4  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02249 0.30185 0.58478 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
2051 1497 
[1] "treatment indicator table: "

   0    1 
1362 2186 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1827
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1721
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 31"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 49"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 198.036 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.223 0.0398
 2 mu         0.1   0.2 0.293 0.0498
 3 mu         0.1   0.3 0.305 0.0512
 4 mu         0.1   0.4 0.298 0.0642
 5 mu         0.1   0.5 0.364 0.0586
 6 mu         0.2   0.1 0.300 0.0257
 7 mu         0.2   0.2 0.393 0.0371
 8 mu         0.2   0.3 0.418 0.0337
 9 mu         0.2   0.4 0.427 0.0466
10 mu         0.2   0.5 0.502 0.0402
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      0.629        0.212 0.00000265      5.88
 2 mu         0.2      0.907        0.893 0.00605         5.50
 3 mu         0.3      0.920        0.930 0.134           2.18
 4 mu         0.4      0.973        0.980 0.438           1.74
 5 mu         0.5      1.00         0.984 0.649           1.45
 6 mu         0.6      1.01         1.00  0.724           1.35
 7 mu         0.7      1.02         0.995 0.743           1.61
 8 mu         0.8      1.04         1.03  0.751           1.38
 9 mu         0.9      1.03         0.990 0.167           2.36
10 mu_1       0.1      0.780        0.416 0.0000103       5.48
11 mu_1       0.2      0.924        0.896 0.0118          5.14
12 mu_1       0.3      0.929        0.941 0.179           1.85
13 mu_1       0.4      0.980        0.979 0.489           1.74
14 mu_1       0.5      1.00         0.981 0.676           1.36
15 mu_1       0.6      1.01         1.00  0.708           1.38
16 mu_1       0.7      1.02         1.01  0.757           1.60
17 mu_1       0.8      1.04         1.04  0.726           1.38
18 mu_1       0.9      1.03         0.986 0.151           2.40
19 mu_0       0.1      0.613        0.189 0.00000180      5.93
20 mu_0       0.2      0.903        0.876 0.00460         5.59
21 mu_0       0.3      0.916        0.932 0.114           2.33
22 mu_0       0.4      0.968        0.982 0.404           1.73
23 mu_0       0.5      1.00         0.985 0.622           1.56
24 mu_0       0.6      1.01         0.984 0.736           1.35
25 mu_0       0.7      1.02         1.00  0.708           1.63
26 mu_0       0.8      1.04         1.02  0.808           1.39
27 mu_0       0.9      1.02         1.01  0.311           2.00
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       2.34     6.59e-13  4.22e-36    103.  
 2 mu         0.2       3.44     4.62e- 7  1.16e-23    137.  
 3 mu         0.3       1.45     4.33e- 4  1.69e-16     28.4 
 4 mu         0.4       1.19     3.81e- 2  1.27e-11     13.3 
 5 mu         0.5       1.22     1.93e- 1  3.25e- 8     11.2 
 6 mu         0.6       1.02     4.78e- 1  4.48e- 8      5.31
 7 mu         0.7       1.11     6.30e- 1  7.45e-13      7.52
 8 mu         0.8       1.39     2.88e- 1  7.62e-20     17.5 
 9 mu         0.9       1.47     1.44e- 3  3.95e-32     21.7 
10 mu_1       0.1       3.61     3.97e-12  3.85e-35    161.  
11 mu_1       0.2       2.96     1.61e- 6  5.29e-23    107.  
12 mu_1       0.3       1.28     9.72e- 4  5.14e-16     14.8 
13 mu_1       0.4       1.17     5.27e- 2  3.08e-11     14.6 
14 mu_1       0.5       1.20     1.85e- 1  6.32e- 8      9.80
15 mu_1       0.6       1.02     5.44e- 1  1.07e- 8      4.70
16 mu_1       0.7       1.14     5.66e- 1  1.52e-13      7.81
17 mu_1       0.8       1.41     2.57e- 1  1.36e-20     17.7 
18 mu_1       0.9       1.45     1.11e- 3  6.28e-33     21.2 
19 mu_0       0.1       2.19     2.90e-13  4.08e-37     96.9 
20 mu_0       0.2       3.56     1.74e- 7  1.26e-24    145.  
21 mu_0       0.3       1.53     1.83e- 4  1.81e-17     34.2 
22 mu_0       0.4       1.21     2.28e- 2  5.70e-13     12.5 
23 mu_0       0.5       1.24     2.06e- 1  1.76e- 9     12.5 
24 mu_0       0.6       1.04     3.76e- 1  9.59e- 8      6.23
25 mu_0       0.7       1.04     4.65e- 1  2.13e-12      6.83
26 mu_0       0.8       1.30     3.15e- 1  3.27e-19     16.7 
27 mu_0       0.9       1.60     4.41e- 3  3.39e-31     26.0 
[1] "Total run time was 202.207 seconds"
