
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3484"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 
 3  7  4  1  3  4  2  5  4  1  2  4  3  2  5  1  4  3  6  2  8  4  2  2  4  3 
47 48 49 50 
 5  1  4  1 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04525 0.36892 0.61606 1.00000 5.00000 
[1] "event indicator table: "

   0    1 
2032 1452 
[1] "treatment indicator table: "

   0    1 
1320 2164 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1730
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 64"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1754
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 274.226 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.268 0.0584
 2 mu         0.1   0.2 0.364 0.0770
 3 mu         0.1   0.3 0.454 0.0775
 4 mu         0.1   0.4 0.522 0.0770
 5 mu         0.1   0.5 0.562 0.0778
 6 mu         0.2   0.1 0.287 0.0450
 7 mu         0.2   0.2 0.378 0.0700
 8 mu         0.2   0.3 0.462 0.0679
 9 mu         0.2   0.4 0.533 0.0623
10 mu         0.2   0.5 0.563 0.0579
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      0.973        0.662 0.00000450      5.05
 2 mu         0.2      1.03         0.965 0.0173          2.76
 3 mu         0.3      0.988        0.983 0.368           1.66
 4 mu         0.4      0.958        0.953 0.493           1.40
 5 mu         0.5      0.968        0.980 0.654           1.34
 6 mu         0.6      0.990        0.990 0.687           1.34
 7 mu         0.7      1.00         0.991 0.733           1.41
 8 mu         0.8      0.999        0.998 0.689           1.37
 9 mu         0.9      1.02         1.02  0.467           1.94
10 mu_1       0.1      0.956        0.851 0.0000158       4.17
11 mu_1       0.2      1.03         0.994 0.0308          2.65
12 mu_1       0.3      0.976        0.974 0.458           1.54
13 mu_1       0.4      0.959        0.967 0.515           1.34
14 mu_1       0.5      0.971        0.987 0.666           1.32
15 mu_1       0.6      0.992        0.982 0.696           1.34
16 mu_1       0.7      1.00         0.992 0.729           1.42
17 mu_1       0.8      0.999        0.998 0.679           1.37
18 mu_1       0.9      1.02         1.03  0.459           2.00
19 mu_0       0.1      0.975        0.619 0.00000325      5.19
20 mu_0       0.2      1.03         0.942 0.0139          2.79
21 mu_0       0.3      0.994        0.978 0.329           1.73
22 mu_0       0.4      0.957        0.959 0.478           1.44
23 mu_0       0.5      0.965        0.981 0.643           1.36
24 mu_0       0.6      0.987        0.982 0.675           1.33
25 mu_0       0.7      1.00         0.991 0.740           1.44
26 mu_0       0.8      0.997        0.999 0.650           1.38
27 mu_0       0.9      1.02         1.03  0.545           1.48
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.0256     2.12e-14  1.85e-33     0.652
 2 mu         0.2     0.677      1.31e- 7  2.01e-22    13.1  
 3 mu         0.3     1.49       2.26e- 4  5.04e-16    15.8  
 4 mu         0.4     1.45       3.15e- 2  1.55e-11    23.5  
 5 mu         0.5     1.15       2.22e- 1  4.15e- 8    14.8  
 6 mu         0.6     1.10       4.92e- 1  2.26e- 5     8.26 
 7 mu         0.7     1.18       7.46e- 1  1.95e- 7     6.06 
 8 mu         0.8     1.13       3.05e- 1  2.58e-12     8.10 
 9 mu         0.9     0.715      1.72e- 3  2.49e-21     8.29 
10 mu_1       0.1     0.0699     1.60e-13  1.75e-32     1.86 
11 mu_1       0.2     0.938      5.13e- 7  9.53e-22    16.9  
12 mu_1       0.3     1.56       4.65e- 4  1.59e-15    13.5  
13 mu_1       0.4     1.41       5.34e- 2  3.68e-11    25.0  
14 mu_1       0.5     1.11       2.64e- 1  7.88e- 8    12.6  
15 mu_1       0.6     1.11       4.30e- 1  3.58e- 5     8.32 
16 mu_1       0.7     1.20       7.38e- 1  6.80e- 8     6.56 
17 mu_1       0.8     1.11       3.17e- 1  7.86e-13     8.05 
18 mu_1       0.9     0.718      1.25e- 3  8.23e-22     8.29 
19 mu_0       0.1     0.0207     7.76e-15  0            0.518
20 mu_0       0.2     0.612      4.02e- 8  0           12.2  
21 mu_0       0.3     1.47       1.23e- 4  0           16.8  
22 mu_0       0.4     1.49       1.69e- 2  0           22.5  
23 mu_0       0.5     1.18       1.99e- 1  0           17.1  
24 mu_0       0.6     1.10       3.92e- 1  0            8.18 
25 mu_0       0.7     1.16       6.90e- 1  0            6.04 
26 mu_0       0.8     1.21       2.33e- 1  0            8.26 
27 mu_0       0.9     0.685      3.73e- 3  0            8.29 
[1] "Total run time was 278.499 seconds"
