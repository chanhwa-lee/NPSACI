
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3384"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 41 42 43 44 45 46 
 5  5  5  2  2  2  2  3  5  3  4  3  3  5  6  3  1  6  3  7  2  2  2  4  2  2 
47 48 49 
 5  2  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03067 0.32980 0.59316 1.00000 5.11552 
[1] "event indicator table: "

   0    1 
2011 1373 
[1] "treatment indicator table: "

   0    1 
1179 2205 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1650
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 9"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 75"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1734
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 23"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 250.948 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.484 0.167 
 2 mu         0.1   0.2 0.509 0.166 
 3 mu         0.1   0.3 0.586 0.181 
 4 mu         0.1   0.4 0.601 0.178 
 5 mu         0.1   0.5 0.599 0.181 
 6 mu         0.2   0.1 0.481 0.123 
 7 mu         0.2   0.2 0.524 0.112 
 8 mu         0.2   0.3 0.617 0.117 
 9 mu         0.2   0.4 0.657 0.103 
10 mu         0.2   0.5 0.666 0.0993
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.819       0.0728 0.0000202     20.6 
 2 mu         0.2      1.04        0.705  0.0150         7.52
 3 mu         0.3      1.07        0.975  0.227          2.86
 4 mu         0.4      1.02        1.01   0.466          1.86
 5 mu         0.5      0.989       0.997  0.601          1.36
 6 mu         0.6      1.00        1.01   0.755          1.21
 7 mu         0.7      1.00        1.01   0.727          1.21
 8 mu         0.8      1.00        1.00   0.691          1.31
 9 mu         0.9      0.996       0.970  0.412          2.05
10 mu_1       0.1      0.884       0.168  0.0000773     15.4 
11 mu_1       0.2      1.07        0.878  0.0292         6.25
12 mu_1       0.3      1.06        0.979  0.308          2.63
13 mu_1       0.4      1.01        1.02   0.462          1.77
14 mu_1       0.5      0.989       0.991  0.630          1.31
15 mu_1       0.6      1.00        1.01   0.758          1.23
16 mu_1       0.7      1.00        1.01   0.737          1.19
17 mu_1       0.8      1.00        1.00   0.685          1.31
18 mu_1       0.9      0.994       0.971  0.391          2.12
19 mu_0       0.1      0.812       0.0617 0.0000138     21.1 
20 mu_0       0.2      1.03        0.670  0.0115         7.84
21 mu_0       0.3      1.07        0.968  0.192          2.96
22 mu_0       0.4      1.02        1.01   0.469          1.92
23 mu_0       0.5      0.989       0.996  0.573          1.41
24 mu_0       0.6      0.998       1.00   0.729          1.20
25 mu_0       0.7      1.01        1.01   0.704          1.25
26 mu_0       0.8      0.999       1.01   0.715          1.29
27 mu_0       0.9      1.01        1.01   0.602          1.55
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.569     2.34e-13  1.24e-38     52.8 
 2 mu         0.2      2.53      1.92e- 7  1.54e-25    176.  
 3 mu         0.3      1.69      2.14e- 4  5.77e-18     47.8 
 4 mu         0.4      1.07      1.85e- 2  1.14e-12     15.0 
 5 mu         0.5      1.19      2.57e- 1  1.21e- 8      8.58
 6 mu         0.6      1.24      1.12e+ 0  1.89e- 5      9.06
 7 mu         0.7      1.28      1.08e+ 0  7.05e- 8      5.35
 8 mu         0.8      1.19      4.71e- 1  3.28e-13      9.69
 9 mu         0.9      1.20      5.86e- 3  4.41e-23     25.5 
10 mu_1       0.1      1.08      1.48e-12  1.17e-37     97.3 
11 mu_1       0.2      2.64      5.88e- 7  7.20e-25    162.  
12 mu_1       0.3      1.51      4.84e- 4  1.80e-17     30.6 
13 mu_1       0.4      1.03      3.24e- 2  2.67e-12     12.6 
14 mu_1       0.5      1.21      3.57e- 1  2.27e- 8      9.49
15 mu_1       0.6      1.25      1.11e+ 0  2.95e- 5      8.35
16 mu_1       0.7      1.28      1.00e+ 0  1.85e- 8      5.25
17 mu_1       0.8      1.19      3.79e- 1  1.11e-13      9.94
18 mu_1       0.9      1.19      4.30e- 3  1.33e-23     26.3 
19 mu_0       0.1      0.512     8.17e-14  8.83e-40     47.9 
20 mu_0       0.2      2.50      7.45e- 8  1.23e-26    179.  
21 mu_0       0.3      1.77      1.04e- 4  5.26e-19     55.7 
22 mu_0       0.4      1.10      9.14e- 3  1.21e-13     17.0 
23 mu_0       0.5      1.17      1.72e- 1  1.55e- 9      7.83
24 mu_0       0.6      1.23      9.92e- 1  3.02e- 6     10.1 
25 mu_0       0.7      1.28      1.18e+ 0  1.92e- 7      5.95
26 mu_0       0.8      1.21      6.84e- 1  1.20e-12      8.70
27 mu_0       0.9      1.23      1.96e- 2  3.22e-22     18.7 
[1] "Total run time was 256.549 seconds"
