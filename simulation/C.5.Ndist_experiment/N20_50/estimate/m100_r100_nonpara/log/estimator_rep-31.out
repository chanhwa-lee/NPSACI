
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3460"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 2  3  3  4  5  2  3  4  4  3  3  3  3  1  4  5  7  3  3  2  5  3  2  5  2  4 
46 47 48 49 50 
 1  3  5  1  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03912 0.35876 0.62039 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
2072 1388 
[1] "treatment indicator table: "

   0    1 
1244 2216 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1712
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 5"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1748
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 25"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 180.396 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.424 0.104 
 2 mu         0.1   0.2 0.514 0.135 
 3 mu         0.1   0.3 0.574 0.150 
 4 mu         0.1   0.4 0.592 0.167 
 5 mu         0.1   0.5 0.637 0.181 
 6 mu         0.2   0.1 0.311 0.0346
 7 mu         0.2   0.2 0.399 0.0346
 8 mu         0.2   0.3 0.460 0.0380
 9 mu         0.2   0.4 0.462 0.0398
10 mu         0.2   0.5 0.491 0.0465
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.20         0.469  0.000165     31.0 
 2 mu         0.2      0.974        0.870  0.0266        3.72
 3 mu         0.3      0.971        0.930  0.211         1.78
 4 mu         0.4      0.987        0.978  0.510         1.53
 5 mu         0.5      1.01         0.997  0.699         1.56
 6 mu         0.6      1.01         0.997  0.742         1.41
 7 mu         0.7      0.994        0.984  0.702         1.57
 8 mu         0.8      0.980        0.998  0.476         1.33
 9 mu         0.9      1.04         1.02   0.411         2.11
10 mu_1       0.1      1.12         0.650  0.000585     16.3 
11 mu_1       0.2      0.960        0.915  0.0492        2.69
12 mu_1       0.3      0.973        0.972  0.278         1.66
13 mu_1       0.4      0.991        0.982  0.572         1.52
14 mu_1       0.5      1.01         0.986  0.696         1.55
15 mu_1       0.6      1.01         1.00   0.753         1.38
16 mu_1       0.7      0.993        0.987  0.702         1.55
17 mu_1       0.8      0.981        0.995  0.465         1.34
18 mu_1       0.9      1.05         1.02   0.403         2.16
19 mu_0       0.1      1.21         0.445  0.000118     32.6 
20 mu_0       0.2      0.978        0.848  0.0209        4.03
21 mu_0       0.3      0.970        0.932  0.183         1.84
22 mu_0       0.4      0.985        0.982  0.469         1.55
23 mu_0       0.5      1.01         0.998  0.703         1.58
24 mu_0       0.6      1.01         1.00   0.712         1.49
25 mu_0       0.7      0.998        0.991  0.700         1.60
26 mu_0       0.8      0.978        0.981  0.522         1.34
27 mu_0       0.9      0.999        0.973  0.479         1.64
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.0927     3.73e-13  5.92e-42      6.46
 2 mu         0.2     0.663      7.70e- 7  3.29e-28     38.1 
 3 mu         0.3     1.11       5.17e- 4  3.17e-20     29.2 
 4 mu         0.4     1.18       3.72e- 2  1.30e-14     16.5 
 5 mu         0.5     1.05       3.09e- 1  2.59e-10      9.06
 6 mu         0.6     1.10       4.45e- 1  7.29e- 7     12.0 
 7 mu         0.7     1.12       6.54e- 1  2.01e- 8      6.03
 8 mu         0.8     1.19       2.51e- 1  1.35e-13     12.2 
 9 mu         0.9     0.947      3.31e- 3  8.09e-23     11.7 
10 mu_1       0.1     0.192      2.66e-12  5.67e-41     12.9 
11 mu_1       0.2     0.784      2.39e- 6  1.58e-27     38.1 
12 mu_1       0.3     1.17       1.12e- 3  1.01e-19     30.4 
13 mu_1       0.4     1.17       6.77e- 2  3.12e-14     17.3 
14 mu_1       0.5     1.06       4.41e- 1  4.97e-10     10.1 
15 mu_1       0.6     1.10       4.85e- 1  1.16e- 6     11.4 
16 mu_1       0.7     1.12       6.99e- 1  5.74e- 9      6.42
17 mu_1       0.8     1.19       2.64e- 1  3.39e-14     11.9 
18 mu_1       0.9     0.947      2.33e- 3  1.80e-23     13.0 
19 mu_0       0.1     0.0816     1.49e-13  0             5.74
20 mu_0       0.2     0.633      2.73e- 7  0            38.1 
21 mu_0       0.3     1.08       2.56e- 4  0            28.6 
22 mu_0       0.4     1.19       1.69e- 2  0            16.0 
23 mu_0       0.5     1.05       1.99e- 1  0            10.5 
24 mu_0       0.6     1.09       3.31e- 1  0            12.8 
25 mu_0       0.7     1.11       5.72e- 1  0             6.53
26 mu_0       0.8     1.22       4.47e- 1  0            13.4 
27 mu_0       0.9     0.950      9.80e- 3  0             7.88
[1] "Total run time was 183.632 seconds"
