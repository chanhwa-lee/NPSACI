
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3312"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 44 45 46 
 2  8  6  4  8  3  2  1  3  4  3  4  1  1  3  5  5  3  3  4  5  1  2  3  2  1 
47 48 49 50 
 4  6  2  1 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03605 0.34291 0.62717 1.00000 5.00000 
[1] "event indicator table: "

   0    1 
1950 1362 
[1] "treatment indicator table: "

   0    1 
1240 2072 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1634
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1678
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 48"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 234.89 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.386 0.0937
 2 mu         0.1   0.2 0.499 0.117 
 3 mu         0.1   0.3 0.559 0.0760
 4 mu         0.1   0.4 0.567 0.103 
 5 mu         0.1   0.5 0.638 0.136 
 6 mu         0.2   0.1 0.361 0.0347
 7 mu         0.2   0.2 0.439 0.0379
 8 mu         0.2   0.3 0.514 0.0324
 9 mu         0.2   0.4 0.554 0.0383
10 mu         0.2   0.5 0.584 0.0412
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.12         1.02    0.00137      6.94
 2 mu         0.2      1.06         1.07    0.259        1.88
 3 mu         0.3      1.03         1.01    0.533        1.76
 4 mu         0.4      1.01         1.01    0.659        1.42
 5 mu         0.5      0.999        0.993   0.701        1.42
 6 mu         0.6      0.990        0.972   0.661        1.31
 7 mu         0.7      0.990        0.978   0.750        1.25
 8 mu         0.8      0.996        0.984   0.724        1.43
 9 mu         0.9      0.971        0.956   0.341        1.58
10 mu_1       0.1      1.08         1.09    0.00379      5.61
11 mu_1       0.2      1.06         1.07    0.370        1.78
12 mu_1       0.3      1.02         1.02    0.560        1.75
13 mu_1       0.4      1.01         1.01    0.665        1.42
14 mu_1       0.5      0.998        0.994   0.693        1.45
15 mu_1       0.6      0.989        0.970   0.650        1.31
16 mu_1       0.7      0.991        0.967   0.773        1.24
17 mu_1       0.8      0.996        0.980   0.719        1.43
18 mu_1       0.9      0.970        0.966   0.335        1.59
19 mu_0       0.1      1.12         1.01    0.00110      7.09
20 mu_0       0.2      1.06         1.08    0.231        1.92
21 mu_0       0.3      1.03         1.01    0.521        1.77
22 mu_0       0.4      1.01         1.03    0.629        1.41
23 mu_0       0.5      1.00         0.981   0.710        1.39
24 mu_0       0.6      0.990        0.976   0.679        1.35
25 mu_0       0.7      0.990        0.993   0.691        1.28
26 mu_0       0.8      0.997        0.995   0.747        1.44
27 mu_0       0.9      0.986        0.979   0.398        1.46
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.631     2.32e-11  4.92e-42     36.6 
 2 mu         0.2      0.608     3.42e- 6  2.73e-28     12.9 
 3 mu         0.3      1.09      3.30e- 3  2.64e-20     18.0 
 4 mu         0.4      1.10      9.27e- 2  1.08e-14      7.83
 5 mu         0.5      0.935     2.93e- 1  2.16e-10      5.24
 6 mu         0.6      0.899     3.82e- 1  7.43e- 8      5.17
 7 mu         0.7      1.03      4.46e- 1  1.04e-11      5.21
 8 mu         0.8      1.30      3.14e- 1  2.73e-17      8.63
 9 mu         0.9      1.36      2.98e- 3  2.11e-27     14.6 
10 mu_1       0.1      0.470     1.68e-10  4.71e-41     25.9 
11 mu_1       0.2      0.699     1.01e- 5  1.31e-27     13.4 
12 mu_1       0.3      1.18      6.86e- 3  8.42e-20     18.2 
13 mu_1       0.4      1.08      1.20e- 1  2.59e-14      7.83
14 mu_1       0.5      0.915     2.21e- 1  4.13e-10      5.24
15 mu_1       0.6      0.904     4.01e- 1  1.34e- 8      5.26
16 mu_1       0.7      1.04      4.73e- 1  1.60e-12      5.85
17 mu_1       0.8      1.32      2.89e- 1  3.69e-18      8.47
18 mu_1       0.9      1.35      2.18e- 3  4.88e-28     14.7 
19 mu_0       0.1      0.649     7.16e-12  2.28e-43     39.0 
20 mu_0       0.2      0.586     1.75e- 6  1.42e-29     12.7 
21 mu_0       0.3      1.05      1.78e- 3  1.57e-21     17.8 
22 mu_0       0.4      1.12      5.75e- 2  7.51e-16      8.46
23 mu_0       0.5      0.956     2.82e- 1  1.80e-11      5.68
24 mu_0       0.6      0.892     4.46e- 1  6.31e- 8      5.02
25 mu_0       0.7      0.991     2.54e- 1  3.08e-11      4.85
26 mu_0       0.8      1.23      3.16e- 1  1.22e-16      9.24
27 mu_0       0.9      1.44      1.03e- 2  1.67e-26     14.2 
[1] "Total run time was 239.121 seconds"
