
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3477"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 4  3  1  9  3  1  3  3  1  3  4  1  6  7  1  3  2  2  3  6  1  3  4  6  3  4 
46 47 48 50 
 3  2  3  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02855 0.33097 0.60786 1.00000 7.00000 
[1] "event indicator table: "

   0    1 
2035 1442 
[1] "treatment indicator table: "

   0    1 
1326 2151 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1708
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1769
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 284.375 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.566 0.103 
 2 mu         0.1   0.2 0.699 0.146 
 3 mu         0.1   0.3 0.733 0.125 
 4 mu         0.1   0.4 0.766 0.114 
 5 mu         0.1   0.5 0.783 0.108 
 6 mu         0.2   0.1 0.475 0.0522
 7 mu         0.2   0.2 0.572 0.0700
 8 mu         0.2   0.3 0.612 0.0553
 9 mu         0.2   0.4 0.656 0.0501
10 mu         0.2   0.5 0.677 0.0454
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.08         0.631 0.0000389      6.92
 2 mu         0.2      1.00         0.955 0.0446         2.42
 3 mu         0.3      1.03         0.994 0.460          1.98
 4 mu         0.4      1.03         1.01  0.503          1.84
 5 mu         0.5      1.01         0.996 0.650          1.37
 6 mu         0.6      0.987        0.991 0.719          1.27
 7 mu         0.7      0.986        0.985 0.730          1.33
 8 mu         0.8      1.01         1.01  0.644          1.45
 9 mu         0.9      1.06         1.03  0.390          2.18
10 mu_1       0.1      1.05         0.843 0.000131       5.26
11 mu_1       0.2      1.00         0.940 0.0779         2.10
12 mu_1       0.3      1.04         1.01  0.537          2.08
13 mu_1       0.4      1.03         1.01  0.489          1.75
14 mu_1       0.5      1.00         0.993 0.683          1.36
15 mu_1       0.6      0.986        0.988 0.716          1.26
16 mu_1       0.7      0.986        0.984 0.711          1.36
17 mu_1       0.8      1.01         1.01  0.650          1.44
18 mu_1       0.9      1.06         1.04  0.394          2.17
19 mu_0       0.1      1.08         0.602 0.0000287      7.10
20 mu_0       0.2      1.00         0.949 0.0363         2.50
21 mu_0       0.3      1.03         0.983 0.428          1.94
22 mu_0       0.4      1.04         1.01  0.512          1.90
23 mu_0       0.5      1.01         1.01  0.616          1.40
24 mu_0       0.6      0.988        0.985 0.723          1.30
25 mu_0       0.7      0.985        0.999 0.758          1.29
26 mu_0       0.8      0.996        0.993 0.620          1.50
27 mu_0       0.9      1.06         1.05  0.356          2.32
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.0932     2.36e-11  6.45e-35      8.90
 2 mu         0.2     0.425      3.89e- 6  1.57e-23     15.2 
 3 mu         0.3     0.859      1.56e- 3  6.77e-17     18.2 
 4 mu         0.4     1.12       7.67e- 2  3.25e-12     10.9 
 5 mu         0.5     1.05       3.78e- 1  1.30e- 8      4.59
 6 mu         0.6     0.927      6.27e- 1  1.06e- 5      3.75
 7 mu         0.7     1.03       5.56e- 1  7.02e- 9      5.82
 8 mu         0.8     1.17       1.06e- 1  2.09e-14      7.17
 9 mu         0.9     1.46       1.98e- 4  2.23e-24     19.1 
10 mu_1       0.1     0.166      1.60e-10  6.28e-34     15.5 
11 mu_1       0.2     0.521      1.25e- 5  7.67e-23     15.3 
12 mu_1       0.3     0.927      3.52e- 3  2.20e-16     16.1 
13 mu_1       0.4     1.14       1.20e- 1  7.91e-12     11.0 
14 mu_1       0.5     1.03       4.82e- 1  2.54e- 8      4.46
15 mu_1       0.6     0.926      6.68e- 1  1.21e- 5      3.57
16 mu_1       0.7     1.05       5.14e- 1  2.40e- 9      6.32
17 mu_1       0.8     1.16       7.80e- 2  6.26e-15      6.99
18 mu_1       0.9     1.50       1.30e- 4  5.92e-25     20.4 
19 mu_0       0.1     0.0851     8.00e-12  1.84e-36      8.17
20 mu_0       0.2     0.401      1.73e- 6  5.05e-25     15.7 
21 mu_0       0.3     0.829      7.17e- 4  2.48e-18     19.0 
22 mu_0       0.4     1.11       4.80e- 2  1.39e-13     10.8 
23 mu_0       0.5     1.06       3.24e- 1  6.68e-10      5.47
24 mu_0       0.6     0.928      5.42e- 1  6.82e- 7      4.24
25 mu_0       0.7     0.983      6.21e- 1  1.78e- 8      4.66
26 mu_0       0.8     1.19       1.42e- 1  7.97e-14      8.61
27 mu_0       0.9     1.10       8.18e- 4  1.69e-23     12.3 
[1] "Total run time was 288.05 seconds"
