
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3332"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 45 46 
 3  5  5  3  5  8  3  1  3  3  3  6  2  2  5  1  3  2  6  1  2  3  7  4  2  4 
47 48 49 50 
 1  3  2  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02878 0.31692 0.58017 0.96407 7.00000 
[1] "event indicator table: "

   0    1 
1969 1363 
[1] "treatment indicator table: "

   0    1 
1227 2105 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1693
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 55"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 81"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1639
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 237.166 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.246 0.0950
 2 mu         0.1   0.2 0.308 0.120 
 3 mu         0.1   0.3 0.390 0.126 
 4 mu         0.1   0.4 0.422 0.135 
 5 mu         0.1   0.5 0.462 0.132 
 6 mu         0.2   0.1 0.262 0.0576
 7 mu         0.2   0.2 0.322 0.0718
 8 mu         0.2   0.3 0.401 0.0681
 9 mu         0.2   0.4 0.438 0.0724
10 mu         0.2   0.5 0.473 0.0641
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.920        0.301  0.000142     17.1 
 2 mu         0.2      0.941        0.848  0.0607        2.44
 3 mu         0.3      0.991        0.960  0.488         1.83
 4 mu         0.4      1.01         0.997  0.556         1.43
 5 mu         0.5      1.02         1.02   0.683         1.29
 6 mu         0.6      1.02         1.01   0.776         1.26
 7 mu         0.7      0.990        0.989  0.686         1.20
 8 mu         0.8      0.971        0.963  0.690         1.31
 9 mu         0.9      0.992        0.976  0.446         1.69
10 mu_1       0.1      0.825        0.478  0.000418      3.32
11 mu_1       0.2      0.955        0.892  0.0953        2.34
12 mu_1       0.3      0.998        1.01   0.564         1.69
13 mu_1       0.4      1.01         1.02   0.547         1.43
14 mu_1       0.5      1.02         1.02   0.718         1.27
15 mu_1       0.6      1.02         1.02   0.769         1.24
16 mu_1       0.7      0.987        0.982  0.671         1.22
17 mu_1       0.8      0.970        0.964  0.687         1.32
18 mu_1       0.9      0.993        0.967  0.423         1.73
19 mu_0       0.1      0.930        0.278  0.000112     19.0 
20 mu_0       0.2      0.937        0.850  0.0520        2.50
21 mu_0       0.3      0.988        0.938  0.446         1.89
22 mu_0       0.4      1.01         1.00   0.562         1.44
23 mu_0       0.5      1.02         1.02   0.631         1.33
24 mu_0       0.6      1.02         1.02   0.785         1.30
25 mu_0       0.7      0.998        0.991  0.720         1.21
26 mu_0       0.8      0.975        0.969  0.704         1.31
27 mu_0       0.9      0.979        0.954  0.479         1.61
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.106      2.41e-12  1.35e-39      7.02
 2 mu         0.2     1.20       2.10e- 6  3.33e-26     59.0 
 3 mu         0.3     1.29       3.33e- 3  1.88e-18     31.5 
 4 mu         0.4     0.990      8.29e- 2  4.95e-13      8.57
 5 mu         0.5     0.927      5.20e- 1  6.58e- 9      4.13
 6 mu         0.6     1.12       5.97e- 1  1.23e- 5      4.11
 7 mu         0.7     1.28       9.88e- 1  5.67e- 9     11.1 
 8 mu         0.8     1.17       3.20e- 1  1.94e-14      9.16
 9 mu         0.9     1.17       1.91e- 3  3.26e-24     16.2 
10 mu_1       0.1     0.235      1.47e-11  1.27e-38     15.2 
11 mu_1       0.2     1.42       6.17e- 6  1.56e-25     63.8 
12 mu_1       0.3     1.25       6.88e- 3  5.86e-18     22.7 
13 mu_1       0.4     0.958      1.33e- 1  1.16e-12      8.04
14 mu_1       0.5     0.940      4.94e- 1  1.23e- 8      3.54
15 mu_1       0.6     1.14       6.77e- 1  8.74e- 6      4.83
16 mu_1       0.7     1.28       8.62e- 1  1.69e- 9     11.2 
17 mu_1       0.8     1.15       2.59e- 1  5.08e-15      9.12
18 mu_1       0.9     1.18       1.28e- 3  7.59e-25     16.8 
19 mu_0       0.1     0.0914     1.14e-12  9.37e-41      6.11
20 mu_0       0.2     1.14       1.15e- 6  2.61e-27     57.8 
21 mu_0       0.3     1.31       1.71e- 3  1.67e-19     35.2 
22 mu_0       0.4     1.01       4.97e- 2  5.16e-14      8.93
23 mu_0       0.5     0.913      3.59e- 1  8.22e-10      4.72
24 mu_0       0.6     1.09       6.25e- 1  1.92e- 6      4.41
25 mu_0       0.7     1.27       1.00e+ 0  1.49e- 8     10.7 
26 mu_0       0.8     1.22       5.09e- 1  7.67e-14      9.35
27 mu_0       0.9     1.05       6.77e- 3  2.58e-23     10.3 
[1] "Total run time was 242.348 seconds"
