
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3348"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 36 37 38 39 40 41 42 43 44 45 46 
 4  5  4  3  3  7  3  1  3  4  6  1  7  2  4  2  5  1  2  7  4  3  3  3  1  3 
47 48 50 
 4  4  1 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02811 0.30728 0.57047 0.95896 5.00000 
[1] "event indicator table: "

   0    1 
1925 1423 
[1] "treatment indicator table: "

   0    1 
1342 2006 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1671
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 72"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1677
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 55"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 228.144 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.316 0.0920
 2 mu         0.1   0.2 0.418 0.106 
 3 mu         0.1   0.3 0.466 0.138 
 4 mu         0.1   0.4 0.484 0.168 
 5 mu         0.1   0.5 0.495 0.172 
 6 mu         0.2   0.1 0.270 0.0583
 7 mu         0.2   0.2 0.357 0.0621
 8 mu         0.2   0.3 0.395 0.0922
 9 mu         0.2   0.4 0.417 0.118 
10 mu         0.2   0.5 0.430 0.120 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.06         0.479 0.0000484     14.7 
 2 mu         0.2      0.972        0.925 0.0462         2.09
 3 mu         0.3      0.988        0.986 0.343          2.19
 4 mu         0.4      0.992        1.00  0.470          1.52
 5 mu         0.5      0.996        0.985 0.540          2.58
 6 mu         0.6      1.01         0.980 0.720          1.58
 7 mu         0.7      0.996        0.985 0.667          1.55
 8 mu         0.8      1.00         0.998 0.656          1.47
 9 mu         0.9      1.06         1.01  0.516          2.10
10 mu_1       0.1      0.984        0.661 0.000153       5.88
11 mu_1       0.2      0.969        0.968 0.0759         2.01
12 mu_1       0.3      0.990        1.02  0.368          2.24
13 mu_1       0.4      0.993        0.983 0.480          1.65
14 mu_1       0.5      0.998        0.976 0.557          2.60
15 mu_1       0.6      1.01         0.992 0.732          1.45
16 mu_1       0.7      0.994        0.978 0.646          1.55
17 mu_1       0.8      1.00         0.997 0.652          1.49
18 mu_1       0.9      1.06         1.01  0.503          2.15
19 mu_0       0.1      1.06         0.448 0.0000367     15.6 
20 mu_0       0.2      0.973        0.934 0.0387         2.34
21 mu_0       0.3      0.987        0.975 0.333          2.16
22 mu_0       0.4      0.991        0.992 0.463          1.58
23 mu_0       0.5      0.993        0.973 0.523          2.57
24 mu_0       0.6      1.01         0.971 0.694          1.78
25 mu_0       0.7      1.00         0.982 0.664          1.59
26 mu_0       0.8      0.995        1.00  0.597          1.53
27 mu_0       0.9      1.04         1.02  0.596          1.78
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.759     1.21e-11  1.34e-37      60.2
 2 mu         0.2      1.84      3.98e- 6  8.25e-25      62.4
 3 mu         0.3      1.99      4.04e- 3  2.06e-17      43.8
 4 mu         0.4      1.84      1.19e- 1  3.06e-12      14.7
 5 mu         0.5      1.83      6.82e- 1  2.60e- 8      31.5
 6 mu         0.6      1.88      6.75e- 1  1.32e- 6      39.2
 7 mu         0.7      1.72      9.52e- 1  1.42e-10      23.1
 8 mu         0.8      1.54      1.63e- 1  2.17e-16      14.7
 9 mu         0.9      0.751     3.03e- 4  1.28e-26      19.7
10 mu_1       0.1      1.22      7.10e-11  1.25e-36      88.1
11 mu_1       0.2      1.97      1.29e- 5  3.86e-24      64.7
12 mu_1       0.3      1.98      7.79e- 3  6.43e-17      34.3
13 mu_1       0.4      1.79      1.53e- 1  7.15e-12      13.1
14 mu_1       0.5      1.85      6.91e- 1  4.87e- 8      33.5
15 mu_1       0.6      1.87      6.80e- 1  3.23e- 7      38.6
16 mu_1       0.7      1.73      1.01e+ 0  2.96e-11      24.2
17 mu_1       0.8      1.50      1.23e- 1  3.96e-17      13.4
18 mu_1       0.9      0.728     2.08e- 4  2.08e-27      20.5
19 mu_0       0.1      0.708     5.56e-12  9.67e-39      57.1
20 mu_0       0.2      1.81      1.86e- 6  6.72e-26      66.6
21 mu_0       0.3      2.00      2.33e- 3  1.92e-18      47.8
22 mu_0       0.4      1.88      6.96e- 2  3.33e-13      17.1
23 mu_0       0.5      1.81      5.03e- 1  3.39e- 9      29.5
24 mu_0       0.6      1.90      5.95e- 1  2.83e- 6      40.1
25 mu_0       0.7      1.68      8.54e- 1  4.03e-10      20.7
26 mu_0       0.8      1.71      2.32e- 1  9.25e-16      19.7
27 mu_0       0.9      0.957     1.23e- 3  1.09e-25      12.9
[1] "Total run time was 232.339 seconds"
