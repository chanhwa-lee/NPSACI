
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3339"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 36 37 38 39 40 41 42 43 44 45 46 
 4  4  7  5  4  2  6  5  4  4  2  3  2  2  4  2  3  1  3  4  2  1  4  4  1  3 
47 48 49 
 6  5  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0125  0.2725  0.5540  0.9302  4.3441 
[1] "event indicator table: "

   0    1 
1985 1354 
[1] "treatment indicator table: "

   0    1 
1425 1914 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1654
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1685
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 9"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 97"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 193.445 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.369 0.0443
 2 mu         0.1   0.2 0.456 0.0432
 3 mu         0.1   0.3 0.567 0.0868
 4 mu         0.1   0.4 0.583 0.0760
 5 mu         0.1   0.5 0.655 0.0879
 6 mu         0.2   0.1 0.313 0.0263
 7 mu         0.2   0.2 0.410 0.0216
 8 mu         0.2   0.3 0.523 0.0400
 9 mu         0.2   0.4 0.563 0.0363
10 mu         0.2   0.5 0.609 0.0413
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.966        0.874    0.0199      3.32
 2 mu         0.2      1.04         1.02     0.426       2.20
 3 mu         0.3      1.01         1.02     0.439       1.60
 4 mu         0.4      1.01         0.999    0.673       1.50
 5 mu         0.5      0.998        1.00     0.689       1.33
 6 mu         0.6      1.01         1.00     0.777       1.40
 7 mu         0.7      1.02         0.989    0.706       1.49
 8 mu         0.8      0.997        0.973    0.600       1.64
 9 mu         0.9      0.954        0.953    0.220       1.79
10 mu_1       0.1      0.996        0.923    0.0472      3.18
11 mu_1       0.2      1.04         1.01     0.519       2.26
12 mu_1       0.3      1.01         1.01     0.472       1.42
13 mu_1       0.4      1.01         0.995    0.653       1.49
14 mu_1       0.5      0.995        1.00     0.687       1.36
15 mu_1       0.6      1.01         1.01     0.750       1.38
16 mu_1       0.7      1.01         0.996    0.690       1.50
17 mu_1       0.8      0.996        0.970    0.594       1.66
18 mu_1       0.9      0.952        0.955    0.203       1.81
19 mu_0       0.1      0.963        0.855    0.0168      3.47
20 mu_0       0.2      1.04         1.02     0.397       2.18
21 mu_0       0.3      1.01         1.02     0.425       1.68
22 mu_0       0.4      1.01         0.996    0.681       1.50
23 mu_0       0.5      1.00         1.01     0.658       1.30
24 mu_0       0.6      1.00         1.01     0.737       1.42
25 mu_0       0.7      1.02         0.986    0.699       1.46
26 mu_0       0.8      1.00         0.986    0.626       1.57
27 mu_0       0.9      0.969        0.934    0.371       1.70
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.51      4.68e-10  2.55e-35    142.  
 2 mu         0.2      0.891     4.63e- 5  8.31e-23     23.3 
 3 mu         0.3      1.09      1.15e- 2  1.06e-15     11.5 
 4 mu         0.4      1.14      2.48e- 1  8.67e-11      6.92
 5 mu         0.5      1.22      7.30e- 1  4.10e- 7     10.4 
 6 mu         0.6      1.34      7.87e- 1  7.32e- 8      7.96
 7 mu         0.7      1.26      6.28e- 1  8.76e-12      7.59
 8 mu         0.8      1.15      9.39e- 2  2.02e-17      9.41
 9 mu         0.9      1.92      1.30e- 4  3.35e-27     46.6 
10 mu_1       0.1      1.36      2.54e- 9  2.29e-34    118.  
11 mu_1       0.2      0.923     1.46e- 4  3.71e-22     13.5 
12 mu_1       0.3      1.13      2.33e- 2  3.16e-15     11.8 
13 mu_1       0.4      1.15      3.46e- 1  1.94e-10      6.99
14 mu_1       0.5      1.23      6.64e- 1  7.32e- 7     11.1 
15 mu_1       0.6      1.34      7.34e- 1  1.02e- 8      8.07
16 mu_1       0.7      1.24      5.31e- 1  1.04e-12      7.08
17 mu_1       0.8      1.16      6.70e- 2  2.10e-18     10.5 
18 mu_1       0.9      1.93      8.28e- 5  3.10e-28     46.4 
19 mu_0       0.1      1.53      2.38e-10  2.95e-36    145.  
20 mu_0       0.2      0.882     2.13e- 5  1.11e-23     26.7 
21 mu_0       0.3      1.08      6.49e- 3  1.61e-16     11.4 
22 mu_0       0.4      1.13      1.66e- 1  1.54e-11      6.87
23 mu_0       0.5      1.20      6.53e- 1  8.68e- 8      9.69
24 mu_0       0.6      1.34      7.20e- 1  1.68e- 7      9.25
25 mu_0       0.7      1.29      7.91e- 1  2.68e-11      8.78
26 mu_0       0.8      1.09      1.91e- 1  9.26e-17      7.06
27 mu_0       0.9      1.83      4.92e- 4  3.07e-26     48.5 
[1] "Total run time was 196.901 seconds"
