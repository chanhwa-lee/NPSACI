
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3605"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 2  3  5  3  2  5  2  2  1  2  3  3  4  1  2  5  2  6  2  6  5  4  2  2  1  4 
46 47 48 49 50 
 5  3  5  2  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02557 0.31807 0.56429 0.93594 5.00000 
[1] "event indicator table: "

   0    1 
2080 1525 
[1] "treatment indicator table: "

   0    1 
1453 2152 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1807
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 51"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1798
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 329.868 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.497 0.0832
 2 mu         0.1   0.2 0.576 0.0940
 3 mu         0.1   0.3 0.630 0.0812
 4 mu         0.1   0.4 0.673 0.0859
 5 mu         0.1   0.5 0.709 0.0963
 6 mu         0.2   0.1 0.373 0.0180
 7 mu         0.2   0.2 0.445 0.0218
 8 mu         0.2   0.3 0.491 0.0258
 9 mu         0.2   0.4 0.532 0.0330
10 mu         0.2   0.5 0.563 0.0332
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.03         0.972    0.0136      2.78
 2 mu         0.2      1.03         1.02     0.305       1.97
 3 mu         0.3      1.02         1.03     0.587       1.76
 4 mu         0.4      0.996        0.996    0.530       1.39
 5 mu         0.5      0.977        0.968    0.633       1.31
 6 mu         0.6      0.983        0.974    0.654       1.35
 7 mu         0.7      1.01         1.00     0.678       1.39
 8 mu         0.8      1.01         1.01     0.628       1.45
 9 mu         0.9      0.981        0.971    0.573       1.68
10 mu_1       0.1      1.03         0.995    0.0279      2.75
11 mu_1       0.2      1.03         1.02     0.367       1.83
12 mu_1       0.3      1.02         1.01     0.615       1.68
13 mu_1       0.4      0.993        1.00     0.527       1.40
14 mu_1       0.5      0.976        0.966    0.649       1.29
15 mu_1       0.6      0.985        0.972    0.641       1.37
16 mu_1       0.7      1.01         1.01     0.686       1.38
17 mu_1       0.8      1.01         1.00     0.623       1.47
18 mu_1       0.9      0.981        0.961    0.564       1.68
19 mu_0       0.1      1.02         0.955    0.0120      2.78
20 mu_0       0.2      1.03         1.01     0.289       2.02
21 mu_0       0.3      1.02         1.02     0.572       1.80
22 mu_0       0.4      0.999        1.00     0.531       1.39
23 mu_0       0.5      0.978        0.965    0.617       1.33
24 mu_0       0.6      0.980        0.976    0.674       1.33
25 mu_0       0.7      1.00         0.993    0.661       1.40
26 mu_0       0.8      1.02         1.02     0.624       1.40
27 mu_0       0.9      0.983        0.974    0.605       1.65
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.23      2.82e-12  3.48e-37     42.8 
 2 mu         0.2      1.32      1.73e- 6  3.39e-24     19.7 
 3 mu         0.3      1.18      2.32e- 3  9.75e-17     14.1 
 4 mu         0.4      0.847     2.59e- 2  1.42e-11      8.89
 5 mu         0.5      0.927     1.36e- 1  1.05e- 7     10.0 
 6 mu         0.6      1.06      5.76e- 1  2.17e- 9      6.92
 7 mu         0.7      1.27      6.23e- 1  2.23e-13      6.01
 8 mu         0.8      1.29      3.65e- 1  4.50e-19     17.4 
 9 mu         0.9      0.902     1.72e- 3  6.63e-29      9.24
10 mu_1       0.1      1.34      1.87e-11  3.12e-36     36.7 
11 mu_1       0.2      1.33      5.32e- 6  1.52e-23     20.6 
12 mu_1       0.3      1.09      5.32e- 3  2.92e-16     15.4 
13 mu_1       0.4      0.831     4.34e- 2  3.18e-11      7.25
14 mu_1       0.5      0.954     1.08e- 1  1.88e- 7     10.6 
15 mu_1       0.6      1.07      4.78e- 1  2.07e-10      6.07
16 mu_1       0.7      1.28      5.47e- 1  1.82e-14      5.83
17 mu_1       0.8      1.28      2.94e- 1  3.21e-20     17.8 
18 mu_1       0.9      0.877     1.22e- 3  4.21e-30      9.48
19 mu_0       0.1      1.22      1.06e-12  3.94e-38     43.5 
20 mu_0       0.2      1.32      8.31e- 7  4.33e-25     19.4 
21 mu_0       0.3      1.21      1.03e- 3  1.42e-17     13.6 
22 mu_0       0.4      0.858     1.82e- 2  2.41e-12      9.99
23 mu_0       0.5      0.899     1.16e- 1  2.13e- 8      9.50
24 mu_0       0.6      1.03      3.87e- 1  5.12e- 9      8.20
25 mu_0       0.7      1.24      5.81e- 1  7.01e-13      6.44
26 mu_0       0.8      1.32      4.33e- 1  2.12e-18     15.8 
27 mu_0       0.9      1.12      5.61e- 3  6.25e-28      9.29
[1] "Total run time was 334.242 seconds"
