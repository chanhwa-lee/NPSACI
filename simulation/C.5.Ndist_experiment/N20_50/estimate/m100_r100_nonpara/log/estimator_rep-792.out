
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3596"
[1] "cluster size dist'n: "

20 21 22 23 24 25 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 
 3  4  2  4  4  2  3  3  2  4  2  4  5  2  3  3  2  4  3  5  2  4  2  4  6  3 
47 48 49 50 
 4  3  4  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02453 0.31815 0.59588 1.00000 7.00000 
[1] "event indicator table: "

   0    1 
2075 1521 
[1] "treatment indicator table: "

   0    1 
1465 2131 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1778
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 56"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1818
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 172.545 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.356 0.0741
 2 mu         0.1   0.2 0.484 0.0936
 3 mu         0.1   0.3 0.585 0.118 
 4 mu         0.1   0.4 0.630 0.125 
 5 mu         0.1   0.5 0.652 0.125 
 6 mu         0.2   0.1 0.351 0.0435
 7 mu         0.2   0.2 0.453 0.0492
 8 mu         0.2   0.3 0.545 0.0589
 9 mu         0.2   0.4 0.590 0.0605
10 mu         0.2   0.5 0.610 0.0568
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      0.930        0.394 0.00000684     11.1 
 2 mu         0.2      0.916        0.869 0.0248          2.49
 3 mu         0.3      0.989        1.00  0.285           1.86
 4 mu         0.4      0.991        0.978 0.623           1.50
 5 mu         0.5      0.995        0.988 0.657           1.28
 6 mu         0.6      0.996        0.989 0.770           1.23
 7 mu         0.7      1.00         1.01  0.692           1.26
 8 mu         0.8      0.999        1.00  0.623           1.42
 9 mu         0.9      1.04         1.05  0.158           1.97
10 mu_1       0.1      0.861        0.577 0.0000243       7.01
11 mu_1       0.2      0.935        0.910 0.0443          2.29
12 mu_1       0.3      0.995        1.00  0.306           1.75
13 mu_1       0.4      0.991        0.972 0.672           1.45
14 mu_1       0.5      0.995        0.991 0.651           1.28
15 mu_1       0.6      0.997        0.987 0.771           1.22
16 mu_1       0.7      1.00         1.01  0.691           1.27
17 mu_1       0.8      0.999        0.993 0.604           1.46
18 mu_1       0.9      1.05         1.05  0.147           1.98
19 mu_0       0.1      0.937        0.370 0.00000490     12.1 
20 mu_0       0.2      0.912        0.849 0.0200          2.54
21 mu_0       0.3      0.986        1.01  0.276           1.91
22 mu_0       0.4      0.991        0.976 0.589           1.53
23 mu_0       0.5      0.994        0.986 0.663           1.29
24 mu_0       0.6      0.994        0.980 0.758           1.25
25 mu_0       0.7      1.00         1.01  0.693           1.30
26 mu_0       0.8      0.996        0.998 0.686           1.29
27 mu_0       0.9      1.02         1.04  0.256           1.84
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      2.19      4.98e-13  1.43e-36    135.  
 2 mu         0.2      2.24      4.64e- 7  7.83e-24    112.  
 3 mu         0.3      1.41      8.62e- 4  1.71e-16     18.0 
 4 mu         0.4      1.15      6.19e- 2  2.18e-11     13.6 
 5 mu         0.5      0.948     3.40e- 1  1.55e- 7      5.56
 6 mu         0.6      1.02      7.39e- 1  4.48e- 9      3.94
 7 mu         0.7      1.10      6.62e- 1  9.74e-14      4.38
 8 mu         0.8      1.10      1.76e- 1  1.72e-20      6.05
 9 mu         0.9      1.38      5.10e- 4  2.82e-32     23.4 
10 mu_1       0.1      2.93      3.26e-12  1.31e-35    187.  
11 mu_1       0.2      1.92      1.49e- 6  3.58e-23     77.7 
12 mu_1       0.3      1.37      1.77e- 3  5.23e-16     14.5 
13 mu_1       0.4      1.11      9.37e- 2  4.99e-11     12.0 
14 mu_1       0.5      0.949     3.74e- 1  2.83e- 7      5.56
15 mu_1       0.6      1.04      8.73e- 1  8.30e-10      4.03
16 mu_1       0.7      1.10      5.85e- 1  1.55e-14      4.38
17 mu_1       0.8      1.12      1.34e- 1  2.39e-21      6.46
18 mu_1       0.9      1.37      3.39e- 4  3.48e-33     23.8 
19 mu_0       0.1      2.11      1.92e-13  1.35e-37    129.  
20 mu_0       0.2      2.32      2.16e- 7  8.33e-25    121.  
21 mu_0       0.3      1.43      4.75e- 4  2.08e-17     20.6 
22 mu_0       0.4      1.18      4.07e- 2  3.09e-12     14.6 
23 mu_0       0.5      0.947     2.81e- 1  2.63e- 8      5.56
24 mu_0       0.6      0.996     6.60e- 1  9.96e- 9      3.80
25 mu_0       0.7      1.10      5.51e- 1  2.89e-13      4.38
26 mu_0       0.8      1.03      2.83e- 1  7.63e-20      4.56
27 mu_0       0.9      1.48      1.74e- 3  2.50e-31     19.9 
[1] "Total run time was 175.301 seconds"
