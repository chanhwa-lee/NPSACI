
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3533"
[1] "cluster size dist'n: "

20 21 22 24 25 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 
 4  4  4  3  1  3  4  1  5  4  5  3  3  8  5  2  3  3  4  4  3  2  5  3  5  1 
48 49 50 
 2  2  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03544 0.33444 0.61058 1.00000 5.07762 
[1] "event indicator table: "

   0    1 
2110 1423 
[1] "treatment indicator table: "

   0    1 
1248 2285 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1646
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1887
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 255.836 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.569 0.104 
 2 mu         0.1   0.2 0.657 0.119 
 3 mu         0.1   0.3 0.741 0.126 
 4 mu         0.1   0.4 0.798 0.135 
 5 mu         0.1   0.5 0.814 0.141 
 6 mu         0.2   0.1 0.398 0.0431
 7 mu         0.2   0.2 0.473 0.0431
 8 mu         0.2   0.3 0.542 0.0315
 9 mu         0.2   0.4 0.588 0.0323
10 mu         0.2   0.5 0.598 0.0277
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.35         0.871    0.0129     18.7 
 2 mu         0.2      1.05         1.02     0.261       2.15
 3 mu         0.3      1.01         1.01     0.442       1.93
 4 mu         0.4      0.996        0.973    0.530       1.67
 5 mu         0.5      1.01         1.00     0.573       1.57
 6 mu         0.6      1.01         1.00     0.685       1.54
 7 mu         0.7      0.988        0.976    0.611       1.29
 8 mu         0.8      0.986        0.981    0.651       1.38
 9 mu         0.9      1.00         1.03     0.423       1.59
10 mu_1       0.1      1.15         0.943    0.0317      8.89
11 mu_1       0.2      1.04         1.06     0.267       1.99
12 mu_1       0.3      1.00         1.01     0.421       1.95
13 mu_1       0.4      0.996        0.981    0.543       1.61
14 mu_1       0.5      1.01         1.01     0.585       1.63
15 mu_1       0.6      1.01         1.00     0.685       1.49
16 mu_1       0.7      0.987        0.975    0.617       1.28
17 mu_1       0.8      0.986        0.985    0.634       1.40
18 mu_1       0.9      1.01         1.02     0.422       1.63
19 mu_0       0.1      1.37         0.868    0.0108     20.3 
20 mu_0       0.2      1.06         1.00     0.238       2.28
21 mu_0       0.3      1.01         1.02     0.430       1.92
22 mu_0       0.4      0.995        0.955    0.496       1.71
23 mu_0       0.5      1.00         0.995    0.560       1.51
24 mu_0       0.6      1.01         1.01     0.670       1.61
25 mu_0       0.7      0.990        0.996    0.599       1.30
26 mu_0       0.8      0.983        0.960    0.656       1.31
27 mu_0       0.9      0.991        1.02     0.436       1.49
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.960     1.59e-14  6.26e-37     79.7 
 2 mu         0.2      1.11      8.79e- 8  3.44e-24     47.1 
 3 mu         0.3      0.947     1.07e- 4  5.25e-17     16.5 
 4 mu         0.4      1.20      1.66e- 2  2.52e-12     10.6 
 5 mu         0.5      1.13      2.71e- 1  8.64e- 9     10.3 
 6 mu         0.6      1.03      4.42e- 1  1.09e- 7      6.86
 7 mu         0.7      1.12      6.03e- 1  3.75e-12      9.93
 8 mu         0.8      1.39      3.56e- 1  9.87e-19     11.8 
 9 mu         0.9      1.49      1.77e- 3  2.30e-30     16.3 
10 mu_1       0.1      1.30      1.05e-13  5.73e-36     99.7 
11 mu_1       0.2      1.01      2.74e- 7  1.57e-23     29.5 
12 mu_1       0.3      0.971     2.59e- 4  1.70e-16     12.9 
13 mu_1       0.4      1.22      2.58e- 2  6.13e-12      9.52
14 mu_1       0.5      1.11      2.32e- 1  1.73e- 8     10.9 
15 mu_1       0.6      1.03      3.92e- 1  3.02e- 8      6.41
16 mu_1       0.7      1.13      6.23e- 1  8.93e-13      9.90
17 mu_1       0.8      1.42      3.16e- 1  2.06e-19     11.8 
18 mu_1       0.9      1.50      1.23e- 3  4.27e-31     17.5 
19 mu_0       0.1      0.923     6.04e-15  0            77.5 
20 mu_0       0.2      1.14      3.50e- 8  0            51.6 
21 mu_0       0.3      0.936     4.08e- 5  0            18.1 
22 mu_0       0.4      1.19      9.16e- 3  0            11.3 
23 mu_0       0.5      1.16      1.98e- 1  0             9.83
24 mu_0       0.6      1.03      4.07e- 1  0             8.15
25 mu_0       0.7      1.09      4.78e- 1  0            10.0 
26 mu_0       0.8      1.31      3.28e- 1  0            11.8 
27 mu_0       0.9      1.36      3.01e- 3  0            10.3 
[1] "Total run time was 260.271 seconds"
