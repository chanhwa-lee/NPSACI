
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3641"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 3  3  1  3  3  3  3  2  5  3  1  2  3  6  5  3  1  3  2  5  3  2  1  4  3  1 
46 47 48 49 50 
 5  6  4  5  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.06186 0.42719 0.67117 1.00000 5.00000 
[1] "event indicator table: "

   0    1 
2157 1484 
[1] "treatment indicator table: "

   0    1 
1216 2425 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1816
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1825
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 241.485 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.304 0.0809
 2 mu         0.1   0.2 0.364 0.0946
 3 mu         0.1   0.3 0.421 0.106 
 4 mu         0.1   0.4 0.476 0.116 
 5 mu         0.1   0.5 0.547 0.132 
 6 mu         0.2   0.1 0.285 0.0410
 7 mu         0.2   0.2 0.335 0.0433
 8 mu         0.2   0.3 0.378 0.0470
 9 mu         0.2   0.4 0.433 0.0461
10 mu         0.2   0.5 0.500 0.0622
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.803       0.0775  1.44e-13     12.3 
 2 mu         0.2      0.852       0.687   4.02e- 7      4.53
 3 mu         0.3      0.927       0.907   6.75e- 4      2.12
 4 mu         0.4      0.951       0.973   4.39e- 2      1.68
 5 mu         0.5      0.977       0.998   3.90e- 1      1.54
 6 mu         0.6      1.01        0.989   6.29e- 1      1.75
 7 mu         0.7      1.01        0.992   7.49e- 1      1.56
 8 mu         0.8      0.994       0.982   7.20e- 1      1.43
 9 mu         0.9      1.03        0.991   1.61e- 1      2.06
10 mu_1       0.1      0.765       0.156   7.54e-13     10.2 
11 mu_1       0.2      0.875       0.755   1.07e- 6      3.69
12 mu_1       0.3      0.938       0.920   1.22e- 3      2.06
13 mu_1       0.4      0.955       0.984   6.07e- 2      1.62
14 mu_1       0.5      0.982       1.00    4.47e- 1      1.52
15 mu_1       0.6      1.01        0.994   6.42e- 1      1.75
16 mu_1       0.7      1.01        0.994   7.40e- 1      1.54
17 mu_1       0.8      0.994       0.981   7.27e- 1      1.47
18 mu_1       0.9      1.03        0.991   1.50e- 1      2.06
19 mu_0       0.1      0.808       0.0688  7.61e-14     13.4 
20 mu_0       0.2      0.846       0.649   2.36e- 7      4.74
21 mu_0       0.3      0.922       0.912   4.44e- 4      2.14
22 mu_0       0.4      0.948       0.953   3.28e- 2      1.72
23 mu_0       0.5      0.973       0.987   3.32e- 1      1.56
24 mu_0       0.6      1.01        0.991   6.11e- 1      1.74
25 mu_0       0.7      1.02        0.993   7.47e- 1      1.60
26 mu_0       0.8      0.995       0.984   6.92e- 1      1.36
27 mu_0       0.9      1.03        1.00    2.65e- 1      2.09
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       1.96     1.17e-14  5.96e-44    187.  
 2 mu         0.2       1.32     2.20e- 8  1.33e-29     47.8 
 3 mu         0.3       1.51     1.00e- 4  2.87e-21     41.1 
 4 mu         0.4       2.05     1.20e- 2  2.10e-15     85.5 
 5 mu         0.5       1.39     8.80e- 2  6.53e-11     36.0 
 6 mu         0.6       1.08     5.00e- 1  5.28e- 9      5.95
 7 mu         0.7       1.10     8.47e- 1  8.61e-14      7.40
 8 mu         0.8       1.29     3.18e- 1  1.01e-20      8.65
 9 mu         0.9       1.26     3.29e- 3  8.29e-33     20.0 
10 mu_1       0.1       2.22     7.23e-14  5.72e-43    203.  
11 mu_1       0.2       1.31     8.19e- 8  6.36e-29     26.8 
12 mu_1       0.3       1.64     2.37e- 4  9.20e-21     43.9 
13 mu_1       0.4       2.01     1.56e- 2  5.04e-15     86.4 
14 mu_1       0.5       1.31     1.11e- 1  1.25e-10     29.1 
15 mu_1       0.6       1.07     5.67e- 1  9.57e-10      5.89
16 mu_1       0.7       1.11     8.26e- 1  1.34e-14      7.55
17 mu_1       0.8       1.30     3.05e- 1  1.38e-21      9.27
18 mu_1       0.9       1.26     2.51e- 3  1.00e-33     20.9 
19 mu_0       0.1       1.93     4.98e-15  0           185.  
20 mu_0       0.2       1.32     7.13e- 9  0            53.3 
21 mu_0       0.3       1.46     4.15e- 5  0            39.9 
22 mu_0       0.4       2.07     6.87e- 3  0            84.9 
23 mu_0       0.5       1.47     7.45e- 2  0            42.9 
24 mu_0       0.6       1.09     3.64e- 1  0             6.05
25 mu_0       0.7       1.09     8.00e- 1  0             7.05
26 mu_0       0.8       1.26     4.38e- 1  0             6.75
27 mu_0       0.9       1.24     8.95e- 3  0            13.2 
[1] "Total run time was 245.314 seconds"
