
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3288"
[1] "cluster size dist'n: "

20 21 22 23 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 
 9  1  5  8  5  6  2  4  5  2  6  1  2  3  3  2  2  2  3  2  2  3  3  3  2  3 
47 48 49 50 
 3  2  3  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03236 0.35791 0.60793 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
1974 1314 
[1] "treatment indicator table: "

   0    1 
1203 2085 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1575
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1713
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 179.525 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.320 0.0729
 2 mu         0.1   0.2 0.394 0.103 
 3 mu         0.1   0.3 0.407 0.0924
 4 mu         0.1   0.4 0.403 0.0886
 5 mu         0.1   0.5 0.432 0.0927
 6 mu         0.2   0.1 0.442 0.0676
 7 mu         0.2   0.2 0.527 0.0857
 8 mu         0.2   0.3 0.579 0.0822
 9 mu         0.2   0.4 0.597 0.0808
10 mu         0.2   0.5 0.647 0.0859
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      0.716        0.154 0.00000477     10.5 
 2 mu         0.2      1.18         0.806 0.0153         12.1 
 3 mu         0.3      1.11         1.04  0.208           3.69
 4 mu         0.4      1.04         1.01  0.555           1.69
 5 mu         0.5      1.02         1.03  0.702           1.38
 6 mu         0.6      1.01         0.992 0.797           1.26
 7 mu         0.7      0.995        0.991 0.691           1.27
 8 mu         0.8      0.983        0.983 0.656           1.33
 9 mu         0.9      0.973        0.934 0.226           2.12
10 mu_1       0.1      0.956        0.326 0.0000163      15.6 
11 mu_1       0.2      1.21         0.932 0.0266          9.06
12 mu_1       0.3      1.10         1.05  0.254           2.94
13 mu_1       0.4      1.04         1.00  0.596           1.56
14 mu_1       0.5      1.02         1.02  0.690           1.36
15 mu_1       0.6      1.00         0.993 0.787           1.26
16 mu_1       0.7      0.995        0.989 0.693           1.28
17 mu_1       0.8      0.982        0.986 0.636           1.32
18 mu_1       0.9      0.974        0.920 0.217           2.13
19 mu_0       0.1      0.690        0.134 0.00000349      9.90
20 mu_0       0.2      1.17         0.785 0.0124         12.9 
21 mu_0       0.3      1.11         1.05  0.189           4.02
22 mu_0       0.4      1.05         1.02  0.519           1.78
23 mu_0       0.5      1.02         1.03  0.713           1.41
24 mu_0       0.6      1.01         0.991 0.796           1.27
25 mu_0       0.7      0.996        1.01  0.687           1.24
26 mu_0       0.8      0.987        0.970 0.698           1.39
27 mu_0       0.9      0.967        0.960 0.311           2.03
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.02      9.59e-12  3.82e-38    102.  
 2 mu         0.2      1.16      2.41e- 6  2.66e-25    105.  
 3 mu         0.3      0.617     1.01e- 3  7.59e-18     14.0 
 4 mu         0.4      1.06      4.11e- 2  1.32e-12     14.5 
 5 mu         0.5      1.16      3.94e- 1  1.34e- 8      6.08
 6 mu         0.6      1.05      8.11e- 1  1.04e- 7      4.81
 7 mu         0.7      1.04      8.27e- 1  2.31e-12      5.92
 8 mu         0.8      0.957     2.27e- 1  3.54e-19      5.89
 9 mu         0.9      1.30      1.63e- 3  3.68e-31     50.9 
10 mu_1       0.1      1.50      6.46e-11  3.65e-37    149.  
11 mu_1       0.2      0.946     7.81e- 6  1.27e-24     76.3 
12 mu_1       0.3      0.702     2.34e- 3  2.42e-17     14.2 
13 mu_1       0.4      1.13      6.20e- 2  3.14e-12     13.2 
14 mu_1       0.5      1.15      5.01e- 1  2.56e- 8      5.69
15 mu_1       0.6      1.05      7.80e- 1  2.53e- 8      4.81
16 mu_1       0.7      1.03      8.05e- 1  4.81e-13      6.04
17 mu_1       0.8      0.951     1.87e- 1  6.46e-20      6.26
18 mu_1       0.9      1.31      1.10e- 3  5.96e-32     54.0 
19 mu_0       0.1      0.971     3.47e-12  1.89e-39     97.0 
20 mu_0       0.2      1.21      9.29e- 7  1.48e-26    112.  
21 mu_0       0.3      0.580     4.39e- 4  4.82e-19     14.3 
22 mu_0       0.4      1.02      2.32e- 2  9.74e-14     15.4 
23 mu_0       0.5      1.16      2.92e- 1  1.19e- 9      6.79
24 mu_0       0.6      1.05      8.08e- 1  2.22e- 7      4.81
25 mu_0       0.7      1.06      8.17e- 1  6.57e-12      5.64
26 mu_0       0.8      0.984     3.96e- 1  1.51e-18      5.70
27 mu_0       0.9      1.20      5.68e- 3  3.14e-30     22.6 
[1] "Total run time was 182.799 seconds"
