
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3519"
[1] "cluster size dist'n: "

20 21 22 23 24 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 
 7  2  3  1  2  1  6  1  3  5  6  7  2  3  1  5  1  6  3  2  4  6  1  2  3  5 
47 48 49 50 
 3  3  5  1 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02215 0.29342 0.56167 0.96405 6.00000 
[1] "event indicator table: "

   0    1 
2065 1454 
[1] "treatment indicator table: "

   0    1 
1428 2091 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1706
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 42"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1813
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 183.668 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.403 0.0791
 2 mu         0.1   0.2 0.496 0.0995
 3 mu         0.1   0.3 0.540 0.102 
 4 mu         0.1   0.4 0.601 0.113 
 5 mu         0.1   0.5 0.695 0.127 
 6 mu         0.2   0.1 0.358 0.0527
 7 mu         0.2   0.2 0.447 0.0613
 8 mu         0.2   0.3 0.498 0.0494
 9 mu         0.2   0.4 0.542 0.0528
10 mu         0.2   0.5 0.647 0.0560
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.948        0.440 0.0000923     12.8 
 2 mu         0.2      0.984        0.946 0.0575         3.19
 3 mu         0.3      1.02         0.996 0.551          2.27
 4 mu         0.4      1.04         1.03  0.718          1.65
 5 mu         0.5      1.00         0.984 0.708          1.46
 6 mu         0.6      0.984        0.988 0.662          1.21
 7 mu         0.7      1.00         1.00  0.721          1.30
 8 mu         0.8      1.01         1.00  0.552          1.63
 9 mu         0.9      0.943        0.917 0.0232         3.09
10 mu_1       0.1      0.941        0.730 0.000288       7.53
11 mu_1       0.2      0.989        0.943 0.0939         3.38
12 mu_1       0.3      1.03         1.02  0.598          2.06
13 mu_1       0.4      1.04         1.03  0.752          1.59
14 mu_1       0.5      0.996        0.990 0.705          1.44
15 mu_1       0.6      0.985        0.989 0.662          1.22
16 mu_1       0.7      1.00         1.01  0.721          1.29
17 mu_1       0.8      1.00         1.00  0.524          1.66
18 mu_1       0.9      0.938        0.904 0.0199         3.15
19 mu_0       0.1      0.949        0.406 0.0000705     13.4 
20 mu_0       0.2      0.982        0.934 0.0484         3.15
21 mu_0       0.3      1.02         0.992 0.512          2.36
22 mu_0       0.4      1.04         1.03  0.690          1.69
23 mu_0       0.5      1.01         0.984 0.712          1.49
24 mu_0       0.6      0.982        0.983 0.662          1.20
25 mu_0       0.7      0.999        1.00  0.723          1.32
26 mu_0       0.8      1.01         0.997 0.657          1.51
27 mu_0       0.9      0.986        1.00  0.0528         2.58
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.0934     3.95e-11  3.33e-31      2.92
 2 mu         0.2     0.777      8.91e- 6  2.87e-20     16.2 
 3 mu         0.3     0.874      3.55e- 3  4.80e-14     16.0 
 4 mu         0.4     1.03       1.33e- 1  1.11e- 9      6.54
 5 mu         0.5     1.28       7.76e- 1  2.37e- 6     12.7 
 6 mu         0.6     1.24       9.38e- 1  2.09e- 5      8.58
 7 mu         0.7     1.30       5.33e- 1  2.71e- 9      6.65
 8 mu         0.8     1.49       8.10e- 2  3.59e-15     12.5 
 9 mu         0.9     8.81       1.16e- 4  9.55e-26    220.  
10 mu_1       0.1     0.208      2.39e-10  3.08e-30      6.12
11 mu_1       0.2     0.920      2.75e- 5  1.36e-19     18.9 
12 mu_1       0.3     0.861      7.55e- 3  1.52e-13     13.3 
13 mu_1       0.4     1.10       1.98e- 1  2.63e- 9      6.88
14 mu_1       0.5     1.27       8.58e- 1  4.50e- 6     13.5 
15 mu_1       0.6     1.24       8.21e- 1  7.97e- 6      7.59
16 mu_1       0.7     1.30       4.57e- 1  8.87e-10      6.73
17 mu_1       0.8     1.58       6.10e- 2  1.03e-15     14.7 
18 mu_1       0.9     9.44       8.14e- 5  2.43e-26    244.  
19 mu_0       0.1     0.0806     1.73e-11  0             2.57
20 mu_0       0.2     0.741      4.36e- 6  0            15.6 
21 mu_0       0.3     0.879      2.08e- 3  0            17.1 
22 mu_0       0.4     0.989      8.57e- 2  0             6.31
23 mu_0       0.5     1.29       5.68e- 1  0            11.9 
24 mu_0       0.6     1.24       9.94e- 1  0            10.1 
25 mu_0       0.7     1.30       7.09e- 1  0             6.47
26 mu_0       0.8     1.14       1.16e- 1  0             8.47
27 mu_0       0.9     3.16       1.45e- 4  0            77.4 
[1] "Total run time was 186.369 seconds"
