
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3583"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 38 39 41 43 44 45 46 47 48 
 4  5  3  1  3  2  3  5  4  1  1  3  5  1  4  5  3  2  4  6  7  4  4  4  4  1 
49 50 
 7  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02985 0.33373 0.58748 0.98530 6.00000 
[1] "event indicator table: "

   0    1 
2107 1476 
[1] "treatment indicator table: "

   0    1 
1360 2223 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1826
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 34"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 77"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1757
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 177.397 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.364 0.0810
 2 mu         0.1   0.2 0.437 0.0784
 3 mu         0.1   0.3 0.553 0.108 
 4 mu         0.1   0.4 0.597 0.122 
 5 mu         0.1   0.5 0.630 0.108 
 6 mu         0.2   0.1 0.350 0.0363
 7 mu         0.2   0.2 0.414 0.0364
 8 mu         0.2   0.3 0.494 0.0443
 9 mu         0.2   0.4 0.541 0.0492
10 mu         0.2   0.5 0.578 0.0452
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      0.904        0.523 0.00000855      9.76
 2 mu         0.2      0.957        0.968 0.0196          2.84
 3 mu         0.3      1.01         0.964 0.373           2.19
 4 mu         0.4      1.02         1.01  0.653           1.52
 5 mu         0.5      1.02         1.02  0.718           1.29
 6 mu         0.6      1.02         1.00  0.813           1.22
 7 mu         0.7      0.995        0.996 0.683           1.28
 8 mu         0.8      0.975        0.978 0.592           1.30
 9 mu         0.9      1.01         0.980 0.258           2.16
10 mu_1       0.1      0.940        0.677 0.0000286       8.34
11 mu_1       0.2      0.975        0.956 0.0341          2.89
12 mu_1       0.3      1.02         0.995 0.463           2.03
13 mu_1       0.4      1.02         1.02  0.654           1.45
14 mu_1       0.5      1.02         1.02  0.720           1.30
15 mu_1       0.6      1.02         1.00  0.811           1.25
16 mu_1       0.7      0.992        0.992 0.682           1.29
17 mu_1       0.8      0.975        0.983 0.571           1.32
18 mu_1       0.9      1.01         0.973 0.246           2.18
19 mu_0       0.1      0.900        0.494 0.00000633      9.92
20 mu_0       0.2      0.952        0.969 0.0159          2.83
21 mu_0       0.3      1.01         0.947 0.334           2.25
22 mu_0       0.4      1.02         1.01  0.652           1.57
23 mu_0       0.5      1.02         1.01  0.715           1.31
24 mu_0       0.6      1.02         1.00  0.816           1.24
25 mu_0       0.7      1.00         1.00  0.684           1.32
26 mu_0       0.8      0.976        0.977 0.664           1.25
27 mu_0       0.9      1.01         0.987 0.361           2.05
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.61      6.70e-13  2.09e-35    150.  
 2 mu         0.2      1.18      4.70e- 7  5.10e-24     44.3 
 3 mu         0.3      1.15      5.06e- 4  2.20e-17     13.2 
 4 mu         0.4      0.990     2.85e- 2  1.05e-12     10.9 
 5 mu         0.5      0.769     3.53e- 1  4.22e- 9      4.53
 6 mu         0.6      0.959     6.30e- 1  3.45e- 6      5.40
 7 mu         0.7      1.11      9.82e- 1  1.07e- 9      3.70
 8 mu         0.8      1.04      2.91e- 1  2.13e-15      6.52
 9 mu         0.9      0.955     1.38e- 3  1.59e-25     19.7 
10 mu_1       0.1      1.66      4.93e-12  2.04e-34    145.  
11 mu_1       0.2      1.07      1.55e- 6  2.49e-23     35.8 
12 mu_1       0.3      1.17      1.18e- 3  7.13e-17     15.0 
13 mu_1       0.4      0.933     4.35e- 2  2.56e-12      9.24
14 mu_1       0.5      0.776     4.13e- 1  8.23e- 9      5.08
15 mu_1       0.6      0.993     6.92e- 1  7.19e- 7      5.05
16 mu_1       0.7      1.11      1.02e+ 0  2.84e-10      3.61
17 mu_1       0.8      1.03      2.29e- 1  4.96e-16      6.91
18 mu_1       0.9      0.962     1.03e- 3  3.29e-26     20.3 
19 mu_0       0.1      1.60      2.76e-13  0           150.  
20 mu_0       0.2      1.20      2.09e- 7  0            50.0 
21 mu_0       0.3      1.14      2.41e- 4  0            12.5 
22 mu_0       0.4      1.03      1.46e- 2  0            12.0 
23 mu_0       0.5      0.761     2.30e- 1  0             4.27
24 mu_0       0.6      0.907     5.35e- 1  0             5.93
25 mu_0       0.7      1.12      7.97e- 1  0             4.02
26 mu_0       0.8      1.07      4.47e- 1  0             5.85
27 mu_0       0.9      0.895     3.43e- 3  0            14.4 
[1] "Total run time was 180.357 seconds"
