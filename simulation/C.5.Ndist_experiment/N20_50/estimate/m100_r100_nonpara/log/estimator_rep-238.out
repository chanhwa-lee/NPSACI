
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3563"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 5  2  5  4  2  2  1  2  4  2  3  4  3  3  1  6  2  2  3  3  2  3  3  8  5  3 
46 47 48 49 50 
 2  6  4  3  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03981 0.35586 0.61579 1.00000 5.00000 
[1] "event indicator table: "

   0    1 
2155 1408 
[1] "treatment indicator table: "

   0    1 
1300 2263 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1760
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 44"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1803
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 273.416 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.387 0.0579
 2 mu         0.1   0.2 0.435 0.0458
 3 mu         0.1   0.3 0.436 0.0466
 4 mu         0.1   0.4 0.540 0.0624
 5 mu         0.1   0.5 0.571 0.0720
 6 mu         0.2   0.1 0.337 0.0328
 7 mu         0.2   0.2 0.389 0.0284
 8 mu         0.2   0.3 0.411 0.0363
 9 mu         0.2   0.4 0.499 0.0332
10 mu         0.2   0.5 0.532 0.0374
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.940        0.803   0.00128      3.39
 2 mu         0.2      0.980        0.953   0.140        2.24
 3 mu         0.3      1.00         0.961   0.460        1.75
 4 mu         0.4      1.02         1.01    0.497        1.43
 5 mu         0.5      1.01         0.999   0.624        1.76
 6 mu         0.6      0.990        0.986   0.641        1.56
 7 mu         0.7      0.988        0.981   0.637        1.31
 8 mu         0.8      0.986        0.984   0.673        1.37
 9 mu         0.9      0.990        0.991   0.444        1.62
10 mu_1       0.1      0.988        0.871   0.00346      3.38
11 mu_1       0.2      0.986        0.930   0.196        2.05
12 mu_1       0.3      1.01         0.979   0.468        1.70
13 mu_1       0.4      1.02         1.03    0.498        1.40
14 mu_1       0.5      1.01         1.00    0.606        1.77
15 mu_1       0.6      0.990        0.988   0.630        1.53
16 mu_1       0.7      0.988        0.988   0.644        1.31
17 mu_1       0.8      0.986        0.982   0.646        1.37
18 mu_1       0.9      0.990        0.994   0.442        1.60
19 mu_0       0.1      0.935        0.765   0.00104      3.39
20 mu_0       0.2      0.978        0.941   0.126        2.29
21 mu_0       0.3      1.00         0.962   0.456        1.78
22 mu_0       0.4      1.02         1.01    0.497        1.45
23 mu_0       0.5      1.01         0.995   0.619        1.75
24 mu_0       0.6      0.991        0.991   0.658        1.61
25 mu_0       0.7      0.988        0.989   0.622        1.30
26 mu_0       0.8      0.984        0.958   0.707        1.37
27 mu_0       0.9      0.986        0.962   0.471        1.73
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.159     2.02e-12  4.17e-41      9.64
 2 mu         0.2      0.505     1.18e- 6  3.67e-28     15.8 
 3 mu         0.3      0.956     8.18e- 4  1.37e-20     13.3 
 4 mu         0.4      1.16      5.39e- 2  3.23e-15     14.8 
 5 mu         0.5      1.07      4.32e- 1  4.75e-11      5.94
 6 mu         0.6      1.11      4.31e- 1  1.21e- 7      6.90
 7 mu         0.7      1.01      4.47e- 1  1.76e-11      9.94
 8 mu         0.8      0.965     1.45e- 1  1.37e-17      9.24
 9 mu         0.9      1.39      2.63e- 4  2.27e-28     15.9 
10 mu_1       0.1      0.275     1.24e-11  4.17e-40     15.3 
11 mu_1       0.2      0.586     3.89e- 6  1.84e-27     12.6 
12 mu_1       0.3      1.05      1.67e- 3  4.57e-20     13.0 
13 mu_1       0.4      1.16      8.59e- 2  8.07e-15     13.6 
14 mu_1       0.5      1.07      5.15e- 1  9.49e-11      5.84
15 mu_1       0.6      1.11      3.51e- 1  6.67e- 8      7.10
16 mu_1       0.7      0.996     3.88e- 1  4.01e-12     10.1 
17 mu_1       0.8      0.974     1.13e- 1  2.73e-18      9.24
18 mu_1       0.9      1.39      1.64e- 4  4.02e-29     15.9 
19 mu_0       0.1      0.146     8.70e-13  0             9.01
20 mu_0       0.2      0.484     4.31e- 7  0            16.6 
21 mu_0       0.3      0.915     4.53e- 4  0            13.5 
22 mu_0       0.4      1.17      4.35e- 2  0            15.6 
23 mu_0       0.5      1.07      3.19e- 1  0             6.21
24 mu_0       0.6      1.12      5.66e- 1  0             6.61
25 mu_0       0.7      1.03      3.28e- 1  0             9.47
26 mu_0       0.8      0.931     1.84e- 1  0             9.24
27 mu_0       0.9      1.31      8.83e- 4  0            15.9 
[1] "Total run time was 277.923 seconds"
