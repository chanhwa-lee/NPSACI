
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3575"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 
 1  3  5  6  4  1  1  1  7  2  2  4  4  4  3  3  3  7  2  5  3  2  2  5  3  1 
47 48 49 50 
 1  3  5  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04268 0.35736 0.63321 1.00000 5.44558 
[1] "event indicator table: "

   0    1 
2067 1508 
[1] "treatment indicator table: "

   0    1 
1298 2277 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1857
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 42"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 72"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1718
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 23"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 95"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 253.053 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.377 0.0942
 2 mu         0.1   0.2 0.475 0.103 
 3 mu         0.1   0.3 0.534 0.0953
 4 mu         0.1   0.4 0.570 0.103 
 5 mu         0.1   0.5 0.618 0.104 
 6 mu         0.2   0.1 0.357 0.0563
 7 mu         0.2   0.2 0.454 0.0560
 8 mu         0.2   0.3 0.513 0.0444
 9 mu         0.2   0.4 0.555 0.0453
10 mu         0.2   0.5 0.601 0.0446
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      0.951        0.378 0.00000711     10.2 
 2 mu         0.2      0.976        0.922 0.0208          3.86
 3 mu         0.3      1.01         0.954 0.494           2.21
 4 mu         0.4      1.02         1.02  0.539           1.75
 5 mu         0.5      1.02         0.992 0.700           1.57
 6 mu         0.6      1.01         1.01  0.702           1.36
 7 mu         0.7      0.984        0.973 0.719           1.35
 8 mu         0.8      0.966        0.967 0.581           1.44
 9 mu         0.9      0.978        0.917 0.209           1.95
10 mu_1       0.1      0.988        0.626 0.0000243       8.03
11 mu_1       0.2      0.984        0.956 0.0376          3.22
12 mu_1       0.3      1.01         0.958 0.506           2.05
13 mu_1       0.4      1.02         1.02  0.573           1.62
14 mu_1       0.5      1.02         0.995 0.676           1.54
15 mu_1       0.6      1.00         0.996 0.711           1.34
16 mu_1       0.7      0.982        0.971 0.718           1.35
17 mu_1       0.8      0.965        0.970 0.575           1.44
18 mu_1       0.9      0.979        0.916 0.191           1.97
19 mu_0       0.1      0.947        0.352 0.00000521     10.4 
20 mu_0       0.2      0.974        0.901 0.0166          4.02
21 mu_0       0.3      1.00         0.955 0.438           2.29
22 mu_0       0.4      1.02         1.01  0.517           1.84
23 mu_0       0.5      1.02         0.999 0.693           1.61
24 mu_0       0.6      1.01         1.01  0.687           1.40
25 mu_0       0.7      0.988        0.980 0.722           1.34
26 mu_0       0.8      0.970        0.967 0.606           1.47
27 mu_0       0.9      0.974        0.963 0.305           1.70
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.218     1.57e-13  2.06e-39     11.8 
 2 mu         0.2      1.10      1.69e- 7  9.03e-26     47.9 
 3 mu         0.3      1.23      3.24e- 4  6.67e-18     28.7 
 4 mu         0.4      1.29      3.21e- 2  2.01e-12     17.2 
 5 mu         0.5      1.15      2.99e- 1  2.78e- 8     10.9 
 6 mu         0.6      0.993     5.10e- 1  3.33e- 5      7.74
 7 mu         0.7      1.09      6.00e- 1  9.45e- 9      6.76
 8 mu         0.8      1.31      3.24e- 1  4.25e-14      7.33
 9 mu         0.9      1.49      9.50e- 4  1.27e-23     24.6 
10 mu_1       0.1      0.411     9.46e-13  1.89e-38     20.8 
11 mu_1       0.2      1.23      5.71e- 7  4.15e-25     46.7 
12 mu_1       0.3      1.26      6.54e- 4  2.04e-17     29.9 
13 mu_1       0.4      1.29      5.31e- 2  4.63e-12     15.7 
14 mu_1       0.5      1.12      3.02e- 1  5.12e- 8      9.34
15 mu_1       0.6      0.980     5.36e- 1  1.19e- 5      7.81
16 mu_1       0.7      1.11      6.38e- 1  2.64e- 9      7.30
17 mu_1       0.8      1.32      2.49e- 1  1.04e-14      7.13
18 mu_1       0.9      1.48      6.84e- 4  2.75e-24     25.2 
19 mu_0       0.1      0.196     6.95e-14  1.83e-40     10.8 
20 mu_0       0.2      1.07      6.89e- 8  9.03e-27     48.2 
21 mu_0       0.3      1.22      1.62e- 4  7.62e-19     28.2 
22 mu_0       0.4      1.30      1.81e- 2  2.68e-13     19.7 
23 mu_0       0.5      1.18      2.10e- 1  4.10e- 9     12.5 
24 mu_0       0.6      1.01      5.10e- 1  5.55e- 6      7.64
25 mu_0       0.7      1.06      5.25e- 1  2.54e- 8      5.51
26 mu_0       0.8      1.27      4.52e- 1  1.71e-13      8.96
27 mu_0       0.9      1.59      3.35e- 3  1.02e-22     19.7 
[1] "Total run time was 257.024 seconds"
