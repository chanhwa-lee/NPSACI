
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3388"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 6  5  3  1  5  4  1  2  4  3  5  2  5  3  5  3  4  2  3  3  3  5  5  1  1  3 
46 47 48 49 50 
 3  1  5  2  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02424 0.32092 0.59055 0.98428 6.00000 
[1] "event indicator table: "

   0    1 
2006 1382 
[1] "treatment indicator table: "

   0    1 
1306 2082 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1760
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 82"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1628
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 11"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 201.676 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.503 0.162 
 2 mu         0.1   0.2 0.529 0.169 
 3 mu         0.1   0.3 0.578 0.147 
 4 mu         0.1   0.4 0.681 0.187 
 5 mu         0.1   0.5 0.687 0.179 
 6 mu         0.2   0.1 0.428 0.0948
 7 mu         0.2   0.2 0.489 0.0897
 8 mu         0.2   0.3 0.524 0.0794
 9 mu         0.2   0.4 0.597 0.106 
10 mu         0.2   0.5 0.621 0.0980
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.967        0.514 0.0000266      7.77
 2 mu         0.2      0.991        1.00  0.0323         3.55
 3 mu         0.3      1.01         0.991 0.383          2.03
 4 mu         0.4      1.01         0.995 0.604          1.85
 5 mu         0.5      1.01         0.995 0.697          1.92
 6 mu         0.6      1.00         0.994 0.617          1.34
 7 mu         0.7      1.00         0.994 0.689          1.40
 8 mu         0.8      1.01         1.02  0.512          1.42
 9 mu         0.9      1.02         0.964 0.466          1.66
10 mu_1       0.1      0.898        0.735 0.0000849      5.28
11 mu_1       0.2      1.00         1.02  0.0549         3.57
12 mu_1       0.3      1.01         0.982 0.412          1.91
13 mu_1       0.4      1.01         1.00  0.611          1.95
14 mu_1       0.5      1.00         0.984 0.663          1.85
15 mu_1       0.6      1.00         0.988 0.629          1.36
16 mu_1       0.7      1.00         1.00  0.687          1.41
17 mu_1       0.8      1.02         1.01  0.504          1.43
18 mu_1       0.9      1.02         0.967 0.452          1.70
19 mu_0       0.1      0.975        0.485 0.0000202      8.52
20 mu_0       0.2      0.988        1.00  0.0266         3.55
21 mu_0       0.3      1.01         0.980 0.370          2.08
22 mu_0       0.4      1.01         1.00  0.600          1.79
23 mu_0       0.5      1.01         0.998 0.719          1.99
24 mu_0       0.6      1.00         0.989 0.600          1.34
25 mu_0       0.7      0.999        0.997 0.695          1.40
26 mu_0       0.8      1.01         1.03  0.534          1.37
27 mu_0       0.9      1.01         0.994 0.438          1.62
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      3.71      3.47e-12  1.11e-36    330.  
 2 mu         0.2      1.23      8.59e- 7  3.43e-24     30.9 
 3 mu         0.3      1.15      1.01e- 3  5.72e-17     20.2 
 4 mu         0.4      0.811     6.54e- 2  6.37e-12      7.11
 5 mu         0.5      0.871     3.88e- 1  4.33e- 8      6.59
 6 mu         0.6      1.17      9.53e- 1  1.38e- 6      4.53
 7 mu         0.7      1.42      9.18e- 1  9.09e-10     15.5 
 8 mu         0.8      1.22      3.49e- 1  2.74e-14      9.87
 9 mu         0.9      0.996     1.60e- 3  4.60e-22     18.2 
10 mu_1       0.1      1.84      2.38e-11  1.04e-35    122.  
11 mu_1       0.2      1.08      2.65e- 6  1.60e-23     20.9 
12 mu_1       0.3      1.07      2.24e- 3  1.78e-16     17.6 
13 mu_1       0.4      0.770     1.05e- 1  1.49e-11      7.90
14 mu_1       0.5      0.905     4.54e- 1  8.09e- 8      5.86
15 mu_1       0.6      1.22      1.02e+ 0  8.52e- 8      4.89
16 mu_1       0.7      1.42      9.01e- 1  4.81e-11     16.2 
17 mu_1       0.8      1.20      2.82e- 1  1.27e-15      9.02
18 mu_1       0.9      0.993     1.14e- 3  1.89e-23     18.9 
19 mu_0       0.1      3.92      1.17e-12  0           353.  
20 mu_0       0.2      1.27      3.62e- 7  0            37.2 
21 mu_0       0.3      1.19      4.91e- 4  0            21.3 
22 mu_0       0.4      0.838     4.35e- 2  0             6.59
23 mu_0       0.5      0.837     3.20e- 1  0             7.32
24 mu_0       0.6      1.10      9.30e- 1  0             4.31
25 mu_0       0.7      1.42      7.97e- 1  0            13.9 
26 mu_0       0.8      1.29      4.82e- 1  0            13.2 
27 mu_0       0.9      1.03      4.25e- 3  0            12.2 
[1] "Total run time was 205.362 seconds"
