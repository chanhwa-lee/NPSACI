
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3656"
[1] "cluster size dist'n: "

21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 
 6  4  6  1  1  1  3  2  1  3  3  2  2  2  3  2  4  5  2  7  4  3  5  4  7  5 
47 48 49 50 
 3  2  4  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.05667 0.39128 0.66566 1.00000 4.86971 
[1] "event indicator table: "

   0    1 
2152 1504 
[1] "treatment indicator table: "

   0    1 
1258 2398 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1849
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1807
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 273.85 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.285 0.111 
 2 mu         0.1   0.2 0.360 0.165 
 3 mu         0.1   0.3 0.350 0.141 
 4 mu         0.1   0.4 0.363 0.128 
 5 mu         0.1   0.5 0.349 0.118 
 6 mu         0.2   0.1 0.396 0.0973
 7 mu         0.2   0.2 0.532 0.131 
 8 mu         0.2   0.3 0.637 0.157 
 9 mu         0.2   0.4 0.688 0.164 
10 mu         0.2   0.5 0.719 0.173 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.461       0.0308  3.89e-10      9.75
 2 mu         0.2      1.19        0.510   4.34e- 5     30.3 
 3 mu         0.3      1.09        0.904   1.18e- 2      7.30
 4 mu         0.4      0.974       0.967   2.21e- 1      1.67
 5 mu         0.5      0.976       0.991   5.27e- 1      1.67
 6 mu         0.6      0.982       0.994   6.78e- 1      1.62
 7 mu         0.7      0.993       0.989   7.57e- 1      1.35
 8 mu         0.8      1.01        1.01    6.24e- 1      1.58
 9 mu         0.9      1.03        1.01    2.18e- 2      2.31
10 mu_1       0.1      0.648       0.0767  1.91e- 9     13.6 
11 mu_1       0.2      1.26        0.688   1.08e- 4     28.2 
12 mu_1       0.3      1.05        0.903   1.98e- 2      4.57
13 mu_1       0.4      0.967       0.972   2.86e- 1      1.62
14 mu_1       0.5      0.977       0.984   5.45e- 1      1.70
15 mu_1       0.6      0.982       0.986   6.79e- 1      1.60
16 mu_1       0.7      0.994       0.990   7.42e- 1      1.36
17 mu_1       0.8      1.01        1.02    6.23e- 1      1.61
18 mu_1       0.9      1.03        1.02    1.87e- 2      2.30
19 mu_0       0.1      0.441       0.0255  2.19e-10      9.96
20 mu_0       0.2      1.17        0.465   2.73e- 5     30.8 
21 mu_0       0.3      1.10        0.898   8.30e- 3      8.47
22 mu_0       0.4      0.978       0.974   1.77e- 1      1.78
23 mu_0       0.5      0.974       0.989   5.10e- 1      1.65
24 mu_0       0.6      0.980       0.986   6.75e- 1      1.66
25 mu_0       0.7      0.988       0.985   7.58e- 1      1.32
26 mu_0       0.8      1.01        1.02    6.27e- 1      1.44
27 mu_0       0.9      1.03        1.03    4.91e- 2      2.39
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      4.19      3.78e-15  1.81e-32    267.  
 2 mu         0.2      1.70      1.12e- 8  9.30e-21     69.7 
 3 mu         0.3      1.34      3.55e- 5  2.04e-14     57.8 
 4 mu         0.4      1.44      5.97e- 3  5.39e-10     41.2 
 5 mu         0.5      1.32      8.80e- 2  1.20e- 6     17.9 
 6 mu         0.6      1.05      5.47e- 1  3.64e- 8     11.4 
 7 mu         0.7      0.914     6.31e- 1  2.14e-12      3.18
 8 mu         0.8      1.11      5.75e- 1  1.67e-18      4.60
 9 mu         0.9      0.980     6.93e- 3  3.90e-29     26.8 
10 mu_1       0.1      3.93      2.79e-14  1.57e-31    222.  
11 mu_1       0.2      1.41      3.62e- 8  4.26e-20     65.9 
12 mu_1       0.3      1.38      9.34e- 5  6.29e-14     62.0 
13 mu_1       0.4      1.41      6.30e- 3  1.25e- 9     33.1 
14 mu_1       0.5      1.29      1.23e- 1  2.22e- 6     18.0 
15 mu_1       0.6      1.03      5.06e- 1  6.06e- 9      9.94
16 mu_1       0.7      0.925     7.12e- 1  3.06e-13      3.53
17 mu_1       0.8      1.12      4.93e- 1  2.09e-19      4.48
18 mu_1       0.9      0.959     5.08e- 3  4.33e-30     27.5 
19 mu_0       0.1      4.22      1.27e-15  2.62e-33    272.  
20 mu_0       0.2      1.77      5.41e- 9  8.72e-22     70.7 
21 mu_0       0.3      1.32      1.42e- 5  2.19e-15     56.1 
22 mu_0       0.4      1.45      3.43e- 3  6.74e-11     46.6 
23 mu_0       0.5      1.35      5.84e- 2  1.80e- 7     20.0 
24 mu_0       0.6      1.08      4.03e- 1  8.18e- 8     13.5 
25 mu_0       0.7      0.889     6.42e- 1  6.42e-12      2.80
26 mu_0       0.8      1.07      8.94e- 1  7.52e-18      5.12
27 mu_0       0.9      1.17      2.36e- 2  3.51e-28     20.1 
[1] "Total run time was 278.153 seconds"
