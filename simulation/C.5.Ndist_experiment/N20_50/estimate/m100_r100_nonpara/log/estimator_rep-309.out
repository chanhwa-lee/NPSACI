
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3677"
[1] "cluster size dist'n: "

20 21 23 24 25 26 27 28 29 30 31 32 33 34 35 37 38 39 40 41 42 43 44 45 46 47 
 3  2  3  4  2  5  4  2  1  2  1  4  2  6  1  4  6  3  6  4  2  5  5  2  4  6 
48 49 50 
 2  5  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02152 0.33072 0.59847 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
2166 1511 
[1] "treatment indicator table: "

   0    1 
1388 2289 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1851
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 23"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 73"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1826
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 220.804 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.407 0.0942
 2 mu         0.1   0.2 0.499 0.103 
 3 mu         0.1   0.3 0.659 0.148 
 4 mu         0.1   0.4 0.703 0.138 
 5 mu         0.1   0.5 0.715 0.136 
 6 mu         0.2   0.1 0.345 0.0442
 7 mu         0.2   0.2 0.459 0.0478
 8 mu         0.2   0.3 0.564 0.0639
 9 mu         0.2   0.4 0.631 0.0648
10 mu         0.2   0.5 0.650 0.0616
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.04         0.369 0.0000572      9.81
 2 mu         0.2      1.06         0.932 0.0365         5.01
 3 mu         0.3      1.01         0.977 0.373          2.05
 4 mu         0.4      1.01         1.00  0.552          1.50
 5 mu         0.5      1.01         0.984 0.693          1.50
 6 mu         0.6      1.00         1.01  0.656          1.36
 7 mu         0.7      0.993        0.990 0.674          1.33
 8 mu         0.8      0.993        0.978 0.565          1.48
 9 mu         0.9      0.979        0.926 0.0784         1.85
10 mu_1       0.1      1.12         0.614 0.000184       9.77
11 mu_1       0.2      1.04         1.01  0.0609         3.90
12 mu_1       0.3      1.01         1.00  0.451          1.84
13 mu_1       0.4      1.01         0.999 0.562          1.50
14 mu_1       0.5      1.01         0.986 0.693          1.46
15 mu_1       0.6      1.00         1.01  0.629          1.34
16 mu_1       0.7      0.993        0.990 0.673          1.34
17 mu_1       0.8      0.993        0.980 0.565          1.48
18 mu_1       0.9      0.979        0.928 0.0706         1.90
19 mu_0       0.1      1.03         0.342 0.0000431      9.89
20 mu_0       0.2      1.06         0.921 0.0304         5.29
21 mu_0       0.3      1.01         0.996 0.339          2.14
22 mu_0       0.4      1.01         0.995 0.546          1.52
23 mu_0       0.5      1.01         0.990 0.683          1.53
24 mu_0       0.6      1.01         1.00  0.698          1.38
25 mu_0       0.7      0.993        0.992 0.638          1.33
26 mu_0       0.8      0.995        0.979 0.561          1.45
27 mu_0       0.9      0.980        0.945 0.148          1.67
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.115     2.49e-12  2.47e-35      8.93
 2 mu         0.2      0.938     1.56e- 6  6.66e-23     22.7 
 3 mu         0.3      1.47      1.00e- 3  8.50e-16     18.7 
 4 mu         0.4      1.12      5.27e- 2  6.95e-11     17.1 
 5 mu         0.5      0.987     2.56e- 1  3.28e- 7     11.5 
 6 mu         0.6      0.938     6.21e- 1  2.28e- 4      7.49
 7 mu         0.7      1.01      5.66e- 1  7.93e- 7      5.18
 8 mu         0.8      1.22      2.85e- 1  2.06e-11      9.22
 9 mu         0.9      1.52      6.73e- 4  5.28e-20     30.2 
10 mu_1       0.1      0.229     1.51e-11  2.17e-34     16.5 
11 mu_1       0.2      1.16      4.90e- 6  2.98e-22     26.9 
12 mu_1       0.3      1.44      2.16e- 3  2.53e-15     16.4 
13 mu_1       0.4      1.08      8.47e- 2  1.55e-10     15.5 
14 mu_1       0.5      0.987     2.80e- 1  5.87e- 7     11.9 
15 mu_1       0.6      0.940     6.41e- 1  3.28e- 4      7.81
16 mu_1       0.7      1.02      5.20e- 1  2.68e- 7      4.63
17 mu_1       0.8      1.24      2.39e- 1  6.11e-12     10.3 
18 mu_1       0.9      1.50      4.99e- 4  1.87e-20     31.0 
19 mu_0       0.1      0.102     1.09e-12  3.23e-36      8.09
20 mu_0       0.2      0.884     6.58e- 7  8.86e-24     21.8 
21 mu_0       0.3      1.49      4.91e- 4  1.29e-16     19.8 
22 mu_0       0.4      1.15      2.90e- 2  1.23e-11     18.2 
23 mu_0       0.5      0.987     2.61e- 1  6.99e- 8     11.0 
24 mu_0       0.6      0.934     5.46e- 1  6.06e- 5      7.73
25 mu_0       0.7      0.989     4.51e- 1  2.02e- 6      6.48
26 mu_0       0.8      1.11      4.65e- 1  7.87e-11      4.98
27 mu_0       0.9      1.74      2.24e- 3  3.60e-19     30.4 
[1] "Total run time was 224.142 seconds"
