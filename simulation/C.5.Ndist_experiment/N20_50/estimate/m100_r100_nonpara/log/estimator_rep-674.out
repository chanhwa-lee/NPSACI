
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3386"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 38 39 40 41 42 43 44 45 46 
 1  3  4  5  4  3  6  1  3  7  1  5  1  6  4  6  4  2  5  2  2  2  6  3  8  2 
47 49 50 
 1  2  1 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03566 0.34948 0.61176 1.00000 5.00000 
[1] "event indicator table: "

   0    1 
2007 1379 
[1] "treatment indicator table: "

   0    1 
1324 2062 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1655
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1731
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 49"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 214.923 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.396 0.112 
 2 mu         0.1   0.2 0.456 0.114 
 3 mu         0.1   0.3 0.523 0.129 
 4 mu         0.1   0.4 0.574 0.110 
 5 mu         0.1   0.5 0.595 0.101 
 6 mu         0.2   0.1 0.371 0.0912
 7 mu         0.2   0.2 0.447 0.0889
 8 mu         0.2   0.3 0.503 0.100 
 9 mu         0.2   0.4 0.552 0.0866
10 mu         0.2   0.5 0.589 0.0742
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.865        0.574  0.000807      5.23
 2 mu         0.2      0.936        0.899  0.165         2.51
 3 mu         0.3      0.953        0.952  0.359         1.72
 4 mu         0.4      0.960        0.947  0.459         1.35
 5 mu         0.5      0.988        0.977  0.620         1.41
 6 mu         0.6      1.02         1.03   0.739         1.22
 7 mu         0.7      1.04         1.05   0.744         1.48
 8 mu         0.8      1.01         1.00   0.759         1.50
 9 mu         0.9      1.03         1.01   0.496         1.58
10 mu_1       0.1      0.902        0.737  0.00220       3.46
11 mu_1       0.2      0.950        0.911  0.240         2.19
12 mu_1       0.3      0.953        0.955  0.328         1.72
13 mu_1       0.4      0.964        0.953  0.471         1.37
14 mu_1       0.5      0.992        0.990  0.631         1.39
15 mu_1       0.6      1.02         1.03   0.756         1.24
16 mu_1       0.7      1.04         1.04   0.734         1.49
17 mu_1       0.8      1.01         0.997  0.753         1.51
18 mu_1       0.9      1.03         1.00   0.482         1.59
19 mu_0       0.1      0.861        0.548  0.000652      5.51
20 mu_0       0.2      0.932        0.875  0.146         2.58
21 mu_0       0.3      0.953        0.937  0.372         1.72
22 mu_0       0.4      0.957        0.945  0.451         1.38
23 mu_0       0.5      0.985        0.975  0.594         1.44
24 mu_0       0.6      1.01         1.03   0.713         1.22
25 mu_0       0.7      1.05         1.04   0.717         1.46
26 mu_0       0.8      1.02         1.01   0.751         1.47
27 mu_0       0.9      1.01         1.01   0.605         1.59
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.58      1.16e-11  5.54e-41    147.  
 2 mu         0.2      1.16      2.44e- 6  1.54e-27     53.7 
 3 mu         0.3      0.914     5.04e- 3  9.91e-20     25.4 
 4 mu         0.4      1.13      1.73e- 1  3.05e-14     20.2 
 5 mu         0.5      1.19      6.16e- 1  4.86e-10     10.0 
 6 mu         0.6      1.07      8.94e- 1  4.75e- 8      6.66
 7 mu         0.7      0.907     4.26e- 1  1.83e-12      5.16
 8 mu         0.8      0.856     1.22e- 1  7.28e-19      4.91
 9 mu         0.9      0.966     3.91e- 4  4.77e-30      9.82
10 mu_1       0.1      1.90      7.70e-11  5.31e-40    171.  
11 mu_1       0.2      1.03      7.16e- 6  7.38e-27     33.6 
12 mu_1       0.3      0.956     9.65e- 3  3.16e-19     20.7 
13 mu_1       0.4      1.17      2.35e- 1  7.30e-14     20.2 
14 mu_1       0.5      1.18      6.74e- 1  9.31e-10      8.00
15 mu_1       0.6      1.05      8.98e- 1  9.20e- 9      6.46
16 mu_1       0.7      0.896     3.79e- 1  3.05e-13      5.53
17 mu_1       0.8      0.856     1.15e- 1  1.06e-19      4.62
18 mu_1       0.9      0.973     2.62e- 4  6.17e-31     10.0 
19 mu_0       0.1      1.54      4.30e-12  2.62e-42    145.  
20 mu_0       0.2      1.19      1.17e- 6  8.20e-29     59.3 
21 mu_0       0.3      0.896     3.07e- 3  6.02e-21     27.4 
22 mu_0       0.4      1.10      1.13e- 1  2.16e-15     20.2 
23 mu_0       0.5      1.19      5.17e- 1  3.64e-11     12.0 
24 mu_0       0.6      1.10      9.29e- 1  7.69e- 8      6.97
25 mu_0       0.7      0.932     4.33e- 1  5.41e-12      4.30
26 mu_0       0.8      0.857     1.75e- 1  3.22e-18      6.14
27 mu_0       0.9      0.904     1.49e- 3  4.22e-29      8.88
[1] "Total run time was 217.949 seconds"
