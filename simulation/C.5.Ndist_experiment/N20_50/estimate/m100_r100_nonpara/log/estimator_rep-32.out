
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3452"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 4  1  5  3  2  3  3  5  1  4  4  4  3  4  2  5  6  2  3  4  3  6  2  1  6  4 
46 47 48 49 50 
 1  2  4  2  1 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0431  0.3573  0.6150  1.0000  7.0000 
[1] "event indicator table: "

   0    1 
2033 1419 
[1] "treatment indicator table: "

   0    1 
1298 2154 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1742
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1710
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 221.687 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.289 0.0793
 2 mu         0.1   0.2 0.371 0.115 
 3 mu         0.1   0.3 0.424 0.0935
 4 mu         0.1   0.4 0.415 0.104 
 5 mu         0.1   0.5 0.433 0.104 
 6 mu         0.2   0.1 0.283 0.0466
 7 mu         0.2   0.2 0.360 0.0693
 8 mu         0.2   0.3 0.415 0.0457
 9 mu         0.2   0.4 0.431 0.0600
10 mu         0.2   0.5 0.462 0.0564
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      0.887        0.382 0.000000705     15.2 
 2 mu         0.2      0.962        0.898 0.00574          4.56
 3 mu         0.3      1.04         0.992 0.138            2.28
 4 mu         0.4      1.05         1.04  0.590            1.79
 5 mu         0.5      1.02         1.02  0.628            1.52
 6 mu         0.6      0.994        0.991 0.669            1.27
 7 mu         0.7      0.985        0.998 0.663            1.22
 8 mu         0.8      0.990        0.978 0.592            1.39
 9 mu         0.9      0.977        0.967 0.451            1.54
10 mu_1       0.1      0.922        0.583 0.00000265      16.0 
11 mu_1       0.2      0.975        0.907 0.0115           2.54
12 mu_1       0.3      1.04         1.04  0.207            2.29
13 mu_1       0.4      1.05         1.04  0.652            1.73
14 mu_1       0.5      1.02         1.02  0.634            1.47
15 mu_1       0.6      0.992        0.983 0.680            1.25
16 mu_1       0.7      0.985        0.989 0.653            1.22
17 mu_1       0.8      0.990        0.983 0.595            1.38
18 mu_1       0.9      0.976        0.971 0.430            1.53
19 mu_0       0.1      0.883        0.356 0.000000489     15.1 
20 mu_0       0.2      0.958        0.892 0.00401          5.07
21 mu_0       0.3      1.03         0.984 0.109            2.28
22 mu_0       0.4      1.05         1.03  0.520            1.82
23 mu_0       0.5      1.03         1.02  0.622            1.56
24 mu_0       0.6      0.997        1.00  0.654            1.32
25 mu_0       0.7      0.985        0.991 0.686            1.24
26 mu_0       0.8      0.990        0.976 0.583            1.42
27 mu_0       0.9      0.984        0.983 0.531            1.67
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.55      2.93e-11  3.99e-34    154.  
 2 mu         0.2      4.09      3.12e- 6  1.84e-22    355.  
 3 mu         0.3      2.55      8.43e- 4  6.91e-16     68.2 
 4 mu         0.4      1.91      4.85e- 2  2.84e-11     36.3 
 5 mu         0.5      1.36      3.78e- 1  9.49e- 8      7.58
 6 mu         0.6      1.02      5.65e- 1  2.12e- 6      5.10
 7 mu         0.7      0.989     6.27e- 1  7.30e-11      4.15
 8 mu         0.8      1.38      3.58e- 1  1.92e-17     12.4 
 9 mu         0.9      1.22      2.12e- 3  4.48e-29     19.0 
10 mu_1       0.1      2.60      1.53e-10  3.49e-33    257.  
11 mu_1       0.2      3.77      1.10e- 5  8.72e-22    295.  
12 mu_1       0.3      2.53      1.99e- 3  2.19e-15     67.2 
13 mu_1       0.4      1.82      7.71e- 2  6.74e-11     31.0 
14 mu_1       0.5      1.32      4.58e- 1  1.80e- 7      7.36
15 mu_1       0.6      0.990     5.74e- 1  5.88e- 7      4.77
16 mu_1       0.7      1.00      5.86e- 1  1.74e-11      4.06
17 mu_1       0.8      1.40      2.97e- 1  4.00e-18     12.6 
18 mu_1       0.9      1.19      1.53e- 3  8.30e-30     20.1 
19 mu_0       0.1      1.44      1.08e-11  4.27e-35    143.  
20 mu_0       0.2      4.17      1.15e- 6  1.15e-23    369.  
21 mu_0       0.3      2.56      3.53e- 4  4.93e-17     68.7 
22 mu_0       0.4      1.97      2.94e- 2  2.36e-12     39.8 
23 mu_0       0.5      1.40      2.79e- 1  9.49e- 9      7.91
24 mu_0       0.6      1.06      5.55e- 1  4.41e- 6      5.60
25 mu_0       0.7      0.956     6.27e- 1  2.03e-10      4.35
26 mu_0       0.8      1.32      5.12e- 1  8.01e-17     11.4 
27 mu_0       0.9      1.46      7.43e- 3  3.74e-28     13.2 
[1] "Total run time was 224.969 seconds"
