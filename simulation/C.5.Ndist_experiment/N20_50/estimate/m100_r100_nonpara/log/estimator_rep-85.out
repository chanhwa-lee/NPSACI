
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3377"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 
 3  4  7  3  4  4  5  2  3  2  4  3  3  6  3  3  4  5  1  2  7  1  5  2  1  2 
47 48 49 50 
 4  3  2  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.05148 0.37103 0.62239 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
1972 1405 
[1] "treatment indicator table: "

   0    1 
1273 2104 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1656
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1721
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 15"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 97"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 258.993 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.283 0.0434
 2 mu         0.1   0.2 0.370 0.0588
 3 mu         0.1   0.3 0.441 0.0754
 4 mu         0.1   0.4 0.465 0.0702
 5 mu         0.1   0.5 0.505 0.0720
 6 mu         0.2   0.1 0.324 0.0353
 7 mu         0.2   0.2 0.430 0.0393
 8 mu         0.2   0.3 0.508 0.0452
 9 mu         0.2   0.4 0.536 0.0372
10 mu         0.2   0.5 0.590 0.0433
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.828        0.256 0.0000555      6.71
 2 mu         0.2      1.02         0.962 0.0480         2.83
 3 mu         0.3      1.05         1.04  0.396          1.89
 4 mu         0.4      1.02         1.03  0.553          1.59
 5 mu         0.5      1.01         1.03  0.621          1.44
 6 mu         0.6      1.00         1.01  0.670          1.44
 7 mu         0.7      0.998        1.01  0.710          1.33
 8 mu         0.8      0.997        0.989 0.644          1.25
 9 mu         0.9      0.957        0.967 0.387          1.75
10 mu_1       0.1      0.964        0.454 0.000178       4.69
11 mu_1       0.2      1.05         1.02  0.0781         2.60
12 mu_1       0.3      1.05         1.05  0.461          1.70
13 mu_1       0.4      1.02         1.03  0.538          1.60
14 mu_1       0.5      1.01         1.02  0.631          1.43
15 mu_1       0.6      1.00         1.01  0.671          1.43
16 mu_1       0.7      0.998        1.01  0.706          1.33
17 mu_1       0.8      0.997        0.990 0.640          1.26
18 mu_1       0.9      0.957        0.971 0.373          1.79
19 mu_0       0.1      0.813        0.231 0.0000419      6.93
20 mu_0       0.2      1.02         0.937 0.0404         2.97
21 mu_0       0.3      1.05         1.04  0.367          1.99
22 mu_0       0.4      1.03         1.04  0.544          1.59
23 mu_0       0.5      1.01         1.01  0.611          1.46
24 mu_0       0.6      1.01         1.01  0.662          1.45
25 mu_0       0.7      1.00         0.992 0.721          1.31
26 mu_0       0.8      1.00         0.994 0.660          1.25
27 mu_0       0.9      0.962        0.964 0.413          1.61
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.0438     2.81e-13  7.43e-38      2.60
 2 mu         0.2     0.700      2.20e- 7  2.58e-25     24.9 
 3 mu         0.3     1.29       2.38e- 4  4.92e-18     22.6 
 4 mu         0.4     1.50       1.62e- 2  6.39e-13     14.8 
 5 mu         0.5     1.31       3.30e- 1  5.21e- 9     11.2 
 6 mu         0.6     1.08       6.59e- 1  7.06e- 6      8.03
 7 mu         0.7     0.978      7.80e- 1  4.80e- 9      6.55
 8 mu         0.8     0.991      2.48e- 1  9.55e-15      6.25
 9 mu         0.9     0.959      7.12e- 4  5.08e-25     12.5 
10 mu_1       0.1     0.107      1.90e-12  7.09e-37      6.27
11 mu_1       0.2     0.900      8.41e- 7  1.23e-24     30.1 
12 mu_1       0.3     1.36       5.23e- 4  1.56e-17     18.1 
13 mu_1       0.4     1.51       2.64e- 2  1.52e-12     13.1 
14 mu_1       0.5     1.26       3.92e- 1  9.95e- 9     10.2 
15 mu_1       0.6     1.06       6.20e- 1  1.08e- 5      7.40
16 mu_1       0.7     0.980      7.40e- 1  1.61e- 9      6.30
17 mu_1       0.8     1.00       1.88e- 1  2.80e-15      6.37
18 mu_1       0.9     0.956      5.04e- 4  1.32e-25     13.2 
19 mu_0       0.1     0.0368     9.45e-14  3.75e-39      2.19
20 mu_0       0.2     0.650      6.40e- 8  1.47e-26     23.6 
21 mu_0       0.3     1.26       1.01e- 4  3.19e-19     24.4 
22 mu_0       0.4     1.50       9.85e- 3  4.84e-14     15.9 
23 mu_0       0.5     1.35       2.51e- 1  4.74e-10     12.1 
24 mu_0       0.6     1.10       6.40e- 1  8.03e- 7      8.97
25 mu_0       0.7     0.972      6.25e- 1  1.23e- 8      7.13
26 mu_0       0.8     0.951      3.25e- 1  3.66e-14      5.76
27 mu_0       0.9     0.993      2.59e- 3  3.89e-24      9.24
[1] "Total run time was 263.334 seconds"
