
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3492"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 2  2  3  6  1  5  3  6  5  5  1  3  2  1  5  4  2  2  2  3  5  2  3  5  2  3 
46 47 48 49 50 
 5  2  3  1  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02758 0.33039 0.60455 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
2096 1396 
[1] "treatment indicator table: "

   0    1 
1233 2259 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1723
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1769
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 81"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 231.627 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.408 0.0847
 2 mu         0.1   0.2 0.419 0.0770
 3 mu         0.1   0.3 0.433 0.0927
 4 mu         0.1   0.4 0.510 0.0930
 5 mu         0.1   0.5 0.510 0.0937
 6 mu         0.2   0.1 0.365 0.0454
 7 mu         0.2   0.2 0.396 0.0418
 8 mu         0.2   0.3 0.430 0.0598
 9 mu         0.2   0.4 0.496 0.0543
10 mu         0.2   0.5 0.515 0.0585
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      0.836        0.257 0.000000197      5.85
 2 mu         0.2      0.890        0.857 0.00307          4.18
 3 mu         0.3      0.948        0.949 0.158            2.08
 4 mu         0.4      1.01         0.972 0.462            1.68
 5 mu         0.5      1.00         0.980 0.708            1.68
 6 mu         0.6      1.01         1.00  0.791            1.28
 7 mu         0.7      1.01         0.997 0.762            1.37
 8 mu         0.8      0.985        0.987 0.639            1.30
 9 mu         0.9      0.947        0.905 0.342            1.93
10 mu_1       0.1      0.849        0.441 0.000000749      6.57
11 mu_1       0.2      0.898        0.907 0.00595          3.11
12 mu_1       0.3      0.963        0.929 0.213            2.12
13 mu_1       0.4      1.01         0.985 0.488            1.59
14 mu_1       0.5      1.00         0.989 0.737            1.66
15 mu_1       0.6      1.01         1.00  0.781            1.26
16 mu_1       0.7      1.00         0.996 0.762            1.37
17 mu_1       0.8      0.984        0.984 0.630            1.32
18 mu_1       0.9      0.947        0.892 0.327            1.97
19 mu_0       0.1      0.834        0.239 0.000000135      5.79
20 mu_0       0.2      0.888        0.858 0.00235          4.45
21 mu_0       0.3      0.942        0.935 0.135            2.06
22 mu_0       0.4      1.01         0.963 0.433            1.74
23 mu_0       0.5      1.00         0.984 0.673            1.70
24 mu_0       0.6      1.00         1.00  0.772            1.31
25 mu_0       0.7      1.01         0.999 0.762            1.37
26 mu_0       0.8      0.991        1.00  0.672            1.25
27 mu_0       0.9      0.952        0.953 0.471            1.58
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.214     7.41e-14  8.74e-36     13.4 
 2 mu         0.2      0.874     3.11e- 8  2.40e-23     29.7 
 3 mu         0.3      1.34      6.69e- 5  3.50e-16     32.1 
 4 mu         0.4      1.08      1.25e- 2  3.34e-11     14.8 
 5 mu         0.5      0.828     2.62e- 1  1.89e- 7      5.03
 6 mu         0.6      0.953     3.86e- 1  1.21e- 4      3.85
 7 mu         0.7      1.05      9.83e- 1  8.49e- 8      3.54
 8 mu         0.8      1.37      7.30e- 1  1.69e-12      5.69
 9 mu         0.9      1.46      3.50e- 3  7.18e-21     16.2 
10 mu_1       0.1      0.388     5.55e-13  7.98e-35     22.3 
11 mu_1       0.2      1.00      1.20e- 7  1.10e-22     28.9 
12 mu_1       0.3      1.35      1.49e- 4  1.07e-15     33.4 
13 mu_1       0.4      1.02      2.12e- 2  7.62e-11     11.6 
14 mu_1       0.5      0.827     3.06e- 1  3.46e- 7      4.83
15 mu_1       0.6      0.974     4.44e- 1  3.93e- 5      4.04
16 mu_1       0.7      1.07      9.38e- 1  2.36e- 8      3.72
17 mu_1       0.8      1.40      6.49e- 1  4.11e-13      5.79
18 mu_1       0.9      1.45      2.68e- 3  1.55e-21     17.3 
19 mu_0       0.1      0.195     2.28e-14  8.45e-37     12.4 
20 mu_0       0.2      0.842     8.84e- 9  2.61e-24     30.0 
21 mu_0       0.3      1.34      3.16e- 5  4.35e-17     31.5 
22 mu_0       0.4      1.12      6.22e- 3  4.84e-12     17.0 
23 mu_0       0.5      0.830     1.62e- 1  3.11e- 8      5.23
24 mu_0       0.6      0.921     2.75e- 1  1.06e- 5      3.58
25 mu_0       0.7      1.01      7.79e- 1  2.28e- 7      3.88
26 mu_0       0.8      1.28      4.90e- 1  6.81e-12      5.29
27 mu_0       0.9      1.60      1.09e- 2  5.79e-20     16.6 
[1] "Total run time was 235.499 seconds"
