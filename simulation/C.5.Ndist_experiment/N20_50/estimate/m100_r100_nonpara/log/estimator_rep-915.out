
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3375"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 2  3  4  8  4  4  1  6  2  4  7  3  4  4  2  1  2  4  2  2  3  1  2  3  5  3 
46 47 48 49 50 
 3  1  2  6  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03568 0.35566 0.63536 1.00000 5.76413 
[1] "event indicator table: "

   0    1 
1999 1376 
[1] "treatment indicator table: "

   0    1 
1251 2124 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1673
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 11"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 75"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1702
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 238.511 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.397 0.0582
 2 mu         0.1   0.2 0.500 0.0576
 3 mu         0.1   0.3 0.568 0.0661
 4 mu         0.1   0.4 0.587 0.0837
 5 mu         0.1   0.5 0.602 0.0950
 6 mu         0.2   0.1 0.338 0.0255
 7 mu         0.2   0.2 0.440 0.0269
 8 mu         0.2   0.3 0.509 0.0351
 9 mu         0.2   0.4 0.545 0.0438
10 mu         0.2   0.5 0.580 0.0532
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.12         0.773   0.00386      8.13
 2 mu         0.2      1.05         0.946   0.195        3.27
 3 mu         0.3      1.02         1.00    0.425        1.96
 4 mu         0.4      1.00         0.989   0.698        1.52
 5 mu         0.5      1.01         1.01    0.775        1.54
 6 mu         0.6      1.02         1.03    0.684        1.31
 7 mu         0.7      1.02         1.02    0.738        1.38
 8 mu         0.8      0.982        0.979   0.611        1.33
 9 mu         0.9      0.949        0.934   0.455        1.67
10 mu_1       0.1      1.04         0.861   0.0112       5.79
11 mu_1       0.2      1.05         0.971   0.301        2.59
12 mu_1       0.3      1.02         0.979   0.471        1.81
13 mu_1       0.4      1.00         0.984   0.719        1.55
14 mu_1       0.5      1.01         1.01    0.765        1.51
15 mu_1       0.6      1.02         1.04    0.695        1.31
16 mu_1       0.7      1.02         1.01    0.734        1.40
17 mu_1       0.8      0.979        0.974   0.610        1.34
18 mu_1       0.9      0.947        0.934   0.455        1.69
19 mu_0       0.1      1.13         0.736   0.00304      8.48
20 mu_0       0.2      1.05         0.934   0.169        3.43
21 mu_0       0.3      1.03         1.01    0.406        2.02
22 mu_0       0.4      1.00         0.984   0.675        1.50
23 mu_0       0.5      1.01         1.01    0.766        1.56
24 mu_0       0.6      1.02         1.03    0.668        1.32
25 mu_0       0.7      1.03         1.04    0.747        1.34
26 mu_0       0.8      0.995        0.984   0.615        1.42
27 mu_0       0.9      0.961        0.966   0.453        1.45
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.467     8.38e-13  8.77e-37     44.8 
 2 mu         0.2      0.613     3.03e- 7  8.56e-24     21.2 
 3 mu         0.3      1.14      6.45e- 4  2.46e-16     14.2 
 4 mu         0.4      1.04      5.77e- 2  3.57e-11      7.98
 5 mu         0.5      0.867     3.38e- 1  1.65e- 7      5.90
 6 mu         0.6      0.857     3.49e- 1  3.42e- 5      4.39
 7 mu         0.7      0.887     5.59e- 1  5.44e- 8      5.71
 8 mu         0.8      1.08      3.57e- 1  3.34e-12      7.82
 9 mu         0.9      1.12      3.29e- 3  1.14e-21     14.4 
10 mu_1       0.1      0.549     5.68e-12  7.88e-36     49.8 
11 mu_1       0.2      0.707     1.08e- 6  3.84e-23     11.8 
12 mu_1       0.3      1.20      1.44e- 3  7.36e-16     14.2 
13 mu_1       0.4      0.993     8.46e- 2  8.02e-11      8.47
14 mu_1       0.5      0.856     3.19e- 1  3.01e- 7      5.13
15 mu_1       0.6      0.854     3.63e- 1  6.33e- 6      4.12
16 mu_1       0.7      0.897     5.00e- 1  8.64e- 9      5.80
17 mu_1       0.8      1.09      2.97e- 1  6.70e-13      8.04
18 mu_1       0.9      1.12      2.39e- 3  3.87e-22     14.4 
19 mu_0       0.1      0.458     3.00e-13  0            44.3 
20 mu_0       0.2      0.589     1.17e- 7  0            23.6 
21 mu_0       0.3      1.12      3.11e- 4  0            14.2 
22 mu_0       0.4      1.08      3.20e- 2  0             8.16
23 mu_0       0.5      0.877     2.91e- 1  0             6.67
24 mu_0       0.6      0.861     2.78e- 1  0             4.80
25 mu_0       0.7      0.862     4.94e- 1  0             5.51
26 mu_0       0.8      1.04      2.69e- 1  0             6.95
27 mu_0       0.9      1.17      6.78e- 3  0            14.7 
[1] "Total run time was 242.946 seconds"
