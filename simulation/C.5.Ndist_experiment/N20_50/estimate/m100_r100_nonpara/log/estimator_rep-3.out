
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3584"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 30 31 32 33 34 35 36 37 38 39 40 42 43 44 45 46 47 
 3  7  2  2  5  2  1  3  1  4  5  3  6  3  2  2  2  3  2  5  4  5  4  4  3  4 
48 49 50 
 4  4  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02894 0.33646 0.61688 1.00000 5.27794 
[1] "event indicator table: "

   0    1 
2130 1454 
[1] "treatment indicator table: "

   0    1 
1230 2354 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1843
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1741
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 77"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 221.349 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.582 0.201 
 2 mu         0.1   0.2 0.775 0.272 
 3 mu         0.1   0.3 0.905 0.329 
 4 mu         0.1   0.4 0.965 0.359 
 5 mu         0.1   0.5 1.03  0.389 
 6 mu         0.2   0.1 0.382 0.0626
 7 mu         0.2   0.2 0.505 0.0502
 8 mu         0.2   0.3 0.575 0.0562
 9 mu         0.2   0.4 0.604 0.0676
10 mu         0.2   0.5 0.646 0.0889
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      1.66         0.323 0.0000000722     48.3 
 2 mu         0.2      1.05         0.794 0.00150           5.95
 3 mu         0.3      0.979        0.997 0.0997            2.60
 4 mu         0.4      0.992        0.957 0.482             1.72
 5 mu         0.5      0.992        0.983 0.619             1.42
 6 mu         0.6      1.01         0.997 0.785             1.57
 7 mu         0.7      1.01         1.02  0.678             1.33
 8 mu         0.8      0.974        0.982 0.686             1.42
 9 mu         0.9      0.988        0.959 0.317             1.66
10 mu_1       0.1      1.62         0.563 0.000000287      42.0 
11 mu_1       0.2      1.02         0.896 0.00303           3.13
12 mu_1       0.3      0.980        0.993 0.139             2.48
13 mu_1       0.4      0.989        0.948 0.500             1.70
14 mu_1       0.5      0.994        0.973 0.631             1.41
15 mu_1       0.6      1.01         0.992 0.789             1.57
16 mu_1       0.7      1.00         1.01  0.673             1.34
17 mu_1       0.8      0.972        0.985 0.662             1.44
18 mu_1       0.9      0.990        0.955 0.296             1.71
19 mu_0       0.1      1.66         0.294 0.0000000483     49.0 
20 mu_0       0.2      1.06         0.775 0.00112           6.66
21 mu_0       0.3      0.979        0.979 0.0829            2.66
22 mu_0       0.4      0.994        0.970 0.470             1.73
23 mu_0       0.5      0.989        0.967 0.601             1.43
24 mu_0       0.6      1.01         0.995 0.726             1.56
25 mu_0       0.7      1.01         1.02  0.691             1.32
26 mu_0       0.8      0.983        0.995 0.696             1.33
27 mu_0       0.9      0.977        0.956 0.401             1.60
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.113      2.13e-14  5.83e-46      7.65
 2 mu         0.2     1.31       4.29e- 8  1.64e-31     58.0 
 3 mu         0.3     2.08       1.28e- 4  4.65e-23     40.2 
 4 mu         0.4     1.64       2.28e- 2  4.62e-17     21.1 
 5 mu         0.5     1.19       3.63e- 1  2.07e-12     17.0 
 6 mu         0.6     1.17       5.27e- 1  1.31e- 8      8.07
 7 mu         0.7     1.13       6.31e- 1  7.22e- 7      7.97
 8 mu         0.8     1.07       4.06e- 1  7.27e-12      5.19
 9 mu         0.9     1.17       7.12e- 3  6.19e-21     14.8 
10 mu_1       0.1     0.268      1.24e-13  5.83e-45     17.3 
11 mu_1       0.2     1.65       1.53e- 7  8.21e-31     65.5 
12 mu_1       0.3     2.05       2.97e- 4  1.55e-22     32.9 
13 mu_1       0.4     1.53       3.55e- 2  1.15e-16     22.7 
14 mu_1       0.5     1.16       3.50e- 1  4.14e-12     14.9 
15 mu_1       0.6     1.18       5.96e- 1  2.18e- 8      7.77
16 mu_1       0.7     1.12       6.40e- 1  2.64e- 7      7.59
17 mu_1       0.8     1.07       3.50e- 1  2.33e-12      5.05
18 mu_1       0.9     1.17       5.22e- 3  1.76e-21     15.0 
19 mu_0       0.1     0.0957     1.01e-14  0             6.58
20 mu_0       0.2     1.22       1.31e- 8  0            56.1 
21 mu_0       0.3     2.09       6.49e- 5  0            44.5 
22 mu_0       0.4     1.71       1.39e- 2  0            23.1 
23 mu_0       0.5     1.22       2.84e- 1  0            19.0 
24 mu_0       0.6     1.16       4.09e- 1  0             8.52
25 mu_0       0.7     1.13       6.77e- 1  0             8.86
26 mu_0       0.8     1.07       4.70e- 1  0             5.77
27 mu_0       0.9     1.20       8.60e- 3  0            13.0 
[1] "Total run time was 225.3 seconds"
