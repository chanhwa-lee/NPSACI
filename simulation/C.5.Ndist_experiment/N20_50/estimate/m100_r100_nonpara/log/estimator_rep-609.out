
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3531"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 3  5  1  1  1  2  1  4  3  2  7  4  6  6  3  1  7  2  4  3  4  3  4  1  4  3 
46 47 48 49 50 
 7  2  1  4  1 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02585 0.30789 0.57260 0.97986 5.94489 
[1] "event indicator table: "

   0    1 
2067 1464 
[1] "treatment indicator table: "

   0    1 
1393 2138 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1748
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 17"
[1] "     Cluster: 21"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1783
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 257.974 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.338 0.0755
 2 mu         0.1   0.2 0.351 0.0669
 3 mu         0.1   0.3 0.349 0.0896
 4 mu         0.1   0.4 0.358 0.116 
 5 mu         0.1   0.5 0.371 0.137 
 6 mu         0.2   0.1 0.360 0.0579
 7 mu         0.2   0.2 0.404 0.0429
 8 mu         0.2   0.3 0.443 0.0471
 9 mu         0.2   0.4 0.473 0.0551
10 mu         0.2   0.5 0.500 0.0623
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.829        0.564 0.000108       5.79
 2 mu         0.2      0.964        0.936 0.0462         2.15
 3 mu         0.3      1.00         0.983 0.357          1.65
 4 mu         0.4      1.01         1.01  0.487          1.56
 5 mu         0.5      1.00         1.01  0.656          1.49
 6 mu         0.6      1.01         1.01  0.751          1.49
 7 mu         0.7      0.996        0.983 0.724          1.37
 8 mu         0.8      1.01         0.998 0.653          1.54
 9 mu         0.9      1.04         1.01  0.435          1.76
10 mu_1       0.1      0.883        0.746 0.000357       3.71
11 mu_1       0.2      0.982        0.957 0.0776         2.20
12 mu_1       0.3      1.01         0.976 0.400          1.69
13 mu_1       0.4      1.01         1.01  0.512          1.54
14 mu_1       0.5      1.00         1.00  0.658          1.44
15 mu_1       0.6      1.01         1.00  0.748          1.48
16 mu_1       0.7      0.995        0.993 0.720          1.39
17 mu_1       0.8      1.01         1.01  0.637          1.56
18 mu_1       0.9      1.04         1.00  0.434          1.78
19 mu_0       0.1      0.823        0.529 0.0000807      6.02
20 mu_0       0.2      0.959        0.929 0.0384         2.13
21 mu_0       0.3      1.00         0.977 0.335          1.68
22 mu_0       0.4      1.02         1.02  0.470          1.60
23 mu_0       0.5      1.00         1.01  0.654          1.53
24 mu_0       0.6      1.00         1.00  0.756          1.50
25 mu_0       0.7      0.997        0.996 0.736          1.34
26 mu_0       0.8      1.00         0.983 0.659          1.46
27 mu_0       0.9      1.04         1.03  0.448          1.58
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.665     1.94e-11  1.01e-37     58.9 
 2 mu         0.2      0.961     4.68e- 6  6.23e-25     27.5 
 3 mu         0.3      1.46      1.18e- 3  1.56e-17     25.5 
 4 mu         0.4      1.66      5.21e- 2  2.31e-12     25.0 
 5 mu         0.5      1.28      4.94e- 1  1.96e- 8     12.2 
 6 mu         0.6      1.14      6.83e- 1  2.07e- 6     11.5 
 7 mu         0.7      1.24      6.33e- 1  6.86e-10      6.58
 8 mu         0.8      0.959     2.46e- 1  6.11e-15      8.10
 9 mu         0.9      1.15      4.75e- 4  9.11e-24     19.4 
10 mu_1       0.1      0.843     1.25e-10  9.42e-37     69.3 
11 mu_1       0.2      1.01      1.65e- 5  2.91e-24     28.3 
12 mu_1       0.3      1.56      2.74e- 3  4.85e-17     29.6 
13 mu_1       0.4      1.63      7.70e- 2  5.40e-12     21.7 
14 mu_1       0.5      1.24      4.80e- 1  3.67e- 8     11.1 
15 mu_1       0.6      1.15      6.97e- 1  4.07e- 7     10.8 
16 mu_1       0.7      1.24      5.40e- 1  1.15e-10      6.72
17 mu_1       0.8      0.939     1.95e- 1  8.98e-16      8.05
18 mu_1       0.9      1.18      3.44e- 4  1.19e-24     19.8 
19 mu_0       0.1      0.645     8.34e-12  7.30e-39     57.7 
20 mu_0       0.2      0.948     1.74e- 6  5.07e-26     30.3 
21 mu_0       0.3      1.42      5.15e- 4  1.45e-18     23.8 
22 mu_0       0.4      1.67      3.06e- 2  2.51e-13     27.2 
23 mu_0       0.5      1.32      3.41e- 1  2.56e- 9     13.3 
24 mu_0       0.6      1.12      6.14e- 1  3.89e- 6     12.5 
25 mu_0       0.7      1.25      7.19e- 1  2.02e- 9      6.31
26 mu_0       0.8      1.04      2.15e- 1  2.69e-14      8.28
27 mu_0       0.9      0.946     1.76e- 3  8.04e-23     16.2 
[1] "Total run time was 262.229 seconds"
