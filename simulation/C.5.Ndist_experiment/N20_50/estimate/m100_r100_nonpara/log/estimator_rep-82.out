
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3549"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 2  2  2  2  5  5  2  3  6  5  3  3  3  3  1  3  5  3  3  2  3  2  4  3  1  5 
46 47 48 49 50 
 2  3  6  3  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02562 0.32558 0.58457 0.98612 5.00000 
[1] "event indicator table: "

   0    1 
2095 1454 
[1] "treatment indicator table: "

   0    1 
1394 2155 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1804
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 87"
[1] "     Cluster: 91"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1745
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 273.279 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.344 0.0474
 2 mu         0.1   0.2 0.436 0.0609
 3 mu         0.1   0.3 0.469 0.0664
 4 mu         0.1   0.4 0.545 0.0637
 5 mu         0.1   0.5 0.603 0.0701
 6 mu         0.2   0.1 0.317 0.0329
 7 mu         0.2   0.2 0.412 0.0397
 8 mu         0.2   0.3 0.464 0.0507
 9 mu         0.2   0.4 0.523 0.0449
10 mu         0.2   0.5 0.572 0.0440
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.956        0.799   0.00163      3.10
 2 mu         0.2      0.989        1.01    0.176        2.10
 3 mu         0.3      0.981        0.978   0.422        1.51
 4 mu         0.4      0.999        1.01    0.449        1.44
 5 mu         0.5      1.01         1.03    0.686        1.46
 6 mu         0.6      1.01         1.01    0.707        1.31
 7 mu         0.7      1.00         0.986   0.739        1.46
 8 mu         0.8      1.02         0.983   0.660        1.64
 9 mu         0.9      1.01         0.937   0.437        1.98
10 mu_1       0.1      0.981        0.850   0.00429      3.25
11 mu_1       0.2      0.980        0.996   0.261        1.72
12 mu_1       0.3      0.983        0.984   0.440        1.45
13 mu_1       0.4      1.00         0.992   0.460        1.46
14 mu_1       0.5      1.01         1.03    0.685        1.44
15 mu_1       0.6      1.01         1.00    0.729        1.32
16 mu_1       0.7      1.00         0.990   0.740        1.49
17 mu_1       0.8      1.02         0.976   0.650        1.63
18 mu_1       0.9      1.01         0.946   0.424        2.00
19 mu_0       0.1      0.953        0.799   0.00133      3.14
20 mu_0       0.2      0.991        1.01    0.155        2.20
21 mu_0       0.3      0.980        0.980   0.409        1.53
22 mu_0       0.4      0.997        1.00    0.441        1.42
23 mu_0       0.5      1.01         1.03    0.683        1.47
24 mu_0       0.6      1.01         1.01    0.675        1.31
25 mu_0       0.7      1.00         0.985   0.736        1.38
26 mu_0       0.8      1.02         1.00    0.700        1.68
27 mu_0       0.9      1.02         0.991   0.528        1.81
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.131     6.81e-13  1.17e-37      3.16
 2 mu         0.2      1.18      6.38e- 7  2.28e-24     22.9 
 3 mu         0.3      1.39      9.48e- 4  9.55e-17     14.5 
 4 mu         0.4      1.18      8.32e- 2  4.58e-12      9.75
 5 mu         0.5      1.06      3.14e- 1  1.84e- 8      7.67
 6 mu         0.6      1.06      5.38e- 1  1.31e- 5      5.47
 7 mu         0.7      1.14      8.79e- 1  2.23e- 9      5.64
 8 mu         0.8      1.33      1.54e- 1  5.08e-15      8.96
 9 mu         0.9      1.82      1.53e- 4  4.27e-25     50.0 
10 mu_1       0.1      0.291     4.76e-12  1.05e-36      6.31
11 mu_1       0.2      1.41      2.03e- 6  1.03e-23     23.4 
12 mu_1       0.3      1.34      1.97e- 3  2.95e-16     12.1 
13 mu_1       0.4      1.16      1.29e- 1  1.12e-11     10.4 
14 mu_1       0.5      1.04      2.09e- 1  3.58e- 8      6.58
15 mu_1       0.6      1.06      5.41e- 1  4.47e- 6      5.30
16 mu_1       0.7      1.15      7.60e- 1  6.50e-10      5.31
17 mu_1       0.8      1.35      1.25e- 1  1.30e-15      9.10
18 mu_1       0.9      1.84      1.04e- 4  9.71e-26     50.9 
19 mu_0       0.1      0.114     2.29e-13  1.30e-38      2.81
20 mu_0       0.2      1.13      2.89e- 7  2.85e-25     22.8 
21 mu_0       0.3      1.42      5.08e- 4  3.50e-18     15.6 
22 mu_0       0.4      1.20      5.15e- 2  1.96e-13      9.29
23 mu_0       0.5      1.08      2.73e- 1  9.43e-10      8.77
24 mu_0       0.6      1.06      5.65e- 1  9.62e- 7      5.72
25 mu_0       0.7      1.12      6.71e- 1  5.90e- 9      6.39
26 mu_0       0.8      1.27      1.68e- 1  2.02e-14      8.55
27 mu_0       0.9      1.67      6.00e- 4  3.40e-24     41.6 
[1] "Total run time was 277.868 seconds"
