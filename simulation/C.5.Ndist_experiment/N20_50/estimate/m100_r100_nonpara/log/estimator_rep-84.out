
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3561"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 
 4  1  7  3  1  1  2  3  3  2  1  2  5  7  5  4  4  2  6  4  6  5  4  1  3  4 
47 48 49 50 
 4  4  1  1 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.01888 0.30303 0.56684 0.97681 5.00000 
[1] "event indicator table: "

   0    1 
2065 1496 
[1] "treatment indicator table: "

   0    1 
1408 2153 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1799
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1762
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 292.53 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.332 0.127 
 2 mu         0.1   0.2 0.474 0.0903
 3 mu         0.1   0.3 0.497 0.0948
 4 mu         0.1   0.4 0.553 0.110 
 5 mu         0.1   0.5 0.565 0.106 
 6 mu         0.2   0.1 0.357 0.0695
 7 mu         0.2   0.2 0.467 0.0495
 8 mu         0.2   0.3 0.506 0.0548
 9 mu         0.2   0.4 0.542 0.0617
10 mu         0.2   0.5 0.571 0.0596
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      0.901        0.669 0.000000494      6.70
 2 mu         0.2      0.973        0.966 0.00375          2.38
 3 mu         0.3      0.994        1.00  0.166            1.53
 4 mu         0.4      1.00         1.02  0.528            1.43
 5 mu         0.5      0.994        0.998 0.688            1.30
 6 mu         0.6      0.989        0.989 0.637            1.29
 7 mu         0.7      0.995        0.987 0.660            1.38
 8 mu         0.8      0.998        0.985 0.639            1.74
 9 mu         0.9      1.00         0.979 0.167            2.04
10 mu_1       0.1      0.898        0.838 0.00000197       3.71
11 mu_1       0.2      0.980        0.981 0.00760          2.10
12 mu_1       0.3      0.999        1.01  0.232            1.48
13 mu_1       0.4      1.00         1.02  0.540            1.40
14 mu_1       0.5      0.992        0.998 0.699            1.30
15 mu_1       0.6      0.989        0.988 0.618            1.28
16 mu_1       0.7      0.995        0.992 0.675            1.38
17 mu_1       0.8      0.998        0.983 0.625            1.76
18 mu_1       0.9      1.00         0.983 0.158            2.05
19 mu_0       0.1      0.901        0.660 0.000000330      7.03
20 mu_0       0.2      0.972        0.965 0.00279          2.45
21 mu_0       0.3      0.992        1.01  0.138            1.56
22 mu_0       0.4      1.00         1.03  0.521            1.46
23 mu_0       0.5      0.996        0.998 0.676            1.33
24 mu_0       0.6      0.990        0.987 0.665            1.30
25 mu_0       0.7      0.993        0.983 0.624            1.38
26 mu_0       0.8      0.997        0.993 0.623            1.65
27 mu_0       0.9      1.00         0.944 0.251            1.96
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.896     2.47e-12  4.90e-39     30.8 
 2 mu         0.2      1.07      1.31e- 6  6.05e-26     30.0 
 3 mu         0.3      1.43      1.25e- 3  2.27e-18     27.9 
 4 mu         0.4      1.18      6.65e- 2  4.49e-13     19.9 
 5 mu         0.5      0.955     4.04e- 1  4.78e- 9      5.87
 6 mu         0.6      1.04      5.10e- 1  7.45e- 6      3.75
 7 mu         0.7      1.09      7.08e- 1  9.11e- 9      3.76
 8 mu         0.8      1.19      1.87e- 1  3.11e-14      8.92
 9 mu         0.9      1.28      3.32e- 4  3.71e-24     34.1 
10 mu_1       0.1      1.01      1.57e-11  4.59e-38     38.4 
11 mu_1       0.2      1.09      3.97e- 6  2.83e-25     22.7 
12 mu_1       0.3      1.44      2.70e- 3  7.08e-18     29.9 
13 mu_1       0.4      1.11      9.11e- 2  1.05e-12     16.0 
14 mu_1       0.5      0.952     3.96e- 1  8.94e- 9      6.01
15 mu_1       0.6      1.06      5.39e- 1  2.75e- 6      3.96
16 mu_1       0.7      1.09      6.80e- 1  3.32e- 9      4.05
17 mu_1       0.8      1.20      1.45e- 1  9.91e-15      9.41
18 mu_1       0.9      1.27      2.30e- 4  1.05e-24     35.4 
19 mu_0       0.1      0.883     9.97e-13  3.48e-40     31.4 
20 mu_0       0.2      1.06      6.16e- 7  4.83e-27     31.8 
21 mu_0       0.3      1.42      6.99e- 4  2.07e-19     27.1 
22 mu_0       0.4      1.23      4.07e- 2  4.78e-14     22.5 
23 mu_0       0.5      0.958     3.25e- 1  6.10e-10      6.29
24 mu_0       0.6      1.03      5.22e- 1  1.19e- 6      4.08
25 mu_0       0.7      1.10      6.92e- 1  2.26e- 8      4.07
26 mu_0       0.8      1.17      2.27e- 1  1.16e-13      8.96
27 mu_0       0.9      1.31      1.12e- 3  2.77e-23     23.3 
[1] "Total run time was 296.97 seconds"
