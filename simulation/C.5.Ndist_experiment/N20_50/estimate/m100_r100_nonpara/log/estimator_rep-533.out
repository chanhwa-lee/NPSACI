
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3356"
[1] "cluster size dist'n: "

21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 37 38 39 40 41 42 43 44 45 46 47 
 5  5  4  6  4  4  3  5  5  1  4  3  4  6  3  2  3  5  3  1  4  5  2  1  1  1 
48 49 50 
 2  5  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03216 0.34415 0.60938 1.00000 6.91244 
[1] "event indicator table: "

   0    1 
1966 1390 
[1] "treatment indicator table: "

   0    1 
1247 2109 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1660
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1696
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 191.086 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.525 0.146 
 2 mu         0.1   0.2 0.665 0.190 
 3 mu         0.1   0.3 0.767 0.209 
 4 mu         0.1   0.4 0.811 0.219 
 5 mu         0.1   0.5 0.860 0.233 
 6 mu         0.2   0.1 0.402 0.0820
 7 mu         0.2   0.2 0.498 0.103 
 8 mu         0.2   0.3 0.579 0.107 
 9 mu         0.2   0.4 0.602 0.0906
10 mu         0.2   0.5 0.635 0.0852
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      1.25         0.266 0.0000135      29.4 
 2 mu         0.2      0.939        0.867 0.0250          2.78
 3 mu         0.3      0.987        0.950 0.351           2.06
 4 mu         0.4      0.993        0.989 0.618           1.81
 5 mu         0.5      0.992        0.980 0.635           1.51
 6 mu         0.6      1.00         0.995 0.802           1.19
 7 mu         0.7      1.01         0.992 0.729           1.31
 8 mu         0.8      1.01         0.998 0.730           1.48
 9 mu         0.9      1.03         1.01  0.447           2.11
10 mu_1       0.1      0.994        0.489 0.0000459      13.0 
11 mu_1       0.2      0.949        0.934 0.0432          2.36
12 mu_1       0.3      0.989        0.961 0.424           2.20
13 mu_1       0.4      0.992        0.988 0.644           1.66
14 mu_1       0.5      0.993        0.982 0.653           1.48
15 mu_1       0.6      1.00         1.00  0.799           1.18
16 mu_1       0.7      1.01         0.993 0.713           1.32
17 mu_1       0.8      1.01         1.00  0.715           1.48
18 mu_1       0.9      1.04         0.994 0.440           2.17
19 mu_0       0.1      1.27         0.242 0.00000985     31.2 
20 mu_0       0.2      0.936        0.854 0.0204          2.88
21 mu_0       0.3      0.986        0.955 0.320           2.00
22 mu_0       0.4      0.994        0.994 0.598           1.91
23 mu_0       0.5      0.991        0.986 0.616           1.53
24 mu_0       0.6      1.00         0.997 0.805           1.23
25 mu_0       0.7      1.01         0.990 0.765           1.26
26 mu_0       0.8      1.01         0.991 0.739           1.49
27 mu_0       0.9      1.02         0.982 0.506           1.55
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.193     1.73e-11  1.92e-43      7.15
 2 mu         0.2      1.31      2.40e- 6  4.27e-29     44.0 
 3 mu         0.3      1.24      1.59e- 3  9.26e-21     30.6 
 4 mu         0.4      0.947     9.63e- 2  6.75e-15      8.82
 5 mu         0.5      1.12      4.18e- 1  2.10e-10      5.12
 6 mu         0.6      1.09      1.02e+ 0  8.51e- 7      6.45
 7 mu         0.7      1.07      8.47e- 1  7.73e- 7      6.07
 8 mu         0.8      1.06      1.70e- 1  2.51e-11      6.02
 9 mu         0.9      1.20      9.51e- 4  4.81e-20     18.8 
10 mu_1       0.1      0.404     1.12e-10  1.84e-42     14.7 
11 mu_1       0.2      1.51      7.61e- 6  2.05e-28     50.3 
12 mu_1       0.3      1.13      3.29e- 3  2.96e-20     23.3 
13 mu_1       0.4      0.960     1.51e- 1  1.62e-14      8.63
14 mu_1       0.5      1.13      4.88e- 1  4.04e-10      4.66
15 mu_1       0.6      1.08      9.58e- 1  1.36e- 6      6.96
16 mu_1       0.7      1.07      7.87e- 1  2.27e- 7      5.61
17 mu_1       0.8      1.05      1.33e- 1  8.76e-12      6.27
18 mu_1       0.9      1.22      6.70e- 4  1.49e-20     19.9 
19 mu_0       0.1      0.170     7.14e-12  8.52e-45      6.31
20 mu_0       0.2      1.26      1.14e- 6  2.13e-30     42.4 
21 mu_0       0.3      1.29      8.60e- 4  5.29e-22     33.8 
22 mu_0       0.4      0.938     5.93e- 2  4.50e-16      8.95
23 mu_0       0.5      1.11      3.17e- 1  1.68e-11      6.23
24 mu_0       0.6      1.10      9.04e- 1  8.51e- 8      5.69
25 mu_0       0.7      1.09      8.78e- 1  2.05e- 6      7.14
26 mu_0       0.8      1.08      2.89e- 1  9.06e-11      5.66
27 mu_0       0.9      1.07      3.48e- 3  3.47e-19     10.5 
[1] "Total run time was 194.164 seconds"
