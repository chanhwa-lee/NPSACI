
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3355"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 6  7  3  1  2  3  4  3  3  2  4  3  4  4  4  6  3  2  7  1  3  2  6  1  2  3 
46 47 48 49 
 2  4  2  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04356 0.34686 0.61461 1.00000 7.58837 
[1] "event indicator table: "

   0    1 
1985 1370 
[1] "treatment indicator table: "

   0    1 
1213 2142 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1633
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1722
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 138.755 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.313 0.0456
 2 mu         0.1   0.2 0.339 0.104 
 3 mu         0.1   0.3 0.431 0.0812
 4 mu         0.1   0.4 0.471 0.114 
 5 mu         0.1   0.5 0.530 0.106 
 6 mu         0.2   0.1 0.322 0.0330
 7 mu         0.2   0.2 0.371 0.0776
 8 mu         0.2   0.3 0.451 0.0606
 9 mu         0.2   0.4 0.501 0.0823
10 mu         0.2   0.5 0.556 0.0821
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.932        0.655  0.000804      3.48
 2 mu         0.2      1.02         0.989  0.141         2.17
 3 mu         0.3      1.02         0.968  0.539         1.79
 4 mu         0.4      1.00         0.990  0.602         1.45
 5 mu         0.5      1.01         1.03   0.726         1.38
 6 mu         0.6      1.02         1.02   0.725         1.26
 7 mu         0.7      1.01         1.02   0.702         1.26
 8 mu         0.8      0.994        0.996  0.781         1.41
 9 mu         0.9      0.950        0.926  0.445         1.64
10 mu_1       0.1      0.979        0.860  0.00234       3.24
11 mu_1       0.2      1.02         0.967  0.216         2.21
12 mu_1       0.3      1.01         0.973  0.471         1.76
13 mu_1       0.4      1.00         0.998  0.633         1.44
14 mu_1       0.5      1.02         1.04   0.708         1.37
15 mu_1       0.6      1.02         1.02   0.712         1.26
16 mu_1       0.7      1.01         1.02   0.699         1.26
17 mu_1       0.8      0.992        0.993  0.769         1.41
18 mu_1       0.9      0.949        0.926  0.433         1.65
19 mu_0       0.1      0.926        0.627  0.000633      3.59
20 mu_0       0.2      1.02         1.01   0.122         2.16
21 mu_0       0.3      1.02         0.975  0.519         1.81
22 mu_0       0.4      0.998        0.983  0.575         1.48
23 mu_0       0.5      1.01         1.02   0.721         1.39
24 mu_0       0.6      1.02         1.03   0.743         1.27
25 mu_0       0.7      1.02         1.03   0.712         1.29
26 mu_0       0.8      1.00         0.985  0.766         1.40
27 mu_0       0.9      0.960        0.966  0.552         1.55
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.803     1.61e-11  4.75e-37     79.4 
 2 mu         0.2      0.831     1.59e- 6  2.61e-24     42.3 
 3 mu         0.3      1.00      1.08e- 3  5.70e-17     17.5 
 4 mu         0.4      1.14      4.84e- 2  7.26e-12     11.0 
 5 mu         0.5      1.33      4.29e- 1  5.14e- 8      8.58
 6 mu         0.6      1.34      1.03e+ 0  1.64e- 5      5.82
 7 mu         0.7      1.20      8.73e- 1  6.01e- 8      5.66
 8 mu         0.8      0.996     3.24e- 1  2.05e-13      4.44
 9 mu         0.9      1.01      1.12e- 3  2.45e-23     11.7 
10 mu_1       0.1      0.941     1.08e-10  4.34e-36     91.6 
11 mu_1       0.2      0.820     5.69e- 6  1.19e-23     24.4 
12 mu_1       0.3      1.03      2.27e- 3  1.74e-16     14.9 
13 mu_1       0.4      1.18      8.46e- 2  1.66e-11     11.6 
14 mu_1       0.5      1.34      5.23e- 1  9.41e- 8      8.58
15 mu_1       0.6      1.34      9.93e- 1  2.62e- 5      5.93
16 mu_1       0.7      1.19      8.54e- 1  2.19e- 8      5.33
17 mu_1       0.8      0.985     2.90e- 1  6.54e-14      4.54
18 mu_1       0.9      1.02      8.21e- 4  6.95e-24     12.1 
19 mu_0       0.1      0.787     7.65e-12  0            78.0 
20 mu_0       0.2      0.834     5.61e- 7  0            46.8 
21 mu_0       0.3      0.995     5.12e- 4  0            18.6 
22 mu_0       0.4      1.11      2.54e- 2  0            10.5 
23 mu_0       0.5      1.31      3.76e- 1  0             8.97
24 mu_0       0.6      1.34      9.00e- 1  0             5.64
25 mu_0       0.7      1.24      7.04e- 1  0             6.44
26 mu_0       0.8      1.04      3.30e- 1  0             4.52
27 mu_0       0.9      0.912     3.51e- 3  0             9.20
[1] "Total run time was 141.415 seconds"
