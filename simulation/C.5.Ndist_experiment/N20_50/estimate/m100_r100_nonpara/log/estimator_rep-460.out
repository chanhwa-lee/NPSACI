
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3392"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 35 36 37 38 39 40 41 42 43 44 45 46 
 6  6  4  2  7  3  1  3  2  2  2  4  3  6  1  5  8  3  3  1  2  2  3  2  2  4 
47 48 49 50 
 3  3  4  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03742 0.34130 0.61034 1.00000 7.00000 
[1] "event indicator table: "

   0    1 
2010 1382 
[1] "treatment indicator table: "

   0    1 
1288 2104 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1577
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1815
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 213.651 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.293 0.0438
 2 mu         0.1   0.2 0.342 0.0564
 3 mu         0.1   0.3 0.379 0.0573
 4 mu         0.1   0.4 0.390 0.0635
 5 mu         0.1   0.5 0.427 0.0710
 6 mu         0.2   0.1 0.338 0.0284
 7 mu         0.2   0.2 0.400 0.0289
 8 mu         0.2   0.3 0.442 0.0268
 9 mu         0.2   0.4 0.466 0.0300
10 mu         0.2   0.5 0.507 0.0368
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.749        0.406  0.000302      7.48
 2 mu         0.2      0.911        0.860  0.0627        2.46
 3 mu         0.3      0.968        0.969  0.337         1.70
 4 mu         0.4      1.01         0.986  0.629         1.63
 5 mu         0.5      1.02         0.993  0.657         1.32
 6 mu         0.6      1.02         1.03   0.623         1.37
 7 mu         0.7      1.02         1.01   0.623         1.32
 8 mu         0.8      0.983        0.977  0.650         1.47
 9 mu         0.9      0.975        0.962  0.616         1.61
10 mu_1       0.1      0.805        0.609  0.000860      4.48
11 mu_1       0.2      0.937        0.932  0.0930        2.23
12 mu_1       0.3      0.974        0.969  0.357         1.71
13 mu_1       0.4      1.01         0.972  0.675         1.61
14 mu_1       0.5      1.02         1.00   0.638         1.26
15 mu_1       0.6      1.02         1.02   0.640         1.35
16 mu_1       0.7      1.01         1.00   0.619         1.34
17 mu_1       0.8      0.981        0.970  0.643         1.47
18 mu_1       0.9      0.975        0.955  0.608         1.65
19 mu_0       0.1      0.742        0.380  0.000240      7.81
20 mu_0       0.2      0.904        0.841  0.0551        2.52
21 mu_0       0.3      0.966        0.946  0.328         1.69
22 mu_0       0.4      1.00         0.975  0.598         1.64
23 mu_0       0.5      1.02         0.999  0.677         1.39
24 mu_0       0.6      1.02         1.02   0.596         1.41
25 mu_0       0.7      1.02         1.03   0.632         1.34
26 mu_0       0.8      0.990        0.984  0.648         1.45
27 mu_0       0.9      0.973        0.962  0.615         1.45
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.0250     1.46e-11  8.94e-39     1.07 
 2 mu         0.2     0.634      3.49e- 6  1.96e-25    20.9  
 3 mu         0.3     1.34       2.22e- 3  9.67e-18    22.0  
 4 mu         0.4     1.41       8.89e- 2  2.19e-12    11.1  
 5 mu         0.5     1.36       5.69e- 1  2.42e- 8     7.84 
 6 mu         0.6     1.14       7.07e- 1  1.86e- 5     4.75 
 7 mu         0.7     1.00       4.71e- 1  2.97e- 7     5.34 
 8 mu         0.8     0.987      2.23e- 1  1.73e-12     4.42 
 9 mu         0.9     1.30       5.20e- 4  4.67e-22    12.8  
10 mu_1       0.1     0.0653     1.04e-10  8.21e-38     2.67 
11 mu_1       0.2     0.867      1.01e- 5  9.02e-25    26.2  
12 mu_1       0.3     1.40       4.79e- 3  2.96e-17    18.3  
13 mu_1       0.4     1.42       1.47e- 1  5.02e-12    10.9  
14 mu_1       0.5     1.34       5.42e- 1  4.45e- 8     7.68 
15 mu_1       0.6     1.12       7.45e- 1  3.02e- 5     4.41 
16 mu_1       0.7     0.995      4.13e- 1  1.17e- 7     5.52 
17 mu_1       0.8     0.995      1.68e- 1  6.00e-13     4.71 
18 mu_1       0.9     1.32       3.65e- 4  1.43e-22    13.1  
19 mu_0       0.1     0.0206     5.01e-12  0            0.889
20 mu_0       0.2     0.576      1.73e- 6  0           19.6  
21 mu_0       0.3     1.31       1.12e- 3  0           23.6  
22 mu_0       0.4     1.41       5.03e- 2  0           11.2  
23 mu_0       0.5     1.38       4.52e- 1  0            8.00 
24 mu_0       0.6     1.17       5.84e- 1  0            5.43 
25 mu_0       0.7     1.01       4.32e- 1  0            5.09 
26 mu_0       0.8     0.956      2.22e- 1  0            5.40 
27 mu_0       0.9     1.13       1.38e- 3  0           10.4  
[1] "Total run time was 216.846 seconds"
