
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3669"
[1] "cluster size dist'n: "

20 21 22 23 24 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 
 3  2  1  1  1  4  4  6  1  4  5  3  4  4  2  2  4  4  5  2  3  6  1  7  2  3 
47 48 49 50 
 3  4  4  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04283 0.38170 0.63931 1.00000 5.22785 
[1] "event indicator table: "

   0    1 
2209 1460 
[1] "treatment indicator table: "

   0    1 
1362 2307 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1875
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 64"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 80"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1794
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 263.938 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.636 0.145 
 2 mu         0.1   0.2 0.737 0.176 
 3 mu         0.1   0.3 0.831 0.204 
 4 mu         0.1   0.4 0.911 0.225 
 5 mu         0.1   0.5 0.985 0.246 
 6 mu         0.2   0.1 0.355 0.0442
 7 mu         0.2   0.2 0.398 0.0391
 8 mu         0.2   0.3 0.442 0.0413
 9 mu         0.2   0.4 0.487 0.0426
10 mu         0.2   0.5 0.529 0.0450
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.80         0.273  0.000499     34.0 
 2 mu         0.2      0.995        0.882  0.0411        4.25
 3 mu         0.3      1.02         1.00   0.257         2.05
 4 mu         0.4      1.01         1.04   0.586         1.76
 5 mu         0.5      1.01         1.00   0.664         1.35
 6 mu         0.6      0.999        0.993  0.751         1.36
 7 mu         0.7      0.983        0.987  0.710         1.31
 8 mu         0.8      0.989        1.00   0.571         1.41
 9 mu         0.9      1.10         1.11   0.301         2.03
10 mu_1       0.1      1.20         0.447  0.00165      12.4 
11 mu_1       0.2      0.991        0.940  0.0724        3.39
12 mu_1       0.3      1.02         1.05   0.336         1.91
13 mu_1       0.4      1.01         1.02   0.600         1.72
14 mu_1       0.5      1.01         1.01   0.682         1.33
15 mu_1       0.6      0.998        0.991  0.739         1.37
16 mu_1       0.7      0.981        0.982  0.716         1.29
17 mu_1       0.8      0.991        1.01   0.560         1.42
18 mu_1       0.9      1.10         1.12   0.278         2.07
19 mu_0       0.1      1.87         0.251  0.000370     37.7 
20 mu_0       0.2      0.996        0.858  0.0333        4.46
21 mu_0       0.3      1.01         0.974  0.224         2.15
22 mu_0       0.4      1.01         1.04   0.554         1.79
23 mu_0       0.5      1.01         1.00   0.646         1.37
24 mu_0       0.6      1.00         1.00   0.768         1.36
25 mu_0       0.7      0.987        0.994  0.695         1.34
26 mu_0       0.8      0.977        0.962  0.594         1.35
27 mu_0       0.9      1.06         1.06   0.469         1.72
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.796     1.42e-12  8.71e-39     77.1 
 2 mu         0.2      1.69      5.05e- 7  1.91e-25    101.  
 3 mu         0.3      1.14      5.92e- 4  9.41e-18     23.5 
 4 mu         0.4      0.873     3.49e- 2  2.13e-12      6.83
 5 mu         0.5      1.07      3.64e- 1  2.36e- 8     22.2 
 6 mu         0.6      1.14      6.56e- 1  8.59e- 6     13.5 
 7 mu         0.7      1.15      7.07e- 1  1.63e- 9      5.10
 8 mu         0.8      1.09      2.62e- 1  5.62e-15      6.81
 9 mu         0.9      1.16      1.55e- 3  6.73e-25     24.9 
10 mu_1       0.1      1.25      9.20e-12  7.99e-38    119.  
11 mu_1       0.2      1.66      1.67e- 6  8.78e-25     77.8 
12 mu_1       0.3      1.05      1.34e- 3  2.88e-17     19.2 
13 mu_1       0.4      0.881     5.93e- 2  4.89e-12      7.86
14 mu_1       0.5      1.10      4.45e- 1  4.33e- 8     23.2 
15 mu_1       0.6      1.15      7.37e- 1  2.20e- 6     11.8 
16 mu_1       0.7      1.14      7.71e- 1  3.59e-10      5.08
17 mu_1       0.8      1.08      2.29e- 1  1.08e-15      7.19
18 mu_1       0.9      1.17      1.05e- 3  1.83e-25     26.7 
19 mu_0       0.1      0.745     4.92e-13  0            72.5 
20 mu_0       0.2      1.70      2.18e- 7  0           107.  
21 mu_0       0.3      1.18      2.72e- 4  0            25.4 
22 mu_0       0.4      0.868     1.99e- 2  0             8.04
23 mu_0       0.5      1.04      2.52e- 1  0            21.1 
24 mu_0       0.6      1.14      5.82e- 1  0            16.2 
25 mu_0       0.7      1.17      8.17e- 1  0             5.26
26 mu_0       0.8      1.10      4.12e- 1  0             6.11
27 mu_0       0.9      1.12      4.63e- 3  0            14.0 
[1] "Total run time was 267.891 seconds"
