
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3434"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 35 36 37 38 39 40 41 42 43 44 45 46 
 5  2  5  2  6  3  3  3  3  2  2  5  3  3  4  6  5  3  3  3  1  5  3  2  4  6 
47 48 49 50 
 1  3  1  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03625 0.34323 0.61203 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
2041 1393 
[1] "treatment indicator table: "

   0    1 
1340 2094 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1672
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1762
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 199.614 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.322 0.0997
 2 mu         0.1   0.2 0.440 0.121 
 3 mu         0.1   0.3 0.462 0.123 
 4 mu         0.1   0.4 0.523 0.0993
 5 mu         0.1   0.5 0.603 0.107 
 6 mu         0.2   0.1 0.333 0.0510
 7 mu         0.2   0.2 0.440 0.0746
 8 mu         0.2   0.3 0.484 0.0780
 9 mu         0.2   0.4 0.546 0.0674
10 mu         0.2   0.5 0.623 0.0993
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.963        0.669 0.0000506      9.90
 2 mu         0.2      1.06         0.983 0.0325         5.70
 3 mu         0.3      1.06         0.987 0.343          3.09
 4 mu         0.4      1.03         0.997 0.660          2.07
 5 mu         0.5      1.00         1.01  0.756          1.41
 6 mu         0.6      0.994        1.00  0.681          1.26
 7 mu         0.7      0.976        0.977 0.731          1.23
 8 mu         0.8      0.973        0.960 0.640          1.34
 9 mu         0.9      1.00         1.03  0.322          1.66
10 mu_1       0.1      1.04         0.874 0.000169       9.08
11 mu_1       0.2      1.06         1.01  0.0585         5.00
12 mu_1       0.3      1.05         1.00  0.424          2.98
13 mu_1       0.4      1.03         1.00  0.658          1.91
14 mu_1       0.5      1.00         1.02  0.757          1.37
15 mu_1       0.6      0.993        1.01  0.691          1.26
16 mu_1       0.7      0.974        0.982 0.743          1.22
17 mu_1       0.8      0.974        0.966 0.647          1.34
18 mu_1       0.9      1.00         1.04  0.300          1.72
19 mu_0       0.1      0.954        0.647 0.0000374      9.99
20 mu_0       0.2      1.06         0.976 0.0260         5.87
21 mu_0       0.3      1.06         0.983 0.308          3.14
22 mu_0       0.4      1.03         1.00  0.661          2.17
23 mu_0       0.5      1.01         1.01  0.730          1.46
24 mu_0       0.6      0.995        1.00  0.667          1.25
25 mu_0       0.7      0.981        0.988 0.702          1.25
26 mu_0       0.8      0.969        0.972 0.611          1.34
27 mu_0       0.9      0.990        0.996 0.475          1.70
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      4.99      3.85e-11  9.61e-42    297.  
 2 mu         0.2      1.73      9.55e- 6  1.69e-28    102.  
 3 mu         0.3      0.887     2.80e- 3  9.47e-21     22.5 
 4 mu         0.4      1.08      6.91e- 2  2.98e-15     10.3 
 5 mu         0.5      1.19      5.57e- 1  5.47e-11      7.50
 6 mu         0.6      1.21      9.09e- 1  5.45e-11      4.35
 7 mu         0.7      1.23      8.62e- 1  2.41e-16      4.36
 8 mu         0.8      0.877     2.93e- 1  4.90e-24      4.80
 9 mu         0.9      1.08      1.72e- 3  2.23e-37     27.2 
10 mu_1       0.1      4.92      2.38e-10  9.61e-41    242.  
11 mu_1       0.2      1.27      2.68e- 5  8.46e-28     62.0 
12 mu_1       0.3      0.905     6.17e- 3  3.16e-20     19.6 
13 mu_1       0.4      1.13      1.15e- 1  7.44e-15     10.8 
14 mu_1       0.5      1.20      7.55e- 1  1.09e-10      6.25
15 mu_1       0.6      1.22      9.14e- 1  7.42e-12      4.01
16 mu_1       0.7      1.21      7.88e- 1  2.81e-17      4.52
17 mu_1       0.8      0.852     2.33e- 1  5.00e-25      5.15
18 mu_1       0.9      1.11      1.23e- 3  2.02e-38     29.6 
19 mu_0       0.1      5.00      1.63e-11  0           303.  
20 mu_0       0.2      1.84      5.18e- 6  0           112.  
21 mu_0       0.3      0.880     1.37e- 3  0            23.8 
22 mu_0       0.4      1.05      3.66e- 2  0            10.1 
23 mu_0       0.5      1.18      3.87e- 1  0             8.75
24 mu_0       0.6      1.20      7.86e- 1  0             4.97
25 mu_0       0.7      1.26      8.06e- 1  0             4.08
26 mu_0       0.8      0.978     3.99e- 1  0             4.76
27 mu_0       0.9      0.778     5.24e- 3  0             8.15
[1] "Total run time was 203.134 seconds"
