
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3562"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 28 29 30 31 32 33 35 36 37 38 39 40 41 42 43 44 45 46 47 
 2  5  4  2  3  5  5  1  2  3  7  1  3  3  3  3  6  3  3  4  3  3  1  4  5  6 
48 49 50 
 4  4  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03538 0.36611 0.63142 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
2121 1441 
[1] "treatment indicator table: "

   0    1 
1304 2258 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1815
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1747
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 205.873 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.353 0.0642
 2 mu         0.1   0.2 0.465 0.0672
 3 mu         0.1   0.3 0.547 0.0757
 4 mu         0.1   0.4 0.537 0.0800
 5 mu         0.1   0.5 0.684 0.0952
 6 mu         0.2   0.1 0.318 0.0397
 7 mu         0.2   0.2 0.419 0.0340
 8 mu         0.2   0.3 0.490 0.0392
 9 mu         0.2   0.4 0.492 0.0374
10 mu         0.2   0.5 0.620 0.0478
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.08         0.738 0.0000229     10.8 
 2 mu         0.2      1.02         0.907 0.0217         3.44
 3 mu         0.3      0.965        0.950 0.316          1.95
 4 mu         0.4      0.974        0.974 0.564          1.38
 5 mu         0.5      1.00         1.02  0.630          1.54
 6 mu         0.6      0.995        0.996 0.599          1.29
 7 mu         0.7      1.00         1.01  0.739          1.37
 8 mu         0.8      1.01         1.01  0.667          1.52
 9 mu         0.9      0.962        0.969 0.299          2.00
10 mu_1       0.1      1.10         0.737 0.0000722      7.76
11 mu_1       0.2      0.990        0.907 0.0363         3.00
12 mu_1       0.3      0.960        0.945 0.417          1.89
13 mu_1       0.4      0.980        0.972 0.560          1.46
14 mu_1       0.5      1.01         1.02  0.601          1.53
15 mu_1       0.6      0.993        0.990 0.601          1.30
16 mu_1       0.7      1.00         1.00  0.731          1.37
17 mu_1       0.8      1.01         1.01  0.663          1.52
18 mu_1       0.9      0.961        0.960 0.286          2.02
19 mu_0       0.1      1.08         0.698 0.0000175     11.2 
20 mu_0       0.2      1.03         0.909 0.0180         3.67
21 mu_0       0.3      0.967        0.944 0.261          1.97
22 mu_0       0.4      0.969        0.965 0.532          1.40
23 mu_0       0.5      1.00         1.01  0.619          1.55
24 mu_0       0.6      0.997        0.999 0.585          1.36
25 mu_0       0.7      0.997        1.00  0.703          1.36
26 mu_0       0.8      1.02         1.01  0.682          1.49
27 mu_0       0.9      0.978        0.968 0.420          1.84
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      4.65      7.24e-13  7.14e-40    459.  
 2 mu         0.2      2.06      4.91e- 7  1.77e-26    153.  
 3 mu         0.3      1.25      3.02e- 4  9.93e-19     23.2 
 4 mu         0.4      1.41      4.10e- 2  2.62e-13     14.6 
 5 mu         0.5      1.26      2.49e- 1  3.48e- 9     11.3 
 6 mu         0.6      1.04      3.37e- 1  6.52e- 6      8.64
 7 mu         0.7      0.946     4.48e- 1  2.07e- 8      5.31
 8 mu         0.8      1.24      2.35e- 1  5.43e-13     12.0 
 9 mu         0.9      1.19      1.34e- 3  1.23e-21     14.0 
10 mu_1       0.1      4.74      5.04e-12  6.70e-39    459.  
11 mu_1       0.2      1.46      1.55e- 6  8.28e-26     76.4 
12 mu_1       0.3      1.25      7.02e- 4  3.10e-18     23.0 
13 mu_1       0.4      1.40      6.34e- 2  6.14e-13     14.8 
14 mu_1       0.5      1.22      2.93e- 1  6.53e- 9     12.1 
15 mu_1       0.6      1.02      2.95e- 1  5.12e- 6      7.70
16 mu_1       0.7      0.958     4.23e- 1  2.95e- 9      5.60
17 mu_1       0.8      1.25      1.87e- 1  6.78e-14     12.1 
18 mu_1       0.9      1.19      9.08e- 4  4.17e-22     14.2 
19 mu_0       0.1      4.64      2.23e-13  0           459.  
20 mu_0       0.2      2.21      2.27e- 7  0           172.  
21 mu_0       0.3      1.25      1.31e- 4  0            23.3 
22 mu_0       0.4      1.43      2.49e- 2  0            14.4 
23 mu_0       0.5      1.30      1.52e- 1  0            10.5 
24 mu_0       0.6      1.08      3.22e- 1  0            10.0 
25 mu_0       0.7      0.919     3.55e- 1  0             6.33
26 mu_0       0.8      1.18      2.65e- 1  0            11.6 
27 mu_0       0.9      1.24      3.94e- 3  0            12.8 
[1] "Total run time was 208.827 seconds"
