
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3495"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 4  2  2  2  5  2  2  5  4  5  4  3  1  3  1  5  3  6  7  2  4  4  2  1  2  4 
46 47 48 49 50 
 2  3  3  4  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.06115 0.40260 0.66432 1.00000 5.00000 
[1] "event indicator table: "

   0    1 
2041 1454 
[1] "treatment indicator table: "

   0    1 
1277 2218 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1710
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1785
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 19"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 33"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 286.254 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.440 0.0899
 2 mu         0.1   0.2 0.496 0.0927
 3 mu         0.1   0.3 0.588 0.113 
 4 mu         0.1   0.4 0.622 0.117 
 5 mu         0.1   0.5 0.638 0.122 
 6 mu         0.2   0.1 0.338 0.0563
 7 mu         0.2   0.2 0.392 0.0617
 8 mu         0.2   0.3 0.482 0.0742
 9 mu         0.2   0.4 0.501 0.0721
10 mu         0.2   0.5 0.528 0.0836
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1      1.07         0.691 0.00000000488     12.8 
 2 mu         0.2      1.04         0.891 0.000487           9.03
 3 mu         0.3      0.984        0.969 0.0692             2.64
 4 mu         0.4      1.02         1.03  0.341              1.69
 5 mu         0.5      1.02         1.00  0.568              1.40
 6 mu         0.6      1.02         1.02  0.633              1.39
 7 mu         0.7      1.02         1.01  0.692              1.36
 8 mu         0.8      0.978        0.980 0.568              1.69
 9 mu         0.9      0.945        0.933 0.0538             2.41
10 mu_1       0.1      1.15         0.779 0.0000000211      13.5 
11 mu_1       0.2      1.02         0.877 0.00106            6.74
12 mu_1       0.3      0.986        0.988 0.103              2.03
13 mu_1       0.4      1.02         1.04  0.324              1.58
14 mu_1       0.5      1.02         1.01  0.615              1.39
15 mu_1       0.6      1.03         1.02  0.642              1.40
16 mu_1       0.7      1.02         1.00  0.696              1.35
17 mu_1       0.8      0.976        0.975 0.545              1.76
18 mu_1       0.9      0.944        0.939 0.0493             2.39
19 mu_0       0.1      1.06         0.654 0.00000000307     12.7 
20 mu_0       0.2      1.04         0.899 0.000343           9.61
21 mu_0       0.3      0.983        0.969 0.0549             2.90
22 mu_0       0.4      1.02         1.03  0.353              1.76
23 mu_0       0.5      1.02         1.02  0.521              1.45
24 mu_0       0.6      1.02         1.02  0.620              1.37
25 mu_0       0.7      1.03         1.02  0.685              1.37
26 mu_0       0.8      0.989        1.00  0.630              1.59
27 mu_0       0.9      0.954        0.935 0.0936             2.54
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      6.35      6.55e-14  7.44e-46    348.  
 2 mu         0.2      3.75      1.02e- 7  3.73e-31    156.  
 3 mu         0.3      1.60      1.76e- 4  1.39e-22     58.8 
 4 mu         0.4      0.695     1.51e- 2  1.57e-16     10.0 
 5 mu         0.5      0.808     1.89e- 1  7.35e-12      6.76
 6 mu         0.6      1.32      8.25e- 1  1.56e-13      7.76
 7 mu         0.7      1.57      1.19e+ 0  2.14e-19     10.1 
 8 mu         0.8      1.80      3.29e- 1  9.85e-28     30.1 
 9 mu         0.9      1.30      2.52e- 3  4.43e-42     29.0 
10 mu_1       0.1      5.63      4.23e-13  7.30e-45    235.  
11 mu_1       0.2      3.12      3.47e- 7  1.83e-30    111.  
12 mu_1       0.3      1.24      3.95e- 4  4.53e-22     50.2 
13 mu_1       0.4      0.669     2.54e- 2  3.85e-16      6.42
14 mu_1       0.5      0.865     2.50e- 1  1.44e-11      7.09
15 mu_1       0.6      1.36      6.63e- 1  1.04e-14      8.62
16 mu_1       0.7      1.57      1.14e+ 0  1.22e-20      9.66
17 mu_1       0.8      1.82      2.68e- 1  4.93e-29     32.1 
18 mu_1       0.9      1.27      1.82e- 3  1.97e-43     27.5 
19 mu_0       0.1      6.43      2.50e-14  1.65e-47    371.  
20 mu_0       0.2      3.91      4.15e- 8  9.31e-33    167.  
21 mu_0       0.3      1.76      8.24e- 5  3.96e-24     62.5 
22 mu_0       0.4      0.713     8.12e- 3  5.24e-18     12.4 
23 mu_0       0.5      0.750     1.29e- 1  2.94e-13      6.44
24 mu_0       0.6      1.24      7.33e- 1  3.74e-13      6.91
25 mu_0       0.7      1.57      1.18e+ 0  6.84e-19     11.3 
26 mu_0       0.8      1.75      5.04e- 1  4.73e-27     22.0 
27 mu_0       0.9      1.60      8.81e- 3  4.25e-41     42.4 
[1] "Total run time was 290.248 seconds"
