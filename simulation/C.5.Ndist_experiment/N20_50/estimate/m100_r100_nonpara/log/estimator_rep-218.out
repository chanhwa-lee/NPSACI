
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3476"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 38 39 40 41 42 43 44 45 46 47 
 3  5  1  2  3  4  3  2  4  5  2  4  4  3  5  4  6  4  7  5  4  4  1  2  4  2 
48 49 50 
 4  2  1 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03898 0.37721 0.62085 1.00000 7.00000 
[1] "event indicator table: "

   0    1 
2073 1403 
[1] "treatment indicator table: "

   0    1 
1187 2289 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1660
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1816
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 195.769 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.335 0.0813
 2 mu         0.1   0.2 0.503 0.0830
 3 mu         0.1   0.3 0.528 0.0932
 4 mu         0.1   0.4 0.581 0.104 
 5 mu         0.1   0.5 0.661 0.103 
 6 mu         0.2   0.1 0.286 0.0507
 7 mu         0.2   0.2 0.438 0.0433
 8 mu         0.2   0.3 0.457 0.0430
 9 mu         0.2   0.4 0.504 0.0486
10 mu         0.2   0.5 0.574 0.0411
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.08         0.556 0.0000799     12.2 
 2 mu         0.2      0.975        0.931 0.0598         3.58
 3 mu         0.3      0.964        0.937 0.421          1.76
 4 mu         0.4      0.962        0.925 0.414          1.51
 5 mu         0.5      0.978        0.953 0.552          1.33
 6 mu         0.6      0.998        0.997 0.646          1.32
 7 mu         0.7      1.03         1.02  0.680          1.50
 8 mu         0.8      1.02         1.01  0.636          1.39
 9 mu         0.9      1.01         0.969 0.466          1.87
10 mu_1       0.1      1.04         0.728 0.000257      10.2 
11 mu_1       0.2      0.965        0.936 0.0994         2.42
12 mu_1       0.3      0.965        0.955 0.406          1.77
13 mu_1       0.4      0.963        0.930 0.440          1.47
14 mu_1       0.5      0.982        0.966 0.573          1.34
15 mu_1       0.6      1.00         0.995 0.654          1.33
16 mu_1       0.7      1.03         1.02  0.675          1.51
17 mu_1       0.8      1.02         1.02  0.636          1.39
18 mu_1       0.9      1.01         0.971 0.451          1.91
19 mu_0       0.1      1.09         0.526 0.0000602     12.4 
20 mu_0       0.2      0.977        0.937 0.0499         3.88
21 mu_0       0.3      0.964        0.950 0.372          1.75
22 mu_0       0.4      0.960        0.927 0.396          1.54
23 mu_0       0.5      0.974        0.954 0.531          1.39
24 mu_0       0.6      0.994        0.993 0.633          1.37
25 mu_0       0.7      1.02         1.01  0.691          1.49
26 mu_0       0.8      1.03         1.02  0.635          1.45
27 mu_0       0.9      1.01         1.00  0.597          1.69
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.0343     5.67e-13  1.12e-41      2.31
 2 mu         0.2     0.579      5.84e- 7  6.23e-28     21.0 
 3 mu         0.3     1.03       3.02e- 4  6.01e-20     22.0 
 4 mu         0.4     1.32       1.85e- 2  2.47e-14     10.4 
 5 mu         0.5     1.40       1.98e- 1  4.91e-10      9.38
 6 mu         0.6     1.08       5.76e- 1  1.38e- 6      8.55
 7 mu         0.7     1.09       7.70e- 1  9.62e- 7      5.69
 8 mu         0.8     1.30       3.44e- 1  1.91e-11      8.32
 9 mu         0.9     1.29       1.47e- 2  5.77e-20     22.9 
10 mu_1       0.1     0.0844     4.07e-12  1.07e-40      5.55
11 mu_1       0.2     0.757      1.78e- 6  2.98e-27     26.2 
12 mu_1       0.3     1.07       7.19e- 4  1.92e-19     18.3 
13 mu_1       0.4     1.38       3.13e- 2  5.91e-14     11.3 
14 mu_1       0.5     1.38       2.15e- 1  9.42e-10      9.66
15 mu_1       0.6     1.05       5.59e- 1  2.20e- 6      7.86
16 mu_1       0.7     1.11       7.52e- 1  3.44e- 7      5.86
17 mu_1       0.8     1.30       3.73e- 1  5.96e-12      8.11
18 mu_1       0.9     1.30       1.16e- 2  1.60e-20     23.1 
19 mu_0       0.1     0.0287     1.77e-13  5.19e-43      1.95
20 mu_0       0.2     0.534      2.81e- 7  3.24e-29     19.7 
21 mu_0       0.3     1.01       1.23e- 4  3.57e-21     23.6 
22 mu_0       0.4     1.27       1.11e- 2  1.71e-15      9.83
23 mu_0       0.5     1.42       2.47e- 1  4.09e-11      9.09
24 mu_0       0.6     1.12       4.59e- 1  1.44e- 7      9.58
25 mu_0       0.7     1.05       6.70e- 1  2.40e- 6      5.36
26 mu_0       0.8     1.32       4.12e- 1  7.15e-11      9.13
27 mu_0       0.9     1.20       4.02e- 2  4.33e-19     21.3 
[1] "Total run time was 199.047 seconds"
