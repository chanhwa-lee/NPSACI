
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3471"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 5  2  4  2  3  1  5  2  5  3  3  7  4  3  2  5  4  3  1  2  2  3  3  1  4  5 
46 47 48 49 50 
 4  4  1  4  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02562 0.30467 0.57288 0.95427 6.00000 
[1] "event indicator table: "

   0    1 
2039 1432 
[1] "treatment indicator table: "

   0    1 
1438 2033 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1842
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1629
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 33"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 264.451 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.351 0.0994
 2 mu         0.1   0.2 0.397 0.0883
 3 mu         0.1   0.3 0.442 0.0680
 4 mu         0.1   0.4 0.496 0.0699
 5 mu         0.1   0.5 0.518 0.0671
 6 mu         0.2   0.1 0.355 0.0507
 7 mu         0.2   0.2 0.448 0.0522
 8 mu         0.2   0.3 0.491 0.0385
 9 mu         0.2   0.4 0.552 0.0408
10 mu         0.2   0.5 0.594 0.0508
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      0.863        0.512 0.0000136       4.10
 2 mu         0.2      0.975        1.00  0.0209          2.44
 3 mu         0.3      0.986        1.01  0.310           1.96
 4 mu         0.4      1.01         1.01  0.648           1.65
 5 mu         0.5      1.02         1.01  0.654           1.48
 6 mu         0.6      1.00         1.00  0.648           1.28
 7 mu         0.7      1.00         0.998 0.655           1.30
 8 mu         0.8      0.995        0.990 0.635           1.90
 9 mu         0.9      1.02         0.987 0.189           2.64
10 mu_1       0.1      0.941        0.742 0.0000465       3.35
11 mu_1       0.2      0.975        1.02  0.0368          2.19
12 mu_1       0.3      0.991        1.00  0.381           1.98
13 mu_1       0.4      1.01         1.01  0.651           1.67
14 mu_1       0.5      1.01         1.02  0.630           1.42
15 mu_1       0.6      1.00         1.00  0.656           1.27
16 mu_1       0.7      1.00         0.994 0.649           1.29
17 mu_1       0.8      0.995        0.979 0.614           1.92
18 mu_1       0.9      1.02         0.987 0.178           2.72
19 mu_0       0.1      0.854        0.480 0.00000993      4.19
20 mu_0       0.2      0.974        1.00  0.0169          2.50
21 mu_0       0.3      0.984        1.01  0.279           1.95
22 mu_0       0.4      1.01         1.01  0.646           1.63
23 mu_0       0.5      1.02         0.998 0.677           1.54
24 mu_0       0.6      1.01         1.00  0.638           1.28
25 mu_0       0.7      0.999        0.994 0.668           1.32
26 mu_0       0.8      0.998        1.00  0.662           1.79
27 mu_0       0.9      0.987        0.967 0.295           1.91
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.800     1.69e-11  4.32e-35     61.2 
 2 mu         0.2      1.08      3.19e- 6  6.67e-23     28.1 
 3 mu         0.3      1.29      2.10e- 3  7.41e-16     29.7 
 4 mu         0.4      1.23      1.14e- 1  6.18e-11     20.7 
 5 mu         0.5      1.15      6.49e- 1  3.37e- 7     10.0 
 6 mu         0.6      1.03      5.92e- 1  7.69e-10      5.19
 7 mu         0.7      1.11      5.47e- 1  9.40e-15      7.10
 8 mu         0.8      1.41      3.80e- 2  7.37e-22      9.50
 9 mu         0.9      1.80      9.95e- 6  3.02e-34     78.8 
10 mu_1       0.1      1.03      1.23e-10  4.02e-34     65.1 
11 mu_1       0.2      1.16      9.57e- 6  3.11e-22     31.7 
12 mu_1       0.3      1.29      4.48e- 3  2.30e-15     31.9 
13 mu_1       0.4      1.21      1.61e- 1  1.44e-10     16.7 
14 mu_1       0.5      1.12      7.21e- 1  6.27e- 7      9.55
15 mu_1       0.6      1.02      6.12e- 1  1.36e-10      5.34
16 mu_1       0.7      1.14      4.26e- 1  1.43e-15      7.73
17 mu_1       0.8      1.41      2.80e- 2  9.80e-23      9.81
18 mu_1       0.9      1.81      6.80e- 6  3.57e-35     81.5 
19 mu_0       0.1      0.774     5.76e-12  3.27e-36     60.8 
20 mu_0       0.2      1.06      1.59e- 6  5.68e-24     27.2 
21 mu_0       0.3      1.28      1.19e- 3  7.21e-17     28.7 
22 mu_0       0.4      1.24      7.75e- 2  7.03e-12     23.4 
23 mu_0       0.5      1.17      4.32e- 1  4.59e- 8     10.5 
24 mu_0       0.6      1.03      6.05e- 1  1.72e- 9      4.97
25 mu_0       0.7      1.06      4.90e- 1  2.80e-14      5.63
26 mu_0       0.8      1.39      8.21e- 2  3.29e-21     10.5 
27 mu_0       0.9      1.66      4.21e- 5  2.70e-33     53.7 
[1] "Total run time was 268.905 seconds"
