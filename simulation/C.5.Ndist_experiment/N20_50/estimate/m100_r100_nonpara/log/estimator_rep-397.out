
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3551"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 33 34 35 36 37 38 39 40 41 42 43 44 45 46 
 1  7  3  1  3  4  1  7  4  3  4  3  1  4  1  4  2  4  3  3  3  3  2  3  7  8 
47 48 49 50 
 3  1  4  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03252 0.33654 0.61915 1.00000 8.00000 
[1] "event indicator table: "

   0    1 
2101 1450 
[1] "treatment indicator table: "

   0    1 
1351 2200 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1788
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1763
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 240.516 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.384 0.0550
 2 mu         0.1   0.2 0.426 0.0660
 3 mu         0.1   0.3 0.441 0.0735
 4 mu         0.1   0.4 0.479 0.0947
 5 mu         0.1   0.5 0.501 0.113 
 6 mu         0.2   0.1 0.371 0.0350
 7 mu         0.2   0.2 0.428 0.0389
 8 mu         0.2   0.3 0.459 0.0403
 9 mu         0.2   0.4 0.510 0.0590
10 mu         0.2   0.5 0.537 0.0709
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.931        0.622  0.00119       7.51
 2 mu         0.2      1.01         0.938  0.205         2.72
 3 mu         0.3      0.984        1.01   0.364         1.51
 4 mu         0.4      0.998        1.01   0.497         1.65
 5 mu         0.5      1.00         1.02   0.604         1.30
 6 mu         0.6      1.00         0.981  0.690         1.31
 7 mu         0.7      0.986        0.979  0.665         1.37
 8 mu         0.8      1.01         0.998  0.548         1.43
 9 mu         0.9      1.05         1.03   0.180         2.15
10 mu_1       0.1      1.03         0.818  0.00319       4.90
11 mu_1       0.2      0.993        0.950  0.263         2.48
12 mu_1       0.3      0.986        1.01   0.389         1.55
13 mu_1       0.4      0.998        1.01   0.508         1.59
14 mu_1       0.5      1.00         1.01   0.601         1.31
15 mu_1       0.6      1.00         0.980  0.689         1.31
16 mu_1       0.7      0.986        0.979  0.670         1.36
17 mu_1       0.8      1.01         1.00   0.535         1.46
18 mu_1       0.9      1.05         1.02   0.159         2.14
19 mu_0       0.1      0.920        0.588  0.000966      7.80
20 mu_0       0.2      1.01         0.920  0.183         2.78
21 mu_0       0.3      0.983        0.997  0.354         1.58
22 mu_0       0.4      0.998        1.01   0.491         1.68
23 mu_0       0.5      1.00         1.02   0.607         1.28
24 mu_0       0.6      1.00         0.985  0.690         1.34
25 mu_0       0.7      0.987        0.978  0.652         1.40
26 mu_0       0.8      0.997        0.985  0.599         1.35
27 mu_0       0.9      1.04         1.05   0.363         2.17
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      2.37      9.11e-12  1.43e-38    139.  
 2 mu         0.2      1.44      4.09e- 6  2.71e-25     59.5 
 3 mu         0.3      1.16      1.35e- 3  5.17e-18     18.1 
 4 mu         0.4      1.17      7.04e- 2  6.72e-13     17.8 
 5 mu         0.5      0.976     3.36e- 1  5.48e- 9      5.87
 6 mu         0.6      0.835     5.94e- 1  7.43e- 6      3.66
 7 mu         0.7      1.10      7.09e- 1  1.06e- 6      5.96
 8 mu         0.8      1.24      2.03e- 1  2.12e-11      8.02
 9 mu         0.9      1.16      3.54e- 4  2.28e-20     19.0 
10 mu_1       0.1      2.51      5.01e-11  1.31e-37    133.  
11 mu_1       0.2      1.04      1.36e- 5  1.30e-24     34.8 
12 mu_1       0.3      1.13      2.95e- 3  1.65e-17     17.6 
13 mu_1       0.4      1.15      1.13e- 1  1.60e-12     16.3 
14 mu_1       0.5      0.940     4.23e- 1  1.05e- 8      6.00
15 mu_1       0.6      0.838     5.36e- 1  1.18e- 5      3.66
16 mu_1       0.7      1.12      7.85e- 1  1.81e- 7      5.98
17 mu_1       0.8      1.24      1.68e- 1  7.64e-12      8.22
18 mu_1       0.9      1.16      2.53e- 4  7.31e-21     19.4 
19 mu_0       0.1      2.35      4.56e-12  0           140.  
20 mu_0       0.2      1.55      1.52e- 6  0            67.3 
21 mu_0       0.3      1.17      6.59e- 4  0            18.3 
22 mu_0       0.4      1.19      4.42e- 2  0            18.7 
23 mu_0       0.5      1.01      2.50e- 1  0             5.75
24 mu_0       0.6      0.832     6.16e- 1  0             3.66
25 mu_0       0.7      1.03      4.87e- 1  0             5.92
26 mu_0       0.8      1.24      2.58e- 1  0             7.22
27 mu_0       0.9      1.15      1.01e- 3  0            16.2 
[1] "Total run time was 244.168 seconds"
