
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3378"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 5  2  5  1  4  7  2  2  1  3  5  4  4  1  4  6  2  4  8  6  2  1  3  3  2  4 
46 47 48 49 
 2  2  3  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02825 0.34375 0.59948 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
2006 1372 
[1] "treatment indicator table: "

   0    1 
1252 2126 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1683
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1695
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 200.029 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.524 0.119 
 2 mu         0.1   0.2 0.627 0.135 
 3 mu         0.1   0.3 0.703 0.140 
 4 mu         0.1   0.4 0.809 0.166 
 5 mu         0.1   0.5 0.803 0.162 
 6 mu         0.2   0.1 0.415 0.0696
 7 mu         0.2   0.2 0.513 0.0665
 8 mu         0.2   0.3 0.563 0.0576
 9 mu         0.2   0.4 0.632 0.0773
10 mu         0.2   0.5 0.644 0.0653
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.22         0.216 0.0000780     14.7 
 2 mu         0.2      1.05         0.900 0.0499         4.56
 3 mu         0.3      0.996        0.987 0.260          2.25
 4 mu         0.4      0.995        0.986 0.507          1.55
 5 mu         0.5      1.01         1.00  0.666          1.52
 6 mu         0.6      1.01         1.01  0.779          1.48
 7 mu         0.7      1.00         1.00  0.755          1.37
 8 mu         0.8      1.01         1.00  0.592          1.47
 9 mu         0.9      1.02         0.944 0.531          2.15
10 mu_1       0.1      1.26         0.382 0.000245      13.5 
11 mu_1       0.2      1.03         0.945 0.0701         3.19
12 mu_1       0.3      0.991        0.974 0.336          1.97
13 mu_1       0.4      0.998        0.989 0.572          1.52
14 mu_1       0.5      1.01         1.01  0.675          1.54
15 mu_1       0.6      1.01         1.01  0.783          1.46
16 mu_1       0.7      1.00         0.995 0.766          1.41
17 mu_1       0.8      1.01         1.00  0.591          1.46
18 mu_1       0.9      1.02         0.940 0.519          2.15
19 mu_0       0.1      1.21         0.201 0.0000594     14.8 
20 mu_0       0.2      1.06         0.893 0.0448         4.94
21 mu_0       0.3      0.999        0.972 0.228          2.38
22 mu_0       0.4      0.993        0.977 0.464          1.57
23 mu_0       0.5      1.01         1.01  0.658          1.51
24 mu_0       0.6      1.01         1.00  0.756          1.50
25 mu_0       0.7      1.00         0.998 0.731          1.28
26 mu_0       0.8      1.00         0.974 0.595          1.52
27 mu_0       0.9      1.03         0.997 0.479          2.08
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.0357     8.23e-13  5.49e-34      1.36
 2 mu         0.2     0.694      3.92e- 7  6.71e-23     18.3 
 3 mu         0.3     1.53       4.96e- 4  1.92e-16     28.4 
 4 mu         0.4     1.34       3.61e- 2  5.21e-12     15.7 
 5 mu         0.5     1.09       5.07e- 1  1.29e- 8     10.8 
 6 mu         0.6     1.27       9.47e- 1  7.59e- 6      5.26
 7 mu         0.7     1.31       8.21e- 1  9.22e- 6      7.55
 8 mu         0.8     0.996      2.64e- 1  7.56e-10      7.39
 9 mu         0.9     1.22       9.31e- 4  2.27e-18     16.2 
10 mu_1       0.1     0.0943     5.08e-12  5.35e-33      3.29
11 mu_1       0.2     0.958      1.43e- 6  3.27e-22     22.1 
12 mu_1       0.3     1.59       1.20e- 3  6.24e-16     27.2 
13 mu_1       0.4     1.27       5.64e- 2  1.30e-11     12.8 
14 mu_1       0.5     1.09       5.83e- 1  2.57e- 8     10.1 
15 mu_1       0.6     1.29       9.33e- 1  1.27e- 5      5.47
16 mu_1       0.7     1.30       7.19e- 1  3.19e- 6      7.53
17 mu_1       0.8     0.985      2.36e- 1  3.22e-10      7.75
18 mu_1       0.9     1.24       6.48e- 4  8.23e-19     16.6 
19 mu_0       0.1     0.0291     3.51e-13  0             1.14
20 mu_0       0.2     0.627      1.32e- 7  0            17.3 
21 mu_0       0.3     1.51       1.96e- 4  0            29.3 
22 mu_0       0.4     1.38       2.26e- 2  0            17.7 
23 mu_0       0.5     1.10       3.55e- 1  0            11.5 
24 mu_0       0.6     1.23       7.73e- 1  0             5.20
25 mu_0       0.7     1.35       8.75e- 1  0             7.84
26 mu_0       0.8     1.04       3.14e- 1  0             5.96
27 mu_0       0.9     1.03       3.08e- 3  0            12.5 
[1] "Total run time was 203.072 seconds"
