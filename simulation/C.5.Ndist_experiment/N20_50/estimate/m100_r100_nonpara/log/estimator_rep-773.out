
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3270"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 44 45 46 
 1  6  3  5  5  3  5  6  7  2  4  3  2  5  5  1  6  3  1  2  2  1  7  4  2  3 
48 49 50 
 3  1  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03884 0.38287 0.62813 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
1959 1311 
[1] "treatment indicator table: "

   0    1 
1100 2170 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1619
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 16"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1651
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 162.294 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.444 0.101 
 2 mu         0.1   0.2 0.504 0.102 
 3 mu         0.1   0.3 0.537 0.117 
 4 mu         0.1   0.4 0.638 0.163 
 5 mu         0.1   0.5 0.678 0.158 
 6 mu         0.2   0.1 0.373 0.0572
 7 mu         0.2   0.2 0.414 0.0492
 8 mu         0.2   0.3 0.452 0.0616
 9 mu         0.2   0.4 0.515 0.0989
10 mu         0.2   0.5 0.546 0.0877
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      1.21         0.343 0.00000247     17.0 
 2 mu         0.2      1.06         0.916 0.00501         8.33
 3 mu         0.3      0.976        0.914 0.145           3.67
 4 mu         0.4      0.948        0.959 0.193           1.75
 5 mu         0.5      0.971        0.954 0.511           1.50
 6 mu         0.6      0.991        0.979 0.616           1.45
 7 mu         0.7      0.995        0.988 0.610           1.37
 8 mu         0.8      1.02         1.00  0.631           1.46
 9 mu         0.9      0.998        1.01  0.563           1.66
10 mu_1       0.1      1.09         0.569 0.0000103      15.2 
11 mu_1       0.2      1.05         0.911 0.0107          8.13
12 mu_1       0.3      0.967        0.944 0.170           2.78
13 mu_1       0.4      0.949        0.961 0.215           1.61
14 mu_1       0.5      0.976        0.979 0.562           1.50
15 mu_1       0.6      0.992        0.990 0.621           1.44
16 mu_1       0.7      0.995        0.992 0.611           1.34
17 mu_1       0.8      1.02         0.996 0.630           1.46
18 mu_1       0.9      0.996        1.01  0.564           1.66
19 mu_0       0.1      1.22         0.318 0.00000160     17.1 
20 mu_0       0.2      1.06         0.905 0.00360         8.38
21 mu_0       0.3      0.980        0.916 0.116           4.05
22 mu_0       0.4      0.947        0.959 0.178           1.85
23 mu_0       0.5      0.966        0.952 0.447           1.50
24 mu_0       0.6      0.991        0.969 0.608           1.46
25 mu_0       0.7      0.993        0.980 0.606           1.43
26 mu_0       0.8      1.01         1.00  0.635           1.47
27 mu_0       0.9      1.02         1.02  0.499           1.66
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.259     3.53e-13  1.27e-41     22.8 
 2 mu         0.2      0.814     7.02e- 8  7.04e-28     30.8 
 3 mu         0.3      1.96      5.54e- 5  5.47e-20     57.7 
 4 mu         0.4      2.31      7.78e- 3  5.44e-15     52.0 
 5 mu         0.5      1.48      1.55e- 1  4.09e-11     18.0 
 6 mu         0.6      1.11      5.14e- 1  6.02e- 8      8.84
 7 mu         0.7      1.17      7.71e- 1  7.77e-10      8.57
 8 mu         0.8      1.23      4.91e- 1  1.18e-15     14.6 
 9 mu         0.9      1.08      9.82e- 3  4.97e-26     12.3 
10 mu_1       0.1      0.429     2.82e-12  1.21e-40     36.5 
11 mu_1       0.2      0.945     2.73e- 7  3.37e-27     25.2 
12 mu_1       0.3      2.20      1.31e- 4  1.82e-19     59.1 
13 mu_1       0.4      2.23      1.37e- 2  1.36e-14     46.4 
14 mu_1       0.5      1.39      2.19e- 1  8.18e-11     17.5 
15 mu_1       0.6      1.10      5.34e- 1  1.00e- 7      7.37
16 mu_1       0.7      1.18      7.00e- 1  2.22e-10      8.48
17 mu_1       0.8      1.23      4.42e- 1  2.96e-16     14.6 
18 mu_1       0.9      1.07      7.16e- 3  1.10e-26     13.1 
19 mu_0       0.1      0.240     8.63e-14  0            21.3 
20 mu_0       0.2      0.781     1.95e- 8  0            32.3 
21 mu_0       0.3      1.86      2.44e- 5  0            57.0 
22 mu_0       0.4      2.36      3.95e- 3  0            55.7 
23 mu_0       0.5      1.57      1.05e- 1  0            18.5 
24 mu_0       0.6      1.12      4.49e- 1  0            11.1 
25 mu_0       0.7      1.14      7.02e- 1  0             8.79
26 mu_0       0.8      1.25      4.49e- 1  0            14.6 
27 mu_0       0.9      1.11      2.32e- 2  0             7.76
[1] "Total run time was 166.389 seconds"
