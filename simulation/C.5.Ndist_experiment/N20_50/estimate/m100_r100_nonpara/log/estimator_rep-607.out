
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3452"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 3  4  1  3  2  2  3  6  5  9  5  1  3  3  3  3  2  2  1  5  5  3  4  2  2  3 
46 47 48 49 50 
 5  1  4  3  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02793 0.33276 0.59354 1.00000 5.00000 
[1] "event indicator table: "

   0    1 
2045 1407 
[1] "treatment indicator table: "

   0    1 
1290 2162 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1715
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 17"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1737
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 273.397 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.530 0.175 
 2 mu         0.1   0.2 0.579 0.146 
 3 mu         0.1   0.3 0.648 0.177 
 4 mu         0.1   0.4 0.647 0.158 
 5 mu         0.1   0.5 0.644 0.134 
 6 mu         0.2   0.1 0.342 0.0551
 7 mu         0.2   0.2 0.456 0.0402
 8 mu         0.2   0.3 0.504 0.0460
 9 mu         0.2   0.4 0.510 0.0518
10 mu         0.2   0.5 0.561 0.0428
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.900        0.594 0.0000250      4.47
 2 mu         0.2      0.974        0.962 0.0346         2.29
 3 mu         0.3      0.979        0.979 0.0858         2.22
 4 mu         0.4      0.972        0.965 0.390          1.47
 5 mu         0.5      0.975        0.974 0.681          1.31
 6 mu         0.6      0.992        0.997 0.673          1.34
 7 mu         0.7      1.02         1.02  0.747          1.44
 8 mu         0.8      1.02         1.01  0.665          2.03
 9 mu         0.9      1.02         1.02  0.212          1.97
10 mu_1       0.1      0.970        0.819 0.0000840      4.18
11 mu_1       0.2      0.978        0.944 0.0534         1.98
12 mu_1       0.3      0.979        0.974 0.0998         2.18
13 mu_1       0.4      0.970        0.969 0.462          1.36
14 mu_1       0.5      0.977        0.984 0.689          1.31
15 mu_1       0.6      0.995        0.995 0.658          1.33
16 mu_1       0.7      1.02         1.02  0.753          1.51
17 mu_1       0.8      1.02         1.01  0.633          2.05
18 mu_1       0.9      1.02         1.01  0.200          1.97
19 mu_0       0.1      0.892        0.559 0.0000184      4.69
20 mu_0       0.2      0.973        0.951 0.0284         2.39
21 mu_0       0.3      0.980        0.986 0.0799         2.23
22 mu_0       0.4      0.973        0.946 0.343          1.54
23 mu_0       0.5      0.973        0.968 0.672          1.31
24 mu_0       0.6      0.987        0.996 0.688          1.36
25 mu_0       0.7      1.01         1.02  0.670          1.35
26 mu_0       0.8      1.02         0.993 0.687          1.95
27 mu_0       0.9      1.03         1.05  0.325          1.98
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.17      4.35e-13  7.87e-39     90.6 
 2 mu         0.2      0.989     2.60e- 7  1.73e-25     42.7 
 3 mu         0.3      1.38      6.13e- 4  8.51e-18     24.8 
 4 mu         0.4      1.36      2.69e- 2  1.92e-12     14.3 
 5 mu         0.5      1.18      3.09e- 1  2.13e- 8      9.51
 6 mu         0.6      1.06      4.53e- 1  7.20e- 7      6.66
 7 mu         0.7      1.13      6.28e- 1  9.63e-10      4.90
 8 mu         0.8      1.37      3.02e- 1  8.58e-14     18.1 
 9 mu         0.9      1.59      1.54e- 3  5.26e-23     32.6 
10 mu_1       0.1      0.488     1.53e-12  0            38.9 
11 mu_1       0.2      1.06      4.63e- 7  0            36.8 
12 mu_1       0.3      1.41      4.47e- 4  0            26.2 
13 mu_1       0.4      1.34      4.37e- 2  0            12.8 
14 mu_1       0.5      1.15      2.36e- 1  0             9.18
15 mu_1       0.6      1.07      5.16e- 1  0             6.83
16 mu_1       0.7      1.15      6.11e- 1  0             4.81
17 mu_1       0.8      1.38      2.56e- 1  0            19.1 
18 mu_1       0.9      1.59      1.14e- 3  0            35.1 
19 mu_0       0.1      1.25      1.08e-13  7.14e-40    101.  
20 mu_0       0.2      0.971     1.27e- 7  1.76e-26     44.2 
21 mu_0       0.3      1.37      2.98e- 4  9.92e-19     24.2 
22 mu_0       0.4      1.38      1.58e- 2  2.62e-13     15.9 
23 mu_0       0.5      1.21      2.19e- 1  3.48e- 9      9.84
24 mu_0       0.6      1.06      4.32e- 1  1.80e- 6      6.40
25 mu_0       0.7      1.09      7.62e- 1  3.21e- 9      5.66
26 mu_0       0.8      1.29      2.71e- 1  4.29e-13     13.9 
27 mu_0       0.9      1.54      5.19e- 3  3.84e-22     21.2 
[1] "Total run time was 278.263 seconds"
