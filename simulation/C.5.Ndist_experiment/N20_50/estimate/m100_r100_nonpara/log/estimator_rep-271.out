
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3507"
[1] "cluster size dist'n: "

20 21 22 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 
 2  2  2  2  4  4  9  7  6  3  1  5  1  4  3  2  2  1  4  2  2  5  3  7  3  1 
47 48 49 50 
 3  3  4  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0431  0.3678  0.6286  1.0000  6.0000 
[1] "event indicator table: "

   0    1 
2108 1399 
[1] "treatment indicator table: "

   0    1 
1260 2247 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1770
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1737
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 35"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 255.706 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.247 0.0415
 2 mu         0.1   0.2 0.315 0.0521
 3 mu         0.1   0.3 0.386 0.0709
 4 mu         0.1   0.4 0.422 0.0748
 5 mu         0.1   0.5 0.419 0.0695
 6 mu         0.2   0.1 0.257 0.0388
 7 mu         0.2   0.2 0.347 0.0436
 8 mu         0.2   0.3 0.412 0.0593
 9 mu         0.2   0.4 0.458 0.0638
10 mu         0.2   0.5 0.467 0.0630
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      0.724        0.278 0.000000443      6.33
 2 mu         0.2      0.921        0.821 0.00396          6.08
 3 mu         0.3      0.946        0.925 0.112            2.13
 4 mu         0.4      0.984        1.01  0.474            1.48
 5 mu         0.5      1.01         1.01  0.713            1.41
 6 mu         0.6      1.02         1.01  0.713            1.40
 7 mu         0.7      1.01         1.01  0.691            1.53
 8 mu         0.8      0.996        0.996 0.682            1.38
 9 mu         0.9      1.04         0.972 0.276            3.18
10 mu_1       0.1      0.835        0.467 0.00000165       9.04
11 mu_1       0.2      0.932        0.822 0.00771          4.54
12 mu_1       0.3      0.954        0.948 0.160            2.01
13 mu_1       0.4      0.987        0.997 0.514            1.44
14 mu_1       0.5      1.01         1.01  0.694            1.45
15 mu_1       0.6      1.02         1.00  0.729            1.41
16 mu_1       0.7      1.01         1.01  0.679            1.55
17 mu_1       0.8      0.996        0.996 0.679            1.39
18 mu_1       0.9      1.04         0.967 0.252            3.37
19 mu_0       0.1      0.712        0.251 0.000000309      6.03
20 mu_0       0.2      0.918        0.815 0.00302          6.46
21 mu_0       0.3      0.942        0.924 0.0914           2.32
22 mu_0       0.4      0.982        1.00  0.424            1.51
23 mu_0       0.5      1.01         0.992 0.706            1.38
24 mu_0       0.6      1.02         1.02  0.691            1.43
25 mu_0       0.7      1.01         1.01  0.717            1.49
26 mu_0       0.8      0.996        0.981 0.652            1.40
27 mu_0       0.9      1.02         1.01  0.455            1.69
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1    152.        4.86e-14  1.28e-38  15172.  
 2 mu         0.2      6.55      6.01e- 8  2.82e-25    431.  
 3 mu         0.3      1.60      1.57e- 4  1.39e-17     85.8 
 4 mu         0.4      0.989     2.48e- 2  3.14e-12     14.2 
 5 mu         0.5      1.03      3.97e- 1  3.48e- 8      6.71
 6 mu         0.6      1.38      9.00e- 1  8.82e-10      8.62
 7 mu         0.7      1.58      5.46e- 1  6.79e-15     16.0 
 8 mu         0.8      1.10      3.23e- 1  3.57e-22      8.53
 9 mu         0.9      1.22      1.31e- 3  1.03e-34     23.9 
10 mu_1       0.1     70.4       3.46e-13  1.18e-37   6896.  
11 mu_1       0.2      3.27      2.05e- 7  1.30e-24    179.  
12 mu_1       0.3      1.31      3.37e- 4  4.25e-17     55.0 
13 mu_1       0.4      0.932     3.81e- 2  7.21e-12      7.89
14 mu_1       0.5      1.06      4.33e- 1  6.38e- 8      7.01
15 mu_1       0.6      1.43      9.87e- 1  6.69e-11      9.42
16 mu_1       0.7      1.56      5.52e- 1  4.41e-16     16.0 
17 mu_1       0.8      1.08      2.72e- 1  2.03e-23      9.28
18 mu_1       0.9      1.23      9.06e- 4  5.18e-36     25.2 
19 mu_0       0.1    162.        1.56e-14  1.16e-39  16091.  
20 mu_0       0.2      7.37      2.45e- 8  2.88e-26    515.  
21 mu_0       0.3      1.73      7.93e- 5  1.62e-18     99.0 
22 mu_0       0.4      1.03      1.56e- 2  4.27e-13     19.1 
23 mu_0       0.5      1.00      2.97e- 1  5.68e- 9      7.46
24 mu_0       0.6      1.30      7.71e- 1  2.11e- 9      7.41
25 mu_0       0.7      1.63      7.14e- 1  2.16e-14     15.9 
26 mu_0       0.8      1.18      4.32e- 1  1.70e-21      9.76
27 mu_0       0.9      1.15      4.54e- 3  9.80e-34     16.5 
[1] "Total run time was 260.313 seconds"
