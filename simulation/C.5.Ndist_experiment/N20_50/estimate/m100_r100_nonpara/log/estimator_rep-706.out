
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3491"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 5  4  6  2  3  3  1  5  1  4  2  3  1  5  3  4  3  3  2  4  2  2  3  6  3  2 
46 47 48 49 50 
 2  3  6  5  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03378 0.35342 0.62166 1.00000 7.00000 
[1] "event indicator table: "

   0    1 
2070 1421 
[1] "treatment indicator table: "

   0    1 
1315 2176 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1807
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1684
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 48"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 226.411 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.301 0.0551
 2 mu         0.1   0.2 0.318 0.0559
 3 mu         0.1   0.3 0.349 0.0591
 4 mu         0.1   0.4 0.347 0.0750
 5 mu         0.1   0.5 0.366 0.0918
 6 mu         0.2   0.1 0.299 0.0348
 7 mu         0.2   0.2 0.346 0.0320
 8 mu         0.2   0.3 0.383 0.0337
 9 mu         0.2   0.4 0.398 0.0413
10 mu         0.2   0.5 0.429 0.0503
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      0.726        0.210 0.000000931      5.61
 2 mu         0.2      0.850        0.801 0.00440          3.73
 3 mu         0.3      0.933        0.933 0.162            1.96
 4 mu         0.4      0.979        0.957 0.524            2.23
 5 mu         0.5      0.985        0.987 0.528            1.32
 6 mu         0.6      0.997        0.989 0.715            1.27
 7 mu         0.7      1.01         1.00  0.758            1.36
 8 mu         0.8      0.991        1.00  0.517            1.42
 9 mu         0.9      0.976        0.960 0.201            2.40
10 mu_1       0.1      0.754        0.384 0.00000383       4.83
11 mu_1       0.2      0.876        0.849 0.00913          2.98
12 mu_1       0.3      0.947        0.931 0.229            1.80
13 mu_1       0.4      0.983        0.960 0.521            2.15
14 mu_1       0.5      0.986        0.987 0.535            1.33
15 mu_1       0.6      0.999        0.989 0.726            1.27
16 mu_1       0.7      1.01         1.01  0.748            1.39
17 mu_1       0.8      0.990        1.02  0.497            1.46
18 mu_1       0.9      0.977        0.950 0.185            2.46
19 mu_0       0.1      0.723        0.190 0.000000609      5.70
20 mu_0       0.2      0.843        0.804 0.00321          3.92
21 mu_0       0.3      0.926        0.920 0.133            2.06
22 mu_0       0.4      0.976        0.952 0.526            2.29
23 mu_0       0.5      0.984        0.981 0.521            1.33
24 mu_0       0.6      0.995        0.991 0.698            1.32
25 mu_0       0.7      1.01         1.00  0.768            1.32
26 mu_0       0.8      0.994        1.00  0.568            1.38
27 mu_0       0.9      0.969        1.01  0.321            1.86
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.0394     6.93e-13  6.64e-31      2.51
 2 mu         0.2     0.684      6.86e- 7  1.11e-19     30.5 
 3 mu         0.3     1.54       7.67e- 4  6.29e-14     40.8 
 4 mu         0.4     1.52       5.63e- 2  7.15e-10     21.1 
 5 mu         0.5     1.21       5.52e- 1  9.40e- 7     11.4 
 6 mu         0.6     1.20       7.49e- 1  1.70e- 4     10.1 
 7 mu         0.7     1.11       6.06e- 1  4.06e- 6      6.69
 8 mu         0.8     1.04       1.83e- 1  6.97e-11      8.86
 9 mu         0.9     1.55       4.49e- 4  9.50e-20     49.9 
10 mu_1       0.1     0.106      4.39e-12  5.42e-30      6.52
11 mu_1       0.2     0.959      2.05e- 6  5.39e-19     39.6 
12 mu_1       0.3     1.62       1.69e- 3  2.03e-13     37.5 
13 mu_1       0.4     1.44       9.09e- 2  1.74e- 9     18.9 
14 mu_1       0.5     1.19       6.67e- 1  1.83e- 6     12.3 
15 mu_1       0.6     1.21       7.25e- 1  2.84e- 4      9.03
16 mu_1       0.7     1.09       5.58e- 1  1.85e- 6      6.95
17 mu_1       0.8     1.05       1.48e- 1  2.78e-11      9.19
18 mu_1       0.9     1.60       3.32e- 4  3.37e-20     53.8 
19 mu_0       0.1     0.0320     2.62e-13  0             2.07
20 mu_0       0.2     0.615      3.45e- 7  0            28.3 
21 mu_0       0.3     1.50       3.69e- 4  0            42.2 
22 mu_0       0.4     1.57       3.18e- 2  0            22.6 
23 mu_0       0.5     1.23       4.28e- 1  0            10.5 
24 mu_0       0.6     1.20       6.89e- 1  0            11.6 
25 mu_0       0.7     1.14       5.78e- 1  0             7.14
26 mu_0       0.8     1.02       3.08e- 1  0             7.54
27 mu_0       0.9     1.08       1.50e- 3  0            14.7 
[1] "Total run time was 230.087 seconds"
