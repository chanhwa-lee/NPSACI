
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3512"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 36 37 38 39 40 41 42 43 44 45 46 
 4  2  3  4  5  1  3  3  5  5  2  1  4  4  2  4  1  6  4  7  1  3  2  3  3  7 
47 48 49 50 
 2  2  3  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03613 0.36696 0.62472 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
2041 1471 
[1] "treatment indicator table: "

   0    1 
1283 2229 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1705
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 89"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1807
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 285.31 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.412 0.0973
 2 mu         0.1   0.2 0.481 0.0670
 3 mu         0.1   0.3 0.557 0.0805
 4 mu         0.1   0.4 0.548 0.0813
 5 mu         0.1   0.5 0.580 0.0906
 6 mu         0.2   0.1 0.363 0.0595
 7 mu         0.2   0.2 0.469 0.0506
 8 mu         0.2   0.3 0.572 0.0793
 9 mu         0.2   0.4 0.601 0.0793
10 mu         0.2   0.5 0.637 0.0635
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      0.908        0.757 0.00000996      4.15
 2 mu         0.2      1.01         0.968 0.0312          3.14
 3 mu         0.3      1.02         0.987 0.316           1.86
 4 mu         0.4      1.00         0.995 0.536           1.94
 5 mu         0.5      1.00         1.01  0.626           1.41
 6 mu         0.6      1.01         1.01  0.770           1.38
 7 mu         0.7      1.00         0.997 0.592           1.28
 8 mu         0.8      0.987        0.988 0.644           1.47
 9 mu         0.9      0.989        0.986 0.453           1.85
10 mu_1       0.1      1.01         0.811 0.0000346       5.22
11 mu_1       0.2      1.01         0.967 0.0544          2.75
12 mu_1       0.3      1.02         0.991 0.421           1.94
13 mu_1       0.4      1.00         1.00  0.565           1.89
14 mu_1       0.5      1.00         1.02  0.637           1.36
15 mu_1       0.6      1.02         1.00  0.786           1.37
16 mu_1       0.7      1.00         0.987 0.579           1.28
17 mu_1       0.8      0.987        0.988 0.638           1.46
18 mu_1       0.9      0.989        0.985 0.438           1.88
19 mu_0       0.1      0.896        0.751 0.00000723      4.03
20 mu_0       0.2      1.01         0.940 0.0254          3.24
21 mu_0       0.3      1.02         0.993 0.271           1.90
22 mu_0       0.4      1.01         0.994 0.502           1.97
23 mu_0       0.5      1.00         1.01  0.615           1.47
24 mu_0       0.6      1.01         1.02  0.747           1.39
25 mu_0       0.7      1.01         1.01  0.623           1.29
26 mu_0       0.8      0.988        0.977 0.652           1.48
27 mu_0       0.9      0.996        0.993 0.544           1.83
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.838     3.08e-12  9.93e-46     54.4 
 2 mu         0.2      1.36      1.07e- 6  4.97e-31     49.7 
 3 mu         0.3      1.18      1.07e- 3  1.85e-22     35.0 
 4 mu         0.4      1.37      7.64e- 2  2.10e-16     35.5 
 5 mu         0.5      1.36      4.00e- 1  9.80e-12     18.7 
 6 mu         0.6      1.23      7.26e- 1  5.95e- 8      6.13
 7 mu         0.7      1.05      4.76e- 1  9.49e-11      5.85
 8 mu         0.8      1.04      2.25e- 1  8.43e-17      8.51
 9 mu         0.9      1.17      1.85e- 3  1.57e-27      9.76
10 mu_1       0.1      0.959     1.81e-11  9.73e-45     41.8 
11 mu_1       0.2      1.35      3.43e- 6  2.43e-30     57.8 
12 mu_1       0.3      1.16      2.42e- 3  6.04e-22     27.1 
13 mu_1       0.4      1.41      9.16e- 2  5.14e-16     37.0 
14 mu_1       0.5      1.36      4.61e- 1  1.92e-11     15.6 
15 mu_1       0.6      1.21      7.70e- 1  9.71e- 8      6.20
16 mu_1       0.7      1.04      3.98e- 1  2.41e-11      5.97
17 mu_1       0.8      1.05      1.86e- 1  1.87e-17      9.04
18 mu_1       0.9      1.17      1.32e- 3  3.11e-28     10.0 
19 mu_0       0.1      0.824     1.41e-12  0            55.8 
20 mu_0       0.2      1.37      4.81e- 7  0            47.7 
21 mu_0       0.3      1.19      5.00e- 4  0            38.3 
22 mu_0       0.4      1.34      5.45e- 2  0            34.5 
23 mu_0       0.5      1.36      2.78e- 1  0            21.8 
24 mu_0       0.6      1.26      5.60e- 1  0             6.04
25 mu_0       0.7      1.08      4.86e- 1  0             5.57
26 mu_0       0.8      1.02      2.07e- 1  0             7.22
27 mu_0       0.9      1.15      2.48e- 3  0            10.9 
[1] "Total run time was 290.072 seconds"
