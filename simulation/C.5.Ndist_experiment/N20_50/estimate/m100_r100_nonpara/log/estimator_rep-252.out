
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3394"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 9  4  1  4  1  1  3  5  6  5  3  1  5  2  2  3  4  2  3  3  3  4  2  2  4  4 
46 47 48 49 50 
 6  3  2  1  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04097 0.37117 0.63377 1.00000 5.00000 
[1] "event indicator table: "

   0    1 
2001 1393 
[1] "treatment indicator table: "

   0    1 
1228 2166 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1736
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1658
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 226.928 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.278 0.0737
 2 mu         0.1   0.2 0.406 0.0625
 3 mu         0.1   0.3 0.473 0.0557
 4 mu         0.1   0.4 0.567 0.0663
 5 mu         0.1   0.5 0.616 0.0771
 6 mu         0.2   0.1 0.305 0.0488
 7 mu         0.2   0.2 0.453 0.0443
 8 mu         0.2   0.3 0.508 0.0423
 9 mu         0.2   0.4 0.599 0.0495
10 mu         0.2   0.5 0.646 0.0550
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.913        0.538 0.0000265      5.78
 2 mu         0.2      1.02         0.882 0.0145         2.67
 3 mu         0.3      0.995        0.962 0.196          2.07
 4 mu         0.4      1.01         0.964 0.516          1.77
 5 mu         0.5      0.984        0.958 0.607          1.46
 6 mu         0.6      0.969        0.966 0.574          1.55
 7 mu         0.7      0.994        0.986 0.508          1.34
 8 mu         0.8      1.02         1.01  0.660          1.55
 9 mu         0.9      1.01         1.01  0.250          1.69
10 mu_1       0.1      0.945        0.735 0.0000997      4.72
11 mu_1       0.2      1.01         0.938 0.0281         2.46
12 mu_1       0.3      1.00         0.945 0.262          2.13
13 mu_1       0.4      1.01         0.960 0.559          1.79
14 mu_1       0.5      0.979        0.967 0.613          1.38
15 mu_1       0.6      0.971        0.969 0.555          1.55
16 mu_1       0.7      0.997        0.992 0.513          1.31
17 mu_1       0.8      1.02         1.01  0.642          1.58
18 mu_1       0.9      1.01         1.00  0.227          1.72
19 mu_0       0.1      0.910        0.517 0.0000184      6.02
20 mu_0       0.2      1.02         0.901 0.0111         2.78
21 mu_0       0.3      0.992        0.957 0.167          2.05
22 mu_0       0.4      1.01         0.954 0.487          1.84
23 mu_0       0.5      0.989        0.960 0.602          1.53
24 mu_0       0.6      0.967        0.948 0.602          1.56
25 mu_0       0.7      0.986        0.980 0.497          1.41
26 mu_0       0.8      1.01         1.01  0.615          1.45
27 mu_0       0.9      1.02         1.01  0.372          1.78
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       9.89     1.02e-13  2.44e-42    897.  
 2 mu         0.2       1.72     8.32e- 8  1.53e-28     80.6 
 3 mu         0.3       1.65     1.79e- 4  1.68e-20     34.1 
 4 mu         0.4       1.83     2.08e- 2  8.05e-15     34.7 
 5 mu         0.5       1.31     2.86e- 1  1.93e-10     17.5 
 6 mu         0.6       1.27     3.84e- 1  3.71e-10     11.2 
 7 mu         0.7       1.33     6.14e- 1  2.19e-15     10.6 
 8 mu         0.8       1.36     6.98e- 1  6.67e-23     11.8 
 9 mu         0.9       1.70     1.13e- 2  6.07e-36     21.3 
10 mu_1       0.1       8.40     8.29e-13  2.39e-41    748.  
11 mu_1       0.2       1.26     2.85e- 7  7.47e-28     41.1 
12 mu_1       0.3       1.76     4.13e- 4  5.49e-20     29.5 
13 mu_1       0.4       1.76     3.64e- 2  1.97e-14     33.4 
14 mu_1       0.5       1.26     2.97e- 1  3.77e-10     15.3 
15 mu_1       0.6       1.30     4.62e- 1  5.15e-11     12.1 
16 mu_1       0.7       1.33     5.57e- 1  2.60e-16      9.77
17 mu_1       0.8       1.38     6.54e- 1  6.94e-24     12.6 
18 mu_1       0.9       1.71     8.71e- 3  5.62e-37     23.2 
19 mu_0       0.1      10.1      2.98e-14  5.77e-44    914.  
20 mu_0       0.2       1.83     3.12e- 8  4.06e-30     92.3 
21 mu_0       0.3       1.60     7.83e- 5  5.11e-22     36.5 
22 mu_0       0.4       1.88     1.04e- 2  2.86e-16     35.6 
23 mu_0       0.5       1.36     1.61e- 1  8.20e-12     21.5 
24 mu_0       0.6       1.23     2.93e- 1  8.50e-10      9.91
25 mu_0       0.7       1.33     4.58e- 1  6.68e-15     12.4 
26 mu_0       0.8       1.30     5.40e- 1  3.06e-22      8.59
27 mu_0       0.9       1.67     3.43e- 2  5.56e-35     18.3 
[1] "Total run time was 231.472 seconds"
