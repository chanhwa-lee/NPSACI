
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3501"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 34 36 37 38 39 40 41 42 43 45 46 47 48 
 4  4  1  2  6  3  1  5  3  4  4  5  3  4  3  2  4  4  2  7  2  7  5  5  3  2 
49 50 
 2  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04271 0.39316 0.64086 1.00000 5.00000 
[1] "event indicator table: "

   0    1 
2131 1370 
[1] "treatment indicator table: "

   0    1 
1192 2309 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1770
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 7"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1731
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 238.735 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.339 0.110 
 2 mu         0.1   0.2 0.383 0.127 
 3 mu         0.1   0.3 0.481 0.151 
 4 mu         0.1   0.4 0.497 0.162 
 5 mu         0.1   0.5 0.538 0.175 
 6 mu         0.2   0.1 0.303 0.0604
 7 mu         0.2   0.2 0.343 0.0536
 8 mu         0.2   0.3 0.430 0.0673
 9 mu         0.2   0.4 0.446 0.0701
10 mu         0.2   0.5 0.483 0.0720
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      0.910       0.0608 0.00000669     25.9 
 2 mu         0.2      0.852       0.564  0.0131          3.33
 3 mu         0.3      0.966       0.910  0.193           2.04
 4 mu         0.4      1.02        0.999  0.400           1.68
 5 mu         0.5      1.01        0.988  0.597           1.51
 6 mu         0.6      0.997       0.982  0.706           1.33
 7 mu         0.7      1.00        1.00   0.731           1.37
 8 mu         0.8      1.01        1.01   0.654           1.39
 9 mu         0.9      1.00        1.02   0.428           1.59
10 mu_1       0.1      0.774       0.144  0.0000233      12.2 
11 mu_1       0.2      0.857       0.667  0.0229          2.83
12 mu_1       0.3      0.988       0.961  0.238           1.86
13 mu_1       0.4      1.03        0.988  0.391           1.67
14 mu_1       0.5      1.01        0.977  0.642           1.50
15 mu_1       0.6      0.997       0.985  0.709           1.31
16 mu_1       0.7      1.00        0.998  0.748           1.38
17 mu_1       0.8      1.01        1.01   0.646           1.38
18 mu_1       0.9      0.999       1.02   0.418           1.62
19 mu_0       0.1      0.925       0.0506 0.00000485     28.7 
20 mu_0       0.2      0.851       0.538  0.0106          3.86
21 mu_0       0.3      0.956       0.908  0.174           2.12
22 mu_0       0.4      1.02        1.01   0.407           1.69
23 mu_0       0.5      1.01        0.992  0.551           1.51
24 mu_0       0.6      0.997       0.978  0.689           1.36
25 mu_0       0.7      0.998       1.01   0.692           1.36
26 mu_0       0.8      1.01        1.01   0.687           1.42
27 mu_0       0.9      1.01        1.01   0.520           1.57
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.390     8.09e-14  5.03e-35     38.9 
 2 mu         0.2      1.74      5.49e- 8  1.23e-22    163.  
 3 mu         0.3      1.25      1.13e- 4  1.57e-15     58.1 
 4 mu         0.4      1.11      1.62e- 2  1.18e-10     18.9 
 5 mu         0.5      1.41      3.09e- 1  2.53e- 7     15.9 
 6 mu         0.6      1.43      9.61e- 1  1.15e- 4      9.17
 7 mu         0.7      1.15      7.13e- 1  4.66e- 7      7.17
 8 mu         0.8      0.985     4.49e- 1  9.29e-12      8.83
 9 mu         0.9      1.30      2.27e- 3  3.95e-20     15.7 
10 mu_1       0.1      0.760     5.80e-13  4.49e-34     75.6 
11 mu_1       0.2      1.77      1.72e- 7  5.49e-22    159.  
12 mu_1       0.3      1.17      2.67e- 4  4.67e-15     37.7 
13 mu_1       0.4      1.15      2.59e- 2  2.80e-10     15.4 
14 mu_1       0.5      1.44      3.83e- 1  4.79e- 7     15.6 
15 mu_1       0.6      1.40      8.22e- 1  1.81e- 4      8.66
16 mu_1       0.7      1.12      6.46e- 1  1.30e- 7      7.78
17 mu_1       0.8      0.997     4.02e- 1  2.26e-12      8.39
18 mu_1       0.9      1.31      1.70e- 3  8.52e-21     16.5 
19 mu_0       0.1      0.349     2.32e-14  0            34.8 
20 mu_0       0.2      1.73      2.56e- 8  0           165.  
21 mu_0       0.3      1.29      4.69e- 5  0            66.9 
22 mu_0       0.4      1.09      9.41e- 3  0            21.2 
23 mu_0       0.5      1.37      1.92e- 1  0            16.3 
24 mu_0       0.6      1.48      9.36e- 1  0            10.1 
25 mu_0       0.7      1.20      6.13e- 1  0             6.10
26 mu_0       0.8      0.937     4.84e- 1  0            10.6 
27 mu_0       0.9      1.24      6.35e- 3  0            10.8 
[1] "Total run time was 243.399 seconds"
