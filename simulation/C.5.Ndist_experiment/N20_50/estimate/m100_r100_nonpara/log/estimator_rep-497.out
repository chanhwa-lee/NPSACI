
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3538"
[1] "cluster size dist'n: "

21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 
 3  4  7  2  4  4  4  5  1  2  3  4  2  5  1  2  3  2  3  2  6  3  1  2  3  6 
47 48 49 50 
 5  3  4  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03456 0.35267 0.62812 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
2119 1419 
[1] "treatment indicator table: "

   0    1 
1186 2352 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1811
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1727
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 87"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 213.084 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.352 0.0680
 2 mu         0.1   0.2 0.430 0.0831
 3 mu         0.1   0.3 0.508 0.0990
 4 mu         0.1   0.4 0.540 0.112 
 5 mu         0.1   0.5 0.548 0.112 
 6 mu         0.2   0.1 0.386 0.0676
 7 mu         0.2   0.2 0.477 0.0819
 8 mu         0.2   0.3 0.563 0.0968
 9 mu         0.2   0.4 0.606 0.110 
10 mu         0.2   0.5 0.626 0.108 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.713        0.351  6.86e-10      3.27
 2 mu         0.2      0.869        0.830  1.53e- 4      4.55
 3 mu         0.3      0.976        0.965  3.97e- 2      2.16
 4 mu         0.4      0.998        0.993  3.81e- 1      1.59
 5 mu         0.5      1.00         0.996  5.99e- 1      1.60
 6 mu         0.6      1.02         1.01   6.15e- 1      1.35
 7 mu         0.7      1.02         1.03   6.75e- 1      1.26
 8 mu         0.8      1.01         1.01   6.66e- 1      1.42
 9 mu         0.9      0.955        0.907  3.51e- 1      2.41
10 mu_1       0.1      0.769        0.553  3.07e- 9      5.12
11 mu_1       0.2      0.902        0.873  3.46e- 4      3.69
12 mu_1       0.3      0.986        0.991  6.04e- 2      1.98
13 mu_1       0.4      0.995        0.992  4.26e- 1      1.68
14 mu_1       0.5      1.00         1.01   6.24e- 1      1.53
15 mu_1       0.6      1.02         1.00   6.00e- 1      1.35
16 mu_1       0.7      1.01         1.03   6.94e- 1      1.27
17 mu_1       0.8      1.01         1.00   6.78e- 1      1.48
18 mu_1       0.9      0.950        0.907  3.28e- 1      2.44
19 mu_0       0.1      0.707        0.343  4.22e-10      3.07
20 mu_0       0.2      0.861        0.823  1.05e- 4      4.76
21 mu_0       0.3      0.972        0.974  3.08e- 2      2.29
22 mu_0       0.4      1.00         1.02   3.43e- 1      1.62
23 mu_0       0.5      0.998        1.00   5.75e- 1      1.66
24 mu_0       0.6      1.02         1.01   6.36e- 1      1.36
25 mu_0       0.7      1.02         1.02   6.29e- 1      1.28
26 mu_0       0.8      1.01         1.03   6.18e- 1      1.31
27 mu_0       0.9      0.995        0.955  4.86e- 1      2.15
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      18.4      1.90e-13  1.13e-43   1084.  
 2 mu         0.2      11.0      1.89e- 7  2.51e-29    641.  
 3 mu         0.3       2.92     2.14e- 4  5.45e-21     77.2 
 4 mu         0.4       1.51     1.75e- 2  3.98e-15     36.0 
 5 mu         0.5       1.13     2.08e- 1  1.24e-10      6.31
 6 mu         0.6       1.05     8.28e- 1  1.47e- 7      4.41
 7 mu         0.7       1.18     7.42e- 1  7.71e-12      5.43
 8 mu         0.8       1.17     5.44e- 1  4.00e-18      5.36
 9 mu         0.9       1.45     6.70e- 3  3.31e-29     27.5 
10 mu_1       0.1      22.4      1.18e-12  1.08e-42   1356.  
11 mu_1       0.2       7.14     6.02e- 7  1.21e-28    401.  
12 mu_1       0.3       2.21     4.76e- 4  1.74e-20     69.4 
13 mu_1       0.4       1.41     3.00e- 2  9.55e-15     28.7 
14 mu_1       0.5       1.11     2.63e- 1  2.38e-10      5.71
15 mu_1       0.6       1.04     8.41e- 1  3.80e- 8      4.05
16 mu_1       0.7       1.19     7.41e- 1  1.71e-12      5.73
17 mu_1       0.8       1.16     5.06e- 1  7.77e-19      5.56
18 mu_1       0.9       1.47     5.19e- 3  5.73e-30     28.4 
19 mu_0       0.1      18.0      6.88e-14  0          1054.  
20 mu_0       0.2      12.0      8.18e- 8  0           701.  
21 mu_0       0.3       3.22     1.07e- 4  0            96.5 
22 mu_0       0.4       1.57     9.05e- 3  0            40.9 
23 mu_0       0.5       1.16     1.40e- 1  0             7.81
24 mu_0       0.6       1.05     6.51e- 1  0             4.95
25 mu_0       0.7       1.18     6.54e- 1  0             4.72
26 mu_0       0.8       1.20     5.45e- 1  0             5.98
27 mu_0       0.9       1.25     1.88e- 2  0            19.6 
[1] "Total run time was 216.378 seconds"
