
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3627"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 38 39 40 41 42 43 44 45 46 
 5  1  5  1  3  4  1  3  3  3  1  2  5  3  4  3  2  4  4  2  2  8  2  3  5  3 
47 48 49 50 
 4  5  6  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03744 0.34971 0.59616 1.00000 6.24232 
[1] "event indicator table: "

   0    1 
2153 1474 
[1] "treatment indicator table: "

   0    1 
1323 2304 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1765
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 17"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 57"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 76"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1862
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 254.634 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.558 0.151 
 2 mu         0.1   0.2 0.654 0.182 
 3 mu         0.1   0.3 0.745 0.199 
 4 mu         0.1   0.4 0.854 0.221 
 5 mu         0.1   0.5 0.870 0.228 
 6 mu         0.2   0.1 0.380 0.0616
 7 mu         0.2   0.2 0.450 0.0650
 8 mu         0.2   0.3 0.519 0.0713
 9 mu         0.2   0.4 0.601 0.0900
10 mu         0.2   0.5 0.612 0.0816
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      1.40         0.236 0.00000235     29.2 
 2 mu         0.2      1.08         0.890 0.0117          8.91
 3 mu         0.3      1.01         1.00  0.170           2.30
 4 mu         0.4      1.01         1.00  0.434           1.54
 5 mu         0.5      0.990        0.994 0.558           1.31
 6 mu         0.6      0.996        1.00  0.583           1.34
 7 mu         0.7      0.987        0.990 0.748           1.35
 8 mu         0.8      0.998        0.984 0.640           1.55
 9 mu         0.9      1.05         1.01  0.132           3.73
10 mu_1       0.1      1.44         0.445 0.00000836     32.4 
11 mu_1       0.2      1.04         0.955 0.0215          6.01
12 mu_1       0.3      1.02         1.00  0.177           2.15
13 mu_1       0.4      1.01         1.00  0.471           1.48
14 mu_1       0.5      0.990        1.00  0.541           1.32
15 mu_1       0.6      0.995        1.00  0.596           1.35
16 mu_1       0.7      0.987        0.990 0.748           1.37
17 mu_1       0.8      1.00         0.992 0.609           1.56
18 mu_1       0.9      1.05         1.01  0.121           3.83
19 mu_0       0.1      1.40         0.216 0.00000169     28.8 
20 mu_0       0.2      1.09         0.868 0.00931         9.81
21 mu_0       0.3      1.01         0.988 0.168           2.48
22 mu_0       0.4      1.01         1.00  0.409           1.60
23 mu_0       0.5      0.990        0.995 0.552           1.33
24 mu_0       0.6      0.997        1.01  0.564           1.33
25 mu_0       0.7      0.989        0.996 0.745           1.31
26 mu_0       0.8      0.987        0.965 0.658           1.51
27 mu_0       0.9      1.05         1.02  0.228           2.88
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.321     6.76e-13  1.76e-44     31.8 
 2 mu         0.2      0.653     5.12e- 7  4.96e-30     42.9 
 3 mu         0.3      1.10      5.48e- 4  1.40e-21     21.9 
 4 mu         0.4      1.43      3.97e- 2  1.40e-15     12.8 
 5 mu         0.5      1.57      3.36e- 1  6.26e-11     24.2 
 6 mu         0.6      1.37      6.08e- 1  3.95e- 7     19.3 
 7 mu         0.7      1.13      8.29e- 1  3.86e- 6      4.17
 8 mu         0.8      1.50      3.75e- 1  8.70e-11     18.4 
 9 mu         0.9      4.16      2.51e- 3  2.11e-19    112.  
10 mu_1       0.1      0.519     3.83e-12  1.76e-43     50.8 
11 mu_1       0.2      0.693     1.48e- 6  2.48e-29     34.3 
12 mu_1       0.3      1.19      1.26e- 3  4.68e-21     20.6 
13 mu_1       0.4      1.46      6.54e- 2  3.49e-15     12.0 
14 mu_1       0.5      1.58      3.25e- 1  1.25e-10     26.0 
15 mu_1       0.6      1.33      5.67e- 1  6.59e- 7     17.2 
16 mu_1       0.7      1.15      8.27e- 1  1.67e- 6      4.53
17 mu_1       0.8      1.53      3.03e- 1  3.38e-11     19.7 
18 mu_1       0.9      4.39      1.85e- 3  7.28e-20    125.  
19 mu_0       0.1      0.299     3.25e-13  0            29.7 
20 mu_0       0.2      0.643     2.70e- 7  0            45.0 
21 mu_0       0.3      1.06      2.70e- 4  0            22.4 
22 mu_0       0.4      1.41      2.25e- 2  0            13.4 
23 mu_0       0.5      1.57      3.10e- 1  0            22.4 
24 mu_0       0.6      1.44      6.03e- 1  0            22.3 
25 mu_0       0.7      1.10      7.68e- 1  0             4.47
26 mu_0       0.8      1.39      3.97e- 1  0            13.2 
27 mu_0       0.9      2.07      4.21e- 3  0            49.4 
[1] "Total run time was 258.694 seconds"
