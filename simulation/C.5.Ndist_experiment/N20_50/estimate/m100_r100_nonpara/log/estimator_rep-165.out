
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3425"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 4  3  3  2  6  3  5  5  4  3  3  1  4  3  3  5  2  3  1  3  2  4  4  3  4  1 
46 47 48 49 50 
 6  2  2  4  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0267  0.3378  0.5916  0.9893  5.2225 
[1] "event indicator table: "

   0    1 
2037 1388 
[1] "treatment indicator table: "

   0    1 
1278 2147 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1773
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 40"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1652
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 258.009 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.440 0.0777
 2 mu         0.1   0.2 0.511 0.0764
 3 mu         0.1   0.3 0.574 0.0829
 4 mu         0.1   0.4 0.663 0.101 
 5 mu         0.1   0.5 0.668 0.0939
 6 mu         0.2   0.1 0.331 0.0456
 7 mu         0.2   0.2 0.421 0.0381
 8 mu         0.2   0.3 0.468 0.0527
 9 mu         0.2   0.4 0.569 0.0409
10 mu         0.2   0.5 0.601 0.0316
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.01         0.800  0.00106       9.95
 2 mu         0.2      1.02         1.01   0.191         2.05
 3 mu         0.3      1.03         1.02   0.455         2.22
 4 mu         0.4      1.00         0.983  0.562         1.63
 5 mu         0.5      0.979        0.972  0.677         1.29
 6 mu         0.6      0.984        0.983  0.694         1.40
 7 mu         0.7      0.996        0.998  0.648         1.44
 8 mu         0.8      0.981        0.989  0.712         1.28
 9 mu         0.9      0.971        0.936  0.344         1.89
10 mu_1       0.1      0.960        0.883  0.00316       5.40
11 mu_1       0.2      1.03         1.05   0.292         1.90
12 mu_1       0.3      1.03         1.02   0.483         2.20
13 mu_1       0.4      0.995        0.978  0.575         1.57
14 mu_1       0.5      0.979        0.980  0.679         1.29
15 mu_1       0.6      0.985        0.985  0.667         1.37
16 mu_1       0.7      0.996        0.993  0.668         1.44
17 mu_1       0.8      0.979        0.992  0.704         1.31
18 mu_1       0.9      0.973        0.934  0.343         1.90
19 mu_0       0.1      1.01         0.783  0.000825     10.5 
20 mu_0       0.2      1.01         1.01   0.166         2.13
21 mu_0       0.3      1.03         1.03   0.443         2.23
22 mu_0       0.4      1.01         0.980  0.553         1.73
23 mu_0       0.5      0.980        0.970  0.657         1.36
24 mu_0       0.6      0.982        0.991  0.703         1.43
25 mu_0       0.7      0.997        1.00   0.602         1.44
26 mu_0       0.8      0.988        0.977  0.724         1.29
27 mu_0       0.9      0.960        0.937  0.350         1.77
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      2.46      5.42e-13  1.18e-38    235.  
 2 mu         0.2      0.965     1.49e- 7  2.60e-25     39.1 
 3 mu         0.3      1.08      1.39e- 4  1.28e-17     27.2 
 4 mu         0.4      0.909     2.11e- 2  2.90e-12      6.28
 5 mu         0.5      0.978     3.52e- 1  1.45e- 8      9.29
 6 mu         0.6      1.17      5.20e- 1  1.62e-11      7.05
 7 mu         0.7      1.18      7.12e- 1  8.19e-17      8.41
 8 mu         0.8      1.10      2.66e- 1  2.19e-24      5.52
 9 mu         0.9      1.20      7.98e- 4  1.77e-37     15.8 
10 mu_1       0.1      1.72      3.49e-12  1.09e-37    150.  
11 mu_1       0.2      1.07      5.76e- 7  1.20e-24     44.7 
12 mu_1       0.3      1.05      3.10e- 4  3.92e-17     20.7 
13 mu_1       0.4      0.907     3.40e- 2  6.65e-12      7.37
14 mu_1       0.5      0.996     3.42e- 1  2.20e- 8      8.72
15 mu_1       0.6      1.18      5.81e- 1  1.73e-12      7.75
16 mu_1       0.7      1.17      7.65e- 1  7.47e-18      7.92
17 mu_1       0.8      1.11      2.10e- 1  1.74e-25      5.72
18 mu_1       0.9      1.20      5.41e- 4  1.25e-38     16.1 
19 mu_0       0.1      2.54      2.14e-13  1.07e-39    245.  
20 mu_0       0.2      0.939     4.23e- 8  2.66e-26     37.7 
21 mu_0       0.3      1.10      7.08e- 5  1.49e-18     30.0 
22 mu_0       0.4      0.910     1.30e- 2  2.55e-13      6.07
23 mu_0       0.5      0.960     2.78e- 1  7.85e-10      9.86
24 mu_0       0.6      1.15      5.41e- 1  3.80e-11      6.00
25 mu_0       0.7      1.20      7.77e- 1  2.56e-16      9.54
26 mu_0       0.8      1.07      3.39e- 1  1.02e-23      5.18
27 mu_0       0.9      1.21      2.76e- 3  1.66e-36     12.9 
[1] "Total run time was 261.884 seconds"
