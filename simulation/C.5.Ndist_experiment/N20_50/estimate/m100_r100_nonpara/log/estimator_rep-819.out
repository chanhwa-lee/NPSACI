
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3511"
[1] "cluster size dist'n: "

21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 
 6  3  1  6  5  4  2  6  4  1  4  3  3  1  2  2  2  4  3  3  1  4  2  6  3  6 
47 48 49 50 
 3  5  4  1 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02389 0.32915 0.60504 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
2051 1460 
[1] "treatment indicator table: "

   0    1 
1312 2199 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1745
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1766
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 70"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 97"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 110.125 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.379 0.100 
 2 mu         0.1   0.2 0.418 0.133 
 3 mu         0.1   0.3 0.470 0.121 
 4 mu         0.1   0.4 0.552 0.127 
 5 mu         0.1   0.5 0.623 0.108 
 6 mu         0.2   0.1 0.360 0.0548
 7 mu         0.2   0.2 0.416 0.0675
 8 mu         0.2   0.3 0.466 0.0605
 9 mu         0.2   0.4 0.540 0.0616
10 mu         0.2   0.5 0.596 0.0542
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.12         0.811   0.00247      5.47
 2 mu         0.2      1.05         1.00    0.221        2.12
 3 mu         0.3      1.02         1.01    0.524        1.53
 4 mu         0.4      1.00         0.987   0.655        1.58
 5 mu         0.5      0.996        1.00    0.586        1.28
 6 mu         0.6      1.00         1.01    0.699        1.35
 7 mu         0.7      1.01         1.02    0.630        1.29
 8 mu         0.8      1.01         0.995   0.656        1.54
 9 mu         0.9      0.995        0.962   0.333        1.85
10 mu_1       0.1      1.12         0.993   0.00661      5.43
11 mu_1       0.2      1.03         0.999   0.287        2.10
12 mu_1       0.3      1.02         0.985   0.568        1.49
13 mu_1       0.4      1.00         0.990   0.655        1.60
14 mu_1       0.5      0.997        1.00    0.585        1.28
15 mu_1       0.6      1.00         1.00    0.725        1.36
16 mu_1       0.7      1.01         1.02    0.632        1.30
17 mu_1       0.8      1.01         0.993   0.646        1.56
18 mu_1       0.9      0.993        0.958   0.317        1.88
19 mu_0       0.1      1.12         0.785   0.00201      5.48
20 mu_0       0.2      1.05         1.00    0.204        2.27
21 mu_0       0.3      1.02         1.03    0.505        1.57
22 mu_0       0.4      1.01         0.991   0.637        1.57
23 mu_0       0.5      0.996        0.998   0.588        1.33
24 mu_0       0.6      1.00         0.996   0.661        1.33
25 mu_0       0.7      1.02         1.01    0.625        1.28
26 mu_0       0.8      1.01         1.01    0.597        1.51
27 mu_0       0.9      1.01         1.00    0.472        1.63
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.114     1.74e-12  5.40e-35      4.72
 2 mu         0.2      1.01      2.10e- 6  1.32e-22     48.3 
 3 mu         0.3      1.03      1.31e- 3  1.68e-15     17.4 
 4 mu         0.4      1.04      6.62e- 2  1.38e-10      7.63
 5 mu         0.5      0.988     3.80e- 1  6.50e- 7      4.46
 6 mu         0.6      0.952     5.85e- 1  3.89e- 7      4.46
 7 mu         0.7      1.05      7.24e- 1  1.57e-11      5.10
 8 mu         0.8      1.25      2.55e- 1  4.72e-18     11.1 
 9 mu         0.9      1.16      6.85e- 4  1.24e-29     11.0 
10 mu_1       0.1      0.234     1.12e-11  4.83e-34      8.68
11 mu_1       0.2      1.14      6.72e- 6  5.89e-22     50.3 
12 mu_1       0.3      1.05      2.81e- 3  5.01e-15     12.1 
13 mu_1       0.4      1.03      9.24e- 2  3.07e-10      7.30
14 mu_1       0.5      0.976     3.98e- 1  1.16e- 6      4.46
15 mu_1       0.6      0.952     5.67e- 1  1.19e- 7      4.25
16 mu_1       0.7      1.07      6.54e- 1  4.11e-12      5.30
17 mu_1       0.8      1.26      2.08e- 1  1.08e-18     11.1 
18 mu_1       0.9      1.15      4.65e- 4  2.53e-30     10.9 
19 mu_0       0.1      0.100     8.42e-13  6.38e-36      4.29
20 mu_0       0.2      0.973     9.48e- 7  1.75e-23     47.8 
21 mu_0       0.3      1.02      6.57e- 4  2.56e-16     19.7 
22 mu_0       0.4      1.05      3.87e- 2  2.44e-11      7.85
23 mu_0       0.5      0.999     3.64e- 1  5.77e- 8      4.54
24 mu_0       0.6      0.952     5.36e- 1  7.95e- 7      4.78
25 mu_0       0.7      1.02      5.56e- 1  4.27e-11      4.64
26 mu_0       0.8      1.21      3.04e- 1  1.93e-17     11.1 
27 mu_0       0.9      1.25      2.66e- 3  1.01e-28     11.6 
[1] "Total run time was 112.018 seconds"
