
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3524"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 1  3  4  3  1  3  2  4  6  2  4  4  2  5  2  4  4  8  2  2  4  4  2  1  5  2 
46 47 48 49 50 
 4  5  2  2  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02379 0.30826 0.59143 1.00000 5.00000 
[1] "event indicator table: "

   0    1 
2126 1398 
[1] "treatment indicator table: "

   0    1 
1351 2173 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1768
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1756
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 230.363 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.417 0.103 
 2 mu         0.1   0.2 0.430 0.0827
 3 mu         0.1   0.3 0.508 0.0785
 4 mu         0.1   0.4 0.525 0.0815
 5 mu         0.1   0.5 0.541 0.0883
 6 mu         0.2   0.1 0.393 0.0794
 7 mu         0.2   0.2 0.421 0.0638
 8 mu         0.2   0.3 0.492 0.0520
 9 mu         0.2   0.4 0.516 0.0608
10 mu         0.2   0.5 0.540 0.0684
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1      0.828        0.532 0.00000000612      5.67
 2 mu         0.2      0.911        0.883 0.000396           6.14
 3 mu         0.3      0.967        0.943 0.0633             4.00
 4 mu         0.4      1.02         0.978 0.549              2.48
 5 mu         0.5      1.03         1.01  0.739              1.71
 6 mu         0.6      1.01         1.01  0.732              1.35
 7 mu         0.7      0.997        0.987 0.739              1.32
 8 mu         0.8      0.989        0.985 0.603              1.47
 9 mu         0.9      0.934        0.919 0.126              1.78
10 mu_1       0.1      0.851        0.650 0.0000000269       5.03
11 mu_1       0.2      0.925        0.869 0.000884           6.75
12 mu_1       0.3      0.982        0.953 0.0970             3.29
13 mu_1       0.4      1.02         0.982 0.639              2.34
14 mu_1       0.5      1.03         1.01  0.726              1.67
15 mu_1       0.6      1.01         1.00  0.715              1.32
16 mu_1       0.7      0.997        0.988 0.751              1.32
17 mu_1       0.8      0.987        0.987 0.576              1.49
18 mu_1       0.9      0.932        0.919 0.116              1.82
19 mu_0       0.1      0.826        0.507 0.00000000382      5.75
20 mu_0       0.2      0.908        0.881 0.000274           5.99
21 mu_0       0.3      0.961        0.933 0.0488             4.31
22 mu_0       0.4      1.01         0.973 0.480              2.58
23 mu_0       0.5      1.03         1.01  0.752              1.74
24 mu_0       0.6      1.01         1.00  0.756              1.38
25 mu_0       0.7      0.996        0.992 0.708              1.34
26 mu_0       0.8      0.996        0.986 0.657              1.38
27 mu_0       0.9      0.952        0.922 0.212              1.85
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.861     6.44e-14  3.79e-36     76.1 
 2 mu         0.2      2.51      2.42e- 7  3.29e-23    130.  
 3 mu         0.3      1.97      5.70e- 4  8.27e-16     52.0 
 4 mu         0.4      1.06      4.53e- 2  5.33e-11      8.79
 5 mu         0.5      0.816     2.78e- 1  8.77e- 8      4.53
 6 mu         0.6      0.953     4.20e- 1  3.45e- 5      4.44
 7 mu         0.7      1.19      6.45e- 1  1.12e- 8      9.68
 8 mu         0.8      1.35      2.91e- 1  2.22e-14      8.46
 9 mu         0.9      2.15      1.65e- 3  1.18e-24     50.2 
10 mu_1       0.1      1.54      3.83e-13  3.34e-35    132.  
11 mu_1       0.2      2.57      7.66e- 7  1.45e-22    113.  
12 mu_1       0.3      1.68      1.25e- 3  2.43e-15     30.1 
13 mu_1       0.4      0.962     7.49e- 2  1.30e-10      5.83
14 mu_1       0.5      0.809     3.06e- 1  1.70e- 7      4.63
15 mu_1       0.6      0.984     4.09e- 1  2.51e- 5      4.60
16 mu_1       0.7      1.20      6.32e- 1  3.73e- 9      9.62
17 mu_1       0.8      1.38      2.52e- 1  6.49e-15     10.1 
18 mu_1       0.9      2.19      1.16e- 3  3.07e-25     53.2 
19 mu_0       0.1      0.785     2.89e-14  5.06e-37     69.8 
20 mu_0       0.2      2.49      1.11e- 7  4.94e-24    134.  
21 mu_0       0.3      2.10      3.05e- 4  1.42e-16     61.4 
22 mu_0       0.4      1.12      2.55e- 2  2.54e-12     12.1 
23 mu_0       0.5      0.823     2.40e- 1  5.01e- 9      4.43
24 mu_0       0.6      0.907     4.17e- 1  2.47e- 6      4.72
25 mu_0       0.7      1.15      3.77e- 1  2.85e- 8      9.82
26 mu_0       0.8      1.22      4.24e- 1  8.50e-14      5.91
27 mu_0       0.9      1.80      6.09e- 3  9.04e-24     35.7 
[1] "Total run time was 234.51 seconds"
