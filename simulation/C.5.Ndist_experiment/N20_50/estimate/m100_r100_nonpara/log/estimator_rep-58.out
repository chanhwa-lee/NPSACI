
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3446"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 37 38 39 40 41 42 43 44 45 46 
 4  2  2  3  6  3  1  5  4  1  3  4  3  4  6  6  3  4  5  2  3  3  6  2  4  5 
47 48 49 50 
 1  2  2  1 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03292 0.35725 0.63258 1.00000 7.00000 
[1] "event indicator table: "

   0    1 
2111 1335 
[1] "treatment indicator table: "

   0    1 
1211 2235 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1736
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 38"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1710
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 48"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 196.065 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.450 0.125 
 2 mu         0.1   0.2 0.558 0.122 
 3 mu         0.1   0.3 0.637 0.133 
 4 mu         0.1   0.4 0.649 0.152 
 5 mu         0.1   0.5 0.654 0.175 
 6 mu         0.2   0.1 0.410 0.0920
 7 mu         0.2   0.2 0.508 0.0764
 8 mu         0.2   0.3 0.587 0.0770
 9 mu         0.2   0.4 0.599 0.0854
10 mu         0.2   0.5 0.610 0.102 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.12         0.296  0.000296     12.6 
 2 mu         0.2      1.12         0.986  0.139         5.64
 3 mu         0.3      0.966        0.953  0.406         2.11
 4 mu         0.4      0.946        0.937  0.267         1.45
 5 mu         0.5      0.966        0.951  0.528         1.31
 6 mu         0.6      1.01         1.00   0.746         1.29
 7 mu         0.7      1.03         1.03   0.678         1.32
 8 mu         0.8      1.01         1.02   0.680         1.40
 9 mu         0.9      1.02         1.04   0.457         1.81
10 mu_1       0.1      1.21         0.536  0.000923     13.1 
11 mu_1       0.2      1.06         1.04   0.221         4.28
12 mu_1       0.3      0.955        0.961  0.379         2.01
13 mu_1       0.4      0.946        0.931  0.272         1.36
14 mu_1       0.5      0.973        0.952  0.565         1.32
15 mu_1       0.6      1.01         1.01   0.760         1.32
16 mu_1       0.7      1.03         1.03   0.676         1.30
17 mu_1       0.8      1.01         1.02   0.691         1.42
18 mu_1       0.9      1.02         1.03   0.437         1.83
19 mu_0       0.1      1.11         0.272  0.000226     13.4 
20 mu_0       0.2      1.13         0.992  0.119         5.98
21 mu_0       0.3      0.971        0.972  0.418         2.16
22 mu_0       0.4      0.946        0.930  0.263         1.53
23 mu_0       0.5      0.960        0.950  0.490         1.30
24 mu_0       0.6      1.00         0.997  0.726         1.28
25 mu_0       0.7      1.03         1.02   0.684         1.35
26 mu_0       0.8      1.02         1.03   0.633         1.35
27 mu_0       0.9      1.01         1.01   0.611         1.62
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      8.01      4.74e-14  3.36e-34    636.  
 2 mu         0.2      4.18      9.85e- 8  4.10e-22    208.  
 3 mu         0.3      1.19      9.64e- 5  2.08e-15     24.2 
 4 mu         0.4      0.979     8.60e- 3  5.60e-11     13.6 
 5 mu         0.5      1.08      1.83e- 1  1.44e- 7      6.59
 6 mu         0.6      1.01      7.53e- 1  7.99e- 9      4.56
 7 mu         0.7      1.13      8.19e- 1  9.77e-14      6.77
 8 mu         0.8      1.27      5.64e- 1  7.66e-21      6.56
 9 mu         0.9      1.56      5.41e- 3  3.14e-33     44.6 
10 mu_1       0.1      9.31      3.18e-13  3.00e-33    677.  
11 mu_1       0.2      3.20      3.33e- 7  1.83e-21    158.  
12 mu_1       0.3      1.08      2.30e- 4  6.74e-15     18.6 
13 mu_1       0.4      0.983     1.29e- 2  1.36e-10     13.0 
14 mu_1       0.5      1.07      1.88e- 1  2.80e- 7      6.73
15 mu_1       0.6      1.01      7.37e- 1  1.42e- 9      4.59
16 mu_1       0.7      1.14      8.75e- 1  1.48e-14      6.75
17 mu_1       0.8      1.28      4.73e- 1  1.02e-21      6.89
18 mu_1       0.9      1.58      4.26e- 3  3.71e-34     48.2 
19 mu_0       0.1      7.86      1.79e-14  0           632.  
20 mu_0       0.2      4.43      3.70e- 8  0           221.  
21 mu_0       0.3      1.24      3.92e- 5  0            26.6 
22 mu_0       0.4      0.976     4.04e- 3  0            14.8 
23 mu_0       0.5      1.09      1.30e- 1  0             7.90
24 mu_0       0.6      1.00      6.53e- 1  0             4.75
25 mu_0       0.7      1.09      7.51e- 1  0             6.82
26 mu_0       0.8      1.24      7.03e- 1  0             5.22
27 mu_0       0.9      1.38      1.57e- 2  0            13.2 
[1] "Total run time was 199.512 seconds"
