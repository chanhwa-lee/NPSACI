
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3475"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 35 36 38 39 40 41 42 43 44 45 46 47 
 3  3  4  3  6  3  5  2  7  2  2  6  3  3  3  3  3  4  1  1  4  4  1  3  4  3 
48 49 50 
 3  5  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02045 0.31515 0.57776 0.98310 5.89377 
[1] "event indicator table: "

   0    1 
2017 1458 
[1] "treatment indicator table: "

   0    1 
1348 2127 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1698
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 32"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1777
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 22"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 266.385 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.471 0.0738
 2 mu         0.1   0.2 0.571 0.0802
 3 mu         0.1   0.3 0.615 0.0964
 4 mu         0.1   0.4 0.773 0.125 
 5 mu         0.1   0.5 0.788 0.108 
 6 mu         0.2   0.1 0.396 0.0417
 7 mu         0.2   0.2 0.502 0.0398
 8 mu         0.2   0.3 0.559 0.0476
 9 mu         0.2   0.4 0.655 0.0651
10 mu         0.2   0.5 0.700 0.0534
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.13         0.839  0.000187      8.52
 2 mu         0.2      1.11         1.05   0.0871        3.76
 3 mu         0.3      1.01         0.963  0.219         1.95
 4 mu         0.4      0.983        0.971  0.444         1.43
 5 mu         0.5      0.977        0.977  0.650         1.32
 6 mu         0.6      0.989        1.01   0.733         1.21
 7 mu         0.7      1.01         1.01   0.778         1.36
 8 mu         0.8      1.00         0.966  0.735         1.50
 9 mu         0.9      1.02         1.01   0.446         1.75
10 mu_1       0.1      1.20         1.03   0.000573      7.02
11 mu_1       0.2      1.07         1.02   0.137         2.62
12 mu_1       0.3      1.00         0.963  0.196         1.83
13 mu_1       0.4      0.982        0.978  0.512         1.38
14 mu_1       0.5      0.978        0.978  0.656         1.31
15 mu_1       0.6      0.990        1.00   0.744         1.21
16 mu_1       0.7      1.01         1.02   0.773         1.35
17 mu_1       0.8      1.00         0.960  0.727         1.52
18 mu_1       0.9      1.02         1.01   0.447         1.76
19 mu_0       0.1      1.12         0.796  0.000144      8.98
20 mu_0       0.2      1.12         1.04   0.0747        4.04
21 mu_0       0.3      1.01         0.977  0.228         2.00
22 mu_0       0.4      0.984        0.966  0.398         1.46
23 mu_0       0.5      0.976        0.972  0.643         1.34
24 mu_0       0.6      0.987        1.00   0.716         1.27
25 mu_0       0.7      1.01         1.00   0.750         1.37
26 mu_0       0.8      1.00         0.997  0.715         1.41
27 mu_0       0.9      1.01         0.970  0.438         1.79
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.31      1.85e-13  6.00e-34     77.4 
 2 mu         0.2      1.28      2.99e- 7  7.33e-22     45.4 
 3 mu         0.3      0.982     7.31e- 4  6.23e-15     15.3 
 4 mu         0.4      1.14      3.63e- 2  3.82e-10     15.2 
 5 mu         0.5      1.20      2.88e- 1  1.44e- 6      8.38
 6 mu         0.6      1.08      4.73e- 1  1.85e- 9     10.6 
 7 mu         0.7      1.14      4.83e- 1  4.58e-14      9.58
 8 mu         0.8      1.37      1.90e- 1  1.06e-20     17.7 
 9 mu         0.9      1.07      4.28e- 4  3.09e-32     13.5 
10 mu_1       0.1      1.56      1.21e-12  5.35e-33     72.0 
11 mu_1       0.2      1.17      9.27e- 7  3.26e-21     39.5 
12 mu_1       0.3      1.01      1.43e- 3  1.85e-14     17.0 
13 mu_1       0.4      1.18      5.41e- 2  8.52e-10     14.2 
14 mu_1       0.5      1.19      2.75e- 1  9.96e- 7      8.55
15 mu_1       0.6      1.06      5.78e- 1  2.86e-10     11.2 
16 mu_1       0.7      1.15      5.09e- 1  6.09e-15     10.6 
17 mu_1       0.8      1.38      1.56e- 1  1.23e-21     17.2 
18 mu_1       0.9      1.05      3.08e- 4  3.19e-33     13.4 
19 mu_0       0.1      1.29      7.05e-14  7.25e-35     78.0 
20 mu_0       0.2      1.31      1.42e- 7  9.95e-23     46.9 
21 mu_0       0.3      0.969     4.29e- 4  9.68e-16     14.6 
22 mu_0       0.4      1.12      2.44e- 2  6.93e-11     16.0 
23 mu_0       0.5      1.21      2.21e- 1  3.14e- 7      8.21
24 mu_0       0.6      1.11      4.17e- 1  4.18e- 9      9.63
25 mu_0       0.7      1.10      5.27e- 1  1.39e-13     10.4 
26 mu_0       0.8      1.31      3.06e- 1  4.81e-20     19.9 
27 mu_0       0.9      1.20      1.51e- 3  2.80e-31     14.7 
[1] "Total run time was 270.907 seconds"
