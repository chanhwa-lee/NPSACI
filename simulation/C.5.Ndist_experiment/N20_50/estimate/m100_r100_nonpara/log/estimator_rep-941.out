
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3540"
[1] "cluster size dist'n: "

20 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 
 5  7  4  3  3  3  2  2  6  1  2  2  3  1  2  3  1  5  3  3  7  4  4  1  3  7 
47 48 49 
 3  5  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04421 0.38577 0.63033 1.00000 5.00000 
[1] "event indicator table: "

   0    1 
2108 1432 
[1] "treatment indicator table: "

   0    1 
1307 2233 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1825
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1715
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 241.671 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.447 0.0902
 2 mu         0.1   0.2 0.546 0.0945
 3 mu         0.1   0.3 0.600 0.104 
 4 mu         0.1   0.4 0.725 0.134 
 5 mu         0.1   0.5 0.742 0.133 
 6 mu         0.2   0.1 0.347 0.0286
 7 mu         0.2   0.2 0.442 0.0448
 8 mu         0.2   0.3 0.498 0.0543
 9 mu         0.2   0.4 0.580 0.0678
10 mu         0.2   0.5 0.597 0.0631
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.16         0.372  0.000493     13.4 
 2 mu         0.2      1.03         0.906  0.103         3.30
 3 mu         0.3      1.04         0.979  0.514         2.01
 4 mu         0.4      1.01         1.01   0.631         1.84
 5 mu         0.5      0.997        0.988  0.635         1.49
 6 mu         0.6      0.988        0.991  0.711         1.27
 7 mu         0.7      0.994        0.987  0.718         1.32
 8 mu         0.8      0.996        0.986  0.626         1.36
 9 mu         0.9      0.990        1.01   0.271         1.69
10 mu_1       0.1      1.07         0.667  0.00143       6.76
11 mu_1       0.2      1.04         0.927  0.198         3.12
12 mu_1       0.3      1.03         1.02   0.554         1.98
13 mu_1       0.4      1.01         1.02   0.607         1.72
14 mu_1       0.5      0.995        0.991  0.636         1.44
15 mu_1       0.6      0.988        0.996  0.718         1.31
16 mu_1       0.7      0.995        0.985  0.721         1.30
17 mu_1       0.8      0.996        0.986  0.612         1.36
18 mu_1       0.9      0.991        1.00   0.253         1.75
19 mu_0       0.1      1.18         0.345  0.000388     14.4 
20 mu_0       0.2      1.03         0.890  0.0796        3.35
21 mu_0       0.3      1.04         0.973  0.479         2.07
22 mu_0       0.4      1.02         1.01   0.647         1.93
23 mu_0       0.5      1.00         0.993  0.632         1.54
24 mu_0       0.6      0.989        0.994  0.700         1.25
25 mu_0       0.7      0.993        0.991  0.710         1.37
26 mu_0       0.8      0.996        0.990  0.681         1.32
27 mu_0       0.9      0.982        0.989  0.427         1.59
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      3.84      2.03e-13  1.00e-34    382.  
 2 mu         0.2      1.54      1.36e- 7  4.36e-23    129.  
 3 mu         0.3      1.03      1.36e- 4  2.46e-16     17.6 
 4 mu         0.4      1.04      2.53e- 2  1.35e-11      7.81
 5 mu         0.5      1.03      2.72e- 1  5.64e- 8      7.96
 6 mu         0.6      0.969     4.95e- 1  4.42e- 5      5.89
 7 mu         0.7      0.940     7.15e- 1  2.11e- 8      3.41
 8 mu         0.8      1.07      2.45e- 1  5.48e-14      7.08
 9 mu         0.9      1.10      9.38e- 4  3.69e-24     20.4 
10 mu_1       0.1      3.37      1.39e-12  9.55e-34    332.  
11 mu_1       0.2      0.927     5.32e- 7  2.07e-22     56.0 
12 mu_1       0.3      0.992     2.89e- 4  7.80e-16     15.3 
13 mu_1       0.4      1.03      4.12e- 2  3.21e-11      8.40
14 mu_1       0.5      1.03      3.07e- 1  1.07e- 7      8.14
15 mu_1       0.6      0.964     6.03e- 1  3.96e- 5      5.45
16 mu_1       0.7      0.945     6.56e- 1  8.00e- 9      3.29
17 mu_1       0.8      1.09      1.95e- 1  1.82e-14      7.24
18 mu_1       0.9      1.10      6.77e- 4  1.09e-24     21.5 
19 mu_0       0.1      3.89      7.09e-14  5.44e-36    388.  
20 mu_0       0.2      1.69      3.53e- 8  2.66e-24    147.  
21 mu_0       0.3      1.05      7.59e- 5  1.71e-17     22.9 
22 mu_0       0.4      1.05      1.43e- 2  1.10e-12      8.21
23 mu_0       0.5      1.03      2.10e- 1  5.50e- 9      8.14
24 mu_0       0.6      0.977     4.23e- 1  5.39e- 6      6.54
25 mu_0       0.7      0.928     6.81e- 1  5.17e- 8      3.68
26 mu_0       0.8      1.01      4.25e- 1  2.01e-13      6.44
27 mu_0       0.9      1.15      3.29e- 3  2.71e-23     13.2 
[1] "Total run time was 245.285 seconds"
