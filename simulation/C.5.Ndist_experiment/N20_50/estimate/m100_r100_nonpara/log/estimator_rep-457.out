
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3627"
[1] "cluster size dist'n: "

21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 44 45 46 47 
 1  4  3  3  2  4  3  4  5  2  4  2  5  2  1  3  2  2  4  9  2  5  6  4  4  5 
48 49 50 
 3  4  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03117 0.35103 0.62163 1.00000 5.00000 
[1] "event indicator table: "

   0    1 
2226 1401 
[1] "treatment indicator table: "

   0    1 
1219 2408 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1848
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1779
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 70"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 200.662 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.415 0.113 
 2 mu         0.1   0.2 0.520 0.139 
 3 mu         0.1   0.3 0.587 0.157 
 4 mu         0.1   0.4 0.646 0.169 
 5 mu         0.1   0.5 0.656 0.168 
 6 mu         0.2   0.1 0.404 0.0468
 7 mu         0.2   0.2 0.492 0.0685
 8 mu         0.2   0.3 0.555 0.0765
 9 mu         0.2   0.4 0.587 0.0914
10 mu         0.2   0.5 0.670 0.0718
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      0.846        0.199 0.00000183     19.4 
 2 mu         0.2      1.07         0.855 0.00727         4.43
 3 mu         0.3      1.04         0.984 0.176           3.13
 4 mu         0.4      1.01         1.01  0.527           2.14
 5 mu         0.5      1.00         0.999 0.674           1.41
 6 mu         0.6      1.03         1.04  0.741           1.41
 7 mu         0.7      1.01         1.02  0.688           1.29
 8 mu         0.8      0.977        0.954 0.680           1.49
 9 mu         0.9      0.992        0.956 0.561           1.93
10 mu_1       0.1      0.974        0.378 0.00000666     17.3 
11 mu_1       0.2      1.08         0.938 0.0136          4.46
12 mu_1       0.3      1.03         0.962 0.231           2.90
13 mu_1       0.4      1.01         1.00  0.591           1.96
14 mu_1       0.5      1.01         0.996 0.687           1.40
15 mu_1       0.6      1.03         1.04  0.728           1.41
16 mu_1       0.7      1.00         1.02  0.692           1.29
17 mu_1       0.8      0.976        0.953 0.682           1.49
18 mu_1       0.9      0.992        0.954 0.566           1.96
19 mu_0       0.1      0.832        0.179 0.00000129     19.6 
20 mu_0       0.2      1.06         0.826 0.00569         4.73
21 mu_0       0.3      1.05         0.966 0.153           3.22
22 mu_0       0.4      1.01         1.01  0.485           2.27
23 mu_0       0.5      1.00         0.985 0.646           1.42
24 mu_0       0.6      1.03         1.03  0.736           1.40
25 mu_0       0.7      1.02         1.02  0.678           1.32
26 mu_0       0.8      0.980        0.970 0.672           1.47
27 mu_0       0.9      0.994        0.965 0.515           1.66
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.139     1.86e-14  3.19e-40     11.3 
 2 mu         0.2      2.04      4.17e- 8  2.49e-27     68.9 
 3 mu         0.3      2.87      9.54e- 5  8.14e-20     69.5 
 4 mu         0.4      1.52      1.30e- 2  1.64e-14     15.5 
 5 mu         0.5      1.11      2.28e- 1  2.01e-10     12.0 
 6 mu         0.6      1.02      6.78e- 1  4.09e- 7      7.71
 7 mu         0.7      1.05      5.70e- 1  3.39e- 8      4.97
 8 mu         0.8      1.03      4.01e- 1  5.14e-14      6.05
 9 mu         0.9      1.69      3.25e- 3  1.54e-24     20.0 
10 mu_1       0.1      0.327     1.28e-13  3.11e-39     26.2 
11 mu_1       0.2      2.58      1.36e- 7  1.22e-26     79.5 
12 mu_1       0.3      2.66      2.08e- 4  2.65e-19     64.1 
13 mu_1       0.4      1.40      2.24e- 2  4.02e-14     15.8 
14 mu_1       0.5      1.08      2.75e- 1  3.93e-10     12.2 
15 mu_1       0.6      1.02      7.27e- 1  6.66e- 7      6.74
16 mu_1       0.7      1.05      5.66e- 1  1.19e- 8      4.83
17 mu_1       0.8      1.04      3.30e- 1  1.57e-14      5.89
18 mu_1       0.9      1.71      2.42e- 3  4.18e-25     20.8 
19 mu_0       0.1      0.118     6.48e-15  0             9.70
20 mu_0       0.2      1.91      1.70e- 8  0            66.2 
21 mu_0       0.3      2.96      4.72e- 5  0            71.8 
22 mu_0       0.4      1.59      6.23e- 3  0            18.7 
23 mu_0       0.5      1.14      1.48e- 1  0            13.6 
24 mu_0       0.6      1.02      5.21e- 1  0             9.15
25 mu_0       0.7      1.07      6.02e- 1  0             5.69
26 mu_0       0.8      0.993     3.38e- 1  0             6.73
27 mu_0       0.9      1.51      9.31e- 3  0            15.3 
[1] "Total run time was 203.724 seconds"
