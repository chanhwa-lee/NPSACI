
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3598"
[1] "cluster size dist'n: "

20 22 23 24 25 26 27 28 29 30 31 33 34 35 36 37 38 40 41 42 43 44 45 46 47 48 
 4  3  2  3  6  3  3  1  3  5  4  4  2  4  8  4  2  2  2  5  3  3  2  6  2  2 
49 50 
 5  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03522 0.34957 0.60174 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
2081 1517 
[1] "treatment indicator table: "

   0    1 
1411 2187 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1773
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1825
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 7"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 191.836 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.420 0.0737
 2 mu         0.1   0.2 0.484 0.0771
 3 mu         0.1   0.3 0.576 0.0772
 4 mu         0.1   0.4 0.606 0.0786
 5 mu         0.1   0.5 0.607 0.0788
 6 mu         0.2   0.1 0.399 0.0440
 7 mu         0.2   0.2 0.477 0.0428
 8 mu         0.2   0.3 0.546 0.0424
 9 mu         0.2   0.4 0.581 0.0402
10 mu         0.2   0.5 0.602 0.0374
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.963        0.626   0.00245     10.8 
 2 mu         0.2      1.03         0.993   0.113        2.75
 3 mu         0.3      1.03         1.02    0.432        1.77
 4 mu         0.4      1.00         0.976   0.560        1.51
 5 mu         0.5      0.974        0.975   0.608        1.38
 6 mu         0.6      0.977        0.967   0.676        1.37
 7 mu         0.7      0.994        0.991   0.668        1.35
 8 mu         0.8      0.996        1.01    0.672        1.40
 9 mu         0.9      0.999        0.976   0.320        2.14
10 mu_1       0.1      0.995        0.751   0.00653      5.05
11 mu_1       0.2      1.04         1.01    0.174        2.52
12 mu_1       0.3      1.03         0.993   0.431        1.82
13 mu_1       0.4      0.995        0.990   0.532        1.50
14 mu_1       0.5      0.971        0.967   0.650        1.36
15 mu_1       0.6      0.979        0.968   0.691        1.37
16 mu_1       0.7      0.995        0.996   0.660        1.33
17 mu_1       0.8      0.996        0.998   0.675        1.40
18 mu_1       0.9      0.999        0.966   0.309        2.22
19 mu_0       0.1      0.959        0.589   0.00199     11.5 
20 mu_0       0.2      1.02         1.00    0.0974       2.81
21 mu_0       0.3      1.03         1.03    0.396        1.76
22 mu_0       0.4      1.00         0.968   0.563        1.55
23 mu_0       0.5      0.977        0.967   0.566        1.39
24 mu_0       0.6      0.975        0.961   0.652        1.38
25 mu_0       0.7      0.991        0.988   0.687        1.40
26 mu_0       0.8      0.995        1.01    0.657        1.39
27 mu_0       0.9      1.00         0.998   0.419        1.64
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.436     2.81e-12  2.49e-38     25.6 
 2 mu         0.2      1.43      1.33e- 6  4.87e-26     47.9 
 3 mu         0.3      1.42      2.64e- 3  7.07e-19     17.8 
 4 mu         0.4      1.04      1.39e- 1  8.04e-14     13.1 
 5 mu         0.5      1.03      3.46e- 1  6.30e-10      5.75
 6 mu         0.6      1.27      5.12e- 1  8.89e- 7     10.7 
 7 mu         0.7      1.07      5.38e- 1  2.78e-10      5.30
 8 mu         0.8      1.04      1.62e- 1  2.82e-16      7.43
 9 mu         0.9      0.921     3.07e- 4  5.92e-27      9.89
10 mu_1       0.1      0.779     1.64e-11  2.43e-37     42.7 
11 mu_1       0.2      1.50      4.30e- 6  2.38e-25     39.9 
12 mu_1       0.3      1.34      5.21e- 3  2.30e-18     16.7 
13 mu_1       0.4      1.00      1.76e- 1  1.96e-13     13.4 
14 mu_1       0.5      1.07      3.40e- 1  1.23e- 9      5.92
15 mu_1       0.6      1.27      5.33e- 1  9.49e- 7     10.6 
16 mu_1       0.7      1.05      5.86e- 1  7.76e-11      5.60
17 mu_1       0.8      1.04      1.19e- 1  6.89e-17      7.99
18 mu_1       0.9      0.900     2.15e- 4  1.29e-27      9.84
19 mu_0       0.1      0.398     8.66e-13  6.60e-40     23.7 
20 mu_0       0.2      1.41      5.94e- 7  1.45e-27     49.9 
21 mu_0       0.3      1.45      1.54e- 3  2.41e-20     18.2 
22 mu_0       0.4      1.06      8.51e- 2  3.19e-15     12.9 
23 mu_0       0.5      0.985     3.59e- 1  3.00e-11      6.81
24 mu_0       0.6      1.27      4.18e- 1  5.29e- 8     10.8 
25 mu_0       0.7      1.13      4.53e- 1  7.44e-10      6.29
26 mu_0       0.8      1.01      3.11e- 1  1.13e-15      5.20
27 mu_0       0.9      1.11      1.16e- 3  4.76e-26     12.9 
[1] "Total run time was 194.881 seconds"
