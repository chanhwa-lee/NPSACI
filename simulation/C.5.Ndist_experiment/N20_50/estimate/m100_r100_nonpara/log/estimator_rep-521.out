
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3533"
[1] "cluster size dist'n: "

21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 
 1  1  3  4  4  4  5  4  4  1  7  3  2  4  3  1  2  3  2 12  3  7  5  4  1  4 
47 49 50 
 3  2  1 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0297  0.3516  0.6094  1.0000  6.0000 
[1] "event indicator table: "

   0    1 
2091 1442 
[1] "treatment indicator table: "

   0    1 
1270 2263 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1788
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 10"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 25"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1745
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 200.331 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.445 0.0980
 2 mu         0.1   0.2 0.494 0.0856
 3 mu         0.1   0.3 0.511 0.0864
 4 mu         0.1   0.4 0.565 0.0952
 5 mu         0.1   0.5 0.593 0.106 
 6 mu         0.2   0.1 0.380 0.0608
 7 mu         0.2   0.2 0.439 0.0464
 8 mu         0.2   0.3 0.453 0.0367
 9 mu         0.2   0.4 0.511 0.0423
10 mu         0.2   0.5 0.538 0.0470
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      0.973        0.279 0.000000384      9.02
 2 mu         0.2      0.940        0.911 0.00260          2.79
 3 mu         0.3      0.963        0.931 0.122            1.88
 4 mu         0.4      0.993        0.980 0.473            1.67
 5 mu         0.5      1.00         0.992 0.659            1.34
 6 mu         0.6      0.997        0.993 0.716            1.31
 7 mu         0.7      0.986        0.985 0.796            1.22
 8 mu         0.8      0.994        0.997 0.580            1.39
 9 mu         0.9      1.04         1.02  0.397            2.03
10 mu_1       0.1      0.894        0.503 0.00000159       4.35
11 mu_1       0.2      0.943        0.916 0.00549          2.15
12 mu_1       0.3      0.970        0.936 0.175            1.96
13 mu_1       0.4      0.997        0.985 0.513            1.55
14 mu_1       0.5      1.00         0.997 0.696            1.32
15 mu_1       0.6      0.996        0.989 0.716            1.32
16 mu_1       0.7      0.986        0.988 0.796            1.22
17 mu_1       0.8      0.995        0.990 0.582            1.41
18 mu_1       0.9      1.04         1.02  0.383            2.06
19 mu_0       0.1      0.982        0.252 0.000000250      9.61
20 mu_0       0.2      0.940        0.918 0.00188          2.94
21 mu_0       0.3      0.960        0.940 0.0990           1.84
22 mu_0       0.4      0.991        0.984 0.446            1.74
23 mu_0       0.5      1.00         0.989 0.623            1.35
24 mu_0       0.6      0.999        0.993 0.714            1.31
25 mu_0       0.7      0.988        0.990 0.779            1.25
26 mu_0       0.8      0.989        0.985 0.575            1.33
27 mu_0       0.9      1.03         0.985 0.430            1.84
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.141     1.38e-13  1.59e-41      8.20
 2 mu         0.2      0.719     9.83e- 8  4.99e-28     24.4 
 3 mu         0.3      0.923     1.31e- 4  3.66e-20     21.4 
 4 mu         0.4      1.11      1.41e- 2  1.32e-14      7.04
 5 mu         0.5      1.11      2.46e- 1  2.52e-10      5.42
 6 mu         0.6      0.925     7.38e- 1  7.36e- 7      4.37
 7 mu         0.7      1.10      7.40e- 1  1.32e- 5      6.95
 8 mu         0.8      1.09      3.16e- 1  4.79e- 9      7.10
 9 mu         0.9      0.994     1.03e- 3  3.74e-16     15.5 
10 mu_1       0.1      0.293     8.38e-13  1.56e-40     15.8 
11 mu_1       0.2      0.826     3.19e- 7  2.44e-27     27.1 
12 mu_1       0.3      0.929     3.08e- 4  1.19e-19     17.8 
13 mu_1       0.4      1.13      2.34e- 2  3.22e-14      6.16
14 mu_1       0.5      1.08      2.73e- 1  4.92e-10      5.53
15 mu_1       0.6      0.918     7.27e- 1  1.20e- 6      4.91
16 mu_1       0.7      1.12      6.69e- 1  3.62e- 6      6.69
17 mu_1       0.8      1.08      2.65e- 1  1.24e- 9      7.14
18 mu_1       0.9      1.00      7.36e- 4  1.42e-16     16.8 
19 mu_0       0.1      0.124     3.96e-14  3.85e-43      7.36
20 mu_0       0.2      0.692     4.32e- 8  1.35e-29     23.7 
21 mu_0       0.3      0.921     5.14e- 5  1.14e-21     22.9 
22 mu_0       0.4      1.09      7.95e- 3  4.77e-16      7.63
23 mu_0       0.5      1.14      1.75e- 1  1.09e-11      5.31
24 mu_0       0.6      0.936     5.77e- 1  4.00e- 8      4.11
25 mu_0       0.7      1.05      8.64e- 1  3.55e- 5      7.55
26 mu_0       0.8      1.14      4.04e- 1  1.80e- 8      6.93
27 mu_0       0.9      0.927     3.70e- 3  2.46e-15     10.3 
[1] "Total run time was 203.715 seconds"
