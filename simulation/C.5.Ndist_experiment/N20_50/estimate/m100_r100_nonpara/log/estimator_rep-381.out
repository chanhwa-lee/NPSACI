
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3457"
[1] "cluster size dist'n: "

21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 
 3  4  3  4  1  3  3  1  6  5  8  4  6  6  2  3  2  1  3  5  4  1  3  2  6  2 
47 48 49 50 
 4  1  1  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03777 0.33947 0.61375 1.00000 5.00000 
[1] "event indicator table: "

   0    1 
2015 1442 
[1] "treatment indicator table: "

   0    1 
1230 2227 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1721
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 24"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1736
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 199.658 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.407 0.102 
 2 mu         0.1   0.2 0.470 0.118 
 3 mu         0.1   0.3 0.513 0.131 
 4 mu         0.1   0.4 0.544 0.138 
 5 mu         0.1   0.5 0.578 0.148 
 6 mu         0.2   0.1 0.363 0.0432
 7 mu         0.2   0.2 0.444 0.0441
 8 mu         0.2   0.3 0.511 0.0524
 9 mu         0.2   0.4 0.564 0.0497
10 mu         0.2   0.5 0.615 0.0576
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.917        0.356 0.0000150     19.6 
 2 mu         0.2      0.993        0.890 0.0134         4.69
 3 mu         0.3      1.02         1.01  0.237          2.05
 4 mu         0.4      1.01         0.993 0.573          1.45
 5 mu         0.5      0.995        0.989 0.573          1.32
 6 mu         0.6      0.980        0.953 0.716          1.32
 7 mu         0.7      0.977        0.972 0.687          1.23
 8 mu         0.8      0.987        0.961 0.671          1.42
 9 mu         0.9      1.01         0.993 0.362          2.00
10 mu_1       0.1      0.851        0.526 0.0000582      6.50
11 mu_1       0.2      1.00         0.946 0.0266         3.75
12 mu_1       0.3      1.02         1.00  0.327          1.75
13 mu_1       0.4      1.01         0.991 0.571          1.44
14 mu_1       0.5      0.992        0.970 0.577          1.29
15 mu_1       0.6      0.979        0.957 0.733          1.30
16 mu_1       0.7      0.977        0.973 0.687          1.24
17 mu_1       0.8      0.988        0.963 0.650          1.46
18 mu_1       0.9      1.01         0.996 0.347          2.04
19 mu_0       0.1      0.925        0.341 0.0000102     21.7 
20 mu_0       0.2      0.991        0.870 0.0101         4.93
21 mu_0       0.3      1.02         0.997 0.199          2.21
22 mu_0       0.4      1.02         0.995 0.574          1.47
23 mu_0       0.5      0.999        0.986 0.570          1.36
24 mu_0       0.6      0.981        0.954 0.691          1.36
25 mu_0       0.7      0.975        0.968 0.686          1.25
26 mu_0       0.8      0.980        0.968 0.697          1.29
27 mu_0       0.9      1.01         0.986 0.472          1.77
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       1.14     6.53e-14  5.34e-39     60.6 
 2 mu         0.2       2.53     8.56e- 8  6.60e-26    115.  
 3 mu         0.3       1.62     1.82e- 4  2.48e-18     35.7 
 4 mu         0.4       1.09     1.29e- 2  4.90e-13     15.5 
 5 mu         0.5       1.06     2.07e- 1  5.21e- 9     11.8 
 6 mu         0.6       1.15     8.11e- 1  3.64e- 6      7.82
 7 mu         0.7       1.31     7.43e- 1  1.65e- 9      6.19
 8 mu         0.8       1.22     4.40e- 1  1.12e-14      8.54
 9 mu         0.9       1.10     4.58e- 3  9.39e-24     23.8 
10 mu_1       0.1       1.83     4.32e-13  5.00e-38     84.2 
11 mu_1       0.2       2.45     2.75e- 7  3.09e-25    105.  
12 mu_1       0.3       1.43     4.52e- 4  7.73e-18     24.8 
13 mu_1       0.4       1.07     2.27e- 2  1.15e-12     15.2 
14 mu_1       0.5       1.08     2.87e- 1  9.75e- 9     12.4 
15 mu_1       0.6       1.17     8.71e- 1  1.32e- 6      6.85
16 mu_1       0.7       1.31     6.53e- 1  3.27e-10      6.28
17 mu_1       0.8       1.21     4.17e- 1  1.94e-15      8.54
18 mu_1       0.9       1.09     3.44e- 3  1.45e-24     24.2 
19 mu_0       0.1       1.07     2.46e-14  0            58.0 
20 mu_0       0.2       2.55     3.78e- 8  0           118.  
21 mu_0       0.3       1.70     6.66e- 5  0            41.7 
22 mu_0       0.4       1.10     6.78e- 3  0            15.7 
23 mu_0       0.5       1.05     1.43e- 1  0            11.2 
24 mu_0       0.6       1.12     5.89e- 1  0             9.29
25 mu_0       0.7       1.29     8.83e- 1  0             5.96
26 mu_0       0.8       1.28     5.85e- 1  0             8.54
27 mu_0       0.9       1.16     1.27e- 2  0            20.2 
[1] "Total run time was 202.936 seconds"
