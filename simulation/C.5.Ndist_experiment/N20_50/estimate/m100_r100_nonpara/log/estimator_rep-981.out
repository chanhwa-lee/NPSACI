
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3646"
[1] "cluster size dist'n: "

20 21 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 
 1  5  4  3  1  2  3  2  3  3  4  3  6  1  3  2  5  7  1  3  4  1  6  2  6  6 
47 48 49 50 
 4  3  3  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02122 0.31326 0.58120 0.99177 5.00000 
[1] "event indicator table: "

   0    1 
2151 1495 
[1] "treatment indicator table: "

   0    1 
1423 2223 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1802
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 59"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1844
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 7"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 19"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 199.343 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.393 0.0899
 2 mu         0.1   0.2 0.430 0.0815
 3 mu         0.1   0.3 0.505 0.0904
 4 mu         0.1   0.4 0.508 0.0684
 5 mu         0.1   0.5 0.505 0.0574
 6 mu         0.2   0.1 0.380 0.0417
 7 mu         0.2   0.2 0.455 0.0402
 8 mu         0.2   0.3 0.524 0.0470
 9 mu         0.2   0.4 0.554 0.0357
10 mu         0.2   0.5 0.576 0.0331
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.793        0.743 0.0000531      3.85
 2 mu         0.2      0.980        1.01  0.0328         2.37
 3 mu         0.3      0.990        0.990 0.375          2.32
 4 mu         0.4      0.986        0.995 0.563          1.52
 5 mu         0.5      0.992        1.00  0.598          1.23
 6 mu         0.6      0.990        0.983 0.737          1.24
 7 mu         0.7      0.997        0.990 0.716          1.36
 8 mu         0.8      0.988        0.995 0.398          1.56
 9 mu         0.9      0.979        0.962 0.0162         2.20
10 mu_1       0.1      0.859        0.823 0.000189       3.76
11 mu_1       0.2      1.00         1.02  0.0596         2.57
12 mu_1       0.3      0.987        0.978 0.452          2.15
13 mu_1       0.4      0.989        0.974 0.531          1.46
14 mu_1       0.5      0.992        0.998 0.629          1.27
15 mu_1       0.6      0.990        0.980 0.739          1.22
16 mu_1       0.7      0.997        0.991 0.712          1.38
17 mu_1       0.8      0.988        0.982 0.387          1.56
18 mu_1       0.9      0.977        0.966 0.0139         2.19
19 mu_0       0.1      0.786        0.738 0.0000380      3.86
20 mu_0       0.2      0.974        1.04  0.0260         2.32
21 mu_0       0.3      0.991        0.990 0.333          2.40
22 mu_0       0.4      0.984        0.992 0.584          1.56
23 mu_0       0.5      0.993        0.996 0.568          1.26
24 mu_0       0.6      0.989        0.987 0.733          1.28
25 mu_0       0.7      0.996        0.994 0.712          1.33
26 mu_0       0.8      0.989        1.00  0.442          1.57
27 mu_0       0.9      0.995        0.980 0.0363         2.32
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       4.67     2.07e-12  9.48e-44    446.  
 2 mu         0.2       1.98     4.66e- 7  2.11e-29     81.3 
 3 mu         0.3       1.69     4.87e- 4  4.58e-21     47.0 
 4 mu         0.4       1.34     4.12e- 2  3.34e-15     10.7 
 5 mu         0.5       1.18     1.49e- 1  1.04e-10      9.77
 6 mu         0.6       1.10     5.00e- 1  2.39e- 8      7.03
 7 mu         0.7       1.47     5.79e- 1  7.93e-13      8.73
 8 mu         0.8       2.52     3.86e- 1  2.75e-19     47.4 
 9 mu         0.9       3.78     2.30e- 3  1.60e-30    191.  
10 mu_1       0.1       4.61     1.18e-11  9.10e-43    425.  
11 mu_1       0.2       1.78     1.54e- 6  1.01e-28     38.7 
12 mu_1       0.3       1.64     1.00e- 3  1.46e-20     43.3 
13 mu_1       0.4       1.31     5.73e- 2  8.01e-15     11.9 
14 mu_1       0.5       1.16     2.03e- 1  2.00e-10      8.69
15 mu_1       0.6       1.11     6.16e- 1  3.80e- 9      7.57
16 mu_1       0.7       1.53     6.47e- 1  1.08e-13     10.2 
17 mu_1       0.8       2.57     3.07e- 1  3.28e-20     48.4 
18 mu_1       0.9       3.89     1.61e- 3  1.70e-31    204.  
19 mu_0       0.1       4.67     9.61e-13  0           449.  
20 mu_0       0.2       2.03     1.51e- 7  0            91.9 
21 mu_0       0.3       1.71     2.65e- 4  0            48.6 
22 mu_0       0.4       1.36     3.00e- 2  0            12.6 
23 mu_0       0.5       1.19     9.90e- 2  0            10.9 
24 mu_0       0.6       1.08     4.11e- 1  0             6.23
25 mu_0       0.7       1.33     7.24e- 1  0             7.42
26 mu_0       0.8       2.32     3.22e- 1  0            43.5 
27 mu_0       0.9       2.81     4.74e- 3  0            79.7 
[1] "Total run time was 202.32 seconds"
