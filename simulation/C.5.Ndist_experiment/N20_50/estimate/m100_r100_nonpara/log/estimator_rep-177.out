
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3477"
[1] "cluster size dist'n: "

20 21 23 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 47 48 
 5  1  2  3  5  6  3  5  2  3  6  6  6  6  2  2  3  3  5  2  3  6  1  2  3  5 
49 50 
 1  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.05113 0.37112 0.62941 1.00000 5.00000 
[1] "event indicator table: "

   0    1 
2097 1380 
[1] "treatment indicator table: "

   0    1 
1237 2240 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1803
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1674
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 301.554 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.249 0.0837
 2 mu         0.1   0.2 0.350 0.111 
 3 mu         0.1   0.3 0.425 0.0929
 4 mu         0.1   0.4 0.435 0.0894
 5 mu         0.1   0.5 0.434 0.0898
 6 mu         0.2   0.1 0.288 0.0665
 7 mu         0.2   0.2 0.397 0.0828
 8 mu         0.2   0.3 0.484 0.0668
 9 mu         0.2   0.4 0.521 0.0668
10 mu         0.2   0.5 0.533 0.0704
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      0.730        0.180 0.00000119      11.0 
 2 mu         0.2      0.973        0.844 0.00627          9.63
 3 mu         0.3      1.01         1.03  0.152            4.32
 4 mu         0.4      1.03         1.04  0.462            1.93
 5 mu         0.5      1.05         1.03  0.740            1.74
 6 mu         0.6      1.03         1.01  0.759            1.51
 7 mu         0.7      1.01         1.01  0.629            1.34
 8 mu         0.8      0.988        0.982 0.488            1.45
 9 mu         0.9      0.950        0.972 0.224            2.61
10 mu_1       0.1      0.769        0.378 0.00000447       5.75
11 mu_1       0.2      0.999        0.868 0.0131           9.28
12 mu_1       0.3      1.01         1.05  0.217            3.19
13 mu_1       0.4      1.04         1.03  0.471            1.95
14 mu_1       0.5      1.05         1.03  0.768            1.75
15 mu_1       0.6      1.03         1.01  0.745            1.51
16 mu_1       0.7      1.00         1.00  0.623            1.37
17 mu_1       0.8      0.987        0.968 0.483            1.45
18 mu_1       0.9      0.947        0.965 0.211            2.62
19 mu_0       0.1      0.726        0.158 0.000000828     11.8 
20 mu_0       0.2      0.967        0.836 0.00456          9.72
21 mu_0       0.3      1.01         0.993 0.125            4.81
22 mu_0       0.4      1.03         1.03  0.456            1.92
23 mu_0       0.5      1.05         1.03  0.710            1.74
24 mu_0       0.6      1.04         1.02  0.782            1.52
25 mu_0       0.7      1.01         1.00  0.644            1.32
26 mu_0       0.8      0.994        0.992 0.510            1.46
27 mu_0       0.9      0.979        0.953 0.341            2.49
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.0557     2.51e-13  4.01e-37      4.02
 2 mu         0.2     0.525      1.40e- 7  9.80e-25     18.5 
 3 mu         0.3     1.30       3.17e- 4  1.24e-17     24.9 
 4 mu         0.4     1.63       2.17e- 2  1.21e-12     16.0 
 5 mu         0.5     1.46       3.28e- 1  7.91e- 9     14.7 
 6 mu         0.6     1.36       7.69e- 1  8.93e- 6     13.2 
 7 mu         0.7     1.74       9.71e- 1  5.02e- 6     16.8 
 8 mu         0.8     1.54       3.78e- 1  8.13e-10     14.8 
 9 mu         0.9     1.48       1.59e- 3  1.58e-18     34.2 
10 mu_1       0.1     0.126      1.72e-12  3.74e-36      8.31
11 mu_1       0.2     0.710      4.49e- 7  4.67e-24     24.9 
12 mu_1       0.3     1.43       7.06e- 4  3.95e-17     22.4 
13 mu_1       0.4     1.63       3.60e- 2  2.89e-12     16.4 
14 mu_1       0.5     1.42       4.51e- 1  1.51e- 8     14.1 
15 mu_1       0.6     1.38       7.63e- 1  1.42e- 5     13.1 
16 mu_1       0.7     1.76       9.15e- 1  1.48e- 6     17.9 
17 mu_1       0.8     1.51       3.43e- 1  2.58e-10     14.1 
18 mu_1       0.9     1.51       1.16e- 3  6.31e-19     36.8 
19 mu_0       0.1     0.0479     6.24e-14  2.91e-38      3.54
20 mu_0       0.2     0.479      6.33e- 8  5.70e-26     17.0 
21 mu_0       0.3     1.24       1.30e- 4  8.27e-19     26.0 
22 mu_0       0.4     1.63       1.06e- 2  9.40e-14     17.6 
23 mu_0       0.5     1.50       2.19e- 1  7.36e-10     15.4 
24 mu_0       0.6     1.34       5.47e- 1  1.04e- 6     13.4 
25 mu_0       0.7     1.68       9.01e- 1  1.33e- 5     14.3 
26 mu_0       0.8     1.66       3.49e- 1  2.60e- 9     17.8 
27 mu_0       0.9     1.24       5.41e- 3  1.01e-17     16.4 
[1] "Total run time was 305.587 seconds"
