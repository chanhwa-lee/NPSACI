
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3381"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 6  1  4  3  3  2  2  6  5  4  4  2  3  5  2  5  5  4  3  2  2  5  1  1  4  6 
46 47 48 50 
 5  3  1  1 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0486  0.3761  0.6319  1.0000  5.0000 
[1] "event indicator table: "

   0    1 
1997 1384 
[1] "treatment indicator table: "

   0    1 
1253 2128 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1723
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1658
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 60"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 227.713 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.333 0.0548
 2 mu         0.1   0.2 0.410 0.0488
 3 mu         0.1   0.3 0.438 0.0753
 4 mu         0.1   0.4 0.501 0.0666
 5 mu         0.1   0.5 0.576 0.0601
 6 mu         0.2   0.1 0.344 0.0595
 7 mu         0.2   0.2 0.424 0.0575
 8 mu         0.2   0.3 0.492 0.0816
 9 mu         0.2   0.4 0.533 0.0724
10 mu         0.2   0.5 0.595 0.0729
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.897        0.762   0.00156      2.98
 2 mu         0.2      0.946        0.861   0.219        1.89
 3 mu         0.3      0.988        0.965   0.560        1.49
 4 mu         0.4      0.994        0.989   0.572        1.60
 5 mu         0.5      1.01         1.01    0.709        1.40
 6 mu         0.6      1.01         0.999   0.600        1.49
 7 mu         0.7      1.01         1.01    0.763        1.30
 8 mu         0.8      1.01         1.01    0.670        1.39
 9 mu         0.9      1.00         0.966   0.417        1.87
10 mu_1       0.1      0.923        0.775   0.00421      3.09
11 mu_1       0.2      0.959        0.919   0.310        1.90
12 mu_1       0.3      0.993        0.991   0.554        1.50
13 mu_1       0.4      0.993        0.988   0.600        1.63
14 mu_1       0.5      1.01         1.00    0.700        1.34
15 mu_1       0.6      1.01         1.00    0.586        1.49
16 mu_1       0.7      1.01         1.01    0.762        1.28
17 mu_1       0.8      1.01         1.01    0.649        1.39
18 mu_1       0.9      1.00         0.978   0.420        1.87
19 mu_0       0.1      0.894        0.727   0.00126      3.06
20 mu_0       0.2      0.942        0.854   0.197        1.94
21 mu_0       0.3      0.986        0.961   0.563        1.54
22 mu_0       0.4      0.994        0.986   0.553        1.58
23 mu_0       0.5      1.00         0.993   0.699        1.47
24 mu_0       0.6      1.01         1.01    0.621        1.50
25 mu_0       0.7      1.01         1.01    0.738        1.34
26 mu_0       0.8      1.01         1.02    0.672        1.38
27 mu_0       0.9      1.00         0.939   0.389        1.89
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.0860     1.74e-12  7.31e-41      4.86
 2 mu         0.2     0.541      1.10e- 6  6.43e-28     30.2 
 3 mu         0.3     0.795      1.20e- 3  2.40e-20     10.9 
 4 mu         0.4     0.975      9.47e- 2  5.65e-15      8.97
 5 mu         0.5     1.15       7.73e- 1  8.31e-11     10.9 
 6 mu         0.6     1.24       6.37e- 1  2.11e- 7      6.41
 7 mu         0.7     1.14       7.12e- 1  2.94e- 9      5.14
 8 mu         0.8     1.10       1.42e- 1  6.71e-15      7.82
 9 mu         0.9     1.25       2.55e- 4  5.64e-25     16.4 
10 mu_1       0.1     0.175      1.09e-11  7.31e-40      9.72
11 mu_1       0.2     0.620      3.42e- 6  3.21e-27     30.9 
12 mu_1       0.3     0.842      2.46e- 3  8.00e-20      9.03
13 mu_1       0.4     1.01       1.48e- 1  1.41e-14      8.47
14 mu_1       0.5     1.18       6.52e- 1  1.66e-10     11.4 
15 mu_1       0.6     1.23       7.35e- 1  3.52e- 7      5.58
16 mu_1       0.7     1.13       6.72e- 1  8.59e-10      5.65
17 mu_1       0.8     1.10       1.27e- 1  1.72e-15      7.72
18 mu_1       0.9     1.27       1.69e- 4  1.28e-25     17.8 
19 mu_0       0.1     0.0761     7.22e-13  0             4.32
20 mu_0       0.2     0.521      5.17e- 7  0            30.1 
21 mu_0       0.3     0.775      6.13e- 4  0            12.3 
22 mu_0       0.4     0.952      5.95e- 2  0             9.30
23 mu_0       0.5     1.11       6.26e- 1  0            10.5 
24 mu_0       0.6     1.25       7.81e- 1  0             7.67
25 mu_0       0.7     1.16       6.86e- 1  0             5.09
26 mu_0       0.8     1.08       1.84e- 1  0             8.48
27 mu_0       0.9     1.08       8.34e- 4  0             8.91
[1] "Total run time was 231.391 seconds"
