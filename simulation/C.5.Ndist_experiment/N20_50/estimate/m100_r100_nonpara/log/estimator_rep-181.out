
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3512"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 30 31 32 33 35 36 37 38 39 40 41 42 43 44 45 46 47 
 2  5  5  3  5  5  1  2  4  1  6  2  4  4  4  4  1  4  2  5  3  6  2  2  4  1 
48 49 50 
 6  3  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03141 0.32476 0.59435 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
2053 1459 
[1] "treatment indicator table: "

   0    1 
1321 2191 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1754
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1758
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 325.652 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.394 0.0839
 2 mu         0.1   0.2 0.505 0.0848
 3 mu         0.1   0.3 0.588 0.0931
 4 mu         0.1   0.4 0.599 0.0871
 5 mu         0.1   0.5 0.655 0.0820
 6 mu         0.2   0.1 0.367 0.0513
 7 mu         0.2   0.2 0.448 0.0488
 8 mu         0.2   0.3 0.519 0.0553
 9 mu         0.2   0.4 0.544 0.0480
10 mu         0.2   0.5 0.610 0.0449
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.971        0.478  0.000469      7.01
 2 mu         0.2      0.954        0.875  0.0984        3.40
 3 mu         0.3      0.988        0.972  0.377         1.81
 4 mu         0.4      0.993        0.980  0.558         1.39
 5 mu         0.5      0.994        0.974  0.644         1.37
 6 mu         0.6      1.01         0.996  0.700         1.57
 7 mu         0.7      1.01         0.998  0.745         1.41
 8 mu         0.8      1.01         1.00   0.613         1.48
 9 mu         0.9      1.04         1.04   0.419         1.89
10 mu_1       0.1      1.00         0.803  0.00141       6.49
11 mu_1       0.2      0.950        0.859  0.154         3.32
12 mu_1       0.3      0.999        0.983  0.480         1.71
13 mu_1       0.4      0.992        0.987  0.572         1.44
14 mu_1       0.5      0.996        0.975  0.655         1.37
15 mu_1       0.6      1.01         1.00   0.685         1.56
16 mu_1       0.7      1.01         0.989  0.729         1.43
17 mu_1       0.8      1.01         1.00   0.603         1.50
18 mu_1       0.9      1.04         1.05   0.406         1.93
19 mu_0       0.1      0.967        0.450  0.000364      7.06
20 mu_0       0.2      0.955        0.886  0.0845        3.42
21 mu_0       0.3      0.984        0.953  0.332         1.94
22 mu_0       0.4      0.993        0.987  0.549         1.36
23 mu_0       0.5      0.991        0.970  0.633         1.41
24 mu_0       0.6      1.01         0.983  0.704         1.60
25 mu_0       0.7      1.01         0.996  0.747         1.39
26 mu_0       0.8      1.01         1.01   0.652         1.45
27 mu_0       0.9      1.01         0.989  0.454         1.61
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       8.75     2.10e-13  5.65e-34    593.  
 2 mu         0.2       2.61     3.77e- 7  6.90e-22     96.0 
 3 mu         0.3       1.17     4.15e- 4  5.87e-15     19.9 
 4 mu         0.4       1.08     3.68e- 2  3.60e-10      9.61
 5 mu         0.5       1.12     3.81e- 1  1.08e- 6     10.3 
 6 mu         0.6       1.30     5.75e- 1  1.41e- 8     10.7 
 7 mu         0.7       1.40     8.04e- 1  3.51e-13     11.1 
 8 mu         0.8       1.40     2.31e- 1  8.13e-20     12.0 
 9 mu         0.9       1.23     3.69e- 4  2.37e-31     24.8 
10 mu_1       0.1       8.02     1.37e-12  5.04e-33    552.  
11 mu_1       0.2       1.81     1.29e- 6  3.07e-21     44.7 
12 mu_1       0.3       1.08     9.83e- 4  1.74e-14     15.5 
13 mu_1       0.4       1.06     6.09e- 2  8.02e-10      8.45
14 mu_1       0.5       1.14     4.09e- 1  1.99e- 6      9.60
15 mu_1       0.6       1.32     6.61e- 1  2.19e- 9     10.7 
16 mu_1       0.7       1.42     8.62e- 1  4.67e-14     11.4 
17 mu_1       0.8       1.41     1.81e- 1  9.46e-21     12.3 
18 mu_1       0.9       1.21     2.71e- 4  2.45e-32     25.4 
19 mu_0       0.1       8.83     7.88e-14  6.83e-35    598.  
20 mu_0       0.2       2.82     1.50e- 7  9.37e-23    109.  
21 mu_0       0.3       1.21     1.98e- 4  9.11e-16     21.8 
22 mu_0       0.4       1.09     2.66e- 2  6.52e-11     10.9 
23 mu_0       0.5       1.11     2.81e- 1  1.76e- 7     10.9 
24 mu_0       0.6       1.27     4.83e- 1  3.21e- 8     10.5 
25 mu_0       0.7       1.37     7.94e- 1  1.06e-12     10.4 
26 mu_0       0.8       1.39     3.63e- 1  3.69e-19     10.9 
27 mu_0       0.9       1.45     1.25e- 3  2.15e-30     19.1 
[1] "Total run time was 330.904 seconds"
