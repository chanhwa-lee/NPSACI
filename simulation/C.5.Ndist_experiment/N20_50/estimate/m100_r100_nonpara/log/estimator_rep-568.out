
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3537"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 2  4  3  1  4  2  6  4  2  1  5  4  3  5  2  2  4  3  4  2  5  5  1  2  3  3 
46 47 48 49 50 
 2  3  3  6  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03325 0.36797 0.63040 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
2149 1388 
[1] "treatment indicator table: "

   0    1 
1223 2314 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1728
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1809
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 51"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 202.484 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.493 0.164 
 2 mu         0.1   0.2 0.539 0.135 
 3 mu         0.1   0.3 0.589 0.115 
 4 mu         0.1   0.4 0.626 0.105 
 5 mu         0.1   0.5 0.640 0.0975
 6 mu         0.2   0.1 0.434 0.0735
 7 mu         0.2   0.2 0.503 0.0625
 8 mu         0.2   0.3 0.573 0.0604
 9 mu         0.2   0.4 0.595 0.0520
10 mu         0.2   0.5 0.621 0.0483
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.923        0.584  0.000833      4.21
 2 mu         0.2      0.987        0.935  0.101         2.53
 3 mu         0.3      0.983        0.976  0.355         1.70
 4 mu         0.4      1.00         0.996  0.578         1.62
 5 mu         0.5      1.00         0.991  0.595         1.42
 6 mu         0.6      1.01         1.01   0.786         1.29
 7 mu         0.7      1.00         1.01   0.703         1.30
 8 mu         0.8      0.984        1.00   0.655         1.31
 9 mu         0.9      0.980        0.962  0.476         1.99
10 mu_1       0.1      1.02         0.721  0.00242       2.99
11 mu_1       0.2      0.974        0.957  0.156         2.24
12 mu_1       0.3      0.990        0.987  0.371         1.69
13 mu_1       0.4      1.01         1.01   0.583         1.65
14 mu_1       0.5      1.00         0.998  0.586         1.42
15 mu_1       0.6      1.01         1.01   0.790         1.27
16 mu_1       0.7      1.00         1.01   0.696         1.29
17 mu_1       0.8      0.983        1.00   0.652         1.31
18 mu_1       0.9      0.981        0.958  0.479         2.02
19 mu_0       0.1      0.913        0.559  0.000657      4.49
20 mu_0       0.2      0.990        0.908  0.0878        2.60
21 mu_0       0.3      0.980        0.974  0.348         1.70
22 mu_0       0.4      1.00         0.993  0.565         1.61
23 mu_0       0.5      1.00         0.993  0.604         1.42
24 mu_0       0.6      1.01         1.00   0.734         1.32
25 mu_0       0.7      1.00         1.01   0.718         1.32
26 mu_0       0.8      0.988        0.994  0.668         1.31
27 mu_0       0.9      0.970        0.964  0.449         1.72
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.948     8.27e-14  6.39e-46     85.2 
 2 mu         0.2      1.08      7.06e- 8  3.20e-31     40.4 
 3 mu         0.3      0.998     9.93e- 5  1.19e-22     20.1 
 4 mu         0.4      0.908     1.13e- 2  1.35e-16      9.19
 5 mu         0.5      0.957     1.46e- 1  6.31e-12      5.66
 6 mu         0.6      0.966     4.54e- 1  3.83e- 8      4.44
 7 mu         0.7      1.08      8.71e- 1  1.09e- 9      4.81
 8 mu         0.8      1.26      6.14e- 1  1.66e-15      5.45
 9 mu         0.9      1.30      1.79e- 2  6.99e-26     12.5 
10 mu_1       0.1      1.14      6.77e-13  6.27e-45     94.7 
11 mu_1       0.2      1.01      2.31e- 7  1.57e-30     30.0 
12 mu_1       0.3      0.968     2.39e- 4  3.89e-22     19.6 
13 mu_1       0.4      0.916     1.89e- 2  3.31e-16      8.27
14 mu_1       0.5      0.971     1.75e- 1  1.24e-11      5.68
15 mu_1       0.6      0.975     4.69e- 1  6.25e- 8      4.44
16 mu_1       0.7      1.10      8.36e- 1  3.12e-10      5.08
17 mu_1       0.8      1.26      5.02e- 1  4.16e-16      5.49
18 mu_1       0.9      1.30      1.42e- 2  1.55e-26     13.0 
19 mu_0       0.1      0.927     1.90e-14  0            84.2 
20 mu_0       0.2      1.10      2.97e- 8  0            44.8 
21 mu_0       0.3      1.01      4.31e- 5  0            20.4 
22 mu_0       0.4      0.902     5.05e- 3  0             9.80
23 mu_0       0.5      0.943     9.62e- 2  0             5.66
24 mu_0       0.6      0.952     4.22e- 1  0             4.65
25 mu_0       0.7      1.03      7.88e- 1  0             4.17
26 mu_0       0.8      1.27      4.89e- 1  0             5.30
27 mu_0       0.9      1.30      4.70e- 2  0             9.12
[1] "Total run time was 205.613 seconds"
