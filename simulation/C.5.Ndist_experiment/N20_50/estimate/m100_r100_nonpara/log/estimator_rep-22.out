
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3515"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 
 1  4  3  5  1  7  3  3  2  3  4  2  4  4  6  3  2  3  1  4  4  4  2  8  4  5 
47 48 50 
 2  3  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02769 0.32587 0.58893 0.97775 6.00000 
[1] "event indicator table: "

   0    1 
2012 1503 
[1] "treatment indicator table: "

   0    1 
1381 2134 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1786
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1729
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 189.36 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.378 0.0515
 2 mu         0.1   0.2 0.534 0.0701
 3 mu         0.1   0.3 0.653 0.126 
 4 mu         0.1   0.4 0.654 0.106 
 5 mu         0.1   0.5 0.718 0.107 
 6 mu         0.2   0.1 0.362 0.0277
 7 mu         0.2   0.2 0.487 0.0340
 8 mu         0.2   0.3 0.614 0.0971
 9 mu         0.2   0.4 0.628 0.0785
10 mu         0.2   0.5 0.675 0.0697
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.945        0.727   0.00487      4.98
 2 mu         0.2      1.01         1.01    0.204        2.34
 3 mu         0.3      1.01         1.01    0.481        1.67
 4 mu         0.4      1.02         1.01    0.611        1.47
 5 mu         0.5      1.01         0.991   0.726        1.39
 6 mu         0.6      1.00         1.00    0.798        1.30
 7 mu         0.7      0.991        0.998   0.663        1.25
 8 mu         0.8      0.983        0.980   0.460        1.62
 9 mu         0.9      0.948        0.910   0.402        1.76
10 mu_1       0.1      0.987        0.901   0.0137       3.66
11 mu_1       0.2      0.997        0.999   0.285        1.93
12 mu_1       0.3      1.02         1.00    0.492        1.72
13 mu_1       0.4      1.02         1.03    0.620        1.49
14 mu_1       0.5      1.01         0.986   0.744        1.38
15 mu_1       0.6      1.00         1.01    0.777        1.30
16 mu_1       0.7      0.990        0.991   0.646        1.26
17 mu_1       0.8      0.983        0.990   0.452        1.64
18 mu_1       0.9      0.946        0.908   0.401        1.77
19 mu_0       0.1      0.941        0.693   0.00389      5.16
20 mu_0       0.2      1.01         1.00    0.177        2.45
21 mu_0       0.3      1.01         1.00    0.476        1.68
22 mu_0       0.4      1.02         1.03    0.593        1.46
23 mu_0       0.5      1.01         1.00    0.707        1.42
24 mu_0       0.6      1.01         0.996   0.792        1.31
25 mu_0       0.7      0.996        1.00    0.703        1.26
26 mu_0       0.8      0.985        0.980   0.491        1.55
27 mu_0       0.9      0.964        0.945   0.412        1.70
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.40      5.71e-11  1.51e-41    121.  
 2 mu         0.2      1.01      1.43e- 5  1.49e-27     26.0 
 3 mu         0.3      0.945     7.60e- 3  1.88e-19      9.87
 4 mu         0.4      1.31      2.01e- 1  8.84e-14     13.5 
 5 mu         0.5      1.37      8.42e- 1  1.83e- 9      9.81
 6 mu         0.6      1.22      6.61e- 1  2.48e- 6      7.88
 7 mu         0.7      0.930     3.47e- 1  2.71e-10      4.57
 8 mu         0.8      1.08      6.42e- 2  3.61e-16      8.35
 9 mu         0.9      1.78      2.86e- 5  1.35e-26     25.7 
10 mu_1       0.1      0.945     3.12e-10  1.42e-40     57.6 
11 mu_1       0.2      0.903     3.79e- 5  7.00e-27     23.7 
12 mu_1       0.3      0.990     1.48e- 2  5.90e-19     10.2 
13 mu_1       0.4      1.33      2.73e- 1  2.08e-13     13.5 
14 mu_1       0.5      1.36      9.23e- 1  3.45e- 9     10.3 
15 mu_1       0.6      1.20      7.42e- 1  7.53e- 7      8.00
16 mu_1       0.7      0.913     3.25e- 1  7.04e-11      4.28
17 mu_1       0.8      1.11      4.83e- 2  8.21e-17      8.76
18 mu_1       0.9      1.77      1.95e- 5  2.72e-27     25.6 
19 mu_0       0.1      1.45      2.50e-11  1.00e-42    128.  
20 mu_0       0.2      1.03      7.39e- 6  1.12e-28     27.3 
21 mu_0       0.3      0.925     4.38e- 3  1.61e-20     10.4 
22 mu_0       0.4      1.29      1.34e- 1  8.84e-15     13.5 
23 mu_0       0.5      1.38      6.90e- 1  2.20e-10      9.36
24 mu_0       0.6      1.25      8.38e- 1  7.42e- 7      7.68
25 mu_0       0.7      0.971     3.83e- 1  7.39e-10      5.26
26 mu_0       0.8      0.943     1.18e- 1  1.48e-15      6.68
27 mu_0       0.9      1.85      1.10e- 4  1.10e-25     26.8 
[1] "Total run time was 192.498 seconds"
