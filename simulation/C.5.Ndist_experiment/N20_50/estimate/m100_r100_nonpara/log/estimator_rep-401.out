
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3546"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 34 35 36 37 38 39 40 41 42 43 44 45 46 
 3  2  5  2  2  4  1  4  3  5  5  3  2  4  4  3  7  2  1  4  3  3  4  3  3  1 
47 48 49 50 
 5  7  3  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.01728 0.31559 0.56881 0.96520 5.00000 
[1] "event indicator table: "

   0    1 
2109 1437 
[1] "treatment indicator table: "

   0    1 
1230 2316 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1774
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 55"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1772
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 79"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 238.087 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.525 0.124 
 2 mu         0.1   0.2 0.576 0.103 
 3 mu         0.1   0.3 0.608 0.0924
 4 mu         0.1   0.4 0.635 0.0941
 5 mu         0.1   0.5 0.648 0.0878
 6 mu         0.2   0.1 0.460 0.0810
 7 mu         0.2   0.2 0.546 0.0675
 8 mu         0.2   0.3 0.590 0.0634
 9 mu         0.2   0.4 0.615 0.0611
10 mu         0.2   0.5 0.635 0.0529
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.887        0.574 0.000110       5.72
 2 mu         0.2      0.983        0.932 0.0590         2.59
 3 mu         0.3      0.995        0.953 0.331          1.57
 4 mu         0.4      1.02         1.02  0.593          1.48
 5 mu         0.5      1.01         0.993 0.621          1.36
 6 mu         0.6      0.989        0.980 0.754          1.51
 7 mu         0.7      0.991        0.985 0.662          1.34
 8 mu         0.8      1.00         0.992 0.566          1.43
 9 mu         0.9      0.988        0.991 0.513          1.65
10 mu_1       0.1      0.964        0.758 0.000329       3.61
11 mu_1       0.2      0.984        0.916 0.0890         2.25
12 mu_1       0.3      1.00         0.989 0.372          1.61
13 mu_1       0.4      1.02         1.02  0.608          1.47
14 mu_1       0.5      1.01         0.991 0.631          1.39
15 mu_1       0.6      0.988        0.980 0.757          1.52
16 mu_1       0.7      0.992        0.982 0.654          1.32
17 mu_1       0.8      1.00         0.993 0.564          1.45
18 mu_1       0.9      0.986        0.979 0.509          1.65
19 mu_0       0.1      0.878        0.546 0.0000853      6.02
20 mu_0       0.2      0.982        0.914 0.0515         2.68
21 mu_0       0.3      0.993        0.956 0.313          1.56
22 mu_0       0.4      1.02         1.02  0.578          1.48
23 mu_0       0.5      1.01         1.01  0.611          1.36
24 mu_0       0.6      0.991        0.981 0.714          1.51
25 mu_0       0.7      0.990        0.992 0.679          1.38
26 mu_0       0.8      1.00         1.00  0.574          1.38
27 mu_0       0.9      1.01         1.01  0.545          1.69
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.445     2.69e-13  3.95e-46     43.5 
 2 mu         0.2      0.464     2.30e- 7  1.11e-31     20.6 
 3 mu         0.3      0.965     3.29e- 4  3.15e-23     18.2 
 4 mu         0.4      1.24      1.56e- 2  3.13e-17     20.8 
 5 mu         0.5      1.11      2.26e- 1  1.40e-12     10.5 
 6 mu         0.6      0.988     3.51e- 1  8.87e- 9      9.11
 7 mu         0.7      0.951     6.93e- 1  5.28e- 8      4.58
 8 mu         0.8      1.30      3.50e- 1  4.68e-12     11.0 
 9 mu         0.9      0.851     4.56e- 3  1.61e-21      5.61
10 mu_1       0.1      0.510     2.01e-12  3.95e-45     48.3 
11 mu_1       0.2      0.490     7.53e- 7  5.56e-31     15.2 
12 mu_1       0.3      1.06      7.70e- 4  1.05e-22     17.7 
13 mu_1       0.4      1.25      2.61e- 2  7.82e-17     20.8 
14 mu_1       0.5      1.11      2.42e- 1  2.81e-12     11.4 
15 mu_1       0.6      0.975     3.78e- 1  1.48e- 8      8.20
16 mu_1       0.7      0.963     7.04e- 1  8.39e- 9      4.98
17 mu_1       0.8      1.30      3.14e- 1  6.51e-13     11.1 
18 mu_1       0.9      0.839     3.34e- 3  5.22e-22      6.09
19 mu_0       0.1      0.438     8.05e-14  0            43.0 
20 mu_0       0.2      0.457     8.37e- 8  0            22.9 
21 mu_0       0.3      0.926     1.29e- 4  0            18.4 
22 mu_0       0.4      1.24      9.18e- 3  0            20.8 
23 mu_0       0.5      1.12      1.94e- 1  0             9.69
24 mu_0       0.6      1.01      3.46e- 1  0            10.5 
25 mu_0       0.7      0.920     6.25e- 1  0             4.03
26 mu_0       0.8      1.28      3.63e- 1  0            10.5 
27 mu_0       0.9      0.961     7.74e- 3  0             6.21
[1] "Total run time was 241.971 seconds"
