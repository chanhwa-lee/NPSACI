
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3374"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 42 43 44 45 46 
 5  2  6  3  1  2  6  4  4  6  8  4  2  2  1  2  2  5  4  1  3  2  2  5  2  6 
47 48 49 
 1  3  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03429 0.32976 0.58477 0.98100 5.00000 
[1] "event indicator table: "

   0    1 
1959 1415 
[1] "treatment indicator table: "

   0    1 
1368 2006 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1659
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 76"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 91"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1715
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 9"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 59"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 256.938 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.403 0.0494
 2 mu         0.1   0.2 0.468 0.0487
 3 mu         0.1   0.3 0.490 0.0636
 4 mu         0.1   0.4 0.556 0.0751
 5 mu         0.1   0.5 0.634 0.0604
 6 mu         0.2   0.1 0.352 0.0415
 7 mu         0.2   0.2 0.418 0.0326
 8 mu         0.2   0.3 0.449 0.0365
 9 mu         0.2   0.4 0.504 0.0385
10 mu         0.2   0.5 0.544 0.0344
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.07         0.915   0.0110       4.37
 2 mu         0.2      1.01         0.963   0.225        2.58
 3 mu         0.3      1.01         1.01    0.450        1.71
 4 mu         0.4      1.01         0.997   0.599        1.46
 5 mu         0.5      1.01         0.997   0.714        1.28
 6 mu         0.6      1.00         0.986   0.709        1.37
 7 mu         0.7      0.988        0.985   0.674        1.63
 8 mu         0.8      0.976        0.975   0.564        1.39
 9 mu         0.9      0.988        0.965   0.422        1.66
10 mu_1       0.1      1.04         0.939   0.0315       3.76
11 mu_1       0.2      1.01         0.985   0.241        2.22
12 mu_1       0.3      1.01         1.02    0.505        1.70
13 mu_1       0.4      1.01         0.990   0.630        1.41
14 mu_1       0.5      1.00         0.992   0.713        1.26
15 mu_1       0.6      0.999        0.983   0.709        1.38
16 mu_1       0.7      0.986        0.987   0.663        1.65
17 mu_1       0.8      0.976        0.981   0.553        1.37
18 mu_1       0.9      0.989        0.964   0.406        1.66
19 mu_0       0.1      1.07         0.907   0.00874      4.47
20 mu_0       0.2      1.01         0.950   0.221        2.67
21 mu_0       0.3      1.01         1.01    0.427        1.72
22 mu_0       0.4      1.01         0.989   0.578        1.49
23 mu_0       0.5      1.01         1.00    0.714        1.30
24 mu_0       0.6      1.00         0.995   0.708        1.38
25 mu_0       0.7      0.994        0.994   0.700        1.59
26 mu_0       0.8      0.975        0.968   0.607        1.46
27 mu_0       0.9      0.973        0.964   0.517        1.62
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.866     4.26e-12  2.83e-34     28.9 
 2 mu         0.2      0.758     1.39e- 6  6.15e-23     14.8 
 3 mu         0.3      0.957     1.46e- 3  2.31e-16     10.9 
 4 mu         0.4      1.04      7.24e- 2  9.51e-12     10.6 
 5 mu         0.5      0.965     2.13e- 1  3.18e- 8      4.95
 6 mu         0.6      1.05      5.75e- 1  1.49e-10      6.20
 7 mu         0.7      1.13      5.20e- 1  1.37e-15      6.27
 8 mu         0.8      1.18      2.73e- 1  7.14e-23      5.76
 9 mu         0.9      1.04      9.63e- 4  1.46e-35     14.0 
10 mu_1       0.1      0.987     3.13e-11  2.69e-33     37.0 
11 mu_1       0.2      0.739     3.92e- 6  2.92e-22     15.4 
12 mu_1       0.3      1.02      3.14e- 3  7.33e-16     12.6 
13 mu_1       0.4      1.03      9.07e- 2  2.26e-11      9.25
14 mu_1       0.5      0.971     3.04e- 1  6.04e- 8      5.38
15 mu_1       0.6      1.07      6.50e- 1  2.59e-11      6.34
16 mu_1       0.7      1.15      6.09e- 1  2.03e-16      5.97
17 mu_1       0.8      1.17      2.18e- 1  9.30e-24      5.71
18 mu_1       0.9      1.03      6.18e- 4  1.69e-36     14.7 
19 mu_0       0.1      0.853     1.12e-12  1.57e-35     28.1 
20 mu_0       0.2      0.762     6.46e- 7  3.84e-24     16.1 
21 mu_0       0.3      0.932     7.82e- 4  1.65e-17     10.1 
22 mu_0       0.4      1.06      3.99e- 2  7.92e-13     11.6 
23 mu_0       0.5      0.959     1.68e- 1  3.18e- 9      4.77
24 mu_0       0.6      1.02      4.06e- 1  3.34e-10      5.99
25 mu_0       0.7      1.08      5.90e- 1  4.08e-15      6.97
26 mu_0       0.8      1.18      3.78e- 1  3.20e-22      5.96
27 mu_0       0.9      1.18      4.07e- 3  1.31e-34      9.94
[1] "Total run time was 261.173 seconds"
