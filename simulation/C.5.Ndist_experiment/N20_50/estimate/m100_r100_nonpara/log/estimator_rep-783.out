
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3620"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 34 35 36 37 38 39 40 41 42 43 44 46 47 
 3  2  2  4  5  4  3  2  2  1  3  5  4  2  1  4  5  3  5  3  3  4  4  3  1  5 
48 49 50 
 5  5  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03566 0.36740 0.61978 1.00000 5.00000 
[1] "event indicator table: "

   0    1 
2166 1454 
[1] "treatment indicator table: "

   0    1 
1354 2266 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1783
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1837
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 250.064 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.279 0.0785
 2 mu         0.1   0.2 0.407 0.0928
 3 mu         0.1   0.3 0.500 0.119 
 4 mu         0.1   0.4 0.678 0.129 
 5 mu         0.1   0.5 0.719 0.142 
 6 mu         0.2   0.1 0.272 0.0580
 7 mu         0.2   0.2 0.387 0.0716
 8 mu         0.2   0.3 0.476 0.0975
 9 mu         0.2   0.4 0.629 0.113 
10 mu         0.2   0.5 0.674 0.124 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.05         0.613 0.0000518      5.88
 2 mu         0.2      1.03         1.00  0.0160         3.28
 3 mu         0.3      0.995        0.983 0.168          2.06
 4 mu         0.4      0.997        0.975 0.511          1.58
 5 mu         0.5      1.00         1.01  0.613          1.36
 6 mu         0.6      0.995        0.985 0.697          1.42
 7 mu         0.7      1.00         0.999 0.613          1.40
 8 mu         0.8      1.00         0.988 0.663          1.58
 9 mu         0.9      1.00         0.993 0.396          1.54
10 mu_1       0.1      1.07         0.851 0.000174       4.25
11 mu_1       0.2      1.01         0.965 0.0281         2.95
12 mu_1       0.3      0.994        0.948 0.220          1.95
13 mu_1       0.4      0.999        0.994 0.501          1.59
14 mu_1       0.5      1.00         1.01  0.622          1.41
15 mu_1       0.6      0.996        0.993 0.673          1.39
16 mu_1       0.7      1.00         0.998 0.619          1.42
17 mu_1       0.8      0.999        0.984 0.652          1.57
18 mu_1       0.9      1.00         0.993 0.381          1.56
19 mu_0       0.1      1.04         0.584 0.0000381      6.31
20 mu_0       0.2      1.04         0.997 0.0130         3.37
21 mu_0       0.3      0.995        0.989 0.145          2.11
22 mu_0       0.4      0.995        0.981 0.504          1.57
23 mu_0       0.5      1.00         1.01  0.594          1.38
24 mu_0       0.6      0.994        0.993 0.733          1.47
25 mu_0       0.7      0.999        0.998 0.598          1.34
26 mu_0       0.8      1.00         0.995 0.690          1.60
27 mu_0       0.9      0.993        0.972 0.534          1.55
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      2.16      2.07e-13  2.57e-34    189.  
 2 mu         0.2      1.32      1.72e- 7  2.99e-22     68.1 
 3 mu         0.3      0.950     3.29e- 4  5.02e-16     11.8 
 4 mu         0.4      1.17      2.09e- 2  8.88e-12      7.97
 5 mu         0.5      1.01      3.40e- 1  1.75e- 8      5.11
 6 mu         0.6      1.04      5.99e- 1  2.82e- 9      4.96
 7 mu         0.7      1.21      8.35e- 1  2.26e-14      7.15
 8 mu         0.8      1.14      2.94e- 1  9.01e-22      6.80
 9 mu         0.9      0.823     1.11e- 3  1.04e-34     14.7 
10 mu_1       0.1      2.74      1.46e-12  2.21e-33    227.  
11 mu_1       0.2      1.09      5.74e- 7  1.36e-21     40.9 
12 mu_1       0.3      1.01      7.24e- 4  1.67e-15     11.5 
13 mu_1       0.4      1.17      3.48e- 2  2.22e-11      8.09
14 mu_1       0.5      0.993     3.64e- 1  3.50e- 8      5.47
15 mu_1       0.6      1.05      6.50e- 1  5.64e-10      4.64
16 mu_1       0.7      1.21      9.24e- 1  3.88e-15      7.38
17 mu_1       0.8      1.14      2.41e- 1  1.35e-22      6.98
18 mu_1       0.9      0.801     7.57e- 4  1.38e-35     14.5 
19 mu_0       0.1      2.10      6.75e-14  0           185.  
20 mu_0       0.2      1.38      7.16e- 8  0            74.9 
21 mu_0       0.3      0.922     1.49e- 4  0            14.1 
22 mu_0       0.4      1.17      1.23e- 2  0             8.75
23 mu_0       0.5      1.03      2.24e- 1  0             5.79
24 mu_0       0.6      1.01      6.28e- 1  0             5.58
25 mu_0       0.7      1.22      7.17e- 1  0             6.62
26 mu_0       0.8      1.16      4.91e- 1  0             6.07
27 mu_0       0.9      1.03      2.84e- 3  0            17.1 
[1] "Total run time was 254.517 seconds"
