
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3397"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 37 38 39 40 41 42 43 44 45 46 
 6  4  2  5  4  6  1  4  6  4  1  7  1  3  2  1  3  2  2  2  4  5  1  4  2  4 
47 48 49 50 
 3  6  2  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.01307 0.26814 0.55347 0.94410 6.00000 
[1] "event indicator table: "

   0    1 
1946 1451 
[1] "treatment indicator table: "

   0    1 
1455 1942 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1695
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 50"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1702
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 202.626 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.320 0.0528
 2 mu         0.1   0.2 0.420 0.0571
 3 mu         0.1   0.3 0.454 0.0711
 4 mu         0.1   0.4 0.458 0.0763
 5 mu         0.1   0.5 0.456 0.0837
 6 mu         0.2   0.1 0.342 0.0326
 7 mu         0.2   0.2 0.434 0.0388
 8 mu         0.2   0.3 0.484 0.0411
 9 mu         0.2   0.4 0.503 0.0355
10 mu         0.2   0.5 0.517 0.0307
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.817        0.636 0.000102       7.82
 2 mu         0.2      0.916        0.905 0.0387         2.35
 3 mu         0.3      0.972        0.931 0.208          1.76
 4 mu         0.4      0.988        0.990 0.504          1.45
 5 mu         0.5      1.00         1.01  0.710          1.40
 6 mu         0.6      1.01         1.01  0.808          1.38
 7 mu         0.7      0.992        1.00  0.736          1.23
 8 mu         0.8      0.983        0.978 0.525          1.41
 9 mu         0.9      1.06         1.01  0.186          2.22
10 mu_1       0.1      0.811        0.706 0.000323       4.18
11 mu_1       0.2      0.930        0.917 0.0599         2.27
12 mu_1       0.3      0.975        0.956 0.255          1.75
13 mu_1       0.4      0.991        0.980 0.525          1.43
14 mu_1       0.5      1.00         1.01  0.734          1.43
15 mu_1       0.6      1.01         1.01  0.811          1.36
16 mu_1       0.7      0.990        0.998 0.712          1.24
17 mu_1       0.8      0.984        0.982 0.504          1.43
18 mu_1       0.9      1.06         1.01  0.173          2.34
19 mu_0       0.1      0.818        0.608 0.0000775      8.22
20 mu_0       0.2      0.912        0.888 0.0334         2.57
21 mu_0       0.3      0.971        0.928 0.187          1.77
22 mu_0       0.4      0.987        0.983 0.490          1.46
23 mu_0       0.5      1.00         1.00  0.685          1.38
24 mu_0       0.6      1.01         1.00  0.795          1.43
25 mu_0       0.7      0.997        0.999 0.757          1.20
26 mu_0       0.8      0.980        0.987 0.583          1.34
27 mu_0       0.9      1.02         1.01  0.298          1.68
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.945     1.28e-10  9.92e-40     50.8 
 2 mu         0.2      2.85      1.19e- 5  7.75e-27    119.  
 3 mu         0.3      1.75      8.26e- 3  2.53e-19     25.0 
 4 mu         0.4      1.15      1.97e- 1  5.12e-14     10.8 
 5 mu         0.5      1.06      5.18e- 1  6.26e-10      6.27
 6 mu         0.6      1.03      8.26e- 1  1.27e- 6      7.00
 7 mu         0.7      1.13      6.85e- 1  1.01e-10      5.17
 8 mu         0.8      1.07      6.50e- 2  3.47e-17      6.82
 9 mu         0.9      1.25      8.64e- 5  1.03e-28     34.1 
10 mu_1       0.1      1.50      8.53e-10  9.69e-39     66.3 
11 mu_1       0.2      2.81      3.82e- 5  3.79e-26    109.  
12 mu_1       0.3      1.57      1.62e- 2  8.25e-19     24.3 
13 mu_1       0.4      1.12      2.69e- 1  1.25e-13      8.41
14 mu_1       0.5      1.06      4.69e- 1  1.22e- 9      6.86
15 mu_1       0.6      1.04      7.23e- 1  7.17e- 7      7.22
16 mu_1       0.7      1.14      6.79e- 1  2.89e-11      5.40
17 mu_1       0.8      1.06      4.99e- 2  8.68e-18      7.31
18 mu_1       0.9      1.29      5.54e- 5  2.28e-29     36.2 
19 mu_0       0.1      0.884     4.25e-11  2.50e-41     49.1 
20 mu_0       0.2      2.87      6.07e- 6  2.20e-28    122.  
21 mu_0       0.3      1.83      5.15e- 3  8.22e-21     29.2 
22 mu_0       0.4      1.17      1.34e- 1  1.94e-15     12.3 
23 mu_0       0.5      1.07      5.59e- 1  2.85e-11      6.73
24 mu_0       0.6      1.02      7.81e- 1  7.23e- 8      7.31
25 mu_0       0.7      1.10      5.72e- 1  2.69e-10      4.90
26 mu_0       0.8      1.09      8.38e- 2  1.39e-16      7.02
27 mu_0       0.9      0.842     3.39e- 4  8.21e-28     15.5 
[1] "Total run time was 206.176 seconds"
