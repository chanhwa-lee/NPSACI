
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3524"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 3  3  1  4  5  6  4  1  1  2  4  1  6  3  1  5  1  3  3  5  4  7  2  4  1  4 
46 47 48 49 50 
 4  3  1  7  1 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02885 0.32366 0.58248 1.00000 5.00000 
[1] "event indicator table: "

   0    1 
2092 1432 
[1] "treatment indicator table: "

   0    1 
1316 2208 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1763
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 97"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1761
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 208.944 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.440 0.0698
 2 mu         0.1   0.2 0.504 0.0711
 3 mu         0.1   0.3 0.560 0.0798
 4 mu         0.1   0.4 0.580 0.0849
 5 mu         0.1   0.5 0.644 0.0942
 6 mu         0.2   0.1 0.400 0.0457
 7 mu         0.2   0.2 0.477 0.0483
 8 mu         0.2   0.3 0.529 0.0555
 9 mu         0.2   0.4 0.563 0.0615
10 mu         0.2   0.5 0.621 0.0691
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.915        0.708  0.000357      8.25
 2 mu         0.2      0.966        0.943  0.146         2.16
 3 mu         0.3      0.953        0.972  0.363         1.59
 4 mu         0.4      0.965        0.983  0.512         1.47
 5 mu         0.5      0.995        0.979  0.741         1.27
 6 mu         0.6      1.01         1.03   0.671         1.21
 7 mu         0.7      1.01         1.02   0.714         1.30
 8 mu         0.8      1.01         1.00   0.660         1.34
 9 mu         0.9      0.996        0.987  0.245         1.70
10 mu_1       0.1      0.955        0.844  0.00107       5.16
11 mu_1       0.2      0.964        0.975  0.171         2.02
12 mu_1       0.3      0.953        0.965  0.388         1.52
13 mu_1       0.4      0.970        0.963  0.545         1.51
14 mu_1       0.5      0.998        0.979  0.758         1.27
15 mu_1       0.6      1.01         1.03   0.659         1.22
16 mu_1       0.7      1.01         1.01   0.727         1.32
17 mu_1       0.8      1.01         1.01   0.656         1.37
18 mu_1       0.9      0.995        0.989  0.225         1.72
19 mu_0       0.1      0.910        0.686  0.000278      8.60
20 mu_0       0.2      0.967        0.930  0.126         2.29
21 mu_0       0.3      0.954        0.966  0.352         1.62
22 mu_0       0.4      0.962        0.977  0.487         1.45
23 mu_0       0.5      0.991        0.981  0.724         1.31
24 mu_0       0.6      1.01         1.03   0.690         1.23
25 mu_0       0.7      1.01         1.03   0.683         1.29
26 mu_0       0.8      1.01         1.00   0.640         1.36
27 mu_0       0.9      1.01         1.01   0.426         1.53
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.949     3.13e-12  1.27e-38     47.1 
 2 mu         0.2      1.30      1.13e- 6  1.57e-25     60.4 
 3 mu         0.3      0.824     7.00e- 4  5.90e-18     11.0 
 4 mu         0.4      0.907     3.64e- 2  1.17e-12      5.39
 5 mu         0.5      0.982     3.20e- 1  1.24e- 8      5.46
 6 mu         0.6      1.01      5.31e- 1  2.99e- 9      5.12
 7 mu         0.7      1.12      8.01e- 1  6.51e-14      3.80
 8 mu         0.8      1.29      3.70e- 1  1.15e-20      7.70
 9 mu         0.9      1.13      1.94e- 3  1.88e-32     16.9 
10 mu_1       0.1      1.33      2.02e-11  1.19e-37     52.3 
11 mu_1       0.2      1.19      3.55e- 6  7.37e-25     51.5 
12 mu_1       0.3      0.834     1.52e- 3  1.84e-17      8.97
13 mu_1       0.4      0.931     5.11e- 2  2.73e-12      4.90
14 mu_1       0.5      0.984     4.02e- 1  2.32e- 8      5.46
15 mu_1       0.6      1.01      6.01e- 1  5.55e-10      5.31
16 mu_1       0.7      1.12      7.69e- 1  1.03e-14      3.72
17 mu_1       0.8      1.30      2.85e- 1  1.59e-21      7.89
18 mu_1       0.9      1.10      1.40e- 3  2.32e-33     17.6 
19 mu_0       0.1      0.907     1.03e-12  9.03e-40     46.5 
20 mu_0       0.2      1.33      4.60e- 7  1.26e-26     62.6 
21 mu_0       0.3      0.820     3.51e- 4  5.38e-19     13.0 
22 mu_0       0.4      0.891     2.04e- 2  1.24e-13      5.98
23 mu_0       0.5      0.980     2.29e- 1  1.59e- 9      5.46
24 mu_0       0.6      0.999     6.71e- 1  6.66e- 9      4.84
25 mu_0       0.7      1.11      6.93e- 1  1.93e-13      3.98
26 mu_0       0.8      1.26      5.71e- 1  5.10e-20      6.93
27 mu_0       0.9      1.37      6.44e- 3  1.67e-31     14.2 
[1] "Total run time was 212.148 seconds"
