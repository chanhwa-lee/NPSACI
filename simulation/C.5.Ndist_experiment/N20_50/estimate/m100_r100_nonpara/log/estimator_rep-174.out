
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3452"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 
 3  6  1  3  1  6  1  7  5  1  5  4  1  2  4  5  7  3  4  5  4  2  3  3  3  2 
48 49 50 
 3  2  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0352  0.3650  0.5949  1.0000  5.0000 
[1] "event indicator table: "

   0    1 
2026 1426 
[1] "treatment indicator table: "

   0    1 
1260 2192 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1626
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1826
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 213.011 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.404 0.0450
 2 mu         0.1   0.2 0.475 0.0461
 3 mu         0.1   0.3 0.530 0.0619
 4 mu         0.1   0.4 0.616 0.105 
 5 mu         0.1   0.5 0.650 0.110 
 6 mu         0.2   0.1 0.329 0.0309
 7 mu         0.2   0.2 0.405 0.0317
 8 mu         0.2   0.3 0.448 0.0455
 9 mu         0.2   0.4 0.511 0.0815
10 mu         0.2   0.5 0.546 0.0859
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.05         0.741  0.000207      6.18
 2 mu         0.2      0.972        0.890  0.0885        2.35
 3 mu         0.3      0.995        0.983  0.263         1.76
 4 mu         0.4      1.01         1.00   0.517         1.65
 5 mu         0.5      1.01         0.992  0.698         1.37
 6 mu         0.6      0.997        1.01   0.695         1.84
 7 mu         0.7      0.999        0.978  0.735         1.74
 8 mu         0.8      0.990        0.975  0.578         1.66
 9 mu         0.9      1.01         0.969  0.293         1.88
10 mu_1       0.1      1.05         0.842  0.000669      4.03
11 mu_1       0.2      0.965        0.935  0.147         2.29
12 mu_1       0.3      1.00         1.02   0.312         1.74
13 mu_1       0.4      1.01         1.00   0.580         1.58
14 mu_1       0.5      1.00         0.985  0.702         1.35
15 mu_1       0.6      0.996        0.997  0.685         1.88
16 mu_1       0.7      0.999        0.974  0.734         1.76
17 mu_1       0.8      0.990        0.978  0.565         1.66
18 mu_1       0.9      1.01         0.979  0.291         1.92
19 mu_0       0.1      1.05         0.736  0.000155      6.44
20 mu_0       0.2      0.974        0.876  0.0738        2.36
21 mu_0       0.3      0.992        0.979  0.243         1.78
22 mu_0       0.4      1.01         1.02   0.475         1.69
23 mu_0       0.5      1.01         0.992  0.691         1.38
24 mu_0       0.6      0.998        0.981  0.680         1.79
25 mu_0       0.7      1.00         0.981  0.722         1.82
26 mu_0       0.8      0.987        0.960  0.633         1.68
27 mu_0       0.9      0.994        0.979  0.313         1.67
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.176     7.61e-13  1.24e-45      9.68
 2 mu         0.2      0.940     5.92e- 7  6.22e-31     23.2 
 3 mu         0.3      1.30      7.33e- 4  1.78e-22     20.1 
 4 mu         0.4      1.62      5.54e- 2  9.94e-17     25.5 
 5 mu         0.5      1.67      4.47e- 1  2.85e-12     13.0 
 6 mu         0.6      1.78      9.14e- 1  1.25e- 8     37.0 
 7 mu         0.7      1.30      7.01e- 1  3.46e-11     13.7 
 8 mu         0.8      1.16      1.65e- 1  1.56e-17      8.46
 9 mu         0.9      1.44      5.59e- 4  8.19e-29     14.9 
10 mu_1       0.1      0.359     4.84e-12  1.22e-44     17.9 
11 mu_1       0.2      1.11      1.92e- 6  3.05e-30     21.5 
12 mu_1       0.3      1.38      1.54e- 3  5.93e-22     18.5 
13 mu_1       0.4      1.65      7.33e- 2  2.49e-16     26.3 
14 mu_1       0.5      1.66      4.57e- 1  5.71e-12     15.7 
15 mu_1       0.6      1.75      9.06e- 1  2.09e- 8     37.3 
16 mu_1       0.7      1.25      6.40e- 1  9.26e-12     11.8 
17 mu_1       0.8      1.17      1.20e- 1  3.66e-18      8.18
18 mu_1       0.9      1.44      3.45e- 4  1.71e-29     15.1 
19 mu_0       0.1      0.156     3.08e-13  0             8.77
20 mu_0       0.2      0.899     2.61e- 7  0            23.6 
21 mu_0       0.3      1.27      3.89e- 4  0            20.9 
22 mu_0       0.4      1.60      3.43e- 2  0            24.9 
23 mu_0       0.5      1.67      3.02e- 1  0            15.1 
24 mu_0       0.6      1.83      8.45e- 1  0            36.7 
25 mu_0       0.7      1.41      6.72e- 1  0            18.1 
26 mu_0       0.8      1.11      3.34e- 1  0             9.62
27 mu_0       0.9      1.38      1.57e- 3  0            15.1 
[1] "Total run time was 216.663 seconds"
