
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3551"
[1] "cluster size dist'n: "

20 21 22 23 24 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 
 2  3  3  3  2  1  8  5  2  7  2  2  5  1  5  5  2  5  1  1  3  1  3  4  8  6 
47 48 50 
 4  1  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03525 0.31189 0.59371 1.00000 5.62816 
[1] "event indicator table: "

   0    1 
2062 1489 
[1] "treatment indicator table: "

   0    1 
1372 2179 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1767
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1784
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 317.206 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.465 0.0516
 2 mu         0.1   0.2 0.541 0.0488
 3 mu         0.1   0.3 0.575 0.0474
 4 mu         0.1   0.4 0.623 0.0563
 5 mu         0.1   0.5 0.658 0.0581
 6 mu         0.2   0.1 0.368 0.0329
 7 mu         0.2   0.2 0.447 0.0264
 8 mu         0.2   0.3 0.486 0.0295
 9 mu         0.2   0.4 0.519 0.0343
10 mu         0.2   0.5 0.566 0.0288
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.16         1.06    0.00475      3.67
 2 mu         0.2      1.02         1.02    0.250        2.32
 3 mu         0.3      0.985        0.971   0.377        1.66
 4 mu         0.4      0.971        0.996   0.463        1.51
 5 mu         0.5      0.974        0.958   0.580        1.42
 6 mu         0.6      1.00         1.00    0.703        1.36
 7 mu         0.7      0.995        0.985   0.696        1.27
 8 mu         0.8      1.02         1.01    0.723        1.44
 9 mu         0.9      1.02         1.02    0.523        2.10
10 mu_1       0.1      1.15         1.04    0.0124       3.30
11 mu_1       0.2      0.993        0.970   0.301        2.26
12 mu_1       0.3      0.982        0.964   0.331        1.67
13 mu_1       0.4      0.967        0.979   0.475        1.53
14 mu_1       0.5      0.977        0.958   0.592        1.44
15 mu_1       0.6      1.00         0.999   0.719        1.35
16 mu_1       0.7      0.994        0.979   0.705        1.25
17 mu_1       0.8      1.02         1.01    0.721        1.46
18 mu_1       0.9      1.02         1.02    0.505        2.10
19 mu_0       0.1      1.16         1.03    0.00390      3.91
20 mu_0       0.2      1.03         1.02    0.237        2.34
21 mu_0       0.3      0.986        0.962   0.397        1.75
22 mu_0       0.4      0.973        1.00    0.455        1.51
23 mu_0       0.5      0.971        0.955   0.568        1.41
24 mu_0       0.6      0.998        0.996   0.679        1.38
25 mu_0       0.7      0.997        0.987   0.677        1.30
26 mu_0       0.8      1.00         1.00    0.732        1.37
27 mu_0       0.9      1.04         1.02    0.563        2.06
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.256     3.69e-12  4.06e-38     11.8 
 2 mu         0.2      1.47      1.17e- 6  7.93e-25     45.8 
 3 mu         0.3      1.90      9.59e- 4  2.28e-17     31.9 
 4 mu         0.4      1.07      1.03e- 1  2.54e-12      6.97
 5 mu         0.5      0.825     2.27e- 1  1.73e- 8      5.57
 6 mu         0.6      1.01      3.79e- 1  1.87e- 5      5.45
 7 mu         0.7      1.19      3.65e- 1  4.49e- 9     12.0 
 8 mu         0.8      1.17      3.10e- 1  1.17e-14     11.4 
 9 mu         0.9      1.02      1.19e- 3  1.11e-24     12.6 
10 mu_1       0.1      0.492     2.28e-11  3.65e-37     19.7 
11 mu_1       0.2      1.73      3.46e- 6  3.57e-24     52.3 
12 mu_1       0.3      1.79      2.07e- 3  7.09e-17     24.3 
13 mu_1       0.4      0.964     1.57e- 1  5.92e-12      5.81
14 mu_1       0.5      0.833     2.11e- 1  3.22e- 8      5.37
15 mu_1       0.6      1.04      3.32e- 1  8.40e- 6      5.55
16 mu_1       0.7      1.20      3.60e- 1  1.43e- 9     12.9 
17 mu_1       0.8      1.16      2.58e- 1  3.26e-15     10.6 
18 mu_1       0.9      1.02      9.03e- 4  2.74e-25     13.6 
19 mu_0       0.1      0.230     1.25e-12  4.51e-39     10.9 
20 mu_0       0.2      1.40      5.41e- 7  9.91e-26     44.1 
21 mu_0       0.3      1.95      5.39e- 4  2.17e-18     35.1 
22 mu_0       0.4      1.14      6.50e- 2  2.82e-13      7.74
23 mu_0       0.5      0.818     2.18e- 1  2.30e- 9      5.78
24 mu_0       0.6      0.976     4.13e- 1  3.12e- 6      5.30
25 mu_0       0.7      1.18      3.91e- 1  1.16e- 8     10.0 
26 mu_0       0.8      1.21      2.42e- 1  4.56e-14     14.2 
27 mu_0       0.9      1.04      3.81e- 3  8.62e-24      7.62
[1] "Total run time was 322.515 seconds"
