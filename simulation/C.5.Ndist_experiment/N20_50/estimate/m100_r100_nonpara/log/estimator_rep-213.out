
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3607"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 1  3  3  1  4  2  2  7  2  3  2  7  1  2  4  3  4  3  4  4  2  2  3  3  4  3 
46 47 48 49 50 
 7  3  6  3  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03113 0.36546 0.61605 1.00000 5.00000 
[1] "event indicator table: "

   0    1 
2152 1455 
[1] "treatment indicator table: "

   0    1 
1312 2295 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1776
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1831
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 266.568 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.376 0.0515
 2 mu         0.1   0.2 0.466 0.0645
 3 mu         0.1   0.3 0.508 0.0677
 4 mu         0.1   0.4 0.540 0.0672
 5 mu         0.1   0.5 0.587 0.0715
 6 mu         0.2   0.1 0.345 0.0330
 7 mu         0.2   0.2 0.441 0.0370
 8 mu         0.2   0.3 0.495 0.0398
 9 mu         0.2   0.4 0.530 0.0336
10 mu         0.2   0.5 0.583 0.0333
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.02         0.708  0.000321      5.34
 2 mu         0.2      1.03         0.955  0.117         3.06
 3 mu         0.3      1.03         1.03   0.427         1.98
 4 mu         0.4      1.02         1.00   0.668         1.51
 5 mu         0.5      0.994        0.985  0.754         1.25
 6 mu         0.6      1.01         0.992  0.759         1.41
 7 mu         0.7      1.01         1.02   0.801         1.32
 8 mu         0.8      0.994        1.00   0.722         1.26
 9 mu         0.9      0.978        0.959  0.567         1.57
10 mu_1       0.1      1.09         0.927  0.000921      4.74
11 mu_1       0.2      1.02         0.994  0.173         2.56
12 mu_1       0.3      1.03         0.997  0.478         1.83
13 mu_1       0.4      1.01         1.01   0.704         1.42
14 mu_1       0.5      0.994        0.991  0.775         1.25
15 mu_1       0.6      1.01         0.995  0.775         1.40
16 mu_1       0.7      1.01         1.01   0.779         1.31
17 mu_1       0.8      0.993        1.00   0.722         1.24
18 mu_1       0.9      0.979        0.958  0.560         1.59
19 mu_0       0.1      1.01         0.671  0.000255      5.54
20 mu_0       0.2      1.03         0.959  0.103         3.18
21 mu_0       0.3      1.03         1.03   0.405         2.05
22 mu_0       0.4      1.02         0.996  0.645         1.57
23 mu_0       0.5      0.994        0.981  0.734         1.27
24 mu_0       0.6      1.01         0.993  0.736         1.41
25 mu_0       0.7      1.01         1.02   0.796         1.35
26 mu_0       0.8      0.999        1.01   0.714         1.36
27 mu_0       0.9      0.968        0.975  0.630         1.36
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.0649     5.57e-14  3.43e-46      4.71
 2 mu         0.2     0.506      1.17e- 7  1.72e-31     11.6 
 3 mu         0.3     0.988      4.94e- 4  6.38e-23     14.5 
 4 mu         0.4     0.899      3.42e- 2  7.25e-17      7.96
 5 mu         0.5     0.934      2.78e- 1  3.39e-12      4.99
 6 mu         0.6     1.07       5.13e- 1  2.05e- 8      4.90
 7 mu         0.7     1.06       9.33e- 1  7.49e- 8      4.10
 8 mu         0.8     1.07       1.47e- 1  6.60e-13     10.1 
 9 mu         0.9     0.834      1.13e- 3  4.99e-22     12.0 
10 mu_1       0.1     0.136      4.34e-13  3.36e-45      8.98
11 mu_1       0.2     0.646      3.61e- 7  8.41e-31     13.8 
12 mu_1       0.3     1.00       1.02e- 3  2.09e-22     15.3 
13 mu_1       0.4     0.880      5.95e- 2  1.78e-16      6.33
14 mu_1       0.5     0.961      3.35e- 1  6.64e-12      5.19
15 mu_1       0.6     1.08       5.82e- 1  3.35e- 8      4.87
16 mu_1       0.7     1.07       8.29e- 1  2.55e- 8      4.69
17 mu_1       0.8     1.06       1.38e- 1  1.96e-13     10.1 
18 mu_1       0.9     0.837      7.87e- 4  1.32e-22     11.9 
19 mu_0       0.1     0.0570     1.70e-14  0             4.24
20 mu_0       0.2     0.471      5.27e- 8  0            11.1 
21 mu_0       0.3     0.981      2.70e- 4  0            14.1 
22 mu_0       0.4     0.911      1.79e- 2  0             9.05
23 mu_0       0.5     0.908      2.28e- 1  0             4.78
24 mu_0       0.6     1.07       4.54e- 1  0             4.95
25 mu_0       0.7     1.05       6.86e- 1  0             4.37
26 mu_0       0.8     1.11       1.89e- 1  0            10.1 
27 mu_0       0.9     0.803      1.24e- 3  0            12.3 
[1] "Total run time was 270.672 seconds"
