
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3627"
[1] "cluster size dist'n: "

20 21 23 24 25 26 27 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 
 4  1  4  1  5  3  2  2  4  2  8  2  3  2  4  5  5  1  8  1  5  5  3  3  7  3 
48 49 50 
 2  1  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04056 0.34803 0.60126 0.99891 6.00000 
[1] "event indicator table: "

   0    1 
2106 1521 
[1] "treatment indicator table: "

   0    1 
1411 2216 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1784
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 91"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1843
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 18"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 229.415 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.421 0.0858
 2 mu         0.1   0.2 0.503 0.0737
 3 mu         0.1   0.3 0.578 0.0834
 4 mu         0.1   0.4 0.584 0.0760
 5 mu         0.1   0.5 0.655 0.0756
 6 mu         0.2   0.1 0.365 0.0502
 7 mu         0.2   0.2 0.463 0.0401
 8 mu         0.2   0.3 0.525 0.0467
 9 mu         0.2   0.4 0.554 0.0385
10 mu         0.2   0.5 0.620 0.0367
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.07         0.608   0.00128      6.97
 2 mu         0.2      1.08         1.05    0.136        2.64
 3 mu         0.3      1.02         1.01    0.398        1.69
 4 mu         0.4      0.997        1.00    0.569        1.52
 5 mu         0.5      1.01         1.01    0.586        1.28
 6 mu         0.6      1.01         1.01    0.763        1.34
 7 mu         0.7      1.01         0.999   0.794        1.43
 8 mu         0.8      0.976        0.984   0.709        1.30
 9 mu         0.9      0.938        0.974   0.386        1.51
10 mu_1       0.1      1.09         0.877   0.00345      3.73
11 mu_1       0.2      1.07         1.04    0.164        2.25
12 mu_1       0.3      1.01         0.995   0.464        1.62
13 mu_1       0.4      0.996        1.01    0.533        1.48
14 mu_1       0.5      1.01         1.01    0.618        1.26
15 mu_1       0.6      1.02         1.01    0.754        1.33
16 mu_1       0.7      1.01         1.00    0.801        1.44
17 mu_1       0.8      0.973        0.976   0.683        1.32
18 mu_1       0.9      0.938        0.976   0.370        1.53
19 mu_0       0.1      1.07         0.575   0.00104      7.58
20 mu_0       0.2      1.08         1.06    0.127        2.76
21 mu_0       0.3      1.03         1.00    0.370        1.75
22 mu_0       0.4      0.997        1.01    0.575        1.55
23 mu_0       0.5      1.00         1.00    0.554        1.30
24 mu_0       0.6      1.01         0.999   0.777        1.36
25 mu_0       0.7      1.02         0.999   0.768        1.41
26 mu_0       0.8      0.987        0.983   0.747        1.28
27 mu_0       0.9      0.939        0.945   0.444        1.50
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.405     4.04e-13  3.47e-32     36.2 
 2 mu         0.2      1.35      6.31e- 7  5.96e-21     65.9 
 3 mu         0.3      1.24      7.60e- 4  1.72e-14     18.3 
 4 mu         0.4      1.14      5.47e- 2  5.19e-10     10.7 
 5 mu         0.5      1.03      5.19e- 1  1.20e- 6      6.15
 6 mu         0.6      1.24      6.42e- 1  9.83e- 8      5.99
 7 mu         0.7      1.39      7.13e- 1  1.91e-12      8.50
 8 mu         0.8      1.16      2.69e- 1  2.23e-19      9.29
 9 mu         0.9      1.21      4.88e- 4  1.30e-31     22.5 
10 mu_1       0.1      0.685     2.72e-12  3.14e-31     58.0 
11 mu_1       0.2      1.43      1.99e- 6  2.70e-20     52.7 
12 mu_1       0.3      1.24      1.59e- 3  5.18e-14     15.6 
13 mu_1       0.4      1.11      7.49e- 2  1.17e- 9     10.1 
14 mu_1       0.5      1.04      4.85e- 1  2.18e- 6      5.81
15 mu_1       0.6      1.28      7.32e- 1  2.62e- 8      6.51
16 mu_1       0.7      1.38      8.66e- 1  4.36e-13      9.19
17 mu_1       0.8      1.15      2.07e- 1  4.47e-20      8.79
18 mu_1       0.9      1.23      3.57e- 4  2.32e-32     23.6 
19 mu_0       0.1      0.374     1.73e-13  0            33.8 
20 mu_0       0.2      1.34      3.05e- 7  0            69.2 
21 mu_0       0.3      1.25      4.04e- 4  0            19.4 
22 mu_0       0.4      1.16      3.07e- 2  0            11.1 
23 mu_0       0.5      1.03      4.32e- 1  0             6.49
24 mu_0       0.6      1.19      6.04e- 1  0             5.50
25 mu_0       0.7      1.40      7.70e- 1  0             8.34
26 mu_0       0.8      1.22      3.36e- 1  0            11.3 
27 mu_0       0.9      1.00      1.47e- 3  0            12.9 
[1] "Total run time was 232.982 seconds"
