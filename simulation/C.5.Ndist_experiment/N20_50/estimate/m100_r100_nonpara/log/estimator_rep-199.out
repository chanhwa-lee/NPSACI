
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3512"
[1] "cluster size dist'n: "

21 22 23 24 25 26 27 28 29 30 31 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 
 6  7  6  2  2  2  6  5  1  3  3  5  1  1  1  2  3  3  1  2  6  3  5  5  3  6 
48 49 50 
 5  3  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.06147 0.41097 0.65493 1.00000 7.00000 
[1] "event indicator table: "

   0    1 
2130 1382 
[1] "treatment indicator table: "

   0    1 
1275 2237 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1746
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 63"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1766
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 194.093 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.317 0.0770
 2 mu         0.1   0.2 0.374 0.0880
 3 mu         0.1   0.3 0.449 0.0977
 4 mu         0.1   0.4 0.483 0.108 
 5 mu         0.1   0.5 0.528 0.113 
 6 mu         0.2   0.1 0.324 0.0349
 7 mu         0.2   0.2 0.396 0.0408
 8 mu         0.2   0.3 0.474 0.0414
 9 mu         0.2   0.4 0.511 0.0480
10 mu         0.2   0.5 0.549 0.0479
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.936        0.192 0.0000000503     14.0 
 2 mu         0.2      1.02         0.852 0.00129           7.73
 3 mu         0.3      0.956        0.945 0.0973            2.78
 4 mu         0.4      0.957        0.952 0.473             1.58
 5 mu         0.5      0.985        1.01  0.595             1.46
 6 mu         0.6      0.997        1.01  0.658             1.45
 7 mu         0.7      0.995        0.996 0.696             1.29
 8 mu         0.8      0.995        0.987 0.702             1.40
 9 mu         0.9      1.02         1.00  0.130             2.01
10 mu_1       0.1      0.972        0.367 0.000000206      11.8 
11 mu_1       0.2      1.02         0.913 0.00267           7.90
12 mu_1       0.3      0.954        0.969 0.137             2.07
13 mu_1       0.4      0.963        0.970 0.510             1.59
14 mu_1       0.5      0.988        1.00  0.595             1.42
15 mu_1       0.6      0.998        1.01  0.668             1.43
16 mu_1       0.7      0.995        0.989 0.688             1.27
17 mu_1       0.8      0.996        0.989 0.700             1.42
18 mu_1       0.9      1.02         0.997 0.118             2.00
19 mu_0       0.1      0.932        0.173 0.0000000330     14.3 
20 mu_0       0.2      1.01         0.836 0.000943          7.68
21 mu_0       0.3      0.957        0.932 0.0801            3.08
22 mu_0       0.4      0.954        0.963 0.448             1.57
23 mu_0       0.5      0.982        0.999 0.596             1.49
24 mu_0       0.6      0.996        1.00  0.642             1.46
25 mu_0       0.7      0.997        0.987 0.714             1.34
26 mu_0       0.8      0.994        0.995 0.711             1.32
27 mu_0       0.9      1.02         1.01  0.245             2.07
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.122     2.61e-12  1.46e-33      7.41
 2 mu         0.2      1.15      6.67e- 7  7.01e-23     31.4 
 3 mu         0.3      1.70      3.45e- 4  1.02e-16     27.4 
 4 mu         0.4      1.55      2.59e- 2  2.41e-12     18.6 
 5 mu         0.5      1.17      2.59e- 1  5.94e- 9     13.1 
 6 mu         0.6      1.02      6.10e- 1  3.51e- 6      4.90
 7 mu         0.7      1.18      8.54e- 1  3.05e- 9      4.25
 8 mu         0.8      1.39      5.76e- 1  6.97e-15     13.6 
 9 mu         0.9      1.18      8.61e- 3  5.86e-25     27.0 
10 mu_1       0.1      0.259     1.86e-11  1.28e-32     15.4 
11 mu_1       0.2      1.37      2.33e- 6  3.51e-22     32.3 
12 mu_1       0.3      1.72      8.50e- 4  3.40e-16     22.8 
13 mu_1       0.4      1.51      4.32e- 2  6.02e-12     17.2 
14 mu_1       0.5      1.14      2.83e- 1  1.19e- 8     11.9 
15 mu_1       0.6      1.03      6.58e- 1  5.85e- 6      4.90
16 mu_1       0.7      1.20      8.35e- 1  8.92e-10      4.89
17 mu_1       0.8      1.39      4.89e- 1  1.78e-15     13.7 
18 mu_1       0.9      1.16      6.54e- 3  1.33e-25     27.8 
19 mu_0       0.1      0.107     8.33e-13  0             6.51
20 mu_0       0.2      1.09      2.38e- 7  0            31.2 
21 mu_0       0.3      1.69      1.38e- 4  0            29.3 
22 mu_0       0.4      1.58      1.44e- 2  0            19.6 
23 mu_0       0.5      1.21      1.65e- 1  0            14.3 
24 mu_0       0.6      1.00      5.09e- 1  0             5.14
25 mu_0       0.7      1.15      8.89e- 1  0             3.81
26 mu_0       0.8      1.39      9.02e- 1  0            13.3 
27 mu_0       0.9      1.30      2.13e- 2  0            20.0 
[1] "Total run time was 197.292 seconds"
