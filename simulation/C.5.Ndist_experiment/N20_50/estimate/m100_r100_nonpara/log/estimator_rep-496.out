
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3432"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 30 31 32 33 34 35 36 37 39 40 41 42 43 44 45 46 47 
 4  3  1  6  3  2  3  5  3  3  3  5  6  3  2  5  5  7  4  4  2  4  5  3  2  4 
48 
 3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03945 0.34674 0.60337 1.00000 5.75364 
[1] "event indicator table: "

   0    1 
2056 1376 
[1] "treatment indicator table: "

   0    1 
1175 2257 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1721
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1711
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 206.763 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.276 0.0820
 2 mu         0.1   0.2 0.385 0.0945
 3 mu         0.1   0.3 0.423 0.108 
 4 mu         0.1   0.4 0.463 0.119 
 5 mu         0.1   0.5 0.526 0.123 
 6 mu         0.2   0.1 0.340 0.0556
 7 mu         0.2   0.2 0.461 0.0583
 8 mu         0.2   0.3 0.515 0.0686
 9 mu         0.2   0.4 0.562 0.0766
10 mu         0.2   0.5 0.628 0.0753
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      0.838       0.0714 0.000000225     12.7 
 2 mu         0.2      1.08        0.648  0.00230          6.06
 3 mu         0.3      1.02        0.971  0.104            2.56
 4 mu         0.4      1.02        1.00   0.499            2.03
 5 mu         0.5      1.01        0.982  0.712            1.43
 6 mu         0.6      1.01        1.02   0.776            1.21
 7 mu         0.7      0.996       1.00   0.791            1.25
 8 mu         0.8      0.985       0.986  0.756            1.30
 9 mu         0.9      1.03        1.00   0.303            2.05
10 mu_1       0.1      1.04        0.164  0.000000867     14.1 
11 mu_1       0.2      1.06        0.762  0.00451          4.77
12 mu_1       0.3      1.02        0.984  0.141            2.51
13 mu_1       0.4      1.02        1.00   0.524            1.87
14 mu_1       0.5      1.01        0.992  0.720            1.38
15 mu_1       0.6      1.02        1.02   0.786            1.21
16 mu_1       0.7      0.994       0.996  0.785            1.24
17 mu_1       0.8      0.986       0.987  0.740            1.31
18 mu_1       0.9      1.04        1.01   0.290            2.10
19 mu_0       0.1      0.816       0.0600 0.000000154     12.6 
20 mu_0       0.2      1.09        0.609  0.00175          6.72
21 mu_0       0.3      1.02        0.947  0.0876           2.70
22 mu_0       0.4      1.02        1.01   0.475            2.14
23 mu_0       0.5      1.01        0.980  0.672            1.48
24 mu_0       0.6      1.01        1.02   0.762            1.26
25 mu_0       0.7      1.00        1.00   0.783            1.26
26 mu_0       0.8      0.982       0.979  0.765            1.30
27 mu_0       0.9      1.02        1.01   0.416            1.62
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1   0.000963     2.11e-13  1.99e-38    0.0288
 2 mu         0.2   0.159        8.06e- 8  2.45e-25    4.10  
 3 mu         0.3   0.942        1.60e- 4  9.21e-18   18.9   
 4 mu         0.4   1.44         1.60e- 2  1.82e-12   16.9   
 5 mu         0.5   1.21         2.27e- 1  1.94e- 8    7.58  
 6 mu         0.6   0.945        6.63e- 1  3.02e- 5    4.89  
 7 mu         0.7   1.08         9.64e- 1  3.18e- 5    5.21  
 8 mu         0.8   1.24         5.23e- 1  2.78e- 9    7.64  
 9 mu         0.9   1.11         4.47e- 3  8.52e-17   26.4   
10 mu_1       0.1   0.00325      1.41e-12  1.86e-37    0.0961
11 mu_1       0.2   0.269        2.88e- 7  1.15e-24    6.64  
12 mu_1       0.3   1.12         3.58e- 4  2.87e-17   20.4   
13 mu_1       0.4   1.45         2.58e- 2  4.26e-12   15.7   
14 mu_1       0.5   1.16         3.22e- 1  3.63e- 8    6.35  
15 mu_1       0.6   0.942        7.53e- 1  4.71e- 5    4.41  
16 mu_1       0.7   1.10         9.79e- 1  1.40e- 5    5.36  
17 mu_1       0.8   1.24         4.53e- 1  1.07e- 9    7.81  
18 mu_1       0.9   1.11         3.26e- 3  2.91e-17   27.5   
19 mu_0       0.1   0.000709     7.81e-14  0           0.0214
20 mu_0       0.2   0.131        3.12e- 8  0           3.46  
21 mu_0       0.3   0.865        6.74e- 5  0          18.2   
22 mu_0       0.4   1.43         8.50e- 3  0          17.7   
23 mu_0       0.5   1.27         1.25e- 1  0           8.93  
24 mu_0       0.6   0.948        5.22e- 1  0           5.62  
25 mu_0       0.7   1.03         1.00e+ 0  0           4.92  
26 mu_0       0.8   1.25         7.64e- 1  0           6.94  
27 mu_0       0.9   1.13         1.35e- 2  0          16.9   
[1] "Total run time was 209.82 seconds"
