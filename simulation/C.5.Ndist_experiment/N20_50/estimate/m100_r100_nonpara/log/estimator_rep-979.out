
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3617"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 1  2  7  1  3  3  4  1  4  2  4  5  1  3  1  3  6  3  3  2  2  4  4  4  2  5 
46 47 48 49 50 
 2  4  4  3  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02472 0.32221 0.57674 0.99223 6.00000 
[1] "event indicator table: "

   0    1 
2215 1402 
[1] "treatment indicator table: "

   0    1 
1363 2254 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1791
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 60"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 97"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1826
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 241.15 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.444 0.130 
 2 mu         0.1   0.2 0.605 0.160 
 3 mu         0.1   0.3 0.675 0.184 
 4 mu         0.1   0.4 0.727 0.197 
 5 mu         0.1   0.5 0.740 0.211 
 6 mu         0.2   0.1 0.335 0.0389
 7 mu         0.2   0.2 0.467 0.0338
 8 mu         0.2   0.3 0.529 0.0379
 9 mu         0.2   0.4 0.587 0.0449
10 mu         0.2   0.5 0.590 0.0415
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.33         0.634 0.0000247     42.2 
 2 mu         0.2      1.04         0.961 0.0174         3.99
 3 mu         0.3      1.01         0.954 0.225          2.05
 4 mu         0.4      0.977        0.976 0.401          1.77
 5 mu         0.5      0.992        0.974 0.630          1.45
 6 mu         0.6      1.00         0.990 0.657          1.33
 7 mu         0.7      1.01         1.01  0.729          1.29
 8 mu         0.8      0.992        0.978 0.686          1.28
 9 mu         0.9      0.976        0.984 0.444          1.43
10 mu_1       0.1      1.16         0.773 0.0000945     21.3 
11 mu_1       0.2      1.04         0.975 0.0335         3.38
12 mu_1       0.3      0.999        0.946 0.294          2.05
13 mu_1       0.4      0.976        0.970 0.397          1.75
14 mu_1       0.5      0.996        0.982 0.642          1.43
15 mu_1       0.6      1.01         0.990 0.669          1.35
16 mu_1       0.7      1.01         1.01  0.720          1.27
17 mu_1       0.8      0.991        0.974 0.677          1.29
18 mu_1       0.9      0.975        0.984 0.437          1.45
19 mu_0       0.1      1.35         0.633 0.0000169     44.5 
20 mu_0       0.2      1.04         0.940 0.0134         4.14
21 mu_0       0.3      1.02         0.962 0.195          2.12
22 mu_0       0.4      0.978        0.965 0.404          1.78
23 mu_0       0.5      0.988        0.969 0.617          1.49
24 mu_0       0.6      1.00         0.992 0.639          1.31
25 mu_0       0.7      1.01         1.01  0.750          1.32
26 mu_0       0.8      0.998        0.994 0.724          1.29
27 mu_0       0.9      0.982        0.979 0.495          1.41
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     13.3       2.75e-13  6.57e-41    678.  
 2 mu         0.2      8.36      1.35e- 7  3.25e-27    587.  
 3 mu         0.3      2.14      5.41e- 4  2.74e-19     54.6 
 4 mu         0.4      1.22      3.12e- 2  9.64e-14     12.3 
 5 mu         0.5      1.17      2.19e- 1  1.60e- 9      8.55
 6 mu         0.6      1.30      5.93e- 1  1.22e- 6      9.41
 7 mu         0.7      1.18      5.68e- 1  1.00e-10      7.33
 8 mu         0.8      1.08      2.03e- 1  8.88e-17      6.73
 9 mu         0.9      0.875     8.12e- 4  1.66e-27      7.08
10 mu_1       0.1     14.2       1.59e-12  6.17e-40    910.  
11 mu_1       0.2      6.09      4.21e- 7  1.52e-26    419.  
12 mu_1       0.3      1.79      1.24e- 3  8.58e-19     33.2 
13 mu_1       0.4      1.19      5.12e- 2  2.26e-13     12.6 
14 mu_1       0.5      1.17      2.33e- 1  3.01e- 9      7.00
15 mu_1       0.6      1.29      6.14e- 1  3.62e- 7      9.28
16 mu_1       0.7      1.17      5.20e- 1  2.54e-11      7.33
17 mu_1       0.8      1.08      2.09e- 1  1.97e-17      6.69
18 mu_1       0.9      0.865     5.60e- 4  3.27e-28      7.39
19 mu_0       0.1     13.2       1.15e-13  4.47e-42    700.  
20 mu_0       0.2      8.93      6.08e- 8  2.49e-28    629.  
21 mu_0       0.3      2.30      2.42e- 4  2.40e-20     66.9 
22 mu_0       0.4      1.23      1.90e- 2  9.84e-15     12.1 
23 mu_0       0.5      1.16      1.60e- 1  1.96e-10     10.1 
24 mu_0       0.6      1.32      4.63e- 1  5.51e- 7      9.60
25 mu_0       0.7      1.20      4.66e- 1  2.74e-10      7.33
26 mu_0       0.8      1.10      1.92e- 1  3.65e-16      6.91
27 mu_0       0.9      0.964     3.07e- 3  1.36e-26      8.32
[1] "Total run time was 244.609 seconds"
