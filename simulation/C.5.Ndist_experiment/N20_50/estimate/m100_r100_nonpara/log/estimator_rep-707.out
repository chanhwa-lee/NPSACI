
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3474"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 2  4  3  1  3  3  3  3  3  5  3  6  1  3  3  3  4  4 11  4  5  2  2  3  4  2 
47 48 49 50 
 3  2  2  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02466 0.34212 0.60897 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
2101 1373 
[1] "treatment indicator table: "

   0    1 
1267 2207 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1685
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 36"
[1] "     Cluster: 40"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1789
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 68"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 217.109 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.285 0.0602
 2 mu         0.1   0.2 0.369 0.0617
 3 mu         0.1   0.3 0.430 0.0632
 4 mu         0.1   0.4 0.489 0.0659
 5 mu         0.1   0.5 0.508 0.0696
 6 mu         0.2   0.1 0.249 0.0484
 7 mu         0.2   0.2 0.321 0.0491
 8 mu         0.2   0.3 0.385 0.0493
 9 mu         0.2   0.4 0.439 0.0502
10 mu         0.2   0.5 0.463 0.0535
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.975        0.796  0.000813      3.69
 2 mu         0.2      0.932        0.841  0.0915        4.73
 3 mu         0.3      0.960        0.927  0.313         1.55
 4 mu         0.4      0.989        0.988  0.512         1.46
 5 mu         0.5      0.996        0.987  0.707         1.28
 6 mu         0.6      0.998        0.988  0.732         1.30
 7 mu         0.7      0.996        0.998  0.637         1.36
 8 mu         0.8      0.997        0.999  0.615         1.38
 9 mu         0.9      1.02         1.01   0.516         1.60
10 mu_1       0.1      0.956        0.889  0.00246       4.10
11 mu_1       0.2      0.937        0.864  0.133         4.18
12 mu_1       0.3      0.969        0.939  0.345         1.61
13 mu_1       0.4      0.992        0.995  0.541         1.40
14 mu_1       0.5      0.995        0.991  0.738         1.27
15 mu_1       0.6      0.998        0.997  0.714         1.29
16 mu_1       0.7      0.995        0.995  0.618         1.35
17 mu_1       0.8      0.999        1.01   0.618         1.37
18 mu_1       0.9      1.02         1.01   0.498         1.62
19 mu_0       0.1      0.977        0.771  0.000630      3.77
20 mu_0       0.2      0.931        0.845  0.0811        4.87
21 mu_0       0.3      0.956        0.926  0.300         1.68
22 mu_0       0.4      0.987        0.992  0.493         1.49
23 mu_0       0.5      0.997        1.00   0.676         1.33
24 mu_0       0.6      0.999        0.998  0.743         1.30
25 mu_0       0.7      0.998        1.00   0.680         1.38
26 mu_0       0.8      0.990        0.974  0.571         1.42
27 mu_0       0.9      1.02         1.02   0.588         1.64
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.596     1.26e-12  1.22e-39     31.1 
 2 mu         0.2      0.727     7.66e- 7  5.34e-26     28.7 
 3 mu         0.3      0.975     9.70e- 4  3.94e-18     16.0 
 4 mu         0.4      1.31      4.60e- 2  1.19e-12     15.6 
 5 mu         0.5      1.36      2.81e- 1  1.65e- 8      8.69
 6 mu         0.6      0.965     4.77e- 1  3.04e- 7      4.45
 7 mu         0.7      0.935     4.44e- 1  2.44e-11      4.33
 8 mu         0.8      1.37      2.55e- 1  2.49e-17     11.9 
 9 mu         0.9      1.42      1.40e- 3  7.33e-28     14.6 
10 mu_1       0.1      0.829     8.21e-12  1.12e-38     44.4 
11 mu_1       0.2      0.709     2.26e- 6  2.46e-25     20.5 
12 mu_1       0.3      1.09      2.07e- 3  1.21e-17     15.8 
13 mu_1       0.4      1.35      5.49e- 2  2.73e-12     14.9 
14 mu_1       0.5      1.32      2.72e- 1  3.03e- 8      7.72
15 mu_1       0.6      0.913     5.28e- 1  7.24e- 8      4.49
16 mu_1       0.7      0.964     4.29e- 1  4.97e-12      4.87
17 mu_1       0.8      1.38      2.06e- 1  4.44e-18     12.0 
18 mu_1       0.9      1.42      9.65e- 4  1.16e-28     14.9 
19 mu_0       0.1      0.570     4.32e-13  0            29.6 
20 mu_0       0.2      0.732     3.93e- 7  0            30.7 
21 mu_0       0.3      0.926     4.97e- 4  0            16.0 
22 mu_0       0.4      1.28      2.81e- 2  0            16.1 
23 mu_0       0.5      1.40      1.96e- 1  0            10.8 
24 mu_0       0.6      1.04      4.39e- 1  0             5.55
25 mu_0       0.7      0.868     4.85e- 1  0             4.49
26 mu_0       0.8      1.29      2.61e- 1  0            11.6 
27 mu_0       0.9      1.41      3.04e- 3  0            12.0 
[1] "Total run time was 220.54 seconds"
