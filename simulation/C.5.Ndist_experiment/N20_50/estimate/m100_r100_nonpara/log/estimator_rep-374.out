
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3378"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 40 41 42 43 44 46 47 
 4  5  4  2  4  4  5  2  4  5  4  3  6  2  4  1  2  3  3  2  2  4  7  4  3  2 
49 50 
 6  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03651 0.34125 0.62836 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
1971 1407 
[1] "treatment indicator table: "

   0    1 
1258 2120 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1702
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1676
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 188.866 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.377 0.0912
 2 mu         0.1   0.2 0.451 0.0856
 3 mu         0.1   0.3 0.486 0.0869
 4 mu         0.1   0.4 0.506 0.0857
 5 mu         0.1   0.5 0.506 0.0776
 6 mu         0.2   0.1 0.382 0.0668
 7 mu         0.2   0.2 0.460 0.0543
 8 mu         0.2   0.3 0.493 0.0462
 9 mu         0.2   0.4 0.515 0.0435
10 mu         0.2   0.5 0.523 0.0457
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.823        0.497 0.0000875      7.13
 2 mu         0.2      0.968        0.856 0.0572         3.79
 3 mu         0.3      0.964        0.948 0.439          1.53
 4 mu         0.4      1.01         0.986 0.631          1.51
 5 mu         0.5      1.03         1.04  0.666          1.40
 6 mu         0.6      1.01         1.01  0.772          1.34
 7 mu         0.7      0.992        0.980 0.673          1.31
 8 mu         0.8      0.993        0.981 0.668          1.46
 9 mu         0.9      0.994        0.974 0.426          1.94
10 mu_1       0.1      0.973        0.706 0.000269       7.32
11 mu_1       0.2      0.964        0.912 0.0964         3.15
12 mu_1       0.3      0.974        0.933 0.484          1.50
13 mu_1       0.4      1.02         0.996 0.634          1.53
14 mu_1       0.5      1.03         1.04  0.675          1.41
15 mu_1       0.6      1.01         0.991 0.782          1.34
16 mu_1       0.7      0.992        0.985 0.675          1.30
17 mu_1       0.8      0.993        0.974 0.671          1.47
18 mu_1       0.9      0.993        0.977 0.396          1.97
19 mu_0       0.1      0.806        0.472 0.0000673      7.11
20 mu_0       0.2      0.969        0.852 0.0475         3.94
21 mu_0       0.3      0.960        0.957 0.420          1.60
22 mu_0       0.4      1.01         0.981 0.597          1.50
23 mu_0       0.5      1.03         1.03  0.657          1.39
24 mu_0       0.6      1.02         1.02  0.757          1.35
25 mu_0       0.7      0.992        0.981 0.668          1.31
26 mu_0       0.8      0.994        0.976 0.657          1.41
27 mu_0       0.9      1.00         0.981 0.541          1.71
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.550     8.05e-13  5.08e-40     35.4 
 2 mu         0.2      1.60      3.52e- 7  7.06e-27     79.7 
 3 mu         0.3      1.26      3.50e- 4  3.03e-19     24.9 
 4 mu         0.4      0.934     2.69e- 2  6.99e-14      7.91
 5 mu         0.5      0.888     2.60e- 1  8.91e-10      4.26
 6 mu         0.6      1.03      6.52e- 1  1.48e- 6      5.14
 7 mu         0.7      1.08      8.02e- 1  3.21e-10      4.25
 8 mu         0.8      0.922     1.97e- 1  1.45e-15      3.72
 9 mu         0.9      1.08      1.20e- 3  6.09e-25     12.7 
10 mu_1       0.1      0.881     5.46e-12  4.86e-39     47.8 
11 mu_1       0.2      1.65      1.19e- 6  3.38e-26     77.8 
12 mu_1       0.3      1.18      8.03e- 4  9.65e-19     16.2 
13 mu_1       0.4      0.911     4.36e- 2  1.67e-13      7.14
14 mu_1       0.5      0.904     2.92e- 1  1.70e- 9      3.76
15 mu_1       0.6      1.05      6.65e- 1  3.33e- 7      5.38
16 mu_1       0.7      1.08      7.35e- 1  6.20e-11      4.25
17 mu_1       0.8      0.917     1.64e- 1  2.45e-16      4.20
18 mu_1       0.9      1.08      8.45e- 4  9.14e-26     12.8 
19 mu_0       0.1      0.513     2.88e-13  0            34.0 
20 mu_0       0.2      1.59      1.43e- 7  0            80.2 
21 mu_0       0.3      1.29      1.50e- 4  0            28.7 
22 mu_0       0.4      0.949     1.27e- 2  0             8.42
23 mu_0       0.5      0.872     2.06e- 1  0             4.76
24 mu_0       0.6      1.00      5.13e- 1  0             4.78
25 mu_0       0.7      1.09      8.74e- 1  0             4.40
26 mu_0       0.8      0.940     3.38e- 1  0             4.29
27 mu_0       0.9      1.08      2.55e- 3  0            11.9 
[1] "Total run time was 192.018 seconds"
