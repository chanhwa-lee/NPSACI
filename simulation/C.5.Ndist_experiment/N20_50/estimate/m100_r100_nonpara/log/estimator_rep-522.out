
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3420"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 
 3  6  1  6  1  3  2  4  4  5  2  4  6  3  5  3  5  1  3  5  7  3  1  5  1  3 
47 48 49 50 
 3  1  3  1 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04675 0.36623 0.62408 1.00000 5.00000 
[1] "event indicator table: "

   0    1 
2105 1315 
[1] "treatment indicator table: "

   0    1 
1197 2223 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1698
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1722
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 225.639 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.497 0.140 
 2 mu         0.1   0.2 0.563 0.116 
 3 mu         0.1   0.3 0.570 0.112 
 4 mu         0.1   0.4 0.587 0.104 
 5 mu         0.1   0.5 0.614 0.108 
 6 mu         0.2   0.1 0.373 0.0639
 7 mu         0.2   0.2 0.477 0.0616
 8 mu         0.2   0.3 0.487 0.0550
 9 mu         0.2   0.4 0.518 0.0533
10 mu         0.2   0.5 0.550 0.0535
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.967        0.442 0.000126      10.6 
 2 mu         0.2      0.982        0.979 0.0348         2.73
 3 mu         0.3      0.981        0.928 0.273          1.93
 4 mu         0.4      0.991        0.966 0.544          1.98
 5 mu         0.5      0.983        0.972 0.595          1.46
 6 mu         0.6      0.992        0.981 0.722          1.27
 7 mu         0.7      1.00         1.01  0.695          1.46
 8 mu         0.8      1.01         1.02  0.639          1.58
 9 mu         0.9      1.04         1.01  0.443          2.06
10 mu_1       0.1      0.994        0.683 0.000404       6.83
11 mu_1       0.2      0.981        0.970 0.0709         2.46
12 mu_1       0.3      0.987        0.924 0.385          1.92
13 mu_1       0.4      0.990        0.959 0.538          1.94
14 mu_1       0.5      0.984        0.977 0.590          1.38
15 mu_1       0.6      0.994        0.978 0.719          1.25
16 mu_1       0.7      1.00         0.999 0.700          1.50
17 mu_1       0.8      1.01         1.02  0.638          1.57
18 mu_1       0.9      1.04         1.01  0.422          2.07
19 mu_0       0.1      0.964        0.416 0.0000947     11.3 
20 mu_0       0.2      0.982        0.990 0.0258         2.88
21 mu_0       0.3      0.978        0.940 0.225          1.96
22 mu_0       0.4      0.991        0.964 0.549          2.00
23 mu_0       0.5      0.982        0.961 0.599          1.55
24 mu_0       0.6      0.990        0.981 0.726          1.31
25 mu_0       0.7      1.00         1.00  0.684          1.37
26 mu_0       0.8      1.01         1.01  0.644          1.65
27 mu_0       0.9      1.04         1.02  0.632          1.95
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.219     3.51e-13  6.67e-41      8.82
 2 mu         0.2      1.06      2.26e- 7  3.14e-27     41.4 
 3 mu         0.3      0.856     3.38e- 4  1.03e-19     22.2 
 4 mu         0.4      0.849     2.03e- 2  2.07e-14      8.99
 5 mu         0.5      1.11      2.29e- 1  2.54e-10     10.6 
 6 mu         0.6      1.12      7.21e- 1  5.16e- 7      6.30
 7 mu         0.7      1.04      5.34e- 1  9.12e-10      5.89
 8 mu         0.8      0.961     2.95e- 1  3.59e-15      7.48
 9 mu         0.9      1.19      2.01e- 3  9.52e-25     11.1 
10 mu_1       0.1      0.412     2.58e-12  6.26e-40     14.3 
11 mu_1       0.2      1.16      7.32e- 7  1.54e-26     45.5 
12 mu_1       0.3      0.791     7.36e- 4  3.35e-19     16.2 
13 mu_1       0.4      0.887     3.58e- 2  5.07e-14      9.87
14 mu_1       0.5      1.13      3.07e- 1  4.97e-10      9.84
15 mu_1       0.6      1.12      7.50e- 1  8.41e- 7      6.16
16 mu_1       0.7      1.02      5.33e- 1  2.28e-10      5.61
17 mu_1       0.8      0.972     2.69e- 1  7.85e-16      8.06
18 mu_1       0.9      1.18      1.47e- 3  1.85e-25     11.8 
19 mu_0       0.1      0.197     1.11e-13  4.54e-42      8.22
20 mu_0       0.2      1.04      9.84e- 8  8.93e-29     40.4 
21 mu_0       0.3      0.884     1.62e- 4  3.33e-21     24.7 
22 mu_0       0.4      0.823     1.03e- 2  7.86e-16      8.41
23 mu_0       0.5      1.08      1.58e- 1  1.15e-11     11.4 
24 mu_0       0.6      1.12      6.57e- 1  2.93e- 8      6.52
25 mu_0       0.7      1.07      6.01e- 1  2.51e- 9      6.55
26 mu_0       0.8      0.914     4.41e- 1  1.48e-14      5.16
27 mu_0       0.9      1.24      6.58e- 3  7.86e-24     12.2 
[1] "Total run time was 229.179 seconds"
