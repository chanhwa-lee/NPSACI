
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3557"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 4  1  3  1  4  1  2  5  2  5  1  2  7  3  2  3  4  7  2  4  6  4  3  2  6  3 
46 47 48 49 
 3  3  2  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03361 0.33007 0.61201 1.00000 5.33168 
[1] "event indicator table: "

   0    1 
2079 1478 
[1] "treatment indicator table: "

   0    1 
1325 2232 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1815
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1742
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 24"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 250.813 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.371 0.0573
 2 mu         0.1   0.2 0.438 0.0676
 3 mu         0.1   0.3 0.515 0.0899
 4 mu         0.1   0.4 0.544 0.105 
 5 mu         0.1   0.5 0.638 0.126 
 6 mu         0.2   0.1 0.351 0.0381
 7 mu         0.2   0.2 0.423 0.0456
 8 mu         0.2   0.3 0.499 0.0630
 9 mu         0.2   0.4 0.531 0.0742
10 mu         0.2   0.5 0.622 0.0904
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      0.906        0.482 0.000000360      4.65
 2 mu         0.2      0.984        0.915 0.00257          4.28
 3 mu         0.3      1.01         1.00  0.110            2.36
 4 mu         0.4      0.994        0.982 0.463            1.65
 5 mu         0.5      0.993        0.994 0.734            1.36
 6 mu         0.6      1.00         0.984 0.695            1.36
 7 mu         0.7      1.01         1.01  0.727            1.28
 8 mu         0.8      0.995        0.991 0.647            1.47
 9 mu         0.9      0.957        0.936 0.241            2.18
10 mu_1       0.1      0.895        0.679 0.00000141       4.91
11 mu_1       0.2      1.00         0.920 0.00514          3.62
12 mu_1       0.3      1.01         0.982 0.152            2.07
13 mu_1       0.4      0.991        0.980 0.501            1.56
14 mu_1       0.5      0.994        1.00  0.757            1.34
15 mu_1       0.6      1.00         0.987 0.688            1.37
16 mu_1       0.7      1.01         0.995 0.716            1.28
17 mu_1       0.8      0.992        0.979 0.629            1.46
18 mu_1       0.9      0.957        0.929 0.226            2.22
19 mu_0       0.1      0.907        0.450 0.000000244      4.69
20 mu_0       0.2      0.979        0.913 0.00193          4.44
21 mu_0       0.3      1.02         0.998 0.0919           2.49
22 mu_0       0.4      0.996        0.981 0.437            1.72
23 mu_0       0.5      0.993        0.987 0.712            1.38
24 mu_0       0.6      1.00         0.977 0.705            1.34
25 mu_0       0.7      1.01         1.00  0.750            1.30
26 mu_0       0.8      1.00         1.01  0.659            1.51
27 mu_0       0.9      0.957        0.927 0.382            1.76
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      11.1      8.43e-14  8.01e-45   1103.  
 2 mu         0.2       4.73     5.02e- 7  2.00e-30    286.  
 3 mu         0.3       3.03     3.79e- 4  4.97e-22    108.  
 4 mu         0.4       1.66     3.69e- 2  4.23e-16     21.9 
 5 mu         0.5       1.34     5.81e- 1  1.58e-11     10.0 
 6 mu         0.6       1.32     7.90e- 1  7.99e- 8      7.41
 7 mu         0.7       1.36     8.27e- 1  5.30e-11     11.7 
 8 mu         0.8       1.19     2.98e- 1  6.20e-17      9.53
 9 mu         0.9       1.35     1.01e- 3  2.89e-27     24.8 
10 mu_1       0.1      11.5      5.02e-13  7.85e-44   1132.  
11 mu_1       0.2       3.91     1.51e- 6  9.82e-30    147.  
12 mu_1       0.3       2.78     8.57e- 4  1.62e-21     92.3 
13 mu_1       0.4       1.53     5.72e- 2  1.04e-15     16.9 
14 mu_1       0.5       1.34     5.28e- 1  3.10e-11      8.88
15 mu_1       0.6       1.32     9.12e- 1  1.15e- 7      7.35
16 mu_1       0.7       1.36     8.28e- 1  7.76e-12     11.9 
17 mu_1       0.8       1.17     2.45e- 1  7.95e-18      9.53
18 mu_1       0.9       1.38     7.11e- 4  3.30e-28     26.8 
19 mu_0       0.1      11.1      3.81e-14  1.82e-46   1100.  
20 mu_0       0.2       4.93     1.95e- 7  5.11e-32    321.  
21 mu_0       0.3       3.13     1.74e- 4  1.45e-23    115.  
22 mu_0       0.4       1.74     2.28e- 2  1.44e-17     27.2 
23 mu_0       0.5       1.33     4.22e- 1  6.45e-13     11.2 
24 mu_0       0.6       1.32     7.67e- 1  4.08e- 9      7.51
25 mu_0       0.7       1.37     8.54e- 1  1.58e-10     11.1 
26 mu_0       0.8       1.28     3.55e- 1  2.78e-16      9.53
27 mu_0       0.9       1.07     3.74e- 3  2.60e-26     13.9 
[1] "Total run time was 254.902 seconds"
