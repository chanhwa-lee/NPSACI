
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3419"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 40 42 43 44 45 46 47 
 4  3  4  6  3  3  4  5  1  2  4  2  4  2  4  3  4  5  2  4  6  7  2  2  3  6 
48 49 50 
 2  1  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03839 0.36427 0.60874 1.00000 5.01288 
[1] "event indicator table: "

   0    1 
2018 1401 
[1] "treatment indicator table: "

   0    1 
1222 2197 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1708
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1711
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 320.043 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.542 0.154
 2 mu         0.1   0.2 0.634 0.164
 3 mu         0.1   0.3 0.731 0.187
 4 mu         0.1   0.4 0.750 0.172
 5 mu         0.1   0.5 0.780 0.168
 6 mu         0.2   0.1 0.442 0.109
 7 mu         0.2   0.2 0.520 0.102
 8 mu         0.2   0.3 0.628 0.136
 9 mu         0.2   0.4 0.653 0.123
10 mu         0.2   0.5 0.687 0.124
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      1.01         0.387 0.000000169     11.9 
 2 mu         0.2      1.06         0.824 0.00131          5.20
 3 mu         0.3      1.01         0.952 0.0795           2.28
 4 mu         0.4      1.01         0.992 0.515            1.59
 5 mu         0.5      1.01         0.992 0.690            1.68
 6 mu         0.6      0.981        0.994 0.684            1.37
 7 mu         0.7      0.970        0.967 0.699            1.22
 8 mu         0.8      0.995        1.01  0.679            1.35
 9 mu         0.9      0.996        1.00  0.340            1.67
10 mu_1       0.1      1.06         0.593 0.000000744     11.0 
11 mu_1       0.2      1.05         0.873 0.00295          4.56
12 mu_1       0.3      1.01         0.954 0.122            1.97
13 mu_1       0.4      1.01         0.993 0.528            1.60
14 mu_1       0.5      1.01         1.00  0.711            1.67
15 mu_1       0.6      0.978        0.986 0.682            1.31
16 mu_1       0.7      0.972        0.976 0.706            1.23
17 mu_1       0.8      0.997        1.02  0.677            1.38
18 mu_1       0.9      0.995        1.00  0.326            1.72
19 mu_0       0.1      1.00         0.356 0.000000105     12.1 
20 mu_0       0.2      1.06         0.818 0.000906         5.39
21 mu_0       0.3      1.02         0.966 0.0614           2.45
22 mu_0       0.4      1.01         0.981 0.476            1.63
23 mu_0       0.5      1.02         0.997 0.668            1.68
24 mu_0       0.6      0.986        0.993 0.689            1.44
25 mu_0       0.7      0.967        0.959 0.684            1.22
26 mu_0       0.8      0.987        0.997 0.685            1.27
27 mu_0       0.9      1.01         0.976 0.464            1.68
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1    224.        7.27e-14  5.92e-36  22444.  
 2 mu         0.2      2.30      8.22e- 8  2.89e-24    199.  
 3 mu         0.3      1.12      1.95e- 4  1.87e-17     37.0 
 4 mu         0.4      1.45      1.41e- 2  1.19e-12     27.9 
 5 mu         0.5      1.32      2.65e- 1  5.98e- 9     14.0 
 6 mu         0.6      1.24      7.25e- 1  8.49e-12      9.29
 7 mu         0.7      1.28      9.30e- 1  1.77e-17      5.98
 8 mu         0.8      1.35      4.67e- 1  1.61e-25     20.1 
 9 mu         0.9      1.48      4.33e- 3  2.57e-39     30.7 
10 mu_1       0.1     47.8       6.08e-13  5.77e-35   4775.  
11 mu_1       0.2      0.674     2.59e- 7  1.41e-23     21.2 
12 mu_1       0.3      1.26      4.13e- 4  6.06e-17     36.7 
13 mu_1       0.4      1.47      2.48e- 2  2.91e-12     26.4 
14 mu_1       0.5      1.28      3.44e- 1  8.64e- 9     11.0 
15 mu_1       0.6      1.24      6.28e- 1  3.01e-13      9.72
16 mu_1       0.7      1.29      9.16e- 1  5.39e-19      5.90
17 mu_1       0.8      1.36      4.12e- 1  4.28e-27     21.0 
18 mu_1       0.9      1.49      3.30e- 3  6.08e-41     31.8 
19 mu_0       0.1    244.        1.64e-14  0         24407.  
20 mu_0       0.2      2.71      3.48e- 8  0           244.  
21 mu_0       0.3      1.06      9.36e- 5  0            37.1 
22 mu_0       0.4      1.44      7.28e- 3  0            29.0 
23 mu_0       0.5      1.35      1.72e- 1  0            17.1 
24 mu_0       0.6      1.23      5.43e- 1  0             8.64
25 mu_0       0.7      1.26      7.48e- 1  0             7.42
26 mu_0       0.8      1.31      6.31e- 1  0            16.8 
27 mu_0       0.9      1.38      1.15e- 2  0            20.5 
[1] "Total run time was 325.216 seconds"
