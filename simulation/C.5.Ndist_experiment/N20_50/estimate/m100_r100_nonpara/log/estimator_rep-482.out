
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3440"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 1  4  3  2  5  4  4  4  5  4  4  2  6  5  1  3  1  3  3  1  3  7  4  3  1  1 
46 47 48 49 50 
 5  1  5  2  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04574 0.37610 0.61685 1.00000 7.00000 
[1] "event indicator table: "

   0    1 
2058 1382 
[1] "treatment indicator table: "

   0    1 
1189 2251 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1701
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1739
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 5"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 17"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 199.037 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.291 0.0554
 2 mu         0.1   0.2 0.415 0.0651
 3 mu         0.1   0.3 0.499 0.0933
 4 mu         0.1   0.4 0.565 0.116 
 5 mu         0.1   0.5 0.584 0.108 
 6 mu         0.2   0.1 0.319 0.0461
 7 mu         0.2   0.2 0.448 0.0493
 8 mu         0.2   0.3 0.519 0.0560
 9 mu         0.2   0.4 0.597 0.0689
10 mu         0.2   0.5 0.625 0.0643
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.782        0.226  0.000146      5.15
 2 mu         0.2      0.930        0.830  0.0509        2.66
 3 mu         0.3      0.941        0.909  0.303         2.58
 4 mu         0.4      0.979        0.972  0.515         1.60
 5 mu         0.5      0.998        0.988  0.729         1.35
 6 mu         0.6      1.01         1.01   0.695         1.45
 7 mu         0.7      1.02         1.04   0.749         1.31
 8 mu         0.8      1.02         1.02   0.752         1.40
 9 mu         0.9      1.02         1.01   0.522         1.75
10 mu_1       0.1      0.868        0.415  0.000449      3.71
11 mu_1       0.2      0.937        0.853  0.0823        2.86
12 mu_1       0.3      0.948        0.897  0.340         2.39
13 mu_1       0.4      0.987        0.968  0.573         1.57
14 mu_1       0.5      1.00         0.988  0.733         1.34
15 mu_1       0.6      1.01         1.01   0.681         1.47
16 mu_1       0.7      1.02         1.04   0.766         1.27
17 mu_1       0.8      1.02         1.02   0.742         1.41
18 mu_1       0.9      1.01         1.00   0.502         1.77
19 mu_0       0.1      0.773        0.202  0.000112      5.40
20 mu_0       0.2      0.929        0.829  0.0430        2.64
21 mu_0       0.3      0.938        0.895  0.287         2.65
22 mu_0       0.4      0.974        0.961  0.477         1.72
23 mu_0       0.5      0.997        0.986  0.726         1.39
24 mu_0       0.6      1.01         1.02   0.716         1.41
25 mu_0       0.7      1.02         1.03   0.709         1.39
26 mu_0       0.8      1.02         1.02   0.731         1.38
27 mu_0       0.9      1.03         1.04   0.669         1.61
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.149     9.35e-14  6.36e-37      6.64
 2 mu         0.2      0.715     7.59e- 8  3.49e-24     19.9 
 3 mu         0.3      1.13      2.17e- 4  7.64e-17     18.7 
 4 mu         0.4      1.20      2.57e- 2  9.72e-12     12.9 
 5 mu         0.5      1.12      3.02e- 1  6.89e- 8      6.79
 6 mu         0.6      1.13      8.67e- 1  5.61e- 5      4.58
 7 mu         0.7      1.20      7.10e- 1  3.07e- 7      5.08
 8 mu         0.8      0.882     3.51e- 1  1.81e-11      3.73
 9 mu         0.9      1.02      3.65e- 3  5.46e-19     10.4 
10 mu_1       0.1      0.306     6.75e-13  5.82e-36     12.5 
11 mu_1       0.2      0.842     2.53e- 7  1.60e-23     19.4 
12 mu_1       0.3      1.18      4.55e- 4  2.33e-16     19.7 
13 mu_1       0.4      1.20      4.37e- 2  2.22e-11     12.1 
14 mu_1       0.5      1.11      4.05e- 1  1.26e- 7      6.04
15 mu_1       0.6      1.14      9.60e- 1  6.75e- 5      4.28
16 mu_1       0.7      1.19      6.97e- 1  8.23e- 8      5.34
17 mu_1       0.8      0.863     3.28e- 1  4.24e-12      3.64
18 mu_1       0.9      1.05      2.69e- 3  1.14e-19     10.6 
19 mu_0       0.1      0.132     3.06e-14  0             6.00
20 mu_0       0.2      0.683     3.16e- 8  0            20.2 
21 mu_0       0.3      1.11      1.15e- 4  0            18.2 
22 mu_0       0.4      1.21      1.38e- 2  0            13.4 
23 mu_0       0.5      1.12      2.08e- 1  0             7.55
24 mu_0       0.6      1.13      7.44e- 1  0             5.04
25 mu_0       0.7      1.23      6.52e- 1  0             5.24
26 mu_0       0.8      0.957     4.26e- 1  0             4.93
27 mu_0       0.9      0.818     5.10e- 3  0             8.89
[1] "Total run time was 202.123 seconds"
