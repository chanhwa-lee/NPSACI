
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3605"
[1] "cluster size dist'n: "

20 21 22 23 24 25 27 28 29 30 31 32 33 34 35 37 38 39 40 41 42 43 44 45 46 47 
 1  2  3  2  1  5  4  7  3  4  3  3  7  3  2  3  2  3  3  5  3  5  5  3  4  7 
48 49 50 
 3  3  1 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04908 0.39711 0.66075 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
2139 1466 
[1] "treatment indicator table: "

   0    1 
1223 2382 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1790
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1815
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 402.688 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.335 0.0699
 2 mu         0.1   0.2 0.436 0.104 
 3 mu         0.1   0.3 0.581 0.138 
 4 mu         0.1   0.4 0.610 0.113 
 5 mu         0.1   0.5 0.635 0.104 
 6 mu         0.2   0.1 0.341 0.0573
 7 mu         0.2   0.2 0.427 0.0797
 8 mu         0.2   0.3 0.531 0.0945
 9 mu         0.2   0.4 0.571 0.0738
10 mu         0.2   0.5 0.607 0.0678
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.984        0.551 0.000112       8.09
 2 mu         0.2      0.978        0.920 0.0575         2.81
 3 mu         0.3      1.01         0.973 0.439          2.19
 4 mu         0.4      0.977        0.963 0.535          1.60
 5 mu         0.5      0.989        0.983 0.645          1.36
 6 mu         0.6      1.01         0.999 0.735          1.35
 7 mu         0.7      1.02         1.00  0.684          1.39
 8 mu         0.8      1.01         1.01  0.627          1.31
 9 mu         0.9      0.978        0.988 0.265          1.59
10 mu_1       0.1      0.989        0.729 0.000341       5.12
11 mu_1       0.2      0.979        0.916 0.0911         2.69
12 mu_1       0.3      1.00         0.963 0.377          2.00
13 mu_1       0.4      0.975        0.962 0.602          1.51
14 mu_1       0.5      0.994        0.986 0.646          1.37
15 mu_1       0.6      1.02         1.01  0.728          1.34
16 mu_1       0.7      1.02         0.999 0.689          1.40
17 mu_1       0.8      1.00         1.01  0.604          1.32
18 mu_1       0.9      0.977        0.989 0.261          1.61
19 mu_0       0.1      0.983        0.516 0.0000867      8.42
20 mu_0       0.2      0.977        0.883 0.0491         2.87
21 mu_0       0.3      1.01         0.971 0.421          2.27
22 mu_0       0.4      0.977        0.967 0.490          1.66
23 mu_0       0.5      0.985        0.972 0.645          1.34
24 mu_0       0.6      1.01         0.990 0.728          1.36
25 mu_0       0.7      1.02         1.01  0.668          1.37
26 mu_0       0.8      1.01         0.999 0.711          1.35
27 mu_0       0.9      0.986        1.01  0.304          1.57
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.68      7.20e-16  8.92e-39    131.  
 2 mu         0.2      1.03      5.54e- 9  1.96e-25     54.5 
 3 mu         0.3      0.860     2.95e- 5  9.65e-18     15.7 
 4 mu         0.4      1.05      5.45e- 3  4.39e-13      9.81
 5 mu         0.5      1.06      9.30e- 2  1.69e- 9      7.65
 6 mu         0.6      0.916     5.20e- 1  1.44e- 6      5.69
 7 mu         0.7      1.07      6.23e- 1  5.10e-10      4.65
 8 mu         0.8      1.28      7.49e- 1  3.03e-15      7.20
 9 mu         0.9      1.18      1.19e- 2  2.26e-24     14.3 
10 mu_1       0.1      1.94      4.99e-15  8.20e-38    150.  
11 mu_1       0.2      0.846     1.84e- 8  9.00e-25     31.1 
12 mu_1       0.3      0.886     6.68e- 5  2.95e-17     14.6 
13 mu_1       0.4      1.08      9.29e- 3  1.10e-12      9.91
14 mu_1       0.5      1.04      1.30e- 1  3.38e- 9      7.14
15 mu_1       0.6      0.911     5.42e- 1  3.92e- 7      5.51
16 mu_1       0.7      1.09      6.51e- 1  8.33e-11      4.79
17 mu_1       0.8      1.29      6.95e- 1  4.32e-16      7.23
18 mu_1       0.9      1.18      9.16e- 3  2.87e-25     15.4 
19 mu_0       0.1      1.65      2.45e-16  0           129.  
20 mu_0       0.2      1.08      2.34e- 9  0            60.3 
21 mu_0       0.3      0.849     1.08e- 5  0            17.0 
22 mu_0       0.4      1.04      2.90e- 3  0             9.74
23 mu_0       0.5      1.08      5.60e- 2  0             8.16
24 mu_0       0.6      0.925     3.51e- 1  0             5.97
25 mu_0       0.7      1.01      5.50e- 1  0             4.34
26 mu_0       0.8      1.26      6.90e- 1  0             7.04
27 mu_0       0.9      1.22      3.30e- 2  0            12.0 
[1] "Total run time was 408.811 seconds"
