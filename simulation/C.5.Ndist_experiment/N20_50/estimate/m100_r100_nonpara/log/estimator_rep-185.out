
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3488"
[1] "cluster size dist'n: "

20 21 22 23 24 25 27 28 29 30 31 32 33 34 35 36 37 39 40 41 42 43 44 45 46 47 
 2  2  7  3  3  6  3  4  2  6  3  3  4  1  4  3  3  4  3  3  3  5  6  2  2  3 
48 49 50 
 4  3  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02996 0.34770 0.61693 1.00000 5.83675 
[1] "event indicator table: "

   0    1 
2113 1375 
[1] "treatment indicator table: "

   0    1 
1330 2158 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1761
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 85"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1727
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 6"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 291.087 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.304 0.0601
 2 mu         0.1   0.2 0.335 0.0627
 3 mu         0.1   0.3 0.384 0.0745
 4 mu         0.1   0.4 0.408 0.0745
 5 mu         0.1   0.5 0.411 0.0723
 6 mu         0.2   0.1 0.313 0.0491
 7 mu         0.2   0.2 0.333 0.0515
 8 mu         0.2   0.3 0.383 0.0605
 9 mu         0.2   0.4 0.436 0.0646
10 mu         0.2   0.5 0.453 0.0648
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.661        0.326 0.0000000981      6.98
 2 mu         0.2      0.868        0.811 0.000898          3.63
 3 mu         0.3      1.01         0.976 0.0483            2.65
 4 mu         0.4      0.992        1.00  0.293             1.53
 5 mu         0.5      0.981        0.972 0.597             1.75
 6 mu         0.6      0.993        0.989 0.634             1.36
 7 mu         0.7      0.997        1.00  0.714             1.46
 8 mu         0.8      1.00         0.997 0.527             1.59
 9 mu         0.9      1.03         0.998 0.474             2.30
10 mu_1       0.1      0.695        0.521 0.000000402       8.12
11 mu_1       0.2      0.922        0.863 0.00188           2.75
12 mu_1       0.3      1.01         0.997 0.0697            2.46
13 mu_1       0.4      0.989        1.00  0.340             1.66
14 mu_1       0.5      0.982        0.980 0.637             1.69
15 mu_1       0.6      0.995        0.999 0.641             1.35
16 mu_1       0.7      0.997        0.998 0.695             1.45
17 mu_1       0.8      1.00         0.998 0.517             1.62
18 mu_1       0.9      1.03         0.996 0.466             2.32
19 mu_0       0.1      0.657        0.292 0.0000000643      6.85
20 mu_0       0.2      0.854        0.792 0.000654          3.85
21 mu_0       0.3      1.00         0.953 0.0392            2.73
22 mu_0       0.4      0.994        1.01  0.262             1.54
23 mu_0       0.5      0.981        0.970 0.557             1.80
24 mu_0       0.6      0.989        0.976 0.623             1.38
25 mu_0       0.7      0.995        1.00  0.746             1.47
26 mu_0       0.8      0.997        0.993 0.571             1.48
27 mu_0       0.9      1.03         0.999 0.466             2.07
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      11.2      2.33e-12  4.76e-36   1005.  
 2 mu         0.2       4.35     6.64e- 7  2.33e-24    207.  
 3 mu         0.3       2.54     7.34e- 4  1.50e-17     72.7 
 4 mu         0.4       1.59     3.75e- 2  9.59e-13     13.9 
 5 mu         0.5       1.31     3.88e- 1  4.81e- 9     10.2 
 6 mu         0.6       1.16     7.74e- 1  4.16e-10      7.15
 7 mu         0.7       1.17     7.14e- 1  2.45e-15      6.38
 8 mu         0.8       1.23     2.20e- 1  7.47e-23      9.91
 9 mu         0.9       1.11     8.53e- 4  6.80e-36     11.5 
10 mu_1       0.1      10.4      1.66e-11  4.64e-35    838.  
11 mu_1       0.2       3.91     2.28e- 6  1.13e-23    184.  
12 mu_1       0.3       2.17     1.61e- 3  4.88e-17     43.3 
13 mu_1       0.4       1.50     6.50e- 2  2.34e-12     12.6 
14 mu_1       0.5       1.28     3.42e- 1  9.38e- 9     10.8 
15 mu_1       0.6       1.15     6.94e- 1  5.77e-11      6.79
16 mu_1       0.7       1.17     6.07e- 1  2.92e-16      5.95
17 mu_1       0.8       1.23     1.91e- 1  7.78e-24      9.98
18 mu_1       0.9       1.10     5.66e- 4  6.30e-37     11.4 
19 mu_0       0.1      11.2      7.42e-13  1.32e-37   1024.  
20 mu_0       0.2       4.46     2.60e- 7  7.27e-26    212.  
21 mu_0       0.3       2.69     3.19e- 4  5.36e-19     85.3 
22 mu_0       0.4       1.65     1.98e- 2  4.00e-14     14.7 
23 mu_0       0.5       1.35     3.24e- 1  2.41e-10      9.82
24 mu_0       0.6       1.16     5.77e- 1  9.53e-10      8.37
25 mu_0       0.7       1.16     7.84e- 1  7.49e-15      7.40
26 mu_0       0.8       1.22     3.21e- 1  3.42e-22      9.64
27 mu_0       0.9       1.19     3.43e- 3  6.23e-35     13.1 
[1] "Total run time was 295.831 seconds"
