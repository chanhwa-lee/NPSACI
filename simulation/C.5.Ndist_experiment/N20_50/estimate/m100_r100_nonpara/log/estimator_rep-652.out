
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3654"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 28 29 30 31 32 33 34 35 37 38 39 40 41 42 43 44 45 46 47 
 2  3  3  2  1  2  4  2  5  2  5  4  2  7  2  5  1  3  7  2  7  6  1  4  2  6 
48 49 50 
 4  1  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02598 0.34842 0.60575 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
2190 1464 
[1] "treatment indicator table: "

   0    1 
1339 2315 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1782
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1872
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 261.361 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.357 0.0639
 2 mu         0.1   0.2 0.437 0.0710
 3 mu         0.1   0.3 0.512 0.0838
 4 mu         0.1   0.4 0.582 0.107 
 5 mu         0.1   0.5 0.641 0.112 
 6 mu         0.2   0.1 0.369 0.0480
 7 mu         0.2   0.2 0.452 0.0468
 8 mu         0.2   0.3 0.527 0.0513
 9 mu         0.2   0.4 0.595 0.0736
10 mu         0.2   0.5 0.657 0.0704
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.876        0.215  1.15e- 9     12.3 
 2 mu         0.2      0.975        0.800  1.30e- 4      6.81
 3 mu         0.3      1.01         1.01   2.65e- 2      2.05
 4 mu         0.4      0.987        1.02   3.20e- 1      1.67
 5 mu         0.5      0.995        0.988  6.37e- 1      1.39
 6 mu         0.6      0.991        1.00   6.44e- 1      1.31
 7 mu         0.7      0.982        0.974  7.01e- 1      1.37
 8 mu         0.8      1.01         0.993  6.56e- 1      1.52
 9 mu         0.9      1.04         1.02   4.18e- 1      1.80
10 mu_1       0.1      0.893        0.388  5.00e- 9     14.9 
11 mu_1       0.2      0.991        0.955  2.89e- 4      4.48
12 mu_1       0.3      1.01         0.992  4.03e- 2      1.85
13 mu_1       0.4      0.985        1.00   3.76e- 1      1.61
14 mu_1       0.5      0.997        1.00   6.36e- 1      1.40
15 mu_1       0.6      0.989        1.00   6.62e- 1      1.30
16 mu_1       0.7      0.983        0.977  6.77e- 1      1.41
17 mu_1       0.8      1.01         0.994  6.63e- 1      1.53
18 mu_1       0.9      1.04         1.02   3.97e- 1      1.80
19 mu_0       0.1      0.874        0.192  7.23e-10     12.0 
20 mu_0       0.2      0.971        0.780  9.07e- 5      7.39
21 mu_0       0.3      1.01         1.01   2.06e- 2      2.13
22 mu_0       0.4      0.987        1.01   2.83e- 1      1.71
23 mu_0       0.5      0.994        0.988  6.12e- 1      1.39
24 mu_0       0.6      0.995        1.01   6.18e- 1      1.31
25 mu_0       0.7      0.980        0.980  7.11e- 1      1.29
26 mu_0       0.8      1.00         0.995  6.29e- 1      1.49
27 mu_0       0.9      1.04         1.02   5.59e- 1      1.82
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       2.94     1.24e-13  4.68e-37    240.  
 2 mu         0.2       2.98     1.24e- 7  2.57e-24    194.  
 3 mu         0.3       1.43     2.77e- 4  5.62e-17     19.6 
 4 mu         0.4       1.42     2.96e- 2  7.15e-12     15.4 
 5 mu         0.5       1.40     3.80e- 1  5.07e- 8      9.80
 6 mu         0.6       1.18     6.14e- 1  4.82e- 8     10.2 
 7 mu         0.7       1.12     6.63e- 1  6.01e-13      7.61
 8 mu         0.8       1.43     2.72e- 1  4.10e-20     24.5 
 9 mu         0.9       1.43     2.59e- 3  1.06e-32     22.2 
10 mu_1       0.1       4.19     8.37e-13  4.28e-36    336.  
11 mu_1       0.2       2.44     3.99e- 7  1.17e-23    136.  
12 mu_1       0.3       1.38     6.52e- 4  1.71e-16     15.7 
13 mu_1       0.4       1.41     4.20e- 2  1.63e-11     14.7 
14 mu_1       0.5       1.37     3.48e- 1  9.27e- 8     10.6 
15 mu_1       0.6       1.15     5.34e- 1  1.12e- 8      9.88
16 mu_1       0.7       1.13     7.09e- 1  1.20e-13      8.04
17 mu_1       0.8       1.45     2.54e- 1  7.18e-21     25.7 
18 mu_1       0.9       1.41     2.02e- 3  1.65e-33     23.0 
19 mu_0       0.1       2.80     4.43e-14  4.42e-38    229.  
20 mu_0       0.2       3.11     5.57e- 8  2.73e-25    208.  
21 mu_0       0.3       1.45     1.16e- 4  6.83e-18     23.8 
22 mu_0       0.4       1.43     1.67e- 2  1.01e-12     15.8 
23 mu_0       0.5       1.43     3.40e- 1  8.62e- 9      9.71
24 mu_0       0.6       1.22     5.97e- 1  1.04e- 7     10.7 
25 mu_0       0.7       1.11     5.80e- 1  1.72e-12      6.59
26 mu_0       0.8       1.34     4.01e- 1  1.76e-19     19.6 
27 mu_0       0.9       1.59     7.64e- 3  9.15e-32     22.3 
[1] "Total run time was 265.503 seconds"
