
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3588"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 1  1  5  2  1  5  4  2  4  4  5  5  1  5  2  1  1  5  7  2  3  4  2  3  1  3 
46 47 48 49 50 
 2  7  3  5  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0218  0.3191  0.6002  1.0000  5.0000 
[1] "event indicator table: "

   0    1 
2200 1388 
[1] "treatment indicator table: "

   0    1 
1257 2331 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1816
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1772
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 79"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 256.584 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 1.16  0.540
 2 mu         0.1   0.2 1.67  0.766
 3 mu         0.1   0.3 1.98  0.906
 4 mu         0.1   0.4 2.19  1.03 
 5 mu         0.1   0.5 2.34  1.10 
 6 mu         0.2   0.1 0.539 0.143
 7 mu         0.2   0.2 0.770 0.157
 8 mu         0.2   0.3 0.915 0.192
 9 mu         0.2   0.4 0.991 0.212
10 mu         0.2   0.5 1.06  0.231
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1      3.86         0.209 0.00000000307    145.  
 2 mu         0.2      1.58         0.897 0.000160          33.0 
 3 mu         0.3      1.10         0.996 0.0104             5.19
 4 mu         0.4      1.02         0.984 0.102              2.90
 5 mu         0.5      1.00         0.993 0.363              1.65
 6 mu         0.6      0.984        0.992 0.544              1.37
 7 mu         0.7      0.984        0.987 0.632              1.34
 8 mu         0.8      0.993        0.975 0.619              1.37
 9 mu         0.9      1.05         0.999 0.503              2.07
10 mu_1       0.1      3.32         0.395 0.0000000150     154.  
11 mu_1       0.2      1.39         0.869 0.000392          17.6 
12 mu_1       0.3      1.07         1.00  0.0185             4.43
13 mu_1       0.4      1.02         0.983 0.140              2.60
14 mu_1       0.5      0.999        0.993 0.424              1.61
15 mu_1       0.6      0.984        0.989 0.506              1.36
16 mu_1       0.7      0.984        0.989 0.663              1.33
17 mu_1       0.8      0.995        0.978 0.615              1.39
18 mu_1       0.9      1.05         0.991 0.484              2.10
19 mu_0       0.1      3.92         0.190 0.00000000174    149.  
20 mu_0       0.2      1.63         0.878 0.000102          36.8 
21 mu_0       0.3      1.11         0.980 0.00697            5.52
22 mu_0       0.4      1.03         0.986 0.0764             3.09
23 mu_0       0.5      1.00         0.991 0.302              1.72
24 mu_0       0.6      0.985        0.991 0.602              1.38
25 mu_0       0.7      0.983        0.992 0.560              1.37
26 mu_0       0.8      0.986        0.964 0.632              1.32
27 mu_0       0.9      1.03         1.01  0.564              1.83
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     339.       9.26e-14  8.45e-43  31171.  
 2 mu         0.2     517.       1.68e- 7  5.29e-29  35881.  
 3 mu         0.3      69.3      1.92e- 4  5.83e-21   3679.  
 4 mu         0.4       3.27     2.29e- 2  2.79e-15    140.  
 5 mu         0.5       1.36     3.54e- 1  6.67e-11     11.7 
 6 mu         0.6       1.29     9.25e- 1  2.34e- 7     12.1 
 7 mu         0.7       1.11     8.24e- 1  2.11e- 9      4.70
 8 mu         0.8       1.21     2.70e- 1  4.86e-16      9.26
 9 mu         0.9       1.42     2.03e- 3  1.01e-27     21.2 
10 mu_1       0.1     517.       7.04e-13  8.27e-42  46426.  
11 mu_1       0.2     419.       5.83e- 7  2.59e-28  26720.  
12 mu_1       0.3      40.5      4.21e- 4  1.90e-20   2349.  
13 mu_1       0.4       2.14     3.77e- 2  6.83e-15     67.0 
14 mu_1       0.5       1.36     4.03e- 1  1.31e-10     10.7 
15 mu_1       0.6       1.28     8.91e- 1  3.82e- 7     11.9 
16 mu_1       0.7       1.10     7.75e- 1  4.49e-10      5.00
17 mu_1       0.8       1.22     2.13e- 1  9.05e-17      9.74
18 mu_1       0.9       1.43     1.46e- 3  1.67e-28     22.0 
19 mu_0       0.1     319.       2.69e-14  0         29477.  
20 mu_0       0.2     541.       6.40e- 8  0         38171.  
21 mu_0       0.3      81.7      9.36e- 5  0          4250.  
22 mu_0       0.4       4.02     1.30e- 2  0           189.  
23 mu_0       0.5       1.35     2.49e- 1  0            12.6 
24 mu_0       0.6       1.32     8.70e- 1  0            12.4 
25 mu_0       0.7       1.15     7.26e- 1  0             5.76
26 mu_0       0.8       1.16     4.24e- 1  0             7.31
27 mu_0       0.9       1.31     5.59e- 3  0            13.7 
[1] "Total run time was 261.926 seconds"
