
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3550"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 3  5  2  1  2  4  3  4  5  1  2  2  1  2  3  3  4  4  4  6  9  2  7  3  2  4 
46 47 48 49 50 
 2  3  1  4  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0334  0.3620  0.6390  1.0000  5.0000 
[1] "event indicator table: "

   0    1 
2127 1423 
[1] "treatment indicator table: "

   0    1 
1218 2332 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1740
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 65"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1810
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 32"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 185.985 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.293 0.0762
 2 mu         0.1   0.2 0.323 0.0681
 3 mu         0.1   0.3 0.369 0.0761
 4 mu         0.1   0.4 0.389 0.0653
 5 mu         0.1   0.5 0.382 0.0717
 6 mu         0.2   0.1 0.316 0.0660
 7 mu         0.2   0.2 0.372 0.0628
 8 mu         0.2   0.3 0.434 0.0655
 9 mu         0.2   0.4 0.475 0.0525
10 mu         0.2   0.5 0.480 0.0637
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.758        0.326  6.87e-11      6.27
 2 mu         0.2      0.976        1.00   7.88e- 6      4.83
 3 mu         0.3      1.00         1.02   2.34e- 3      2.26
 4 mu         0.4      1.02         1.03   5.56e- 2      1.81
 5 mu         0.5      1.01         1.00   3.26e- 1      1.52
 6 mu         0.6      0.979        0.976  6.71e- 1      1.29
 7 mu         0.7      0.990        0.982  6.70e- 1      1.35
 8 mu         0.8      1.01         0.990  6.29e- 1      1.64
 9 mu         0.9      1.02         1.03   4.41e- 1      1.57
10 mu_1       0.1      0.837        0.561  3.45e-10      5.33
11 mu_1       0.2      0.998        0.978  2.00e- 5      3.92
12 mu_1       0.3      1.01         1.01   4.04e- 3      2.21
13 mu_1       0.4      1.02         1.03   7.51e- 2      1.70
14 mu_1       0.5      1.01         1.00   3.78e- 1      1.49
15 mu_1       0.6      0.976        0.970  6.72e- 1      1.30
16 mu_1       0.7      0.993        0.988  6.61e- 1      1.38
17 mu_1       0.8      1.01         0.990  6.19e- 1      1.65
18 mu_1       0.9      1.02         1.03   4.32e- 1      1.60
19 mu_0       0.1      0.749        0.286  3.80e-11      6.47
20 mu_0       0.2      0.970        0.974  4.85e- 6      5.06
21 mu_0       0.3      0.999        1.02   1.61e- 3      2.39
22 mu_0       0.4      1.02         1.04   4.25e- 2      1.90
23 mu_0       0.5      1.02         1.01   2.74e- 1      1.56
24 mu_0       0.6      0.982        0.980  6.57e- 1      1.35
25 mu_0       0.7      0.983        0.961  6.92e- 1      1.34
26 mu_0       0.8      1.01         0.994  6.71e- 1      1.61
27 mu_0       0.9      1.02         1.00   5.23e- 1      1.49
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       6.28     1.52e-13  2.12e-42    373.  
 2 mu         0.2       3.92     2.26e- 7  2.36e-28    164.  
 3 mu         0.3       2.40     4.04e- 4  3.41e-20     77.1 
 4 mu         0.4       1.87     2.93e- 2  1.87e-14     30.5 
 5 mu         0.5       1.37     4.53e- 1  4.65e-10     11.5 
 6 mu         0.6       1.24     6.73e- 1  1.57e- 6      6.77
 7 mu         0.7       1.25     5.23e- 1  1.68e- 8      6.80
 8 mu         0.8       1.08     3.03e- 1  4.41e-13      5.65
 9 mu         0.9       1.57     4.41e- 3  4.68e-21     55.9 
10 mu_1       0.1       7.12     9.75e-13  2.04e-41    373.  
11 mu_1       0.2       3.05     7.92e- 7  1.13e-27    106.  
12 mu_1       0.3       2.26     9.17e- 4  1.09e-19     64.2 
13 mu_1       0.4       1.74     5.01e- 2  4.48e-14     25.4 
14 mu_1       0.5       1.33     4.52e- 1  8.93e-10     10.7 
15 mu_1       0.6       1.24     6.75e- 1  2.51e- 6      6.49
16 mu_1       0.7       1.24     5.70e- 1  2.40e- 9      6.52
17 mu_1       0.8       1.08     2.41e- 1  5.51e-14      6.46
18 mu_1       0.9       1.58     3.18e- 3  5.20e-22     56.8 
19 mu_0       0.1       6.19     5.03e-14  0           373.  
20 mu_0       0.2       4.13     8.05e- 8  0           178.  
21 mu_0       0.3       2.46     1.85e- 4  0            82.6 
22 mu_0       0.4       1.96     1.71e- 2  0            33.9 
23 mu_0       0.5       1.41     2.92e- 1  0            13.5 
24 mu_0       0.6       1.25     5.00e- 1  0             8.04
25 mu_0       0.7       1.26     5.88e- 1  0             7.55
26 mu_0       0.8       1.10     2.67e- 1  0             6.14
27 mu_0       0.9       1.46     1.23e- 2  0            47.6 
[1] "Total run time was 189.146 seconds"
