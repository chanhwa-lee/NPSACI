
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3573"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 
 2  3  2  8  1  5  3  4  2  2  2  2  5  2  5  5  3  3  2  1  4  2  4  5  3  3 
47 48 49 50 
 5  3  6  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03368 0.37338 0.62575 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
2211 1362 
[1] "treatment indicator table: "

   0    1 
1166 2407 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1727
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1846
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 62"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 198.459 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.329 0.109 
 2 mu         0.1   0.2 0.375 0.141 
 3 mu         0.1   0.3 0.412 0.162 
 4 mu         0.1   0.4 0.478 0.188 
 5 mu         0.1   0.5 0.495 0.208 
 6 mu         0.2   0.1 0.319 0.0435
 7 mu         0.2   0.2 0.370 0.0652
 8 mu         0.2   0.3 0.413 0.0784
 9 mu         0.2   0.4 0.475 0.0959
10 mu         0.2   0.5 0.494 0.110 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.816       0.0868 0.0000000676     26.6 
 2 mu         0.2      0.860       0.680  0.00167           9.28
 3 mu         0.3      0.974       0.936  0.138             4.16
 4 mu         0.4      1.01        0.989  0.471             1.85
 5 mu         0.5      1.01        0.993  0.606             1.50
 6 mu         0.6      1.02        1.00   0.743             1.38
 7 mu         0.7      1.01        1.01   0.783             1.34
 8 mu         0.8      1.01        1.01   0.743             1.29
 9 mu         0.9      0.993       0.990  0.600             1.42
10 mu_1       0.1      0.707       0.193  0.000000275      10.8 
11 mu_1       0.2      0.922       0.769  0.00347           9.75
12 mu_1       0.3      0.991       0.957  0.192             3.05
13 mu_1       0.4      1.02        0.997  0.503             1.77
14 mu_1       0.5      1.01        0.993  0.643             1.44
15 mu_1       0.6      1.01        0.995  0.760             1.37
16 mu_1       0.7      1.00        1.01   0.774             1.34
17 mu_1       0.8      1.01        1.01   0.751             1.29
18 mu_1       0.9      0.990       0.990  0.597             1.43
19 mu_0       0.1      0.828       0.0739 0.0000000445     28.3 
20 mu_0       0.2      0.844       0.651  0.00122           9.16
21 mu_0       0.3      0.967       0.927  0.113             4.63
22 mu_0       0.4      1.01        0.968  0.424             1.94
23 mu_0       0.5      1.01        0.983  0.570             1.56
24 mu_0       0.6      1.02        1.01   0.717             1.38
25 mu_0       0.7      1.01        1.00   0.800             1.37
26 mu_0       0.8      1.00        1.00   0.709             1.38
27 mu_0       0.9      1.02        1.02   0.604             1.42
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.513     5.70e-15  6.07e-44     47.3 
 2 mu         0.2      2.81      8.95e- 9  1.35e-29    201.  
 3 mu         0.3      2.72      3.23e- 5  2.93e-21    106.  
 4 mu         0.4      1.47      5.41e- 3  2.14e-15     17.2 
 5 mu         0.5      1.19      1.30e- 1  6.65e-11     16.1 
 6 mu         0.6      1.11      4.57e- 1  2.69e- 7      7.24
 7 mu         0.7      1.10      6.25e- 1  8.32e- 9      5.31
 8 mu         0.8      1.07      4.29e- 1  2.85e-14      5.98
 9 mu         0.9      1.25      1.37e- 2  4.79e-24     11.0 
10 mu_1       0.1      1.07      4.40e-14  5.82e-43     97.8 
11 mu_1       0.2      3.14      3.16e- 8  6.48e-29    208.  
12 mu_1       0.3      2.42      7.35e- 5  9.37e-21     73.4 
13 mu_1       0.4      1.34      9.79e- 3  5.13e-15     13.9 
14 mu_1       0.5      1.18      1.28e- 1  1.28e-10     15.8 
15 mu_1       0.6      1.10      5.41e- 1  4.30e- 7      7.51
16 mu_1       0.7      1.10      6.79e- 1  2.49e- 9      5.32
17 mu_1       0.8      1.07      4.94e- 1  7.46e-15      6.07
18 mu_1       0.9      1.26      1.04e- 2  1.11e-24     11.3 
19 mu_0       0.1      0.451     1.44e-15  2.70e-45     41.6 
20 mu_0       0.2      2.73      3.28e- 9  6.74e-31    200.  
21 mu_0       0.3      2.84      1.46e- 5  1.67e-22    121.  
22 mu_0       0.4      1.55      2.32e- 3  1.42e-16     22.8 
23 mu_0       0.5      1.20      7.39e- 2  5.32e-12     16.4 
24 mu_0       0.6      1.12      3.55e- 1  2.69e- 8      6.84
25 mu_0       0.7      1.11      6.39e- 1  2.19e- 8      5.27
26 mu_0       0.8      1.07      4.31e- 1  1.13e-13      5.61
27 mu_0       0.9      1.18      4.32e- 2  3.79e-23      8.59
[1] "Total run time was 201.669 seconds"
