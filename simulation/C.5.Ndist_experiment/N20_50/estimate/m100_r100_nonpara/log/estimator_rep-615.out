
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3648"
[1] "cluster size dist'n: "

20 22 23 24 25 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 
 1  2  1  5  2  4  9  1  2  1  3  5  6  4  3  6  2  4  4  6  4  3  1  4  2  6 
48 49 50 
 2  3  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.01955 0.32965 0.60363 1.00000 5.60998 
[1] "event indicator table: "

   0    1 
2184 1464 
[1] "treatment indicator table: "

   0    1 
1404 2244 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1838
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1810
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 67"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 95"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 197.526 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.447 0.0775
 2 mu         0.1   0.2 0.555 0.100 
 3 mu         0.1   0.3 0.582 0.0788
 4 mu         0.1   0.4 0.637 0.0854
 5 mu         0.1   0.5 0.694 0.0846
 6 mu         0.2   0.1 0.397 0.0489
 7 mu         0.2   0.2 0.484 0.0563
 8 mu         0.2   0.3 0.552 0.0544
 9 mu         0.2   0.4 0.595 0.0555
10 mu         0.2   0.5 0.637 0.0566
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.957        0.693  0.000238      4.23
 2 mu         0.2      0.978        0.996  0.0921        3.18
 3 mu         0.3      0.965        0.952  0.365         2.24
 4 mu         0.4      0.981        0.968  0.454         1.69
 5 mu         0.5      0.998        0.997  0.528         1.57
 6 mu         0.6      0.996        0.999  0.610         1.27
 7 mu         0.7      0.985        0.982  0.674         1.25
 8 mu         0.8      0.995        1.00   0.524         1.48
 9 mu         0.9      0.994        0.988  0.418         1.87
10 mu_1       0.1      0.986        0.801  0.000726      3.47
11 mu_1       0.2      0.969        0.975  0.138         3.00
12 mu_1       0.3      0.970        0.938  0.352         2.07
13 mu_1       0.4      0.984        0.997  0.472         1.65
14 mu_1       0.5      0.999        0.993  0.534         1.57
15 mu_1       0.6      0.995        1.00   0.620         1.23
16 mu_1       0.7      0.985        0.972  0.666         1.27
17 mu_1       0.8      0.995        0.985  0.515         1.48
18 mu_1       0.9      0.993        0.990  0.405         1.89
19 mu_0       0.1      0.954        0.654  0.000184      4.54
20 mu_0       0.2      0.981        0.994  0.0806        3.27
21 mu_0       0.3      0.963        0.952  0.324         2.32
22 mu_0       0.4      0.979        0.963  0.442         1.72
23 mu_0       0.5      0.996        1.00   0.521         1.57
24 mu_0       0.6      0.998        0.998  0.596         1.33
25 mu_0       0.7      0.984        0.980  0.693         1.23
26 mu_0       0.8      0.992        0.984  0.562         1.46
27 mu_0       0.9      0.998        0.993  0.389         1.63
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.51      1.79e-12  3.09e-42    144.  
 2 mu         0.2      0.736     8.36e- 7  3.06e-28     15.7 
 3 mu         0.3      1.28      8.73e- 4  3.87e-20     15.2 
 4 mu         0.4      1.27      4.40e- 2  1.82e-14     11.7 
 5 mu         0.5      1.13      4.28e- 1  3.77e-10      7.48
 6 mu         0.6      1.20      4.44e- 1  2.90e- 9      8.65
 7 mu         0.7      1.06      4.41e- 1  1.10e-13      9.56
 8 mu         0.8      0.833     1.12e- 1  5.01e-20      5.29
 9 mu         0.9      1.01      1.07e- 4  5.19e-31     12.7 
10 mu_1       0.1      1.22      1.16e-11  2.91e-41    108.  
11 mu_1       0.2      0.804     2.46e- 6  1.44e-27     17.2 
12 mu_1       0.3      1.36      1.81e- 3  1.21e-19     16.0 
13 mu_1       0.4      1.24      7.01e- 2  4.27e-14     10.7 
14 mu_1       0.5      1.12      3.69e- 1  7.09e-10      7.48
15 mu_1       0.6      1.20      5.17e- 1  3.63e-10      8.28
16 mu_1       0.7      1.03      3.79e- 1  1.18e-14      9.45
17 mu_1       0.8      0.831     9.17e- 2  4.69e-21      5.10
18 mu_1       0.9      1.02      7.34e- 5  4.32e-32     12.5 
19 mu_0       0.1      1.54      6.11e-13  0           148.  
20 mu_0       0.2      0.719     4.28e- 7  0            17.1 
21 mu_0       0.3      1.25      4.65e- 4  0            15.4 
22 mu_0       0.4      1.29      2.66e- 2  0            12.3 
23 mu_0       0.5      1.13      2.98e- 1  0             7.48
24 mu_0       0.6      1.19      4.32e- 1  0             9.20
25 mu_0       0.7      1.11      3.80e- 1  0             9.80
26 mu_0       0.8      0.842     1.16e- 1  0             6.05
27 mu_0       0.9      0.949     3.48e- 4  0            14.1 
[1] "Total run time was 200.565 seconds"
