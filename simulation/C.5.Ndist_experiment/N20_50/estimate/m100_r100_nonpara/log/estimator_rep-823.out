
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3515"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 1  3  5  6  4  2  1  4  6  4  5  2  1  3  2  2  7  1  1  3  1  2  2  4  3  6 
46 47 48 49 50 
 1  6  5  3  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02063 0.31236 0.58840 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
2096 1419 
[1] "treatment indicator table: "

   0    1 
1364 2151 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1846
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 12"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1669
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 270.567 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.389 0.0470
 2 mu         0.1   0.2 0.473 0.0541
 3 mu         0.1   0.3 0.499 0.0547
 4 mu         0.1   0.4 0.623 0.0715
 5 mu         0.1   0.5 0.653 0.0727
 6 mu         0.2   0.1 0.359 0.0253
 7 mu         0.2   0.2 0.420 0.0285
 8 mu         0.2   0.3 0.461 0.0281
 9 mu         0.2   0.4 0.543 0.0373
10 mu         0.2   0.5 0.560 0.0379
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.02         0.823   0.00129      5.85
 2 mu         0.2      0.980        0.956   0.144        2.34
 3 mu         0.3      1.02         1.01    0.438        1.90
 4 mu         0.4      1.01         1.01    0.559        1.54
 5 mu         0.5      1.01         1.00    0.654        1.52
 6 mu         0.6      1.01         0.997   0.521        1.41
 7 mu         0.7      1.03         1.01    0.780        1.38
 8 mu         0.8      0.996        0.985   0.691        1.34
 9 mu         0.9      0.950        0.933   0.384        1.51
10 mu_1       0.1      0.959        0.822   0.00364      3.25
11 mu_1       0.2      0.993        0.971   0.184        2.30
12 mu_1       0.3      1.02         1.01    0.455        1.79
13 mu_1       0.4      1.01         1.02    0.593        1.50
14 mu_1       0.5      1.01         1.00    0.615        1.55
15 mu_1       0.6      1.01         1.00    0.531        1.37
16 mu_1       0.7      1.03         1.01    0.759        1.37
17 mu_1       0.8      0.993        0.983   0.703        1.34
18 mu_1       0.9      0.951        0.933   0.372        1.52
19 mu_0       0.1      1.03         0.827   0.00103      6.15
20 mu_0       0.2      0.977        0.959   0.135        2.35
21 mu_0       0.3      1.01         0.999   0.431        1.94
22 mu_0       0.4      1.01         1.01    0.536        1.56
23 mu_0       0.5      1.01         1.02    0.693        1.49
24 mu_0       0.6      1.01         0.995   0.508        1.48
25 mu_0       0.7      1.03         1.01    0.759        1.39
26 mu_0       0.8      1.01         0.995   0.642        1.37
27 mu_0       0.9      0.944        0.924   0.490        1.43
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.182     5.43e-13  1.37e-38     12.3 
 2 mu         0.2      0.771     1.07e- 6  9.50e-26     13.1 
 3 mu         0.3      1.29      1.20e- 3  2.72e-18     20.6 
 4 mu         0.4      1.20      8.42e- 2  4.70e-13      7.56
 5 mu         0.5      1.32      3.28e- 1  2.70e- 9     15.8 
 6 mu         0.6      1.54      5.44e- 1  2.20e- 6     22.6 
 7 mu         0.7      1.26      7.19e- 1  4.80e- 9     10.1 
 8 mu         0.8      1.13      2.06e- 1  7.27e-15      9.98
 9 mu         0.9      1.27      5.53e- 4  2.18e-25     18.2 
10 mu_1       0.1      0.309     4.16e-12  1.31e-37     18.2 
11 mu_1       0.2      0.917     3.14e- 6  4.54e-25     14.4 
12 mu_1       0.3      1.31      2.57e- 3  8.65e-18     19.9 
13 mu_1       0.4      1.18      1.06e- 1  1.12e-12      8.14
14 mu_1       0.5      1.37      3.94e- 1  5.26e- 9     18.1 
15 mu_1       0.6      1.53      6.83e- 1  3.58e- 6     21.6 
16 mu_1       0.7      1.26      8.15e- 1  1.68e- 9     10.3 
17 mu_1       0.8      1.13      1.67e- 1  2.23e-15     10.1 
18 mu_1       0.9      1.29      3.59e- 4  5.92e-26     19.3 
19 mu_0       0.1      0.168     2.06e-13  0            11.6 
20 mu_0       0.2      0.735     5.26e- 7  0            13.9 
21 mu_0       0.3      1.28      6.08e- 4  0            21.0 
22 mu_0       0.4      1.21      5.52e- 2  0             7.71
23 mu_0       0.5      1.28      3.19e- 1  0            13.6 
24 mu_0       0.6      1.54      5.51e- 1  0            24.3 
25 mu_0       0.7      1.28      5.43e- 1  0             9.39
26 mu_0       0.8      1.12      1.93e- 1  0             9.56
27 mu_0       0.9      1.16      1.53e- 3  0             9.38
[1] "Total run time was 274.914 seconds"
