
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3550"
[1] "cluster size dist'n: "

20 21 22 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 
 1  4  3  2  3  3  3  3  3  5  2  4  7  2  1  6  7  6  3  4  2  1  3  4  5  2 
47 48 49 
 3  6  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03405 0.35155 0.61195 1.00000 5.34119 
[1] "event indicator table: "

   0    1 
2106 1444 
[1] "treatment indicator table: "

   0    1 
1285 2265 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1734
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1816
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 246.516 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.423 0.0489
 2 mu         0.1   0.2 0.470 0.0505
 3 mu         0.1   0.3 0.520 0.0534
 4 mu         0.1   0.4 0.553 0.0580
 5 mu         0.1   0.5 0.596 0.0655
 6 mu         0.2   0.1 0.358 0.0301
 7 mu         0.2   0.2 0.414 0.0291
 8 mu         0.2   0.3 0.472 0.0335
 9 mu         0.2   0.4 0.512 0.0299
10 mu         0.2   0.5 0.558 0.0329
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.954        0.693  0.000823      4.55
 2 mu         0.2      0.961        0.936  0.0576        2.23
 3 mu         0.3      1.00         0.965  0.356         1.83
 4 mu         0.4      1.01         1.01   0.550         1.60
 5 mu         0.5      1.01         1.01   0.685         1.51
 6 mu         0.6      0.997        0.976  0.691         1.50
 7 mu         0.7      0.985        1.00   0.611         1.25
 8 mu         0.8      0.991        0.992  0.671         1.37
 9 mu         0.9      0.989        0.977  0.600         1.53
10 mu_1       0.1      0.932        0.754  0.00253       4.22
11 mu_1       0.2      0.969        0.917  0.0978        1.96
12 mu_1       0.3      1.01         0.974  0.455         1.83
13 mu_1       0.4      1.01         1.01   0.567         1.54
14 mu_1       0.5      1.01         1.00   0.678         1.51
15 mu_1       0.6      0.996        0.972  0.696         1.48
16 mu_1       0.7      0.985        1.01   0.609         1.26
17 mu_1       0.8      0.991        0.990  0.674         1.37
18 mu_1       0.9      0.989        0.975  0.593         1.55
19 mu_0       0.1      0.957        0.693  0.000633      4.77
20 mu_0       0.2      0.959        0.940  0.0476        2.34
21 mu_0       0.3      1.00         0.960  0.314         1.88
22 mu_0       0.4      1.01         0.999  0.523         1.65
23 mu_0       0.5      1.01         1.03   0.655         1.52
24 mu_0       0.6      0.998        0.970  0.664         1.52
25 mu_0       0.7      0.984        0.984  0.616         1.31
26 mu_0       0.8      0.990        0.999  0.659         1.35
27 mu_0       0.9      0.994        0.985  0.608         1.44
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.629     7.15e-15  2.32e-37     29.3 
 2 mu         0.2      1.28      1.64e- 8  7.17e-25     34.2 
 3 mu         0.3      1.41      5.27e- 5  1.20e-17     26.8 
 4 mu         0.4      1.05      9.33e- 3  1.33e-12      9.17
 5 mu         0.5      1.10      1.36e- 1  9.06e- 9      8.48
 6 mu         0.6      1.10      3.13e- 1  2.21e- 9      6.69
 7 mu         0.7      1.20      4.93e- 1  3.15e-14     10.8 
 8 mu         0.8      1.39      4.88e- 1  2.82e-21      7.97
 9 mu         0.9      1.38      9.47e- 3  1.30e-33     17.3 
10 mu_1       0.1      0.918     5.17e-14  2.17e-36     43.9 
11 mu_1       0.2      1.37      5.91e- 8  3.35e-24     39.7 
12 mu_1       0.3      1.35      1.18e- 4  3.72e-17     21.2 
13 mu_1       0.4      1.03      1.56e- 2  3.11e-12      8.60
14 mu_1       0.5      1.12      1.31e- 1  1.69e- 8      8.88
15 mu_1       0.6      1.09      2.91e- 1  4.61e-10      6.77
16 mu_1       0.7      1.22      4.87e- 1  5.63e-15     11.2 
17 mu_1       0.8      1.39      4.90e- 1  4.41e-22      8.35
18 mu_1       0.9      1.37      7.20e- 3  1.81e-34     18.2 
19 mu_0       0.1      0.596     2.20e-15  1.72e-38     28.5 
20 mu_0       0.2      1.26      5.77e- 9  5.98e-26     36.2 
21 mu_0       0.3      1.43      2.55e- 5  1.14e-18     29.2 
22 mu_0       0.4      1.07      6.34e- 3  1.48e-13      9.56
23 mu_0       0.5      1.09      9.06e- 2  1.21e- 9      8.11
24 mu_0       0.6      1.11      2.44e- 1  4.84e- 9      7.60
25 mu_0       0.7      1.13      5.56e- 1  9.20e-14      9.92
26 mu_0       0.8      1.37      3.50e- 1  1.24e-20      8.27
27 mu_0       0.9      1.43      2.98e- 2  1.14e-32     11.7 
[1] "Total run time was 250.726 seconds"
