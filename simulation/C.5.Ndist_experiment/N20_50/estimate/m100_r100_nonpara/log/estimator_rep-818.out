
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3633"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 3  1  5  3  1  2  2  5  6  3  2  2  3  5  2  1  4  2  1  3  4  3  1  5  3  4 
46 47 48 49 50 
 7  5  2  7  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03567 0.34903 0.59790 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
2150 1483 
[1] "treatment indicator table: "

   0    1 
1333 2300 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1838
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1795
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 320.777 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.283 0.0781
 2 mu         0.1   0.2 0.440 0.0599
 3 mu         0.1   0.3 0.550 0.0911
 4 mu         0.1   0.4 0.607 0.106 
 5 mu         0.1   0.5 0.634 0.103 
 6 mu         0.2   0.1 0.284 0.0527
 7 mu         0.2   0.2 0.420 0.0396
 8 mu         0.2   0.3 0.505 0.0599
 9 mu         0.2   0.4 0.564 0.0676
10 mu         0.2   0.5 0.604 0.0643
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.876        0.556 0.0000498      5.49
 2 mu         0.2      0.933        0.897 0.0329         2.53
 3 mu         0.3      0.987        0.979 0.313          1.91
 4 mu         0.4      1.00         1.00  0.541          1.52
 5 mu         0.5      0.996        0.992 0.626          1.48
 6 mu         0.6      0.987        0.994 0.740          1.30
 7 mu         0.7      1.00         1.00  0.781          1.29
 8 mu         0.8      1.01         0.994 0.745          1.39
 9 mu         0.9      1.01         1.01  0.576          1.45
10 mu_1       0.1      0.892        0.765 0.000164       2.81
11 mu_1       0.2      0.946        0.872 0.0552         2.29
12 mu_1       0.3      0.993        0.992 0.375          1.81
13 mu_1       0.4      1.00         1.01  0.588          1.49
14 mu_1       0.5      0.995        0.992 0.630          1.46
15 mu_1       0.6      0.987        0.991 0.722          1.32
16 mu_1       0.7      1.01         1.01  0.781          1.28
17 mu_1       0.8      1.01         0.991 0.733          1.40
18 mu_1       0.9      1.01         1.00  0.557          1.46
19 mu_0       0.1      0.875        0.545 0.0000372      5.79
20 mu_0       0.2      0.929        0.884 0.0273         2.59
21 mu_0       0.3      0.984        0.982 0.286          1.95
22 mu_0       0.4      1.00         0.999 0.510          1.53
23 mu_0       0.5      0.998        0.993 0.622          1.50
24 mu_0       0.6      0.985        0.998 0.742          1.29
25 mu_0       0.7      0.999        0.992 0.731          1.33
26 mu_0       0.8      1.02         1.01  0.763          1.38
27 mu_0       0.9      1.00         0.990 0.664          1.44
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.900     7.42e-14  3.24e-39     84.0 
 2 mu         0.2      0.808     1.40e- 7  1.27e-26     30.2 
 3 mu         0.3      1.05      3.19e- 4  2.76e-19     11.0 
 4 mu         0.4      1.05      1.86e- 2  4.18e-14      7.94
 5 mu         0.5      0.912     2.73e- 1  4.09e-10      5.88
 6 mu         0.6      0.957     5.97e- 1  1.25e- 9      5.78
 7 mu         0.7      1.11      7.73e- 1  1.00e-14      4.73
 8 mu         0.8      1.10      3.10e- 1  4.00e-22      5.04
 9 mu         0.9      1.19      1.89e- 3  4.60e-35     12.1 
10 mu_1       0.1      1.15      5.23e-13  3.17e-38    101.  
11 mu_1       0.2      0.844     4.43e- 7  6.19e-26     18.1 
12 mu_1       0.3      1.08      7.09e- 4  8.98e-19     11.6 
13 mu_1       0.4      1.01      3.14e- 2  1.02e-13      8.19
14 mu_1       0.5      0.901     2.58e- 1  8.00e-10      5.74
15 mu_1       0.6      0.976     5.78e- 1  2.50e-10      5.70
16 mu_1       0.7      1.11      7.96e- 1  1.72e-15      4.70
17 mu_1       0.8      1.10      2.54e- 1  5.99e-23      5.29
18 mu_1       0.9      1.18      1.32e- 3  6.14e-36     12.4 
19 mu_0       0.1      0.872     2.43e-14  8.38e-41     82.2 
20 mu_0       0.2      0.799     6.74e- 8  3.68e-28     33.2 
21 mu_0       0.3      1.04      1.29e- 4  9.16e-21     10.7 
22 mu_0       0.4      1.07      1.08e- 2  1.62e-15      7.76
23 mu_0       0.5      0.923     2.26e- 1  1.90e-11      6.03
24 mu_0       0.6      0.927     4.66e- 1  2.75e- 9      5.91
25 mu_0       0.7      1.09      5.12e- 1  2.94e-14      4.82
26 mu_0       0.8      1.10      4.48e- 1  1.76e-21      5.10
27 mu_0       0.9      1.27      6.98e- 3  4.05e-34     12.1 
[1] "Total run time was 327.781 seconds"
