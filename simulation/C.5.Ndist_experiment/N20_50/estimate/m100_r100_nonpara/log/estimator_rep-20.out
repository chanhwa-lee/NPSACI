
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3439"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 3  5  2  4  2  8  3  3  3  3  2  2  4  6  6  1  3  1  1  4  4  2  2  2  8  2 
46 47 48 49 50 
 1  3  1  5  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02156 0.32908 0.57371 0.98609 5.00000 
[1] "event indicator table: "

   0    1 
2072 1367 
[1] "treatment indicator table: "

   0    1 
1319 2120 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1758
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 74"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1681
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 213.768 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.469 0.0647
 2 mu         0.1   0.2 0.526 0.0985
 3 mu         0.1   0.3 0.603 0.132 
 4 mu         0.1   0.4 0.654 0.120 
 5 mu         0.1   0.5 0.721 0.116 
 6 mu         0.2   0.1 0.349 0.0261
 7 mu         0.2   0.2 0.399 0.0526
 8 mu         0.2   0.3 0.455 0.0770
 9 mu         0.2   0.4 0.491 0.0640
10 mu         0.2   0.5 0.541 0.0562
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.17         0.466  0.00117       7.04
 2 mu         0.2      0.960        0.954  0.138         2.52
 3 mu         0.3      0.980        0.920  0.298         1.60
 4 mu         0.4      0.985        1.00   0.553         1.41
 5 mu         0.5      0.990        1.02   0.653         1.22
 6 mu         0.6      1.01         1.01   0.759         1.30
 7 mu         0.7      1.01         1.02   0.740         1.30
 8 mu         0.8      0.997        1.01   0.695         1.34
 9 mu         0.9      0.990        0.987  0.323         1.69
10 mu_1       0.1      1.06         0.723  0.00388       4.36
11 mu_1       0.2      0.961        0.979  0.234         2.70
12 mu_1       0.3      0.986        0.943  0.309         1.60
13 mu_1       0.4      0.983        0.988  0.607         1.35
14 mu_1       0.5      0.992        1.01   0.664         1.24
15 mu_1       0.6      1.01         1.02   0.762         1.31
16 mu_1       0.7      1.00         1.01   0.724         1.30
17 mu_1       0.8      0.997        1.00   0.685         1.34
18 mu_1       0.9      0.990        0.986  0.305         1.71
19 mu_0       0.1      1.18         0.439  0.000873      7.34
20 mu_0       0.2      0.959        0.924  0.114         2.47
21 mu_0       0.3      0.977        0.928  0.294         1.70
22 mu_0       0.4      0.986        0.997  0.517         1.47
23 mu_0       0.5      0.988        1.01   0.641         1.22
24 mu_0       0.6      1.01         1.00   0.742         1.29
25 mu_0       0.7      1.01         1.02   0.777         1.29
26 mu_0       0.8      0.998        0.991  0.706         1.34
27 mu_0       0.9      0.993        0.989  0.483         1.59
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.982     2.28e-12  3.09e-38     96.7 
 2 mu         0.2      0.804     1.57e- 6  3.40e-26     50.8 
 3 mu         0.3      0.875     1.65e- 3  3.76e-19      9.54
 4 mu         0.4      1.15      9.26e- 2  3.74e-14     11.9 
 5 mu         0.5      1.08      5.41e- 1  2.81e-10      7.91
 6 mu         0.6      1.13      6.05e- 1  4.13e- 7      5.80
 7 mu         0.7      1.18      6.86e- 1  3.38e- 9      8.60
 8 mu         0.8      1.09      2.69e- 1  4.52e-14      8.37
 9 mu         0.9      0.946     8.74e- 4  1.35e-22     13.1 
10 mu_1       0.1      1.21      1.35e-11  3.09e-37    117.  
11 mu_1       0.2      0.721     4.64e- 6  1.70e-25     30.8 
12 mu_1       0.3      0.949     3.49e- 3  1.25e-18      8.82
13 mu_1       0.4      1.16      1.41e- 1  9.34e-14     12.2 
14 mu_1       0.5      1.07      6.29e- 1  5.62e-10      8.44
15 mu_1       0.6      1.14      6.67e- 1  6.89e- 7      5.67
16 mu_1       0.7      1.18      6.21e- 1  5.86e-10      8.52
17 mu_1       0.8      1.09      2.07e- 1  6.84e-15      8.37
18 mu_1       0.9      0.937     6.36e- 4  1.81e-23     13.6 
19 mu_0       0.1      0.957     1.03e-12  0            94.4 
20 mu_0       0.2      0.825     8.10e- 7  0            55.9 
21 mu_0       0.3      0.844     8.60e- 4  0            10.3 
22 mu_0       0.4      1.15      5.35e- 2  0            11.8 
23 mu_0       0.5      1.08      4.07e- 1  0             7.38
24 mu_0       0.6      1.12      5.71e- 1  0             6.77
25 mu_0       0.7      1.19      7.53e- 1  0             8.77
26 mu_0       0.8      1.08      4.62e- 1  0             8.37
27 mu_0       0.9      1.02      1.78e- 3  0             9.12
[1] "Total run time was 216.995 seconds"
