
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3551"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 1  4  2  4  1  3  1  4  3  4  3  7  3  5  3  2  2  6  4  1  4  3  6  3  3  1 
46 47 48 49 50 
 4  5  2  3  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04127 0.37419 0.64129 1.00000 6.03061 
[1] "event indicator table: "

   0    1 
2115 1436 
[1] "treatment indicator table: "

   0    1 
1253 2298 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1768
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 85"
[1] "     Cluster: 91"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1783
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 210.535 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.468 0.156 
 2 mu         0.1   0.2 0.549 0.183 
 3 mu         0.1   0.3 0.604 0.207 
 4 mu         0.1   0.4 0.685 0.239 
 5 mu         0.1   0.5 0.702 0.249 
 6 mu         0.2   0.1 0.330 0.0689
 7 mu         0.2   0.2 0.402 0.0557
 8 mu         0.2   0.3 0.437 0.0627
 9 mu         0.2   0.4 0.491 0.0687
10 mu         0.2   0.5 0.500 0.0623
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.11        0.0540 0.0000299     37.8 
 2 mu         0.2      0.792       0.629  0.0197         4.19
 3 mu         0.3      0.911       0.883  0.220          1.69
 4 mu         0.4      0.945       0.952  0.504          1.50
 5 mu         0.5      0.977       0.974  0.622          1.30
 6 mu         0.6      0.997       0.995  0.680          1.39
 7 mu         0.7      1.02        1.03   0.770          1.28
 8 mu         0.8      1.05        1.05   0.721          1.47
 9 mu         0.9      1.05        1.02   0.219          2.17
10 mu_1       0.1      0.847       0.122  0.000105      23.5 
11 mu_1       0.2      0.821       0.755  0.0357         2.56
12 mu_1       0.3      0.924       0.934  0.249          1.65
13 mu_1       0.4      0.949       0.962  0.529          1.46
14 mu_1       0.5      0.981       0.970  0.609          1.31
15 mu_1       0.6      0.999       0.995  0.675          1.38
16 mu_1       0.7      1.03        1.02   0.780          1.29
17 mu_1       0.8      1.05        1.05   0.707          1.49
18 mu_1       0.9      1.05        1.01   0.205          2.24
19 mu_0       0.1      1.14        0.0467 0.0000216     39.4 
20 mu_0       0.2      0.785       0.597  0.0156         4.75
21 mu_0       0.3      0.906       0.892  0.208          1.79
22 mu_0       0.4      0.942       0.967  0.467          1.52
23 mu_0       0.5      0.974       0.961  0.606          1.30
24 mu_0       0.6      0.994       0.983  0.687          1.40
25 mu_0       0.7      1.02        1.03   0.745          1.26
26 mu_0       0.8      1.04        1.04   0.778          1.47
27 mu_0       0.9      1.04        1.03   0.347          1.87
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     10.2       6.92e-15  2.21e-32   1013.  
 2 mu         0.2      4.64      2.68e- 8  3.79e-21    337.  
 3 mu         0.3      2.00      1.18e- 4  1.09e-14     51.8 
 4 mu         0.4      1.13      1.23e- 2  3.30e-10     15.6 
 5 mu         0.5      0.866     2.13e- 1  7.65e- 7      5.58
 6 mu         0.6      0.983     7.73e- 1  6.78e- 5      4.22
 7 mu         0.7      1.16      9.26e- 1  4.56e- 8      4.29
 8 mu         0.8      1.24      4.86e- 1  1.20e-12      6.86
 9 mu         0.9      1.43      4.75e- 3  9.23e-22     40.9 
10 mu_1       0.1     10.3       4.44e-14  2.00e-31   1013.  
11 mu_1       0.2      3.21      8.76e- 8  1.71e-20    168.  
12 mu_1       0.3      1.75      2.48e- 4  3.29e-14     37.9 
13 mu_1       0.4      1.04      2.05e- 2  7.45e-10     13.8 
14 mu_1       0.5      0.871     2.90e- 1  1.38e- 6      5.48
15 mu_1       0.6      0.997     6.84e- 1  1.13e- 5      4.16
16 mu_1       0.7      1.18      9.74e- 1  6.51e- 9      4.36
17 mu_1       0.8      1.25      4.09e- 1  1.50e-13      6.94
18 mu_1       0.9      1.45      3.36e- 3  2.25e-22     43.0 
19 mu_0       0.1     10.2       1.88e-15  2.34e-33   1013.  
20 mu_0       0.2      4.99      1.11e- 8  4.51e-22    379.  
21 mu_0       0.3      2.10      6.22e- 5  1.48e-15     57.8 
22 mu_0       0.4      1.18      6.77e- 3  5.23e-11     16.8 
23 mu_0       0.5      0.862     1.52e- 1  1.28e- 7      5.70
24 mu_0       0.6      0.962     6.06e- 1  6.07e- 5      4.87
25 mu_0       0.7      1.13      9.37e- 1  1.37e- 7      4.34
26 mu_0       0.8      1.23      7.40e- 1  5.36e-12      6.57
27 mu_0       0.9      1.27      1.64e- 2  7.20e-21     22.1 
[1] "Total run time was 213.448 seconds"
