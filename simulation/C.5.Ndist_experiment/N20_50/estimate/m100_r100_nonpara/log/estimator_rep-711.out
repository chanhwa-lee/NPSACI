
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3514"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 45 46 
 3  1  3  4  1  2  6  5  5  4  1  1  4  3  8  5  1  3  5  1  3  1  8  2  1  2 
47 48 49 50 
 3  7  4  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02804 0.36826 0.61720 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
2017 1497 
[1] "treatment indicator table: "

   0    1 
1362 2152 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1733
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 20"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1781
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 86"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 196.214 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.302 0.0727
 2 mu         0.1   0.2 0.424 0.0842
 3 mu         0.1   0.3 0.492 0.0797
 4 mu         0.1   0.4 0.499 0.101 
 5 mu         0.1   0.5 0.582 0.109 
 6 mu         0.2   0.1 0.348 0.0528
 7 mu         0.2   0.2 0.440 0.0531
 8 mu         0.2   0.3 0.508 0.0379
 9 mu         0.2   0.4 0.557 0.0642
10 mu         0.2   0.5 0.621 0.0677
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      1.07         0.586 0.00000660     12.3 
 2 mu         0.2      1.15         1.10  0.0167          2.91
 3 mu         0.3      1.05         1.06  0.409           1.89
 4 mu         0.4      1.00         0.972 0.654           1.49
 5 mu         0.5      1.01         0.984 0.770           1.54
 6 mu         0.6      0.992        0.996 0.757           1.24
 7 mu         0.7      0.968        0.973 0.638           1.25
 8 mu         0.8      0.985        0.966 0.668           1.50
 9 mu         0.9      1.03         1.01  0.423           2.03
10 mu_1       0.1      1.10         0.868 0.0000244       6.03
11 mu_1       0.2      1.14         1.10  0.0319          2.56
12 mu_1       0.3      1.03         1.05  0.501           1.84
13 mu_1       0.4      1.00         0.960 0.681           1.48
14 mu_1       0.5      1.01         0.997 0.750           1.52
15 mu_1       0.6      0.990        0.997 0.757           1.23
16 mu_1       0.7      0.968        0.968 0.627           1.28
17 mu_1       0.8      0.986        0.961 0.672           1.50
18 mu_1       0.9      1.03         1.02  0.408           2.10
19 mu_0       0.1      1.07         0.548 0.00000463     13.0 
20 mu_0       0.2      1.16         1.08  0.0129          3.08
21 mu_0       0.3      1.06         1.05  0.352           1.92
22 mu_0       0.4      1.01         0.974 0.636           1.50
23 mu_0       0.5      1.01         0.981 0.751           1.56
24 mu_0       0.6      0.997        0.997 0.739           1.27
25 mu_0       0.7      0.969        0.973 0.664           1.19
26 mu_0       0.8      0.978        0.967 0.652           1.50
27 mu_0       0.9      1.03         1.02  0.518           1.88
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.252     2.71e-12  2.24e-39     14.8 
 2 mu         0.2      1.63      2.42e- 6  9.85e-26     89.9 
 3 mu         0.3      1.78      2.27e- 3  7.27e-18     70.9 
 4 mu         0.4      1.20      1.25e- 1  2.19e-12     18.2 
 5 mu         0.5      1.04      6.78e- 1  3.04e- 8      5.74
 6 mu         0.6      1.01      6.20e- 1  1.75e- 5      4.25
 7 mu         0.7      0.934     5.00e- 1  5.40e- 9      4.83
 8 mu         0.8      1.07      8.44e- 2  2.42e-14      6.99
 9 mu         0.9      1.40      1.26e- 4  5.14e-24     26.9 
10 mu_1       0.1      0.557     1.84e-11  2.06e-38     34.2 
11 mu_1       0.2      1.95      7.06e- 6  4.53e-25    104.  
12 mu_1       0.3      1.62      4.58e- 3  2.23e-17     54.5 
13 mu_1       0.4      1.10      1.57e- 1  5.05e-12     10.5 
14 mu_1       0.5      1.03      5.35e- 1  5.59e- 8      5.06
15 mu_1       0.6      1.00      6.91e- 1  7.14e- 6      4.21
16 mu_1       0.7      0.936     4.67e- 1  1.89e- 9      5.18
17 mu_1       0.8      1.09      6.42e- 2  7.38e-15      7.44
18 mu_1       0.9      1.40      8.80e- 5  1.40e-24     27.4 
19 mu_0       0.1      0.218     1.23e-12  1.99e-40     12.7 
20 mu_0       0.2      1.55      1.21e- 6  9.85e-27     86.4 
21 mu_0       0.3      1.84      1.38e- 3  8.31e-19     77.9 
22 mu_0       0.4      1.27      7.99e- 2  2.93e-13     23.4 
23 mu_0       0.5      1.05      5.79e- 1  4.86e- 9      6.41
24 mu_0       0.6      1.03      5.07e- 1  1.09e- 5      4.64
25 mu_0       0.7      0.930     4.90e- 1  1.36e- 8      4.75
26 mu_0       0.8      1.01      1.65e- 1  9.13e-14      6.14
27 mu_0       0.9      1.43      4.32e- 4  3.88e-23     21.5 
[1] "Total run time was 199.341 seconds"
