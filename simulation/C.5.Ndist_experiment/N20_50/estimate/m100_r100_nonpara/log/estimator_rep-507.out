
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3453"
[1] "cluster size dist'n: "

20 21 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 43 44 45 46 47 
 2  5  3  3  5  2  5  2  5  5  2  5  6  4  4  3  2  4  5  3  3  3  1  1  4  2 
48 49 50 
 2  6  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02423 0.31623 0.58344 0.98638 6.00000 
[1] "event indicator table: "

   0    1 
2044 1409 
[1] "treatment indicator table: "

   0    1 
1334 2119 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1782
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 50"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1671
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 10"
[1] "     Cluster: 14"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 95"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 235.417 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.423 0.101 
 2 mu         0.1   0.2 0.546 0.117 
 3 mu         0.1   0.3 0.567 0.115 
 4 mu         0.1   0.4 0.614 0.125 
 5 mu         0.1   0.5 0.673 0.133 
 6 mu         0.2   0.1 0.341 0.0566
 7 mu         0.2   0.2 0.462 0.0492
 8 mu         0.2   0.3 0.488 0.0465
 9 mu         0.2   0.4 0.536 0.0439
10 mu         0.2   0.5 0.594 0.0485
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      1.05         0.534 0.0000122      20.6 
 2 mu         0.2      0.972        0.949 0.0136          3.91
 3 mu         0.3      1.00         1.01  0.219           2.34
 4 mu         0.4      0.987        0.984 0.577           1.54
 5 mu         0.5      0.994        0.999 0.751           1.27
 6 mu         0.6      1.00         1.01  0.793           1.22
 7 mu         0.7      0.997        0.991 0.714           1.30
 8 mu         0.8      0.999        0.987 0.579           1.47
 9 mu         0.9      0.974        0.989 0.151           1.83
10 mu_1       0.1      0.998        0.782 0.0000444      17.2 
11 mu_1       0.2      0.991        0.982 0.0254          3.14
12 mu_1       0.3      1.00         1.02  0.285           2.27
13 mu_1       0.4      0.986        0.979 0.622           1.45
14 mu_1       0.5      0.996        0.997 0.755           1.25
15 mu_1       0.6      1.00         1.01  0.780           1.24
16 mu_1       0.7      0.997        0.993 0.681           1.31
17 mu_1       0.8      0.999        0.991 0.554           1.47
18 mu_1       0.9      0.972        0.985 0.137           1.87
19 mu_0       0.1      1.06         0.501 0.00000864     20.9 
20 mu_0       0.2      0.967        0.948 0.0107          4.38
21 mu_0       0.3      1.01         1.01  0.191           2.37
22 mu_0       0.4      0.988        0.987 0.547           1.59
23 mu_0       0.5      0.992        1.00  0.747           1.30
24 mu_0       0.6      1.00         0.993 0.791           1.23
25 mu_0       0.7      0.997        0.998 0.736           1.29
26 mu_0       0.8      0.999        0.994 0.523           1.45
27 mu_0       0.9      0.987        0.979 0.272           1.58
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.879     3.56e-13  4.21e-33     41.2 
 2 mu         0.2      2.18      3.02e- 7  1.44e-21     79.5 
 3 mu         0.3      2.05      5.19e- 4  6.24e-15     59.4 
 4 mu         0.4      1.17      2.81e- 2  1.90e-10     17.5 
 5 mu         0.5      0.841     2.45e- 1  1.53e- 7      5.46
 6 mu         0.6      0.900     3.09e- 1  1.05e- 7      5.46
 7 mu         0.7      1.13      6.48e- 1  1.47e-11      6.67
 8 mu         0.8      1.22      3.46e- 1  3.88e-17      8.35
 9 mu         0.9      1.39      3.07e- 3  7.24e-27     21.4 
10 mu_1       0.1      1.05      2.83e-12  3.82e-32     38.6 
11 mu_1       0.2      2.47      9.29e- 7  6.55e-21     91.7 
12 mu_1       0.3      1.84      1.17e- 3  1.89e-14     49.5 
13 mu_1       0.4      1.07      4.61e- 2  4.74e-10     16.4 
14 mu_1       0.5      0.831     2.44e- 1  3.06e- 7      5.18
15 mu_1       0.6      0.930     3.81e- 1  1.90e- 8      5.57
16 mu_1       0.7      1.14      5.48e- 1  2.27e-12      7.09
17 mu_1       0.8      1.22      2.95e- 1  5.24e-18      8.57
18 mu_1       0.9      1.39      2.22e- 3  8.69e-28     21.7 
19 mu_0       0.1      0.860     8.17e-14  0            41.5 
20 mu_0       0.2      2.10      1.45e- 7  0            76.4 
21 mu_0       0.3      2.14      2.42e- 4  0            63.7 
22 mu_0       0.4      1.23      2.25e- 2  0            18.2 
23 mu_0       0.5      0.850     2.24e- 1  0             6.50
24 mu_0       0.6      0.854     2.94e- 1  0             5.29
25 mu_0       0.7      1.09      5.55e- 1  0             5.70
26 mu_0       0.8      1.21      4.69e- 1  0             7.46
27 mu_0       0.9      1.37      9.15e- 3  0            18.9 
[1] "Total run time was 240.241 seconds"
