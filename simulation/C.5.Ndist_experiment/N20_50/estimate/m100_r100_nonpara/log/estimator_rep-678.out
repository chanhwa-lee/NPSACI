
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3344"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 4  2  2  4  3  3  9  2  6  6  4  2  3  1  5  4  2  6  3  5  3  2  2  1  1  4 
46 47 48 49 50 
 1  3  2  1  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02677 0.32341 0.59808 1.00000 6.52050 
[1] "event indicator table: "

   0    1 
1961 1383 
[1] "treatment indicator table: "

   0    1 
1328 2016 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1687
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 21"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 49"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1657
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 205.512 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.382 0.0554
 2 mu         0.1   0.2 0.477 0.0558
 3 mu         0.1   0.3 0.576 0.0627
 4 mu         0.1   0.4 0.616 0.0612
 5 mu         0.1   0.5 0.653 0.0653
 6 mu         0.2   0.1 0.337 0.0456
 7 mu         0.2   0.2 0.417 0.0461
 8 mu         0.2   0.3 0.490 0.0423
 9 mu         0.2   0.4 0.531 0.0422
10 mu         0.2   0.5 0.569 0.0426
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.07         0.890   0.00215      4.82
 2 mu         0.2      1.01         0.993   0.216        2.28
 3 mu         0.3      1.00         0.994   0.490        1.90
 4 mu         0.4      1.02         0.999   0.710        1.55
 5 mu         0.5      1.00         0.988   0.683        1.42
 6 mu         0.6      0.996        0.989   0.704        1.27
 7 mu         0.7      0.993        0.988   0.659        1.29
 8 mu         0.8      0.983        0.968   0.606        1.41
 9 mu         0.9      1.01         0.949   0.440        1.91
10 mu_1       0.1      1.06         0.923   0.00588      4.78
11 mu_1       0.2      1.00         0.970   0.292        2.00
12 mu_1       0.3      1.00         0.999   0.505        1.80
13 mu_1       0.4      1.02         0.989   0.712        1.55
14 mu_1       0.5      1.00         0.994   0.678        1.40
15 mu_1       0.6      0.996        0.995   0.717        1.26
16 mu_1       0.7      0.991        0.988   0.655        1.30
17 mu_1       0.8      0.983        0.979   0.612        1.44
18 mu_1       0.9      1.01         0.950   0.424        1.92
19 mu_0       0.1      1.07         0.863   0.00173      5.31
20 mu_0       0.2      1.01         0.996   0.197        2.35
21 mu_0       0.3      1.00         0.990   0.483        1.94
22 mu_0       0.4      1.01         0.998   0.683        1.56
23 mu_0       0.5      1.00         0.991   0.689        1.44
24 mu_0       0.6      0.996        0.993   0.683        1.28
25 mu_0       0.7      0.996        0.992   0.668        1.27
26 mu_0       0.8      0.983        0.985   0.582        1.42
27 mu_0       0.9      0.988        0.977   0.405        1.83
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.151     1.14e-11  1.60e-43      9.57
 2 mu         0.2      1.20      2.52e- 6  3.55e-29     24.8 
 3 mu         0.3      1.47      2.14e- 3  7.71e-21     27.3 
 4 mu         0.4      1.13      8.53e- 2  5.63e-15     11.5 
 5 mu         0.5      0.996     2.95e- 1  1.75e-10      8.51
 6 mu         0.6      1.09      6.08e- 1  2.96e- 7      9.18
 7 mu         0.7      1.24      7.50e- 1  1.36e-11      6.84
 8 mu         0.8      1.34      1.86e- 1  5.38e-18      8.78
 9 mu         0.9      1.22      5.61e- 4  2.51e-29     24.0 
10 mu_1       0.1      0.288     6.87e-11  1.53e-42     16.3 
11 mu_1       0.2      1.40      8.30e- 6  1.71e-28     26.9 
12 mu_1       0.3      1.47      4.42e- 3  2.47e-20     27.3 
13 mu_1       0.4      1.08      1.08e- 1  1.35e-14     10.2 
14 mu_1       0.5      1.01      2.96e- 1  3.37e-10      9.45
15 mu_1       0.6      1.10      6.01e- 1  8.40e- 8      8.50
16 mu_1       0.7      1.26      6.28e- 1  3.31e-12      6.72
17 mu_1       0.8      1.35      1.54e- 1  1.14e-18      9.36
18 mu_1       0.9      1.21      3.85e- 4  4.75e-30     24.8 
19 mu_0       0.1      0.136     5.06e-12  7.10e-45      8.83
20 mu_0       0.2      1.15      1.07e- 6  1.78e-30     25.7 
21 mu_0       0.3      1.48      1.13e- 3  4.41e-22     27.3 
22 mu_0       0.4      1.16      6.47e- 2  3.75e-16     13.4 
23 mu_0       0.5      0.984     2.48e- 1  1.40e-11      7.57
24 mu_0       0.6      1.08      4.30e- 1  7.09e- 8     10.2 
25 mu_0       0.7      1.20      6.80e- 1  3.77e-11      7.13
26 mu_0       0.8      1.32      3.56e- 1  2.23e-17      7.14
27 mu_0       0.9      1.31      2.15e- 3  2.08e-28     17.1 
[1] "Total run time was 209.034 seconds"
