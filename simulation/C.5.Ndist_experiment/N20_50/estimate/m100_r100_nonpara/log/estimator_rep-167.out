
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3478"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 38 39 40 42 43 44 45 46 47 
 5  1  1  4  4  5  1  4  3  5  2  6  5  2  3  3  5  3  3  5  2  5  5  3  4  2 
48 49 50 
 5  3  1 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.05019 0.38446 0.64332 1.00000 5.60087 
[1] "event indicator table: "

   0    1 
2033 1445 
[1] "treatment indicator table: "

   0    1 
1255 2223 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1775
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1703
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 65"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 83"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 161.087 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.454 0.119 
 2 mu         0.1   0.2 0.606 0.140 
 3 mu         0.1   0.3 0.645 0.141 
 4 mu         0.1   0.4 0.679 0.122 
 5 mu         0.1   0.5 0.729 0.129 
 6 mu         0.2   0.1 0.369 0.0607
 7 mu         0.2   0.2 0.505 0.0731
 8 mu         0.2   0.3 0.539 0.0724
 9 mu         0.2   0.4 0.586 0.0645
10 mu         0.2   0.5 0.626 0.0703
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.947        0.860   0.0103       3.41
 2 mu         0.2      1.01         1.04    0.218        1.92
 3 mu         0.3      1.01         0.999   0.494        1.65
 4 mu         0.4      1.01         1.02    0.618        1.35
 5 mu         0.5      1.00         0.999   0.692        1.33
 6 mu         0.6      1.00         1.01    0.735        1.31
 7 mu         0.7      1.01         1.01    0.558        1.23
 8 mu         0.8      1.00         0.999   0.699        1.38
 9 mu         0.9      1.01         0.999   0.361        1.53
10 mu_1       0.1      0.957        0.903   0.0224       2.65
11 mu_1       0.2      1.01         1.03    0.275        1.85
12 mu_1       0.3      1.01         0.996   0.539        1.64
13 mu_1       0.4      1.00         1.01    0.635        1.33
14 mu_1       0.5      1.00         0.987   0.677        1.33
15 mu_1       0.6      1.00         1.00    0.719        1.30
16 mu_1       0.7      1.01         1.02    0.565        1.25
17 mu_1       0.8      1.00         0.993   0.687        1.39
18 mu_1       0.9      1.02         0.999   0.354        1.52
19 mu_0       0.1      0.946        0.844   0.00892      3.50
20 mu_0       0.2      1.01         1.02    0.203        1.95
21 mu_0       0.3      1.01         0.995   0.474        1.65
22 mu_0       0.4      1.01         1.02    0.607        1.39
23 mu_0       0.5      1.00         1.02    0.708        1.33
24 mu_0       0.6      1.00         0.998   0.704        1.34
25 mu_0       0.7      1.01         1.01    0.541        1.21
26 mu_0       0.8      0.999        0.987   0.727        1.34
27 mu_0       0.9      1.01         0.986   0.425        1.61
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.403     1.68e-13  4.69e-44     29.3 
 2 mu         0.2      0.933     4.11e- 7  5.87e-30     19.4 
 3 mu         0.3      1.32      7.38e- 4  9.71e-22     17.2 
 4 mu         0.4      1.40      5.44e- 2  6.20e-16     12.9 
 5 mu         0.5      1.11      2.73e- 1  1.85e-11      6.58
 6 mu         0.6      1.10      3.85e- 1  2.52e- 8      7.47
 7 mu         0.7      1.20      7.47e- 1  8.51e-13      6.29
 8 mu         0.8      1.23      2.35e- 1  2.57e-19      8.92
 9 mu         0.9      1.23      6.18e- 3  9.49e-31     13.8 
10 mu_1       0.1      0.605     1.01e-12  4.60e-43     39.1 
11 mu_1       0.2      1.03      1.22e- 6  2.88e-29     18.7 
12 mu_1       0.3      1.40      1.49e- 3  3.17e-21     15.9 
13 mu_1       0.4      1.38      6.72e- 2  1.52e-15     12.1 
14 mu_1       0.5      1.08      2.90e- 1  3.63e-11      5.89
15 mu_1       0.6      1.10      3.59e- 1  5.60e- 9      7.64
16 mu_1       0.7      1.20      6.64e- 1  1.62e-13      6.38
17 mu_1       0.8      1.23      2.16e- 1  4.29e-20      9.21
18 mu_1       0.9      1.24      4.84e- 3  1.41e-31     14.4 
19 mu_0       0.1      0.380     7.49e-14  1.09e-45     28.2 
20 mu_0       0.2      0.909     2.09e- 7  1.53e-31     20.6 
21 mu_0       0.3      1.28      4.14e- 4  2.89e-23     17.7 
22 mu_0       0.4      1.42      3.21e- 2  2.15e-17     13.5 
23 mu_0       0.5      1.13      1.92e- 1  7.72e-13      7.27
24 mu_0       0.6      1.10      3.86e- 1  4.07e- 9      7.22
25 mu_0       0.7      1.19      8.37e- 1  2.46e-12      6.07
26 mu_0       0.8      1.24      2.40e- 1  1.12e-18      7.76
27 mu_0       0.9      1.19      1.82e- 2  8.22e-30      9.45
[1] "Total run time was 164.162 seconds"
