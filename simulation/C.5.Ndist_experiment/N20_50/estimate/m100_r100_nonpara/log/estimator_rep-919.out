
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3450"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 47 
 2  4  4  5  4  1  4  4  5  5  2  2  4  2  2  5  4  3  2  3  2  5  1  3  6  3 
48 49 50 
 5  3  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03988 0.35804 0.61631 1.00000 5.82397 
[1] "event indicator table: "

   0    1 
1995 1455 
[1] "treatment indicator table: "

   0    1 
1292 2158 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1707
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1743
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 210.137 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.332 0.0787
 2 mu         0.1   0.2 0.354 0.0729
 3 mu         0.1   0.3 0.431 0.0883
 4 mu         0.1   0.4 0.438 0.0919
 5 mu         0.1   0.5 0.427 0.0935
 6 mu         0.2   0.1 0.366 0.0491
 7 mu         0.2   0.2 0.414 0.0353
 8 mu         0.2   0.3 0.503 0.0574
 9 mu         0.2   0.4 0.525 0.0595
10 mu         0.2   0.5 0.530 0.0487
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      0.728        0.186 0.0000130       9.04
 2 mu         0.2      0.974        0.885 0.0158          3.49
 3 mu         0.3      0.978        0.906 0.165           2.31
 4 mu         0.4      0.961        0.973 0.371           1.72
 5 mu         0.5      0.972        0.983 0.650           1.57
 6 mu         0.6      0.986        0.990 0.753           1.33
 7 mu         0.7      1.00         1.01  0.765           1.33
 8 mu         0.8      1.02         1.01  0.713           1.50
 9 mu         0.9      0.981        0.983 0.396           1.64
10 mu_1       0.1      0.838        0.344 0.0000445       6.34
11 mu_1       0.2      0.996        0.955 0.0277          3.41
12 mu_1       0.3      0.977        0.937 0.160           2.11
13 mu_1       0.4      0.960        0.957 0.411           1.61
14 mu_1       0.5      0.974        0.977 0.699           1.59
15 mu_1       0.6      0.987        0.993 0.753           1.31
16 mu_1       0.7      1.01         1.00  0.744           1.33
17 mu_1       0.8      1.02         1.01  0.697           1.53
18 mu_1       0.9      0.978        0.976 0.391           1.68
19 mu_0       0.1      0.716        0.163 0.00000951      9.36
20 mu_0       0.2      0.969        0.854 0.0129          3.59
21 mu_0       0.3      0.978        0.881 0.167           2.40
22 mu_0       0.4      0.961        0.975 0.337           1.79
23 mu_0       0.5      0.971        0.983 0.593           1.54
24 mu_0       0.6      0.984        0.975 0.752           1.37
25 mu_0       0.7      0.998        1.00  0.770           1.32
26 mu_0       0.8      1.02         1.01  0.689           1.36
27 mu_0       0.9      1.01         1.01  0.440           1.83
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.223     1.80e-12  1.16e-34     15.3 
 2 mu         0.2      2.00      1.49e- 6  1.37e-22    140.  
 3 mu         0.3      1.33      1.35e- 3  2.00e-16     38.8 
 4 mu         0.4      1.11      9.31e- 2  4.71e-12     10.4 
 5 mu         0.5      1.35      5.34e- 1  1.16e- 8      8.87
 6 mu         0.6      1.26      9.75e- 1  6.86e- 6      6.93
 7 mu         0.7      1.04      5.89e- 1  3.54e-10      6.42
 8 mu         0.8      0.977     1.62e- 1  1.22e-16      6.44
 9 mu         0.9      0.982     3.62e- 4  3.60e-28     11.9 
10 mu_1       0.1      0.468     1.31e-11  1.01e-33     30.5 
11 mu_1       0.2      2.17      4.29e- 6  6.85e-22    140.  
12 mu_1       0.3      1.21      3.17e- 3  6.65e-16     25.9 
13 mu_1       0.4      1.14      1.43e- 1  1.18e-11      8.78
14 mu_1       0.5      1.37      5.82e- 1  2.32e- 8      9.43
15 mu_1       0.6      1.23      9.84e- 1  2.51e- 6      6.13
16 mu_1       0.7      1.03      5.54e- 1  1.01e-10      6.25
17 mu_1       0.8      0.987     1.30e- 1  3.05e-17      6.93
18 mu_1       0.9      0.976     2.33e- 4  8.00e-29     12.0 
19 mu_0       0.1      0.196     5.40e-13  0            13.6 
20 mu_0       0.2      1.96      7.87e- 7  0           140.  
21 mu_0       0.3      1.38      6.42e- 4  0            44.3 
22 mu_0       0.4      1.09      6.14e- 2  0            12.2 
23 mu_0       0.5      1.33      5.06e- 1  0             9.20
24 mu_0       0.6      1.30      8.43e- 1  0             8.12
25 mu_0       0.7      1.08      6.31e- 1  0             6.83
26 mu_0       0.8      0.937     2.74e- 1  0             4.47
27 mu_0       0.9      1.03      1.22e- 3  0            11.2 
[1] "Total run time was 213.215 seconds"
