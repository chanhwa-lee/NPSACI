
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3505"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 37 38 39 41 42 43 44 45 46 47 
 4  1  1  5  3  4  2  6  3  3  4  1  6  4  2  5  4  6  1  4  4  4  5  4  3  3 
48 49 50 
 1  4  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04223 0.36815 0.63928 1.00000 8.00000 
[1] "event indicator table: "

   0    1 
2088 1417 
[1] "treatment indicator table: "

   0    1 
1206 2299 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1745
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 51"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 85"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1760
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 199.087 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.484 0.0753
 2 mu         0.1   0.2 0.540 0.0854
 3 mu         0.1   0.3 0.586 0.0902
 4 mu         0.1   0.4 0.678 0.115 
 5 mu         0.1   0.5 0.744 0.113 
 6 mu         0.2   0.1 0.426 0.0529
 7 mu         0.2   0.2 0.490 0.0545
 8 mu         0.2   0.3 0.537 0.0509
 9 mu         0.2   0.4 0.619 0.0745
10 mu         0.2   0.5 0.680 0.0702
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.19         0.752 0.0000215     11.1 
 2 mu         0.2      1.10         0.913 0.0284         4.35
 3 mu         0.3      1.01         0.979 0.246          2.25
 4 mu         0.4      1.01         1.01  0.401          1.92
 5 mu         0.5      1.00         1.01  0.514          1.56
 6 mu         0.6      1.01         1.00  0.677          1.29
 7 mu         0.7      1.00         0.997 0.782          1.30
 8 mu         0.8      0.997        0.987 0.582          1.38
 9 mu         0.9      0.995        0.989 0.406          1.53
10 mu_1       0.1      1.23         0.850 0.0000805      7.46
11 mu_1       0.2      1.06         0.942 0.0544         3.93
12 mu_1       0.3      1.00         0.978 0.229          2.11
13 mu_1       0.4      1.01         1.01  0.463          1.86
14 mu_1       0.5      1.00         1.02  0.514          1.48
15 mu_1       0.6      1.01         1.01  0.680          1.28
16 mu_1       0.7      0.999        0.993 0.779          1.31
17 mu_1       0.8      0.996        0.989 0.557          1.38
18 mu_1       0.9      0.995        0.999 0.403          1.54
19 mu_0       0.1      1.18         0.729 0.0000149     11.6 
20 mu_0       0.2      1.11         0.938 0.0219         4.45
21 mu_0       0.3      1.01         0.965 0.253          2.42
22 mu_0       0.4      1.01         0.998 0.360          1.97
23 mu_0       0.5      1.00         1.01  0.514          1.64
24 mu_0       0.6      1.01         1.00  0.667          1.31
25 mu_0       0.7      1.00         1.00  0.751          1.28
26 mu_0       0.8      0.998        0.984 0.655          1.37
27 mu_0       0.9      0.993        1.00  0.437          1.44
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       1.59     2.05e-15  5.14e-45    121.  
 2 mu         0.2       1.78     1.93e- 8  1.29e-30     89.1 
 3 mu         0.3       1.35     3.19e- 5  3.19e-22     32.5 
 4 mu         0.4       1.13     1.04e- 2  2.72e-16     12.4 
 5 mu         0.5       1.01     2.24e- 1  1.02e-11      9.71
 6 mu         0.6       1.16     3.19e- 1  5.13e- 8      7.24
 7 mu         0.7       1.19     7.68e- 1  1.09e- 9      7.56
 8 mu         0.8       1.37     4.80e- 1  4.95e-15      8.69
 9 mu         0.9       1.14     1.09e- 2  2.08e-24     11.8 
10 mu_1       0.1       2.22     1.43e-14  5.04e-44    163.  
11 mu_1       0.2       1.54     6.82e- 8  6.30e-30     60.2 
12 mu_1       0.3       1.33     7.81e- 5  1.04e-21     30.4 
13 mu_1       0.4       1.09     1.68e- 2  6.65e-16     12.4 
14 mu_1       0.5       1.02     2.06e- 1  1.99e-11      8.71
15 mu_1       0.6       1.17     2.88e- 1  8.38e- 8      6.98
16 mu_1       0.7       1.20     8.21e- 1  2.11e-10      7.66
17 mu_1       0.8       1.38     4.85e- 1  8.36e-16      9.00
18 mu_1       0.9       1.13     8.14e- 3  3.12e-25     11.7 
19 mu_0       0.1       1.52     7.22e-16  0           116.  
20 mu_0       0.2       1.84     7.21e- 9  0            96.3 
21 mu_0       0.3       1.36     1.21e- 5  0            33.5 
22 mu_0       0.4       1.15     6.15e- 3  0            12.4 
23 mu_0       0.5       1.01     1.52e- 1  0            10.7 
24 mu_0       0.6       1.15     2.52e- 1  0             7.65
25 mu_0       0.7       1.17     6.21e- 1  0             7.31
26 mu_0       0.8       1.33     4.79e- 1  0             7.45
27 mu_0       0.9       1.24     2.00e- 2  0            12.0 
[1] "Total run time was 202.09 seconds"
