
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3442"
[1] "cluster size dist'n: "

20 21 22 23 24 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 
 3  3  6  5  3  3  4  4  3  3  3  4  6  4  1  3  3  3  2  1  3  3  6  3  3  6 
47 48 49 50 
 3  3  1  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02804 0.33788 0.60105 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
1986 1456 
[1] "treatment indicator table: "

   0    1 
1302 2140 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1706
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 35"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 56"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1736
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 200.905 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.590 0.122 
 2 mu         0.1   0.2 0.722 0.141 
 3 mu         0.1   0.3 0.823 0.162 
 4 mu         0.1   0.4 0.878 0.171 
 5 mu         0.1   0.5 0.968 0.196 
 6 mu         0.2   0.1 0.397 0.0258
 7 mu         0.2   0.2 0.500 0.0396
 8 mu         0.2   0.3 0.587 0.0501
 9 mu         0.2   0.4 0.622 0.0467
10 mu         0.2   0.5 0.694 0.0592
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.48         0.625   0.00231     22.8 
 2 mu         0.2      1.08         0.964   0.150        2.65
 3 mu         0.3      0.994        0.955   0.409        2.12
 4 mu         0.4      0.975        0.963   0.557        1.50
 5 mu         0.5      1.00         1.00    0.696        1.33
 6 mu         0.6      1.03         1.03    0.709        1.36
 7 mu         0.7      1.01         0.995   0.815        1.32
 8 mu         0.8      1.00         1.01    0.684        1.41
 9 mu         0.9      0.961        0.934   0.230        1.96
10 mu_1       0.1      1.23         0.899   0.00623     11.6 
11 mu_1       0.2      1.05         0.981   0.223        2.39
12 mu_1       0.3      0.984        0.954   0.406        2.05
13 mu_1       0.4      0.977        0.970   0.590        1.49
14 mu_1       0.5      1.01         1.01    0.661        1.30
15 mu_1       0.6      1.03         1.03    0.731        1.37
16 mu_1       0.7      1.01         0.998   0.807        1.31
17 mu_1       0.8      1.00         1.02    0.664        1.42
18 mu_1       0.9      0.959        0.928   0.216        1.99
19 mu_0       0.1      1.51         0.582   0.00188     24.5 
20 mu_0       0.2      1.09         0.972   0.131        2.87
21 mu_0       0.3      0.998        0.962   0.402        2.16
22 mu_0       0.4      0.973        0.954   0.535        1.50
23 mu_0       0.5      0.999        0.993   0.717        1.37
24 mu_0       0.6      1.03         1.02    0.675        1.36
25 mu_0       0.7      1.02         1.00    0.804        1.32
26 mu_0       0.8      1.00         1.01    0.720        1.39
27 mu_0       0.9      0.977        0.989   0.284        1.72
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.0830     1.70e-12  5.51e-36      4.21
 2 mu         0.2     1.09       8.76e- 7  2.69e-23     39.9 
 3 mu         0.3     1.46       1.56e- 3  5.15e-16     24.3 
 4 mu         0.4     1.27       7.30e- 2  5.61e-11     11.0 
 5 mu         0.5     1.08       4.02e- 1  3.31e- 7      9.07
 6 mu         0.6     0.952      6.55e- 1  2.07e- 5      4.41
 7 mu         0.7     1.03       5.20e- 1  3.08e- 9      5.06
 8 mu         0.8     1.19       2.09e- 1  5.35e-15      6.81
 9 mu         0.9     1.30       3.16e- 4  2.53e-25     25.5 
10 mu_1       0.1     0.196      1.01e-11  4.93e-35      9.36
11 mu_1       0.2     1.36       2.67e- 6  1.20e-22     44.3 
12 mu_1       0.3     1.47       2.95e- 3  1.54e-15     18.0 
13 mu_1       0.4     1.21       1.10e- 1  1.26e-10      9.19
14 mu_1       0.5     1.04       3.43e- 1  5.94e- 7      8.85
15 mu_1       0.6     0.944      5.52e- 1  7.50e- 6      4.41
16 mu_1       0.7     1.04       4.57e- 1  9.55e-10      5.42
17 mu_1       0.8     1.20       1.72e- 1  1.45e-15      7.10
18 mu_1       0.9     1.31       2.10e- 4  6.11e-26     27.3 
19 mu_0       0.1     0.0704     7.56e-13  6.37e-37      3.64
20 mu_0       0.2     1.02       4.27e- 7  3.50e-24     38.7 
21 mu_0       0.3     1.46       9.60e- 4  7.66e-17     27.0 
22 mu_0       0.4     1.30       4.16e- 2  9.74e-12     12.3 
23 mu_0       0.5     1.12       3.77e- 1  6.90e- 8      9.29
24 mu_0       0.6     0.965      5.42e- 1  4.05e- 5      4.41
25 mu_0       0.7     0.988      5.49e- 1  8.02e- 9      4.22
26 mu_0       0.8     1.15       3.25e- 1  2.09e-14      7.57
27 mu_0       0.9     1.23       1.19e- 3  1.98e-24     12.7 
[1] "Total run time was 204.12 seconds"
