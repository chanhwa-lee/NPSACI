
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3551"
[1] "cluster size dist'n: "

20 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 46 47 
 3  4  3  5  2  3  2  3  3  5  1  3  5  4  1  2  3  5  6  3  4  5  4  7  3  5 
48 49 50 
 2  2  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03027 0.33087 0.59683 1.00000 5.36688 
[1] "event indicator table: "

   0    1 
2079 1472 
[1] "treatment indicator table: "

   0    1 
1370 2181 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1792
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 21"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1759
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 7"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 51"
[1] "     Cluster: 55"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 235.773 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.493 0.117 
 2 mu         0.1   0.2 0.532 0.107 
 3 mu         0.1   0.3 0.548 0.103 
 4 mu         0.1   0.4 0.575 0.102 
 5 mu         0.1   0.5 0.589 0.104 
 6 mu         0.2   0.1 0.404 0.0438
 7 mu         0.2   0.2 0.475 0.0405
 8 mu         0.2   0.3 0.502 0.0370
 9 mu         0.2   0.4 0.541 0.0340
10 mu         0.2   0.5 0.567 0.0344
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.889        0.482 0.0000193     10.5 
 2 mu         0.2      0.947        0.948 0.0413         2.35
 3 mu         0.3      1.03         1.02  0.274          1.89
 4 mu         0.4      1.02         1.01  0.629          1.60
 5 mu         0.5      1.02         0.999 0.696          1.45
 6 mu         0.6      1.01         1.01  0.651          1.32
 7 mu         0.7      0.991        0.973 0.695          1.32
 8 mu         0.8      0.994        0.991 0.489          1.71
 9 mu         0.9      1.05         1.02  0.308          2.30
10 mu_1       0.1      0.795        0.732 0.0000665      3.39
11 mu_1       0.2      0.986        1.02  0.0721         2.44
12 mu_1       0.3      1.03         1.00  0.328          1.90
13 mu_1       0.4      1.02         1.01  0.612          1.57
14 mu_1       0.5      1.02         0.990 0.683          1.42
15 mu_1       0.6      1.01         1.01  0.648          1.29
16 mu_1       0.7      0.990        0.969 0.695          1.34
17 mu_1       0.8      0.996        0.983 0.484          1.75
18 mu_1       0.9      1.05         1.01  0.319          2.37
19 mu_0       0.1      0.899        0.444 0.0000141     11.5 
20 mu_0       0.2      0.938        0.936 0.0336         2.33
21 mu_0       0.3      1.03         1.04  0.250          1.89
22 mu_0       0.4      1.02         0.995 0.631          1.62
23 mu_0       0.5      1.02         1.00  0.699          1.49
24 mu_0       0.6      1.01         1.01  0.657          1.37
25 mu_0       0.7      0.994        0.978 0.694          1.31
26 mu_0       0.8      0.988        0.986 0.509          1.56
27 mu_0       0.9      1.03         0.996 0.210          2.02
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.0998     1.50e-12  2.75e-33      7.79
 2 mu         0.2     0.758      7.86e- 7  5.31e-22     32.3 
 3 mu         0.3     1.07       8.87e- 4  1.75e-15     14.4 
 4 mu         0.4     0.959      5.84e- 2  6.15e-11      9.83
 5 mu         0.5     1.10       4.70e- 1  1.71e- 7      9.57
 6 mu         0.6     1.33       8.44e- 1  6.17e- 6      9.11
 7 mu         0.7     1.18       7.27e- 1  8.98e-10      8.24
 8 mu         0.8     1.37       9.67e- 2  1.79e-15     10.2 
 9 mu         0.9     1.22       1.61e- 4  1.34e-25     17.8 
10 mu_1       0.1     0.196      9.53e-12  2.55e-32     14.5 
11 mu_1       0.2     0.897      2.41e- 6  2.46e-21     30.1 
12 mu_1       0.3     1.10       1.85e- 3  5.40e-15     15.5 
13 mu_1       0.4     0.943      9.35e- 2  1.43e-10      7.95
14 mu_1       0.5     1.14       5.30e- 1  3.18e- 7     10.4 
15 mu_1       0.6     1.33       8.98e- 1  1.91e- 6      8.54
16 mu_1       0.7     1.18       6.44e- 1  2.39e-10      7.76
17 mu_1       0.8     1.38       7.17e- 2  4.17e-16     10.4 
18 mu_1       0.9     1.21       1.14e- 4  2.77e-26     17.8 
19 mu_0       0.1     0.0891     6.07e-13  0             7.05
20 mu_0       0.2     0.724      4.15e- 7  0            32.9 
21 mu_0       0.3     1.06       4.96e- 4  0            13.9 
22 mu_0       0.4     0.970      3.68e- 2  0            11.1 
23 mu_0       0.5     1.06       4.68e- 1  0             8.77
24 mu_0       0.6     1.33       8.18e- 1  0             9.96
25 mu_0       0.7     1.19       6.80e- 1  0             9.36
26 mu_0       0.8     1.30       1.94e- 1  0             9.49
27 mu_0       0.9     1.37       5.07e- 4  0            18.3 
[1] "Total run time was 240.209 seconds"
