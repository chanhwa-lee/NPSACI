
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3449"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 2  4  3  6  4  3  6  2  2  3  4  2  3  1  3  3  5  2  4  3  4  2  5  5  4  4 
46 47 48 49 50 
 1  1  3  4  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.05131 0.37182 0.63617 1.00000 5.62840 
[1] "event indicator table: "

   0    1 
1997 1452 
[1] "treatment indicator table: "

   0    1 
1332 2117 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1708
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1741
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 10"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 258.818 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.656 0.234 
 2 mu         0.1   0.2 0.774 0.269 
 3 mu         0.1   0.3 0.835 0.292 
 4 mu         0.1   0.4 0.889 0.301 
 5 mu         0.1   0.5 0.967 0.331 
 6 mu         0.2   0.1 0.390 0.0617
 7 mu         0.2   0.2 0.469 0.0614
 8 mu         0.2   0.3 0.512 0.0682
 9 mu         0.2   0.4 0.571 0.0684
10 mu         0.2   0.5 0.680 0.0673
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      1.34         0.615 0.00000274     46.8 
 2 mu         0.2      1.08         0.949 0.00795         4.05
 3 mu         0.3      1.04         1.02  0.215           2.27
 4 mu         0.4      1.03         1.00  0.488           1.61
 5 mu         0.5      1.00         0.986 0.604           1.33
 6 mu         0.6      0.987        0.997 0.613           1.22
 7 mu         0.7      0.990        0.978 0.708           1.21
 8 mu         0.8      1.01         0.989 0.579           1.47
 9 mu         0.9      1.02         0.982 0.486           1.65
10 mu_1       0.1      1.21         0.745 0.0000106      20.8 
11 mu_1       0.2      1.06         0.966 0.0157          4.09
12 mu_1       0.3      1.04         1.03  0.292           1.98
13 mu_1       0.4      1.03         1.01  0.519           1.53
14 mu_1       0.5      0.998        0.986 0.605           1.34
15 mu_1       0.6      0.987        0.992 0.633           1.24
16 mu_1       0.7      0.991        0.993 0.706           1.24
17 mu_1       0.8      1.01         0.990 0.566           1.49
18 mu_1       0.9      1.02         0.981 0.464           1.65
19 mu_0       0.1      1.35         0.577 0.00000186     49.7 
20 mu_0       0.2      1.08         0.939 0.00600         4.04
21 mu_0       0.3      1.04         1.01  0.182           2.40
22 mu_0       0.4      1.03         1.01  0.467           1.67
23 mu_0       0.5      1.01         0.986 0.603           1.34
24 mu_0       0.6      0.988        0.996 0.584           1.24
25 mu_0       0.7      0.987        0.979 0.711           1.24
26 mu_0       0.8      1.01         0.987 0.632           1.47
27 mu_0       0.9      1.01         1.00  0.443           1.62
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     31.4       2.00e-12  4.40e-36   3005.  
 2 mu         0.2      3.31      8.03e- 7  2.15e-23     99.0 
 3 mu         0.3      1.80      1.40e- 3  4.11e-16     27.8 
 4 mu         0.4      1.40      7.51e- 2  4.49e-11     18.3 
 5 mu         0.5      1.25      5.64e- 1  2.65e- 7      6.09
 6 mu         0.6      1.33      5.76e- 1  3.63e- 8     11.6 
 7 mu         0.7      1.09      8.46e- 1  4.86e-12      9.73
 8 mu         0.8      1.02      1.74e- 1  1.69e-17      4.90
 9 mu         0.9      0.617     4.46e- 4  2.43e-28      8.04
10 mu_1       0.1      2.01      4.44e-12  0           166.  
11 mu_1       0.2      2.44      1.77e- 6  0            94.7 
12 mu_1       0.3      1.72      2.58e- 3  0            25.7 
13 mu_1       0.4      1.33      1.14e- 1  0            16.7 
14 mu_1       0.5      1.25      6.48e- 1  0             5.98
15 mu_1       0.6      1.33      6.30e- 1  0            12.4 
16 mu_1       0.7      1.07      7.94e- 1  0             8.91
17 mu_1       0.8      1.01      1.35e- 1  0             5.25
18 mu_1       0.9      0.593     3.10e- 4  0             8.00
19 mu_0       0.1     34.7       9.21e-13  5.10e-37   3339.  
20 mu_0       0.2      3.52      4.06e- 7  2.80e-24    107.  
21 mu_0       0.3      1.83      7.16e- 4  6.12e-17     29.9 
22 mu_0       0.4      1.45      4.42e- 2  7.79e-12     19.4 
23 mu_0       0.5      1.24      3.91e- 1  5.52e- 8      6.28
24 mu_0       0.6      1.34      6.38e- 1  9.08e- 8     10.4 
25 mu_0       0.7      1.13      6.94e- 1  1.62e-11     11.6 
26 mu_0       0.8      1.04      3.18e- 1  8.46e-17      4.84
27 mu_0       0.9      0.836     1.68e- 3  1.94e-27      8.37
[1] "Total run time was 262.476 seconds"
