
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3422"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 28 29 30 31 32 33 35 36 37 38 39 40 41 42 43 44 45 46 47 
 6  1  2  5  5  3  5  4  5  3  2  4  6  4  1  3  3  1  8  6  2  3  3  2  3  2 
48 49 50 
 5  1  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03289 0.38739 0.62444 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
2031 1391 
[1] "treatment indicator table: "

   0    1 
1242 2180 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1663
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 30"
[1] "     Cluster: 34"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1759
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 6"
[1] "     Cluster: 10"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 65"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 186.389 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.453 0.102 
 2 mu         0.1   0.2 0.574 0.147 
 3 mu         0.1   0.3 0.620 0.129 
 4 mu         0.1   0.4 0.723 0.113 
 5 mu         0.1   0.5 0.758 0.119 
 6 mu         0.2   0.1 0.356 0.0806
 7 mu         0.2   0.2 0.448 0.117 
 8 mu         0.2   0.3 0.492 0.0969
 9 mu         0.2   0.4 0.567 0.0734
10 mu         0.2   0.5 0.600 0.0774
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.14         0.610  0.000146     11.2 
 2 mu         0.2      0.974        0.917  0.0783        2.94
 3 mu         0.3      0.949        0.952  0.209         1.80
 4 mu         0.4      0.971        0.963  0.491         1.59
 5 mu         0.5      1.00         1.00   0.658         1.46
 6 mu         0.6      1.00         1.01   0.692         1.33
 7 mu         0.7      1.01         1.01   0.689         1.36
 8 mu         0.8      1.01         1.03   0.605         1.36
 9 mu         0.9      1.02         1.04   0.373         1.65
10 mu_1       0.1      1.14         0.782  0.000443     10.0 
11 mu_1       0.2      0.956        0.886  0.133         2.26
12 mu_1       0.3      0.951        0.963  0.218         1.68
13 mu_1       0.4      0.978        0.965  0.515         1.59
14 mu_1       0.5      1.00         1.00   0.671         1.42
15 mu_1       0.6      1.00         1.02   0.683         1.33
16 mu_1       0.7      1.01         1.01   0.697         1.35
17 mu_1       0.8      1.01         1.03   0.589         1.38
18 mu_1       0.9      1.02         1.04   0.369         1.68
19 mu_0       0.1      1.14         0.574  0.000113     11.3 
20 mu_0       0.2      0.979        0.944  0.0646        3.12
21 mu_0       0.3      0.949        0.955  0.190         1.85
22 mu_0       0.4      0.967        0.947  0.465         1.59
23 mu_0       0.5      1.00         0.989  0.645         1.49
24 mu_0       0.6      1.00         1.01   0.702         1.32
25 mu_0       0.7      1.01         1.01   0.669         1.38
26 mu_0       0.8      1.01         1.01   0.648         1.29
27 mu_0       0.9      1.01         1.03   0.407         1.46
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.02      9.32e-13  3.08e-38     60.4 
 2 mu         0.2      1.36      8.82e- 7  3.38e-25     42.6 
 3 mu         0.3      0.906     6.22e- 4  1.11e-17     14.9 
 4 mu         0.4      1.02      5.39e- 2  1.88e-12     18.0 
 5 mu         0.5      1.13      2.64e- 1  1.67e- 8     14.4 
 6 mu         0.6      1.14      5.06e- 1  5.56e- 6     11.2 
 7 mu         0.7      1.07      6.15e- 1  1.23e- 9      8.43
 8 mu         0.8      1.05      2.63e- 1  4.85e-15      5.61
 9 mu         0.9      0.985     2.03e- 3  1.29e-24     11.8 
10 mu_1       0.1      1.48      5.60e-12  2.82e-37     77.9 
11 mu_1       0.2      1.21      2.84e- 6  1.55e-24     35.5 
12 mu_1       0.3      0.865     1.44e- 3  3.39e-17     12.4 
13 mu_1       0.4      1.04      8.30e- 2  4.31e-12     17.8 
14 mu_1       0.5      1.15      3.40e- 1  3.06e- 8     15.0 
15 mu_1       0.6      1.13      4.25e- 1  1.62e- 6     11.0 
16 mu_1       0.7      1.06      6.51e- 1  3.08e-10      8.46
17 mu_1       0.8      1.05      2.11e- 1  1.06e-15      5.64
18 mu_1       0.9      0.982     1.41e- 3  2.50e-25     11.8 
19 mu_0       0.1      0.964     4.13e-13  2.85e-39     58.4 
20 mu_0       0.2      1.40      3.92e- 7  3.52e-26     44.3 
21 mu_0       0.3      0.924     2.98e- 4  1.32e-18     17.8 
22 mu_0       0.4      1.01      3.31e- 2  2.61e-13     18.1 
23 mu_0       0.5      1.11      2.06e- 1  2.78e- 9     13.8 
24 mu_0       0.6      1.15      4.53e- 1  4.34e- 6     11.6 
25 mu_0       0.7      1.09      6.24e- 1  3.39e- 9      8.36
26 mu_0       0.8      1.05      3.65e- 1  2.00e-14      5.91
27 mu_0       0.9      1.01      7.63e- 3  1.06e-23     11.8 
[1] "Total run time was 189.477 seconds"
