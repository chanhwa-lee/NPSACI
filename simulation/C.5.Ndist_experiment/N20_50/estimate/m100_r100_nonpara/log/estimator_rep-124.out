
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3569"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 36 37 38 39 40 41 42 43 44 45 46 
 3  4  1  1  3  3  4  1  3  2  5  3  5  5  5  6  3  2  2  3  4  4  8  1  3  4 
47 48 49 50 
 1  5  5  1 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03152 0.33977 0.60340 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
2128 1441 
[1] "treatment indicator table: "

   0    1 
1332 2237 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1817
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1752
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 217.433 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.361 0.108 
 2 mu         0.1   0.2 0.484 0.141 
 3 mu         0.1   0.3 0.576 0.134 
 4 mu         0.1   0.4 0.620 0.136 
 5 mu         0.1   0.5 0.666 0.140 
 6 mu         0.2   0.1 0.322 0.0493
 7 mu         0.2   0.2 0.428 0.0777
 8 mu         0.2   0.3 0.498 0.0705
 9 mu         0.2   0.4 0.519 0.0753
10 mu         0.2   0.5 0.554 0.0693
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.19         0.724 0.0000875     19.8 
 2 mu         0.2      1.05         0.970 0.0418         2.55
 3 mu         0.3      1.03         1.04  0.438          1.94
 4 mu         0.4      1.02         1.01  0.534          1.44
 5 mu         0.5      0.999        0.989 0.682          1.37
 6 mu         0.6      1.00         0.996 0.635          1.40
 7 mu         0.7      1.01         1.02  0.688          1.34
 8 mu         0.8      0.985        0.967 0.643          1.56
 9 mu         0.9      1.01         0.965 0.284          2.93
10 mu_1       0.1      1.08         0.906 0.000263       5.97
11 mu_1       0.2      1.03         0.988 0.0671         2.47
12 mu_1       0.3      1.03         1.07  0.519          1.87
13 mu_1       0.4      1.01         1.00  0.546          1.47
14 mu_1       0.5      0.998        0.990 0.678          1.38
15 mu_1       0.6      1.01         0.998 0.641          1.39
16 mu_1       0.7      1.01         1.01  0.676          1.33
17 mu_1       0.8      0.983        0.960 0.645          1.60
18 mu_1       0.9      1.01         0.961 0.258          3.05
19 mu_0       0.1      1.20         0.692 0.0000681     21.4 
20 mu_0       0.2      1.05         0.978 0.0354         2.56
21 mu_0       0.3      1.03         1.05  0.399          1.97
22 mu_0       0.4      1.02         1.02  0.527          1.47
23 mu_0       0.5      0.999        0.993 0.668          1.37
24 mu_0       0.6      1.00         0.995 0.626          1.41
25 mu_0       0.7      1.01         1.02  0.715          1.36
26 mu_0       0.8      0.991        0.977 0.638          1.41
27 mu_0       0.9      0.990        0.958 0.505          2.04
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      5.14      1.28e-12  4.07e-43    513.  
 2 mu         0.2      1.30      3.02e- 7  4.53e-29    104.  
 3 mu         0.3      0.990     9.77e- 4  6.55e-21     15.2 
 4 mu         0.4      1.40      2.56e- 2  3.58e-15     16.8 
 5 mu         0.5      1.23      3.88e- 1  8.92e-11      6.46
 6 mu         0.6      1.11      5.52e- 1  2.86e- 9      9.50
 7 mu         0.7      1.10      7.66e- 1  2.63e-14      4.75
 8 mu         0.8      1.14      2.46e- 1  1.37e-21      9.31
 9 mu         0.9      1.35      7.97e- 4  2.81e-34     26.3 
10 mu_1       0.1      5.37      8.18e-12  3.90e-42    534.  
11 mu_1       0.2      0.923     9.24e- 7  2.17e-28     54.0 
12 mu_1       0.3      1.11      1.91e- 3  2.09e-20     13.6 
13 mu_1       0.4      1.42      4.16e- 2  8.59e-15     16.3 
14 mu_1       0.5      1.20      4.65e- 1  1.71e-10      5.65
15 mu_1       0.6      1.10      5.54e- 1  4.97e-10      9.57
16 mu_1       0.7      1.10      7.39e- 1  3.91e-15      4.75
17 mu_1       0.8      1.13      2.07e- 1  1.79e-22      9.55
18 mu_1       0.9      1.42      5.47e- 4  3.25e-35     29.2 
19 mu_0       0.1      5.11      3.73e-13  0           511.  
20 mu_0       0.2      1.39      1.46e- 7  0           116.  
21 mu_0       0.3      0.939     5.18e- 4  0            15.9 
22 mu_0       0.4      1.39      1.81e- 2  0            17.1 
23 mu_0       0.5      1.25      2.56e- 1  0             7.27
24 mu_0       0.6      1.11      5.23e- 1  0             9.39
25 mu_0       0.7      1.09      6.64e- 1  0             5.46
26 mu_0       0.8      1.17      2.58e- 1  0             8.38
27 mu_0       0.9      0.757     1.95e- 3  0             8.83
[1] "Total run time was 220.567 seconds"
