
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3486"
[1] "cluster size dist'n: "

20 22 23 24 25 26 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 46 47 48 
 6  4  5  5  4  4  1  1  4  4  3  5  7  4  3  3  1  1  2  3  1  4  4  3  6  4 
49 50 
 2  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03258 0.33360 0.60019 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
2029 1457 
[1] "treatment indicator table: "

   0    1 
1296 2190 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1735
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1751
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 76"
[1] "     Cluster: 80"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 175.66 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.425 0.143 
 2 mu         0.1   0.2 0.632 0.203 
 3 mu         0.1   0.3 0.756 0.234 
 4 mu         0.1   0.4 0.802 0.254 
 5 mu         0.1   0.5 0.808 0.264 
 6 mu         0.2   0.1 0.301 0.0448
 7 mu         0.2   0.2 0.466 0.0578
 8 mu         0.2   0.3 0.595 0.0949
 9 mu         0.2   0.4 0.645 0.110 
10 mu         0.2   0.5 0.642 0.0961
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      1.24         0.236 0.0000000271     48.2 
 2 mu         0.2      0.910        0.847 0.00116           4.45
 3 mu         0.3      0.899        0.868 0.0633            1.91
 4 mu         0.4      0.946        0.942 0.266             1.52
 5 mu         0.5      0.992        1.00  0.534             1.33
 6 mu         0.6      1.00         1.01  0.709             1.33
 7 mu         0.7      1.01         1.00  0.781             1.28
 8 mu         0.8      1.02         1.02  0.676             1.40
 9 mu         0.9      1.01         1.02  0.541             1.51
10 mu_1       0.1      1.20         0.409 0.000000113      38.6 
11 mu_1       0.2      0.900        0.896 0.00245           3.99
12 mu_1       0.3      0.905        0.906 0.0832            1.73
13 mu_1       0.4      0.956        0.941 0.295             1.50
14 mu_1       0.5      0.997        1.01  0.564             1.34
15 mu_1       0.6      1.00         1.00  0.721             1.35
16 mu_1       0.7      1.01         1.00  0.779             1.28
17 mu_1       0.8      1.02         1.02  0.663             1.41
18 mu_1       0.9      1.01         1.02  0.542             1.51
19 mu_0       0.1      1.25         0.213 0.0000000175     49.3 
20 mu_0       0.2      0.913        0.844 0.000842          4.94
21 mu_0       0.3      0.896        0.877 0.0548            2.09
22 mu_0       0.4      0.939        0.928 0.247             1.54
23 mu_0       0.5      0.987        0.988 0.504             1.32
24 mu_0       0.6      1.01         1.02  0.691             1.30
25 mu_0       0.7      1.01         0.992 0.752             1.30
26 mu_0       0.8      1.02         1.01  0.728             1.38
27 mu_0       0.9      0.997        0.995 0.533             1.50
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.10      1.23e-12  8.98e-37     76.8 
 2 mu         0.2      1.73      5.70e- 7  7.79e-24    109.  
 3 mu         0.3      1.46      4.32e- 4  1.96e-16     44.2 
 4 mu         0.4      1.44      2.77e- 2  1.08e-11     17.4 
 5 mu         0.5      1.18      2.82e- 1  2.66e- 8      8.58
 6 mu         0.6      0.951     6.12e- 1  8.93e- 6      4.00
 7 mu         0.7      1.03      5.98e- 1  1.16e- 9      4.68
 8 mu         0.8      1.09      4.63e- 1  1.54e-15      4.88
 9 mu         0.9      1.36      4.89e- 3  4.09e-26     28.0 
10 mu_1       0.1      1.41      8.27e-12  7.90e-36     76.8 
11 mu_1       0.2      1.63      1.96e- 6  3.43e-23    106.  
12 mu_1       0.3      1.39      9.98e- 4  5.74e-16     28.5 
13 mu_1       0.4      1.43      4.65e- 2  2.63e-11     17.4 
14 mu_1       0.5      1.14      3.18e- 1  5.17e- 8      6.86
15 mu_1       0.6      0.950     6.80e- 1  3.41e- 6      3.48
16 mu_1       0.7      1.04      6.10e- 1  3.80e-10      4.80
17 mu_1       0.8      1.10      3.93e- 1  4.41e-16      5.34
18 mu_1       0.9      1.37      3.79e- 3  1.04e-26     29.2 
19 mu_0       0.1      1.06      4.46e-13  1.20e-37     76.8 
20 mu_0       0.2      1.76      2.45e- 7  1.17e-24    110.  
21 mu_0       0.3      1.49      1.90e- 4  1.13e-17     50.9 
22 mu_0       0.4      1.45      1.54e- 2  4.75e-13     17.4 
23 mu_0       0.5      1.22      2.20e- 1  1.48e- 9     10.3 
24 mu_0       0.6      0.952     5.07e- 1  8.72e- 7      4.77
25 mu_0       0.7      1.01      5.46e- 1  2.98e- 9      4.63
26 mu_0       0.8      1.05      6.11e- 1  5.93e-15      4.81
27 mu_0       0.9      1.28      1.48e- 2  3.15e-25     17.0 
[1] "Total run time was 183.651 seconds"
