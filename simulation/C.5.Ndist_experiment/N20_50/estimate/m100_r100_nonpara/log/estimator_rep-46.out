
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3542"
[1] "cluster size dist'n: "

20 21 22 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 
 5  2  6  5  1  1  2  2  3  2  3  5  6  1  3  3  3  5  2  2  6  4  4  8  5  2 
47 48 49 
 5  3  1 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04562 0.39648 0.65201 1.00000 7.00000 
[1] "event indicator table: "

   0    1 
2115 1427 
[1] "treatment indicator table: "

   0    1 
1240 2302 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1780
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 78"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1762
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 205.771 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.381 0.0521
 2 mu         0.1   0.2 0.455 0.0588
 3 mu         0.1   0.3 0.546 0.0735
 4 mu         0.1   0.4 0.597 0.0859
 5 mu         0.1   0.5 0.634 0.0837
 6 mu         0.2   0.1 0.346 0.0431
 7 mu         0.2   0.2 0.416 0.0490
 8 mu         0.2   0.3 0.498 0.0628
 9 mu         0.2   0.4 0.542 0.0656
10 mu         0.2   0.5 0.585 0.0526
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.03         0.759   0.00452      3.66
 2 mu         0.2      1.02         1.00    0.219        1.98
 3 mu         0.3      0.993        0.950   0.448        1.68
 4 mu         0.4      0.985        0.964   0.483        1.59
 5 mu         0.5      0.983        0.984   0.517        1.52
 6 mu         0.6      0.997        0.998   0.714        1.29
 7 mu         0.7      1.01         1.00    0.760        1.27
 8 mu         0.8      1.03         1.02    0.634        1.63
 9 mu         0.9      1.01         0.995   0.406        1.63
10 mu_1       0.1      0.984        0.914   0.0108       3.19
11 mu_1       0.2      1.02         0.979   0.289        1.94
12 mu_1       0.3      0.989        0.950   0.395        1.71
13 mu_1       0.4      0.985        0.971   0.484        1.59
14 mu_1       0.5      0.984        0.973   0.534        1.50
15 mu_1       0.6      0.999        1.00    0.704        1.30
16 mu_1       0.7      1.01         1.00    0.745        1.31
17 mu_1       0.8      1.03         1.03    0.612        1.64
18 mu_1       0.9      1.01         0.992   0.386        1.64
19 mu_0       0.1      1.03         0.719   0.00383      3.71
20 mu_0       0.2      1.02         0.981   0.201        2.02
21 mu_0       0.3      0.994        0.947   0.471        1.68
22 mu_0       0.4      0.985        0.954   0.482        1.60
23 mu_0       0.5      0.982        0.984   0.500        1.55
24 mu_0       0.6      0.994        0.981   0.686        1.29
25 mu_0       0.7      1.00         1.01    0.714        1.24
26 mu_0       0.8      1.02         1.02    0.712        1.60
27 mu_0       0.9      1.02         1.00    0.447        1.55
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      3.11      5.42e-14  1.78e-38    237.  
 2 mu         0.2      0.698     1.99e- 7  3.91e-25     25.1 
 3 mu         0.3      0.643     2.53e- 4  1.92e-17     10.4 
 4 mu         0.4      0.759     1.84e- 2  4.35e-12      7.54
 5 mu         0.5      1.02      2.42e- 1  2.14e- 9      6.86
 6 mu         0.6      1.17      5.10e- 1  8.96e-14      5.23
 7 mu         0.7      1.18      8.18e- 1  1.87e-19      7.70
 8 mu         0.8      1.48      4.84e- 1  1.70e-27      6.69
 9 mu         0.9      1.51      2.68e- 3  2.71e-41     23.7 
10 mu_1       0.1      1.38      3.75e-13  1.64e-37     50.4 
11 mu_1       0.2      0.607     6.03e- 7  1.80e-24     17.5 
12 mu_1       0.3      0.651     5.04e- 4  5.89e-17      9.48
13 mu_1       0.4      0.780     2.64e- 2  1.00e-11      7.47
14 mu_1       0.5      1.05      2.99e- 1  9.12e-11      6.54
15 mu_1       0.6      1.17      5.09e- 1  3.18e-15      5.44
16 mu_1       0.7      1.19      7.84e- 1  5.69e-21      7.41
17 mu_1       0.8      1.51      4.20e- 1  4.52e-29      6.88
18 mu_1       0.9      1.48      2.03e- 3  6.42e-43     24.2 
19 mu_0       0.1      3.30      2.23e-14  1.61e-39    258.  
20 mu_0       0.2      0.720     9.75e- 8  3.99e-26     27.0 
21 mu_0       0.3      0.640     1.14e- 4  2.24e-18     10.8 
22 mu_0       0.4      0.745     9.95e- 3  5.92e-13      7.90
23 mu_0       0.5      0.979     1.73e- 1  4.20e- 9      7.17
24 mu_0       0.6      1.16      3.78e- 1  2.19e-13      5.85
25 mu_0       0.7      1.16      8.29e- 1  6.11e-19      8.37
26 mu_0       0.8      1.38      6.48e- 1  8.31e-27      6.50
27 mu_0       0.9      1.76      8.68e- 3  2.66e-40     19.3 
[1] "Total run time was 208.936 seconds"
