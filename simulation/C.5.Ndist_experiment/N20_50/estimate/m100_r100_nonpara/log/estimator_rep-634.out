
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3433"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 4  3  5  4  3  5  3  4  1  3  3  4  1  5  6  2  1  2  4  5  1  2  2  4  4  6 
46 47 48 49 50 
 2  2  5  2  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.01561 0.28857 0.55423 0.95910 5.02922 
[1] "event indicator table: "

   0    1 
2101 1332 
[1] "treatment indicator table: "

   0    1 
1337 2096 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1741
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 10"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1692
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 445.398 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.430 0.0613
 2 mu         0.1   0.2 0.546 0.0759
 3 mu         0.1   0.3 0.649 0.0881
 4 mu         0.1   0.4 0.668 0.0924
 5 mu         0.1   0.5 0.683 0.104 
 6 mu         0.2   0.1 0.380 0.0221
 7 mu         0.2   0.2 0.507 0.0402
 8 mu         0.2   0.3 0.594 0.0422
 9 mu         0.2   0.4 0.615 0.0420
10 mu         0.2   0.5 0.632 0.0411
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.15         0.556  0.000209     10.3 
 2 mu         0.2      1.09         0.989  0.0403        3.20
 3 mu         0.3      1.02         1.00   0.281         2.11
 4 mu         0.4      0.984        0.980  0.392         1.44
 5 mu         0.5      1.00         0.987  0.742         1.23
 6 mu         0.6      1.02         1.02   0.728         1.27
 7 mu         0.7      0.998        0.998  0.722         1.28
 8 mu         0.8      0.980        0.969  0.435         1.55
 9 mu         0.9      1.00         0.971  0.411         2.93
10 mu_1       0.1      1.13         0.896  0.000756      7.80
11 mu_1       0.2      1.07         1.01   0.0760        3.27
12 mu_1       0.3      1.00         1.02   0.275         1.91
13 mu_1       0.4      0.984        0.995  0.446         1.39
14 mu_1       0.5      1.01         0.987  0.791         1.25
15 mu_1       0.6      1.02         1.01   0.713         1.26
16 mu_1       0.7      0.996        0.995  0.719         1.31
17 mu_1       0.8      0.981        0.969  0.433         1.59
18 mu_1       0.9      1.00         0.966  0.399         3.08
19 mu_0       0.1      1.15         0.514  0.000148     10.5 
20 mu_0       0.2      1.09         0.969  0.0314        3.19
21 mu_0       0.3      1.02         0.986  0.284         2.20
22 mu_0       0.4      0.983        0.982  0.356         1.47
23 mu_0       0.5      1.00         0.994  0.693         1.26
24 mu_0       0.6      1.02         1.01   0.750         1.28
25 mu_0       0.7      1.00         0.998  0.699         1.22
26 mu_0       0.8      0.978        0.980  0.440         1.42
27 mu_0       0.9      0.996        0.962  0.520         1.76
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.456     5.34e-12  6.33e-38     31.9 
 2 mu         0.2      1.91      2.49e- 6  1.39e-24    104.  
 3 mu         0.3      1.00      2.62e- 3  4.14e-17     19.1 
 4 mu         0.4      0.897     1.15e- 1  4.61e-12      7.49
 5 mu         0.5      1.20      7.14e- 1  3.14e- 8      5.34
 6 mu         0.6      1.10      9.05e- 1  1.05e- 6      4.09
 7 mu         0.7      0.937     5.22e- 1  8.79e-11      7.17
 8 mu         0.8      1.33      5.45e- 2  6.80e-17     16.9 
 9 mu         0.9      2.34      3.24e- 5  8.03e-28     84.2 
10 mu_1       0.1      0.846     2.99e-11  5.81e-37     56.6 
11 mu_1       0.2      1.90      7.65e- 6  6.38e-24     92.8 
12 mu_1       0.3      0.911     5.06e- 3  1.29e-16     11.3 
13 mu_1       0.4      0.943     1.68e- 1  1.08e-11      6.53
14 mu_1       0.5      1.21      7.89e- 1  5.86e- 8      4.99
15 mu_1       0.6      1.07      8.93e- 1  3.66e- 7      4.15
16 mu_1       0.7      0.953     4.50e- 1  2.62e-11      7.45
17 mu_1       0.8      1.37      4.11e- 2  1.77e-17     17.8 
18 mu_1       0.9      2.35      2.21e- 5  1.86e-28     85.9 
19 mu_0       0.1      0.413     2.66e-12  5.74e-39     29.1 
20 mu_0       0.2      1.92      1.20e- 6  1.42e-25    107.  
21 mu_0       0.3      1.04      1.57e- 3  3.94e-18     22.5 
22 mu_0       0.4      0.867     9.15e- 2  5.12e-13      8.13
23 mu_0       0.5      1.18      5.35e- 1  4.18e- 9      5.75
24 mu_0       0.6      1.14      9.46e- 1  2.08e- 6      4.36
25 mu_0       0.7      0.900     5.42e- 1  2.32e-10      6.52
26 mu_0       0.8      1.18      1.11e- 1  2.69e-16     13.5 
27 mu_0       0.9      2.27      1.27e- 4  6.36e-27     68.7 
[1] "Total run time was 450.31 seconds"
