
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3516"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 3  1  5  5  2  2  3  3  2  4  2  2  4  4  6  5  5  2  3  4  2  3  1  5  2  6 
46 47 48 49 50 
 1  4  2  2  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0172  0.2948  0.5694  0.9791  6.0000 
[1] "event indicator table: "

   0    1 
2141 1375 
[1] "treatment indicator table: "

   0    1 
1403 2113 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1785
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 83"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1731
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 46"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 184.857 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.533 0.0934
 2 mu         0.1   0.2 0.633 0.115 
 3 mu         0.1   0.3 0.668 0.115 
 4 mu         0.1   0.4 0.689 0.114 
 5 mu         0.1   0.5 0.743 0.121 
 6 mu         0.2   0.1 0.478 0.0674
 7 mu         0.2   0.2 0.572 0.0867
 8 mu         0.2   0.3 0.620 0.0894
 9 mu         0.2   0.4 0.649 0.0848
10 mu         0.2   0.5 0.696 0.0890
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.948        0.580  0.000737      4.80
 2 mu         0.2      0.990        0.948  0.113         2.42
 3 mu         0.3      0.999        0.989  0.523         2.08
 4 mu         0.4      1.01         1.01   0.679         1.52
 5 mu         0.5      1.01         1.01   0.537         1.44
 6 mu         0.6      0.996        0.997  0.622         1.42
 7 mu         0.7      1.00         0.995  0.760         1.33
 8 mu         0.8      1.00         1.00   0.594         1.44
 9 mu         0.9      0.970        0.953  0.479         2.25
10 mu_1       0.1      1.01         0.785  0.00230       5.47
11 mu_1       0.2      0.990        0.983  0.183         2.10
12 mu_1       0.3      1.00         1.01   0.508         2.04
13 mu_1       0.4      1.01         0.998  0.633         1.45
14 mu_1       0.5      1.01         1.01   0.550         1.44
15 mu_1       0.6      0.995        0.992  0.615         1.42
16 mu_1       0.7      1.00         1.00   0.757         1.31
17 mu_1       0.8      1.00         1.01   0.592         1.49
18 mu_1       0.9      0.969        0.952  0.457         2.27
19 mu_0       0.1      0.941        0.558  0.000563      4.96
20 mu_0       0.2      0.990        0.945  0.0951        2.49
21 mu_0       0.3      0.997        0.968  0.530         2.09
22 mu_0       0.4      1.01         0.992  0.655         1.59
23 mu_0       0.5      1.01         1.01   0.524         1.44
24 mu_0       0.6      0.998        1.00   0.631         1.44
25 mu_0       0.7      0.997        0.990  0.748         1.41
26 mu_0       0.8      1.01         1.01   0.602         1.36
27 mu_0       0.9      0.979        0.934  0.539         2.03
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      5.06      4.05e-11  1.05e-41    382.  
 2 mu         0.2      0.824     4.86e- 6  1.04e-27     43.4 
 3 mu         0.3      1.38      3.32e- 3  1.31e-19     45.4 
 4 mu         0.4      2.05      1.06e- 1  2.26e-14     48.2 
 5 mu         0.5      1.60      6.52e- 1  2.21e-10     12.7 
 6 mu         0.6      1.18      8.72e- 1  1.55e-10      7.24
 7 mu         0.7      1.16      4.19e- 1  2.47e-15      6.58
 8 mu         0.8      1.03      8.89e- 2  3.33e-22      6.86
 9 mu         0.9      1.12      1.02e- 4  2.09e-34     15.4 
10 mu_1       0.1      4.31      2.47e-10  9.87e-41    332.  
11 mu_1       0.2      0.646     1.41e- 5  4.88e-27     18.9 
12 mu_1       0.3      1.63      6.53e- 3  4.12e-19     53.4 
13 mu_1       0.4      2.07      1.61e- 1  5.51e-14     42.5 
14 mu_1       0.5      1.51      6.51e- 1  4.32e-10      8.97
15 mu_1       0.6      1.15      7.38e- 1  1.80e-11      7.43
16 mu_1       0.7      1.16      3.43e- 1  2.46e-16      6.90
17 mu_1       0.8      1.02      6.43e- 2  2.91e-23      6.92
18 mu_1       0.9      1.13      6.80e- 5  2.02e-35     16.6 
19 mu_0       0.1      5.14      1.48e-11  7.00e-43    387.  
20 mu_0       0.2      0.869     2.56e- 6  7.78e-29     49.5 
21 mu_0       0.3      1.27      1.80e- 3  4.95e-21     41.9 
22 mu_0       0.4      2.04      6.92e- 2  8.75e-16     52.0 
23 mu_0       0.5      1.69      5.73e- 1  1.03e-11     16.4 
24 mu_0       0.6      1.22      8.06e- 1  3.59e-10      6.97
25 mu_0       0.7      1.17      5.60e- 1  7.65e-15      5.85
26 mu_0       0.8      1.07      1.19e- 1  1.55e-21      7.06
27 mu_0       0.9      1.03      4.19e- 4  1.91e-33     12.2 
[1] "Total run time was 188.07 seconds"
