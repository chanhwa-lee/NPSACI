
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3299"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 36 37 38 39 40 41 42 43 44 45 46 
 4  7  3  7  4  3  6  3  3  3  1  1  5  6  2  3  4  4  2  1  5  3  2  3  2  5 
47 48 49 
 3  2  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02894 0.31643 0.59298 1.00000 7.00000 
[1] "event indicator table: "

   0    1 
1943 1356 
[1] "treatment indicator table: "

   0    1 
1208 2091 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1630
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 72"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1669
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 26"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 189.386 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.599 0.305 
 2 mu         0.1   0.2 0.702 0.322 
 3 mu         0.1   0.3 0.764 0.342 
 4 mu         0.1   0.4 0.777 0.359 
 5 mu         0.1   0.5 0.833 0.389 
 6 mu         0.2   0.1 0.266 0.0565
 7 mu         0.2   0.2 0.354 0.0543
 8 mu         0.2   0.3 0.406 0.0598
 9 mu         0.2   0.4 0.407 0.0617
10 mu         0.2   0.5 0.434 0.0681
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.15         0.237 0.0000175     51.1 
 2 mu         0.2      0.836        0.797 0.0189         2.55
 3 mu         0.3      0.946        0.933 0.208          2.24
 4 mu         0.4      1.03         0.962 0.546          1.92
 5 mu         0.5      1.05         1.01  0.702          1.61
 6 mu         0.6      1.03         1.02  0.746          1.44
 7 mu         0.7      0.997        0.994 0.679          1.28
 8 mu         0.8      0.997        0.982 0.589          1.46
 9 mu         0.9      1.00         0.959 0.0565         3.86
10 mu_1       0.1      0.858        0.435 0.0000594     12.2 
11 mu_1       0.2      0.870        0.875 0.0328         2.48
12 mu_1       0.3      0.974        0.948 0.258          2.31
13 mu_1       0.4      1.04         0.975 0.591          1.90
14 mu_1       0.5      1.05         1.03  0.694          1.51
15 mu_1       0.6      1.02         1.02  0.726          1.41
16 mu_1       0.7      0.995        0.996 0.668          1.25
17 mu_1       0.8      0.998        0.985 0.568          1.49
18 mu_1       0.9      1.00         0.957 0.0505         4.06
19 mu_0       0.1      1.18         0.216 0.0000129     55.4 
20 mu_0       0.2      0.827        0.786 0.0154         2.57
21 mu_0       0.3      0.934        0.923 0.186          2.21
22 mu_0       0.4      1.03         0.963 0.510          1.95
23 mu_0       0.5      1.05         1.03  0.658          1.70
24 mu_0       0.6      1.04         1.01  0.772          1.49
25 mu_0       0.7      0.999        1.00  0.703          1.33
26 mu_0       0.8      0.994        0.990 0.663          1.41
27 mu_0       0.9      1.00         0.953 0.111          2.36
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.155     7.85e-12  6.38e-32     13.9 
 2 mu         0.2      0.490     2.21e- 6  3.46e-20     16.0 
 3 mu         0.3      0.929     1.05e- 3  7.19e-14     28.3 
 4 mu         0.4      1.11      6.36e- 2  6.13e-10     15.4 
 5 mu         0.5      1.32      5.23e- 1  6.45e- 7     12.2 
 6 mu         0.6      1.19      8.63e- 1  3.23e- 6      6.20
 7 mu         0.7      1.05      6.43e- 1  3.15e-10      5.36
 8 mu         0.8      1.39      2.64e- 1  2.79e-16     15.4 
 9 mu         0.9      2.39      1.46e- 3  3.70e-27     41.2 
10 mu_1       0.1      0.244     4.40e-11  5.55e-31     19.9 
11 mu_1       0.2      0.623     6.59e- 6  1.50e-19     23.4 
12 mu_1       0.3      1.00      2.15e- 3  2.32e-13     27.5 
13 mu_1       0.4      1.12      8.25e- 2  1.49e- 9     11.2 
14 mu_1       0.5      1.33      6.11e- 1  1.25e- 6     12.5 
15 mu_1       0.6      1.17      9.39e- 1  1.21e- 6      5.29
16 mu_1       0.7      1.05      6.71e- 1  1.01e-10      5.47
17 mu_1       0.8      1.44      2.06e- 1  7.82e-17     16.8 
18 mu_1       0.9      2.43      9.62e- 4  9.24e-28     43.0 
19 mu_0       0.1      0.145     4.04e-12  9.24e-33     13.3 
20 mu_0       0.2      0.457     9.09e- 7  5.64e-21     14.2 
21 mu_0       0.3      0.899     5.14e- 4  3.11e-15     28.6 
22 mu_0       0.4      1.10      4.16e- 2  3.10e-11     18.2 
23 mu_0       0.5      1.32      3.83e- 1  3.91e- 8     11.9 
24 mu_0       0.6      1.23      7.50e- 1  6.27e- 6      7.58
25 mu_0       0.7      1.05      6.33e- 1  8.15e-10      5.10
26 mu_0       0.8      1.19      4.29e- 1  1.08e-15     10.2 
27 mu_0       0.9      2.07      5.20e- 3  2.87e-26     30.9 
[1] "Total run time was 192.614 seconds"
