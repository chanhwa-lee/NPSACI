
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3471"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 4  3  5  3  2  1  2  4  3  8  3  4  3  1  2  4  4  3  4  2  4  3  3  2  5  4 
46 47 48 49 50 
 4  3  2  2  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0619  0.4332  0.6774  1.0000  5.7352 
[1] "event indicator table: "

   0    1 
2064 1407 
[1] "treatment indicator table: "

   0    1 
1055 2416 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1755
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1716
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 66"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 216.379 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.283 0.177
 2 mu         0.1   0.2 0.360 0.206
 3 mu         0.1   0.3 0.524 0.226
 4 mu         0.1   0.4 0.554 0.238
 5 mu         0.1   0.5 0.561 0.259
 6 mu         0.2   0.1 0.411 0.146
 7 mu         0.2   0.2 0.504 0.156
 8 mu         0.2   0.3 0.668 0.165
 9 mu         0.2   0.4 0.711 0.172
10 mu         0.2   0.5 0.730 0.178
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.935       0.0359  4.95e-14     45.9 
 2 mu         0.2      1.24        0.501   2.53e- 7     32.5 
 3 mu         0.3      1.07        0.818   5.52e- 4     16.8 
 4 mu         0.4      0.969       0.946   4.24e- 2      3.73
 5 mu         0.5      1.01        1.00    2.82e- 1      2.03
 6 mu         0.6      1.04        1.01    5.21e- 1      1.92
 7 mu         0.7      1.02        1.00    4.58e- 1      1.51
 8 mu         0.8      0.982       0.970   5.56e- 1      1.41
 9 mu         0.9      0.962       0.958   4.03e- 1      1.59
10 mu_1       0.1      1.06        0.0894  2.68e-13     30.7 
11 mu_1       0.2      1.24        0.683   6.85e- 7     32.0 
12 mu_1       0.3      1.02        0.849   1.01e- 3     11.6 
13 mu_1       0.4      0.967       0.937   6.38e- 2      2.36
14 mu_1       0.5      1.02        1.01    3.50e- 1      2.06
15 mu_1       0.6      1.04        1.02    5.00e- 1      1.98
16 mu_1       0.7      1.02        1.00    4.70e- 1      1.53
17 mu_1       0.8      0.980       0.969   5.36e- 1      1.44
18 mu_1       0.9      0.962       0.961   3.81e- 1      1.61
19 mu_0       0.1      0.922       0.0303  2.52e-14     47.6 
20 mu_0       0.2      1.24        0.456   1.44e- 7     32.7 
21 mu_0       0.3      1.10        0.828   3.56e- 4     19.1 
22 mu_0       0.4      0.970       0.925   2.82e- 2      4.74
23 mu_0       0.5      1.00        0.994   2.14e- 1      2.01
24 mu_0       0.6      1.04        1.02    5.53e- 1      1.81
25 mu_0       0.7      1.03        1.01    4.32e- 1      1.62
26 mu_0       0.8      0.990       0.966   6.03e- 1      1.41
27 mu_0       0.9      0.960       0.989   4.67e- 1      1.95
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       6.43     2.55e-15  7.71e-45     509. 
 2 mu         0.2      31.7      4.55e- 9  1.93e-30    2969. 
 3 mu         0.3       9.73     1.25e- 5  4.78e-22     714. 
 4 mu         0.4       2.62     3.30e- 3  4.07e-16     121. 
 5 mu         0.5       1.45     1.02e- 1  1.52e-11      22.7
 6 mu         0.6       1.78     7.33e- 1  7.69e- 8      31.5
 7 mu         0.7       2.31     7.15e- 1  2.83e- 9      54.9
 8 mu         0.8       1.67     9.43e- 1  9.75e-15      13.6
 9 mu         0.9       1.19     7.78e- 2  1.08e-25      14.8
10 mu_1       0.1      11.8      1.82e-14  7.55e-44     976. 
11 mu_1       0.2      30.3      1.83e- 8  9.45e-30    2842. 
12 mu_1       0.3       7.34     3.04e- 5  1.56e-21     456. 
13 mu_1       0.4       2.33     5.68e- 3  9.97e-16     103. 
14 mu_1       0.5       1.43     1.43e- 1  2.98e-11      22.7
15 mu_1       0.6       1.87     7.26e- 1  1.26e- 7      35.9
16 mu_1       0.7       2.31     7.22e- 1  6.23e-10      53.7
17 mu_1       0.8       1.63     8.63e- 1  1.88e-15      13.7
18 mu_1       0.9       1.18     6.08e- 2  2.30e-26      14.4
19 mu_0       0.1       5.84     8.12e-16  0            458. 
20 mu_0       0.2      32.1      1.26e- 9  0           3000. 
21 mu_0       0.3      10.8      4.86e- 6  0            825. 
22 mu_0       0.4       2.82     1.49e- 3  0            133. 
23 mu_0       0.5       1.46     6.10e- 2  0             22.7
24 mu_0       0.6       1.65     5.14e- 1  0             24.9
25 mu_0       0.7       2.32     6.76e- 1  0             57.8
26 mu_0       0.8       1.86     8.93e- 1  0             21.5
27 mu_0       0.9       1.29     1.69e- 1  0             18.5
[1] "Total run time was 219.551 seconds"
