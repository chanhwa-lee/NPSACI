
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3500"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 3  5  4  1  2  4  4  3  4  3  2  3  6  1  2  2  5  6  3  1  3  3  3  3  1  7 
46 47 48 49 50 
 4  4  3  2  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04666 0.37465 0.64217 1.00000 5.19574 
[1] "event indicator table: "

   0    1 
2033 1467 
[1] "treatment indicator table: "

   0    1 
1316 2184 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1766
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 46"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1734
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 203.127 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.521 0.147 
 2 mu         0.1   0.2 0.671 0.203 
 3 mu         0.1   0.3 0.741 0.220 
 4 mu         0.1   0.4 0.763 0.243 
 5 mu         0.1   0.5 0.822 0.254 
 6 mu         0.2   0.1 0.339 0.0475
 7 mu         0.2   0.2 0.435 0.0540
 8 mu         0.2   0.3 0.500 0.0560
 9 mu         0.2   0.4 0.516 0.0472
10 mu         0.2   0.5 0.557 0.0385
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      1.39         0.344 0.000000861     44.5 
 2 mu         0.2      0.946        0.883 0.00554          3.73
 3 mu         0.3      1.00         0.949 0.197            2.32
 4 mu         0.4      1.01         0.986 0.627            1.53
 5 mu         0.5      0.994        0.990 0.603            1.38
 6 mu         0.6      0.992        0.981 0.723            1.28
 7 mu         0.7      0.984        0.978 0.707            1.18
 8 mu         0.8      0.991        0.997 0.713            1.44
 9 mu         0.9      1.04         1.00  0.412            2.33
10 mu_1       0.1      1.00         0.576 0.00000315      13.3 
11 mu_1       0.2      0.951        0.909 0.0105           2.55
12 mu_1       0.3      1.01         0.970 0.261            2.24
13 mu_1       0.4      1.01         0.977 0.660            1.49
14 mu_1       0.5      0.994        0.986 0.610            1.35
15 mu_1       0.6      0.992        0.982 0.723            1.26
16 mu_1       0.7      0.983        0.973 0.716            1.19
17 mu_1       0.8      0.993        0.990 0.712            1.45
18 mu_1       0.9      1.04         0.987 0.382            2.40
19 mu_0       0.1      1.43         0.315 0.000000608     47.9 
20 mu_0       0.2      0.945        0.872 0.00431          4.03
21 mu_0       0.3      0.998        0.954 0.170            2.35
22 mu_0       0.4      1.01         0.997 0.606            1.61
23 mu_0       0.5      0.995        0.998 0.596            1.43
24 mu_0       0.6      0.992        0.984 0.690            1.31
25 mu_0       0.7      0.986        0.991 0.688            1.19
26 mu_0       0.8      0.986        0.988 0.718            1.41
27 mu_0       0.9      1.03         1.03  0.631            1.82
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.639     5.43e-13  2.01e-31     50.6 
 2 mu         0.2      1.57      2.25e- 7  5.46e-21     47.9 
 3 mu         0.3      1.60      2.53e- 4  6.09e-15     17.3 
 4 mu         0.4      1.49      2.61e- 2  1.06e-10     15.0 
 5 mu         0.5      1.09      3.14e- 1  1.81e- 7      9.88
 6 mu         0.6      0.914     3.76e- 1  1.27e- 5      6.84
 7 mu         0.7      1.19      9.62e- 1  1.61e- 9      6.49
 8 mu         0.8      1.41      4.56e- 1  2.45e-15     11.2 
 9 mu         0.9      1.04      3.75e- 3  1.03e-25     22.8 
10 mu_1       0.1      1.01      3.73e-12  1.90e-30     72.3 
11 mu_1       0.2      1.64      7.88e- 7  2.58e-20     44.2 
12 mu_1       0.3      1.58      5.77e- 4  1.92e-14     19.2 
13 mu_1       0.4      1.44      4.43e- 2  2.50e-10     14.6 
14 mu_1       0.5      1.04      4.00e- 1  3.42e- 7      8.78
15 mu_1       0.6      0.927     3.98e- 1  4.22e- 6      6.78
16 mu_1       0.7      1.21      1.02e+ 0  4.60e-10      6.95
17 mu_1       0.8      1.41      4.16e- 1  6.13e-16     11.5 
18 mu_1       0.9      1.05      2.93e- 3  2.29e-26     25.4 
19 mu_0       0.1      0.598     1.89e-13  0            48.2 
20 mu_0       0.2      1.56      8.79e- 8  0            51.4 
21 mu_0       0.3      1.61      1.15e- 4  0            18.2 
22 mu_0       0.4      1.53      1.40e- 2  0            15.3 
23 mu_0       0.5      1.14      2.15e- 1  0            11.0 
24 mu_0       0.6      0.894     2.73e- 1  0             6.93
25 mu_0       0.7      1.13      6.41e- 1  0             5.41
26 mu_0       0.8      1.42      5.51e- 1  0             9.72
27 mu_0       0.9      0.978     7.71e- 3  0             9.18
[1] "Total run time was 206.471 seconds"
