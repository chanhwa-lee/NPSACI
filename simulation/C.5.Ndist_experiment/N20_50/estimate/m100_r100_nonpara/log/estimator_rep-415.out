
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3572"
[1] "cluster size dist'n: "

20 21 22 24 25 26 27 28 29 30 31 32 33 34 35 37 38 39 40 41 42 43 44 45 46 47 
 3  3  3  2  3  2  8  5  2  1  3  3  6  5  3  4  2  1  1  5  5  6  2  4  4  4 
48 49 50 
 5  4  1 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03471 0.32515 0.60215 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
2110 1462 
[1] "treatment indicator table: "

   0    1 
1350 2222 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1785
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1787
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 86"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 224.819 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.430 0.0722
 2 mu         0.1   0.2 0.524 0.0805
 3 mu         0.1   0.3 0.565 0.0680
 4 mu         0.1   0.4 0.599 0.0522
 5 mu         0.1   0.5 0.633 0.0498
 6 mu         0.2   0.1 0.347 0.0311
 7 mu         0.2   0.2 0.440 0.0335
 8 mu         0.2   0.3 0.504 0.0345
 9 mu         0.2   0.4 0.542 0.0305
10 mu         0.2   0.5 0.576 0.0343
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.998        0.903   0.00158      2.82
 2 mu         0.2      1.03         1.02    0.178        1.94
 3 mu         0.3      1.02         0.980   0.559        1.68
 4 mu         0.4      1.01         0.993   0.680        1.67
 5 mu         0.5      1.00         0.992   0.737        1.44
 6 mu         0.6      0.979        0.964   0.691        1.58
 7 mu         0.7      0.970        0.977   0.633        1.34
 8 mu         0.8      0.984        0.986   0.571        1.32
 9 mu         0.9      1.01         1.01    0.419        1.68
10 mu_1       0.1      1.02         0.942   0.00403      2.85
11 mu_1       0.2      1.03         0.999   0.254        1.87
12 mu_1       0.3      1.01         0.976   0.572        1.61
13 mu_1       0.4      1.01         0.987   0.708        1.65
14 mu_1       0.5      0.999        0.998   0.720        1.45
15 mu_1       0.6      0.977        0.960   0.681        1.56
16 mu_1       0.7      0.970        0.975   0.629        1.33
17 mu_1       0.8      0.984        0.986   0.573        1.33
18 mu_1       0.9      1.01         1.01    0.414        1.71
19 mu_0       0.1      0.996        0.889   0.00131      2.82
20 mu_0       0.2      1.03         1.03    0.159        1.97
21 mu_0       0.3      1.02         0.979   0.537        1.71
22 mu_0       0.4      1.02         0.986   0.652        1.69
23 mu_0       0.5      1.00         0.994   0.735        1.42
24 mu_0       0.6      0.982        0.970   0.698        1.61
25 mu_0       0.7      0.969        0.972   0.641        1.36
26 mu_0       0.8      0.982        0.984   0.562        1.30
27 mu_0       0.9      1.00         0.993   0.459        1.64
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.473     2.07e-13  1.76e-37     33.6 
 2 mu         0.2      0.811     4.80e- 7  1.72e-25     24.4 
 3 mu         0.3      0.975     6.53e- 4  1.66e-18     11.3 
 4 mu         0.4      1.16      4.46e- 2  1.42e-13      7.76
 5 mu         0.5      1.20      2.53e- 1  8.88e-10     12.4 
 6 mu         0.6      1.12      2.51e- 1  2.53e- 9      9.87
 7 mu         0.7      1.02      4.75e- 1  3.62e-14      7.17
 8 mu         0.8      1.11      2.48e- 1  3.24e-21      5.21
 9 mu         0.9      1.19      9.15e- 4  1.49e-33     14.7 
10 mu_1       0.1      0.689     1.31e-12  1.71e-36     42.0 
11 mu_1       0.2      0.855     1.56e- 6  8.38e-25     24.4 
12 mu_1       0.3      1.01      1.52e- 3  5.40e-18     11.2 
13 mu_1       0.4      1.17      7.25e- 2  3.45e-13      8.10
14 mu_1       0.5      1.19      2.79e- 1  1.73e- 9     13.3 
15 mu_1       0.6      1.10      2.67e- 1  5.28e-10      8.82
16 mu_1       0.7      1.01      4.88e- 1  6.46e-15      7.58
17 mu_1       0.8      1.12      1.92e- 1  5.06e-22      5.45
18 mu_1       0.9      1.20      6.46e- 4  2.07e-34     15.6 
19 mu_0       0.1      0.449     8.40e-14  4.76e-39     32.7 
20 mu_0       0.2      0.800     2.08e- 7  5.24e-27     24.4 
21 mu_0       0.3      0.959     2.82e- 4  5.79e-20     13.0 
22 mu_0       0.4      1.15      2.51e- 2  5.76e-15      8.36
23 mu_0       0.5      1.21      1.72e- 1  4.33e-11     11.5 
24 mu_0       0.6      1.14      3.34e- 1  5.54e- 9     11.4 
25 mu_0       0.7      1.02      3.98e- 1  1.05e-13      6.24
26 mu_0       0.8      1.06      2.90e- 1  1.42e-20      6.76
27 mu_0       0.9      1.11      3.38e- 3  1.31e-32      7.19
[1] "Total run time was 227.943 seconds"
