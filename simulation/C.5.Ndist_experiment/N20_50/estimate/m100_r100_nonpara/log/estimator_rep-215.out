
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3399"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 1  7  2  4  3  8  1  6  4  4  4  1  2  2  2  3  2  3  4  4  1  3  4  5  7  2 
46 47 48 49 
 4  3  2  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03049 0.32923 0.59263 1.00000 5.00000 
[1] "event indicator table: "

   0    1 
1990 1409 
[1] "treatment indicator table: "

   0    1 
1260 2139 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1654
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 70"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1745
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 87"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 199.092 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.357 0.0560
 2 mu         0.1   0.2 0.533 0.0991
 3 mu         0.1   0.3 0.574 0.101 
 4 mu         0.1   0.4 0.656 0.120 
 5 mu         0.1   0.5 0.662 0.105 
 6 mu         0.2   0.1 0.280 0.0484
 7 mu         0.2   0.2 0.399 0.0723
 8 mu         0.2   0.3 0.439 0.0772
 9 mu         0.2   0.4 0.499 0.0933
10 mu         0.2   0.5 0.550 0.0702
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.872        0.596   0.00238      3.78
 2 mu         0.2      0.961        0.915   0.128        2.17
 3 mu         0.3      0.972        0.951   0.385        1.82
 4 mu         0.4      0.985        0.980   0.625        1.39
 5 mu         0.5      0.994        0.990   0.649        1.42
 6 mu         0.6      0.999        0.991   0.671        1.29
 7 mu         0.7      1.00         0.990   0.724        1.33
 8 mu         0.8      1.01         1.02    0.760        1.35
 9 mu         0.9      1.01         1.02    0.486        1.72
10 mu_1       0.1      0.912        0.765   0.00636      2.84
11 mu_1       0.2      0.970        0.957   0.186        2.03
12 mu_1       0.3      0.975        0.943   0.400        1.74
13 mu_1       0.4      0.986        0.995   0.627        1.36
14 mu_1       0.5      0.996        0.992   0.659        1.42
15 mu_1       0.6      0.998        0.988   0.669        1.28
16 mu_1       0.7      1.00         0.989   0.728        1.35
17 mu_1       0.8      1.01         1.02    0.750        1.35
18 mu_1       0.9      1.01         1.02    0.474        1.73
19 mu_0       0.1      0.867        0.578   0.00194      3.88
20 mu_0       0.2      0.958        0.906   0.114        2.21
21 mu_0       0.3      0.970        0.963   0.379        1.86
22 mu_0       0.4      0.985        0.989   0.598        1.43
23 mu_0       0.5      0.993        0.987   0.639        1.43
24 mu_0       0.6      0.999        0.987   0.674        1.31
25 mu_0       0.7      0.999        0.979   0.711        1.29
26 mu_0       0.8      1.01         1.00    0.781        1.38
27 mu_0       0.9      1.02         1.00    0.598        1.63
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      2.09      7.70e-14  2.50e-33    205.  
 2 mu         0.2      0.626     9.08e- 8  8.58e-22     10.9 
 3 mu         0.3      1.14      1.54e- 4  3.71e-15     15.8 
 4 mu         0.4      1.19      1.97e- 2  1.49e-10     10.6 
 5 mu         0.5      1.12      2.52e- 1  1.42e- 7      6.13
 6 mu         0.6      1.18      5.29e- 1  3.18e-11      7.53
 7 mu         0.7      1.17      7.38e- 1  2.14e-16      7.24
 8 mu         0.8      0.974     2.63e- 1  8.58e-24      7.96
 9 mu         0.9      0.827     9.21e- 4  1.39e-36      8.19
10 mu_1       0.1      1.42      5.23e-13  2.27e-32    134.  
11 mu_1       0.2      0.762     2.97e- 7  3.89e-21     14.7 
12 mu_1       0.3      1.21      3.44e- 4  1.12e-14     15.4 
13 mu_1       0.4      1.15      3.15e- 2  3.38e-10      8.83
14 mu_1       0.5      1.11      3.37e- 1  3.53e- 8      5.97
15 mu_1       0.6      1.19      5.92e- 1  3.46e-12      8.14
16 mu_1       0.7      1.16      5.82e- 1  2.00e-17      6.71
17 mu_1       0.8      0.963     2.22e- 1  6.99e-25      7.68
18 mu_1       0.9      0.837     6.81e- 4  1.01e-37      8.36
19 mu_0       0.1      2.16      2.74e-14  0           213.  
20 mu_0       0.2      0.593     3.44e- 8  0            12.1 
21 mu_0       0.3      1.11      7.22e- 5  0            16.1 
22 mu_0       0.4      1.21      1.19e- 2  0            11.8 
23 mu_0       0.5      1.14      1.89e- 1  0             6.28
24 mu_0       0.6      1.18      4.92e- 1  0             6.62
25 mu_0       0.7      1.20      5.81e- 1  0             8.47
26 mu_0       0.8      1.02      1.71e- 1  0             9.10
27 mu_0       0.9      0.738     2.28e- 3  0             6.64
[1] "Total run time was 202.331 seconds"
