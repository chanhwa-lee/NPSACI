
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3533"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 1  5  3  3  2  3  5  2  4  4  3  1  3  3  4  3  1  3  4  4  6  5  3  3  2  5 
46 47 48 49 50 
 5  2  4  3  1 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03276 0.35941 0.62371 1.00000 5.00000 
[1] "event indicator table: "

   0    1 
2112 1421 
[1] "treatment indicator table: "

   0    1 
1313 2220 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1782
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1751
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 419.619 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.506 0.0795
 2 mu         0.1   0.2 0.589 0.0948
 3 mu         0.1   0.3 0.609 0.0785
 4 mu         0.1   0.4 0.714 0.112 
 5 mu         0.1   0.5 0.761 0.135 
 6 mu         0.2   0.1 0.408 0.0552
 7 mu         0.2   0.2 0.489 0.0613
 8 mu         0.2   0.3 0.530 0.0500
 9 mu         0.2   0.4 0.627 0.0746
10 mu         0.2   0.5 0.670 0.0889
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.01         0.750  0.000291      3.39
 2 mu         0.2      0.982        0.976  0.0693        2.19
 3 mu         0.3      0.966        0.946  0.473         1.41
 4 mu         0.4      1.00         1.01   0.663         1.36
 5 mu         0.5      1.03         1.03   0.657         1.38
 6 mu         0.6      1.01         1.00   0.767         1.33
 7 mu         0.7      0.995        0.995  0.708         1.31
 8 mu         0.8      0.996        0.991  0.590         1.34
 9 mu         0.9      1.01         0.988  0.418         1.82
10 mu_1       0.1      0.983        0.874  0.000892      3.08
11 mu_1       0.2      0.976        0.931  0.112         2.01
12 mu_1       0.3      0.971        0.958  0.560         1.38
13 mu_1       0.4      1.01         1.02   0.702         1.39
14 mu_1       0.5      1.03         1.03   0.659         1.35
15 mu_1       0.6      1.01         0.999  0.751         1.33
16 mu_1       0.7      0.995        0.990  0.694         1.34
17 mu_1       0.8      0.995        0.988  0.592         1.34
18 mu_1       0.9      1.01         0.984  0.408         1.85
19 mu_0       0.1      1.02         0.754  0.000224      3.53
20 mu_0       0.2      0.984        0.954  0.0586        2.23
21 mu_0       0.3      0.964        0.942  0.436         1.47
22 mu_0       0.4      0.998        1.02   0.637         1.37
23 mu_0       0.5      1.02         1.03   0.655         1.41
24 mu_0       0.6      1.01         1.01   0.764         1.33
25 mu_0       0.7      0.996        0.995  0.742         1.29
26 mu_0       0.8      0.997        0.991  0.578         1.42
27 mu_0       0.9      0.994        0.985  0.517         1.56
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.157     4.69e-13  5.97e-37      6.99
 2 mu         0.2      0.562     4.59e- 7  1.84e-24     16.8 
 3 mu         0.3      1.01      7.04e- 4  3.07e-17     12.1 
 4 mu         0.4      1.41      3.16e- 2  3.42e-12     18.1 
 5 mu         0.5      1.12      3.02e- 1  2.33e- 8      6.68
 6 mu         0.6      0.920     3.70e- 1  1.32e- 5      5.16
 7 mu         0.7      0.933     3.46e- 1  7.95e- 9      4.80
 8 mu         0.8      1.04      2.13e- 1  1.39e-13      6.19
 9 mu         0.9      1.06      5.67e- 4  5.23e-22     12.1 
10 mu_1       0.1      0.303     3.22e-12  5.57e-36     13.0 
11 mu_1       0.2      0.641     1.35e- 6  8.60e-24     15.5 
12 mu_1       0.3      1.11      1.53e- 3  9.56e-17     14.9 
13 mu_1       0.4      1.40      5.47e- 2  7.98e-12     16.6 
14 mu_1       0.5      1.07      3.61e- 1  4.34e- 8      6.91
15 mu_1       0.6      0.913     3.47e- 1  3.78e- 6      4.97
16 mu_1       0.7      0.937     3.76e- 1  1.95e- 9      4.85
17 mu_1       0.8      1.04      2.14e- 1  2.97e-14      6.36
18 mu_1       0.9      1.07      4.05e- 4  9.97e-23     12.4 
19 mu_0       0.1      0.141     1.63e-13  0             6.33
20 mu_0       0.2      0.542     2.36e- 7  0            17.1 
21 mu_0       0.3      0.962     3.33e- 4  0            11.0 
22 mu_0       0.4      1.41      1.61e- 2  0            19.1 
23 mu_0       0.5      1.17      2.12e- 1  0             6.55
24 mu_0       0.6      0.931     3.71e- 1  0             5.46
25 mu_0       0.7      0.925     4.13e- 1  0             4.80
26 mu_0       0.8      1.01      2.83e- 1  0             5.50
27 mu_0       0.9      1.03      1.18e- 3  0            12.8 
[1] "Total run time was 424.139 seconds"
