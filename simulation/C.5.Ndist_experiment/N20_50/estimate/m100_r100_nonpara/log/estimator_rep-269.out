
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3585"
[1] "cluster size dist'n: "

20 21 22 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 44 45 46 47 
 3  4  3  5  2  1  4  6  1  4  6  3  3  2  1  4  4  3  4  2  2  2  4  6  3  2 
48 49 50 
 7  2  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03988 0.35816 0.61719 1.00000 6.02483 
[1] "event indicator table: "

   0    1 
2131 1454 
[1] "treatment indicator table: "

   0    1 
1229 2356 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1760
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1825
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 302.002 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.359 0.0482
 2 mu         0.1   0.2 0.535 0.0819
 3 mu         0.1   0.3 0.614 0.102 
 4 mu         0.1   0.4 0.660 0.103 
 5 mu         0.1   0.5 0.709 0.109 
 6 mu         0.2   0.1 0.340 0.0352
 7 mu         0.2   0.2 0.464 0.0690
 8 mu         0.2   0.3 0.534 0.0700
 9 mu         0.2   0.4 0.566 0.0705
10 mu         0.2   0.5 0.621 0.0628
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.965        0.804   0.00674      6.34
 2 mu         0.2      1.00         0.972   0.247        2.34
 3 mu         0.3      1.02         1.00    0.366        1.85
 4 mu         0.4      1.01         0.989   0.594        1.59
 5 mu         0.5      1.00         0.993   0.698        1.33
 6 mu         0.6      1.01         0.994   0.573        1.45
 7 mu         0.7      0.990        0.998   0.579        1.45
 8 mu         0.8      1.00         1.01    0.688        1.35
 9 mu         0.9      0.969        0.974   0.440        1.38
10 mu_1       0.1      0.995        0.864   0.0174       4.01
11 mu_1       0.2      1.00         0.966   0.245        2.06
12 mu_1       0.3      1.02         1.00    0.367        1.87
13 mu_1       0.4      1.01         0.993   0.596        1.59
14 mu_1       0.5      1.01         0.989   0.703        1.31
15 mu_1       0.6      1.01         0.996   0.560        1.46
16 mu_1       0.7      0.989        1.00    0.582        1.44
17 mu_1       0.8      1.00         1.01    0.676        1.36
18 mu_1       0.9      0.967        0.971   0.437        1.37
19 mu_0       0.1      0.962        0.794   0.00556      6.67
20 mu_0       0.2      1.00         0.959   0.247        2.41
21 mu_0       0.3      1.02         0.994   0.366        1.85
22 mu_0       0.4      1.01         0.989   0.579        1.61
23 mu_0       0.5      1.00         1.00    0.668        1.39
24 mu_0       0.6      1.01         1.00    0.593        1.45
25 mu_0       0.7      0.992        0.992   0.570        1.48
26 mu_0       0.8      1.00         1.00    0.684        1.29
27 mu_0       0.9      0.982        0.994   0.472        1.40
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      3.00      9.07e-14  7.02e-44    166.  
 2 mu         0.2      0.961     9.53e- 8  2.47e-30     30.2 
 3 mu         0.3      0.677     1.62e- 4  2.07e-22     15.4 
 4 mu         0.4      1.06      1.37e- 2  8.69e-17     12.1 
 5 mu         0.5      1.18      2.03e- 1  2.00e-12     13.9 
 6 mu         0.6      1.11      5.29e- 1  7.30e- 9      5.09
 7 mu         0.7      1.20      5.52e- 1  2.95e-13      6.73
 8 mu         0.8      1.12      5.00e- 1  1.02e-19      6.42
 9 mu         0.9      1.03      4.43e- 3  5.97e-31      9.81
10 mu_1       0.1      2.79      6.81e-13  7.02e-43    158.  
11 mu_1       0.2      0.678     2.95e- 7  1.23e-29     18.1 
12 mu_1       0.3      0.705     3.79e- 4  6.91e-22     14.5 
13 mu_1       0.4      1.12      1.96e- 2  2.17e-16     11.9 
14 mu_1       0.5      1.17      2.45e- 1  3.99e-12     12.9 
15 mu_1       0.6      1.12      5.16e- 1  1.41e- 9      5.49
16 mu_1       0.7      1.19      5.39e- 1  4.01e-14      6.77
17 mu_1       0.8      1.10      4.49e- 1  1.22e-20      6.42
18 mu_1       0.9      1.03      3.28e- 3  6.31e-32     10.5 
19 mu_0       0.1      3.02      2.51e-14  0           167.  
20 mu_0       0.2      1.03      4.29e- 8  0            34.2 
21 mu_0       0.3      0.665     6.88e- 5  0            15.8 
22 mu_0       0.4      1.01      7.85e- 3  0            12.3 
23 mu_0       0.5      1.19      1.42e- 1  0            14.8 
24 mu_0       0.6      1.09      3.61e- 1  0             4.70
25 mu_0       0.7      1.20      4.07e- 1  0             6.65
26 mu_0       0.8      1.16      4.29e- 1  0             6.56
27 mu_0       0.9      1.04      7.85e- 3  0             7.45
[1] "Total run time was 306.411 seconds"
