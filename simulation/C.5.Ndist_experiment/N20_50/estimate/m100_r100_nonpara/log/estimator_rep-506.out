
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3641"
[1] "cluster size dist'n: "

20 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 38 39 40 41 42 43 44 45 46 47 
 3  1  4  4  4  2  3  2  3  5  4  1  3  6  5  1  5  4  3  4  3  3  2  3  3  2 
48 49 50 
 4  7  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04752 0.37377 0.63559 1.00000 5.00000 
[1] "event indicator table: "

   0    1 
2081 1560 
[1] "treatment indicator table: "

   0    1 
1380 2261 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1720
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 71"
[1] "     Cluster: 77"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1921
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 256.438 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.318 0.0627
 2 mu         0.1   0.2 0.407 0.0709
 3 mu         0.1   0.3 0.445 0.0725
 4 mu         0.1   0.4 0.455 0.0681
 5 mu         0.1   0.5 0.462 0.0730
 6 mu         0.2   0.1 0.393 0.0631
 7 mu         0.2   0.2 0.492 0.0615
 8 mu         0.2   0.3 0.559 0.0639
 9 mu         0.2   0.4 0.580 0.0600
10 mu         0.2   0.5 0.599 0.0660
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      0.697        0.236 0.00000583      5.11
 2 mu         0.2      0.933        0.867 0.0233          4.05
 3 mu         0.3      0.966        0.937 0.320           1.98
 4 mu         0.4      0.972        0.980 0.342           1.30
 5 mu         0.5      0.993        0.985 0.469           1.33
 6 mu         0.6      1.02         1.00  0.725           1.34
 7 mu         0.7      1.01         1.01  0.712           1.36
 8 mu         0.8      0.996        1.01  0.548           1.26
 9 mu         0.9      0.973        0.959 0.374           1.62
10 mu_1       0.1      0.843        0.450 0.0000205       5.22
11 mu_1       0.2      0.948        0.868 0.0417          3.39
12 mu_1       0.3      0.969        0.975 0.397           1.85
13 mu_1       0.4      0.973        0.973 0.349           1.31
14 mu_1       0.5      0.996        0.996 0.496           1.37
15 mu_1       0.6      1.02         1.01  0.763           1.30
16 mu_1       0.7      1.01         1.01  0.696           1.38
17 mu_1       0.8      0.994        1.01  0.535           1.25
18 mu_1       0.9      0.973        0.958 0.359           1.67
19 mu_0       0.1      0.681        0.218 0.00000420      5.34
20 mu_0       0.2      0.930        0.842 0.0187          4.22
21 mu_0       0.3      0.965        0.921 0.287           2.04
22 mu_0       0.4      0.972        0.996 0.337           1.33
23 mu_0       0.5      0.990        0.978 0.443           1.29
24 mu_0       0.6      1.01         1.01  0.669           1.40
25 mu_0       0.7      1.01         1.02  0.751           1.33
26 mu_0       0.8      1.00         0.996 0.601           1.37
27 mu_0       0.9      0.975        0.951 0.317           1.51
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.47      7.35e-14  1.72e-39     75.7 
 2 mu         0.2      1.87      1.43e- 7  4.24e-26     99.4 
 3 mu         0.3      0.878     2.25e- 4  2.38e-18     13.8 
 4 mu         0.4      0.934     2.76e- 2  6.29e-13     16.1 
 5 mu         0.5      0.977     2.67e- 1  8.36e- 9      6.26
 6 mu         0.6      1.09      6.23e- 1  7.29e- 8      5.23
 7 mu         0.7      1.07      8.75e- 1  2.16e-12      4.45
 8 mu         0.8      0.930     3.74e- 1  4.97e-19      5.50
 9 mu         0.9      0.989     8.68e- 4  1.03e-30     20.5 
10 mu_1       0.1      2.15      4.93e-13  1.61e-38    116.  
11 mu_1       0.2      1.59      4.75e- 7  1.99e-25     76.4 
12 mu_1       0.3      0.838     4.95e- 4  7.45e-18      9.49
13 mu_1       0.4      0.948     3.68e- 2  1.47e-12     16.0 
14 mu_1       0.5      0.983     3.51e- 1  1.57e- 8      4.95
15 mu_1       0.6      1.10      6.45e- 1  1.81e- 8      5.09
16 mu_1       0.7      1.07      7.45e- 1  4.59e-13      4.41
17 mu_1       0.8      0.922     3.03e- 1  9.25e-20      5.63
18 mu_1       0.9      0.997     6.45e- 4  1.71e-31     21.4 
19 mu_0       0.1      1.40      2.81e-14  1.19e-40     71.2 
20 mu_0       0.2      1.94      5.73e- 8  3.31e-27    105.  
21 mu_0       0.3      0.895     1.09e- 4  2.13e-19     16.7 
22 mu_0       0.4      0.924     1.68e- 2  6.56e-14     16.3 
23 mu_0       0.5      0.971     2.21e- 1  1.05e- 9      7.57
24 mu_0       0.6      1.07      5.12e- 1  1.55e- 7      5.45
25 mu_0       0.7      1.09      8.87e- 1  6.12e-12      4.54
26 mu_0       0.8      0.963     2.60e- 1  2.11e-18      5.00
27 mu_0       0.9      0.920     2.88e- 3  8.77e-30     12.8 
[1] "Total run time was 260.891 seconds"
