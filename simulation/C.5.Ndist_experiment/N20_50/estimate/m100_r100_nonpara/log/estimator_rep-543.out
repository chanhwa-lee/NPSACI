
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3472"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 2  5  4  1  6  1  3  3  2  4  6  2  3  2  4  4  5  3  2  3  3  8  4  3  3  1 
46 47 48 49 50 
 1  3  3  1  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03978 0.32942 0.58448 0.99377 5.00000 
[1] "event indicator table: "

   0    1 
2062 1410 
[1] "treatment indicator table: "

   0    1 
1357 2115 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1738
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1734
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 86"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 232.854 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.312 0.0622
 2 mu         0.1   0.2 0.462 0.0812
 3 mu         0.1   0.3 0.557 0.0872
 4 mu         0.1   0.4 0.633 0.102 
 5 mu         0.1   0.5 0.645 0.0903
 6 mu         0.2   0.1 0.274 0.0469
 7 mu         0.2   0.2 0.393 0.0563
 8 mu         0.2   0.3 0.468 0.0577
 9 mu         0.2   0.4 0.536 0.0556
10 mu         0.2   0.5 0.567 0.0479
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.961        0.814   0.00130      2.82
 2 mu         0.2      0.934        0.906   0.171        1.69
 3 mu         0.3      0.976        0.971   0.595        1.52
 4 mu         0.4      1.01         1.01    0.706        1.51
 5 mu         0.5      1.01         1.00    0.734        1.39
 6 mu         0.6      1.01         1.01    0.769        1.31
 7 mu         0.7      1.01         1.01    0.738        1.25
 8 mu         0.8      1.01         1.01    0.616        1.60
 9 mu         0.9      0.991        0.987   0.489        1.83
10 mu_1       0.1      0.926        0.861   0.00336      2.91
11 mu_1       0.2      0.943        0.928   0.247        1.61
12 mu_1       0.3      0.985        0.978   0.624        1.49
13 mu_1       0.4      1.01         0.999   0.701        1.48
14 mu_1       0.5      1.01         1.00    0.749        1.36
15 mu_1       0.6      1.01         1.01    0.766        1.31
16 mu_1       0.7      1.01         1.00    0.721        1.27
17 mu_1       0.8      1.01         1.00    0.624        1.61
18 mu_1       0.9      0.989        0.985   0.477        1.86
19 mu_0       0.1      0.965        0.790   0.00107      2.91
20 mu_0       0.2      0.932        0.898   0.153        1.74
21 mu_0       0.3      0.972        0.962   0.564        1.53
22 mu_0       0.4      1.01         1.01    0.691        1.52
23 mu_0       0.5      1.01         1.00    0.718        1.42
24 mu_0       0.6      1.00         0.999   0.772        1.32
25 mu_0       0.7      1.01         1.02    0.752        1.20
26 mu_0       0.8      1.01         0.995   0.584        1.54
27 mu_0       0.9      1.01         1.00    0.600        1.79
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.374     4.31e-11  5.25e-40     30.4 
 2 mu         0.2      0.707     7.40e- 6  4.10e-27     13.0 
 3 mu         0.3      0.857     3.13e- 3  1.34e-19     12.8 
 4 mu         0.4      1.01      1.01e- 1  2.71e-14      6.59
 5 mu         0.5      1.17      6.46e- 1  3.31e-10      6.61
 6 mu         0.6      1.18      8.73e- 1  6.73e- 7      5.90
 7 mu         0.7      1.02      3.73e- 1  5.57e-11      4.98
 8 mu         0.8      0.900     1.05e- 1  3.77e-17      5.88
 9 mu         0.9      1.13      1.55e- 4  3.96e-28     19.2 
10 mu_1       0.1      0.441     2.27e-10  5.13e-39     28.9 
11 mu_1       0.2      0.754     2.36e- 5  2.00e-26     11.7 
12 mu_1       0.3      0.868     6.81e- 3  4.36e-19     11.9 
13 mu_1       0.4      1.05      1.49e- 1  6.61e-14      7.23
14 mu_1       0.5      1.18      7.57e- 1  6.48e-10      6.61
15 mu_1       0.6      1.17      7.39e- 1  2.48e- 7      6.28
16 mu_1       0.7      0.994     3.25e- 1  1.52e-11      5.38
17 mu_1       0.8      0.899     8.92e- 2  9.02e-18      5.81
18 mu_1       0.9      1.15      1.08e- 4  8.42e-29     20.1 
19 mu_0       0.1      0.367     2.27e-11  0            30.5 
20 mu_0       0.2      0.695     3.59e- 6  0            14.7 
21 mu_0       0.3      0.852     1.59e- 3  0            13.1 
22 mu_0       0.4      0.978     8.93e- 2  0             7.52
23 mu_0       0.5      1.16      4.98e- 1  0             6.61
24 mu_0       0.6      1.19      8.20e- 1  0             5.33
25 mu_0       0.7      1.07      4.69e- 1  0             5.85
26 mu_0       0.8      0.904     1.91e- 1  0             6.61
27 mu_0       0.9      0.967     4.41e- 4  0            12.0 
[1] "Total run time was 236.6 seconds"
