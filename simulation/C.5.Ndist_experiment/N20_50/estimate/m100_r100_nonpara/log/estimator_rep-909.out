
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3539"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 2  4  2  1  2  6  1  5  2  4  5  1  6  3  3  5  4  2  3  2  3  4  3  1  7  3 
46 47 48 49 50 
 3  6  3  2  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03862 0.36458 0.62104 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
2095 1444 
[1] "treatment indicator table: "

   0    1 
1257 2282 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1812
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1727
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 361.807 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.325 0.0849
 2 mu         0.1   0.2 0.433 0.148 
 3 mu         0.1   0.3 0.466 0.127 
 4 mu         0.1   0.4 0.509 0.127 
 5 mu         0.1   0.5 0.539 0.119 
 6 mu         0.2   0.1 0.398 0.0763
 7 mu         0.2   0.2 0.525 0.132 
 8 mu         0.2   0.3 0.565 0.113 
 9 mu         0.2   0.4 0.625 0.112 
10 mu         0.2   0.5 0.650 0.0989
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.659        0.217  1.18e- 9      7.33
 2 mu         0.2      0.924        0.717  1.39e- 4      8.78
 3 mu         0.3      0.961        0.967  2.80e- 2      3.07
 4 mu         0.4      1.02         1.01   3.31e- 1      1.67
 5 mu         0.5      1.01         1.04   6.45e- 1      1.55
 6 mu         0.6      0.995        1.00   6.79e- 1      1.22
 7 mu         0.7      0.999        0.999  7.47e- 1      1.30
 8 mu         0.8      1.00         1.01   6.28e- 1      1.45
 9 mu         0.9      1.00         0.979  2.95e- 1      3.17
10 mu_1       0.1      0.762        0.355  5.31e- 9     10.7 
11 mu_1       0.2      0.947        0.822  3.16e- 4      7.00
12 mu_1       0.3      0.979        1.01   4.31e- 2      2.80
13 mu_1       0.4      1.03         0.998  3.94e- 1      1.65
14 mu_1       0.5      1.01         1.03   6.56e- 1      1.51
15 mu_1       0.6      0.994        1.00   6.91e- 1      1.22
16 mu_1       0.7      1.00         1.00   7.55e- 1      1.30
17 mu_1       0.8      1.00         1.00   6.19e- 1      1.47
18 mu_1       0.9      1.00         0.972  2.80e- 1      3.38
19 mu_0       0.1      0.648        0.194  7.21e-10      6.96
20 mu_0       0.2      0.919        0.704  9.50e- 5      9.22
21 mu_0       0.3      0.954        0.948  2.16e- 2      3.19
22 mu_0       0.4      1.02         1.02   2.88e- 1      1.67
23 mu_0       0.5      1.02         1.03   6.34e- 1      1.58
24 mu_0       0.6      0.996        1.00   6.61e- 1      1.24
25 mu_0       0.7      0.996        0.988  7.28e- 1      1.29
26 mu_0       0.8      1.01         1.01   6.63e- 1      1.40
27 mu_0       0.9      1.00         0.964  4.30e- 1      2.36
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      3.44      4.08e-15  1.47e-36    285.  
 2 mu         0.2      4.55      1.04e- 8  8.07e-24    143.  
 3 mu         0.3      3.31      4.76e- 5  1.77e-16     81.2 
 4 mu         0.4      1.66      8.30e- 3  2.25e-11     29.0 
 5 mu         0.5      0.884     1.63e- 1  1.59e- 7      6.19
 6 mu         0.6      0.847     4.54e- 1  5.04e- 5      3.49
 7 mu         0.7      1.15      9.90e- 1  1.52e- 8      3.83
 8 mu         0.8      1.48      6.56e- 1  7.82e-14      9.81
 9 mu         0.9      1.50      6.80e- 3  2.63e-23     36.8 
10 mu_1       0.1      4.33      3.00e-14  1.34e-35    317.  
11 mu_1       0.2      4.34      3.66e- 8  3.69e-23    132.  
12 mu_1       0.3      2.92      1.10e- 4  5.39e-16     75.2 
13 mu_1       0.4      1.42      1.40e- 2  5.14e-11     24.7 
14 mu_1       0.5      0.843     2.30e- 1  2.91e- 7      6.19
15 mu_1       0.6      0.868     5.02e- 1  1.80e- 5      3.19
16 mu_1       0.7      1.18      1.07e+ 0  4.66e- 9      3.95
17 mu_1       0.8      1.50      5.80e- 1  2.09e-14     11.3 
18 mu_1       0.9      1.48      5.11e- 3  6.26e-24     37.7 
19 mu_0       0.1      3.34      1.13e-15  0           282.  
20 mu_0       0.2      4.60      4.29e- 9  0           150.  
21 mu_0       0.3      3.48      2.30e- 5  0            83.8 
22 mu_0       0.4      1.82      4.50e- 3  0            31.9 
23 mu_0       0.5      0.924     1.03e- 1  0             6.19
24 mu_0       0.6      0.815     3.52e- 1  0             4.03
25 mu_0       0.7      1.08      8.06e- 1  0             4.07
26 mu_0       0.8      1.41      8.53e- 1  0             6.37
27 mu_0       0.9      1.63      1.55e- 2  0            29.5 
[1] "Total run time was 365.646 seconds"
