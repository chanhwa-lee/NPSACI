
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3464"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 
 5  4  2  6  8  2  1  2  5  2  1  2  3  3  3  5  3  4  5  3  4  1  2  5  3  4 
47 48 49 50 
 4  2  3  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03457 0.33881 0.60913 1.00000 5.57104 
[1] "event indicator table: "

   0    1 
2057 1407 
[1] "treatment indicator table: "

   0    1 
1309 2155 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1731
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1733
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 182.946 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.411 0.0910
 2 mu         0.1   0.2 0.466 0.112 
 3 mu         0.1   0.3 0.550 0.127 
 4 mu         0.1   0.4 0.650 0.151 
 5 mu         0.1   0.5 0.694 0.164 
 6 mu         0.2   0.1 0.309 0.0461
 7 mu         0.2   0.2 0.357 0.0608
 8 mu         0.2   0.3 0.416 0.0643
 9 mu         0.2   0.4 0.473 0.0719
10 mu         0.2   0.5 0.503 0.0768
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      1.28         0.576 0.00000984     19.6 
 2 mu         0.2      0.989        0.984 0.0119          3.05
 3 mu         0.3      1.01         1.00  0.201           2.45
 4 mu         0.4      1.03         0.997 0.582           1.86
 5 mu         0.5      1.00         0.994 0.666           1.44
 6 mu         0.6      0.984        0.983 0.600           1.26
 7 mu         0.7      0.979        0.967 0.771           1.33
 8 mu         0.8      0.982        0.971 0.665           1.51
 9 mu         0.9      1.03         0.961 0.320           2.20
10 mu_1       0.1      1.15         0.767 0.0000374      13.1 
11 mu_1       0.2      0.978        1.03  0.0228          2.51
12 mu_1       0.3      1.02         1.01  0.267           2.30
13 mu_1       0.4      1.03         1.01  0.620           1.78
14 mu_1       0.5      1.00         0.984 0.673           1.38
15 mu_1       0.6      0.983        0.982 0.604           1.27
16 mu_1       0.7      0.979        0.964 0.763           1.33
17 mu_1       0.8      0.982        0.971 0.662           1.52
18 mu_1       0.9      1.03         0.968 0.306           2.24
19 mu_0       0.1      1.30         0.556 0.00000678     20.4 
20 mu_0       0.2      0.992        0.960 0.00912         3.36
21 mu_0       0.3      1.01         1.01  0.173           2.51
22 mu_0       0.4      1.03         0.983 0.554           1.91
23 mu_0       0.5      1.01         0.990 0.659           1.50
24 mu_0       0.6      0.986        0.985 0.594           1.25
25 mu_0       0.7      0.981        0.958 0.734           1.33
26 mu_0       0.8      0.979        0.965 0.647           1.46
27 mu_0       0.9      1.02         0.982 0.446           1.84
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.808     1.64e-11  2.76e-35     50.6 
 2 mu         0.2      2.06      3.03e- 6  3.79e-23     67.3 
 3 mu         0.3      1.95      2.26e- 3  3.68e-16     41.7 
 4 mu         0.4      1.57      9.90e- 2  2.63e-11     30.9 
 5 mu         0.5      1.31      3.87e- 1  1.10e- 7     12.1 
 6 mu         0.6      1.12      6.26e- 1  4.33e- 5      5.26
 7 mu         0.7      1.12      6.92e- 1  1.11e- 7      5.99
 8 mu         0.8      1.23      2.50e- 1  3.82e-12      8.30
 9 mu         0.9      1.60      1.14e- 3  5.13e-20     23.4 
10 mu_1       0.1      1.38      1.07e-10  2.51e-34     79.0 
11 mu_1       0.2      2.14      9.47e- 6  1.73e-22     52.6 
12 mu_1       0.3      1.85      4.71e- 3  1.12e-15     36.6 
13 mu_1       0.4      1.50      1.61e- 1  6.00e-11     28.9 
14 mu_1       0.5      1.28      3.89e- 1  2.14e- 7     10.6 
15 mu_1       0.6      1.11      7.12e- 1  3.17e- 5      5.41
16 mu_1       0.7      1.13      6.47e- 1  2.49e- 8      6.33
17 mu_1       0.8      1.24      1.93e- 1  7.47e-13      8.51
18 mu_1       0.9      1.64      8.01e- 4  8.91e-21     24.5 
19 mu_0       0.1      0.744     6.37e-12  0            47.4 
20 mu_0       0.2      2.04      1.30e- 6  0            71.0 
21 mu_0       0.3      2.00      1.31e- 3  0            43.9 
22 mu_0       0.4      1.62      5.76e- 2  0            32.2 
23 mu_0       0.5      1.33      3.04e- 1  0            13.5 
24 mu_0       0.6      1.14      5.42e- 1  0             5.03
25 mu_0       0.7      1.10      5.86e- 1  0             5.21
26 mu_0       0.8      1.18      3.16e- 1  0             7.47
27 mu_0       0.9      1.29      3.45e- 3  0            19.1 
[1] "Total run time was 186.158 seconds"
