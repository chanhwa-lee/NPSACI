
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3612"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 33 34 35 36 37 38 39 40 41 42 43 44 45 46 
 3  2  3  3  2  5  2  2  6  3  2  1  4  2  2  2  4  6  7  1  4  4  5  4  1  5 
47 48 49 50 
 5  6  2  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03136 0.33525 0.59419 1.00000 5.00000 
[1] "event indicator table: "

   0    1 
2173 1439 
[1] "treatment indicator table: "

   0    1 
1219 2393 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1765
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 38"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1847
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 10"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 265.257 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.390 0.117 
 2 mu         0.1   0.2 0.443 0.120 
 3 mu         0.1   0.3 0.436 0.107 
 4 mu         0.1   0.4 0.470 0.115 
 5 mu         0.1   0.5 0.511 0.127 
 6 mu         0.2   0.1 0.424 0.0966
 7 mu         0.2   0.2 0.498 0.0954
 8 mu         0.2   0.3 0.514 0.0786
 9 mu         0.2   0.4 0.568 0.0884
10 mu         0.2   0.5 0.625 0.0993
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.638       0.102   1.42e-12     11.9 
 2 mu         0.2      0.905       0.605   1.45e- 6     10.9 
 3 mu         0.3      1.00        0.895   1.14e- 3      5.52
 4 mu         0.4      1.03        1.03    4.41e- 2      2.17
 5 mu         0.5      1.02        0.997   3.38e- 1      2.26
 6 mu         0.6      1.00        0.978   6.77e- 1      1.97
 7 mu         0.7      1.00        0.988   6.65e- 1      2.15
 8 mu         0.8      1.03        1.00    6.82e- 1      1.54
 9 mu         0.9      1.03        1.01    3.07e- 1      1.90
10 mu_1       0.1      0.665       0.219   7.09e-12      7.30
11 mu_1       0.2      0.961       0.694   3.64e- 6     11.8 
12 mu_1       0.3      1.01        0.946   1.94e- 3      4.25
13 mu_1       0.4      1.04        1.02    5.90e- 2      2.33
14 mu_1       0.5      1.01        1.01    3.89e- 1      2.26
15 mu_1       0.6      0.999       0.978   6.93e- 1      1.91
16 mu_1       0.7      1.00        0.992   6.80e- 1      2.19
17 mu_1       0.8      1.03        0.996   6.78e- 1      1.59
18 mu_1       0.9      1.03        1.01    3.03e- 1      1.90
19 mu_0       0.1      0.635       0.0883  7.87e-13     12.6 
20 mu_0       0.2      0.892       0.573   9.03e- 7     10.7 
21 mu_0       0.3      0.998       0.868   7.94e- 4      6.06
22 mu_0       0.4      1.03        1.02    3.41e- 2      2.05
23 mu_0       0.5      1.02        1.01    2.88e- 1      2.25
24 mu_0       0.6      1.00        0.975   6.54e- 1      2.06
25 mu_0       0.7      0.998       0.981   6.25e- 1      2.06
26 mu_0       0.8      1.02        1.00    6.93e- 1      1.67
27 mu_0       0.9      1.03        1.01    3.48e- 1      1.91
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       3.77     1.15e-14  4.84e-39     355. 
 2 mu         0.2       1.85     1.51e- 8  1.06e-26     120. 
 3 mu         0.3       1.23     4.26e- 5  1.77e-19      39.1
 4 mu         0.4       1.11     5.14e- 3  2.34e-14      29.3
 5 mu         0.5       1.20     1.08e- 1  2.20e-10      15.6
 6 mu         0.6       1.40     5.95e- 1  3.88e- 7      18.1
 7 mu         0.7       1.60     6.39e- 1  6.16e-10      25.2
 8 mu         0.8       1.31     8.47e- 1  4.17e-16      11.4
 9 mu         0.9       1.14     9.38e- 3  4.38e-27      19.3
10 mu_1       0.1       1.85     7.72e-14  4.84e-38     142. 
11 mu_1       0.2       1.57     5.64e- 8  5.32e-26     115. 
12 mu_1       0.3       1.20     1.09e- 4  5.88e-19      43.5
13 mu_1       0.4       1.09     8.36e- 3  5.85e-14      24.4
14 mu_1       0.5       1.23     1.58e- 1  4.40e-10      16.2
15 mu_1       0.6       1.42     7.02e- 1  5.02e- 7      20.1
16 mu_1       0.7       1.60     6.07e- 1  1.69e-10      24.0
17 mu_1       0.8       1.30     7.56e- 1  9.98e-17      11.3
18 mu_1       0.9       1.14     7.47e- 3  9.32e-28      20.7
19 mu_0       0.1       3.99     4.18e-15  0            379. 
20 mu_0       0.2       1.92     5.51e- 9  0            121. 
21 mu_0       0.3       1.23     1.55e- 5  0             37.3
22 mu_0       0.4       1.12     2.60e- 3  0             32.6
23 mu_0       0.5       1.17     5.62e- 2  0             14.9
24 mu_0       0.6       1.36     4.28e- 1  0             15.1
25 mu_0       0.7       1.59     7.95e- 1  0             28.0
26 mu_0       0.8       1.35     9.12e- 1  0             11.8
27 mu_0       0.9       1.14     1.88e- 2  0             10.2
[1] "Total run time was 269.282 seconds"
