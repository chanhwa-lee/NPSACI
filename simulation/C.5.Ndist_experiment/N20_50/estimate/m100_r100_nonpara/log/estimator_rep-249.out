
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3441"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 
 6  3  4  2  3  2  2  4  2  3  5  4  3  5  7  4  5  2  5  2  5  3  2  5  1  3 
47 48 49 50 
 1  1  2  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.01558 0.27701 0.54812 0.93464 5.22699 
[1] "event indicator table: "

   0    1 
2010 1431 
[1] "treatment indicator table: "

   0    1 
1426 2015 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1728
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 20"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1713
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 53"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 195.299 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.461 0.0888
 2 mu         0.1   0.2 0.524 0.0743
 3 mu         0.1   0.3 0.596 0.0629
 4 mu         0.1   0.4 0.627 0.0651
 5 mu         0.1   0.5 0.660 0.0850
 6 mu         0.2   0.1 0.432 0.0525
 7 mu         0.2   0.2 0.505 0.0397
 8 mu         0.2   0.3 0.568 0.0429
 9 mu         0.2   0.4 0.599 0.0419
10 mu         0.2   0.5 0.639 0.0492
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.05         0.974   0.00630      3.33
 2 mu         0.2      1.01         0.994   0.215        1.90
 3 mu         0.3      0.979        0.961   0.574        1.45
 4 mu         0.4      0.984        0.973   0.701        1.27
 5 mu         0.5      1.01         1.01    0.685        1.25
 6 mu         0.6      1.02         1.03    0.762        1.21
 7 mu         0.7      0.996        0.985   0.637        1.33
 8 mu         0.8      0.987        0.968   0.649        1.33
 9 mu         0.9      1.01         0.976   0.235        2.57
10 mu_1       0.1      1.01         0.972   0.0181       3.45
11 mu_1       0.2      1.01         1.00    0.328        1.78
12 mu_1       0.3      0.973        0.956   0.628        1.39
13 mu_1       0.4      0.989        0.975   0.720        1.29
14 mu_1       0.5      1.01         1.01    0.676        1.25
15 mu_1       0.6      1.01         1.03    0.767        1.22
16 mu_1       0.7      0.994        0.979   0.626        1.34
17 mu_1       0.8      0.987        0.967   0.643        1.36
18 mu_1       0.9      1.01         0.977   0.221        2.60
19 mu_0       0.1      1.06         0.963   0.00499      3.47
20 mu_0       0.2      1.01         0.994   0.186        1.93
21 mu_0       0.3      0.982        0.966   0.537        1.47
22 mu_0       0.4      0.981        0.969   0.688        1.26
23 mu_0       0.5      1.01         1.02    0.695        1.26
24 mu_0       0.6      1.02         1.03    0.751        1.22
25 mu_0       0.7      1.00         0.995   0.663        1.29
26 mu_0       0.8      0.985        0.972   0.675        1.32
27 mu_0       0.9      0.986        0.957   0.361        2.22
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.22      4.59e-11  2.26e-38     52.3 
 2 mu         0.2      1.43      8.49e- 6  3.38e-25     42.2 
 3 mu         0.3      0.678     3.99e- 3  6.43e-18      6.91
 4 mu         0.4      0.752     9.40e- 2  8.35e-13      5.65
 5 mu         0.5      1.04      5.13e- 1  6.82e- 9      5.10
 6 mu         0.6      1.06      7.34e- 1  3.88e-11      4.82
 7 mu         0.7      1.13      4.65e- 1  1.44e-15      5.18
 8 mu         0.8      1.18      8.22e- 2  7.52e-22      7.75
 9 mu         0.9      1.73      7.12e- 5  2.32e-33     42.8 
10 mu_1       0.1      1.45      2.68e-10  2.07e-37     73.2 
11 mu_1       0.2      1.28      2.48e- 5  1.61e-24     29.6 
12 mu_1       0.3      0.621     6.87e- 3  2.05e-17      4.63
13 mu_1       0.4      0.807     1.36e- 1  1.99e-12      5.55
14 mu_1       0.5      1.05      3.93e- 1  5.38e- 9      5.55
15 mu_1       0.6      1.07      7.69e- 1  1.75e-12      5.27
16 mu_1       0.7      1.15      3.82e- 1  5.55e-17      4.86
17 mu_1       0.8      1.18      6.38e- 2  2.54e-23      8.40
18 mu_1       0.9      1.75      4.46e- 5  3.61e-34     45.1 
19 mu_0       0.1      1.20      2.12e-11  2.05e-39     49.9 
20 mu_0       0.2      1.46      4.43e- 6  1.92e-26     45.4 
21 mu_0       0.3      0.703     2.05e- 3  4.18e-19      7.99
22 mu_0       0.4      0.715     5.86e- 2  6.33e-14      5.72
23 mu_0       0.5      1.02      4.00e- 1  6.20e-10      4.66
24 mu_0       0.6      1.06      7.07e- 1  9.43e-11      5.12
25 mu_0       0.7      1.10      6.35e- 1  4.66e-15      5.94
26 mu_0       0.8      1.17      1.22e- 1  3.66e-21      6.67
27 mu_0       0.9      1.57      3.27e- 4  1.99e-32     24.5 
[1] "Total run time was 198.399 seconds"
