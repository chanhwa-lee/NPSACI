
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3546"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 3  6  3  3  1  4  1  4  6  3  1  1  2  1  5  7  3  2  3  3  4  2  1  5  2  4 
46 47 48 49 50 
 3  8  1  3  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03196 0.33904 0.61905 1.00000 5.40378 
[1] "event indicator table: "

   0    1 
2139 1407 
[1] "treatment indicator table: "

   0    1 
1260 2286 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1730
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1816
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 192.529 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.351 0.0873
 2 mu         0.1   0.2 0.425 0.101 
 3 mu         0.1   0.3 0.492 0.122 
 4 mu         0.1   0.4 0.528 0.127 
 5 mu         0.1   0.5 0.592 0.134 
 6 mu         0.2   0.1 0.373 0.0367
 7 mu         0.2   0.2 0.450 0.0408
 8 mu         0.2   0.3 0.533 0.0557
 9 mu         0.2   0.4 0.572 0.0522
10 mu         0.2   0.5 0.630 0.0571
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      0.902        0.303 0.000000173     17.4 
 2 mu         0.2      1.02         0.934 0.00243          4.73
 3 mu         0.3      1.02         1.04  0.104            3.39
 4 mu         0.4      1.02         1.01  0.440            1.70
 5 mu         0.5      1.03         1.01  0.705            2.00
 6 mu         0.6      1.01         0.987 0.690            1.60
 7 mu         0.7      0.980        0.979 0.692            1.30
 8 mu         0.8      0.987        0.998 0.612            1.33
 9 mu         0.9      1.00         0.985 0.0836           2.24
10 mu_1       0.1      1.00         0.563 0.000000656     15.8 
11 mu_1       0.2      1.03         0.958 0.00465          4.76
12 mu_1       0.3      1.02         1.02  0.138            3.02
13 mu_1       0.4      1.02         1.01  0.482            1.53
14 mu_1       0.5      1.03         1.00  0.723            2.01
15 mu_1       0.6      1.00         0.985 0.694            1.54
16 mu_1       0.7      0.978        0.969 0.692            1.30
17 mu_1       0.8      0.989        1.00  0.590            1.34
18 mu_1       0.9      1.00         0.981 0.0757           2.26
19 mu_0       0.1      0.891        0.271 0.000000119     17.6 
20 mu_0       0.2      1.01         0.930 0.00188          4.72
21 mu_0       0.3      1.02         1.03  0.0901           3.55
22 mu_0       0.4      1.02         1.01  0.412            1.85
23 mu_0       0.5      1.03         1.03  0.676            2.00
24 mu_0       0.6      1.01         0.989 0.684            1.70
25 mu_0       0.7      0.983        0.980 0.692            1.34
26 mu_0       0.8      0.979        0.993 0.670            1.30
27 mu_0       0.9      1.01         1.02  0.155            2.02
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.0267     2.37e-13  1.07e-36      1.54
 2 mu         0.2     0.666      2.15e- 7  3.31e-24     21.0 
 3 mu         0.3     2.20       3.43e- 4  5.51e-17     49.1 
 4 mu         0.4     2.03       3.87e- 2  6.14e-12     28.1 
 5 mu         0.5     1.28       5.09e- 1  4.18e- 8     10.6 
 6 mu         0.6     1.02       4.68e- 1  4.53e- 5      9.16
 7 mu         0.7     0.970      6.21e- 1  5.13e- 6      5.15
 8 mu         0.8     1.45       2.30e- 1  4.50e-10     11.3 
 9 mu         0.9     1.79       1.07e- 3  5.34e-19     21.8 
10 mu_1       0.1     0.0756     1.69e-12  1.00e-35      4.19
11 mu_1       0.2     0.999      6.70e- 7  1.54e-23     30.9 
12 mu_1       0.3     2.40       6.93e- 4  1.72e-16     48.2 
13 mu_1       0.4     1.87       6.34e- 2  1.43e-11     24.4 
14 mu_1       0.5     1.22       6.37e- 1  7.80e- 8     11.5 
15 mu_1       0.6     0.991      4.52e- 1  7.04e- 5      8.25
16 mu_1       0.7     0.988      5.89e- 1  1.88e- 6      5.23
17 mu_1       0.8     1.48       1.70e- 1  1.45e-10     11.9 
18 mu_1       0.9     1.80       6.89e- 4  2.02e-19     22.4 
19 mu_0       0.1     0.0212     7.59e-14  7.93e-38      1.24
20 mu_0       0.2     0.583      1.01e- 7  2.76e-25     18.5 
21 mu_0       0.3     2.12       1.92e- 4  5.25e-18     49.5 
22 mu_0       0.4     2.13       2.44e- 2  6.82e-13     30.6 
23 mu_0       0.5     1.34       3.54e- 1  5.57e- 9      9.75
24 mu_0       0.6     1.07       4.09e- 1  7.54e- 6     10.5 
25 mu_0       0.7     0.926      4.43e- 1  1.27e- 5      5.45
26 mu_0       0.8     1.32       2.56e- 1  1.67e- 9      9.23
27 mu_0       0.9     1.76       4.28e- 3  3.53e-18     20.3 
[1] "Total run time was 195.564 seconds"
