
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3614"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 2  2  1  1  1  3  3  5  2  6  6  4  4  1  3  3  3  6  4  2  4  3  3  4  3  4 
46 47 48 49 50 
 3  3  3  3  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.01892 0.27346 0.54533 0.90875 5.39550 
[1] "event indicator table: "

   0    1 
2130 1484 
[1] "treatment indicator table: "

   0    1 
1483 2131 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1873
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1741
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 367.73 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.361 0.128 
 2 mu         0.1   0.2 0.448 0.152 
 3 mu         0.1   0.3 0.510 0.174 
 4 mu         0.1   0.4 0.569 0.190 
 5 mu         0.1   0.5 0.587 0.197 
 6 mu         0.2   0.1 0.307 0.0319
 7 mu         0.2   0.2 0.408 0.0401
 8 mu         0.2   0.3 0.486 0.0431
 9 mu         0.2   0.4 0.550 0.0593
10 mu         0.2   0.5 0.552 0.0522
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.912        0.260 0.000000156      29.9 
 2 mu         0.2      0.955        0.894 0.00105           3.97
 3 mu         0.3      1.03         0.963 0.0634            3.70
 4 mu         0.4      0.980        0.986 0.476             1.70
 5 mu         0.5      0.987        0.978 0.649             1.42
 6 mu         0.6      1.00         1.01  0.595             1.50
 7 mu         0.7      1.01         1.02  0.698             1.39
 8 mu         0.8      1.01         0.976 0.555             1.51
 9 mu         0.9      1.03         0.953 0.0858            2.66
10 mu_1       0.1      0.837        0.435 0.000000664      15.5 
11 mu_1       0.2      0.999        0.939 0.00230           4.43
12 mu_1       0.3      1.02         0.990 0.0968            3.38
13 mu_1       0.4      0.978        0.987 0.564             1.55
14 mu_1       0.5      0.990        0.982 0.619             1.43
15 mu_1       0.6      1.01         1.01  0.604             1.51
16 mu_1       0.7      1.01         1.02  0.696             1.40
17 mu_1       0.8      1.01         0.979 0.534             1.54
18 mu_1       0.9      1.03         0.954 0.0787            2.72
19 mu_0       0.1      0.921        0.242 0.0000000997     31.5 
20 mu_0       0.2      0.944        0.883 0.000733          3.86
21 mu_0       0.3      1.03         0.979 0.0491            3.84
22 mu_0       0.4      0.981        0.970 0.411             1.85
23 mu_0       0.5      0.985        0.968 0.678             1.41
24 mu_0       0.6      1.00         1.01  0.580             1.49
25 mu_0       0.7      1.01         1.01  0.702             1.43
26 mu_0       0.8      1.01         0.988 0.641             1.42
27 mu_0       0.9      1.01         0.960 0.150             2.08
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       3.67     3.00e-10  2.48e-33    249.  
 2 mu         0.2       8.82     2.65e- 5  2.69e-21    442.  
 3 mu         0.3       3.50     1.13e- 2  2.00e-14    133.  
 4 mu         0.4       1.99     2.43e- 1  1.05e- 9     22.7 
 5 mu         0.5       1.47     7.49e- 1  3.32e- 6      8.70
 6 mu         0.6       1.26     7.87e- 1  7.91e- 6     12.5 
 7 mu         0.7       1.21     5.65e- 1  3.19e-10     15.0 
 8 mu         0.8       1.37     6.88e- 2  9.58e-17     14.5 
 9 mu         0.9       3.57     8.21e- 5  2.52e-28    258.  
10 mu_1       0.1       5.45     1.76e- 9  2.17e-32    322.  
11 mu_1       0.2       8.22     7.52e- 5  1.17e-20    406.  
12 mu_1       0.3       2.91     2.21e- 2  5.83e-14     97.2 
13 mu_1       0.4       1.94     3.46e- 1  2.30e- 9     19.8 
14 mu_1       0.5       1.43     8.77e- 1  5.79e- 6      9.95
15 mu_1       0.6       1.25     7.47e- 1  2.42e- 6     11.9 
16 mu_1       0.7       1.21     4.76e- 1  8.36e-11     15.5 
17 mu_1       0.8       1.39     5.02e- 2  2.20e-17     15.0 
18 mu_1       0.9       3.84     5.57e- 5  5.13e-29    286.  
19 mu_0       0.1       3.47     1.39e-10  0           241.  
20 mu_0       0.2       8.97     1.43e- 5  0           451.  
21 mu_0       0.3       3.76     6.68e- 3  0           148.  
22 mu_0       0.4       2.02     1.68e- 1  0            24.6 
23 mu_0       0.5       1.52     7.51e- 1  0             9.60
24 mu_0       0.6       1.28     7.47e- 1  0            13.4 
25 mu_0       0.7       1.21     4.95e- 1  0            13.8 
26 mu_0       0.8       1.30     1.37e- 1  0            13.3 
27 mu_0       0.9       1.12     2.55e- 4  0            17.2 
[1] "Total run time was 371.892 seconds"
