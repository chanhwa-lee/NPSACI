
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3479"
[1] "cluster size dist'n: "

20 21 22 24 25 26 27 28 29 30 32 33 34 35 36 37 38 39 40 41 43 44 45 46 47 48 
 5  4  8  5  3  5  2  2  3  2  1  6  5  1  2  3  1  6  2  2  6  3  5  1  6  3 
49 50 
 2  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03431 0.34551 0.61571 1.00000 5.00000 
[1] "event indicator table: "

   0    1 
2091 1388 
[1] "treatment indicator table: "

   0    1 
1250 2229 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1712
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1767
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 234.791 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.453 0.0741
 2 mu         0.1   0.2 0.484 0.0942
 3 mu         0.1   0.3 0.504 0.122 
 4 mu         0.1   0.4 0.600 0.106 
 5 mu         0.1   0.5 0.640 0.107 
 6 mu         0.2   0.1 0.408 0.0507
 7 mu         0.2   0.2 0.454 0.0516
 8 mu         0.2   0.3 0.479 0.0657
 9 mu         0.2   0.4 0.554 0.0588
10 mu         0.2   0.5 0.584 0.0622
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.20         0.496 0.0000449      6.67
 2 mu         0.2      1.09         0.961 0.0457         3.05
 3 mu         0.3      0.994        0.945 0.246          2.14
 4 mu         0.4      0.994        0.977 0.429          1.56
 5 mu         0.5      0.998        1.00  0.569          1.54
 6 mu         0.6      0.990        1.00  0.770          1.27
 7 mu         0.7      0.984        0.985 0.689          1.25
 8 mu         0.8      0.993        0.988 0.698          1.33
 9 mu         0.9      1.04         1.03  0.384          1.83
10 mu_1       0.1      1.17         0.814 0.000145       5.35
11 mu_1       0.2      1.05         0.991 0.0757         2.90
12 mu_1       0.3      0.988        0.946 0.333          2.06
13 mu_1       0.4      0.995        0.985 0.425          1.59
14 mu_1       0.5      0.999        1.00  0.582          1.51
15 mu_1       0.6      0.990        1.00  0.771          1.25
16 mu_1       0.7      0.984        0.985 0.686          1.25
17 mu_1       0.8      0.994        0.992 0.705          1.33
18 mu_1       0.9      1.04         1.04  0.354          1.85
19 mu_0       0.1      1.21         0.464 0.0000337      6.83
20 mu_0       0.2      1.10         0.947 0.0382         3.08
21 mu_0       0.3      0.996        0.950 0.208          2.17
22 mu_0       0.4      0.994        0.980 0.432          1.60
23 mu_0       0.5      0.997        1.00  0.556          1.58
24 mu_0       0.6      0.992        0.997 0.763          1.30
25 mu_0       0.7      0.985        0.988 0.695          1.25
26 mu_0       0.8      0.989        0.979 0.668          1.31
27 mu_0       0.9      1.01         1.01  0.559          1.67
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.0466     8.70e-13  9.91e-41      3.91
 2 mu         0.2     0.599      8.42e- 7  8.72e-28     32.9 
 3 mu         0.3     1.07       5.71e- 4  3.25e-20     18.4 
 4 mu         0.4     1.10       4.54e- 2  7.67e-15      7.62
 5 mu         0.5     1.27       4.17e- 1  1.13e-10     10.9 
 6 mu         0.6     1.27       8.18e- 1  2.86e- 7     10.0 
 7 mu         0.7     0.991      5.97e- 1  3.28e- 7      4.83
 8 mu         0.8     1.09       1.82e- 1  7.47e-12      5.19
 9 mu         0.9     1.58       1.14e- 3  1.72e-20     21.2 
10 mu_1       0.1     0.107      5.49e-12  9.91e-40      8.45
11 mu_1       0.2     0.761      2.65e- 6  4.36e-27     35.5 
12 mu_1       0.3     1.11       1.23e- 3  1.08e-19     18.5 
13 mu_1       0.4     1.11       7.46e- 2  1.92e-14      7.17
14 mu_1       0.5     1.30       5.28e- 1  2.25e-10     11.9 
15 mu_1       0.6     1.24       9.20e- 1  4.77e- 7      9.12
16 mu_1       0.7     0.979      5.30e- 1  1.01e- 7      4.99
17 mu_1       0.8     1.11       1.34e- 1  2.02e-12      5.32
18 mu_1       0.9     1.60       7.35e- 4  5.96e-21     22.0 
19 mu_0       0.1     0.0399     2.77e-13  0             3.40
20 mu_0       0.2     0.558      3.78e- 7  0            32.2 
21 mu_0       0.3     1.06       2.54e- 4  0            19.6 
22 mu_0       0.4     1.09       2.63e- 2  0             8.83
23 mu_0       0.5     1.24       3.49e- 1  0             9.95
24 mu_0       0.6     1.30       6.45e- 1  0            11.4 
25 mu_0       0.7     1.02       6.77e- 1  0             4.88
26 mu_0       0.8     1.01       3.33e- 1  0             4.66
27 mu_0       0.9     1.38       1.74e- 3  0            14.1 
[1] "Total run time was 238.97 seconds"
