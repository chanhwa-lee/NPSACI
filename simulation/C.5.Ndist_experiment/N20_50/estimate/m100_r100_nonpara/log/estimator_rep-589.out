
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3465"
[1] "cluster size dist'n: "

20 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 
 5  6  3  2  3  3  4  3  4  2  4  4  5  4  1  2  4  5  2  3  1  2  7  4  5  3 
47 48 49 50 
 3  3  1  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03843 0.36516 0.64579 1.00000 7.00000 
[1] "event indicator table: "

   0    1 
2032 1433 
[1] "treatment indicator table: "

   0    1 
1221 2244 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1752
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 14"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1713
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 57"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 215.698 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.560 0.0897
 2 mu         0.1   0.2 0.598 0.0855
 3 mu         0.1   0.3 0.732 0.114 
 4 mu         0.1   0.4 0.804 0.125 
 5 mu         0.1   0.5 0.810 0.115 
 6 mu         0.2   0.1 0.480 0.0497
 7 mu         0.2   0.2 0.514 0.0445
 8 mu         0.2   0.3 0.630 0.0643
 9 mu         0.2   0.4 0.690 0.0704
10 mu         0.2   0.5 0.711 0.0615
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.15         0.581 0.0000920      7.41
 2 mu         0.2      1.08         1.02  0.0747         3.75
 3 mu         0.3      0.981        0.980 0.376          1.69
 4 mu         0.4      0.978        0.950 0.442          1.49
 5 mu         0.5      1.01         1.03  0.658          1.36
 6 mu         0.6      1.01         1.00  0.729          1.36
 7 mu         0.7      0.994        0.978 0.722          1.36
 8 mu         0.8      0.985        0.997 0.671          1.28
 9 mu         0.9      1.01         0.987 0.459          1.67
10 mu_1       0.1      1.13         0.802 0.000294       5.30
11 mu_1       0.2      1.05         1.04  0.122          3.21
12 mu_1       0.3      0.972        1.00  0.419          1.67
13 mu_1       0.4      0.984        0.965 0.470          1.43
14 mu_1       0.5      1.02         1.01  0.642          1.35
15 mu_1       0.6      1.01         1.00  0.753          1.34
16 mu_1       0.7      0.993        0.974 0.715          1.36
17 mu_1       0.8      0.986        0.997 0.669          1.31
18 mu_1       0.9      1.01         0.986 0.445          1.72
19 mu_0       0.1      1.15         0.545 0.0000696      7.65
20 mu_0       0.2      1.08         1.01  0.0616         3.88
21 mu_0       0.3      0.984        0.967 0.357          1.72
22 mu_0       0.4      0.974        0.960 0.424          1.52
23 mu_0       0.5      1.01         1.02  0.674          1.37
24 mu_0       0.6      1.02         1.01  0.694          1.38
25 mu_0       0.7      0.998        0.997 0.739          1.39
26 mu_0       0.8      0.982        0.987 0.682          1.28
27 mu_0       0.9      1.00         0.974 0.591          1.58
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      2.52      8.13e-13  1.10e-41    249.  
 2 mu         0.2      0.983     3.16e- 7  6.09e-28     33.1 
 3 mu         0.3      1.12      3.86e- 4  5.87e-20     21.5 
 4 mu         0.4      1.10      2.35e- 2  2.41e-14      7.04
 5 mu         0.5      1.14      2.61e- 1  4.80e-10      8.15
 6 mu         0.6      1.11      5.26e- 1  1.35e- 6      6.86
 7 mu         0.7      1.21      8.94e- 1  1.06e- 9      4.53
 8 mu         0.8      1.21      5.36e- 1  1.23e-15      5.87
 9 mu         0.9      1.18      8.36e- 3  2.90e-26     16.2 
10 mu_1       0.1      1.12      5.38e-12  1.05e-40    104.  
11 mu_1       0.2      0.910     1.06e- 6  2.92e-27     23.5 
12 mu_1       0.3      1.13      8.16e- 4  1.88e-19     18.4 
13 mu_1       0.4      1.10      3.92e- 2  5.77e-14      7.24
14 mu_1       0.5      1.15      3.70e- 1  9.21e-10      7.96
15 mu_1       0.6      1.12      4.77e- 1  8.23e- 7      6.63
16 mu_1       0.7      1.22      8.11e- 1  3.22e-10      4.74
17 mu_1       0.8      1.20      4.78e- 1  3.27e-16      6.37
18 mu_1       0.9      1.19      6.03e- 3  6.86e-27     17.4 
19 mu_0       0.1      2.68      2.99e-13  5.07e-43    265.  
20 mu_0       0.2      1.00      1.42e- 7  3.17e-29     39.7 
21 mu_0       0.3      1.11      1.84e- 4  3.49e-21     22.9 
22 mu_0       0.4      1.10      1.19e- 2  1.67e-15      8.02
23 mu_0       0.5      1.14      1.69e- 1  4.00e-11      8.34
24 mu_0       0.6      1.11      4.47e- 1  1.41e- 7      7.20
25 mu_0       0.7      1.18      9.33e- 1  2.78e- 9      4.48
26 mu_0       0.8      1.26      5.55e- 1  4.83e-15      5.78
27 mu_0       0.9      1.09      2.83e- 2  2.28e-25     11.8 
[1] "Total run time was 219.047 seconds"
