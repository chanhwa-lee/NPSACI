
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3569"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 2  3  1  3  4  2  6  2  2  5  1  3  4  4  6  2  3  3  2  4  3  2  4  2  7  5 
46 47 48 49 50 
 3  3  1  6  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.01808 0.29980 0.57910 0.95649 6.00000 
[1] "event indicator table: "

   0    1 
2098 1471 
[1] "treatment indicator table: "

   0    1 
1459 2110 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1793
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1776
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 40"
[1] "     Cluster: 44"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 210.565 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.334 0.133 
 2 mu         0.1   0.2 0.359 0.131 
 3 mu         0.1   0.3 0.375 0.137 
 4 mu         0.1   0.4 0.442 0.114 
 5 mu         0.1   0.5 0.450 0.118 
 6 mu         0.2   0.1 0.346 0.0838
 7 mu         0.2   0.2 0.396 0.0847
 8 mu         0.2   0.3 0.427 0.0931
 9 mu         0.2   0.4 0.507 0.0632
10 mu         0.2   0.5 0.531 0.0680
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.715        0.231  0.000256      8.98
 2 mu         0.2      0.936        0.875  0.0623        2.82
 3 mu         0.3      1.04         1.02   0.319         2.38
 4 mu         0.4      1.04         1.03   0.514         1.60
 5 mu         0.5      1.00         0.979  0.676         1.49
 6 mu         0.6      0.983        0.976  0.709         1.28
 7 mu         0.7      0.990        0.977  0.702         1.40
 8 mu         0.8      1.00         0.997  0.620         1.46
 9 mu         0.9      1.01         0.984  0.501         2.33
10 mu_1       0.1      0.787        0.408  0.000704      6.92
11 mu_1       0.2      0.976        0.921  0.0923        3.01
12 mu_1       0.3      1.04         1.06   0.314         2.21
13 mu_1       0.4      1.03         1.03   0.582         1.62
14 mu_1       0.5      0.996        0.981  0.689         1.44
15 mu_1       0.6      0.983        0.979  0.703         1.29
16 mu_1       0.7      0.991        0.972  0.697         1.42
17 mu_1       0.8      1.00         1.00   0.610         1.45
18 mu_1       0.9      1.01         0.982  0.485         2.38
19 mu_0       0.1      0.707        0.208  0.000207      9.21
20 mu_0       0.2      0.926        0.850  0.0548        2.85
21 mu_0       0.3      1.04         1.01   0.321         2.45
22 mu_0       0.4      1.04         1.02   0.469         1.59
23 mu_0       0.5      1.01         0.974  0.663         1.53
24 mu_0       0.6      0.983        0.976  0.719         1.26
25 mu_0       0.7      0.989        0.984  0.713         1.37
26 mu_0       0.8      0.999        0.982  0.650         1.48
27 mu_0       0.9      1.02         1.01   0.555         1.87
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.0522     1.44e-10  2.15e-42      2.43
 2 mu         0.2     0.535      1.19e- 5  1.34e-28     20.2 
 3 mu         0.3     1.21       7.29e- 3  1.48e-20     16.4 
 4 mu         0.4     1.64       2.17e- 1  7.09e-15     21.0 
 5 mu         0.5     1.33       8.19e- 1  1.69e-10      7.68
 6 mu         0.6     1.01       6.00e- 1  5.95e- 7      4.38
 7 mu         0.7     0.998      3.20e- 1  1.96e- 9      7.01
 8 mu         0.8     0.975      3.80e- 2  4.47e-15     11.7 
 9 mu         0.9     1.78       3.70e- 5  3.76e-25     32.9 
10 mu_1       0.1     0.116      1.02e- 9  2.10e-41      5.36
11 mu_1       0.2     0.670      3.42e- 5  6.57e-28     20.6 
12 mu_1       0.3     1.34       1.46e- 2  4.83e-20     16.7 
13 mu_1       0.4     1.65       2.98e- 1  1.73e-14     21.0 
14 mu_1       0.5     1.28       7.27e- 1  3.32e-10      6.14
15 mu_1       0.6     0.998      5.95e- 1  9.70e- 7      4.27
16 mu_1       0.7     1.00       2.55e- 1  5.72e-10      7.09
17 mu_1       0.8     0.984      2.66e- 2  1.14e-15     12.7 
18 mu_1       0.9     1.83       2.24e- 5  8.54e-26     33.5 
19 mu_0       0.1     0.0451     4.66e-11  0             2.15
20 mu_0       0.2     0.502      6.30e- 6  0            20.0 
21 mu_0       0.3     1.16       4.37e- 3  0            16.2 
22 mu_0       0.4     1.64       1.51e- 1  0            21.0 
23 mu_0       0.5     1.39       6.63e- 1  0             9.21
24 mu_0       0.6     1.04       6.24e- 1  0             4.92
25 mu_0       0.7     0.991      3.25e- 1  0             6.82
26 mu_0       0.8     0.938      6.17e- 2  0             7.65
27 mu_0       0.9     1.31       8.88e- 5  0            27.4 
[1] "Total run time was 214.011 seconds"
