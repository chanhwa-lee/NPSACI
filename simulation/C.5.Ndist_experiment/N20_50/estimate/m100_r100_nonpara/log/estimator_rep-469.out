
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3499"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 40 41 42 43 44 45 47 
 1  4  6  4  2  5  3  2  6  8  2  1  2  1  9  2  1  1  1  2  3  2  2  3  8  3 
48 49 50 
 5  5  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02536 0.32045 0.59713 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
2079 1420 
[1] "treatment indicator table: "

   0    1 
1332 2167 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1667
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 6"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1832
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 181.998 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.379 0.125 
 2 mu         0.1   0.2 0.470 0.147 
 3 mu         0.1   0.3 0.500 0.168 
 4 mu         0.1   0.4 0.580 0.179 
 5 mu         0.1   0.5 0.596 0.185 
 6 mu         0.2   0.1 0.280 0.0383
 7 mu         0.2   0.2 0.378 0.0270
 8 mu         0.2   0.3 0.428 0.0337
 9 mu         0.2   0.4 0.503 0.0405
10 mu         0.2   0.5 0.521 0.0382
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.994        0.270  0.000228     24.7 
 2 mu         0.2      0.928        0.821  0.0834        2.78
 3 mu         0.3      1.01         0.965  0.514         1.99
 4 mu         0.4      1.02         1.02   0.634         1.56
 5 mu         0.5      1.02         1.02   0.698         1.35
 6 mu         0.6      1.01         1.01   0.663         1.31
 7 mu         0.7      0.988        0.980  0.711         1.25
 8 mu         0.8      0.983        0.986  0.466         1.35
 9 mu         0.9      1.04         1.01   0.285         2.03
10 mu_1       0.1      0.928        0.469  0.000680     16.7 
11 mu_1       0.2      0.959        0.950  0.127         2.42
12 mu_1       0.3      1.02         0.974  0.574         1.94
13 mu_1       0.4      1.02         1.01   0.635         1.51
14 mu_1       0.5      1.02         1.02   0.681         1.32
15 mu_1       0.6      1.01         1.01   0.675         1.30
16 mu_1       0.7      0.987        0.979  0.702         1.27
17 mu_1       0.8      0.983        0.980  0.458         1.36
18 mu_1       0.9      1.04         1.01   0.270         2.11
19 mu_0       0.1      1.00         0.244  0.000178     25.6 
20 mu_0       0.2      0.920        0.812  0.0725        3.17
21 mu_0       0.3      1.01         0.955  0.484         2.08
22 mu_0       0.4      1.02         1.01   0.632         1.59
23 mu_0       0.5      1.02         1.01   0.715         1.38
24 mu_0       0.6      1.01         1.01   0.646         1.34
25 mu_0       0.7      0.992        0.990  0.726         1.28
26 mu_0       0.8      0.981        0.997  0.495         1.37
27 mu_0       0.9      1.01         1.02   0.367         1.66
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.179     4.63e-11  1.03e-38     10.4 
 2 mu         0.2      1.54      2.51e- 6  2.27e-25     67.8 
 3 mu         0.3      1.72      1.72e- 3  1.12e-17     71.2 
 4 mu         0.4      1.25      7.09e- 2  2.48e-12     12.4 
 5 mu         0.5      0.943     4.47e- 1  1.62e- 8      5.47
 6 mu         0.6      0.802     5.68e- 1  8.61e- 7      3.58
 7 mu         0.7      0.892     5.03e- 1  3.47e-11      6.57
 8 mu         0.8      1.16      1.36e- 1  1.04e-17      7.74
 9 mu         0.9      1.68      6.80e- 4  2.74e-29     19.0 
10 mu_1       0.1      0.376     3.04e-10  9.47e-38     19.2 
11 mu_1       0.2      1.80      7.88e- 6  1.04e-24     84.7 
12 mu_1       0.3      1.63      3.32e- 3  3.41e-17     59.3 
13 mu_1       0.4      1.18      1.08e- 1  5.79e-12     10.8 
14 mu_1       0.5      0.910     4.76e- 1  3.09e- 8      4.56
15 mu_1       0.6      0.802     5.30e- 1  2.63e- 7      3.82
16 mu_1       0.7      0.908     4.56e- 1  9.09e-12      6.48
17 mu_1       0.8      1.18      1.04e- 1  2.39e-18      8.13
18 mu_1       0.9      1.70      4.62e- 4  5.59e-30     20.1 
19 mu_0       0.1      0.157     1.77e-11  9.36e-40      9.47
20 mu_0       0.2      1.47      1.17e- 6  2.31e-26     63.5 
21 mu_0       0.3      1.75      1.04e- 3  1.30e-18     76.2 
22 mu_0       0.4      1.29      4.25e- 2  1.93e-13     15.5 
23 mu_0       0.5      0.976     3.14e- 1  1.51e- 9      6.39
24 mu_0       0.6      0.803     5.90e- 1  1.76e- 6      3.37
25 mu_0       0.7      0.855     5.37e- 1  9.43e-11      6.78
26 mu_0       0.8      1.08      2.18e- 1  4.26e-17      6.44
27 mu_0       0.9      1.49      2.50e- 3  2.23e-28     13.2 
[1] "Total run time was 186.102 seconds"
