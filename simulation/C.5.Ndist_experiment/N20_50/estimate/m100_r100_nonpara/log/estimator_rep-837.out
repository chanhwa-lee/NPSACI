
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3584"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 
 1  3  4  2  3  4  3  2  4  4  3  3  6  1  3  3  5  3  8  4  1  2  3  2  8  2 
47 48 49 50 
 5  2  3  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03178 0.33535 0.59753 0.99352 6.00000 
[1] "event indicator table: "

   0    1 
2106 1478 
[1] "treatment indicator table: "

   0    1 
1383 2201 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1845
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1739
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 118.306 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.425 0.0608
 2 mu         0.1   0.2 0.455 0.0470
 3 mu         0.1   0.3 0.492 0.0505
 4 mu         0.1   0.4 0.596 0.0617
 5 mu         0.1   0.5 0.720 0.102 
 6 mu         0.2   0.1 0.358 0.0383
 7 mu         0.2   0.2 0.402 0.0256
 8 mu         0.2   0.3 0.465 0.0251
 9 mu         0.2   0.4 0.553 0.0295
10 mu         0.2   0.5 0.642 0.0510
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.02         0.818 0.0000512      5.00
 2 mu         0.2      1.03         1.05  0.0336         2.02
 3 mu         0.3      1.03         1.01  0.286          1.75
 4 mu         0.4      0.990        0.988 0.558          1.45
 5 mu         0.5      0.978        0.977 0.636          1.28
 6 mu         0.6      1.00         0.997 0.679          1.24
 7 mu         0.7      1.02         1.01  0.713          1.29
 8 mu         0.8      1.02         1.02  0.722          1.30
 9 mu         0.9      0.971        0.948 0.459          1.46
10 mu_1       0.1      0.997        0.930 0.000163       4.26
11 mu_1       0.2      1.04         1.04  0.0552         2.16
12 mu_1       0.3      1.02         1.01  0.333          1.74
13 mu_1       0.4      0.985        1.00  0.599          1.44
14 mu_1       0.5      0.979        0.966 0.644          1.31
15 mu_1       0.6      1.00         1.00  0.676          1.26
16 mu_1       0.7      1.02         1.02  0.699          1.28
17 mu_1       0.8      1.02         1.02  0.719          1.32
18 mu_1       0.9      0.967        0.944 0.466          1.48
19 mu_0       0.1      1.02         0.794 0.0000387      5.09
20 mu_0       0.2      1.03         1.05  0.0282         1.98
21 mu_0       0.3      1.03         1.01  0.266          1.80
22 mu_0       0.4      0.993        0.979 0.531          1.46
23 mu_0       0.5      0.978        0.981 0.629          1.31
24 mu_0       0.6      0.998        0.993 0.685          1.29
25 mu_0       0.7      1.02         1.02  0.688          1.33
26 mu_0       0.8      1.02         1.01  0.731          1.34
27 mu_0       0.9      1.01         0.993 0.391          1.61
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.75      1.52e-13  5.82e-46    141.  
 2 mu         0.2      1.80      1.01e- 6  2.91e-31     47.1 
 3 mu         0.3      1.34      1.34e- 3  1.08e-22     15.9 
 4 mu         0.4      1.16      6.22e- 2  1.23e-16     11.7 
 5 mu         0.5      1.05      2.80e- 1  5.74e-12      7.17
 6 mu         0.6      1.01      5.21e- 1  3.48e- 8      5.50
 7 mu         0.7      1.04      6.71e- 1  1.01e-11      4.19
 8 mu         0.8      1.09      2.22e- 1  3.05e-18      5.28
 9 mu         0.9      0.911     6.42e- 4  8.01e-30     10.8 
10 mu_1       0.1      1.63      9.11e-13  5.70e-45    104.  
11 mu_1       0.2      1.70      2.80e- 6  1.43e-30     48.0 
12 mu_1       0.3      1.29      3.00e- 3  3.54e-22     17.7 
13 mu_1       0.4      1.15      7.39e- 2  3.01e-16      9.75
14 mu_1       0.5      1.04      2.37e- 1  1.13e-11      6.62
15 mu_1       0.6      1.01      3.95e- 1  5.69e- 8      5.33
16 mu_1       0.7      1.04      6.07e- 1  2.66e-12      4.08
17 mu_1       0.8      1.09      1.89e- 1  7.00e-19      5.21
18 mu_1       0.9      0.913     4.60e- 4  1.63e-30     11.0 
19 mu_0       0.1      1.76      6.80e-14  0           145.  
20 mu_0       0.2      1.83      4.91e- 7  0            46.8 
21 mu_0       0.3      1.36      6.49e- 4  0            16.9 
22 mu_0       0.4      1.16      3.92e- 2  0            13.0 
23 mu_0       0.5      1.05      2.96e- 1  0             7.72
24 mu_0       0.6      1.01      3.89e- 1  0             5.75
25 mu_0       0.7      1.04      5.32e- 1  0             4.46
26 mu_0       0.8      1.11      3.25e- 1  0             5.62
27 mu_0       0.9      0.890     1.68e- 3  0             9.01
[1] "Total run time was 120.298 seconds"
