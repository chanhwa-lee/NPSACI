
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3490"
[1] "cluster size dist'n: "

20 21 22 23 24 26 27 28 29 30 31 32 33 34 35 36 37 38 39 41 42 43 44 45 46 47 
 1  5  3  4  6  4  2  2  6  2  4  6  2  1  4  4  4  3  4  6  2  4  3  1  2  4 
48 49 50 
 2  8  1 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02552 0.32547 0.58536 1.00000 5.00000 
[1] "event indicator table: "

   0    1 
2093 1397 
[1] "treatment indicator table: "

   0    1 
1287 2203 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1725
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 69"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 91"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1765
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 42"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 240.202 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.320 0.0336
 2 mu         0.1   0.2 0.407 0.0578
 3 mu         0.1   0.3 0.468 0.0845
 4 mu         0.1   0.4 0.515 0.102 
 5 mu         0.1   0.5 0.513 0.0901
 6 mu         0.2   0.1 0.376 0.0309
 7 mu         0.2   0.2 0.469 0.0516
 8 mu         0.2   0.3 0.537 0.0746
 9 mu         0.2   0.4 0.587 0.0903
10 mu         0.2   0.5 0.599 0.0807
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.736        0.607 0.0000270      2.71
 2 mu         0.2      0.973        0.951 0.0244         4.55
 3 mu         0.3      1.03         0.983 0.274          3.04
 4 mu         0.4      1.02         0.998 0.519          2.17
 5 mu         0.5      0.993        0.989 0.704          1.74
 6 mu         0.6      0.987        0.973 0.692          1.63
 7 mu         0.7      0.996        0.987 0.676          1.36
 8 mu         0.8      1.02         1.02  0.561          1.35
 9 mu         0.9      1.03         1.06  0.372          1.59
10 mu_1       0.1      0.803        0.786 0.0000929      2.68
11 mu_1       0.2      1.01         0.927 0.0439         4.68
12 mu_1       0.3      1.04         0.981 0.344          2.80
13 mu_1       0.4      1.02         0.997 0.549          2.09
14 mu_1       0.5      0.989        0.972 0.711          1.68
15 mu_1       0.6      0.987        0.989 0.697          1.61
16 mu_1       0.7      0.997        0.991 0.675          1.34
17 mu_1       0.8      1.02         1.02  0.559          1.38
18 mu_1       0.9      1.03         1.07  0.359          1.62
19 mu_0       0.1      0.729        0.590 0.0000196      2.79
20 mu_0       0.2      0.963        0.938 0.0196         4.52
21 mu_0       0.3      1.03         0.976 0.244          3.15
22 mu_0       0.4      1.03         1.00  0.500          2.22
23 mu_0       0.5      0.996        0.979 0.695          1.79
24 mu_0       0.6      0.986        0.971 0.686          1.67
25 mu_0       0.7      0.994        0.993 0.680          1.39
26 mu_0       0.8      1.01         1.01  0.569          1.33
27 mu_0       0.9      1.03         1.04  0.479          1.54
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1    76.9        1.10e-12  3.57e-33   7687.  
 2 mu         0.2     4.34       3.37e- 7  3.87e-21    360.  
 3 mu         0.3     2.47       4.25e- 4  2.88e-14    117.  
 4 mu         0.4     1.90       4.81e- 2  6.80e-10     48.5 
 5 mu         0.5     1.21       3.38e- 1  7.45e- 7      9.37
 6 mu         0.6     1.12       6.11e- 1  5.36e- 6      7.44
 7 mu         0.7     1.21       6.28e- 1  3.02e- 9      5.21
 8 mu         0.8     1.39       3.03e- 1  7.98e-14      6.20
 9 mu         0.9     1.13       1.97e- 3  1.19e-21     12.5 
10 mu_1       0.1     0.0756     4.63e-12  0             4.55
11 mu_1       0.2     1.09       7.73e- 7  0            50.1 
12 mu_1       0.3     2.48       7.89e- 4  0           118.  
13 mu_1       0.4     1.76       5.39e- 2  0            36.7 
14 mu_1       0.5     1.17       3.76e- 1  0             9.06
15 mu_1       0.6     1.13       6.38e- 1  0             7.08
16 mu_1       0.7     1.21       7.58e- 1  0             5.18
17 mu_1       0.8     1.40       2.41e- 1  0             6.52
18 mu_1       0.9     1.11       1.37e- 3  0            13.4 
19 mu_0       0.1    85.4        3.39e-13  5.06e-34   8541.  
20 mu_0       0.2     5.15       1.40e- 7  6.18e-22    449.  
21 mu_0       0.3     2.46       1.80e- 4  5.25e-15    117.  
22 mu_0       0.4     2.00       3.07e- 2  6.47e-11     56.4 
23 mu_0       0.5     1.25       3.40e- 1  8.51e- 8     10.2 
24 mu_0       0.6     1.11       5.23e- 1  1.34e- 5      8.05
25 mu_0       0.7     1.19       6.44e- 1  1.01e- 8      5.29
26 mu_0       0.8     1.35       4.57e- 1  3.99e-13      6.23
27 mu_0       0.9     1.30       7.34e- 3  1.19e-20     11.4 
[1] "Total run time was 243.569 seconds"
