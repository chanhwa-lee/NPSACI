
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3649"
[1] "cluster size dist'n: "

20 21 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 
 5  2  1  4  2  2  8  3  4  4  2  2  2  2  2  2  3  2  4  2  1  6  6  4  4  3 
47 48 49 50 
 3  4  3  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03675 0.35781 0.61618 1.00000 5.00000 
[1] "event indicator table: "

   0    1 
2165 1484 
[1] "treatment indicator table: "

   0    1 
1345 2304 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1798
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1851
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 28"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 284.304 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.465 0.0583
 2 mu         0.1   0.2 0.587 0.0686
 3 mu         0.1   0.3 0.611 0.0633
 4 mu         0.1   0.4 0.648 0.0605
 5 mu         0.1   0.5 0.651 0.0587
 6 mu         0.2   0.1 0.408 0.0537
 7 mu         0.2   0.2 0.495 0.0443
 8 mu         0.2   0.3 0.524 0.0379
 9 mu         0.2   0.4 0.580 0.0445
10 mu         0.2   0.5 0.585 0.0387
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.03         1.01  0.0000587      3.82
 2 mu         0.2      1.00         0.970 0.0385         2.86
 3 mu         0.3      0.992        0.951 0.491          1.79
 4 mu         0.4      0.987        0.987 0.646          1.48
 5 mu         0.5      0.969        0.953 0.630          1.44
 6 mu         0.6      0.979        0.965 0.675          1.44
 7 mu         0.7      1.02         1.01  0.688          1.40
 8 mu         0.8      1.02         1.01  0.548          1.38
 9 mu         0.9      0.964        0.961 0.471          1.55
10 mu_1       0.1      1.01         0.914 0.000181       3.63
11 mu_1       0.2      0.996        0.933 0.0645         2.79
12 mu_1       0.3      0.991        0.972 0.489          1.62
13 mu_1       0.4      0.985        0.966 0.651          1.53
14 mu_1       0.5      0.968        0.964 0.624          1.43
15 mu_1       0.6      0.983        0.972 0.668          1.47
16 mu_1       0.7      1.02         1.00  0.695          1.41
17 mu_1       0.8      1.02         1.01  0.547          1.37
18 mu_1       0.9      0.962        0.959 0.475          1.57
19 mu_0       0.1      1.04         1.02  0.0000451      4.08
20 mu_0       0.2      1.01         0.958 0.0320         2.88
21 mu_0       0.3      0.993        0.944 0.444          1.86
22 mu_0       0.4      0.988        0.981 0.612          1.44
23 mu_0       0.5      0.970        0.956 0.618          1.44
24 mu_0       0.6      0.973        0.955 0.681          1.38
25 mu_0       0.7      1.01         1.01  0.670          1.43
26 mu_0       0.8      1.03         1.01  0.550          1.45
27 mu_0       0.9      0.978        0.991 0.432          1.47
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.469     1.17e-13  1.06e-39     11.5 
 2 mu         0.2      1.33      1.26e- 7  2.31e-26     42.6 
 3 mu         0.3      0.889     4.03e- 4  9.89e-19     10.2 
 4 mu         0.4      1.25      3.64e- 2  2.28e-13     16.9 
 5 mu         0.5      1.43      1.16e- 1  2.91e- 9     19.2 
 6 mu         0.6      1.21      4.80e- 1  1.02e- 6     12.5 
 7 mu         0.7      1.26      5.09e- 1  6.59e-11      6.77
 8 mu         0.8      1.32      3.87e- 1  2.97e-17      6.61
 9 mu         0.9      1.24      3.10e- 3  1.56e-28     19.9 
10 mu_1       0.1      0.786     8.99e-13  9.72e-39     19.1 
11 mu_1       0.2      1.28      4.66e- 7  1.10e-25     39.7 
12 mu_1       0.3      0.877     8.83e- 4  3.15e-18      9.71
13 mu_1       0.4      1.32      4.38e- 2  5.46e-13     19.2 
14 mu_1       0.5      1.41      1.63e- 1  5.57e- 9     17.5 
15 mu_1       0.6      1.20      4.88e- 1  2.37e- 7     11.9 
16 mu_1       0.7      1.28      4.43e- 1  1.77e-11      7.26
17 mu_1       0.8      1.32      3.30e- 1  6.97e-18      6.75
18 mu_1       0.9      1.23      2.35e- 3  3.25e-29     21.1 
19 mu_0       0.1      0.434     2.73e-14  8.02e-41     10.9 
20 mu_0       0.2      1.34      4.09e- 8  1.25e-27     43.4 
21 mu_0       0.3      0.894     1.72e- 4  6.14e-20     11.9 
22 mu_0       0.4      1.20      2.17e- 2  1.66e-14     15.3 
23 mu_0       0.5      1.44      1.02e- 1  2.53e-10     20.8 
24 mu_0       0.6      1.24      3.64e- 1  6.18e- 7     13.4 
25 mu_0       0.7      1.21      5.20e- 1  1.78e-10      6.33
26 mu_0       0.8      1.34      5.00e- 1  1.21e-16      8.26
27 mu_0       0.9      1.33      9.34e- 3  1.27e-27     10.1 
[1] "Total run time was 289.023 seconds"
