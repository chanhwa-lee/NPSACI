
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3456"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 
 4  4  3  5  2  4  2  4  6  3  5  4  4  4  5  2  1  2  2  3  2  1  4  6  2  1 
47 48 49 50 
 4  3  2  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03291 0.35374 0.62003 1.00000 5.53711 
[1] "event indicator table: "

   0    1 
2053 1403 
[1] "treatment indicator table: "

   0    1 
1328 2128 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1631
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 24"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 96"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1825
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 79"
[1] "     Cluster: 83"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 439.513 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.398 0.0498
 2 mu         0.1   0.2 0.483 0.0600
 3 mu         0.1   0.3 0.498 0.0577
 4 mu         0.1   0.4 0.552 0.0677
 5 mu         0.1   0.5 0.645 0.0716
 6 mu         0.2   0.1 0.353 0.0414
 7 mu         0.2   0.2 0.447 0.0434
 8 mu         0.2   0.3 0.470 0.0413
 9 mu         0.2   0.4 0.533 0.0429
10 mu         0.2   0.5 0.606 0.0439
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.03         0.813    0.0122      6.86
 2 mu         0.2      1.06         1.05     0.308       3.04
 3 mu         0.3      1.00         0.966    0.518       1.65
 4 mu         0.4      1.01         0.995    0.602       1.55
 5 mu         0.5      1.01         1.01     0.670       1.32
 6 mu         0.6      1.01         1.01     0.734       1.34
 7 mu         0.7      1.01         0.992    0.743       1.43
 8 mu         0.8      1.00         0.992    0.524       1.42
 9 mu         0.9      0.983        0.934    0.270       2.11
10 mu_1       0.1      1.08         1.05     0.0310      3.79
11 mu_1       0.2      1.04         1.01     0.309       2.55
12 mu_1       0.3      0.998        0.960    0.519       1.60
13 mu_1       0.4      1.02         0.998    0.616       1.51
14 mu_1       0.5      1.01         1.02     0.684       1.34
15 mu_1       0.6      1.01         1.02     0.730       1.32
16 mu_1       0.7      1.01         0.998    0.733       1.44
17 mu_1       0.8      1.00         0.981    0.518       1.41
18 mu_1       0.9      0.983        0.928    0.253       2.12
19 mu_0       0.1      1.02         0.769    0.0101      7.23
20 mu_0       0.2      1.06         1.07     0.266       3.16
21 mu_0       0.3      1.00         0.984    0.491       1.67
22 mu_0       0.4      1.01         0.980    0.593       1.58
23 mu_0       0.5      1.01         0.998    0.657       1.29
24 mu_0       0.6      1.01         1.01     0.727       1.38
25 mu_0       0.7      1.01         0.998    0.732       1.40
26 mu_0       0.8      1.00         0.983    0.548       1.45
27 mu_0       0.9      0.984        0.930    0.423       1.95
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.123     4.86e-12  9.27e-41      4.11
 2 mu         0.2      0.776     3.72e- 6  1.45e-27     27.3 
 3 mu         0.3      1.09      2.17e- 3  7.10e-20     16.0 
 4 mu         0.4      0.860     7.67e- 2  1.91e-14      5.56
 5 mu         0.5      0.923     2.90e- 1  2.93e-10      4.86
 6 mu         0.6      1.06      5.58e- 1  7.14e- 7      5.08
 7 mu         0.7      1.16      7.70e- 1  3.83e- 8      5.12
 8 mu         0.8      1.23      1.83e- 1  3.88e-13      6.19
 9 mu         0.9      1.18      4.00e- 4  4.63e-22     15.8 
10 mu_1       0.1      0.254     3.24e-11  9.06e-40      8.42
11 mu_1       0.2      0.922     1.09e- 5  7.09e-27     28.0 
12 mu_1       0.3      1.08      4.33e- 3  2.31e-19     16.0 
13 mu_1       0.4      0.838     1.23e- 1  4.68e-14      5.69
14 mu_1       0.5      0.946     3.00e- 1  5.72e-10      4.76
15 mu_1       0.6      1.07      5.78e- 1  1.16e- 6      5.37
16 mu_1       0.7      1.17      7.90e- 1  1.12e- 8      5.18
17 mu_1       0.8      1.23      1.42e- 1  9.94e-14      6.67
18 mu_1       0.9      1.18      2.72e- 4  1.06e-22     16.3 
19 mu_0       0.1      0.108     2.01e-12  2.29e-42      3.65
20 mu_0       0.2      0.739     1.86e- 6  4.03e-29     27.1 
21 mu_0       0.3      1.10      1.23e- 3  2.25e-21     16.0 
22 mu_0       0.4      0.874     4.55e- 2  7.08e-16      6.33
23 mu_0       0.5      0.901     2.88e- 1  1.30e-11      5.02
24 mu_0       0.6      1.05      4.48e- 1  3.97e- 8      4.99
25 mu_0       0.7      1.12      8.84e- 1  1.02e- 7      4.98
26 mu_0       0.8      1.21      2.09e- 1  1.54e-12      6.06
27 mu_0       0.9      1.19      1.55e- 3  3.68e-21     13.2 
[1] "Total run time was 445.518 seconds"
