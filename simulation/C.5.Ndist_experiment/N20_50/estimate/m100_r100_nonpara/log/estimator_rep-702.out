
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3497"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 2  2  7  3  5  3  2  1  3  1  3  1  4  7  6  2  1  7  2  3  4  5  2  4  2  3 
46 47 48 49 50 
 3  4  3  1  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04237 0.38528 0.64264 1.00000 7.00000 
[1] "event indicator table: "

   0    1 
2105 1392 
[1] "treatment indicator table: "

   0    1 
1281 2216 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1658
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 57"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1839
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 248.081 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.187 0.123 
 2 mu         0.1   0.2 0.410 0.126 
 3 mu         0.1   0.3 0.476 0.132 
 4 mu         0.1   0.4 0.484 0.129 
 5 mu         0.1   0.5 0.492 0.128 
 6 mu         0.2   0.1 0.208 0.104 
 7 mu         0.2   0.2 0.417 0.0894
 8 mu         0.2   0.3 0.485 0.0893
 9 mu         0.2   0.4 0.503 0.0870
10 mu         0.2   0.5 0.519 0.0862
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.861        0.343  0.000464      9.33
 2 mu         0.2      1.03         0.997  0.116         2.33
 3 mu         0.3      1.05         1.06   0.341         2.12
 4 mu         0.4      1.03         1.03   0.503         1.42
 5 mu         0.5      1.02         1.01   0.763         1.46
 6 mu         0.6      1.01         1.01   0.759         1.26
 7 mu         0.7      0.995        0.991  0.747         1.20
 8 mu         0.8      0.978        0.976  0.725         1.27
 9 mu         0.9      0.966        0.973  0.280         1.82
10 mu_1       0.1      0.942        0.590  0.00140       6.00
11 mu_1       0.2      1.05         0.984  0.199         2.30
12 mu_1       0.3      1.05         1.04   0.300         2.01
13 mu_1       0.4      1.02         1.04   0.566         1.46
14 mu_1       0.5      1.01         1.01   0.780         1.45
15 mu_1       0.6      1.01         1.01   0.763         1.22
16 mu_1       0.7      0.993        0.992  0.734         1.20
17 mu_1       0.8      0.977        0.969  0.720         1.30
18 mu_1       0.9      0.965        0.962  0.262         1.89
19 mu_0       0.1      0.852        0.307  0.000360      9.70
20 mu_0       0.2      1.02         0.985  0.0949        2.40
21 mu_0       0.3      1.05         1.05   0.357         2.16
22 mu_0       0.4      1.03         1.02   0.461         1.39
23 mu_0       0.5      1.02         1.02   0.742         1.48
24 mu_0       0.6      1.01         1.01   0.748         1.34
25 mu_0       0.7      0.997        0.996  0.777         1.22
26 mu_0       0.8      0.980        0.981  0.680         1.25
27 mu_0       0.9      0.973        0.982  0.439         1.65
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      3.64      1.42e-12  3.02e-35    358.  
 2 mu         0.2      0.852     7.21e- 7  7.37e-23     60.4 
 3 mu         0.3      0.755     3.60e- 4  7.19e-16     12.1 
 4 mu         0.4      1.05      3.10e- 2  4.50e-11      9.11
 5 mu         0.5      1.06      4.66e- 1  1.96e- 7      5.13
 6 mu         0.6      1.06      8.91e- 1  8.63e- 5      4.11
 7 mu         0.7      1.04      5.46e- 1  2.40e- 7      4.33
 8 mu         0.8      0.991     1.84e- 1  5.49e-11      4.70
 9 mu         0.9      1.16      2.92e- 4  9.78e-20     25.5 
10 mu_1       0.1      1.76      8.11e-12  2.70e-34    163.  
11 mu_1       0.2      0.456     2.46e- 6  3.29e-22     14.6 
12 mu_1       0.3      0.805     8.18e- 4  2.23e-15     12.8 
13 mu_1       0.4      1.07      4.84e- 2  1.05e-10      8.54
14 mu_1       0.5      1.06      5.53e- 1  3.65e- 7      5.02
15 mu_1       0.6      1.06      8.02e- 1  6.54e- 6      4.32
16 mu_1       0.7      1.03      5.26e- 1  1.56e- 8      4.30
17 mu_1       0.8      0.993     1.47e- 1  3.12e-12      4.90
18 mu_1       0.9      1.17      2.12e- 4  3.47e-20     26.3 
19 mu_0       0.1      3.85      6.82e-13  3.57e-36    380.  
20 mu_0       0.2      0.951     2.87e- 7  8.46e-24     72.0 
21 mu_0       0.3      0.734     1.65e- 4  7.16e-17     11.8 
22 mu_0       0.4      1.03      1.87e- 2  5.23e-12     10.2 
23 mu_0       0.5      1.07      4.04e- 1  2.73e- 8      5.24
24 mu_0       0.6      1.06      8.16e- 1  2.57e- 5      3.87
25 mu_0       0.7      1.07      6.84e- 1  7.62e- 7      4.39
26 mu_0       0.8      0.982     3.05e- 1  2.44e-10      5.44
27 mu_0       0.9      1.07      1.03e- 3  6.66e-19     17.8 
[1] "Total run time was 252.699 seconds"
