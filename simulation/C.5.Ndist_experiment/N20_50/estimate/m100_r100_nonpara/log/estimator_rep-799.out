
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3590"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 32 33 34 36 37 38 39 40 41 42 43 44 45 46 47 
 1  5  3  5  5  2  5  4  2  4  1  3  5  2  1  1  5  2  3  7  1  2  6  2  3  3 
48 49 50 
 4  6  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04172 0.34629 0.63255 1.00000 5.00000 
[1] "event indicator table: "

   0    1 
2167 1423 
[1] "treatment indicator table: "

   0    1 
1344 2246 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1902
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1688
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 51"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 68"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 226.032 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.446 0.109 
 2 mu         0.1   0.2 0.544 0.146 
 3 mu         0.1   0.3 0.621 0.149 
 4 mu         0.1   0.4 0.733 0.141 
 5 mu         0.1   0.5 0.739 0.132 
 6 mu         0.2   0.1 0.354 0.0606
 7 mu         0.2   0.2 0.438 0.0814
 8 mu         0.2   0.3 0.517 0.0807
 9 mu         0.2   0.4 0.607 0.0703
10 mu         0.2   0.5 0.628 0.0601
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      1.07         0.414 0.00000194      9.85
 2 mu         0.2      1.04         0.921 0.00602         4.16
 3 mu         0.3      1.06         1.03  0.198           2.35
 4 mu         0.4      1.01         0.985 0.609           1.70
 5 mu         0.5      0.994        0.996 0.691           1.30
 6 mu         0.6      0.994        0.983 0.719           1.23
 7 mu         0.7      0.997        0.996 0.723           1.22
 8 mu         0.8      0.985        0.963 0.540           1.45
 9 mu         0.9      1.01         0.961 0.299           1.92
10 mu_1       0.1      1.04         0.636 0.00000781      5.25
11 mu_1       0.2      1.05         0.985 0.0124          3.90
12 mu_1       0.3      1.05         1.04  0.281           1.94
13 mu_1       0.4      1.01         0.985 0.641           1.60
14 mu_1       0.5      0.993        0.993 0.706           1.30
15 mu_1       0.6      0.994        0.977 0.732           1.23
16 mu_1       0.7      0.997        0.995 0.724           1.22
17 mu_1       0.8      0.984        0.961 0.535           1.45
18 mu_1       0.9      1.01         0.961 0.289           1.93
19 mu_0       0.1      1.07         0.390 0.00000129     10.4 
20 mu_0       0.2      1.04         0.912 0.00442         4.23
21 mu_0       0.3      1.06         1.03  0.162           2.55
22 mu_0       0.4      1.02         0.993 0.587           1.77
23 mu_0       0.5      0.996        1.00  0.677           1.29
24 mu_0       0.6      0.993        0.983 0.700           1.25
25 mu_0       0.7      0.999        0.997 0.719           1.23
26 mu_0       0.8      0.989        0.973 0.560           1.43
27 mu_0       0.9      0.992        0.964 0.381           1.83
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       7.99     2.72e-13  2.46e-36    792.  
 2 mu         0.2       2.70     5.90e- 7  1.20e-23    187.  
 3 mu         0.3       1.41     8.43e- 4  2.30e-16     24.2 
 4 mu         0.4       1.09     5.77e- 2  2.50e-11      9.24
 5 mu         0.5       1.06     3.72e- 1  1.48e- 7      5.48
 6 mu         0.6       1.09     7.25e- 1  1.01e- 4      5.18
 7 mu         0.7       1.01     6.69e- 1  1.37e- 7      3.81
 8 mu         0.8       1.15     2.41e- 1  1.78e-12      8.04
 9 mu         0.9       1.04     6.99e- 4  3.03e-22     15.1 
10 mu_1       0.1       6.25     1.56e-12  2.20e-35    609.  
11 mu_1       0.2       1.74     1.94e- 6  5.37e-23     72.1 
12 mu_1       0.3       1.28     1.82e- 3  6.86e-16     18.6 
13 mu_1       0.4       1.07     8.82e- 2  5.61e-11      7.40
14 mu_1       0.5       1.07     3.48e- 1  2.65e- 7      5.63
15 mu_1       0.6       1.08     7.55e- 1  1.29e- 5      4.76
16 mu_1       0.7       1.01     6.61e- 1  1.51e- 8      4.24
17 mu_1       0.8       1.17     1.93e- 1  6.66e-13      7.84
18 mu_1       0.9       1.03     4.55e- 4  1.01e-22     15.3 
19 mu_0       0.1       8.18     1.14e-13  0           812.  
20 mu_0       0.2       2.94     2.62e- 7  0           216.  
21 mu_0       0.3       1.46     4.23e- 4  0            26.5 
22 mu_0       0.4       1.11     3.79e- 2  0            10.5 
23 mu_0       0.5       1.05     2.39e- 1  0             6.07
24 mu_0       0.6       1.10     6.16e- 1  0             5.81
25 mu_0       0.7       1.02     7.58e- 1  0             3.92
26 mu_0       0.8       1.09     2.96e- 1  0             8.84
27 mu_0       0.9       1.12     2.79e- 3  0            13.1 
[1] "Total run time was 229.473 seconds"
