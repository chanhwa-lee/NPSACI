
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3671"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 32 33 34 35 36 37 38 39 40 41 42 44 45 46 47 
 2  2  2  2  5  2  4  3  1  4  6  6  1  1  4  4  4  2  1  4  1  7  3  4  3  4 
48 49 50 
 7  5  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02595 0.32304 0.58295 0.97931 6.00000 
[1] "event indicator table: "

   0    1 
2216 1455 
[1] "treatment indicator table: "

   0    1 
1379 2292 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1888
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 36"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 49"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 97"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1783
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 11"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 87"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 276.604 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.418 0.0754
 2 mu         0.1   0.2 0.506 0.0880
 3 mu         0.1   0.3 0.553 0.0907
 4 mu         0.1   0.4 0.581 0.0940
 5 mu         0.1   0.5 0.584 0.0900
 6 mu         0.2   0.1 0.408 0.0566
 7 mu         0.2   0.2 0.494 0.0688
 8 mu         0.2   0.3 0.555 0.0657
 9 mu         0.2   0.4 0.598 0.0647
10 mu         0.2   0.5 0.610 0.0523
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.939        0.426  0.00114       8.36
 2 mu         0.2      1.02         1.02   0.133         2.07
 3 mu         0.3      1.00         1.01   0.380         1.70
 4 mu         0.4      0.995        0.994  0.590         1.54
 5 mu         0.5      0.999        0.999  0.614         1.47
 6 mu         0.6      1.01         1.00   0.602         1.25
 7 mu         0.7      0.992        0.977  0.755         1.35
 8 mu         0.8      0.987        0.991  0.707         1.31
 9 mu         0.9      0.994        0.968  0.301         1.95
10 mu_1       0.1      0.999        0.682  0.00309       5.84
11 mu_1       0.2      1.02         0.992  0.207         2.06
12 mu_1       0.3      1.00         0.992  0.412         1.68
13 mu_1       0.4      0.994        0.975  0.534         1.59
14 mu_1       0.5      1.00         0.997  0.671         1.42
15 mu_1       0.6      1.00         1.00   0.589         1.25
16 mu_1       0.7      0.990        0.971  0.755         1.37
17 mu_1       0.8      0.987        0.988  0.693         1.32
18 mu_1       0.9      0.993        0.976  0.297         1.98
19 mu_0       0.1      0.932        0.394  0.000923      8.72
20 mu_0       0.2      1.02         1.04   0.114         2.16
21 mu_0       0.3      1.00         0.995  0.366         1.70
22 mu_0       0.4      0.996        0.994  0.613         1.53
23 mu_0       0.5      0.997        0.992  0.556         1.53
24 mu_0       0.6      1.01         1.01   0.621         1.26
25 mu_0       0.7      0.996        0.993  0.743         1.32
26 mu_0       0.8      0.985        0.968  0.717         1.36
27 mu_0       0.9      1.00         1.00   0.340         1.81
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.162     2.01e-13  1.04e-34      9.12
 2 mu         0.2      1.11      1.34e- 7  4.00e-22     34.5 
 3 mu         0.3      1.24      2.40e- 4  7.83e-16     16.0 
 4 mu         0.4      1.55      2.49e- 2  2.11e-11     14.8 
 5 mu         0.5      1.42      2.71e- 1  5.42e- 8     13.3 
 6 mu         0.6      1.07      5.44e- 1  2.75e- 5      8.43
 7 mu         0.7      1.04      4.74e- 1  1.54e- 8      6.88
 8 mu         0.8      1.07      2.42e- 1  7.93e-14      5.36
 9 mu         0.9      1.14      5.01e- 4  2.67e-23     16.8 
10 mu_1       0.1      0.341     1.21e-12  8.91e-34     18.2 
11 mu_1       0.2      1.24      4.58e- 7  1.72e-21     34.5 
12 mu_1       0.3      1.27      5.15e- 4  2.54e-15     14.3 
13 mu_1       0.4      1.59      4.31e- 2  5.14e-11     13.5 
14 mu_1       0.5      1.36      3.53e- 1  1.06e- 7     12.2 
15 mu_1       0.6      1.05      5.17e- 1  1.83e- 5      8.78
16 mu_1       0.7      1.04      5.23e- 1  4.72e- 9      6.42
17 mu_1       0.8      1.07      2.47e- 1  2.12e-14      5.27
18 mu_1       0.9      1.15      3.68e- 4  6.35e-24     18.2 
19 mu_0       0.1      0.142     9.31e-14  1.61e-35      8.10
20 mu_0       0.2      1.07      5.36e- 8  1.38e-23     34.5 
21 mu_0       0.3      1.22      1.22e- 4  3.02e-17     18.2 
22 mu_0       0.4      1.53      1.32e- 2  9.52e-13     15.6 
23 mu_0       0.5      1.49      2.03e- 1  2.93e- 9     14.5 
24 mu_0       0.6      1.10      4.36e- 1  1.96e- 6      7.91
25 mu_0       0.7      1.03      4.83e- 1  4.04e- 8      7.96
26 mu_0       0.8      1.04      3.67e- 1  3.12e-13      5.75
27 mu_0       0.9      1.03      1.69e- 3  2.09e-22     12.4 
[1] "Total run time was 280.6 seconds"
