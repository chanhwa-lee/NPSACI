
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3540"
[1] "cluster size dist'n: "

20 21 22 23 24 26 27 28 29 30 31 32 33 35 36 37 38 39 40 41 42 43 44 45 46 47 
 3  5  3  4  9  4  2  2  5  2  1  1  1  2  5  2  4  3  2  4  1  4  9  5  4  3 
48 49 50 
 3  5  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02547 0.32447 0.59673 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
2065 1475 
[1] "treatment indicator table: "

   0    1 
1360 2180 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1881
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1659
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 21"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 63"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 235.285 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.302 0.108 
 2 mu         0.1   0.2 0.390 0.114 
 3 mu         0.1   0.3 0.409 0.147 
 4 mu         0.1   0.4 0.420 0.176 
 5 mu         0.1   0.5 0.468 0.143 
 6 mu         0.2   0.1 0.370 0.0643
 7 mu         0.2   0.2 0.436 0.0628
 8 mu         0.2   0.3 0.473 0.0776
 9 mu         0.2   0.4 0.500 0.0929
10 mu         0.2   0.5 0.547 0.0744
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      0.915        0.572 0.00000868      4.49
 2 mu         0.2      1.01         0.964 0.0160          2.20
 3 mu         0.3      1.03         0.999 0.256           1.76
 4 mu         0.4      1.01         1.00  0.493           1.47
 5 mu         0.5      0.990        0.989 0.566           1.35
 6 mu         0.6      0.990        0.993 0.743           1.33
 7 mu         0.7      1.00         1.00  0.812           1.30
 8 mu         0.8      0.987        0.994 0.722           1.32
 9 mu         0.9      1.00         1.03  0.474           1.70
10 mu_1       0.1      0.925        0.746 0.0000291       3.87
11 mu_1       0.2      1.02         1.00  0.0275          1.89
12 mu_1       0.3      1.02         0.999 0.316           1.76
13 mu_1       0.4      1.00         0.998 0.466           1.40
14 mu_1       0.5      0.989        0.980 0.597           1.36
15 mu_1       0.6      0.991        1.01  0.734           1.34
16 mu_1       0.7      1.00         1.00  0.801           1.32
17 mu_1       0.8      0.985        0.987 0.704           1.34
18 mu_1       0.9      1.00         1.03  0.461           1.72
19 mu_0       0.1      0.914        0.544 0.00000641      4.59
20 mu_0       0.2      1.00         0.964 0.0131          2.28
21 mu_0       0.3      1.03         1.01  0.230           1.76
22 mu_0       0.4      1.01         0.993 0.511           1.51
23 mu_0       0.5      0.991        0.983 0.534           1.36
24 mu_0       0.6      0.989        0.992 0.725           1.33
25 mu_0       0.7      1.00         1.00  0.803           1.26
26 mu_0       0.8      0.994        0.998 0.744           1.32
27 mu_0       0.9      0.979        0.973 0.562           1.51
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       1.05     1.33e-11  2.72e-37     59.7 
 2 mu         0.2       1.38     1.89e- 6  2.66e-24     38.6 
 3 mu         0.3       1.24     1.49e- 3  7.63e-17     16.2 
 4 mu         0.4       1.19     7.71e- 2  1.11e-11      8.04
 5 mu         0.5       1.08     4.13e- 1  8.18e- 8      5.83
 6 mu         0.6       1.05     4.32e- 1  5.12e- 8      8.87
 7 mu         0.7       1.06     6.93e- 1  1.73e-12      4.44
 8 mu         0.8       1.15     2.29e- 1  5.24e-19      7.09
 9 mu         0.9       1.13     5.71e- 4  1.93e-30     14.7 
10 mu_1       0.1       1.48     8.75e-11  2.44e-36     79.6 
11 mu_1       0.2       1.36     6.12e- 6  1.19e-23     25.8 
12 mu_1       0.3       1.20     3.20e- 3  2.28e-16     13.5 
13 mu_1       0.4       1.15     1.20e- 1  2.49e-11      7.38
14 mu_1       0.5       1.07     4.04e- 1  1.47e- 7      6.67
15 mu_1       0.6       1.05     4.17e- 1  1.14e- 8      8.45
16 mu_1       0.7       1.06     6.53e- 1  3.30e-13      4.18
17 mu_1       0.8       1.16     1.71e- 1  8.73e-20      7.01
18 mu_1       0.9       1.13     4.27e- 4  2.86e-31     15.7 
19 mu_0       0.1       1.00     5.09e-12  3.08e-38     57.5 
20 mu_0       0.2       1.39     8.36e- 7  3.39e-25     41.9 
21 mu_0       0.3       1.25     7.62e- 4  1.11e-17     17.4 
22 mu_0       0.4       1.22     4.95e- 2  1.89e-12      8.48
23 mu_0       0.5       1.09     4.17e- 1  1.67e- 8      5.40
24 mu_0       0.6       1.06     3.96e- 1  1.11e- 7      9.50
25 mu_0       0.7       1.05     6.37e- 1  5.00e-12      5.04
26 mu_0       0.8       1.13     3.42e- 1  2.27e-18      7.42
27 mu_0       0.9       1.16     1.91e- 3  1.67e-29     10.1 
[1] "Total run time was 239.927 seconds"
