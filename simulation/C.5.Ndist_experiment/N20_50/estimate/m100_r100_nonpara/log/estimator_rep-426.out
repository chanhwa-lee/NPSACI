
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3611"
[1] "cluster size dist'n: "

20 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 40 41 42 43 44 45 46 47 
 5  3  4  1  4  3  1  1  6  3  3  5  6  4  2  3  1  2  4  6  1  1  4  4  3  5 
48 49 50 
 5  6  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02218 0.31560 0.58031 0.98835 5.00000 
[1] "event indicator table: "

   0    1 
2128 1483 
[1] "treatment indicator table: "

   0    1 
1389 2222 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1831
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1780
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 264.798 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.314 0.105 
 2 mu         0.1   0.2 0.418 0.0691
 3 mu         0.1   0.3 0.450 0.0862
 4 mu         0.1   0.4 0.471 0.0820
 5 mu         0.1   0.5 0.543 0.0742
 6 mu         0.2   0.1 0.398 0.0662
 7 mu         0.2   0.2 0.500 0.0479
 8 mu         0.2   0.3 0.579 0.0564
 9 mu         0.2   0.4 0.617 0.0504
10 mu         0.2   0.5 0.697 0.0510
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.800        0.532   0.00358      7.51
 2 mu         0.2      1.04         0.936   0.253        3.53
 3 mu         0.3      1.03         1.00    0.381        1.77
 4 mu         0.4      0.997        0.993   0.621        1.53
 5 mu         0.5      0.997        0.989   0.685        1.32
 6 mu         0.6      1.00         0.997   0.731        1.29
 7 mu         0.7      1.01         1.01    0.650        1.30
 8 mu         0.8      0.996        0.985   0.521        1.36
 9 mu         0.9      0.987        0.974   0.0470       1.77
10 mu_1       0.1      0.881        0.723   0.00922      6.76
11 mu_1       0.2      1.04         1.00    0.264        2.45
12 mu_1       0.3      1.02         0.994   0.440        1.76
13 mu_1       0.4      0.995        0.990   0.631        1.51
14 mu_1       0.5      0.997        0.991   0.684        1.33
15 mu_1       0.6      1.00         0.997   0.727        1.29
16 mu_1       0.7      1.01         1.02    0.633        1.30
17 mu_1       0.8      0.995        0.996   0.509        1.36
18 mu_1       0.9      0.986        0.967   0.0413       1.82
19 mu_0       0.1      0.791        0.504   0.00295      7.59
20 mu_0       0.2      1.03         0.935   0.243        3.80
21 mu_0       0.3      1.03         0.991   0.355        1.77
22 mu_0       0.4      0.999        0.990   0.580        1.54
23 mu_0       0.5      0.997        0.995   0.686        1.30
24 mu_0       0.6      1.00         0.995   0.724        1.30
25 mu_0       0.7      1.00         1.01    0.682        1.33
26 mu_0       0.8      1.00         0.990   0.520        1.40
27 mu_0       0.9      0.995        0.996   0.0983       1.68
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.17      4.71e-12  1.96e-37     71.0 
 2 mu         0.2      1.41      1.63e- 6  2.15e-24     46.4 
 3 mu         0.3      0.680     1.43e- 3  3.65e-17      9.82
 4 mu         0.4      0.970     7.20e- 2  2.67e-12      8.41
 5 mu         0.5      1.20      6.64e- 1  1.39e- 8      8.96
 6 mu         0.6      1.23      6.97e- 1  1.16e- 7     11.3 
 7 mu         0.7      1.12      6.38e- 1  7.96e-12      6.73
 8 mu         0.8      1.01      1.48e- 1  7.10e-18     10.9 
 9 mu         0.9      1.30      4.20e- 4  1.86e-28     28.9 
10 mu_1       0.1      1.63      3.23e-11  1.79e-36     86.6 
11 mu_1       0.2      1.19      5.47e- 6  9.85e-24     40.6 
12 mu_1       0.3      0.693     2.94e- 3  1.16e-16     11.2 
13 mu_1       0.4      1.03      1.02e- 1  6.35e-12      7.17
14 mu_1       0.5      1.22      6.63e- 1  2.65e- 8     10.1 
15 mu_1       0.6      1.22      7.75e- 1  2.35e- 8     10.6 
16 mu_1       0.7      1.11      5.13e- 1  1.39e-12      6.67
17 mu_1       0.8      0.997     1.16e- 1  1.08e-18     10.8 
18 mu_1       0.9      1.31      3.02e- 4  2.52e-29     29.5 
19 mu_0       0.1      1.12      1.64e-12  1.81e-38     69.3 
20 mu_0       0.2      1.47      6.72e- 7  2.24e-25     47.8 
21 mu_0       0.3      0.675     7.89e- 4  2.48e-18     11.4 
22 mu_0       0.4      0.929     5.01e- 2  2.12e-13      9.24
23 mu_0       0.5      1.18      4.55e- 1  1.33e- 9      7.84
24 mu_0       0.6      1.25      7.04e- 1  2.54e- 7     12.4 
25 mu_0       0.7      1.15      7.37e- 1  2.33e-11      6.87
26 mu_0       0.8      1.04      2.33e- 1  3.12e-17     11.4 
27 mu_0       0.9      1.21      1.44e- 3  1.64e-27     24.1 
[1] "Total run time was 269.158 seconds"
