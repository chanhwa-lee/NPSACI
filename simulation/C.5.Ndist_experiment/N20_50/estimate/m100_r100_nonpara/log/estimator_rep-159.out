
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3511"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 39 40 41 42 43 44 45 46 
 7  3  2  2  3  1  1  4  7  3  3  5  4  1  3  2  2  4  5  5  2  4  4  3  2  4 
47 48 49 50 
 3  2  4  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02409 0.32439 0.57912 0.97519 6.00000 
[1] "event indicator table: "

   0    1 
2076 1435 
[1] "treatment indicator table: "

   0    1 
1342 2169 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1861
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1650
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 24"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 47"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 66"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 235.759 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.467 0.0763
 2 mu         0.1   0.2 0.536 0.0870
 3 mu         0.1   0.3 0.620 0.0923
 4 mu         0.1   0.4 0.625 0.0872
 5 mu         0.1   0.5 0.646 0.0777
 6 mu         0.2   0.1 0.344 0.0474
 7 mu         0.2   0.2 0.407 0.0595
 8 mu         0.2   0.3 0.470 0.0568
 9 mu         0.2   0.4 0.482 0.0657
10 mu         0.2   0.5 0.511 0.0599
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.15         0.909   0.00857      4.69
 2 mu         0.2      1.01         1.01    0.183        2.36
 3 mu         0.3      1.00         1.02    0.454        1.47
 4 mu         0.4      0.993        0.976   0.614        1.41
 5 mu         0.5      0.990        0.976   0.748        1.34
 6 mu         0.6      1.02         1.02    0.768        1.36
 7 mu         0.7      1.01         1.01    0.733        1.32
 8 mu         0.8      0.977        0.970   0.544        1.35
 9 mu         0.9      0.982        0.966   0.281        1.80
10 mu_1       0.1      1.08         0.971   0.0148       3.51
11 mu_1       0.2      0.997        1.01    0.234        2.09
12 mu_1       0.3      1.00         1.02    0.451        1.38
13 mu_1       0.4      0.989        0.976   0.643        1.40
14 mu_1       0.5      0.993        0.983   0.744        1.35
15 mu_1       0.6      1.02         1.03    0.759        1.37
16 mu_1       0.7      1.00         1.01    0.732        1.33
17 mu_1       0.8      0.976        0.971   0.538        1.35
18 mu_1       0.9      0.983        0.967   0.269        1.83
19 mu_0       0.1      1.16         0.899   0.00719      4.94
20 mu_0       0.2      1.01         0.996   0.170        2.45
21 mu_0       0.3      1.00         1.04    0.456        1.51
22 mu_0       0.4      0.995        0.991   0.591        1.42
23 mu_0       0.5      0.987        0.973   0.746        1.32
24 mu_0       0.6      1.01         1.02    0.781        1.34
25 mu_0       0.7      1.01         1.00    0.737        1.34
26 mu_0       0.8      0.981        0.977   0.568        1.32
27 mu_0       0.9      0.971        0.978   0.383        1.58
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.302     7.98e-13  4.74e-39     28.2 
 2 mu         0.2      0.716     3.82e- 7  1.85e-26     18.8 
 3 mu         0.3      1.09      5.81e- 4  4.03e-19     13.8 
 4 mu         0.4      1.06      3.54e- 2  6.11e-14      6.70
 5 mu         0.5      0.871     2.50e- 1  5.99e-10      4.03
 6 mu         0.6      0.918     5.79e- 1  1.01e- 6      6.02
 7 mu         0.7      1.12      4.96e- 1  8.73e- 9      6.56
 8 mu         0.8      1.10      3.18e- 1  1.32e-14      7.11
 9 mu         0.9      0.997     6.20e- 4  3.96e-25     10.6 
10 mu_1       0.1      0.415     4.41e-12  4.63e-38     36.4 
11 mu_1       0.2      0.829     1.15e- 6  9.05e-26     18.2 
12 mu_1       0.3      1.14      1.23e- 3  1.31e-18     11.3 
13 mu_1       0.4      1.04      5.87e- 2  1.49e-13      6.63
14 mu_1       0.5      0.851     3.41e- 1  1.17e- 9      3.83
15 mu_1       0.6      0.937     5.18e- 1  1.65e- 6      5.82
16 mu_1       0.7      1.13      4.98e- 1  1.64e- 9      6.56
17 mu_1       0.8      1.11      2.66e- 1  4.05e-15      6.99
18 mu_1       0.9      0.991     4.61e- 4  1.08e-25     11.3 
19 mu_0       0.1      0.289     4.08e-13  0            27.3 
20 mu_0       0.2      0.688     1.99e- 7  0            20.4 
21 mu_0       0.3      1.07      3.05e- 4  0            14.9 
22 mu_0       0.4      1.08      2.06e- 2  0             7.13
23 mu_0       0.5      0.891     1.71e- 1  0             4.38
24 mu_0       0.6      0.890     5.09e- 1  0             6.32
25 mu_0       0.7      1.10      3.91e- 1  0             6.56
26 mu_0       0.8      1.08      4.80e- 1  0             7.56
27 mu_0       0.9      1.05      1.91e- 3  0            13.1 
[1] "Total run time was 239.964 seconds"
