
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3554"
[1] "cluster size dist'n: "

20 21 22 23 24 25 27 28 29 30 31 32 33 34 35 36 37 38 39 40 42 43 44 45 46 47 
 2  5  3  6  2  4  5  3  3  2  2  2  5  2  3  3  3  1  3  7  2  6  3  5  3  2 
48 49 50 
 3  2  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02653 0.35012 0.61116 1.00000 5.29168 
[1] "event indicator table: "

   0    1 
2127 1427 
[1] "treatment indicator table: "

   0    1 
1312 2242 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1788
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1766
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 84"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 372.587 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.314 0.0999
 2 mu         0.1   0.2 0.470 0.156 
 3 mu         0.1   0.3 0.473 0.157 
 4 mu         0.1   0.4 0.534 0.162 
 5 mu         0.1   0.5 0.694 0.208 
 6 mu         0.2   0.1 0.346 0.0351
 7 mu         0.2   0.2 0.496 0.0895
 8 mu         0.2   0.3 0.518 0.0664
 9 mu         0.2   0.4 0.581 0.0571
10 mu         0.2   0.5 0.711 0.111 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      0.975        0.220 0.00000716     27.0 
 2 mu         0.2      1.10         0.929 0.0206          4.48
 3 mu         0.3      1.05         1.01  0.210           2.57
 4 mu         0.4      1.02         1.01  0.448           1.64
 5 mu         0.5      1.01         1.02  0.535           1.46
 6 mu         0.6      0.984        0.987 0.657           1.25
 7 mu         0.7      0.985        0.982 0.773           1.25
 8 mu         0.8      1.01         1.03  0.631           1.33
 9 mu         0.9      0.996        0.990 0.310           1.62
10 mu_1       0.1      0.948        0.427 0.0000256       6.18
11 mu_1       0.2      1.11         0.967 0.0347          4.07
12 mu_1       0.3      1.04         1.01  0.251           2.37
13 mu_1       0.4      1.02         0.996 0.480           1.67
14 mu_1       0.5      1.01         1.01  0.531           1.42
15 mu_1       0.6      0.982        0.978 0.683           1.27
16 mu_1       0.7      0.987        0.994 0.768           1.23
17 mu_1       0.8      1.01         1.03  0.622           1.32
18 mu_1       0.9      0.995        0.985 0.294           1.66
19 mu_0       0.1      0.978        0.197 0.00000511     29.3 
20 mu_0       0.2      1.10         0.942 0.0171          4.58
21 mu_0       0.3      1.06         1.01  0.192           2.66
22 mu_0       0.4      1.02         1.00  0.427           1.63
23 mu_0       0.5      1.01         1.01  0.540           1.50
24 mu_0       0.6      0.988        0.992 0.618           1.22
25 mu_0       0.7      0.982        0.978 0.780           1.31
26 mu_0       0.8      1.01         1.02  0.668           1.33
27 mu_0       0.9      1.01         1.01  0.441           1.72
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.0284     4.19e-12  6.62e-40      1.55
 2 mu         0.2     0.350      1.57e- 6  2.80e-26     13.4 
 3 mu         0.3     0.863      7.38e- 4  1.57e-18     15.7 
 4 mu         0.4     1.10       5.91e- 2  4.15e-13     14.8 
 5 mu         0.5     1.01       5.11e- 1  5.52e- 9      6.65
 6 mu         0.6     1.07       7.59e- 1  1.03e- 5      5.05
 7 mu         0.7     1.09       8.61e- 1  1.29e- 7      5.57
 8 mu         0.8     0.918      2.24e- 1  1.30e-12      6.82
 9 mu         0.9     1.11       1.36e- 3  1.10e-21     17.5 
10 mu_1       0.1     0.0715     2.48e-11  6.09e-39      4.03
11 mu_1       0.2     0.471      4.96e- 6  1.31e-25     17.4 
12 mu_1       0.3     0.946      1.65e- 3  4.92e-18     13.7 
13 mu_1       0.4     1.11       9.12e- 2  9.73e-13     13.7 
14 mu_1       0.5     1.01       5.61e- 1  1.03e- 8      6.81
15 mu_1       0.6     1.08       7.67e- 1  1.61e- 5      5.15
16 mu_1       0.7     1.08       8.15e- 1  4.71e- 8      5.54
17 mu_1       0.8     0.914      1.76e- 1  4.15e-13      7.16
18 mu_1       0.9     1.10       9.57e- 4  3.14e-22     17.5 
19 mu_0       0.1     0.0236     1.85e-12  5.89e-41      1.27
20 mu_0       0.2     0.320      7.21e- 7  2.19e-27     12.3 
21 mu_0       0.3     0.827      3.47e- 4  1.40e-19     16.6 
22 mu_0       0.4     1.10       3.78e- 2  4.32e-14     15.6 
23 mu_0       0.5     1.02       4.53e- 1  6.90e-10      7.60
24 mu_0       0.6     1.05       6.67e- 1  1.61e- 6      4.89
25 mu_0       0.7     1.11       9.31e- 1  3.20e- 7      5.65
26 mu_0       0.8     0.937      2.95e- 1  4.83e-12      5.46
27 mu_0       0.9     1.17       4.81e- 3  8.22e-21     17.5 
[1] "Total run time was 376.805 seconds"
