
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3477"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 4  3  6  1  3  2  2  4  1  3  4  3  5  5  6  5  3  3  3  2  3  2  1  3  5  1 
46 47 48 49 50 
 5  3  2  1  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.05313 0.38675 0.62356 1.00000 5.00000 
[1] "event indicator table: "

   0    1 
2035 1442 
[1] "treatment indicator table: "

   0    1 
1201 2276 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1730
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 59"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1747
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 187.125 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.319 0.0484
 2 mu         0.1   0.2 0.490 0.0569
 3 mu         0.1   0.3 0.543 0.0583
 4 mu         0.1   0.4 0.599 0.0732
 5 mu         0.1   0.5 0.609 0.0743
 6 mu         0.2   0.1 0.311 0.0395
 7 mu         0.2   0.2 0.440 0.0387
 8 mu         0.2   0.3 0.494 0.0368
 9 mu         0.2   0.4 0.547 0.0408
10 mu         0.2   0.5 0.563 0.0417
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.02         0.654  0.000733      5.07
 2 mu         0.2      0.974        0.972  0.145         1.72
 3 mu         0.3      0.997        0.999  0.203         1.84
 4 mu         0.4      0.998        1.02   0.454         1.45
 5 mu         0.5      1.00         1.00   0.580         1.38
 6 mu         0.6      1.00         1.01   0.771         1.25
 7 mu         0.7      1.00         1.00   0.753         1.41
 8 mu         0.8      1.01         1.02   0.655         1.35
 9 mu         0.9      0.987        0.971  0.455         1.48
10 mu_1       0.1      0.999        0.818  0.00208       5.33
11 mu_1       0.2      0.978        1.00   0.221         1.88
12 mu_1       0.3      0.999        0.990  0.232         1.75
13 mu_1       0.4      0.997        1.01   0.457         1.47
14 mu_1       0.5      1.00         0.992  0.608         1.37
15 mu_1       0.6      1.00         1.01   0.777         1.23
16 mu_1       0.7      1.00         1.00   0.749         1.41
17 mu_1       0.8      1.01         1.02   0.652         1.34
18 mu_1       0.9      0.985        0.965  0.440         1.48
19 mu_0       0.1      1.02         0.627  0.000583      5.04
20 mu_0       0.2      0.974        0.960  0.126         1.79
21 mu_0       0.3      0.996        0.996  0.190         1.88
22 mu_0       0.4      0.998        1.02   0.452         1.44
23 mu_0       0.5      1.00         1.01   0.551         1.38
24 mu_0       0.6      1.00         1.01   0.762         1.29
25 mu_0       0.7      0.999        0.986  0.754         1.43
26 mu_0       0.8      1.01         1.01   0.665         1.35
27 mu_0       0.9      1.01         1.01   0.478         1.42
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.923     1.85e-12  1.13e-41     43.3 
 2 mu         0.2      1.05      5.55e- 7  1.12e-27     37.0 
 3 mu         0.3      0.891     1.06e- 3  1.41e-19     10.6 
 4 mu         0.4      0.823     6.69e- 2  3.40e-14      5.85
 5 mu         0.5      1.06      3.29e- 1  2.56e-10      6.65
 6 mu         0.6      1.19      5.05e- 1  3.76e- 7      7.56
 7 mu         0.7      1.04      5.49e- 1  1.29e- 8      6.44
 8 mu         0.8      1.03      3.22e- 1  3.87e-13      4.97
 9 mu         0.9      1.32      1.08e- 3  6.70e-22     11.2 
10 mu_1       0.1      1.29      1.12e-11  1.06e-40     59.1 
11 mu_1       0.2      0.942     1.66e- 6  5.25e-27     25.2 
12 mu_1       0.3      0.832     2.22e- 3  4.43e-19     10.7 
13 mu_1       0.4      0.834     7.72e- 2  8.51e-14      6.68
14 mu_1       0.5      1.09      2.79e- 1  5.12e-10      6.07
15 mu_1       0.6      1.18      4.69e- 1  6.27e- 7      7.45
16 mu_1       0.7      1.02      4.79e- 1  2.38e- 9      6.41
17 mu_1       0.8      1.04      3.00e- 1  6.25e-14      4.88
18 mu_1       0.9      1.34      7.45e- 4  2.17e-22     11.5 
19 mu_0       0.1      0.883     5.32e-13  0            41.6 
20 mu_0       0.2      1.07      2.79e- 7  0            39.9 
21 mu_0       0.3      0.917     5.67e- 4  0            12.2 
22 mu_0       0.4      0.816     4.20e- 2  0             5.32
23 mu_0       0.5      1.02      3.58e- 1  0             7.23
24 mu_0       0.6      1.20      4.09e- 1  0             7.73
25 mu_0       0.7      1.08      5.10e- 1  0             7.45
26 mu_0       0.8      0.990     3.13e- 1  0             6.34
27 mu_0       0.9      1.16      2.61e- 3  0             9.76
[1] "Total run time was 190.133 seconds"
