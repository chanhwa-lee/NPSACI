
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3569"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 4  2  2  1  5  2  3  2  2  3  6  3  3  4  2  5  2  3  2  3  5  4  5  6  3  5 
46 47 48 49 50 
 2  2  4  2  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04599 0.38680 0.62471 1.00000 5.00000 
[1] "event indicator table: "

   0    1 
2152 1417 
[1] "treatment indicator table: "

   0    1 
1243 2326 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1731
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 77"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1838
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 11"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 294.722 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.408 0.152 
 2 mu         0.1   0.2 0.475 0.191 
 3 mu         0.1   0.3 0.490 0.196 
 4 mu         0.1   0.4 0.489 0.205 
 5 mu         0.1   0.5 0.557 0.224 
 6 mu         0.2   0.1 0.354 0.0624
 7 mu         0.2   0.2 0.416 0.0766
 8 mu         0.2   0.3 0.451 0.0718
 9 mu         0.2   0.4 0.467 0.0771
10 mu         0.2   0.5 0.523 0.0845
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      0.946        0.121 0.00000381     23.2 
 2 mu         0.2      0.963        0.785 0.00769         4.99
 3 mu         0.3      0.960        0.898 0.184           2.21
 4 mu         0.4      0.960        0.957 0.491           1.49
 5 mu         0.5      0.983        0.965 0.687           1.42
 6 mu         0.6      0.981        0.983 0.657           1.27
 7 mu         0.7      0.982        0.984 0.734           1.17
 8 mu         0.8      1.02         1.02  0.661           1.36
 9 mu         0.9      1.08         1.08  0.523           1.83
10 mu_1       0.1      0.991        0.250 0.0000141      20.2 
11 mu_1       0.2      0.961        0.868 0.0147          2.93
12 mu_1       0.3      0.957        0.906 0.248           2.10
13 mu_1       0.4      0.964        0.943 0.489           1.43
14 mu_1       0.5      0.985        0.965 0.689           1.42
15 mu_1       0.6      0.981        0.976 0.663           1.27
16 mu_1       0.7      0.984        0.990 0.740           1.18
17 mu_1       0.8      1.03         1.03  0.660           1.36
18 mu_1       0.9      1.09         1.08  0.534           1.87
19 mu_0       0.1      0.941        0.107 0.00000267     23.6 
20 mu_0       0.2      0.964        0.743 0.00594         5.60
21 mu_0       0.3      0.961        0.882 0.157           2.26
22 mu_0       0.4      0.957        0.960 0.476           1.55
23 mu_0       0.5      0.980        0.959 0.685           1.43
24 mu_0       0.6      0.982        0.984 0.647           1.27
25 mu_0       0.7      0.977        0.975 0.721           1.17
26 mu_0       0.8      1.01         1.01  0.667           1.34
27 mu_0       0.9      1.07         1.04  0.422           1.56
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.26      5.53e-14  5.77e-40     85.6 
 2 mu         0.2      2.60      1.09e- 7  2.53e-26    108.  
 3 mu         0.3      1.53      2.72e- 4  1.87e-18     31.2 
 4 mu         0.4      1.25      3.31e- 2  5.64e-13     13.4 
 5 mu         0.5      1.19      4.31e- 1  7.32e- 9     11.3 
 6 mu         0.6      1.23      6.42e- 1  8.26e- 6      6.50
 7 mu         0.7      1.25      9.61e- 1  1.62e- 8      5.97
 8 mu         0.8      1.10      3.85e- 1  9.58e-14      7.82
 9 mu         0.9      0.844     3.96e- 3  5.09e-23     11.2 
10 mu_1       0.1      2.07      3.67e-13  5.31e-39    132.  
11 mu_1       0.2      2.41      3.45e- 7  1.17e-25     96.8 
12 mu_1       0.3      1.36      5.64e- 4  5.74e-18     25.1 
13 mu_1       0.4      1.24      5.57e- 2  1.30e-12     11.6 
14 mu_1       0.5      1.19      4.23e- 1  1.40e- 8     10.4 
15 mu_1       0.6      1.24      6.44e- 1  1.31e- 5      6.78
16 mu_1       0.7      1.24      9.07e- 1  4.16e- 9      5.58
17 mu_1       0.8      1.08      3.39e- 1  2.15e-14      8.15
18 mu_1       0.9      0.837     2.75e- 3  1.02e-23     11.8 
19 mu_0       0.1      1.17      2.07e-14  5.13e-41     80.5 
20 mu_0       0.2      2.65      4.01e- 8  2.53e-27    111.  
21 mu_0       0.3      1.61      1.45e- 4  2.14e-19     33.8 
22 mu_0       0.4      1.26      1.97e- 2  7.52e-14     14.5 
23 mu_0       0.5      1.19      2.82e- 1  6.81e-10     12.2 
24 mu_0       0.6      1.21      6.45e- 1  9.60e- 7      6.24
25 mu_0       0.7      1.27      9.07e- 1  4.44e- 8      6.89
26 mu_0       0.8      1.17      6.31e- 1  3.93e-13      6.52
27 mu_0       0.9      0.907     1.31e- 2  4.18e-22      7.78
[1] "Total run time was 299.649 seconds"
