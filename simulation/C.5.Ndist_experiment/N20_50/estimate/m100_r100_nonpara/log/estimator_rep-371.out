
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3446"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 31 32 33 34 35 36 37 39 40 41 42 43 44 45 46 47 
 1  4  1  2  9  5  6  3  4  1  3  5  1  6  4  3  3  4  4  3  8  2  2  1  5  3 
48 49 50 
 3  3  1 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0388  0.3692  0.6290  1.0000 10.0000 
[1] "event indicator table: "

   0    1 
2010 1436 
[1] "treatment indicator table: "

   0    1 
1228 2218 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1738
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 87"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1708
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 59"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 193.686 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.540 0.112 
 2 mu         0.1   0.2 0.709 0.156 
 3 mu         0.1   0.3 0.813 0.160 
 4 mu         0.1   0.4 0.864 0.168 
 5 mu         0.1   0.5 0.916 0.179 
 6 mu         0.2   0.1 0.378 0.0581
 7 mu         0.2   0.2 0.470 0.0700
 8 mu         0.2   0.3 0.528 0.0596
 9 mu         0.2   0.4 0.561 0.0496
10 mu         0.2   0.5 0.588 0.0508
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.43         0.416 0.0000771     18.3 
 2 mu         0.2      1.00         0.901 0.0401         2.51
 3 mu         0.3      1.00         1.01  0.267          1.86
 4 mu         0.4      1.02         1.02  0.717          1.52
 5 mu         0.5      1.01         1.01  0.633          1.37
 6 mu         0.6      0.988        0.988 0.726          1.25
 7 mu         0.7      0.991        0.975 0.776          1.27
 8 mu         0.8      1.00         0.998 0.653          1.31
 9 mu         0.9      0.991        1.01  0.214          1.55
10 mu_1       0.1      1.23         0.556 0.000258      12.2 
11 mu_1       0.2      0.982        0.925 0.0728         2.35
12 mu_1       0.3      1.01         1.01  0.278          1.92
13 mu_1       0.4      1.02         1.01  0.684          1.42
14 mu_1       0.5      1.00         0.997 0.653          1.33
15 mu_1       0.6      0.987        0.989 0.723          1.25
16 mu_1       0.7      0.993        0.977 0.772          1.27
17 mu_1       0.8      1.00         0.992 0.655          1.31
18 mu_1       0.9      0.991        1.01  0.198          1.58
19 mu_0       0.1      1.45         0.402 0.0000570     19.0 
20 mu_0       0.2      1.01         0.883 0.0319         2.62
21 mu_0       0.3      1.00         1.01  0.251          1.84
22 mu_0       0.4      1.02         1.00  0.676          1.59
23 mu_0       0.5      1.01         1.01  0.612          1.40
24 mu_0       0.6      0.990        0.990 0.722          1.26
25 mu_0       0.7      0.987        0.973 0.773          1.27
26 mu_0       0.8      1.00         1.01  0.644          1.30
27 mu_0       0.9      0.991        0.968 0.359          1.51
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      8.19      7.78e-14  1.84e-35    685.  
 2 mu         0.2      2.35      8.21e- 8  7.98e-24    125.  
 3 mu         0.3      0.660     2.54e- 4  4.50e-17     10.5 
 4 mu         0.4      0.946     2.36e- 2  2.47e-12      7.68
 5 mu         0.5      1.14      3.24e- 1  1.03e- 8      5.93
 6 mu         0.6      1.16      9.11e- 1  3.67e- 8      4.96
 7 mu         0.7      1.21      9.11e- 1  1.22e-12      8.52
 8 mu         0.8      1.04      3.87e- 1  4.22e-19      5.54
 9 mu         0.9      1.03      5.00e- 3  2.46e-30     12.5 
10 mu_1       0.1      8.34      5.30e-13  1.75e-34    652.  
11 mu_1       0.2      1.45      2.87e- 7  3.79e-23     66.7 
12 mu_1       0.3      0.676     5.28e- 4  1.43e-16     10.1 
13 mu_1       0.4      0.996     3.37e- 2  5.87e-12      7.54
14 mu_1       0.5      1.15      4.16e- 1  1.96e- 8      5.45
15 mu_1       0.6      1.17      8.39e- 1  5.83e- 9      4.72
16 mu_1       0.7      1.21      8.82e- 1  1.66e-13      8.52
17 mu_1       0.8      1.04      3.10e- 1  5.03e-20      5.96
18 mu_1       0.9      1.04      3.92e- 3  2.60e-31     13.4 
19 mu_0       0.1      8.17      2.75e-14  0           688.  
20 mu_0       0.2      2.58      3.10e- 8  0           141.  
21 mu_0       0.3      0.653     1.32e- 4  0            12.9 
22 mu_0       0.4      0.912     1.38e- 2  0             8.18
23 mu_0       0.5      1.13      2.13e- 1  0             6.40
24 mu_0       0.6      1.15      8.12e- 1  0             5.31
25 mu_0       0.7      1.22      7.52e- 1  0             8.52
26 mu_0       0.8      1.07      4.89e- 1  0             4.90
27 mu_0       0.9      0.951     1.45e- 2  0             9.26
[1] "Total run time was 196.871 seconds"
