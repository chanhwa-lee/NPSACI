
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3354"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 46 
 4  5  2  5  2  8  4  3  1  2  4  5  1  4  3  3  3  5  1  6  3  3  4  6  3  1 
47 48 49 50 
 4  2  1  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02831 0.29941 0.58274 0.98863 5.08946 
[1] "event indicator table: "

   0    1 
1973 1381 
[1] "treatment indicator table: "

   0    1 
1285 2069 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1681
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1673
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 244.568 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.283 0.0337
 2 mu         0.1   0.2 0.403 0.0607
 3 mu         0.1   0.3 0.456 0.0518
 4 mu         0.1   0.4 0.547 0.0876
 5 mu         0.1   0.5 0.598 0.119 
 6 mu         0.2   0.1 0.342 0.0299
 7 mu         0.2   0.2 0.475 0.0548
 8 mu         0.2   0.3 0.515 0.0438
 9 mu         0.2   0.4 0.595 0.0552
10 mu         0.2   0.5 0.629 0.0605
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.767        0.643 0.0000584      3.80
 2 mu         0.2      0.991        0.868 0.0240         4.19
 3 mu         0.3      1.01         0.964 0.269          1.94
 4 mu         0.4      1.01         1.02  0.597          1.43
 5 mu         0.5      1.02         1.03  0.674          1.35
 6 mu         0.6      1.01         1.00  0.737          1.32
 7 mu         0.7      0.997        0.992 0.635          1.42
 8 mu         0.8      0.978        0.975 0.517          1.45
 9 mu         0.9      0.994        0.958 0.0879         1.85
10 mu_1       0.1      0.828        0.773 0.000184       3.00
11 mu_1       0.2      1.03         0.908 0.0402         4.11
12 mu_1       0.3      1.01         0.980 0.339          1.80
13 mu_1       0.4      1.02         1.02  0.614          1.48
14 mu_1       0.5      1.02         1.03  0.679          1.34
15 mu_1       0.6      1.00         0.992 0.728          1.34
16 mu_1       0.7      0.995        0.999 0.624          1.46
17 mu_1       0.8      0.978        0.968 0.512          1.43
18 mu_1       0.9      0.994        0.953 0.0770         1.87
19 mu_0       0.1      0.760        0.619 0.0000445      3.89
20 mu_0       0.2      0.982        0.861 0.0199         4.21
21 mu_0       0.3      1.00         0.962 0.239          2.00
22 mu_0       0.4      1.01         1.02  0.586          1.42
23 mu_0       0.5      1.02         1.03  0.669          1.41
24 mu_0       0.6      1.01         1.01  0.749          1.30
25 mu_0       0.7      1.00         0.994 0.660          1.33
26 mu_0       0.8      0.980        0.976 0.535          1.57
27 mu_0       0.9      0.989        0.959 0.186          1.68
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      6.68      8.94e-13  2.69e-37    609.  
 2 mu         0.2      1.77      4.65e- 7  1.47e-24    130.  
 3 mu         0.3      1.00      4.96e- 4  3.23e-17     15.4 
 4 mu         0.4      1.15      3.32e- 2  4.10e-12     14.3 
 5 mu         0.5      1.17      2.81e- 1  2.91e- 8     10.2 
 6 mu         0.6      1.15      7.00e- 1  5.79e- 6      7.29
 7 mu         0.7      1.21      8.34e- 1  1.20e- 8      6.77
 8 mu         0.8      1.22      2.37e- 1  1.84e-12     10.6 
 9 mu         0.9      1.94      8.55e- 4  4.93e-19     69.9 
10 mu_1       0.1      3.39      5.75e-12  2.46e-36    305.  
11 mu_1       0.2      0.849     1.53e- 6  6.75e-24     32.5 
12 mu_1       0.3      0.963     1.20e- 3  9.84e-17     10.4 
13 mu_1       0.4      1.16      5.65e- 2  9.39e-12     15.2 
14 mu_1       0.5      1.15      2.96e- 1  5.32e- 8      8.66
15 mu_1       0.6      1.15      6.43e- 1  4.19e- 7      6.72
16 mu_1       0.7      1.22      8.22e- 1  7.48e-10      6.99
17 mu_1       0.8      1.23      1.83e- 1  9.99e-14     12.5 
18 mu_1       0.9      1.99      6.28e- 4  2.38e-20     74.3 
19 mu_0       0.1      7.04      3.05e-13  2.54e-38    643.  
20 mu_0       0.2      2.00      1.86e- 7  1.57e-25    154.  
21 mu_0       0.3      1.02      2.29e- 4  3.92e-18     20.9 
22 mu_0       0.4      1.14      2.18e- 2  5.82e-13     13.8 
23 mu_0       0.5      1.19      2.74e- 1  4.95e- 9     11.8 
24 mu_0       0.6      1.14      5.49e- 1  6.44e- 6      8.16
25 mu_0       0.7      1.18      6.40e- 1  3.84e- 8      6.24
26 mu_0       0.8      1.17      3.92e- 1  8.80e-12      5.91
27 mu_0       0.9      1.51      2.90e- 3  4.72e-18     32.0 
[1] "Total run time was 249.536 seconds"
