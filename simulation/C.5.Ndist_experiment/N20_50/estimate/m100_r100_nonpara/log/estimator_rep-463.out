
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3524"
[1] "cluster size dist'n: "

20 21 22 23 25 26 27 28 29 30 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 
 3  3  4  8  2  8  3  1  4  1  5  4  3  2  5  1  4  3  1  1  3  2  5  1  3  5 
48 49 50 
 5  5  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02335 0.30505 0.56247 0.96851 5.00000 
[1] "event indicator table: "

   0    1 
2043 1481 
[1] "treatment indicator table: "

   0    1 
1352 2172 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1792
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1732
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 312.465 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.423 0.0484
 2 mu         0.1   0.2 0.550 0.0966
 3 mu         0.1   0.3 0.647 0.130 
 4 mu         0.1   0.4 0.722 0.148 
 5 mu         0.1   0.5 0.719 0.126 
 6 mu         0.2   0.1 0.369 0.0383
 7 mu         0.2   0.2 0.451 0.0445
 8 mu         0.2   0.3 0.521 0.0446
 9 mu         0.2   0.4 0.578 0.0465
10 mu         0.2   0.5 0.598 0.0508
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.968        0.870    0.0474      4.15
 2 mu         0.2      1.03         1.00     0.179       2.31
 3 mu         0.3      1.02         0.991    0.228       1.90
 4 mu         0.4      0.978        0.994    0.520       1.53
 5 mu         0.5      0.980        0.982    0.718       1.38
 6 mu         0.6      1.01         0.989    0.719       1.34
 7 mu         0.7      1.01         1.01     0.735       1.34
 8 mu         0.8      1.02         1.01     0.641       1.42
 9 mu         0.9      1.02         0.980    0.512       2.00
10 mu_1       0.1      1.00         0.873    0.104       3.00
11 mu_1       0.2      1.03         0.999    0.113       2.12
12 mu_1       0.3      1.01         0.985    0.292       1.90
13 mu_1       0.4      0.975        0.987    0.589       1.52
14 mu_1       0.5      0.985        0.973    0.731       1.39
15 mu_1       0.6      1.01         0.984    0.698       1.32
16 mu_1       0.7      1.01         1.02     0.696       1.35
17 mu_1       0.8      1.02         1.00     0.660       1.41
18 mu_1       0.9      1.02         0.981    0.505       2.03
19 mu_0       0.1      0.964        0.853    0.0410      4.28
20 mu_0       0.2      1.03         1.00     0.196       2.36
21 mu_0       0.3      1.02         0.983    0.200       1.89
22 mu_0       0.4      0.981        0.990    0.473       1.54
23 mu_0       0.5      0.975        0.972    0.705       1.38
24 mu_0       0.6      1.00         0.980    0.735       1.39
25 mu_0       0.7      1.01         0.998    0.744       1.36
26 mu_0       0.8      1.02         1.01     0.567       1.44
27 mu_0       0.9      0.997        0.993    0.543       1.73
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.399     5.40e-13  2.25e-36     36.1 
 2 mu         0.2      0.730     2.87e- 7  1.95e-23     17.0 
 3 mu         0.3      1.22      5.12e- 4  4.90e-16     11.7 
 4 mu         0.4      1.37      4.76e- 2  6.11e-11     14.1 
 5 mu         0.5      1.28      1.98e- 1  1.50e- 7     18.4 
 6 mu         0.6      0.952     3.54e- 1  6.97e- 9      7.87
 7 mu         0.7      0.933     3.35e- 1  9.53e-13      6.17
 8 mu         0.8      1.12      3.04e- 1  2.89e-18      6.97
 9 mu         0.9      1.10      9.49e- 4  8.51e-28     13.4 
10 mu_1       0.1      0.304     3.50e-12  1.98e-35     21.2 
11 mu_1       0.2      0.908     9.25e- 7  8.58e-23     18.8 
12 mu_1       0.3      1.27      1.16e- 3  1.44e-15     10.7 
13 mu_1       0.4      1.37      7.89e- 2  1.34e-10     14.6 
14 mu_1       0.5      1.24      2.30e- 1  2.90e- 7     17.3 
15 mu_1       0.6      0.934     3.17e- 1  6.84e-10      7.09
16 mu_1       0.7      0.948     3.23e- 1  8.01e-14      6.22
17 mu_1       0.8      1.13      2.62e- 1  2.12e-19      7.05
18 mu_1       0.9      1.09      6.88e- 4  5.56e-29     13.5 
19 mu_0       0.1      0.409     2.10e-13  0            37.7 
20 mu_0       0.2      0.686     1.28e- 7  0            16.5 
21 mu_0       0.3      1.20      2.81e- 4  0            12.2 
22 mu_0       0.4      1.37      2.68e- 2  0            14.0 
23 mu_0       0.5      1.31      1.43e- 1  0            19.6 
24 mu_0       0.6      0.980     3.54e- 1  0             9.04
25 mu_0       0.7      0.899     2.40e- 1  0             6.05
26 mu_0       0.8      1.07      2.74e- 1  0             6.68
27 mu_0       0.9      1.11      2.37e- 3  0            12.5 
[1] "Total run time was 316.322 seconds"
