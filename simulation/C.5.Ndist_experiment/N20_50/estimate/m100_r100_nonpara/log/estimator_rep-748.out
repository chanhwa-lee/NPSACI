
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3347"
[1] "cluster size dist'n: "

21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 
 7  5  5  2  4  2  3  2  7  5  3  2  2  2  6  4  2  7  3  7  1  3  2  1  6  2 
47 48 49 50 
 1  1  1  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.01999 0.32807 0.59323 1.00000 5.00000 
[1] "event indicator table: "

   0    1 
1960 1387 
[1] "treatment indicator table: "

   0    1 
1214 2133 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1664
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 29"
[1] "     Cluster: 33"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1683
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 79"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 197.368 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.514 0.0649
 2 mu         0.1   0.2 0.550 0.0570
 3 mu         0.1   0.3 0.564 0.0711
 4 mu         0.1   0.4 0.627 0.0653
 5 mu         0.1   0.5 0.633 0.0884
 6 mu         0.2   0.1 0.457 0.0364
 7 mu         0.2   0.2 0.499 0.0310
 8 mu         0.2   0.3 0.526 0.0493
 9 mu         0.2   0.4 0.594 0.0390
10 mu         0.2   0.5 0.615 0.0607
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.08         0.819  0.000288      4.83
 2 mu         0.2      1.07         0.978  0.0556        4.58
 3 mu         0.3      1.04         1.05   0.321         1.78
 4 mu         0.4      1.01         0.998  0.539         1.56
 5 mu         0.5      1.01         1.01   0.493         1.43
 6 mu         0.6      1.00         1.01   0.574         1.47
 7 mu         0.7      0.993        0.975  0.664         1.26
 8 mu         0.8      0.994        0.988  0.674         1.54
 9 mu         0.9      0.993        0.962  0.403         1.72
10 mu_1       0.1      1.11         0.959  0.000883      6.40
11 mu_1       0.2      1.07         0.986  0.111         3.74
12 mu_1       0.3      1.03         1.01   0.333         1.81
13 mu_1       0.4      1.01         0.999  0.537         1.55
14 mu_1       0.5      1.01         1.00   0.484         1.41
15 mu_1       0.6      0.999        0.988  0.598         1.48
16 mu_1       0.7      0.992        0.977  0.663         1.25
17 mu_1       0.8      0.994        0.989  0.666         1.56
18 mu_1       0.9      0.993        0.949  0.404         1.73
19 mu_0       0.1      1.08         0.795  0.000222      4.65
20 mu_0       0.2      1.07         0.969  0.0417        4.79
21 mu_0       0.3      1.04         1.05   0.313         1.84
22 mu_0       0.4      1.01         0.980  0.521         1.57
23 mu_0       0.5      1.01         1.01   0.501         1.46
24 mu_0       0.6      1.00         1.02   0.538         1.47
25 mu_0       0.7      0.994        0.965  0.666         1.31
26 mu_0       0.8      0.994        0.984  0.669         1.48
27 mu_0       0.9      0.987        0.960  0.388         1.65
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      4.53      1.57e-14  1.91e-36    258.  
 2 mu         0.2      1.65      3.84e- 8  9.30e-24     67.8 
 3 mu         0.3      1.12      1.76e- 4  1.78e-16     22.1 
 4 mu         0.4      1.08      2.19e- 2  1.94e-11     16.2 
 5 mu         0.5      0.855     2.12e- 1  1.15e- 7      5.82
 6 mu         0.6      0.990     3.68e- 1  3.41e- 6      6.59
 7 mu         0.7      1.10      6.30e- 1  1.29e- 9      5.94
 8 mu         0.8      1.32      4.79e- 1  1.51e-14     15.9 
 9 mu         0.9      1.46      4.29e- 3  9.00e-24     18.9 
10 mu_1       0.1      4.19      1.07e-13  1.71e-35    242.  
11 mu_1       0.2      1.07      1.18e- 7  4.17e-23     31.8 
12 mu_1       0.3      1.16      3.68e- 4  5.32e-16     24.5 
13 mu_1       0.4      1.04      2.88e- 2  4.35e-11     13.5 
14 mu_1       0.5      0.859     2.70e- 1  2.05e- 7      5.29
15 mu_1       0.6      1.01      3.75e- 1  5.33e- 7      7.03
16 mu_1       0.7      1.10      7.10e- 1  1.73e-10      5.66
17 mu_1       0.8      1.35      4.50e- 1  1.77e-15     17.1 
18 mu_1       0.9      1.44      3.19e- 3  2.45e-24     18.1 
19 mu_0       0.1      4.57      5.73e-15  2.21e-37    260.  
20 mu_0       0.2      1.80      1.84e- 8  1.21e-24     76.9 
21 mu_0       0.3      1.10      8.67e- 5  2.65e-17     21.0 
22 mu_0       0.4      1.10      1.33e- 2  3.37e-12     18.0 
23 mu_0       0.5      0.851     1.63e- 1  2.39e- 8      6.35
24 mu_0       0.6      0.964     2.68e- 1  7.73e- 6      5.94
25 mu_0       0.7      1.08      4.67e- 1  3.90e- 9      7.00
26 mu_0       0.8      1.21      3.65e- 1  6.83e-14     11.0 
27 mu_0       0.9      1.57      1.43e- 2  6.80e-23     26.0 
[1] "Total run time was 200.888 seconds"
