
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3354"
[1] "cluster size dist'n: "

20 21 22 23 25 26 27 28 29 30 31 32 33 34 35 37 38 39 40 42 43 44 45 46 47 48 
 7 11  6  3  2  1  5  2  3  4  1  3  5  1  2  5  1  4  1  5  4  3  5  6  5  2 
49 
 3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03754 0.35012 0.61174 1.00000 5.00000 
[1] "event indicator table: "

   0    1 
1908 1446 
[1] "treatment indicator table: "

   0    1 
1314 2040 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1579
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1775
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 195.254 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.429 0.0862
 2 mu         0.1   0.2 0.480 0.106 
 3 mu         0.1   0.3 0.582 0.119 
 4 mu         0.1   0.4 0.687 0.130 
 5 mu         0.1   0.5 0.752 0.152 
 6 mu         0.2   0.1 0.351 0.0400
 7 mu         0.2   0.2 0.404 0.0520
 8 mu         0.2   0.3 0.494 0.0541
 9 mu         0.2   0.4 0.583 0.0587
10 mu         0.2   0.5 0.630 0.0671
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      1.01         0.413 0.0000125      11.1 
 2 mu         0.2      0.979        0.876 0.0288          2.94
 3 mu         0.3      1.02         0.988 0.467           1.63
 4 mu         0.4      1.02         1.02  0.626           1.35
 5 mu         0.5      1.01         1.00  0.738           1.39
 6 mu         0.6      0.991        0.988 0.739           1.31
 7 mu         0.7      0.986        0.984 0.774           1.34
 8 mu         0.8      0.992        1.00  0.589           1.38
 9 mu         0.9      1.00         0.963 0.268           2.22
10 mu_1       0.1      1.03         0.694 0.0000445       7.14
11 mu_1       0.2      0.997        0.891 0.0518          2.78
12 mu_1       0.3      1.02         1.02  0.497           1.57
13 mu_1       0.4      1.02         1.03  0.631           1.33
14 mu_1       0.5      1.01         0.996 0.731           1.41
15 mu_1       0.6      0.989        0.990 0.750           1.28
16 mu_1       0.7      0.986        0.988 0.749           1.34
17 mu_1       0.8      0.993        1.00  0.569           1.39
18 mu_1       0.9      1.01         0.962 0.248           2.29
19 mu_0       0.1      1.01         0.380 0.00000892     11.6 
20 mu_0       0.2      0.975        0.855 0.0231          2.98
21 mu_0       0.3      1.02         0.987 0.428           1.70
22 mu_0       0.4      1.02         1.02  0.622           1.36
23 mu_0       0.5      1.01         1.01  0.746           1.38
24 mu_0       0.6      0.994        0.990 0.722           1.36
25 mu_0       0.7      0.986        0.979 0.791           1.32
26 mu_0       0.8      0.991        0.981 0.631           1.37
27 mu_0       0.9      0.974        0.982 0.443           1.73
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.194     7.32e-11  6.41e-34     12.9 
 2 mu         0.2      0.854     5.79e- 6  2.47e-22     24.4 
 3 mu         0.3      1.29      4.46e- 3  1.22e-15     38.1 
 4 mu         0.4      1.15      1.06e- 1  5.74e-11     11.0 
 5 mu         0.5      1.23      3.70e- 1  2.00e- 7     14.9 
 6 mu         0.6      1.09      8.67e- 1  1.25e- 4      5.43
 7 mu         0.7      1.17      9.02e- 1  5.14e- 7      4.66
 8 mu         0.8      1.29      1.24e- 1  4.17e-12      8.32
 9 mu         0.9      1.34      2.90e- 4  1.12e-21     28.9 
10 mu_1       0.1      0.365     4.17e-10  5.95e-33     22.2 
11 mu_1       0.2      1.01      1.90e- 5  1.15e-21     25.4 
12 mu_1       0.3      1.26      9.41e- 3  3.78e-15     35.1 
13 mu_1       0.4      1.18      1.65e- 1  1.33e-10     12.8 
14 mu_1       0.5      1.22      4.35e- 1  3.71e- 7     13.9 
15 mu_1       0.6      1.08      8.34e- 1  1.01e- 4      5.27
16 mu_1       0.7      1.19      8.22e- 1  1.88e- 7      4.78
17 mu_1       0.8      1.30      9.97e- 2  1.44e-12      8.78
18 mu_1       0.9      1.33      1.88e- 4  3.45e-22     29.1 
19 mu_0       0.1      0.175     2.56e-11  0            11.8 
20 mu_0       0.2      0.815     2.86e- 6  0            25.2 
21 mu_0       0.3      1.30      2.23e- 3  0            39.4 
22 mu_0       0.4      1.13      6.65e- 2  0            10.2 
23 mu_0       0.5      1.23      3.78e- 1  0            15.9 
24 mu_0       0.6      1.10      8.18e- 1  0             5.84
25 mu_0       0.7      1.13      7.67e- 1  0             4.52
26 mu_0       0.8      1.29      2.20e- 1  0             6.47
27 mu_0       0.9      1.39      9.62e- 4  0            26.9 
[1] "Total run time was 198.535 seconds"
