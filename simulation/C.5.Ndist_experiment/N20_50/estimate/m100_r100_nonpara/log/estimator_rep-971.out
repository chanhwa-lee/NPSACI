
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3503"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 45 46 
 6  1  2  3  5  4  4  5  1  1  3  3  2  6  3  3  4  1  2  3  4  2  6  4  5  3 
47 48 49 50 
 2  7  2  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04813 0.39953 0.63925 1.00000 7.00000 
[1] "event indicator table: "

   0    1 
2082 1421 
[1] "treatment indicator table: "

   0    1 
1291 2212 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1806
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1697
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 79"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 199.812 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.410 0.0767
 2 mu         0.1   0.2 0.606 0.111 
 3 mu         0.1   0.3 0.653 0.110 
 4 mu         0.1   0.4 0.674 0.112 
 5 mu         0.1   0.5 0.686 0.111 
 6 mu         0.2   0.1 0.297 0.0587
 7 mu         0.2   0.2 0.427 0.0566
 8 mu         0.2   0.3 0.479 0.0657
 9 mu         0.2   0.4 0.508 0.0670
10 mu         0.2   0.5 0.529 0.0716
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.29         0.669  0.000169     14.2 
 2 mu         0.2      1.09         1.03   0.0587        2.91
 3 mu         0.3      1.06         1.04   0.456         1.98
 4 mu         0.4      1.01         1.01   0.475         1.53
 5 mu         0.5      0.997        0.986  0.637         1.41
 6 mu         0.6      1.01         1.01   0.735         1.32
 7 mu         0.7      1.02         1.01   0.759         1.43
 8 mu         0.8      0.996        0.998  0.725         1.49
 9 mu         0.9      0.982        0.980  0.333         1.79
10 mu_1       0.1      1.12         0.850  0.000485      7.30
11 mu_1       0.2      1.08         1.04   0.0895        2.57
12 mu_1       0.3      1.05         1.05   0.402         1.88
13 mu_1       0.4      1.01         1.02   0.512         1.51
14 mu_1       0.5      0.998        0.986  0.661         1.37
15 mu_1       0.6      1.01         1.02   0.717         1.33
16 mu_1       0.7      1.01         1.00   0.751         1.43
17 mu_1       0.8      0.994        0.992  0.714         1.50
18 mu_1       0.9      0.981        0.977  0.338         1.81
19 mu_0       0.1      1.31         0.632  0.000134     15.2 
20 mu_0       0.2      1.10         1.04   0.0510        3.00
21 mu_0       0.3      1.06         1.03   0.405         2.05
22 mu_0       0.4      1.02         1.00   0.450         1.53
23 mu_0       0.5      0.997        0.986  0.614         1.45
24 mu_0       0.6      1.01         1.01   0.749         1.33
25 mu_0       0.7      1.02         1.03   0.723         1.43
26 mu_0       0.8      1.00         0.990  0.725         1.45
27 mu_0       0.9      0.988        0.959  0.288         1.61
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.0764     2.93e-13  1.27e-37      5.74
 2 mu         0.2     0.421      4.93e- 7  1.40e-25      7.93
 3 mu         0.3     1.04       6.36e- 4  1.55e-18     19.2 
 4 mu         0.4     1.03       2.70e- 2  1.54e-13     11.8 
 5 mu         0.5     0.955      3.17e- 1  1.16e- 9      4.12
 6 mu         0.6     1.10       5.80e- 1  1.70e- 6      6.48
 7 mu         0.7     1.24       8.57e- 1  5.48e- 9      8.11
 8 mu         0.8     1.14       2.73e- 1  2.82e-14      6.12
 9 mu         0.9     1.34       1.54e- 3  9.47e-24     22.0 
10 mu_1       0.1     0.135      1.80e-12  1.27e-36      8.61
11 mu_1       0.2     0.558      1.55e- 6  6.99e-25      8.50
12 mu_1       0.3     1.11       1.42e- 3  5.15e-18     19.6 
13 mu_1       0.4     0.996      4.58e- 2  3.84e-13      9.86
14 mu_1       0.5     0.963      3.41e- 1  2.31e- 9      4.46
15 mu_1       0.6     1.11       6.13e- 1  2.83e- 6      6.55
16 mu_1       0.7     1.24       8.83e- 1  1.68e- 9      8.49
17 mu_1       0.8     1.14       2.17e- 1  7.55e-15      6.12
18 mu_1       0.9     1.37       1.03e- 3  2.25e-24     22.7 
19 mu_0       0.1     0.0699     1.25e-13  0             5.42
20 mu_0       0.2     0.386      2.29e- 7  0             7.79
21 mu_0       0.3     1.01       2.86e- 4  0            19.1 
22 mu_0       0.4     1.05       1.46e- 2  0            13.1 
23 mu_0       0.5     0.947      2.39e- 1  0             4.16
24 mu_0       0.6     1.08       5.22e- 1  0             6.36
25 mu_0       0.7     1.22       7.50e- 1  0             7.21
26 mu_0       0.8     1.16       3.73e- 1  0             6.83
27 mu_0       0.9     1.06       2.99e- 3  0            16.1 
[1] "Total run time was 202.956 seconds"
