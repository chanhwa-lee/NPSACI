
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3531"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 2  1  7  1  2  2  5  3  2  3  5  2  3  7  5  3  2  4  3  4  4  2  1  3  3  3 
46 47 48 49 50 
 4  7  2  2  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0405  0.3411  0.6119  1.0000  5.9355 
[1] "event indicator table: "

   0    1 
2091 1440 
[1] "treatment indicator table: "

   0    1 
1257 2274 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1857
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1674
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 309.471 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.436 0.128 
 2 mu         0.1   0.2 0.570 0.175 
 3 mu         0.1   0.3 0.693 0.187 
 4 mu         0.1   0.4 0.794 0.211 
 5 mu         0.1   0.5 0.846 0.222 
 6 mu         0.2   0.1 0.300 0.0500
 7 mu         0.2   0.2 0.389 0.0703
 8 mu         0.2   0.3 0.486 0.0613
 9 mu         0.2   0.4 0.564 0.0728
10 mu         0.2   0.5 0.596 0.0715
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      1.43         0.245 0.000000113      36.4 
 2 mu         0.2      1.03         0.799 0.00237           7.59
 3 mu         0.3      0.967        0.956 0.152             2.61
 4 mu         0.4      1.01         0.988 0.531             1.75
 5 mu         0.5      1.03         1.02  0.634             1.48
 6 mu         0.6      1.01         1.01  0.782             1.33
 7 mu         0.7      0.992        0.988 0.758             1.21
 8 mu         0.8      0.995        0.984 0.688             1.35
 9 mu         0.9      0.999        0.947 0.449             2.16
10 mu_1       0.1      1.39         0.423 0.000000456      37.9 
11 mu_1       0.2      0.980        0.912 0.00484           4.81
12 mu_1       0.3      0.978        0.974 0.211             2.24
13 mu_1       0.4      1.02         0.991 0.582             1.71
14 mu_1       0.5      1.03         1.02  0.655             1.47
15 mu_1       0.6      1.01         1.01  0.773             1.33
16 mu_1       0.7      0.992        0.993 0.753             1.23
17 mu_1       0.8      0.995        0.985 0.679             1.34
18 mu_1       0.9      0.999        0.946 0.434             2.17
19 mu_0       0.1      1.43         0.218 0.0000000743     36.2 
20 mu_0       0.2      1.04         0.804 0.00175           8.44
21 mu_0       0.3      0.962        0.948 0.126             2.77
22 mu_0       0.4      1.01         0.970 0.480             1.78
23 mu_0       0.5      1.03         1.02  0.613             1.49
24 mu_0       0.6      1.01         1.01  0.755             1.32
25 mu_0       0.7      0.992        0.985 0.769             1.27
26 mu_0       0.8      0.994        0.992 0.724             1.38
27 mu_0       0.9      1.00         0.972 0.443             2.12
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.0361     1.75e-14  1.49e-32      3.07
 2 mu         0.2     0.979      2.13e- 8  1.43e-20     59.0 
 3 mu         0.3     2.14       7.31e- 5  9.34e-14     80.1 
 4 mu         0.4     1.64       1.48e- 2  2.06e- 9     26.9 
 5 mu         0.5     1.19       3.02e- 1  2.35e- 6     13.9 
 6 mu         0.6     1.06       6.05e- 1  5.92e- 4      4.20
 7 mu         0.7     1.08       7.36e- 1  5.32e- 7      5.37
 8 mu         0.8     1.27       2.97e- 1  2.71e-12      7.06
 9 mu         0.9     1.10       1.62e- 3  4.61e-22     14.0 
10 mu_1       0.1     0.0982     1.20e-13  1.27e-31      8.20
11 mu_1       0.2     1.38       7.51e- 8  6.12e-20     78.6 
12 mu_1       0.3     2.17       1.74e- 4  2.66e-13     71.2 
13 mu_1       0.4     1.51       2.37e- 2  4.73e- 9     18.0 
14 mu_1       0.5     1.16       3.49e- 1  4.32e- 6     13.2 
15 mu_1       0.6     1.05       5.57e- 1  6.21e- 4      3.82
16 mu_1       0.7     1.10       7.07e- 1  2.28e- 7      5.63
17 mu_1       0.8     1.27       2.48e- 1  1.01e-12      6.86
18 mu_1       0.9     1.09       1.24e- 3  1.54e-22     13.9 
19 mu_0       0.1     0.0292     6.07e-15  0             2.51
20 mu_0       0.2     0.878      7.82e- 9  0            54.1 
21 mu_0       0.3     2.13       3.40e- 5  0            83.9 
22 mu_0       0.4     1.73       8.90e- 3  0            32.9 
23 mu_0       0.5     1.23       2.71e- 1  0            14.6 
24 mu_0       0.6     1.08       4.22e- 1  0             5.37
25 mu_0       0.7     1.05       7.89e- 1  0             4.78
26 mu_0       0.8     1.25       4.40e- 1  0             7.84
27 mu_0       0.9     1.18       4.51e- 3  0            14.7 
[1] "Total run time was 313.742 seconds"
