
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3436"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 43 44 45 46 
 2  7  2  2  7  2  3  3  6  1  1  3  2  7  5  4  3  3  6  1  3  2  3  4  1  3 
47 48 49 50 
 3  3  4  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03345 0.34998 0.59751 0.99737 6.00000 
[1] "event indicator table: "

   0    1 
2028 1408 
[1] "treatment indicator table: "

   0    1 
1282 2154 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1747
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1689
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 59"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 177.37 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.463 0.0788
 2 mu         0.1   0.2 0.614 0.102 
 3 mu         0.1   0.3 0.668 0.0918
 4 mu         0.1   0.4 0.738 0.119 
 5 mu         0.1   0.5 0.764 0.115 
 6 mu         0.2   0.1 0.350 0.0353
 7 mu         0.2   0.2 0.503 0.0332
 8 mu         0.2   0.3 0.573 0.0362
 9 mu         0.2   0.4 0.617 0.0384
10 mu         0.2   0.5 0.642 0.0398
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.14         0.683 0.0000738      7.08
 2 mu         0.2      1.11         1.05  0.0639         3.37
 3 mu         0.3      1.05         1.04  0.323          2.57
 4 mu         0.4      1.00         0.980 0.604          2.29
 5 mu         0.5      1.00         0.990 0.645          1.41
 6 mu         0.6      1.01         1.01  0.722          1.39
 7 mu         0.7      1.00         0.996 0.719          1.34
 8 mu         0.8      1.01         1.00  0.696          1.41
 9 mu         0.9      1.03         0.999 0.401          1.76
10 mu_1       0.1      1.17         1.02  0.000250       5.53
11 mu_1       0.2      1.08         1.05  0.103          2.87
12 mu_1       0.3      1.03         1.01  0.392          2.45
13 mu_1       0.4      0.999        0.977 0.585          2.20
14 mu_1       0.5      1.00         1.00  0.652          1.41
15 mu_1       0.6      1.02         1.01  0.698          1.38
16 mu_1       0.7      1.00         1.00  0.709          1.35
17 mu_1       0.8      1.01         1.00  0.686          1.44
18 mu_1       0.9      1.03         0.992 0.383          1.79
19 mu_0       0.1      1.14         0.654 0.0000542      7.66
20 mu_0       0.2      1.12         1.03  0.0542         3.52
21 mu_0       0.3      1.05         1.05  0.293          2.62
22 mu_0       0.4      1.01         0.990 0.568          2.34
23 mu_0       0.5      0.996        0.989 0.638          1.43
24 mu_0       0.6      1.01         1.01  0.751          1.40
25 mu_0       0.7      1.00         0.996 0.744          1.31
26 mu_0       0.8      1.01         0.996 0.734          1.37
27 mu_0       0.9      1.03         1.02  0.549          1.74
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.0783     5.56e-13  1.64e-44      5.33
 2 mu         0.2     0.805      5.30e- 7  4.11e-30     24.9 
 3 mu         0.3     1.66       3.54e- 4  1.02e-21     44.8 
 4 mu         0.4     1.76       2.33e- 2  8.67e-16     22.1 
 5 mu         0.5     1.33       3.26e- 1  3.24e-11     11.6 
 6 mu         0.6     1.12       7.65e- 1  1.64e- 7      4.97
 7 mu         0.7     1.20       6.39e- 1  6.86e-10      8.37
 8 mu         0.8     1.20       2.96e- 1  6.07e-16     10.1 
 9 mu         0.9     2.16       1.98e- 3  8.06e-27     40.7 
10 mu_1       0.1     0.163      4.42e-12  1.61e-43      9.87
11 mu_1       0.2     1.05       1.60e- 6  2.01e-29     34.2 
12 mu_1       0.3     1.75       8.78e- 4  3.33e-21     41.0 
13 mu_1       0.4     1.72       3.94e- 2  2.12e-15     20.1 
14 mu_1       0.5     1.27       3.41e- 1  6.35e-11      9.70
15 mu_1       0.6     1.13       7.73e- 1  2.68e- 7      4.64
16 mu_1       0.7     1.21       5.36e- 1  2.20e-10      8.40
17 mu_1       0.8     1.20       2.48e- 1  1.70e-16     10.3 
18 mu_1       0.9     2.22       1.41e- 3  2.01e-27     43.9 
19 mu_0       0.1     0.0688     1.34e-13  3.72e-46      4.82
20 mu_0       0.2     0.745      1.84e- 7  1.05e-31     22.5 
21 mu_0       0.3     1.62       1.24e- 4  2.97e-23     46.4 
22 mu_0       0.4     1.79       1.25e- 2  2.95e-17     23.5 
23 mu_0       0.5     1.39       2.55e- 1  1.32e-12     13.6 
24 mu_0       0.6     1.11       6.95e- 1  8.36e- 9      5.46
25 mu_0       0.7     1.18       7.48e- 1  1.77e- 9      8.30
26 mu_0       0.8     1.16       3.51e- 1  2.35e-15      9.43
27 mu_0       0.9     1.59       7.20e- 3  6.25e-26     20.0 
[1] "Total run time was 181.039 seconds"
