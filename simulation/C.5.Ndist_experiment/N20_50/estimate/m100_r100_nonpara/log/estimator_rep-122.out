
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3625"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 2  2  2  2  4  2  3  5  4  2  1  2  5  1  5  3  4  4  2  5  3  2  4  5  4  4 
46 47 48 49 50 
 2  6  5  4  1 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.06154 0.42501 0.66019 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
2150 1475 
[1] "treatment indicator table: "

   0    1 
1263 2362 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1743
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 14"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1882
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 201.629 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.275 0.0433
 2 mu         0.1   0.2 0.363 0.131 
 3 mu         0.1   0.3 0.462 0.183 
 4 mu         0.1   0.4 0.452 0.177 
 5 mu         0.1   0.5 0.510 0.177 
 6 mu         0.2   0.1 0.288 0.0335
 7 mu         0.2   0.2 0.389 0.119 
 8 mu         0.2   0.3 0.493 0.168 
 9 mu         0.2   0.4 0.490 0.161 
10 mu         0.2   0.5 0.550 0.161 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.867        0.423 0.0000464      5.21
 2 mu         0.2      0.960        0.968 0.0248         4.57
 3 mu         0.3      1.01         0.989 0.263          2.62
 4 mu         0.4      1.01         0.983 0.415          1.77
 5 mu         0.5      1.01         0.981 0.581          1.52
 6 mu         0.6      1.01         1.00  0.763          1.30
 7 mu         0.7      1.01         1.02  0.728          1.28
 8 mu         0.8      1.00         1.01  0.700          1.40
 9 mu         0.9      0.990        0.993 0.374          1.77
10 mu_1       0.1      0.866        0.698 0.000161       4.47
11 mu_1       0.2      0.987        0.944 0.0440         4.18
12 mu_1       0.3      1.01         0.986 0.331          2.10
13 mu_1       0.4      1.01         0.982 0.420          1.71
14 mu_1       0.5      1.01         0.985 0.621          1.51
15 mu_1       0.6      1.01         0.999 0.739          1.29
16 mu_1       0.7      1.01         1.01  0.739          1.28
17 mu_1       0.8      1.00         1.01  0.694          1.40
18 mu_1       0.9      0.989        0.995 0.361          1.76
19 mu_0       0.1      0.867        0.401 0.0000338      5.65
20 mu_0       0.2      0.953        0.933 0.0201         4.67
21 mu_0       0.3      1.02         0.986 0.234          2.84
22 mu_0       0.4      1.01         0.977 0.412          1.81
23 mu_0       0.5      1.01         0.986 0.542          1.53
24 mu_0       0.6      1.01         1.00  0.747          1.34
25 mu_0       0.7      1.01         1.03  0.681          1.30
26 mu_0       0.8      1.01         0.981 0.721          1.42
27 mu_0       0.9      0.999        0.981 0.496          1.79
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       2.61     1.41e-14  5.77e-41    258.  
 2 mu         0.2       1.59     2.32e- 8  9.02e-28    122.  
 3 mu         0.3       1.31     4.41e- 5  4.42e-20     21.3 
 4 mu         0.4       1.72     1.04e- 2  1.19e-14     18.8 
 5 mu         0.5       1.59     2.28e- 1  1.82e-10     27.2 
 6 mu         0.6       1.23     5.74e- 1  4.44e- 7     18.0 
 7 mu         0.7       1.25     5.93e- 1  3.14e- 7      9.70
 8 mu         0.8       1.33     4.67e- 1  2.78e-11      7.23
 9 mu         0.9       1.56     3.47e- 3  2.36e-18     26.1 
10 mu_1       0.1       2.95     1.11e-13  5.64e-40    287.  
11 mu_1       0.2       1.20     7.53e- 8  4.41e-27     67.9 
12 mu_1       0.3       1.37     1.03e- 4  1.44e-19     23.7 
13 mu_1       0.4       1.74     1.77e- 2  2.91e-14     17.4 
14 mu_1       0.5       1.53     2.85e- 1  3.56e-10     28.5 
15 mu_1       0.6       1.20     5.99e- 1  7.23e- 7     15.8 
16 mu_1       0.7       1.27     6.35e- 1  4.98e- 8      9.85
17 mu_1       0.8       1.34     4.77e- 1  3.86e-12      7.37
18 mu_1       0.9       1.57     2.53e- 3  2.91e-19     27.1 
19 mu_0       0.1       2.58     3.42e-15  1.42e-42    255.  
20 mu_0       0.2       1.69     1.02e- 8  2.50e-29    136.  
21 mu_0       0.3       1.29     2.25e- 5  1.40e-21     21.3 
22 mu_0       0.4       1.71     5.60e- 3  4.41e-16     19.7 
23 mu_0       0.5       1.65     1.45e- 1  8.09e-12     25.8 
24 mu_0       0.6       1.27     5.02e- 1  2.47e- 8     21.4 
25 mu_0       0.7       1.22     5.63e- 1  9.29e- 7      9.34
26 mu_0       0.8       1.32     4.98e- 1  1.24e-10      6.66
27 mu_0       0.9       1.47     1.19e- 2  2.10e-17     17.4 
[1] "Total run time was 204.844 seconds"
