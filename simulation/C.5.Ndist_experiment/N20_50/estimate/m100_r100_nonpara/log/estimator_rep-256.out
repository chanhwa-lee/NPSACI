
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3590"
[1] "cluster size dist'n: "

20 21 22 23 24 25 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 
 3  2  3  5  4  2  3  5  2  2  3  2  4  4  1  6  3  1  2  3  5  5  5  3  6  3 
47 48 49 50 
 3  5  2  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04165 0.36455 0.61249 1.00000 5.00000 
[1] "event indicator table: "

   0    1 
2070 1520 
[1] "treatment indicator table: "

   0    1 
1370 2220 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1818
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1772
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 243.8 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.449 0.0906
 2 mu         0.1   0.2 0.497 0.0687
 3 mu         0.1   0.3 0.606 0.109 
 4 mu         0.1   0.4 0.627 0.110 
 5 mu         0.1   0.5 0.646 0.105 
 6 mu         0.2   0.1 0.330 0.0430
 7 mu         0.2   0.2 0.408 0.0481
 8 mu         0.2   0.3 0.469 0.0472
 9 mu         0.2   0.4 0.498 0.0497
10 mu         0.2   0.5 0.516 0.0553
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.985        0.899   0.00133      6.28
 2 mu         0.2      0.937        0.971   0.113        1.74
 3 mu         0.3      0.970        0.961   0.340        1.50
 4 mu         0.4      0.986        0.999   0.479        1.40
 5 mu         0.5      1.00         1.01    0.532        1.36
 6 mu         0.6      1.01         1.01    0.698        1.26
 7 mu         0.7      1.01         1.03    0.713        1.33
 8 mu         0.8      1.02         1.02    0.668        1.52
 9 mu         0.9      1.00         0.973   0.473        1.66
10 mu_1       0.1      0.936        0.857   0.00378      2.84
11 mu_1       0.2      0.947        0.960   0.152        1.71
12 mu_1       0.3      0.975        0.980   0.383        1.50
13 mu_1       0.4      0.988        1.01    0.482        1.34
14 mu_1       0.5      1.00         1.01    0.577        1.40
15 mu_1       0.6      1.02         1.01    0.705        1.26
16 mu_1       0.7      1.01         1.03    0.710        1.32
17 mu_1       0.8      1.02         1.01    0.656        1.54
18 mu_1       0.9      1.00         0.977   0.474        1.67
19 mu_0       0.1      0.991        0.904   0.00105      6.67
20 mu_0       0.2      0.935        0.956   0.103        1.77
21 mu_0       0.3      0.968        0.954   0.321        1.51
22 mu_0       0.4      0.984        0.988   0.455        1.44
23 mu_0       0.5      1.00         0.994   0.486        1.33
24 mu_0       0.6      1.01         1.02    0.688        1.29
25 mu_0       0.7      1.01         1.02    0.721        1.35
26 mu_0       0.8      1.02         1.03    0.682        1.45
27 mu_0       0.9      1.01         0.981   0.461        1.55
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.446     5.07e-15  6.63e-37     30.3 
 2 mu         0.2      0.982     1.32e- 8  1.15e-24     24.4 
 3 mu         0.3      0.792     9.53e- 5  1.46e-17      7.90
 4 mu         0.4      0.974     1.56e- 2  1.43e-12      8.92
 5 mu         0.5      0.883     1.71e- 1  9.31e- 9      5.67
 6 mu         0.6      0.947     5.38e- 1  2.19e- 8      4.95
 7 mu         0.7      1.32      8.76e- 1  1.13e-12      5.45
 8 mu         0.8      1.17      3.72e- 1  6.72e-19      5.26
 9 mu         0.9      1.19      1.23e- 3  8.81e-30     13.1 
10 mu_1       0.1      0.644     3.35e-14  6.32e-36     36.0 
11 mu_1       0.2      1.00      4.38e- 8  5.49e-24     24.4 
12 mu_1       0.3      0.794     2.09e- 4  4.65e-17      5.85
13 mu_1       0.4      0.991     2.52e- 2  3.40e-12      8.92
14 mu_1       0.5      0.867     2.07e- 1  1.78e- 8      5.67
15 mu_1       0.6      0.988     6.14e- 1  4.35e- 9      5.19
16 mu_1       0.7      1.34      8.63e- 1  1.92e-13      5.68
17 mu_1       0.8      1.15      3.21e- 1  1.00e-19      5.30
18 mu_1       0.9      1.20      9.30e- 4  1.17e-30     13.3 
19 mu_0       0.1      0.425     2.00e-15  0            29.6 
20 mu_0       0.2      0.977     6.03e- 9  0            24.4 
21 mu_0       0.3      0.792     4.96e- 5  0             8.77
22 mu_0       0.4      0.963     1.01e- 2  0             8.92
23 mu_0       0.5      0.898     1.43e- 1  0             5.67
24 mu_0       0.6      0.885     5.23e- 1  0             4.60
25 mu_0       0.7      1.29      7.05e- 1  0             4.92
26 mu_0       0.8      1.23      4.58e- 1  0             5.27
27 mu_0       0.9      1.10      3.80e- 3  0            11.7 
[1] "Total run time was 248.786 seconds"
