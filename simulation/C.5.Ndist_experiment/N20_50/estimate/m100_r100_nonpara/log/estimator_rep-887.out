
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3412"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 31 32 33 34 35 36 37 38 39 40 41 42 43 44 46 47 
 1  7  6  1  4  4  5  4  1  8  2  6  1  3  1  5  3  3  2  3  3  4  2  4  3  4 
48 49 50 
 3  4  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02124 0.30039 0.57154 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
2039 1373 
[1] "treatment indicator table: "

   0    1 
1372 2040 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1628
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 8"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 80"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1784
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 46"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 56"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 233.592 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.587 0.0928
 2 mu         0.1   0.2 0.647 0.0851
 3 mu         0.1   0.3 0.716 0.0819
 4 mu         0.1   0.4 0.753 0.0804
 5 mu         0.1   0.5 0.770 0.0789
 6 mu         0.2   0.1 0.461 0.0536
 7 mu         0.2   0.2 0.517 0.0460
 8 mu         0.2   0.3 0.583 0.0449
 9 mu         0.2   0.4 0.638 0.0462
10 mu         0.2   0.5 0.656 0.0443
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.06         0.899    0.0195      4.37
 2 mu         0.2      1.02         0.977    0.443       1.93
 3 mu         0.3      1.00         0.981    0.398       1.67
 4 mu         0.4      0.992        0.986    0.597       1.30
 5 mu         0.5      0.996        1.00     0.755       1.22
 6 mu         0.6      1.00         1.01     0.628       1.24
 7 mu         0.7      1.00         1.00     0.738       1.29
 8 mu         0.8      1.01         1.00     0.660       1.39
 9 mu         0.9      1.01         0.979    0.185       2.04
10 mu_1       0.1      1.06         0.948    0.0438      3.84
11 mu_1       0.2      1.01         0.986    0.462       1.74
12 mu_1       0.3      1.00         0.994    0.413       1.64
13 mu_1       0.4      0.991        0.989    0.621       1.27
14 mu_1       0.5      0.997        1.00     0.777       1.22
15 mu_1       0.6      1.00         1.01     0.621       1.25
16 mu_1       0.7      1.00         1.00     0.750       1.29
17 mu_1       0.8      1.01         1.01     0.649       1.39
18 mu_1       0.9      1.01         0.982    0.173       2.10
19 mu_0       0.1      1.06         0.863    0.0169      4.43
20 mu_0       0.2      1.02         0.991    0.415       2.00
21 mu_0       0.3      1.00         0.981    0.392       1.68
22 mu_0       0.4      0.992        0.983    0.581       1.31
23 mu_0       0.5      0.995        1.00     0.732       1.24
24 mu_0       0.6      1.00         1.01     0.638       1.23
25 mu_0       0.7      1.00         1.01     0.710       1.29
26 mu_0       0.8      1.01         0.991    0.676       1.36
27 mu_0       0.9      1.01         0.990    0.298       1.64
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.669     1.07e-11  2.74e-45     21.9 
 2 mu         0.2      1.11      2.07e- 6  1.37e-30     22.5 
 3 mu         0.3      1.03      1.33e- 3  5.09e-22     11.6 
 4 mu         0.4      0.894     6.79e- 2  5.78e-16      6.21
 5 mu         0.5      0.884     4.59e- 1  2.70e-11      5.21
 6 mu         0.6      1.15      6.24e- 1  3.36e- 8      4.06
 7 mu         0.7      1.25      8.20e- 1  6.52e-13      6.77
 8 mu         0.8      1.19      1.77e- 1  7.63e-20      7.33
 9 mu         0.9      1.14      3.92e- 4  4.45e-32     17.4 
10 mu_1       0.1      0.969     6.91e-11  2.68e-44     25.2 
11 mu_1       0.2      1.10      6.36e- 6  6.71e-30     18.0 
12 mu_1       0.3      0.999     2.93e- 3  1.66e-21     10.3 
13 mu_1       0.4      0.865     1.07e- 1  1.42e-15      5.50
14 mu_1       0.5      0.898     5.24e- 1  5.29e-11      5.21
15 mu_1       0.6      1.18      6.75e- 1  8.96e- 9      4.33
16 mu_1       0.7      1.24      6.97e- 1  1.49e-13      6.68
17 mu_1       0.8      1.19      1.48e- 1  1.53e-20      7.41
18 mu_1       0.9      1.14      2.75e- 4  7.91e-33     19.0 
19 mu_0       0.1      0.635     4.27e-12  6.08e-47     21.5 
20 mu_0       0.2      1.12      9.11e- 7  3.42e-32     23.6 
21 mu_0       0.3      1.04      6.10e- 4  1.46e-23     12.2 
22 mu_0       0.4      0.914     4.40e- 2  1.93e-17      6.69
23 mu_0       0.5      0.871     3.52e- 1  1.08e-12      5.21
24 mu_0       0.6      1.10      6.62e- 1  8.19e- 9      4.34
25 mu_0       0.7      1.26      7.55e- 1  1.83e-12      6.98
26 mu_0       0.8      1.20      3.24e- 1  3.20e-19      7.02
27 mu_0       0.9      1.11      1.44e- 3  3.74e-31     16.5 
[1] "Total run time was 237.318 seconds"
