
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3524"
[1] "cluster size dist'n: "

20 21 22 23 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 44 45 46 47 
 3  5  3  5  5  2  3  2  3  5  1  3  3  3  2  6  2  7  2  4  1  3  4  5  2  3 
48 49 50 
 4  8  1 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02716 0.35175 0.60809 1.00000 5.00000 
[1] "event indicator table: "

   0    1 
2145 1379 
[1] "treatment indicator table: "

   0    1 
1307 2217 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1847
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 32"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 79"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1677
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 89"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 219.391 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.460 0.0868
 2 mu         0.1   0.2 0.620 0.142 
 3 mu         0.1   0.3 0.626 0.137 
 4 mu         0.1   0.4 0.634 0.137 
 5 mu         0.1   0.5 0.667 0.137 
 6 mu         0.2   0.1 0.466 0.0636
 7 mu         0.2   0.2 0.620 0.117 
 8 mu         0.2   0.3 0.639 0.105 
 9 mu         0.2   0.4 0.650 0.0987
10 mu         0.2   0.5 0.679 0.0916
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.930        0.556   0.00184     14.3 
 2 mu         0.2      1.03         0.951   0.112        3.34
 3 mu         0.3      1.03         0.963   0.384        1.89
 4 mu         0.4      1.00         1.02    0.636        1.39
 5 mu         0.5      1.01         1.00    0.769        1.49
 6 mu         0.6      1.01         1.00    0.778        1.40
 7 mu         0.7      0.998        0.997   0.664        1.54
 8 mu         0.8      0.999        0.979   0.609        1.62
 9 mu         0.9      1.01         0.989   0.499        1.72
10 mu_1       0.1      0.967        0.711   0.00587     10.9 
11 mu_1       0.2      1.04         0.990   0.158        2.55
12 mu_1       0.3      1.02         0.995   0.401        1.77
13 mu_1       0.4      1.00         1.00    0.696        1.40
14 mu_1       0.5      1.01         1.00    0.790        1.50
15 mu_1       0.6      1.01         0.994   0.772        1.40
16 mu_1       0.7      0.996        0.995   0.637        1.54
17 mu_1       0.8      0.999        0.983   0.620        1.63
18 mu_1       0.9      1.01         1.00    0.483        1.79
19 mu_0       0.1      0.926        0.515   0.00139     15.1 
20 mu_0       0.2      1.03         0.954   0.101        3.72
21 mu_0       0.3      1.03         0.965   0.374        1.94
22 mu_0       0.4      1.00         1.02    0.596        1.40
23 mu_0       0.5      1.01         0.992   0.747        1.47
24 mu_0       0.6      1.02         0.995   0.786        1.41
25 mu_0       0.7      1.00         1.01    0.701        1.53
26 mu_0       0.8      1.00         0.970   0.569        1.62
27 mu_0       0.9      0.993        0.975   0.488        1.58
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.0478     1.37e-12  1.53e-44      1.68
 2 mu         0.2     0.726      8.76e- 7  3.82e-30     24.9 
 3 mu         0.3     1.20       6.81e- 4  9.47e-22     26.0 
 4 mu         0.4     1.23       7.00e- 2  8.06e-16     10.3 
 5 mu         0.5     1.30       4.58e- 1  3.01e-11     11.3 
 6 mu         0.6     1.27       5.78e- 1  1.52e- 7     13.8 
 7 mu         0.7     1.04       6.49e- 1  6.93e- 7      9.08
 8 mu         0.8     0.920      2.16e- 1  1.80e-11      6.20
 9 mu         0.9     1.13       5.21e- 4  9.70e-20     15.2 
10 mu_1       0.1     0.118      8.52e-12  1.50e-43      4.03
11 mu_1       0.2     0.937      2.97e- 6  1.87e-29     31.1 
12 mu_1       0.3     1.21       1.38e- 3  3.09e-21     21.7 
13 mu_1       0.4     1.24       1.18e- 1  1.97e-15      9.55
14 mu_1       0.5     1.31       4.15e- 1  5.90e-11     11.6 
15 mu_1       0.6     1.26       6.05e- 1  2.49e- 7     14.5 
16 mu_1       0.7     1.02       6.77e- 1  2.35e- 7      8.18
17 mu_1       0.8     0.922      1.73e- 1  5.34e-12      6.58
18 mu_1       0.9     1.15       3.61e- 4  2.55e-20     15.2 
19 mu_0       0.1     0.0400     5.79e-13  0             1.42
20 mu_0       0.2     0.673      3.69e- 7  0            23.3 
21 mu_0       0.3     1.19       3.80e- 4  0            27.8 
22 mu_0       0.4     1.23       3.83e- 2  0            10.8 
23 mu_0       0.5     1.30       4.46e- 1  0            11.1 
24 mu_0       0.6     1.28       4.79e- 1  0            12.8 
25 mu_0       0.7     1.08       6.37e- 1  0            11.2 
26 mu_0       0.8     0.912      2.87e- 1  0             5.13
27 mu_0       0.9     0.969      1.32e- 3  0            15.2 
[1] "Total run time was 223.663 seconds"
