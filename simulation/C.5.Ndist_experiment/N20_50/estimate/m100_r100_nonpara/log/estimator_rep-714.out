
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3494"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 3  3  2  3  5  2  5  3  3  3  2  2  9  3  1  4  2  1  4  3  1  2  5  8  6  4 
46 47 48 49 50 
 4  1  1  4  1 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02982 0.31782 0.60206 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
2106 1388 
[1] "treatment indicator table: "

   0    1 
1280 2214 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1706
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1788
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 220.306 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.277 0.0482
 2 mu         0.1   0.2 0.335 0.0564
 3 mu         0.1   0.3 0.390 0.0648
 4 mu         0.1   0.4 0.479 0.0771
 5 mu         0.1   0.5 0.512 0.0837
 6 mu         0.2   0.1 0.312 0.0334
 7 mu         0.2   0.2 0.399 0.0410
 8 mu         0.2   0.3 0.466 0.0486
 9 mu         0.2   0.4 0.528 0.0556
10 mu         0.2   0.5 0.560 0.0587
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.806        0.225 0.0000000718      7.46
 2 mu         0.2      0.958        0.822 0.00119           4.04
 3 mu         0.3      0.988        0.977 0.0686            2.67
 4 mu         0.4      1.01         0.985 0.447             1.62
 5 mu         0.5      1.02         1.02  0.629             1.32
 6 mu         0.6      1.01         1.00  0.780             1.22
 7 mu         0.7      0.990        0.986 0.758             1.26
 8 mu         0.8      0.974        0.980 0.721             1.28
 9 mu         0.9      0.995        0.977 0.199             1.71
10 mu_1       0.1      0.896        0.384 0.000000279       7.44
11 mu_1       0.2      0.960        0.868 0.00234           3.14
12 mu_1       0.3      0.996        0.973 0.0950            2.48
13 mu_1       0.4      1.02         0.997 0.470             1.56
14 mu_1       0.5      1.02         1.02  0.642             1.31
15 mu_1       0.6      1.01         1.00  0.767             1.22
16 mu_1       0.7      0.987        0.977 0.765             1.26
17 mu_1       0.8      0.975        0.982 0.711             1.28
18 mu_1       0.9      0.996        0.972 0.184             1.75
19 mu_0       0.1      0.795        0.207 0.0000000488      7.81
20 mu_0       0.2      0.958        0.797 0.000903          4.33
21 mu_0       0.3      0.985        0.988 0.0572            2.75
22 mu_0       0.4      1.01         0.994 0.426             1.74
23 mu_0       0.5      1.02         1.03  0.616             1.34
24 mu_0       0.6      1.02         1.01  0.776             1.22
25 mu_0       0.7      0.997        0.982 0.742             1.28
26 mu_0       0.8      0.973        0.977 0.709             1.30
27 mu_0       0.9      0.994        0.974 0.333             1.57
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1    0.00307     7.54e-13  1.74e-39     0.134
 2 mu         0.2    0.284       7.60e- 7  2.41e-26     8.83 
 3 mu         0.3    1.28        1.33e- 3  1.03e-18    24.1  
 4 mu         0.4    1.90        7.10e- 2  2.39e-13    47.7  
 5 mu         0.5    1.62        7.08e- 1  3.05e- 9    15.4  
 6 mu         0.6    1.32        8.25e- 1  5.94e- 6     6.80 
 7 mu         0.7    1.22        6.59e- 1  4.51e- 7     7.13 
 8 mu         0.8    1.30        1.73e- 1  2.01e-12     9.07 
 9 mu         0.9    1.36        6.44e- 4  3.04e-22    20.8  
10 mu_1       0.1    0.00928     4.83e-12  1.66e-38     0.361
11 mu_1       0.2    0.437       2.42e- 6  1.15e-25    12.6  
12 mu_1       0.3    1.48        2.66e- 3  3.30e-18    29.6  
13 mu_1       0.4    1.92        1.17e- 1  5.71e-13    46.1  
14 mu_1       0.5    1.57        8.43e- 1  5.83e- 9    11.9  
15 mu_1       0.6    1.29        6.80e- 1  9.48e- 6     6.34 
16 mu_1       0.7    1.22        5.92e- 1  1.84e- 7     7.74 
17 mu_1       0.8    1.29        1.27e- 1  7.17e-13     9.45 
18 mu_1       0.9    1.37        4.14e- 4  9.65e-23    22.1  
19 mu_0       0.1    0.00238     2.78e-13  8.39e-41     0.109
20 mu_0       0.2    0.246       3.61e- 7  1.31e-27     7.88 
21 mu_0       0.3    1.19        6.76e- 4  6.43e-20    24.6  
22 mu_0       0.4    1.88        4.02e- 2  1.73e-14    48.8  
23 mu_0       0.5    1.67        5.72e- 1  2.65e-10    18.9  
24 mu_0       0.6    1.36        8.30e- 1  6.46e- 7     7.96 
25 mu_0       0.7    1.22        6.54e- 1  1.07e- 6     7.66 
26 mu_0       0.8    1.31        2.45e- 1  7.17e-12     9.50 
27 mu_0       0.9    1.25        2.48e- 3  2.17e-21    13.5  
[1] "Total run time was 225.12 seconds"
