
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3379"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 2  4  4  4  3  3  3  3  6  5  3  2  2  3  6  4  4  5  1  3  3  3  3  6  6  4 
47 48 49 50 
 1  2  1  1 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03401 0.31505 0.57506 0.93765 5.00000 
[1] "event indicator table: "

   0    1 
1909 1470 
[1] "treatment indicator table: "

   0    1 
1360 2019 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1700
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1679
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 69"
[1] "     Cluster: 75"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 112.275 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.371 0.0683
 2 mu         0.1   0.2 0.472 0.0770
 3 mu         0.1   0.3 0.552 0.0978
 4 mu         0.1   0.4 0.560 0.0946
 5 mu         0.1   0.5 0.578 0.0926
 6 mu         0.2   0.1 0.367 0.0347
 7 mu         0.2   0.2 0.477 0.0364
 8 mu         0.2   0.3 0.555 0.0470
 9 mu         0.2   0.4 0.573 0.0427
10 mu         0.2   0.5 0.598 0.0368
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.887        0.280  0.000317      8.28
 2 mu         0.2      0.990        0.948  0.0795        2.82
 3 mu         0.3      0.998        0.982  0.389         2.05
 4 mu         0.4      1.00         0.999  0.646         1.37
 5 mu         0.5      1.02         1.00   0.769         1.32
 6 mu         0.6      1.01         1.01   0.844         1.17
 7 mu         0.7      0.984        0.998  0.679         1.22
 8 mu         0.8      0.956        0.985  0.576         1.23
 9 mu         0.9      0.981        0.976  0.103         1.70
10 mu_1       0.1      0.917        0.489  0.000981      6.32
11 mu_1       0.2      1.00         0.987  0.121         2.81
12 mu_1       0.3      0.998        0.974  0.441         1.83
13 mu_1       0.4      1.01         1.02   0.646         1.35
14 mu_1       0.5      1.02         0.999  0.797         1.31
15 mu_1       0.6      1.01         1.01   0.839         1.16
16 mu_1       0.7      0.981        0.990  0.665         1.22
17 mu_1       0.8      0.955        0.981  0.583         1.23
18 mu_1       0.9      0.983        0.979  0.0939        1.74
19 mu_0       0.1      0.884        0.254  0.000234      9.12
20 mu_0       0.2      0.987        0.933  0.0691        2.82
21 mu_0       0.3      0.999        0.976  0.352         2.15
22 mu_0       0.4      1.00         0.989  0.623         1.44
23 mu_0       0.5      1.01         0.999  0.740         1.34
24 mu_0       0.6      1.02         1.01   0.836         1.19
25 mu_0       0.7      0.990        0.994  0.697         1.22
26 mu_0       0.8      0.959        0.971  0.550         1.22
27 mu_0       0.9      0.968        0.968  0.182         1.58
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      4.37      2.76e-11  3.27e-34    430.  
 2 mu         0.2      1.55      6.46e- 6  2.25e-22     55.0 
 3 mu         0.3      1.65      3.71e- 3  1.46e-15     19.1 
 4 mu         0.4      1.37      1.43e- 1  7.81e-11     13.0 
 5 mu         0.5      1.33      8.00e- 1  1.39e- 7      6.95
 6 mu         0.6      1.29      1.10e+ 0  2.03e- 9      4.45
 7 mu         0.7      1.02      6.80e- 1  2.83e-14      6.27
 8 mu         0.8      0.987     8.23e- 2  2.91e-21     10.8 
 9 mu         0.9      1.15      8.93e- 5  2.12e-33     19.7 
10 mu_1       0.1      3.99      1.61e-10  2.97e-33    382.  
11 mu_1       0.2      1.53      1.92e- 5  1.02e-21     32.7 
12 mu_1       0.3      1.64      7.71e- 3  4.41e-15     20.6 
13 mu_1       0.4      1.32      2.22e- 1  1.78e-10     10.5 
14 mu_1       0.5      1.34      9.19e- 1  2.70e- 7      6.56
15 mu_1       0.6      1.26      1.11e+ 0  3.00e-10      4.61
16 mu_1       0.7      1.01      6.13e- 1  3.59e-15      6.33
17 mu_1       0.8      1.00      6.39e- 2  3.24e-22     11.5 
18 mu_1       0.9      1.15      6.05e- 5  2.09e-34     20.9 
19 mu_0       0.1      4.41      1.29e-11  3.30e-35    435.  
20 mu_0       0.2      1.56      3.30e- 6  2.55e-23     62.6 
21 mu_0       0.3      1.65      2.16e- 3  1.89e-16     18.8 
22 mu_0       0.4      1.40      8.96e- 2  4.03e-12     14.7 
23 mu_0       0.5      1.32      6.30e- 1  7.95e- 9      7.33
24 mu_0       0.6      1.33      1.16e+ 0  4.61e- 9      4.21
25 mu_0       0.7      1.06      6.84e- 1  8.60e-14      6.15
26 mu_0       0.8      0.927     1.35e- 1  1.33e-20      7.69
27 mu_0       0.9      1.13      3.48e- 4  1.93e-32     16.5 
[1] "Total run time was 114.274 seconds"
