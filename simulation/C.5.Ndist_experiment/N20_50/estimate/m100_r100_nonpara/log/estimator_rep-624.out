
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3489"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 1  4  2  5  2  2  3  5  3  3  5  6  1  5  3  4  2  1  4  7  2  3  5  2  4  3 
46 47 48 49 50 
 2  4  1  3  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04153 0.37220 0.62805 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
2051 1438 
[1] "treatment indicator table: "

   0    1 
1296 2193 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1779
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1710
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 234.564 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.423 0.0663
 2 mu         0.1   0.2 0.505 0.0652
 3 mu         0.1   0.3 0.588 0.0885
 4 mu         0.1   0.4 0.614 0.0883
 5 mu         0.1   0.5 0.639 0.0824
 6 mu         0.2   0.1 0.422 0.0445
 7 mu         0.2   0.2 0.511 0.0366
 8 mu         0.2   0.3 0.570 0.0503
 9 mu         0.2   0.4 0.599 0.0589
10 mu         0.2   0.5 0.639 0.0485
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      1.05         0.671 0.0000111       7.08
 2 mu         0.2      1.16         1.07  0.0219          3.49
 3 mu         0.3      1.08         1.04  0.361           2.01
 4 mu         0.4      1.02         1.01  0.470           1.62
 5 mu         0.5      0.999        1.01  0.654           1.44
 6 mu         0.6      0.994        0.985 0.707           1.40
 7 mu         0.7      0.998        0.996 0.682           1.44
 8 mu         0.8      1.01         0.979 0.691           1.61
 9 mu         0.9      1.01         0.986 0.488           1.62
10 mu_1       0.1      1.18         0.823 0.0000375       7.79
11 mu_1       0.2      1.14         1.10  0.0380          2.96
12 mu_1       0.3      1.06         1.03  0.414           2.03
13 mu_1       0.4      1.02         1.02  0.504           1.54
14 mu_1       0.5      0.996        1.00  0.652           1.41
15 mu_1       0.6      0.994        1.00  0.700           1.40
16 mu_1       0.7      0.999        1.00  0.682           1.43
17 mu_1       0.8      1.01         0.979 0.679           1.63
18 mu_1       0.9      1.01         0.976 0.474           1.65
19 mu_0       0.1      1.04         0.651 0.00000821      7.17
20 mu_0       0.2      1.16         1.06  0.0179          3.74
21 mu_0       0.3      1.08         1.05  0.325           2.00
22 mu_0       0.4      1.03         0.992 0.448           1.68
23 mu_0       0.5      1.00         0.995 0.635           1.48
24 mu_0       0.6      0.994        0.996 0.690           1.40
25 mu_0       0.7      0.997        0.993 0.682           1.47
26 mu_0       0.8      1.00         0.980 0.700           1.53
27 mu_0       0.9      1.02         1.02  0.485           1.54
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.0645     2.79e-13  2.46e-39      2.18
 2 mu         0.2     0.695      5.05e- 7  5.41e-27     16.5 
 3 mu         0.3     1.13       1.03e- 3  8.98e-20     14.6 
 4 mu         0.4     1.14       6.55e- 2  1.19e-14     12.4 
 5 mu         0.5     0.996      3.83e- 1  1.12e-10      5.90
 6 mu         0.6     1.00       4.12e- 1  1.97e- 7      5.90
 7 mu         0.7     0.954      5.85e- 1  1.40e- 6     11.1 
 8 mu         0.8     1.07       9.73e- 2  7.16e-11     12.0 
 9 mu         0.9     1.15       2.17e- 4  9.74e-19     17.4 
10 mu_1       0.1     0.158      1.74e-12  2.46e-38      4.93
11 mu_1       0.2     0.900      1.70e- 6  2.71e-26     19.5 
12 mu_1       0.3     1.15       2.09e- 3  2.99e-19     11.8 
13 mu_1       0.4     1.10       1.01e- 1  2.97e-14     12.2 
14 mu_1       0.5     0.981      4.51e- 1  2.24e-10      5.42
15 mu_1       0.6     0.998      3.98e- 1  3.29e- 7      5.59
16 mu_1       0.7     0.955      5.65e- 1  5.66e- 7     12.0 
17 mu_1       0.8     1.08       6.99e- 2  2.52e-11     11.3 
18 mu_1       0.9     1.15       1.48e- 4  3.05e-19     18.3 
19 mu_0       0.1     0.0541     1.17e-13  0             1.88
20 mu_0       0.2     0.644      2.31e- 7  0            16.0 
21 mu_0       0.3     1.12       5.69e- 4  0            15.8 
22 mu_0       0.4     1.16       4.22e- 2  0            12.6 
23 mu_0       0.5     1.01       3.81e- 1  0             7.15
24 mu_0       0.6     1.01       3.87e- 1  0             6.37
25 mu_0       0.7     0.951      5.28e- 1  0             9.04
26 mu_0       0.8     1.03       2.07e- 1  0            14.7 
27 mu_0       0.9     1.13       6.66e- 4  0             9.17
[1] "Total run time was 237.916 seconds"
