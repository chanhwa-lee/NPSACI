
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3509"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 2  5  4  3  2  2  3  4  3  4  3  4  3  4  1  3  2  4  3  5  7  2  1  4  3  2 
46 47 49 50 
 4  5  4  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03483 0.35722 0.60623 1.00000 7.00000 
[1] "event indicator table: "

   0    1 
2049 1460 
[1] "treatment indicator table: "

   0    1 
1341 2168 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1760
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 47"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1749
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 97"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 255.981 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.439 0.0646
 2 mu         0.1   0.2 0.526 0.0764
 3 mu         0.1   0.3 0.608 0.0917
 4 mu         0.1   0.4 0.655 0.0966
 5 mu         0.1   0.5 0.684 0.102 
 6 mu         0.2   0.1 0.364 0.0250
 7 mu         0.2   0.2 0.454 0.0285
 8 mu         0.2   0.3 0.535 0.0342
 9 mu         0.2   0.4 0.578 0.0356
10 mu         0.2   0.5 0.609 0.0394
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.08         0.498  0.000452      7.61
 2 mu         0.2      1.04         0.931  0.122         2.39
 3 mu         0.3      1.04         1.04   0.420         1.60
 4 mu         0.4      1.04         1.05   0.646         1.66
 5 mu         0.5      1.02         1.01   0.636         1.45
 6 mu         0.6      1.00         1.01   0.772         1.33
 7 mu         0.7      0.984        0.986  0.748         1.49
 8 mu         0.8      0.965        0.951  0.515         1.60
 9 mu         0.9      0.968        0.968  0.277         1.91
10 mu_1       0.1      1.06         0.752  0.00135       6.18
11 mu_1       0.2      1.04         0.982  0.189         2.20
12 mu_1       0.3      1.04         1.05   0.487         1.68
13 mu_1       0.4      1.04         1.06   0.625         1.63
14 mu_1       0.5      1.02         1.01   0.653         1.44
15 mu_1       0.6      1.00         1.00   0.767         1.33
16 mu_1       0.7      0.982        0.981  0.727         1.53
17 mu_1       0.8      0.965        0.946  0.509         1.59
18 mu_1       0.9      0.967        0.960  0.262         1.95
19 mu_0       0.1      1.08         0.462  0.000352      8.10
20 mu_0       0.2      1.04         0.925  0.105         2.54
21 mu_0       0.3      1.04         1.06   0.387         1.61
22 mu_0       0.4      1.04         1.05   0.636         1.69
23 mu_0       0.5      1.03         1.02   0.620         1.46
24 mu_0       0.6      1.01         1.01   0.749         1.33
25 mu_0       0.7      0.989        0.989  0.761         1.41
26 mu_0       0.8      0.965        0.964  0.537         1.64
27 mu_0       0.9      0.976        0.946  0.384         1.61
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.0343     1.62e-12  1.40e-38      1.39
 2 mu         0.2     0.588      1.44e- 6  5.48e-26     21.4 
 3 mu         0.3     1.04       1.84e- 3  1.19e-18     22.3 
 4 mu         0.4     0.881      9.23e- 2  1.81e-13      5.67
 5 mu         0.5     1.10       5.00e- 1  1.77e- 9      7.88
 6 mu         0.6     1.09       8.38e- 1  3.00e- 6      4.54
 7 mu         0.7     1.02       5.72e- 1  7.69e- 8      3.94
 8 mu         0.8     1.03       1.16e- 1  2.28e-13      8.11
 9 mu         0.9     0.874      2.56e- 4  1.73e-23     18.7 
10 mu_1       0.1     0.0878     1.02e-11  1.37e-37      3.47
11 mu_1       0.2     0.790      4.92e- 6  2.68e-25     26.7 
12 mu_1       0.3     1.03       3.52e- 3  3.89e-18     18.6 
13 mu_1       0.4     0.885      1.37e- 1  4.42e-13      5.28
14 mu_1       0.5     1.13       5.44e- 1  3.46e- 9      8.10
15 mu_1       0.6     1.07       8.38e- 1  4.88e- 6      4.26
16 mu_1       0.7     1.02       5.67e- 1  3.07e- 8      4.34
17 mu_1       0.8     1.02       8.64e- 2  7.99e-14      8.07
18 mu_1       0.9     0.890      1.67e- 4  5.37e-24     20.3 
19 mu_0       0.1     0.0283     6.58e-13  0             1.16
20 mu_0       0.2     0.537      5.85e- 7  0            20.0 
21 mu_0       0.3     1.04       1.05e- 3  0            23.9 
22 mu_0       0.4     0.879      5.88e- 2  0             6.10
23 mu_0       0.5     1.08       3.90e- 1  0             7.67
24 mu_0       0.6     1.12       7.91e- 1  0             5.52
25 mu_0       0.7     1.02       7.02e- 1  0             3.98
26 mu_0       0.8     1.07       1.59e- 1  0             8.28
27 mu_0       0.9     0.732      7.02e- 4  0            12.6 
[1] "Total run time was 260.22 seconds"
