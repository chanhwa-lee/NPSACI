
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3489"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 5  4  2  3  3  3  5  4  7  3  3  1  1  2  1  2  4  3  3  5  1  3  3  4  4  2 
46 47 48 49 50 
 3  4  7  2  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04226 0.35634 0.62475 1.00000 5.00000 
[1] "event indicator table: "

   0    1 
2100 1389 
[1] "treatment indicator table: "

   0    1 
1260 2229 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1760
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 13"
[1] "     Cluster: 17"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1729
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 551.4 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.241 0.0657
 2 mu         0.1   0.2 0.321 0.0943
 3 mu         0.1   0.3 0.315 0.0942
 4 mu         0.1   0.4 0.325 0.0888
 5 mu         0.1   0.5 0.340 0.0683
 6 mu         0.2   0.1 0.272 0.0626
 7 mu         0.2   0.2 0.367 0.0902
 8 mu         0.2   0.3 0.374 0.0920
 9 mu         0.2   0.4 0.395 0.0870
10 mu         0.2   0.5 0.421 0.0652
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.558        0.140 0.000000101       2.86
 2 mu         0.2      0.754        0.709 0.00139           4.05
 3 mu         0.3      0.898        0.916 0.0874            1.62
 4 mu         0.4      0.975        0.982 0.486             1.59
 5 mu         0.5      0.992        0.992 0.672             1.32
 6 mu         0.6      0.990        1.00  0.744             1.31
 7 mu         0.7      0.994        1.00  0.746             1.25
 8 mu         0.8      1.01         1.00  0.700             1.35
 9 mu         0.9      1.04         1.02  0.541             2.05
10 mu_1       0.1      0.610        0.306 0.000000415       4.29
11 mu_1       0.2      0.799        0.772 0.00289           3.44
12 mu_1       0.3      0.924        0.953 0.126             1.59
13 mu_1       0.4      0.980        0.979 0.556             1.55
14 mu_1       0.5      0.992        0.999 0.700             1.37
15 mu_1       0.6      0.991        1.00  0.740             1.28
16 mu_1       0.7      0.996        1.00  0.764             1.25
17 mu_1       0.8      1.01         1.01  0.688             1.35
18 mu_1       0.9      1.05         1.02  0.520             2.09
19 mu_0       0.1      0.552        0.125 0.0000000662      3.08
20 mu_0       0.2      0.743        0.689 0.00101           4.21
21 mu_0       0.3      0.887        0.906 0.0709            1.78
22 mu_0       0.4      0.971        0.987 0.436             1.62
23 mu_0       0.5      0.992        0.985 0.644             1.33
24 mu_0       0.6      0.990        0.995 0.750             1.37
25 mu_0       0.7      0.991        0.999 0.705             1.27
26 mu_0       0.8      1.00         0.995 0.748             1.32
27 mu_0       0.9      1.02         1.01  0.572             1.73
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      12.1      1.26e-13  5.12e-38   1201.  
 2 mu         0.2      13.0      1.50e- 7  1.78e-25   1228.  
 3 mu         0.3       2.47     3.47e- 4  3.39e-18     88.0 
 4 mu         0.4       1.47     3.17e- 2  4.40e-13     17.2 
 5 mu         0.5       1.12     4.48e- 1  3.60e- 9      4.87
 6 mu         0.6       1.01     5.49e- 1  1.22e- 6      3.73
 7 mu         0.7       1.02     5.96e- 1  2.71e-11      4.75
 8 mu         0.8       1.05     2.12e- 1  4.16e-18      4.93
 9 mu         0.9       1.10     8.56e- 4  4.32e-30     21.7 
10 mu_1       0.1      17.6      6.97e-13  4.89e-37   1751.  
11 mu_1       0.2      10.0      5.40e- 7  8.50e-25    896.  
12 mu_1       0.3       2.07     7.09e- 4  1.08e-17     42.8 
13 mu_1       0.4       1.36     5.19e- 2  1.05e-12     12.7 
14 mu_1       0.5       1.08     5.96e- 1  6.86e- 9      4.51
15 mu_1       0.6       1.00     5.72e- 1  2.97e- 7      3.49
16 mu_1       0.7       1.03     5.75e- 1  5.65e-12      4.79
17 mu_1       0.8       1.05     1.77e- 1  7.59e-19      4.79
18 mu_1       0.9       1.10     5.72e- 4  6.99e-31     22.9 
19 mu_0       0.1      11.4      5.27e-14  2.59e-39   1139.  
20 mu_0       0.2      13.8      5.28e- 8  1.01e-26   1312.  
21 mu_0       0.3       2.64     1.75e- 4  2.20e-19    107.  
22 mu_0       0.4       1.53     1.78e- 2  3.34e-14     20.5 
23 mu_0       0.5       1.17     3.01e- 1  3.27e-10      6.08
24 mu_0       0.6       1.03     6.85e- 1  5.53e- 7      4.08
25 mu_0       0.7       1.01     6.94e- 1  7.72e-11      4.66
26 mu_0       0.8       1.03     3.65e- 1  1.78e-17      5.47
27 mu_0       0.9       1.10     3.42e- 3  3.69e-29     10.3 
[1] "Total run time was 557.216 seconds"
