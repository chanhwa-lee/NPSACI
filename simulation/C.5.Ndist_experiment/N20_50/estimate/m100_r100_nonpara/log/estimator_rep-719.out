
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3544"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 31 32 33 34 35 36 38 39 40 41 42 43 44 45 46 47 
 3  5  3  6  3  3  2  4  4  2  4  2  2  2  2  3  3  1  6  5  4  4  6  4  3  3 
48 49 50 
 6  1  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04706 0.38413 0.63576 1.00000 7.00000 
[1] "event indicator table: "

   0    1 
2109 1435 
[1] "treatment indicator table: "

   0    1 
1265 2279 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1698
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1846
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 164.772 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.397 0.0891
 2 mu         0.1   0.2 0.459 0.0752
 3 mu         0.1   0.3 0.523 0.0726
 4 mu         0.1   0.4 0.571 0.0681
 5 mu         0.1   0.5 0.590 0.0929
 6 mu         0.2   0.1 0.353 0.0590
 7 mu         0.2   0.2 0.422 0.0458
 8 mu         0.2   0.3 0.488 0.0414
 9 mu         0.2   0.4 0.534 0.0347
10 mu         0.2   0.5 0.558 0.0519
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.19         0.890    0.0157      7.31
 2 mu         0.2      1.13         1.12     0.383       2.68
 3 mu         0.3      1.03         1.06     0.429       1.56
 4 mu         0.4      0.976        0.980    0.447       1.41
 5 mu         0.5      0.976        0.981    0.601       1.33
 6 mu         0.6      0.981        0.976    0.671       1.29
 7 mu         0.7      0.988        0.984    0.725       1.26
 8 mu         0.8      0.993        0.981    0.446       1.43
 9 mu         0.9      0.983        0.969    0.458       1.56
10 mu_1       0.1      1.18         1.13     0.0352      4.48
11 mu_1       0.2      1.10         1.08     0.383       2.51
12 mu_1       0.3      1.01         1.03     0.363       1.51
13 mu_1       0.4      0.973        0.975    0.486       1.39
14 mu_1       0.5      0.977        0.987    0.584       1.34
15 mu_1       0.6      0.982        0.968    0.698       1.29
16 mu_1       0.7      0.988        0.984    0.735       1.26
17 mu_1       0.8      0.993        0.987    0.445       1.45
18 mu_1       0.9      0.982        0.974    0.446       1.57
19 mu_0       0.1      1.19         0.865    0.0135      7.62
20 mu_0       0.2      1.14         1.10     0.382       2.73
21 mu_0       0.3      1.04         1.05     0.411       1.58
22 mu_0       0.4      0.978        0.978    0.421       1.43
23 mu_0       0.5      0.975        0.989    0.618       1.33
24 mu_0       0.6      0.981        0.990    0.631       1.30
25 mu_0       0.7      0.986        0.997    0.701       1.25
26 mu_0       0.8      0.990        0.988    0.451       1.35
27 mu_0       0.9      0.995        0.995    0.518       1.70
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.0921     9.88e-14  1.20e-43      4.69
 2 mu         0.2     0.795      2.15e- 7  1.51e-29     24.6 
 3 mu         0.3     1.23       4.81e- 4  2.49e-21     17.1 
 4 mu         0.4     1.18       4.59e- 2  1.59e-15     19.1 
 5 mu         0.5     1.04       2.78e- 1  4.75e-11      8.52
 6 mu         0.6     1.20       5.85e- 1  2.00e- 7      7.16
 7 mu         0.7     1.27       9.88e- 1  4.87e- 9      6.23
 8 mu         0.8     1.37       3.26e- 1  2.19e-14     19.9 
 9 mu         0.9     1.50       1.64e- 3  6.54e-24     15.7 
10 mu_1       0.1     0.198      7.92e-13  1.18e-42      9.15
11 mu_1       0.2     0.955      7.05e- 7  7.37e-29     24.0 
12 mu_1       0.3     1.27       1.04e- 3  8.12e-21     17.8 
13 mu_1       0.4     1.15       7.49e- 2  3.89e-15     19.1 
14 mu_1       0.5     1.04       2.53e- 1  9.30e-11      6.82
15 mu_1       0.6     1.22       6.25e- 1  3.27e- 7      6.90
16 mu_1       0.7     1.27       8.38e- 1  1.36e- 9      7.16
17 mu_1       0.8     1.38       2.96e- 1  5.34e-15     20.0 
18 mu_1       0.9     1.49       1.15e- 3  1.42e-24     16.4 
19 mu_0       0.1     0.0803     1.89e-14  2.79e-45      4.20
20 mu_0       0.2     0.755      9.58e- 8  3.92e-31     24.8 
21 mu_0       0.3     1.21       2.42e- 4  7.41e-23     16.8 
22 mu_0       0.4     1.20       2.65e- 2  5.52e-17     19.1 
23 mu_0       0.5     1.03       2.34e- 1  1.98e-12     10.2 
24 mu_0       0.6     1.18       6.06e- 1  1.04e- 8      7.56
25 mu_0       0.7     1.27       9.29e- 1  1.31e- 8      4.93
26 mu_0       0.8     1.34       3.97e- 1  8.81e-14     19.4 
27 mu_0       0.9     1.51       6.38e- 3  5.26e-23     15.0 
[1] "Total run time was 168.074 seconds"
