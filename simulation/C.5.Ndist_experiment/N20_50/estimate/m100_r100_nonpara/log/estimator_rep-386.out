
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3416"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 40 41 42 43 44 45 46 
 6  6  4  1  3  4  7  2  2  3  4  3  6  1  5  1  1  1  1  1  7  3  2  6  4  4 
47 48 49 50 
 1  4  2  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03502 0.35801 0.62922 1.00000 6.22527 
[1] "event indicator table: "

   0    1 
2044 1372 
[1] "treatment indicator table: "

   0    1 
1232 2184 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1746
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 80"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1670
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 181.796 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.311 0.0558
 2 mu         0.1   0.2 0.406 0.0640
 3 mu         0.1   0.3 0.461 0.0687
 4 mu         0.1   0.4 0.451 0.0745
 5 mu         0.1   0.5 0.494 0.0752
 6 mu         0.2   0.1 0.318 0.0382
 7 mu         0.2   0.2 0.410 0.0375
 8 mu         0.2   0.3 0.481 0.0412
 9 mu         0.2   0.4 0.484 0.0415
10 mu         0.2   0.5 0.504 0.0418
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      0.814        0.233 0.000000200      7.08
 2 mu         0.2      0.899        0.796 0.000919         3.84
 3 mu         0.3      0.976        0.943 0.0453           3.34
 4 mu         0.4      0.971        0.950 0.310            1.62
 5 mu         0.5      0.989        0.969 0.664            1.46
 6 mu         0.6      0.995        0.998 0.664            1.27
 7 mu         0.7      1.00         0.997 0.745            1.31
 8 mu         0.8      1.01         0.984 0.765            1.94
 9 mu         0.9      1.01         0.995 0.207            2.07
10 mu_1       0.1      0.823        0.405 0.000000917      7.11
11 mu_1       0.2      0.922        0.853 0.00213          4.60
12 mu_1       0.3      0.979        0.966 0.0714           2.78
13 mu_1       0.4      0.975        0.947 0.382            1.59
14 mu_1       0.5      0.992        0.967 0.677            1.46
15 mu_1       0.6      0.996        1.01  0.675            1.26
16 mu_1       0.7      1.00         0.990 0.754            1.32
17 mu_1       0.8      1.01         0.989 0.753            2.01
18 mu_1       0.9      1.01         0.993 0.193            2.01
19 mu_0       0.1      0.812        0.210 0.000000121      7.08
20 mu_0       0.2      0.893        0.781 0.000616         4.04
21 mu_0       0.3      0.975        0.927 0.0342           3.58
22 mu_0       0.4      0.969        0.955 0.262            1.74
23 mu_0       0.5      0.987        0.974 0.651            1.49
24 mu_0       0.6      0.995        0.995 0.647            1.29
25 mu_0       0.7      1.00         1.01  0.724            1.28
26 mu_0       0.8      1.01         0.999 0.757            1.64
27 mu_0       0.9      1.02         0.989 0.328            2.60
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.0746     1.41e-11  5.54e-35      3.75
 2 mu         0.2     0.855      7.79e- 6  2.41e-23     20.5 
 3 mu         0.3     1.68       4.08e- 3  1.36e-16     22.7 
 4 mu         0.4     1.79       1.78e- 1  7.45e-12     26.0 
 5 mu         0.5     1.52       5.63e- 1  3.11e- 8      9.67
 6 mu         0.6     1.14       4.45e- 1  2.44e- 5      6.88
 7 mu         0.7     0.941      5.99e- 1  3.53e- 8      7.51
 8 mu         0.8     1.06       1.75e- 1  1.58e-13     15.3 
 9 mu         0.9     1.15       1.13e- 3  3.36e-23     27.1 
10 mu_1       0.1     0.191      7.85e-11  5.27e-34      9.39
11 mu_1       0.2     1.14       2.18e- 5  1.15e-22     25.7 
12 mu_1       0.3     1.75       8.06e- 3  4.31e-16     22.0 
13 mu_1       0.4     1.75       2.71e- 1  1.77e-11     25.3 
14 mu_1       0.5     1.47       6.52e- 1  5.92e- 8      9.10
15 mu_1       0.6     1.09       4.48e- 1  3.87e- 5      6.48
16 mu_1       0.7     0.936      5.24e- 1  1.23e- 8      7.24
17 mu_1       0.8     1.07       1.48e- 1  4.83e-14     15.2 
18 mu_1       0.9     1.16       8.18e- 4  9.13e-24     29.0 
19 mu_0       0.1     0.0616     7.33e-12  3.00e-36      3.13
20 mu_0       0.2     0.783      4.16e- 6  1.47e-24     19.2 
21 mu_0       0.3     1.66       2.38e- 3  9.47e-18     23.2 
22 mu_0       0.4     1.81       1.15e- 1  6.05e-13     26.4 
23 mu_0       0.5     1.56       4.32e- 1  3.04e- 9     11.8 
24 mu_0       0.6     1.21       4.76e- 1  2.75e- 6      7.48
25 mu_0       0.7     0.951      6.14e- 1  8.90e- 8      8.15
26 mu_0       0.8     1.06       2.34e- 1  5.97e-13     16.0 
27 mu_0       0.9     1.03       4.31e- 3  2.54e-22     10.6 
[1] "Total run time was 184.75 seconds"
