
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3422"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 2  2  9  4  3  1  2  4  7  4  2  6  4  1  4  1  4  3  1  4  1  2  3  5  1  6 
46 47 48 50 
 4  1  2  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.05747 0.39506 0.66878 1.00000 5.00000 
[1] "event indicator table: "

   0    1 
2002 1420 
[1] "treatment indicator table: "

   0    1 
1206 2216 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1676
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 12"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 51"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1746
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 312.398 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.211 0.0925
 2 mu         0.1   0.2 0.309 0.0983
 3 mu         0.1   0.3 0.443 0.0825
 4 mu         0.1   0.4 0.561 0.0875
 5 mu         0.1   0.5 0.567 0.0926
 6 mu         0.2   0.1 0.211 0.0630
 7 mu         0.2   0.2 0.297 0.0677
 8 mu         0.2   0.3 0.407 0.0550
 9 mu         0.2   0.4 0.514 0.0514
10 mu         0.2   0.5 0.527 0.0517
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.966        0.239 0.0000504      8.79
 2 mu         0.2      0.958        0.920 0.0157         3.59
 3 mu         0.3      1.01         1.00  0.117          2.02
 4 mu         0.4      1.03         1.02  0.477          1.74
 5 mu         0.5      1.02         1.00  0.694          1.66
 6 mu         0.6      1.01         1.01  0.723          1.37
 7 mu         0.7      1.00         0.994 0.695          1.34
 8 mu         0.8      1.01         0.997 0.667          1.52
 9 mu         0.9      1.01         0.995 0.483          1.89
10 mu_1       0.1      0.970        0.469 0.000160       7.65
11 mu_1       0.2      0.960        0.944 0.0252         3.10
12 mu_1       0.3      1.02         1.01  0.146          1.87
13 mu_1       0.4      1.03         1.02  0.561          1.68
14 mu_1       0.5      1.02         0.996 0.679          1.61
15 mu_1       0.6      1.01         1.01  0.715          1.35
16 mu_1       0.7      1.00         0.993 0.690          1.34
17 mu_1       0.8      1.01         1.00  0.654          1.55
18 mu_1       0.9      1.01         0.986 0.464          1.99
19 mu_0       0.1      0.965        0.212 0.0000382      9.39
20 mu_0       0.2      0.957        0.903 0.0133         3.78
21 mu_0       0.3      1.01         0.996 0.104          2.13
22 mu_0       0.4      1.03         1.02  0.421          1.79
23 mu_0       0.5      1.03         1.00  0.658          1.70
24 mu_0       0.6      1.01         1.02  0.736          1.39
25 mu_0       0.7      1.00         0.987 0.706          1.35
26 mu_0       0.8      1.01         1.00  0.717          1.43
27 mu_0       0.9      1.00         1.00  0.576          1.61
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.674     2.33e-13  7.16e-40     45.1 
 2 mu         0.2      1.33      9.60e- 8  3.15e-26     47.5 
 3 mu         0.3      1.02      1.84e- 4  2.32e-18     19.5 
 4 mu         0.4      1.16      2.22e- 2  7.00e-13     16.1 
 5 mu         0.5      1.15      1.71e- 1  9.69e- 9     13.2 
 6 mu         0.6      1.23      8.15e- 1  1.74e- 5      7.94
 7 mu         0.7      1.50      1.12e+ 0  1.11e- 8     12.8 
 8 mu         0.8      1.72      4.52e- 1  1.69e-13     19.8 
 9 mu         0.9      1.09      1.78e- 3  5.66e-22     24.5 
10 mu_1       0.1      1.10      1.68e-12  6.59e-39     66.4 
11 mu_1       0.2      1.30      3.43e- 7  1.45e-25     41.2 
12 mu_1       0.3      0.970     4.20e- 4  7.12e-18     16.7 
13 mu_1       0.4      1.19      3.71e- 2  1.61e-12     17.7 
14 mu_1       0.5      1.14      1.91e- 1  1.78e- 8     11.6 
15 mu_1       0.6      1.24      7.66e- 1  5.26e- 6      8.18
16 mu_1       0.7      1.52      1.14e+ 0  2.32e- 9     13.5 
17 mu_1       0.8      1.72      3.94e- 1  3.10e-14     21.3 
18 mu_1       0.9      1.05      1.30e- 3  9.25e-23     23.4 
19 mu_0       0.1      0.627     6.63e-14  6.37e-41     42.8 
20 mu_0       0.2      1.34      3.43e- 8  3.15e-27     50.6 
21 mu_0       0.3      1.04      8.32e- 5  2.65e-19     20.8 
22 mu_0       0.4      1.14      1.23e- 2  9.34e-14     15.0 
23 mu_0       0.5      1.15      2.06e- 1  1.55e- 9     14.8 
24 mu_0       0.6      1.20      5.42e- 1  3.49e- 6      7.59
25 mu_0       0.7      1.46      8.68e- 1  3.14e- 8     11.1 
26 mu_0       0.8      1.72      6.84e- 1  7.19e-13     13.9 
27 mu_0       0.9      1.46      6.08e- 3  4.83e-21     34.3 
[1] "Total run time was 316.417 seconds"
