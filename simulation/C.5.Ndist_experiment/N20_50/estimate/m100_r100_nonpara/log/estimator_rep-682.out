
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3514"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 4  2  2  1  3  7  2  4  5  1  2  2  6  2  2  1  1  5  4  5  8  6  5  5  2  3 
46 48 49 50 
 1  4  4  1 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02688 0.36948 0.61018 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
2128 1386 
[1] "treatment indicator table: "

   0    1 
1218 2296 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1715
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1799
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 212.517 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.402 0.0875
 2 mu         0.1   0.2 0.436 0.0937
 3 mu         0.1   0.3 0.469 0.0784
 4 mu         0.1   0.4 0.546 0.0671
 5 mu         0.1   0.5 0.588 0.0772
 6 mu         0.2   0.1 0.341 0.0801
 7 mu         0.2   0.2 0.391 0.0944
 8 mu         0.2   0.3 0.424 0.0982
 9 mu         0.2   0.4 0.497 0.0811
10 mu         0.2   0.5 0.535 0.0960
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.942        0.729  0.000514      5.16
 2 mu         0.2      1.03         0.992  0.117         2.49
 3 mu         0.3      1.02         0.973  0.255         2.11
 4 mu         0.4      0.975        0.958  0.380         1.68
 5 mu         0.5      0.975        0.972  0.425         1.51
 6 mu         0.6      0.972        0.964  0.661         1.30
 7 mu         0.7      0.992        0.979  0.724         1.39
 8 mu         0.8      1.03         1.00   0.753         1.46
 9 mu         0.9      1.03         1.00   0.670         1.60
10 mu_1       0.1      0.964        0.788  0.00145       2.98
11 mu_1       0.2      1.04         1.00   0.0475        2.29
12 mu_1       0.3      1.00         1.00   0.330         2.09
13 mu_1       0.4      0.972        0.947  0.348         1.55
14 mu_1       0.5      0.975        0.975  0.452         1.48
15 mu_1       0.6      0.973        0.963  0.686         1.30
16 mu_1       0.7      0.994        0.977  0.721         1.38
17 mu_1       0.8      1.03         1.00   0.761         1.47
18 mu_1       0.9      1.03         0.997  0.660         1.59
19 mu_0       0.1      0.940        0.677  0.000410      5.53
20 mu_0       0.2      1.03         1.02   0.135         2.54
21 mu_0       0.3      1.02         0.985  0.223         2.15
22 mu_0       0.4      0.977        0.949  0.383         1.76
23 mu_0       0.5      0.976        0.977  0.398         1.54
24 mu_0       0.6      0.971        0.966  0.624         1.31
25 mu_0       0.7      0.988        0.971  0.728         1.42
26 mu_0       0.8      1.02         0.997  0.710         1.41
27 mu_0       0.9      1.04         1.03   0.675         1.68
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.491     1.88e-13  3.93e-41     27.2 
 2 mu         0.2      1.39      1.46e- 7  1.94e-27     47.4 
 3 mu         0.3      1.34      2.17e- 4  3.72e-20     29.0 
 4 mu         0.4      1.50      2.11e- 2  4.93e-15     13.2 
 5 mu         0.5      1.27      1.80e- 1  4.64e-11     11.0 
 6 mu         0.6      1.03      3.62e- 1  8.18e- 8      5.23
 7 mu         0.7      1.09      4.38e- 1  7.10e-12      5.96
 8 mu         0.8      1.11      4.34e- 1  4.83e-18      6.81
 9 mu         0.9      1.18      1.16e- 2  7.12e-29      9.87
10 mu_1       0.1      0.777     1.21e-12  3.69e-40     37.9 
11 mu_1       0.2      1.45      5.13e- 7  9.12e-27     53.3 
12 mu_1       0.3      1.37      4.95e- 4  1.24e-19     21.8 
13 mu_1       0.4      1.52      3.46e- 2  1.23e-14     13.1 
14 mu_1       0.5      1.21      2.11e- 1  9.28e-11     10.3 
15 mu_1       0.6      1.03      3.85e- 1  2.75e- 8      5.18
16 mu_1       0.7      1.10      3.86e- 1  1.41e-12      6.08
17 mu_1       0.8      1.11      4.53e- 1  8.42e-19      6.73
18 mu_1       0.9      1.17      8.61e- 3  1.10e-29     10.1 
19 mu_0       0.1      0.459     7.45e-14  0            26.0 
20 mu_0       0.2      1.37      5.45e- 8  0            45.9 
21 mu_0       0.3      1.32      9.45e- 5  0            32.1 
22 mu_0       0.4      1.49      9.95e- 3  0            13.3 
23 mu_0       0.5      1.32      1.32e- 1  0            11.6 
24 mu_0       0.6      1.02      3.49e- 1  0             5.32
25 mu_0       0.7      1.09      3.28e- 1  0             5.68
26 mu_0       0.8      1.12      5.01e- 1  0             7.13
27 mu_0       0.9      1.22      3.08e- 2  0             7.59
[1] "Total run time was 215.865 seconds"
