
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3355"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 5  1  4  6  2  2  5  4  4  3  4  4  6  4  3  5  2  3  5  3  3  1  2  2  1  2 
46 47 48 49 50 
 3  3  2  2  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02403 0.32112 0.57962 0.99798 6.00000 
[1] "event indicator table: "

   0    1 
2006 1349 
[1] "treatment indicator table: "

   0    1 
1268 2087 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1716
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1639
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 235.655 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.361 0.0554
 2 mu         0.1   0.2 0.419 0.0499
 3 mu         0.1   0.3 0.507 0.0706
 4 mu         0.1   0.4 0.572 0.0757
 5 mu         0.1   0.5 0.574 0.0706
 6 mu         0.2   0.1 0.378 0.0467
 7 mu         0.2   0.2 0.449 0.0484
 8 mu         0.2   0.3 0.515 0.0568
 9 mu         0.2   0.4 0.564 0.0533
10 mu         0.2   0.5 0.576 0.0494
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.936        0.732   0.00448      5.87
 2 mu         0.2      0.966        0.926   0.160        2.24
 3 mu         0.3      0.986        0.965   0.317        1.87
 4 mu         0.4      0.982        0.966   0.663        1.51
 5 mu         0.5      0.985        0.981   0.579        1.32
 6 mu         0.6      0.981        0.989   0.612        1.46
 7 mu         0.7      0.988        0.978   0.720        1.35
 8 mu         0.8      1.01         1.03    0.647        1.60
 9 mu         0.9      1.04         1.04    0.307        1.87
10 mu_1       0.1      0.921        0.755   0.00659      3.34
11 mu_1       0.2      0.976        0.959   0.122        2.08
12 mu_1       0.3      0.985        0.970   0.377        1.78
13 mu_1       0.4      0.983        0.975   0.647        1.48
14 mu_1       0.5      0.984        0.984   0.602        1.34
15 mu_1       0.6      0.981        0.991   0.606        1.48
16 mu_1       0.7      0.989        0.980   0.724        1.32
17 mu_1       0.8      1.02         1.03    0.631        1.60
18 mu_1       0.9      1.04         1.04    0.296        1.90
19 mu_0       0.1      0.938        0.717   0.00358      6.34
20 mu_0       0.2      0.963        0.917   0.170        2.32
21 mu_0       0.3      0.987        0.956   0.292        1.90
22 mu_0       0.4      0.981        0.972   0.638        1.54
23 mu_0       0.5      0.986        0.986   0.556        1.31
24 mu_0       0.6      0.980        0.987   0.621        1.43
25 mu_0       0.7      0.983        0.977   0.707        1.42
26 mu_0       0.8      1.01         1.02    0.684        1.57
27 mu_0       0.9      1.02         1.03    0.398        1.64
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.994     1.64e-11  1.30e-44     70.9 
 2 mu         0.2      1.07      2.13e- 6  3.24e-30     36.3 
 3 mu         0.3      0.775     9.80e- 4  8.04e-22     14.9 
 4 mu         0.4      1.07      4.96e- 2  6.85e-16      7.43
 5 mu         0.5      1.34      4.18e- 1  2.56e-11     10.0 
 6 mu         0.6      1.27      7.92e- 1  1.29e- 7     11.8 
 7 mu         0.7      1.26      6.30e- 1  1.93e- 9     12.6 
 8 mu         0.8      1.30      1.75e- 1  3.23e-14      8.90
 9 mu         0.9      1.22      7.73e- 4  5.42e-24     16.4 
10 mu_1       0.1      1.11      1.13e-10  1.27e-43     70.9 
11 mu_1       0.2      0.921     6.94e- 6  1.59e-29     38.0 
12 mu_1       0.3      0.741     2.15e- 3  2.63e-21     11.4 
13 mu_1       0.4      1.15      8.12e- 2  1.68e-15      8.63
14 mu_1       0.5      1.35      4.68e- 1  5.01e-11     10.0 
15 mu_1       0.6      1.27      7.25e- 1  1.81e- 7     12.9 
16 mu_1       0.7      1.27      6.01e- 1  2.12e-10     11.8 
17 mu_1       0.8      1.30      1.37e- 1  8.44e-15      8.79
18 mu_1       0.9      1.22      5.36e- 4  1.26e-24     17.7 
19 mu_0       0.1      0.980     6.50e-12  2.94e-46     70.9 
20 mu_0       0.2      1.10      8.08e- 7  8.28e-32     38.3 
21 mu_0       0.3      0.790     4.81e- 4  2.35e-23     16.8 
22 mu_0       0.4      1.01      2.88e- 2  2.33e-17      7.66
23 mu_0       0.5      1.32      3.11e- 1  1.04e-12     10.0 
24 mu_0       0.6      1.27      6.93e- 1  6.60e- 9     10.1 
25 mu_0       0.7      1.24      5.61e- 1  5.93e- 9     14.5 
26 mu_0       0.8      1.33      2.79e- 1  1.28e-13      9.50
27 mu_0       0.9      1.24      2.90e- 3  4.29e-23     10.6 
[1] "Total run time was 241.292 seconds"
