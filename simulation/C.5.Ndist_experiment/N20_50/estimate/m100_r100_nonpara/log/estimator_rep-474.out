
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3625"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 1  3  3  3  3  5  5  4  1  1  1  1  2  2  4  1  5  5  5  7  5  2  3  4  1  5 
46 47 48 49 50 
 1  3  4  3  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04611 0.38613 0.62043 1.00000 5.00000 
[1] "event indicator table: "

   0    1 
2146 1479 
[1] "treatment indicator table: "

   0    1 
1254 2371 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1833
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 45"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1792
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 205.227 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.292 0.0534
 2 mu         0.1   0.2 0.446 0.0714
 3 mu         0.1   0.3 0.481 0.0746
 4 mu         0.1   0.4 0.503 0.0815
 5 mu         0.1   0.5 0.528 0.0946
 6 mu         0.2   0.1 0.312 0.0302
 7 mu         0.2   0.2 0.459 0.0387
 8 mu         0.2   0.3 0.504 0.0371
 9 mu         0.2   0.4 0.535 0.0385
10 mu         0.2   0.5 0.575 0.0502
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.993        0.401  0.000243      8.62
 2 mu         0.2      1.10         0.961  0.0467        3.56
 3 mu         0.3      1.08         1.05   0.200         2.39
 4 mu         0.4      1.04         1.01   0.360         1.92
 5 mu         0.5      1.00         0.996  0.543         1.46
 6 mu         0.6      0.973        0.968  0.549         1.26
 7 mu         0.7      0.993        0.968  0.764         1.34
 8 mu         0.8      1.00         1.00   0.590         1.36
 9 mu         0.9      0.989        0.987  0.370         1.55
10 mu_1       0.1      1.03         0.591  0.000766      7.36
11 mu_1       0.2      1.11         0.970  0.0791        3.34
12 mu_1       0.3      1.07         1.09   0.223         2.49
13 mu_1       0.4      1.04         1.01   0.333         1.83
14 mu_1       0.5      0.995        0.989  0.544         1.44
15 mu_1       0.6      0.973        0.967  0.568         1.28
16 mu_1       0.7      0.995        0.969  0.746         1.34
17 mu_1       0.8      1.00         0.996  0.582         1.36
18 mu_1       0.9      0.988        0.985  0.369         1.55
19 mu_0       0.1      0.989        0.371  0.000185      9.29
20 mu_0       0.2      1.10         0.957  0.0386        3.72
21 mu_0       0.3      1.08         1.05   0.190         2.36
22 mu_0       0.4      1.05         1.01   0.377         2.00
23 mu_0       0.5      1.01         1.01   0.541         1.48
24 mu_0       0.6      0.975        0.960  0.520         1.30
25 mu_0       0.7      0.988        0.966  0.746         1.34
26 mu_0       0.8      1.00         0.991  0.622         1.41
27 mu_0       0.9      0.996        0.997  0.373         1.57
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.0912     5.92e-15  2.42e-36      8.88
 2 mu         0.2     0.481      2.18e- 8  2.10e-23     26.9 
 3 mu         0.3     1.43       1.22e- 4  2.26e-16     41.1 
 4 mu         0.4     1.63       1.03e- 2  1.42e-11     33.8 
 5 mu         0.5     1.20       2.26e- 1  6.17e- 8     11.5 
 6 mu         0.6     0.971      3.57e- 1  4.65e- 5      8.09
 7 mu         0.7     1.03       6.09e- 1  4.28e- 5      5.33
 8 mu         0.8     1.46       5.27e- 1  7.97e-10     17.5 
 9 mu         0.9     1.47       7.37e- 3  6.87e-19     14.7 
10 mu_1       0.1     0.185      3.83e-14  2.13e-35     17.8 
11 mu_1       0.2     0.621      7.00e- 8  9.25e-23     26.9 
12 mu_1       0.3     1.59       2.74e- 4  7.02e-16     46.6 
13 mu_1       0.4     1.57       1.76e- 2  3.30e-11     28.7 
14 mu_1       0.5     1.16       2.72e- 1  1.15e- 7     11.9 
15 mu_1       0.6     0.953      4.14e- 1  7.20e- 5      6.99
16 mu_1       0.7     1.05       5.42e- 1  1.22e- 5      5.08
17 mu_1       0.8     1.48       4.47e- 1  3.39e-10     17.9 
18 mu_1       0.9     1.46       5.48e- 3  2.60e-19     15.7 
19 mu_0       0.1     0.0807     1.67e-15  0             7.89
20 mu_0       0.2     0.446      9.75e- 9  0            26.9 
21 mu_0       0.3     1.36       4.95e- 5  0            38.8 
22 mu_0       0.4     1.67       5.45e- 3  0            37.2 
23 mu_0       0.5     1.24       1.60e- 1  0            11.0 
24 mu_0       0.6     0.998      3.32e- 1  0             9.73
25 mu_0       0.7     0.982      6.81e- 1  0             5.92
26 mu_0       0.8     1.36       5.93e- 1  0            16.1 
27 mu_0       0.9     1.54       1.78e- 2  0            14.4 
[1] "Total run time was 208.446 seconds"
