
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3434"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 2  3  3  2  8  3  1  6  2  4  4  7  3  2  5  2  2  4  3  5  1  1  4  2  2  4 
46 47 48 49 50 
 4  2  2  3  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03536 0.34611 0.60497 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
2030 1404 
[1] "treatment indicator table: "

   0    1 
1308 2126 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1790
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 36"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1644
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 46"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 373.805 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.402 0.0705
 2 mu         0.1   0.2 0.440 0.0793
 3 mu         0.1   0.3 0.472 0.0903
 4 mu         0.1   0.4 0.503 0.0998
 5 mu         0.1   0.5 0.564 0.121 
 6 mu         0.2   0.1 0.429 0.0453
 7 mu         0.2   0.2 0.481 0.0356
 8 mu         0.2   0.3 0.547 0.0489
 9 mu         0.2   0.4 0.584 0.0487
10 mu         0.2   0.5 0.630 0.0543
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.921        0.570  0.000523     13.3 
 2 mu         0.2      1.04         0.949  0.0625        3.28
 3 mu         0.3      1.02         0.969  0.422         1.95
 4 mu         0.4      1.00         0.989  0.502         1.49
 5 mu         0.5      0.990        0.986  0.751         1.25
 6 mu         0.6      0.997        0.987  0.713         1.27
 7 mu         0.7      1.00         0.982  0.779         1.21
 8 mu         0.8      1.02         1.01   0.733         1.28
 9 mu         0.9      1.00         0.969  0.454         1.83
10 mu_1       0.1      0.950        0.769  0.00163       5.84
11 mu_1       0.2      1.04         0.952  0.108         2.77
12 mu_1       0.3      1.02         0.956  0.469         1.89
13 mu_1       0.4      0.996        0.980  0.514         1.42
14 mu_1       0.5      0.990        0.984  0.744         1.24
15 mu_1       0.6      0.998        0.989  0.715         1.27
16 mu_1       0.7      1.00         0.979  0.777         1.22
17 mu_1       0.8      1.02         1.01   0.737         1.29
18 mu_1       0.9      1.00         0.969  0.432         1.87
19 mu_0       0.1      0.918        0.535  0.000390     14.3 
20 mu_0       0.2      1.03         0.979  0.0511        3.41
21 mu_0       0.3      1.02         0.963  0.373         1.98
22 mu_0       0.4      1.00         0.984  0.495         1.53
23 mu_0       0.5      0.991        0.985  0.721         1.29
24 mu_0       0.6      0.995        0.983  0.710         1.27
25 mu_0       0.7      1.00         0.985  0.772         1.23
26 mu_0       0.8      1.01         1.00   0.716         1.34
27 mu_0       0.9      1.00         0.974  0.555         1.43
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.203     2.04e-12  9.48e-40     13.0 
 2 mu         0.2      1.13      7.22e- 7  1.32e-26     31.2 
 3 mu         0.3      1.77      1.20e- 3  5.65e-19     42.9 
 4 mu         0.4      1.54      5.55e- 2  1.30e-13     10.2 
 5 mu         0.5      1.16      3.32e- 1  1.66e- 9      9.51
 6 mu         0.6      0.896     4.54e- 1  3.25e- 6      5.52
 7 mu         0.7      1.06      6.53e- 1  1.88e- 6      5.44
 8 mu         0.8      1.29      3.51e- 1  2.73e-11     11.9 
 9 mu         0.9      1.14      1.71e- 3  1.05e-20     20.1 
10 mu_1       0.1      0.398     1.13e-11  9.07e-39     24.0 
11 mu_1       0.2      1.35      2.62e- 6  6.30e-26     40.8 
12 mu_1       0.3      1.77      2.31e- 3  1.80e-18     37.5 
13 mu_1       0.4      1.49      9.35e- 2  3.12e-13     10.7 
14 mu_1       0.5      1.12      3.28e- 1  3.18e- 9      9.26
15 mu_1       0.6      0.889     5.45e- 1  5.17e- 6      5.09
16 mu_1       0.7      1.09      6.53e- 1  6.93e- 7      5.37
17 mu_1       0.8      1.28      3.47e- 1  9.28e-12     12.1 
18 mu_1       0.9      1.15      1.28e- 3  3.72e-21     21.4 
19 mu_0       0.1      0.182     1.01e-12  4.58e-41     11.7 
20 mu_0       0.2      1.07      2.85e- 7  7.16e-28     31.7 
21 mu_0       0.3      1.77      6.61e- 4  3.51e-20     45.3 
22 mu_0       0.4      1.57      3.02e- 2  9.45e-15     10.5 
23 mu_0       0.5      1.21      2.50e- 1  1.45e-10      9.77
24 mu_0       0.6      0.906     3.63e- 1  3.53e- 7      6.18
25 mu_0       0.7      0.992     6.14e- 1  4.62e- 6      5.61
26 mu_0       0.8      1.32      3.17e- 1  9.28e-11     11.1 
27 mu_0       0.9      1.03      5.63e- 3  7.11e-20      7.98
[1] "Total run time was 379.206 seconds"
