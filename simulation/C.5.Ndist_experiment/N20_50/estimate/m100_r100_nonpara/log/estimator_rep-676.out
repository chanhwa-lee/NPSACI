
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3445"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 43 44 45 46 
 2  4  6  3  5  4  2  4  3  2  2  5  3  2  2  5  1  2  4  6  3  7  1  3  2  4 
47 48 49 50 
 3  6  3  1 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03082 0.36132 0.62677 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
2076 1369 
[1] "treatment indicator table: "

   0    1 
1301 2144 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1769
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1676
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 50"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 268.994 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.462 0.0918
 2 mu         0.1   0.2 0.541 0.114 
 3 mu         0.1   0.3 0.606 0.118 
 4 mu         0.1   0.4 0.663 0.131 
 5 mu         0.1   0.5 0.736 0.143 
 6 mu         0.2   0.1 0.369 0.0429
 7 mu         0.2   0.2 0.443 0.0540
 8 mu         0.2   0.3 0.500 0.0407
 9 mu         0.2   0.4 0.544 0.0465
10 mu         0.2   0.5 0.597 0.0525
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.06         0.242 0.000120      15.7 
 2 mu         0.2      0.910        0.850 0.0357         2.85
 3 mu         0.3      0.922        0.923 0.215          2.23
 4 mu         0.4      1.00         1.00  0.366          1.66
 5 mu         0.5      1.01         1.00  0.557          1.36
 6 mu         0.6      1.00         1.00  0.655          1.31
 7 mu         0.7      0.996        0.998 0.720          1.34
 8 mu         0.8      0.984        0.979 0.590          1.50
 9 mu         0.9      0.990        0.960 0.396          2.12
10 mu_1       0.1      1.03         0.433 0.000385       9.27
11 mu_1       0.2      0.883        0.841 0.0692         2.59
12 mu_1       0.3      0.942        0.959 0.231          2.27
13 mu_1       0.4      1.01         1.01  0.390          1.61
14 mu_1       0.5      1.01         1.00  0.583          1.38
15 mu_1       0.6      1.00         1.01  0.665          1.27
16 mu_1       0.7      0.995        0.993 0.705          1.37
17 mu_1       0.8      0.984        0.974 0.574          1.48
18 mu_1       0.9      0.991        0.958 0.379          2.18
19 mu_0       0.1      1.06         0.219 0.0000910     16.4 
20 mu_0       0.2      0.917        0.848 0.0273         2.91
21 mu_0       0.3      0.913        0.908 0.208          2.22
22 mu_0       0.4      0.996        1.01  0.347          1.79
23 mu_0       0.5      1.01         1.00  0.531          1.38
24 mu_0       0.6      1.01         1.00  0.632          1.38
25 mu_0       0.7      0.998        1.01  0.701          1.27
26 mu_0       0.8      0.985        0.982 0.653          1.56
27 mu_0       0.9      0.983        0.966 0.453          1.73
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.0328     2.03e-12  4.96e-38      2.58
 2 mu         0.2     0.582      3.29e- 7  5.46e-26     16.9 
 3 mu         0.3     1.44       3.77e- 4  6.04e-19     46.7 
 4 mu         0.4     1.66       3.57e- 2  6.00e-14     26.2 
 5 mu         0.5     1.34       3.56e- 1  4.52e-10     11.2 
 6 mu         0.6     1.15       7.15e- 1  6.64e- 7      7.06
 7 mu         0.7     1.21       9.26e- 1  2.32e-10      6.26
 8 mu         0.8     1.14       1.96e- 1  2.35e-16      7.19
 9 mu         0.9     0.984      8.03e- 4  4.94e-27     13.0 
10 mu_1       0.1     0.0700     1.47e-11  4.96e-37      5.05
11 mu_1       0.2     0.780      1.07e- 6  2.73e-25     16.6 
12 mu_1       0.3     1.59       8.88e- 4  2.01e-18     49.4 
13 mu_1       0.4     1.65       5.79e- 2  1.50e-13     20.8 
14 mu_1       0.5     1.29       4.05e- 1  9.03e-10     10.3 
15 mu_1       0.6     1.14       6.90e- 1  7.91e- 7      6.87
16 mu_1       0.7     1.21       1.00e+ 0  6.47e-11      5.96
17 mu_1       0.8     1.14       1.95e- 1  5.75e-17      7.27
18 mu_1       0.9     0.984      5.53e- 4  1.07e-27     13.3 
19 mu_0       0.1     0.0286     6.31e-13  0             2.31
20 mu_0       0.2     0.532      1.57e- 7  0            17.0 
21 mu_0       0.3     1.38       1.70e- 4  0            45.6 
22 mu_0       0.4     1.67       2.09e- 2  0            29.9 
23 mu_0       0.5     1.39       2.58e- 1  0            12.0 
24 mu_0       0.6     1.15       6.17e- 1  0             7.36
25 mu_0       0.7     1.20       9.28e- 1  0             6.96
26 mu_0       0.8     1.17       2.40e- 1  0             6.88
27 mu_0       0.9     0.985      1.95e- 3  0            12.1 
[1] "Total run time was 274.139 seconds"
