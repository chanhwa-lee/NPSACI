
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3430"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 4  7  4  2  1  2  4  3  3  3  4  2  4  5  2  5  4  5  4  3  1  1  3  4  1  2 
46 47 48 49 50 
 4  5  3  3  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02092 0.31517 0.56363 0.94993 5.00000 
[1] "event indicator table: "

   0    1 
2068 1362 
[1] "treatment indicator table: "

   0    1 
1256 2174 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1732
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1698
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 204.674 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.225 0.0394
 2 mu         0.1   0.2 0.233 0.0546
 3 mu         0.1   0.3 0.235 0.0768
 4 mu         0.1   0.4 0.257 0.0944
 5 mu         0.1   0.5 0.253 0.104 
 6 mu         0.2   0.1 0.260 0.0306
 7 mu         0.2   0.2 0.281 0.0430
 8 mu         0.2   0.3 0.294 0.0626
 9 mu         0.2   0.4 0.324 0.0788
10 mu         0.2   0.5 0.325 0.0868
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1      0.540       0.0461 0.00000000721      4.66
 2 mu         0.2      0.695       0.596  0.000395           5.18
 3 mu         0.3      0.868       0.856  0.0491             2.87
 4 mu         0.4      0.961       0.983  0.410              1.57
 5 mu         0.5      0.993       0.995  0.612              1.34
 6 mu         0.6      1.01        1.01   0.781              1.23
 7 mu         0.7      1.02        1.02   0.779              1.29
 8 mu         0.8      0.966       0.955  0.542              1.36
 9 mu         0.9      0.948       0.924  0.0956             2.65
10 mu_1       0.1      0.543       0.114  0.0000000310       3.09
11 mu_1       0.2      0.747       0.740  0.000858           5.04
12 mu_1       0.3      0.897       0.913  0.0725             2.29
13 mu_1       0.4      0.970       1.00   0.468              1.53
14 mu_1       0.5      0.995       0.998  0.639              1.30
15 mu_1       0.6      1.02        1.02   0.772              1.23
16 mu_1       0.7      1.02        1.02   0.775              1.30
17 mu_1       0.8      0.963       0.960  0.544              1.37
18 mu_1       0.9      0.950       0.924  0.0871             2.81
19 mu_0       0.1      0.540       0.0382 0.00000000457      4.83
20 mu_0       0.2      0.683       0.554  0.000279           5.21
21 mu_0       0.3      0.855       0.845  0.0390             3.12
22 mu_0       0.4      0.955       0.973  0.367              1.59
23 mu_0       0.5      0.991       0.993  0.584              1.38
24 mu_0       0.6      1.01        1.00   0.761              1.23
25 mu_0       0.7      1.02        1.03   0.781              1.29
26 mu_0       0.8      0.980       0.981  0.535              1.34
27 mu_0       0.9      0.932       0.927  0.173              1.78
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     50.9       1.66e-12  4.08e-36   5085.  
 2 mu         0.2      8.75      5.58e- 7  1.12e-24    834.  
 3 mu         0.3      1.49      7.27e- 4  5.52e-18     34.3 
 4 mu         0.4      1.47      4.65e- 2  3.09e-13     28.8 
 5 mu         0.5      1.11      3.94e- 1  1.49e- 9      9.70
 6 mu         0.6      0.999     7.33e- 1  1.52e- 6      5.00
 7 mu         0.7      1.09      9.07e- 1  3.14e-10      4.26
 8 mu         0.8      1.16      1.92e- 1  7.24e-16      7.66
 9 mu         0.9      0.639     9.13e- 4  1.20e-25     13.9 
10 mu_1       0.1     42.5       1.03e-11  4.08e-35   4238.  
11 mu_1       0.2      4.05      1.90e- 6  5.61e-24    348.  
12 mu_1       0.3      1.37      1.57e- 3  1.84e-17     31.4 
13 mu_1       0.4      1.42      7.61e- 2  7.72e-13     28.2 
14 mu_1       0.5      1.07      5.16e- 1  2.97e- 9      7.59
15 mu_1       0.6      1.00      7.62e- 1  3.64e- 7      5.11
16 mu_1       0.7      1.10      8.12e- 1  3.74e-11      4.31
17 mu_1       0.8      1.15      1.45e- 1  7.54e-17      8.13
18 mu_1       0.9      0.613     6.01e- 4  1.11e-26     13.6 
19 mu_0       0.1     51.8       6.99e-13  0          5179.  
20 mu_0       0.2      9.93      2.53e- 7  0           956.  
21 mu_0       0.3      1.54      3.44e- 4  0            45.0 
22 mu_0       0.4      1.50      2.74e- 2  0            29.2 
23 mu_0       0.5      1.15      2.97e- 1  0            11.8 
24 mu_0       0.6      0.993     7.62e- 1  0             4.84
25 mu_0       0.7      1.07      1.03e+ 0  0             4.14
26 mu_0       0.8      1.18      3.49e- 1  0             5.74
27 mu_0       0.9      0.872     3.19e- 3  0            17.0 
[1] "Total run time was 207.797 seconds"
