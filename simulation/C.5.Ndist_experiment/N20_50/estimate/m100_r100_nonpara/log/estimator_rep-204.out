
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3475"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 3  5  2  5  2  2  4  2  5  4  3  2  1  5  4  2  4  2  4  7  3  3  2  4  3  2 
46 47 48 49 50 
 2  4  2  6  1 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02071 0.31320 0.57243 1.00000 4.80180 
[1] "event indicator table: "

   0    1 
2076 1399 
[1] "treatment indicator table: "

   0    1 
1282 2193 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1733
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 41"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1742
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 6"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 187.482 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.442 0.145 
 2 mu         0.1   0.2 0.590 0.181 
 3 mu         0.1   0.3 0.637 0.159 
 4 mu         0.1   0.4 0.694 0.174 
 5 mu         0.1   0.5 0.709 0.163 
 6 mu         0.2   0.1 0.342 0.0822
 7 mu         0.2   0.2 0.477 0.101 
 8 mu         0.2   0.3 0.532 0.0823
 9 mu         0.2   0.4 0.591 0.0904
10 mu         0.2   0.5 0.621 0.0816
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      1.00         0.269 0.000000516      9.63
 2 mu         0.2      1.02         0.925 0.00273          2.69
 3 mu         0.3      1.02         0.989 0.112            2.08
 4 mu         0.4      0.999        0.981 0.593            1.60
 5 mu         0.5      1.01         1.00  0.682            1.37
 6 mu         0.6      1.01         0.996 0.817            1.34
 7 mu         0.7      1.00         1.01  0.772            1.22
 8 mu         0.8      0.996        0.991 0.661            1.32
 9 mu         0.9      0.993        0.970 0.165            2.34
10 mu_1       0.1      0.932        0.456 0.00000206       4.26
11 mu_1       0.2      1.03         0.987 0.00557          2.48
12 mu_1       0.3      1.02         1.03  0.159            2.00
13 mu_1       0.4      0.998        0.970 0.584            1.55
14 mu_1       0.5      1.01         1.00  0.699            1.37
15 mu_1       0.6      1.01         0.990 0.839            1.34
16 mu_1       0.7      1.00         1.00  0.767            1.22
17 mu_1       0.8      0.996        0.994 0.637            1.34
18 mu_1       0.9      0.994        0.980 0.153            2.39
19 mu_0       0.1      1.01         0.244 0.000000344     10.7 
20 mu_0       0.2      1.02         0.921 0.00201          2.76
21 mu_0       0.3      1.02         0.960 0.0920           2.12
22 mu_0       0.4      1.00         0.979 0.533            1.63
23 mu_0       0.5      1.00         1.01  0.646            1.37
24 mu_0       0.6      1.02         1.01  0.762            1.35
25 mu_0       0.7      1.01         1.01  0.783            1.24
26 mu_0       0.8      0.995        0.975 0.729            1.33
27 mu_0       0.9      0.987        0.961 0.273            1.91
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.548     2.55e-12  1.29e-38     53.2 
 2 mu         0.2      0.961     4.06e- 7  1.59e-25     50.4 
 3 mu         0.3      1.29      3.92e- 4  5.97e-18     30.1 
 4 mu         0.4      1.06      4.14e- 2  1.18e-12     12.2 
 5 mu         0.5      0.991     4.78e- 1  1.26e- 8      7.35
 6 mu         0.6      1.08      5.28e- 1  1.96e- 5      5.22
 7 mu         0.7      1.07      7.48e- 1  1.86e- 7      5.19
 8 mu         0.8      1.03      3.04e- 1  1.24e-12      5.09
 9 mu         0.9      1.69      1.05e- 3  3.76e-22     40.6 
10 mu_1       0.1      0.800     1.73e-11  1.21e-37     76.1 
11 mu_1       0.2      0.985     1.32e- 6  7.46e-25     36.0 
12 mu_1       0.3      1.30      8.68e- 4  1.86e-17     30.5 
13 mu_1       0.4      1.02      6.54e- 2  2.77e-12      9.25
14 mu_1       0.5      1.01      4.56e- 1  2.35e- 8      7.35
15 mu_1       0.6      1.09      6.02e- 1  3.06e- 5      5.00
16 mu_1       0.7      1.07      8.07e- 1  7.75e- 8      4.95
17 mu_1       0.8      1.04      2.49e- 1  4.53e-13      5.09
18 mu_1       0.9      1.72      7.52e- 4  1.22e-22     42.8 
19 mu_0       0.1      0.521     6.24e-13  9.14e-40     50.7 
20 mu_0       0.2      0.954     1.37e- 7  1.27e-26     54.0 
21 mu_0       0.3      1.29      1.78e- 4  5.45e-19     29.9 
22 mu_0       0.4      1.09      2.53e- 2  1.26e-13     14.1 
23 mu_0       0.5      0.972     3.25e- 1  1.60e- 9      7.35
24 mu_0       0.6      1.07      4.78e- 1  3.13e- 6      5.53
25 mu_0       0.7      1.07      8.15e- 1  4.39e- 7      5.77
26 mu_0       0.8      1.02      3.22e- 1  4.40e-12      5.09
27 mu_0       0.9      1.41      3.78e- 3  2.67e-21     20.3 
[1] "Total run time was 190.561 seconds"
