
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3642"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 2  3  3  4  1  5  1  2  3  1  6  1  3  3  8  2  2  2  8  2  1  2  1  3  2  5 
46 47 48 49 50 
 3  6  5  3  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02254 0.30562 0.57574 0.98624 5.00000 
[1] "event indicator table: "

   0    1 
2225 1417 
[1] "treatment indicator table: "

   0    1 
1307 2335 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1879
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1763
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 211.838 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.370 0.0432
 2 mu         0.1   0.2 0.531 0.0723
 3 mu         0.1   0.3 0.561 0.0671
 4 mu         0.1   0.4 0.643 0.0776
 5 mu         0.1   0.5 0.683 0.0760
 6 mu         0.2   0.1 0.320 0.0222
 7 mu         0.2   0.2 0.445 0.0358
 8 mu         0.2   0.3 0.490 0.0303
 9 mu         0.2   0.4 0.554 0.0360
10 mu         0.2   0.5 0.605 0.0385
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.06         0.744   0.00384      5.73
 2 mu         0.2      1.01         0.922   0.227        2.35
 3 mu         0.3      1.04         1.04    0.523        1.85
 4 mu         0.4      1.03         1.00    0.517        1.53
 5 mu         0.5      1.00         0.998   0.589        1.35
 6 mu         0.6      1.00         0.998   0.643        1.29
 7 mu         0.7      1.02         1.01    0.726        1.37
 8 mu         0.8      0.981        0.973   0.488        1.46
 9 mu         0.9      0.936        0.924   0.436        1.70
10 mu_1       0.1      1.03         0.895   0.00945      4.78
11 mu_1       0.2      1.02         0.936   0.321        2.27
12 mu_1       0.3      1.04         1.02    0.566        1.73
13 mu_1       0.4      1.02         1.01    0.509        1.50
14 mu_1       0.5      1.00         0.993   0.597        1.30
15 mu_1       0.6      1.00         1.00    0.657        1.30
16 mu_1       0.7      1.02         1.00    0.718        1.38
17 mu_1       0.8      0.977        0.982   0.481        1.45
18 mu_1       0.9      0.935        0.918   0.431        1.71
19 mu_0       0.1      1.06         0.712   0.00322      6.08
20 mu_0       0.2      1.00         0.910   0.203        2.43
21 mu_0       0.3      1.04         1.04    0.496        1.90
22 mu_0       0.4      1.03         1.01    0.522        1.56
23 mu_0       0.5      1.01         0.997   0.558        1.39
24 mu_0       0.6      1.00         0.994   0.622        1.29
25 mu_0       0.7      1.02         1.02    0.744        1.34
26 mu_0       0.8      0.995        0.988   0.519        1.52
27 mu_0       0.9      0.938        0.913   0.421        1.60
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.0695     1.16e-12  4.88e-42      4.58
 2 mu         0.2     0.749      5.95e- 7  1.53e-28     14.8 
 3 mu         0.3     1.39       3.73e- 4  1.12e-20     17.9 
 4 mu         0.4     0.999      1.88e- 2  4.02e-15     10.9 
 5 mu         0.5     1.05       1.85e- 1  7.70e-11     19.3 
 6 mu         0.6     1.12       5.60e- 1  2.25e- 7      6.39
 7 mu         0.7     1.15       5.62e- 1  2.74e- 8      6.67
 8 mu         0.8     1.15       3.75e- 1  9.34e-14      8.82
 9 mu         0.9     1.16       4.23e- 3  1.12e-23     17.9 
10 mu_1       0.1     0.144      6.66e-12  4.77e-41      8.33
11 mu_1       0.2     0.976      2.27e- 6  7.46e-28     19.0 
12 mu_1       0.3     1.39       8.30e- 4  3.65e-20     15.3 
13 mu_1       0.4     0.953      3.31e- 2  9.84e-15     13.0 
14 mu_1       0.5     1.07       2.16e- 1  1.51e-10     18.5 
15 mu_1       0.6     1.13       5.79e- 1  3.67e- 7      6.15
16 mu_1       0.7     1.15       5.55e- 1  1.00e- 8      7.06
17 mu_1       0.8     1.15       3.45e- 1  2.98e-14      8.95
18 mu_1       0.9     1.16       3.38e- 3  3.17e-24     19.1 
19 mu_0       0.1     0.0611     5.30e-13  1.18e-43      4.16
20 mu_0       0.2     0.692      1.93e- 7  4.14e-30     13.8 
21 mu_0       0.3     1.40       1.77e- 4  3.48e-22     19.0 
22 mu_0       0.4     1.03       9.30e- 3  1.46e-16     10.7 
23 mu_0       0.5     1.02       1.55e- 1  3.35e-12     20.1 
24 mu_0       0.6     1.11       4.09e- 1  1.22e- 8      6.75
25 mu_0       0.7     1.14       6.43e- 1  6.80e- 8      5.77
26 mu_0       0.8     1.17       4.81e- 1  3.48e-13      8.27
27 mu_0       0.9     1.13       1.19e- 2  8.32e-23     12.7 
[1] "Total run time was 214.942 seconds"
