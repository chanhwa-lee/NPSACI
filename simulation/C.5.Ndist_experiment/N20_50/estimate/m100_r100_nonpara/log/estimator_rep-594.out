
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3512"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 38 39 40 41 42 43 44 45 46 
 4  3  2  5  2  3  5  2  3  4  4  6  3  2  3  1  2  4  2  4  5  3  4  3  4  2 
47 48 49 50 
 1  6  6  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.01691 0.28693 0.54899 0.89199 6.11620 
[1] "event indicator table: "

   0    1 
2087 1425 
[1] "treatment indicator table: "

   0    1 
1332 2180 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1691
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 45"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1821
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 251.304 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.474 0.149 
 2 mu         0.1   0.2 0.514 0.177 
 3 mu         0.1   0.3 0.512 0.166 
 4 mu         0.1   0.4 0.525 0.176 
 5 mu         0.1   0.5 0.634 0.116 
 6 mu         0.2   0.1 0.485 0.129 
 7 mu         0.2   0.2 0.552 0.146 
 8 mu         0.2   0.3 0.588 0.125 
 9 mu         0.2   0.4 0.623 0.126 
10 mu         0.2   0.5 0.692 0.0924
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.861        0.584 0.0000206      4.31
 2 mu         0.2      1.02         1.01  0.0299         2.39
 3 mu         0.3      1.01         1.01  0.415          1.58
 4 mu         0.4      1.01         0.985 0.673          1.40
 5 mu         0.5      0.996        0.987 0.658          1.28
 6 mu         0.6      0.992        0.999 0.741          1.18
 7 mu         0.7      0.990        0.986 0.738          1.23
 8 mu         0.8      1.01         1.00  0.620          1.40
 9 mu         0.9      0.999        0.970 0.377          1.78
10 mu_1       0.1      0.965        0.874 0.0000692      3.91
11 mu_1       0.2      1.03         0.996 0.0518         2.12
12 mu_1       0.3      1.01         0.995 0.507          1.57
13 mu_1       0.4      1.01         1.00  0.663          1.40
14 mu_1       0.5      0.995        0.983 0.662          1.25
15 mu_1       0.6      0.991        0.996 0.756          1.16
16 mu_1       0.7      0.990        0.982 0.748          1.24
17 mu_1       0.8      1.01         1.00  0.610          1.42
18 mu_1       0.9      0.997        0.972 0.367          1.80
19 mu_0       0.1      0.850        0.553 0.0000152      4.35
20 mu_0       0.2      1.02         1.00  0.0245         2.46
21 mu_0       0.3      1.01         1.01  0.376          1.60
22 mu_0       0.4      1.01         0.992 0.679          1.41
23 mu_0       0.5      0.997        0.987 0.653          1.31
24 mu_0       0.6      0.994        0.993 0.717          1.21
25 mu_0       0.7      0.989        0.984 0.714          1.21
26 mu_0       0.8      1.00         1.00  0.659          1.32
27 mu_0       0.9      1.01         0.977 0.471          1.63
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.397     2.52e-12  1.18e-41     20.6 
 2 mu         0.2      0.833     1.63e- 6  6.58e-28     30.1 
 3 mu         0.3      0.750     9.49e- 4  6.35e-20     12.0 
 4 mu         0.4      0.903     7.45e- 2  2.61e-14      7.32
 5 mu         0.5      1.05      5.44e- 1  5.19e-10      3.51
 6 mu         0.6      1.09      8.89e- 1  4.54e- 7      4.18
 7 mu         0.7      0.954     5.51e- 1  4.85e-11      3.41
 8 mu         0.8      0.950     1.10e- 1  7.43e-17      5.06
 9 mu         0.9      1.34      1.60e- 4  4.38e-27     20.2 
10 mu_1       0.1      0.643     1.48e-11  1.13e-40     30.6 
11 mu_1       0.2      0.828     5.37e- 6  3.15e-27     26.1 
12 mu_1       0.3      0.752     2.11e- 3  2.03e-19     10.6 
13 mu_1       0.4      0.939     1.11e- 1  6.24e-14      6.10
14 mu_1       0.5      1.06      6.78e- 1  9.95e-10      3.53
15 mu_1       0.6      1.08      9.09e- 1  1.11e- 7      4.26
16 mu_1       0.7      0.942     5.11e- 1  1.01e-11      3.43
17 mu_1       0.8      0.963     8.22e- 2  1.36e-17      5.46
18 mu_1       0.9      1.34      1.06e- 4  7.13e-28     20.8 
19 mu_0       0.1      0.370     1.15e-12  5.48e-43     19.6 
20 mu_0       0.2      0.834     6.05e- 7  3.43e-29     31.0 
21 mu_0       0.3      0.749     4.51e- 4  3.78e-21     14.2 
22 mu_0       0.4      0.878     5.61e- 2  1.81e-15      8.13
23 mu_0       0.5      1.04      3.98e- 1  4.33e-11      3.73
24 mu_0       0.6      1.09      7.71e- 1  1.52e- 7      4.05
25 mu_0       0.7      0.981     4.94e- 1  1.38e-10      3.70
26 mu_0       0.8      0.898     1.47e- 1  3.17e-16      4.20
27 mu_0       0.9      1.34      6.44e- 4  3.74e-26     14.4 
[1] "Total run time was 254.855 seconds"
