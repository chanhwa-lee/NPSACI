
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3593"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 3  2  2  2  3  2  5  3  5  2  4  3  3  1  3  6  1  2  2  4  5  5  1  6  4  3 
46 47 48 49 50 
 6  2  5  2  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03224 0.34056 0.61699 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
2099 1494 
[1] "treatment indicator table: "

   0    1 
1331 2262 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1815
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1778
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 88"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 207.153 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.460 0.0764
 2 mu         0.1   0.2 0.542 0.0817
 3 mu         0.1   0.3 0.620 0.0872
 4 mu         0.1   0.4 0.627 0.0818
 5 mu         0.1   0.5 0.677 0.0864
 6 mu         0.2   0.1 0.392 0.0378
 7 mu         0.2   0.2 0.475 0.0334
 8 mu         0.2   0.3 0.554 0.0390
 9 mu         0.2   0.4 0.578 0.0426
10 mu         0.2   0.5 0.622 0.0442
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.07         0.882   0.00251      3.62
 2 mu         0.2      1.13         1.09    0.0900       3.45
 3 mu         0.3      1.04         1.03    0.214        2.10
 4 mu         0.4      1.01         0.983   0.344        1.76
 5 mu         0.5      0.998        0.973   0.560        1.63
 6 mu         0.6      0.996        0.987   0.631        1.40
 7 mu         0.7      0.991        0.991   0.709        1.29
 8 mu         0.8      0.982        0.992   0.529        1.38
 9 mu         0.9      1.00         0.992   0.560        1.53
10 mu_1       0.1      1.15         1.03    0.00779      3.47
11 mu_1       0.2      1.11         1.06    0.146        3.22
12 mu_1       0.3      1.03         1.02    0.198        1.90
13 mu_1       0.4      1.00         0.988   0.404        1.72
14 mu_1       0.5      0.998        0.966   0.564        1.65
15 mu_1       0.6      0.996        0.987   0.654        1.38
16 mu_1       0.7      0.992        0.999   0.694        1.29
17 mu_1       0.8      0.982        0.981   0.523        1.38
18 mu_1       0.9      1.01         0.998   0.534        1.54
19 mu_0       0.1      1.06         0.868   0.00193      3.76
20 mu_0       0.2      1.14         1.09    0.0761       3.50
21 mu_0       0.3      1.04         1.04    0.221        2.20
22 mu_0       0.4      1.01         0.990   0.303        1.78
23 mu_0       0.5      0.998        0.966   0.556        1.63
24 mu_0       0.6      0.996        0.984   0.597        1.43
25 mu_0       0.7      0.991        0.984   0.734        1.33
26 mu_0       0.8      0.986        0.999   0.552        1.38
27 mu_0       0.9      0.979        0.974   0.602        1.56
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.571     4.46e-13  4.63e-38     21.9 
 2 mu         0.2      1.01      3.63e- 7  1.61e-25     53.4 
 3 mu         0.3      1.39      6.21e- 4  3.06e-18     45.9 
 4 mu         0.4      1.73      6.70e- 2  3.98e-13     40.9 
 5 mu         0.5      1.52      3.79e- 1  3.25e- 9     10.3 
 6 mu         0.6      1.40      6.29e- 1  3.57e- 8     10.2 
 7 mu         0.7      1.12      3.33e- 1  2.45e-12      8.83
 8 mu         0.8      1.04      2.97e- 1  2.19e-18      9.49
 9 mu         0.9      1.42      1.07e- 3  5.74e-29     17.9 
10 mu_1       0.1      0.827     3.30e-12  4.42e-37     32.5 
11 mu_1       0.2      0.994     1.13e- 6  7.67e-25     48.0 
12 mu_1       0.3      1.53      1.36e- 3  9.74e-18     52.3 
13 mu_1       0.4      1.72      7.92e- 2  9.49e-13     35.0 
14 mu_1       0.5      1.50      4.16e- 1  6.20e- 9      9.81
15 mu_1       0.6      1.38      5.82e- 1  7.25e- 9      9.57
16 mu_1       0.7      1.10      2.99e- 1  4.27e-13      8.29
17 mu_1       0.8      1.04      2.61e- 1  3.34e-19      9.34
18 mu_1       0.9      1.46      8.05e- 4  7.77e-30     18.8 
19 mu_0       0.1      0.543     1.29e-13  0            21.4 
20 mu_0       0.2      1.01      1.79e- 7  0            54.8 
21 mu_0       0.3      1.33      3.14e- 4  0            43.1 
22 mu_0       0.4      1.73      3.98e- 2  0            44.9 
23 mu_0       0.5      1.53      2.41e- 1  0            11.6 
24 mu_0       0.6      1.44      5.20e- 1  0            11.2 
25 mu_0       0.7      1.17      3.56e- 1  0            10.1 
26 mu_0       0.8      1.00      9.98e- 2  0            10.1 
27 mu_0       0.9      1.07      9.78e- 4  0             9.65
[1] "Total run time was 210.511 seconds"
