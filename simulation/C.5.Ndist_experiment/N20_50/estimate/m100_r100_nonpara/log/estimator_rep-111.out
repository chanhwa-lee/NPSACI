
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3437"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 
 3  6  3  3  5  3  2  5  3  2  2  3  5  4  6  3  3  2  5  2  4  4  5  1  2  3 
47 48 50 
 5  3  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03814 0.36577 0.62725 1.00000 7.00000 
[1] "event indicator table: "

   0    1 
1995 1442 
[1] "treatment indicator table: "

   0    1 
1259 2178 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1698
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1739
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 192.834 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.430 0.0938
 2 mu         0.1   0.2 0.445 0.0744
 3 mu         0.1   0.3 0.466 0.0630
 4 mu         0.1   0.4 0.498 0.0784
 5 mu         0.1   0.5 0.497 0.0879
 6 mu         0.2   0.1 0.359 0.0462
 7 mu         0.2   0.2 0.400 0.0368
 8 mu         0.2   0.3 0.456 0.0326
 9 mu         0.2   0.4 0.499 0.0388
10 mu         0.2   0.5 0.523 0.0479
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.863        0.429 0.0000591      6.96
 2 mu         0.2      0.966        0.857 0.0358         3.14
 3 mu         0.3      1.04         1.03  0.386          2.78
 4 mu         0.4      1.01         1.00  0.531          1.95
 5 mu         0.5      1.00         0.997 0.744          1.40
 6 mu         0.6      0.998        0.991 0.802          1.27
 7 mu         0.7      0.996        0.998 0.761          1.33
 8 mu         0.8      0.993        0.985 0.599          1.42
 9 mu         0.9      0.997        0.939 0.441          1.94
10 mu_1       0.1      0.886        0.708 0.000186       4.59
11 mu_1       0.2      0.991        0.921 0.0594         2.95
12 mu_1       0.3      1.04         1.03  0.469          2.71
13 mu_1       0.4      1.01         0.989 0.538          1.76
14 mu_1       0.5      1.00         0.998 0.769          1.38
15 mu_1       0.6      0.998        0.994 0.790          1.28
16 mu_1       0.7      0.995        0.998 0.732          1.34
17 mu_1       0.8      0.993        0.988 0.600          1.42
18 mu_1       0.9      0.996        0.941 0.437          1.96
19 mu_0       0.1      0.861        0.400 0.0000450      7.32
20 mu_0       0.2      0.960        0.839 0.0300         3.27
21 mu_0       0.3      1.04         1.02  0.344          2.81
22 mu_0       0.4      1.02         1.01  0.526          2.08
23 mu_0       0.5      1.00         1.00  0.701          1.42
24 mu_0       0.6      0.999        0.998 0.791          1.26
25 mu_0       0.7      0.998        1.00  0.768          1.30
26 mu_0       0.8      0.991        0.987 0.597          1.43
27 mu_0       0.9      1.00         0.962 0.466          1.75
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.457     1.60e-12  1.58e-45     25.1 
 2 mu         0.2      0.678     7.87e- 7  7.93e-31     21.5 
 3 mu         0.3      1.09      1.18e- 3  2.95e-22     30.7 
 4 mu         0.4      1.03      5.96e- 2  3.35e-16     11.6 
 5 mu         0.5      1.02      4.54e- 1  1.56e-11      6.47
 6 mu         0.6      1.08      6.36e- 1  9.49e- 8      4.18
 7 mu         0.7      1.04      5.44e- 1  5.52e- 8      4.96
 8 mu         0.8      0.945     2.51e- 1  1.64e-13      6.42
 9 mu         0.9      1.22      8.35e- 4  1.24e-23     15.7 
10 mu_1       0.1      0.553     9.27e-12  1.55e-44     29.9 
11 mu_1       0.2      0.734     2.35e- 6  3.88e-30     21.5 
12 mu_1       0.3      1.12      2.48e- 3  9.63e-22     29.3 
13 mu_1       0.4      1.01      8.52e- 2  8.20e-16      8.27
14 mu_1       0.5      1.03      6.09e- 1  3.06e-11      6.02
15 mu_1       0.6      1.08      6.43e- 1  1.55e- 7      4.10
16 mu_1       0.7      1.03      5.81e- 1  2.21e- 8      4.98
17 mu_1       0.8      0.942     1.98e- 1  5.73e-14      6.38
18 mu_1       0.9      1.24      5.87e- 4  3.86e-24     16.9 
19 mu_0       0.1      0.447     7.47e-13  3.52e-47     25.2 
20 mu_0       0.2      0.664     3.95e- 7  1.98e-32     22.9 
21 mu_0       0.3      1.08      6.61e- 4  8.43e-24     31.4 
22 mu_0       0.4      1.04      3.57e- 2  1.12e-17     13.8 
23 mu_0       0.5      1.02      2.98e- 1  6.25e-13      6.93
24 mu_0       0.6      1.07      6.77e- 1  4.74e- 9      4.78
25 mu_0       0.7      1.05      5.90e- 1  1.32e- 7      4.92
26 mu_0       0.8      0.954     3.37e- 1  5.90e-13      6.56
27 mu_0       0.9      1.05      3.07e- 3  8.93e-23     13.0 
[1] "Total run time was 195.991 seconds"
