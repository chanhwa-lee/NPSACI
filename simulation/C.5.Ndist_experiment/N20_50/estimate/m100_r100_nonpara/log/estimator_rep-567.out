
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3447"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 4  5  4  3  2  6  3  3  5  3  4  2  4  1  3  1  3  1  2  3  3  3  8  1  5  2 
46 47 48 49 50 
 2  4  3  3  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03461 0.36940 0.62422 1.00000 7.00000 
[1] "event indicator table: "

   0    1 
2104 1343 
[1] "treatment indicator table: "

   0    1 
1237 2210 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1737
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1710
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 259.632 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.390 0.0738
 2 mu         0.1   0.2 0.450 0.0634
 3 mu         0.1   0.3 0.484 0.0679
 4 mu         0.1   0.4 0.535 0.0784
 5 mu         0.1   0.5 0.593 0.0896
 6 mu         0.2   0.1 0.367 0.0520
 7 mu         0.2   0.2 0.438 0.0335
 8 mu         0.2   0.3 0.473 0.0312
 9 mu         0.2   0.4 0.518 0.0417
10 mu         0.2   0.5 0.580 0.0510
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.926        0.323  0.000894      7.02
 2 mu         0.2      0.973        0.964  0.0822        2.67
 3 mu         0.3      1.01         0.976  0.342         1.89
 4 mu         0.4      1.02         1.06   0.456         1.71
 5 mu         0.5      0.990        0.998  0.471         1.77
 6 mu         0.6      1.01         1.01   0.709         1.61
 7 mu         0.7      1.03         1.02   0.668         1.40
 8 mu         0.8      1.01         1.02   0.661         1.51
 9 mu         0.9      1.01         1.02   0.277         1.75
10 mu_1       0.1      0.973        0.559  0.00245       6.36
11 mu_1       0.2      0.987        0.968  0.121         2.09
12 mu_1       0.3      1.01         0.992  0.365         1.87
13 mu_1       0.4      1.01         1.04   0.435         1.74
14 mu_1       0.5      0.989        1.00   0.499         1.80
15 mu_1       0.6      1.02         1.00   0.697         1.64
16 mu_1       0.7      1.03         1.03   0.668         1.41
17 mu_1       0.8      1.01         1.02   0.656         1.52
18 mu_1       0.9      1.02         1.01   0.267         1.76
19 mu_0       0.1      0.920        0.300  0.000722      7.09
20 mu_0       0.2      0.970        0.933  0.0726        2.81
21 mu_0       0.3      1.01         0.986  0.323         1.90
22 mu_0       0.4      1.02         1.04   0.441         1.68
23 mu_0       0.5      0.991        0.993  0.444         1.74
24 mu_0       0.6      1.01         0.999  0.667         1.57
25 mu_0       0.7      1.03         1.02   0.668         1.44
26 mu_0       0.8      1.02         1.01   0.670         1.54
27 mu_0       0.9      1.01         1.02   0.362         1.58
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.107      1.04e-12  2.93e-39      9.60
 2 mu         0.2     1.01       4.42e- 7  1.29e-25     55.9 
 3 mu         0.3     1.09       4.51e- 4  9.50e-18     18.0 
 4 mu         0.4     1.33       2.89e- 2  2.57e-12     24.3 
 5 mu         0.5     2.01       3.42e- 1  1.03e- 8     58.6 
 6 mu         0.6     1.92       6.37e- 1  4.00e- 6     53.7 
 7 mu         0.7     1.28       5.12e- 1  2.87e-10     17.3 
 8 mu         0.8     1.05       2.80e- 1  1.94e-16      9.41
 9 mu         0.9     1.64       1.41e- 3  2.04e-27     35.0 
10 mu_1       0.1     0.215      6.77e-12  2.69e-38     18.4 
11 mu_1       0.2     1.15       1.43e- 6  5.92e-25     53.5 
12 mu_1       0.3     1.10       9.50e- 4  2.91e-17     14.7 
13 mu_1       0.4     1.42       5.09e- 2  6.25e-12     24.5 
14 mu_1       0.5     2.08       4.12e- 1  2.01e- 8     64.0 
15 mu_1       0.6     1.87       5.07e- 1  1.28e- 6     48.9 
16 mu_1       0.7     1.24       5.31e- 1  7.84e-11     16.2 
17 mu_1       0.8     1.06       2.38e- 1  4.64e-17      8.88
18 mu_1       0.9     1.66       9.62e- 4  4.34e-28     35.8 
19 mu_0       0.1     0.0955     4.05e-13  2.60e-40      8.62
20 mu_0       0.2     0.972      1.95e- 7  1.29e-26     56.5 
21 mu_0       0.3     1.08       2.03e- 4  1.09e-18     19.4 
22 mu_0       0.4     1.28       1.66e- 2  1.10e-13     24.1 
23 mu_0       0.5     1.94       2.13e- 1  5.28e-10     53.3 
24 mu_0       0.6     2.00       5.68e- 1  5.39e- 7     61.1 
25 mu_0       0.7     1.37       4.42e- 1  7.73e-10     19.8 
26 mu_0       0.8     1.03       3.72e- 1  7.84e-16     11.5 
27 mu_0       0.9     1.49       5.45e- 3  1.65e-26     28.0 
[1] "Total run time was 263.487 seconds"
