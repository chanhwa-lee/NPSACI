
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3689"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 41 42 43 44 45 46 
 3  2  2  2  3  4  1  6  3  2  1  3  1  2  4  5  4  3  2  2  5  5  3  4  3  5 
47 48 49 50 
 6  3  7  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0285  0.3158  0.5906  0.9921  5.0000 
[1] "event indicator table: "

   0    1 
2248 1441 
[1] "treatment indicator table: "

   0    1 
1369 2320 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1795
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1894
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 80"
[1] "     Cluster: 86"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 353.328 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.524 0.224 
 2 mu         0.1   0.2 0.596 0.259 
 3 mu         0.1   0.3 0.689 0.302 
 4 mu         0.1   0.4 0.718 0.315 
 5 mu         0.1   0.5 0.765 0.329 
 6 mu         0.2   0.1 0.335 0.0613
 7 mu         0.2   0.2 0.388 0.0543
 8 mu         0.2   0.3 0.470 0.0724
 9 mu         0.2   0.4 0.488 0.0693
10 mu         0.2   0.5 0.514 0.0592
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      1.49         0.380 0.00000217     62.1 
 2 mu         0.2      1.02         0.911 0.00623         3.73
 3 mu         0.3      1.00         0.991 0.133           1.80
 4 mu         0.4      0.991        0.991 0.488           1.60
 5 mu         0.5      0.976        0.950 0.613           1.41
 6 mu         0.6      0.968        0.940 0.725           1.40
 7 mu         0.7      0.997        0.986 0.678           1.50
 8 mu         0.8      1.01         1.01  0.516           1.47
 9 mu         0.9      1.01         0.992 0.368           2.32
10 mu_1       0.1      1.26         0.654 0.00000886     30.3 
11 mu_1       0.2      1.01         0.904 0.0129          2.67
12 mu_1       0.3      0.997        0.984 0.123           1.73
13 mu_1       0.4      0.987        0.981 0.518           1.61
14 mu_1       0.5      0.973        0.954 0.603           1.39
15 mu_1       0.6      0.971        0.958 0.728           1.40
16 mu_1       0.7      1.00         0.983 0.681           1.52
17 mu_1       0.8      1.01         1.01  0.499           1.45
18 mu_1       0.9      1.02         0.993 0.345           2.35
19 mu_0       0.1      1.51         0.351 0.00000142     65.6 
20 mu_0       0.2      1.03         0.903 0.00457         3.99
21 mu_0       0.3      1.01         0.991 0.138           1.86
22 mu_0       0.4      0.994        0.986 0.424           1.60
23 mu_0       0.5      0.978        0.965 0.595           1.45
24 mu_0       0.6      0.964        0.941 0.715           1.40
25 mu_0       0.7      0.990        0.971 0.670           1.47
26 mu_0       0.8      1.01         1.02  0.581           1.53
27 mu_0       0.9      1.01         1.01  0.369           2.04
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.31      3.51e-15  1.31e-40     78.2 
 2 mu         0.2      2.07      2.79e- 8  6.47e-27     65.0 
 3 mu         0.3      1.36      1.55e- 4  5.46e-19     27.2 
 4 mu         0.4      1.11      1.80e- 2  1.92e-13     13.9 
 5 mu         0.5      1.01      1.34e- 1  3.19e- 9      7.00
 6 mu         0.6      1.03      3.67e- 1  3.72e- 7      6.11
 7 mu         0.7      1.08      7.05e- 1  1.96e-11      5.09
 8 mu         0.8      1.10      4.43e- 1  1.01e-17      9.11
 9 mu         0.9      1.36      1.46e- 3  8.42e-29     16.7 
10 mu_1       0.1      1.96      2.51e-14  1.23e-39    109.  
11 mu_1       0.2      1.89      9.02e- 8  3.04e-26     45.1 
12 mu_1       0.3      1.30      3.17e- 4  1.71e-18     24.1 
13 mu_1       0.4      1.08      3.27e- 2  4.51e-13     14.3 
14 mu_1       0.5      0.997     1.61e- 1  5.99e- 9      6.44
15 mu_1       0.6      1.04      4.05e- 1  9.65e- 8      6.27
16 mu_1       0.7      1.08      6.68e- 1  4.35e-12      5.26
17 mu_1       0.8      1.12      3.45e- 1  1.97e-18      9.29
18 mu_1       0.9      1.35      1.08e- 3  1.45e-29     17.7 
19 mu_0       0.1      1.23      1.33e-15  8.91e-42     74.8 
20 mu_0       0.2      2.12      1.08e- 8  4.95e-28     69.9 
21 mu_0       0.3      1.39      8.64e- 5  4.78e-20     28.6 
22 mu_0       0.4      1.12      8.21e- 3  1.96e-14     13.6 
23 mu_0       0.5      1.02      1.00e- 1  3.91e-10      8.21
24 mu_0       0.6      1.01      3.34e- 1  7.86e- 7      6.11
25 mu_0       0.7      1.07      5.07e- 1  5.51e-11      4.83
26 mu_0       0.8      1.03      4.65e- 1  4.28e-17      8.39
27 mu_0       0.9      1.37      4.95e- 3  7.11e-28     18.2 
[1] "Total run time was 358.75 seconds"
