
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3470"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 33 34 35 36 37 38 39 40 41 42 43 44 45 46 
 1  4  3  4  3  4  2  3  6  7  4  2  2  1  4  7  4  5  2  5  2  1  2  1  4  3 
47 48 49 50 
 6  5  2  1 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.05104 0.39712 0.65199 1.00000 5.00000 
[1] "event indicator table: "

   0    1 
2034 1436 
[1] "treatment indicator table: "

   0    1 
1111 2359 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1809
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 87"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1661
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 77"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 252.675 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.572 0.127 
 2 mu         0.1   0.2 0.632 0.120 
 3 mu         0.1   0.3 0.706 0.139 
 4 mu         0.1   0.4 0.746 0.130 
 5 mu         0.1   0.5 0.750 0.121 
 6 mu         0.2   0.1 0.458 0.0699
 7 mu         0.2   0.2 0.505 0.0604
 8 mu         0.2   0.3 0.575 0.0648
 9 mu         0.2   0.4 0.638 0.0695
10 mu         0.2   0.5 0.663 0.0627
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      1.05         0.562 0.00000783      6.60
 2 mu         0.2      1.03         0.942 0.00607         3.37
 3 mu         0.3      0.972        0.928 0.129           3.22
 4 mu         0.4      0.969        0.950 0.306           1.72
 5 mu         0.5      0.991        0.985 0.498           1.54
 6 mu         0.6      1.01         1.02  0.649           1.42
 7 mu         0.7      1.01         1.00  0.639           1.29
 8 mu         0.8      1.00         0.991 0.661           1.61
 9 mu         0.9      1.01         1.02  0.315           1.69
10 mu_1       0.1      1.11         0.781 0.0000340       5.63
11 mu_1       0.2      1.00         0.925 0.0135          3.11
12 mu_1       0.3      0.969        0.955 0.198           3.16
13 mu_1       0.4      0.971        0.958 0.309           1.51
14 mu_1       0.5      0.995        0.978 0.529           1.52
15 mu_1       0.6      1.02         1.01  0.643           1.42
16 mu_1       0.7      1.01         1.00  0.634           1.33
17 mu_1       0.8      1.00         1.00  0.675           1.61
18 mu_1       0.9      1.01         1.03  0.303           1.69
19 mu_0       0.1      1.04         0.557 0.00000492      6.71
20 mu_0       0.2      1.03         0.946 0.00422         3.43
21 mu_0       0.3      0.974        0.902 0.0999          3.25
22 mu_0       0.4      0.967        0.948 0.304           1.85
23 mu_0       0.5      0.988        0.986 0.467           1.56
24 mu_0       0.6      1.01         1.01  0.656           1.45
25 mu_0       0.7      1.01         1.01  0.631           1.32
26 mu_0       0.8      1.00         0.985 0.605           1.62
27 mu_0       0.9      1.02         1.01  0.427           1.65
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       5.49     8.45e-16  6.86e-41    433.  
 2 mu         0.2       2.43     4.52e- 9  3.39e-27     82.1 
 3 mu         0.3       1.44     2.83e- 5  2.86e-19     55.7 
 4 mu         0.4       1.05     6.67e- 3  1.01e-13     17.6 
 5 mu         0.5       1.19     9.73e- 2  1.67e- 9      9.40
 6 mu         0.6       1.31     2.75e- 1  3.76e- 6      9.95
 7 mu         0.7       1.11     4.97e- 1  8.22e- 8     10.3 
 8 mu         0.8       1.11     6.23e- 1  3.70e-12      8.70
 9 mu         0.9       1.61     2.17e- 2  8.84e-20     13.6 
10 mu_1       0.1       3.78     5.57e-15  6.44e-40    206.  
11 mu_1       0.2       1.71     1.69e- 8  1.59e-26     57.8 
12 mu_1       0.3       1.24     7.11e- 5  8.95e-19     52.4 
13 mu_1       0.4       1.02     1.13e- 2  2.36e-13     12.4 
14 mu_1       0.5       1.23     1.48e- 1  3.14e- 9     10.2 
15 mu_1       0.6       1.30     3.24e- 1  5.88e- 6      9.95
16 mu_1       0.7       1.09     5.43e- 1  1.57e- 8     11.0 
17 mu_1       0.8       1.13     6.26e- 1  6.17e-13      8.06
18 mu_1       0.9       1.62     1.69e- 2  1.31e-20     13.7 
19 mu_0       0.1       5.68     3.23e-16  0           458.  
20 mu_0       0.2       2.61     1.68e- 9  0            97.8 
21 mu_0       0.3       1.53     9.93e- 6  0            57.2 
22 mu_0       0.4       1.07     3.18e- 3  0            21.1 
23 mu_0       0.5       1.15     4.69e- 2  0             8.60
24 mu_0       0.6       1.32     1.95e- 1  0             9.95
25 mu_0       0.7       1.14     3.86e- 1  0             8.89
26 mu_0       0.8       1.03     4.99e- 1  0            11.2 
27 mu_0       0.9       1.57     2.26e- 2  0            15.2 
[1] "Total run time was 257.571 seconds"
