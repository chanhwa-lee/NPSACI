
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3419"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 6  2  1  3  4  3  2  6  2  4  2  3  5  3  6  5  4  4  4  4  1  4  2  4  1  1 
46 47 48 49 50 
 4  1  4  4  1 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03303 0.36212 0.60544 1.00000 9.00000 
[1] "event indicator table: "

   0    1 
1940 1479 
[1] "treatment indicator table: "

   0    1 
1346 2073 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1738
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 16"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1681
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 311.218 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.381 0.141 
 2 mu         0.1   0.2 0.408 0.119 
 3 mu         0.1   0.3 0.477 0.115 
 4 mu         0.1   0.4 0.570 0.145 
 5 mu         0.1   0.5 0.619 0.154 
 6 mu         0.2   0.1 0.348 0.0740
 7 mu         0.2   0.2 0.400 0.0514
 8 mu         0.2   0.3 0.475 0.0443
 9 mu         0.2   0.4 0.558 0.0630
10 mu         0.2   0.5 0.608 0.0772
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      0.823        0.216 0.000000560     19.5 
 2 mu         0.2      0.923        0.799 0.00280          2.90
 3 mu         0.3      0.987        0.958 0.105            2.52
 4 mu         0.4      1.00         1.00  0.479            1.48
 5 mu         0.5      1.00         1.00  0.371            1.34
 6 mu         0.6      0.996        1.00  0.553            1.22
 7 mu         0.7      1.00         0.988 0.788            1.26
 8 mu         0.8      1.01         1.00  0.510            1.55
 9 mu         0.9      0.995        0.970 0.113            3.84
10 mu_1       0.1      0.806        0.390 0.00000236       5.01
11 mu_1       0.2      0.954        0.833 0.00592          3.25
12 mu_1       0.3      0.996        0.958 0.150            2.18
13 mu_1       0.4      1.00         1.02  0.546            1.41
14 mu_1       0.5      0.999        0.992 0.352            1.33
15 mu_1       0.6      0.995        0.999 0.590            1.23
16 mu_1       0.7      1.00         0.987 0.778            1.28
17 mu_1       0.8      1.01         1.00  0.495            1.54
18 mu_1       0.9      0.995        0.969 0.102            4.00
19 mu_0       0.1      0.825        0.201 0.000000360     21.1 
20 mu_0       0.2      0.915        0.803 0.00202          3.01
21 mu_0       0.3      0.983        0.951 0.0859           2.66
22 mu_0       0.4      1.00         0.981 0.434            1.53
23 mu_0       0.5      1.00         1.00  0.389            1.38
24 mu_0       0.6      0.996        0.995 0.497            1.23
25 mu_0       0.7      0.999        0.989 0.754            1.26
26 mu_0       0.8      1.01         0.989 0.568            1.57
27 mu_0       0.9      1.00         1.01  0.190            2.39
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.762     2.36e-11  3.23e-33     69.6 
 2 mu         0.2      1.70      4.93e- 6  3.51e-22    116.  
 3 mu         0.3      1.15      2.61e- 3  8.80e-16     21.0 
 4 mu         0.4      1.34      9.70e- 2  2.71e-11     10.3 
 5 mu         0.5      1.33      5.43e- 1  7.25e- 8     14.1 
 6 mu         0.6      1.04      6.54e- 1  3.93e- 5      4.39
 7 mu         0.7      1.02      4.95e- 1  1.33e- 8      5.99
 8 mu         0.8      1.10      8.17e- 2  1.03e-13      9.30
 9 mu         0.9      1.33      4.80e- 5  9.70e-23     34.6 
10 mu_1       0.1      1.28      1.59e-10  3.06e-32    113.  
11 mu_1       0.2      1.63      1.44e- 5  1.66e-21     93.8 
12 mu_1       0.3      1.10      5.23e- 3  2.78e-15     19.2 
13 mu_1       0.4      1.38      1.44e- 1  6.43e-11     11.6 
14 mu_1       0.5      1.28      6.43e- 1  1.38e- 7     13.4 
15 mu_1       0.6      1.02      5.52e- 1  1.06e- 5      4.57
16 mu_1       0.7      1.03      4.76e- 1  3.07e- 9      6.32
17 mu_1       0.8      1.10      6.08e- 2  2.08e-14      9.57
18 mu_1       0.9      1.34      3.25e- 5  1.75e-23     35.8 
19 mu_0       0.1      0.705     8.66e-12  1.84e-34     64.8 
20 mu_0       0.2      1.72      2.34e- 6  2.25e-23    121.  
21 mu_0       0.3      1.17      1.45e- 3  6.44e-17     25.1 
22 mu_0       0.4      1.31      6.38e- 2  2.32e-12     10.4 
23 mu_0       0.5      1.37      5.27e- 1  7.44e- 9     14.9 
24 mu_0       0.6      1.05      8.47e- 1  5.06e- 6      5.71
25 mu_0       0.7      1.00      4.38e- 1  3.70e- 8      5.23
26 mu_0       0.8      1.06      1.25e- 1  4.30e-13      8.20
27 mu_0       0.9      1.22      1.89e- 4  8.12e-22     23.9 
[1] "Total run time was 314.642 seconds"
