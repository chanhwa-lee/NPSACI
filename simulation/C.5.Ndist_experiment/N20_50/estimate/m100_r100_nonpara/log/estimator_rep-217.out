
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3571"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 43 44 45 46 
 1  3  6  2  2  3  3  2  2  2  6  3  4  4  5  3  1  1  2  4  4  6  6  8  3  1 
47 48 49 50 
 4  1  5  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02544 0.31246 0.59079 0.99598 6.00000 
[1] "event indicator table: "

   0    1 
2151 1420 
[1] "treatment indicator table: "

   0    1 
1387 2184 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1814
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1757
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 41"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 66"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 199.186 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.371 0.0838
 2 mu         0.1   0.2 0.418 0.0719
 3 mu         0.1   0.3 0.464 0.0548
 4 mu         0.1   0.4 0.452 0.0542
 5 mu         0.1   0.5 0.489 0.0519
 6 mu         0.2   0.1 0.369 0.0652
 7 mu         0.2   0.2 0.432 0.0554
 8 mu         0.2   0.3 0.489 0.0391
 9 mu         0.2   0.4 0.496 0.0375
10 mu         0.2   0.5 0.538 0.0365
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.842        0.620   0.00299      4.02
 2 mu         0.2      0.994        0.965   0.122        2.06
 3 mu         0.3      0.970        0.954   0.403        1.58
 4 mu         0.4      0.953        0.962   0.467        1.51
 5 mu         0.5      0.994        0.994   0.693        1.38
 6 mu         0.6      1.01         1.01    0.623        1.31
 7 mu         0.7      1.01         1.01    0.647        1.40
 8 mu         0.8      1.03         1.03    0.504        1.50
 9 mu         0.9      0.998        1.06    0.226        1.74
10 mu_1       0.1      0.906        0.787   0.00834      3.40
11 mu_1       0.2      1.01         0.974   0.179        2.00
12 mu_1       0.3      0.962        0.949   0.471        1.63
13 mu_1       0.4      0.957        0.968   0.481        1.45
14 mu_1       0.5      1.00         1.00    0.711        1.36
15 mu_1       0.6      1.01         1.01    0.619        1.29
16 mu_1       0.7      1.01         1.01    0.654        1.39
17 mu_1       0.8      1.03         1.03    0.487        1.50
18 mu_1       0.9      0.995        1.05    0.223        1.76
19 mu_0       0.1      0.835        0.595   0.00240      4.30
20 mu_0       0.2      0.991        0.956   0.108        2.11
21 mu_0       0.3      0.973        0.957   0.374        1.61
22 mu_0       0.4      0.950        0.941   0.458        1.55
23 mu_0       0.5      0.988        0.983   0.675        1.40
24 mu_0       0.6      1.01         1.01    0.628        1.33
25 mu_0       0.7      1.01         1.02    0.632        1.43
26 mu_0       0.8      1.03         1.02    0.571        1.49
27 mu_0       0.9      1.02         1.04    0.259        1.60
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.324     8.65e-12  3.20e-37     31.2 
 2 mu         0.2      0.731     2.44e- 6  1.76e-25     46.1 
 3 mu         0.3      0.998     2.08e- 3  1.30e-18     13.4 
 4 mu         0.4      1.25      1.25e- 1  9.68e-14     11.0 
 5 mu         0.5      1.18      4.53e- 1  5.82e-10      6.12
 6 mu         0.6      0.996     4.83e- 1  7.13e- 7      5.71
 7 mu         0.7      0.966     3.28e- 1  1.98e- 9      4.00
 8 mu         0.8      1.00      1.18e- 1  1.02e-14      5.59
 9 mu         0.9      1.30      2.58e- 4  4.83e-24     16.3 
10 mu_1       0.1      0.525     5.45e-11  3.20e-36     49.3 
11 mu_1       0.2      0.753     7.66e- 6  8.80e-25     36.4 
12 mu_1       0.3      1.08      4.16e- 3  4.33e-18     13.2 
13 mu_1       0.4      1.26      1.59e- 1  2.42e-13      9.61
14 mu_1       0.5      1.16      5.05e- 1  1.16e- 9      6.44
15 mu_1       0.6      0.979     4.54e- 1  1.19e- 6      5.29
16 mu_1       0.7      0.974     2.43e- 1  4.47e-10      4.26
17 mu_1       0.8      1.00      9.02e- 2  2.02e-15      5.56
18 mu_1       0.9      1.32      1.70e- 4  8.47e-25     16.8 
19 mu_0       0.1      0.302     3.56e-12  0            29.2 
20 mu_0       0.2      0.725     1.13e- 6  0            48.5 
21 mu_0       0.3      0.963     1.03e- 3  0            13.4 
22 mu_0       0.4      1.25      8.24e- 2  0            12.0 
23 mu_0       0.5      1.20      3.57e- 1  0             6.86
24 mu_0       0.6      1.02      4.67e- 1  0             6.35
25 mu_0       0.7      0.946     4.41e- 1  0             3.72
26 mu_0       0.8      0.991     1.72e- 1  0             5.72
27 mu_0       0.9      1.09      6.79e- 4  0            11.1 
[1] "Total run time was 202.337 seconds"
