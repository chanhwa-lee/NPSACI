
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3538"
[1] "cluster size dist'n: "

21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 
 3  4  4  5  4  3  4  4  1  5  4  2  1  2  2  2  4  3  3  1  8  3  6  4  2  4 
47 48 49 50 
 1  3  5  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0389  0.3692  0.6319  1.0000  6.0000 
[1] "event indicator table: "

   0    1 
2096 1442 
[1] "treatment indicator table: "

   0    1 
1350 2188 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1798
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1740
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 162.79 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.355 0.0843
 2 mu         0.1   0.2 0.390 0.0589
 3 mu         0.1   0.3 0.430 0.0561
 4 mu         0.1   0.4 0.486 0.0614
 5 mu         0.1   0.5 0.472 0.0580
 6 mu         0.2   0.1 0.290 0.0460
 7 mu         0.2   0.2 0.344 0.0343
 8 mu         0.2   0.3 0.386 0.0328
 9 mu         0.2   0.4 0.440 0.0348
10 mu         0.2   0.5 0.449 0.0376
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.881        0.624 0.0000990      6.81
 2 mu         0.2      0.941        0.946 0.0479         2.13
 3 mu         0.3      0.951        0.957 0.291          1.70
 4 mu         0.4      1.00         1.01  0.564          1.46
 5 mu         0.5      1.02         1.02  0.700          1.35
 6 mu         0.6      1.01         0.996 0.646          1.29
 7 mu         0.7      0.999        1.00  0.676          1.36
 8 mu         0.8      0.999        0.998 0.689          1.39
 9 mu         0.9      0.961        0.944 0.404          1.67
10 mu_1       0.1      0.890        0.772 0.000299       4.31
11 mu_1       0.2      0.943        0.909 0.0759         1.95
12 mu_1       0.3      0.959        0.965 0.362          1.63
13 mu_1       0.4      1.01         1.03  0.583          1.45
14 mu_1       0.5      1.02         1.03  0.688          1.35
15 mu_1       0.6      1.01         1.01  0.625          1.26
16 mu_1       0.7      0.999        1.00  0.672          1.39
17 mu_1       0.8      0.999        0.990 0.686          1.37
18 mu_1       0.9      0.961        0.948 0.396          1.68
19 mu_0       0.1      0.880        0.600 0.0000768      7.09
20 mu_0       0.2      0.941        0.931 0.0399         2.19
21 mu_0       0.3      0.948        0.952 0.261          1.73
22 mu_0       0.4      0.997        0.999 0.535          1.47
23 mu_0       0.5      1.02         1.01  0.680          1.35
24 mu_0       0.6      1.01         1.00  0.679          1.33
25 mu_0       0.7      0.999        0.999 0.648          1.34
26 mu_0       0.8      1.00         1.00  0.689          1.47
27 mu_0       0.9      0.968        0.937 0.478          1.62
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.924     2.35e-11  3.96e-39     44.4 
 2 mu         0.2      1.97      3.51e- 6  8.71e-27     74.8 
 3 mu         0.3      1.20      1.60e- 3  1.44e-19     20.2 
 4 mu         0.4      0.966     8.10e- 2  1.91e-14      8.88
 5 mu         0.5      1.01      4.07e- 1  1.80e-10     10.7 
 6 mu         0.6      1.07      7.19e- 1  3.18e- 7      5.46
 7 mu         0.7      1.14      5.32e- 1  4.09e-10      6.61
 8 mu         0.8      1.00      1.42e- 1  2.41e-16      8.98
 9 mu         0.9      1.29      6.52e- 4  1.60e-27     19.6 
10 mu_1       0.1      1.49      1.59e-10  3.96e-38     74.0 
11 mu_1       0.2      1.88      1.22e- 5  4.35e-26     62.3 
12 mu_1       0.3      1.08      3.41e- 3  4.81e-19     13.4 
13 mu_1       0.4      0.975     1.24e- 1  4.79e-14     10.2 
14 mu_1       0.5      1.02      4.62e- 1  3.60e-10      9.89
15 mu_1       0.6      1.08      7.32e- 1  5.29e- 7      5.41
16 mu_1       0.7      1.13      5.14e- 1  1.29e-10      6.78
17 mu_1       0.8      1.00      1.08e- 1  6.63e-17      9.08
18 mu_1       0.9      1.30      4.37e- 4  3.91e-28     20.3 
19 mu_0       0.1      0.861     8.44e-12  0            41.1 
20 mu_0       0.2      1.99      1.36e- 6  0            77.9 
21 mu_0       0.3      1.26      8.30e- 4  0            24.0 
22 mu_0       0.4      0.959     5.22e- 2  0             8.05
23 mu_0       0.5      1.01      3.30e- 1  0            11.5 
24 mu_0       0.6      1.05      5.90e- 1  0             5.54
25 mu_0       0.7      1.17      5.16e- 1  0             6.51
26 mu_0       0.8      1.01      2.57e- 1  0             8.60
27 mu_0       0.9      1.17      1.81e- 3  0            18.7 
[1] "Total run time was 165.646 seconds"
