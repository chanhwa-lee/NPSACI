
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3480"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 42 43 44 45 46 
 3  5  5  2  2  3  2  5  2  4  5  3  4  1  4  3  3  3  4  2  5  1  3  4  5  3 
47 48 49 50 
 5  4  4  1 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02378 0.31935 0.59069 0.96753 6.00000 
[1] "event indicator table: "

   0    1 
1991 1489 
[1] "treatment indicator table: "

   0    1 
1351 2129 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1793
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1687
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 68"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 250.506 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.419 0.0525
 2 mu         0.1   0.2 0.495 0.0665
 3 mu         0.1   0.3 0.590 0.0822
 4 mu         0.1   0.4 0.623 0.0860
 5 mu         0.1   0.5 0.653 0.0899
 6 mu         0.2   0.1 0.358 0.0265
 7 mu         0.2   0.2 0.430 0.0293
 8 mu         0.2   0.3 0.512 0.0421
 9 mu         0.2   0.4 0.550 0.0390
10 mu         0.2   0.5 0.572 0.0397
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.09         0.608    0.0173      7.98
 2 mu         0.2      0.959        0.928    0.313       2.15
 3 mu         0.3      0.975        0.943    0.591       1.63
 4 mu         0.4      0.982        0.973    0.581       1.38
 5 mu         0.5      0.996        0.990    0.747       1.34
 6 mu         0.6      1.01         1.01     0.737       1.23
 7 mu         0.7      1.03         1.03     0.818       1.22
 8 mu         0.8      1.01         1.03     0.673       1.47
 9 mu         0.9      0.975        0.960    0.289       1.78
10 mu_1       0.1      1.01         0.762    0.0409      5.23
11 mu_1       0.2      0.969        0.941    0.389       2.03
12 mu_1       0.3      0.977        0.947    0.615       1.63
13 mu_1       0.4      0.984        0.966    0.593       1.39
14 mu_1       0.5      0.999        0.995    0.731       1.36
15 mu_1       0.6      1.02         1.01     0.738       1.22
16 mu_1       0.7      1.03         1.03     0.804       1.23
17 mu_1       0.8      1.01         1.03     0.670       1.48
18 mu_1       0.9      0.974        0.958    0.279       1.82
19 mu_0       0.1      1.10         0.558    0.0147      8.28
20 mu_0       0.2      0.956        0.918    0.294       2.27
21 mu_0       0.3      0.974        0.942    0.573       1.63
22 mu_0       0.4      0.982        0.965    0.574       1.40
23 mu_0       0.5      0.994        0.988    0.734       1.36
24 mu_0       0.6      1.01         1.00     0.735       1.27
25 mu_0       0.7      1.02         1.04     0.802       1.24
26 mu_0       0.8      1.02         1.04     0.686       1.40
27 mu_0       0.9      0.987        1.01     0.365       1.54
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.656     4.43e-13  3.04e-34     59.3 
 2 mu         0.2      1.09      5.98e- 7  3.71e-22     24.6 
 3 mu         0.3      1.15      4.34e- 4  3.16e-15     19.8 
 4 mu         0.4      0.875     2.58e- 2  1.94e-10     15.2 
 5 mu         0.5      0.849     1.73e- 1  7.27e- 7      5.11
 6 mu         0.6      0.925     6.44e- 1  9.29e- 7      5.71
 7 mu         0.7      1.22      6.57e- 1  1.47e-10      7.59
 8 mu         0.8      1.32      3.26e- 1  7.58e-17      6.95
 9 mu         0.9      1.32      1.83e- 3  4.48e-28     14.5 
10 mu_1       0.1      0.824     2.49e-12  2.71e-33     67.8 
11 mu_1       0.2      1.18      2.28e- 6  1.65e-21     22.3 
12 mu_1       0.3      1.11      1.03e- 3  9.38e-15     20.1 
13 mu_1       0.4      0.842     3.62e- 2  4.32e-10     12.9 
14 mu_1       0.5      0.856     2.26e- 1  1.30e- 6      4.55
15 mu_1       0.6      0.952     6.02e- 1  1.77e- 7      6.23
16 mu_1       0.7      1.25      6.20e- 1  3.76e-11      8.05
17 mu_1       0.8      1.32      2.74e- 1  1.93e-17      7.06
18 mu_1       0.9      1.32      1.36e- 3  1.01e-28     14.6 
19 mu_0       0.1      0.638     2.15e-13  3.67e-35     58.4 
20 mu_0       0.2      1.07      1.78e- 7  5.04e-23     27.3 
21 mu_0       0.3      1.17      1.97e- 4  4.90e-16     20.4 
22 mu_0       0.4      0.897     1.63e- 2  3.51e-11     16.7 
23 mu_0       0.5      0.842     1.30e- 1  4.54e- 8      5.68
24 mu_0       0.6      0.884     5.55e- 1  2.06e- 6      5.53
25 mu_0       0.7      1.15      4.18e- 1  3.90e-10      6.91
26 mu_0       0.8      1.30      4.38e- 1  3.02e-16      8.17
27 mu_0       0.9      1.36      6.42e- 3  3.56e-27     13.8 
[1] "Total run time was 254.029 seconds"
