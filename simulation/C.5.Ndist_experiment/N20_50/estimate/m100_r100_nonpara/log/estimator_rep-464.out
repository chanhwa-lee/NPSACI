
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3647"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 1  1  4  1  3  4  4  2  5  1  1  3  2  3  4  6  5  4  3  3  2  3  1  6  6  3 
46 47 48 49 50 
 5  3  8  2  1 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03943 0.39452 0.63933 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
2189 1458 
[1] "treatment indicator table: "

   0    1 
1319 2328 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1792
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 37"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1855
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 267.065 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.363 0.112 
 2 mu         0.1   0.2 0.499 0.158 
 3 mu         0.1   0.3 0.540 0.161 
 4 mu         0.1   0.4 0.538 0.153 
 5 mu         0.1   0.5 0.541 0.149 
 6 mu         0.2   0.1 0.379 0.0639
 7 mu         0.2   0.2 0.507 0.0983
 8 mu         0.2   0.3 0.553 0.0952
 9 mu         0.2   0.4 0.571 0.0816
10 mu         0.2   0.5 0.588 0.0714
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.827        0.123 0.0000277     17.7 
 2 mu         0.2      0.990        0.844 0.0327         4.91
 3 mu         0.3      1.02         0.985 0.392          2.14
 4 mu         0.4      1.02         1.00  0.685          1.63
 5 mu         0.5      1.02         1.01  0.615          1.39
 6 mu         0.6      1.03         1.02  0.737          1.34
 7 mu         0.7      1.01         1.01  0.757          1.32
 8 mu         0.8      0.979        0.973 0.646          1.36
 9 mu         0.9      0.970        0.966 0.194          2.23
10 mu_1       0.1      0.950        0.263 0.0000945     16.5 
11 mu_1       0.2      1.01         0.896 0.0566         3.17
12 mu_1       0.3      1.03         0.981 0.472          2.01
13 mu_1       0.4      1.02         0.996 0.690          1.58
14 mu_1       0.5      1.03         1.01  0.618          1.39
15 mu_1       0.6      1.03         1.02  0.728          1.35
16 mu_1       0.7      1.01         1.01  0.768          1.30
17 mu_1       0.8      0.977        0.975 0.617          1.36
18 mu_1       0.9      0.973        0.964 0.176          2.33
19 mu_0       0.1      0.813        0.108 0.0000202     17.8 
20 mu_0       0.2      0.985        0.800 0.0267         5.34
21 mu_0       0.3      1.02         0.991 0.358          2.20
22 mu_0       0.4      1.02         0.997 0.668          1.65
23 mu_0       0.5      1.02         1.01  0.612          1.40
24 mu_0       0.6      1.03         1.02  0.751          1.33
25 mu_0       0.7      1.01         1.00  0.731          1.36
26 mu_0       0.8      0.988        0.982 0.764          1.36
27 mu_0       0.9      0.952        0.944 0.270          1.64
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.561     6.42e-14  2.10e-35     42.3 
 2 mu         0.2      1.97      1.03e- 7  3.25e-23    113.  
 3 mu         0.3      1.27      1.98e- 4  3.61e-16     34.9 
 4 mu         0.4      1.02      1.20e- 2  3.01e-11     10.7 
 5 mu         0.5      0.984     2.00e- 1  1.64e- 7      5.97
 6 mu         0.6      1.04      6.83e- 1  4.10e- 7      5.39
 7 mu         0.7      1.13      1.07e+ 0  3.84e-11      6.29
 8 mu         0.8      1.13      4.53e- 1  4.47e-17      6.02
 9 mu         0.9      1.87      2.87e- 3  1.48e-27     38.4 
10 mu_1       0.1      1.03      4.09e-13  1.96e-34     77.0 
11 mu_1       0.2      1.96      3.42e- 7  1.51e-22    102.  
12 mu_1       0.3      1.16      4.41e- 4  1.12e-15     21.1 
13 mu_1       0.4      0.990     2.06e- 2  7.02e-11     10.5 
14 mu_1       0.5      0.984     2.77e- 1  3.06e- 7      6.32
15 mu_1       0.6      1.05      7.27e- 1  1.11e- 7      5.31
16 mu_1       0.7      1.14      1.07e+ 0  8.92e-12      6.29
17 mu_1       0.8      1.14      3.80e- 1  9.10e-18      7.18
18 mu_1       0.9      1.92      2.21e- 3  2.68e-28     39.8 
19 mu_0       0.1      0.509     2.96e-14  0            38.5 
20 mu_0       0.2      1.97      3.57e- 8  0           115.  
21 mu_0       0.3      1.31      9.08e- 5  0            40.8 
22 mu_0       0.4      1.04      6.40e- 3  0            10.7 
23 mu_0       0.5      0.985     1.34e- 1  0             5.62
24 mu_0       0.6      1.01      5.87e- 1  0             5.51
25 mu_0       0.7      1.12      8.65e- 1  0             6.29
26 mu_0       0.8      1.08      6.59e- 1  0             4.56
27 mu_0       0.9      1.44      8.45e- 3  0            26.2 
[1] "Total run time was 270.48 seconds"
