
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3404"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 31 32 33 34 35 36 37 38 39 40 42 43 44 45 46 47 
 3  3  5  3  7  8  3  4  1  2  6  2  5  4  1  3  3  2  4  3  1  2  2  7  1  4 
48 49 50 
 4  2  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0355  0.3528  0.6182  1.0000  5.0654 
[1] "event indicator table: "

   0    1 
1953 1451 
[1] "treatment indicator table: "

   0    1 
1358 2046 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1802
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1602
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 191.378 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.294 0.0364
 2 mu         0.1   0.2 0.327 0.0422
 3 mu         0.1   0.3 0.331 0.0619
 4 mu         0.1   0.4 0.321 0.0849
 5 mu         0.1   0.5 0.348 0.0893
 6 mu         0.2   0.1 0.346 0.0426
 7 mu         0.2   0.2 0.434 0.0397
 8 mu         0.2   0.3 0.466 0.0455
 9 mu         0.2   0.4 0.505 0.0468
10 mu         0.2   0.5 0.544 0.0469
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.780        0.565   0.00375      6.24
 2 mu         0.2      1.03         0.991   0.181        3.11
 3 mu         0.3      1.01         0.968   0.458        2.37
 4 mu         0.4      1.01         1.01    0.527        1.55
 5 mu         0.5      1.01         1.00    0.687        1.36
 6 mu         0.6      1.00         1.00    0.741        1.29
 7 mu         0.7      1.00         1.01    0.695        1.34
 8 mu         0.8      1.00         0.998   0.560        1.55
 9 mu         0.9      1.03         0.974   0.106        2.23
10 mu_1       0.1      0.937        0.894   0.00985      7.61
11 mu_1       0.2      1.03         0.980   0.232        2.68
12 mu_1       0.3      1.00         0.949   0.408        2.30
13 mu_1       0.4      1.01         1.01    0.582        1.53
14 mu_1       0.5      1.01         0.998   0.680        1.35
15 mu_1       0.6      1.00         1.00    0.762        1.28
16 mu_1       0.7      1.00         1.01    0.685        1.37
17 mu_1       0.8      1.00         1.00    0.569        1.60
18 mu_1       0.9      1.04         0.975   0.0963       2.35
19 mu_0       0.1      0.762        0.521   0.00308      6.09
20 mu_0       0.2      1.02         0.974   0.169        3.22
21 mu_0       0.3      1.01         0.992   0.456        2.40
22 mu_0       0.4      1.01         0.996   0.490        1.55
23 mu_0       0.5      1.01         1.00    0.694        1.37
24 mu_0       0.6      1.00         1.00    0.697        1.30
25 mu_0       0.7      1.00         0.996   0.717        1.34
26 mu_0       0.8      1.00         0.987   0.524        1.42
27 mu_0       0.9      1.00         0.987   0.193        1.90
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.35      1.04e-10  2.38e-45    109.  
 2 mu         0.2      1.09      1.43e- 5  1.19e-30     33.0 
 3 mu         0.3      0.955     5.46e- 3  4.43e-22     15.4 
 4 mu         0.4      1.24      1.41e- 1  5.03e-16     10.9 
 5 mu         0.5      1.29      6.59e- 1  2.35e-11      8.06
 6 mu         0.6      1.07      7.18e- 1  1.42e- 7      7.54
 7 mu         0.7      1.03      5.46e- 1  6.05e-11      5.40
 8 mu         0.8      0.957     1.03e- 1  3.14e-16      6.65
 9 mu         0.9      1.09      2.08e- 4  3.79e-26     20.5 
10 mu_1       0.1      1.39      6.00e-10  2.33e-44     96.2 
11 mu_1       0.2      1.04      4.18e- 5  5.83e-30     34.7 
12 mu_1       0.3      0.982     1.01e- 2  1.45e-21     11.5 
13 mu_1       0.4      1.29      1.87e- 1  1.23e-15     10.8 
14 mu_1       0.5      1.26      6.76e- 1  4.60e-11      8.18
15 mu_1       0.6      1.06      7.26e- 1  4.19e- 8      6.93
16 mu_1       0.7      1.03      5.19e- 1  7.63e-12      5.86
17 mu_1       0.8      0.955     9.35e- 2  3.46e-17      6.83
18 mu_1       0.9      1.11      1.43e- 4  8.42e-27     22.1 
19 mu_0       0.1      1.35      5.08e-11  5.29e-47    110.  
20 mu_0       0.2      1.10      7.75e- 6  2.98e-32     32.6 
21 mu_0       0.3      0.944     3.50e- 3  1.26e-23     17.4 
22 mu_0       0.4      1.22      9.54e- 2  1.68e-17     11.0 
23 mu_0       0.5      1.31      5.47e- 1  9.39e-13      8.86
24 mu_0       0.6      1.10      8.82e- 1  7.12e- 9      8.45
25 mu_0       0.7      1.05      5.82e- 1  1.84e-10      5.37
26 mu_0       0.8      0.964     2.07e- 1  1.43e-15      7.98
27 mu_0       0.9      0.945     8.26e- 4  3.03e-25     13.1 
[1] "Total run time was 194.299 seconds"
