
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3629"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 28 29 30 31 32 33 34 35 37 38 39 40 41 42 43 44 45 46 47 
 5  3  3  4  1  1  1  2  5  5  1  2  5  2  4  5  2  5  7  3  4  5  6  1  3  6 
48 49 50 
 2  3  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.05533 0.38682 0.64786 1.00000 5.00000 
[1] "event indicator table: "

   0    1 
2176 1453 
[1] "treatment indicator table: "

   0    1 
1243 2386 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1777
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1852
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 199.808 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.336 0.0969
 2 mu         0.1   0.2 0.538 0.129 
 3 mu         0.1   0.3 0.551 0.122 
 4 mu         0.1   0.4 0.565 0.121 
 5 mu         0.1   0.5 0.567 0.120 
 6 mu         0.2   0.1 0.331 0.0741
 7 mu         0.2   0.2 0.532 0.110 
 8 mu         0.2   0.3 0.550 0.0974
 9 mu         0.2   0.4 0.572 0.0924
10 mu         0.2   0.5 0.581 0.0894
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.771       0.0766 0.0000000503     10.7 
 2 mu         0.2      0.882       0.681  0.000564         10.4 
 3 mu         0.3      0.931       0.951  0.0290            2.33
 4 mu         0.4      1.00        0.983  0.205             2.03
 5 mu         0.5      1.00        0.991  0.403             1.95
 6 mu         0.6      1.00        1.01   0.573             1.69
 7 mu         0.7      0.996       0.994  0.644             1.42
 8 mu         0.8      0.989       0.992  0.529             1.48
 9 mu         0.9      0.989       0.983  0.136             1.95
10 mu_1       0.1      0.845       0.176  0.000000201       9.34
11 mu_1       0.2      0.893       0.790  0.00114           8.70
12 mu_1       0.3      0.951       0.945  0.0409            1.86
13 mu_1       0.4      1.00        0.992  0.226             2.01
14 mu_1       0.5      1.00        0.993  0.419             1.93
15 mu_1       0.6      1.00        1.02   0.601             1.71
16 mu_1       0.7      0.995       0.990  0.630             1.39
17 mu_1       0.8      0.989       0.988  0.512             1.48
18 mu_1       0.9      0.990       0.971  0.129             1.94
19 mu_0       0.1      0.763       0.0660 0.0000000335     10.8 
20 mu_0       0.2      0.880       0.656  0.000421         10.8 
21 mu_0       0.3      0.922       0.920  0.0239            2.59
22 mu_0       0.4      0.997       0.968  0.180             2.04
23 mu_0       0.5      1.00        0.986  0.367             1.96
24 mu_0       0.6      1.00        1.01   0.531             1.65
25 mu_0       0.7      0.997       1.00   0.677             1.53
26 mu_0       0.8      0.993       0.996  0.598             1.48
27 mu_0       0.9      0.973       0.957  0.205             2.07
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       8.47     2.37e-16  8.55e-33    744.  
 2 mu         0.2      10.9      2.25e- 9  2.61e-21    880.  
 3 mu         0.3       6.46     1.38e- 5  9.86e-15    303.  
 4 mu         0.4       3.05     4.48e- 3  3.40e-10    103.  
 5 mu         0.5       1.61     1.26e- 1  8.23e- 7     25.1 
 6 mu         0.6       1.31     5.43e- 1  1.25e- 4     10.1 
 7 mu         0.7       1.43     8.15e- 1  1.74e- 7      9.04
 8 mu         0.8       1.65     7.63e- 1  1.17e-11     11.5 
 9 mu         0.9       1.45     9.34e- 3  1.15e-20     22.7 
10 mu_1       0.1      12.8      1.80e-15  7.58e-32   1128.  
11 mu_1       0.2       9.01     7.51e- 9  1.16e-20    667.  
12 mu_1       0.3       5.80     3.49e- 5  2.91e-14    303.  
13 mu_1       0.4       2.68     7.76e- 3  7.54e-10     77.1 
14 mu_1       0.5       1.54     1.24e- 1  1.46e- 6     21.8 
15 mu_1       0.6       1.29     5.60e- 1  2.86e- 5      8.64
16 mu_1       0.7       1.45     8.54e- 1  3.42e- 8      9.36
17 mu_1       0.8       1.66     7.35e- 1  2.02e-12     12.4 
18 mu_1       0.9       1.43     7.46e- 3  3.82e-21     23.0 
19 mu_0       0.1       7.99     7.33e-17  1.08e-33    702.  
20 mu_0       0.2      11.3      9.35e-10  3.70e-22    934.  
21 mu_0       0.3       6.74     4.79e- 6  1.60e-15    303.  
22 mu_0       0.4       3.29     2.29e- 3  6.44e-11    120.  
23 mu_0       0.5       1.68     9.47e- 2  7.28e- 8     28.3 
24 mu_0       0.6       1.35     5.01e- 1  2.07e- 5     12.3 
25 mu_0       0.7       1.38     8.24e- 1  4.99e- 7      8.32
26 mu_0       0.8       1.60     1.03e+ 0  5.06e-11      8.40
27 mu_0       0.9       1.58     2.68e- 2  8.02e-20     21.4 
[1] "Total run time was 203.383 seconds"
