
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3484"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 5  1  1  6  4  3  7  1  2  3  4  3  2  3  5  5  3  3  2  2  4  2  5  1  1  3 
46 47 48 49 50 
 4  3  5  3  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04725 0.38662 0.63567 1.00000 4.00000 
[1] "event indicator table: "

   0    1 
2099 1385 
[1] "treatment indicator table: "

   0    1 
1230 2254 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1733
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1751
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 63"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 243.763 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.442 0.234 
 2 mu         0.1   0.2 0.726 0.314 
 3 mu         0.1   0.3 0.838 0.372 
 4 mu         0.1   0.4 0.881 0.402 
 5 mu         0.1   0.5 0.951 0.452 
 6 mu         0.2   0.1 0.254 0.0638
 7 mu         0.2   0.2 0.477 0.102 
 8 mu         0.2   0.3 0.551 0.0934
 9 mu         0.2   0.4 0.567 0.0876
10 mu         0.2   0.5 0.596 0.0837
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      1.76        0.0498 0.00000145     91.8 
 2 mu         0.2      1.02        0.546  0.0111          8.62
 3 mu         0.3      1.02        0.994  0.219           2.57
 4 mu         0.4      1.01        0.994  0.366           1.84
 5 mu         0.5      1.00        0.979  0.521           1.44
 6 mu         0.6      1.01        0.993  0.680           1.35
 7 mu         0.7      0.995       0.995  0.730           1.16
 8 mu         0.8      0.989       0.992  0.640           1.45
 9 mu         0.9      1.05        1.04   0.164           2.22
10 mu_1       0.1      1.49        0.120  0.00000535     58.6 
11 mu_1       0.2      1.00        0.658  0.0207          5.83
12 mu_1       0.3      1.02        0.977  0.258           2.23
13 mu_1       0.4      1.01        0.997  0.402           1.76
14 mu_1       0.5      1.00        0.980  0.504           1.49
15 mu_1       0.6      1.01        0.992  0.717           1.35
16 mu_1       0.7      0.993       0.997  0.719           1.18
17 mu_1       0.8      0.989       0.988  0.628           1.45
18 mu_1       0.9      1.06        1.04   0.151           2.25
19 mu_0       0.1      1.79        0.0410 0.00000102     95.5 
20 mu_0       0.2      1.03        0.500  0.00874         9.32
21 mu_0       0.3      1.02        0.973  0.203           2.72
22 mu_0       0.4      1.02        1.00   0.342           1.90
23 mu_0       0.5      1.00        0.983  0.538           1.39
24 mu_0       0.6      1.01        0.988  0.624           1.42
25 mu_0       0.7      0.999       0.993  0.757           1.21
26 mu_0       0.8      0.986       0.987  0.689           1.45
27 mu_0       0.9      1.02        1.01   0.280           2.02
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1    0.00511     6.37e-13  4.04e-37     0.445
 2 mu         0.2    0.224       3.93e- 7  7.91e-25     7.03 
 3 mu         0.3    1.08        3.44e- 4  1.15e-17    37.5  
 4 mu         0.4    1.27        2.27e- 2  1.30e-12    17.4  
 5 mu         0.5    1.17        3.83e- 1  1.02e- 8     8.25 
 6 mu         0.6    1.06        8.41e- 1  1.44e- 5     8.71 
 7 mu         0.7    0.989       8.69e- 1  8.93e- 6     3.57 
 8 mu         0.8    0.954       2.79e- 1  1.02e-10     4.48 
 9 mu         0.9    1.96        1.01e- 3  6.97e-20    59.8  
10 mu_1       0.1    0.0156      3.82e-12  3.95e-36     1.34 
11 mu_1       0.2    0.362       1.21e- 6  3.86e-24    11.0  
12 mu_1       0.3    1.22        7.37e- 4  3.73e-17    39.1  
13 mu_1       0.4    1.25        3.85e- 2  3.18e-12    13.6  
14 mu_1       0.5    1.15        5.20e- 1  1.99e- 8     9.13 
15 mu_1       0.6    1.05        8.63e- 1  2.35e- 5     8.03 
16 mu_1       0.7    0.984       8.97e- 1  3.99e- 6     3.90 
17 mu_1       0.8    0.959       2.36e- 1  4.00e-11     4.83 
18 mu_1       0.9    2.05        7.34e- 4  2.42e-20    64.8  
19 mu_0       0.1    0.00395     2.83e-13  0            0.346
20 mu_0       0.2    0.190       1.74e- 7  0            6.04 
21 mu_0       0.3    1.02        1.65e- 4  0           36.9  
22 mu_0       0.4    1.28        1.22e- 2  0           19.9  
23 mu_0       0.5    1.18        2.47e- 1  0            8.01 
24 mu_0       0.6    1.07        8.34e- 1  0            9.73 
25 mu_0       0.7    0.999       8.74e- 1  0            3.40 
26 mu_0       0.8    0.934       4.22e- 1  0            5.29 
27 mu_0       0.9    1.15        2.13e- 3  0           17.2  
[1] "Total run time was 248.128 seconds"
