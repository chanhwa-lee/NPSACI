
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3502"
[1] "cluster size dist'n: "

20 21 22 23 24 26 27 28 29 30 31 32 33 34 35 36 37 38 40 41 42 43 44 45 46 47 
 3  3  5  7  2  4  3  1  1  4  7  2  4  1  2  4  6  7  1  1  1  6  2  7  6  2 
48 49 50 
 1  3  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02965 0.32499 0.58286 0.99262 4.55444 
[1] "event indicator table: "

   0    1 
2082 1420 
[1] "treatment indicator table: "

   0    1 
1344 2158 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1802
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1700
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 18"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 194.908 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.360 0.0476
 2 mu         0.1   0.2 0.475 0.103 
 3 mu         0.1   0.3 0.563 0.107 
 4 mu         0.1   0.4 0.640 0.116 
 5 mu         0.1   0.5 0.648 0.105 
 6 mu         0.2   0.1 0.361 0.0217
 7 mu         0.2   0.2 0.455 0.0701
 8 mu         0.2   0.3 0.537 0.0697
 9 mu         0.2   0.4 0.609 0.0637
10 mu         0.2   0.5 0.643 0.0541
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.855        0.621 0.0000357      8.38
 2 mu         0.2      0.943        0.928 0.0496         2.45
 3 mu         0.3      0.985        1.00  0.304          2.19
 4 mu         0.4      1.01         1.01  0.508          1.51
 5 mu         0.5      1.01         1.02  0.652          1.35
 6 mu         0.6      0.998        0.999 0.740          1.25
 7 mu         0.7      0.997        0.993 0.719          1.34
 8 mu         0.8      1.00         0.999 0.670          1.31
 9 mu         0.9      1.02         1.03  0.0786         1.99
10 mu_1       0.1      0.915        0.824 0.000115       4.28
11 mu_1       0.2      0.954        0.966 0.0813         2.48
12 mu_1       0.3      0.989        0.971 0.333          2.02
13 mu_1       0.4      1.01         1.00  0.518          1.43
14 mu_1       0.5      1.01         1.02  0.664          1.36
15 mu_1       0.6      0.998        0.990 0.721          1.26
16 mu_1       0.7      0.997        0.991 0.707          1.35
17 mu_1       0.8      1.00         1.01  0.651          1.32
18 mu_1       0.9      1.02         1.03  0.0692         2.02
19 mu_0       0.1      0.848        0.600 0.0000269      8.92
20 mu_0       0.2      0.941        0.919 0.0417         2.48
21 mu_0       0.3      0.983        0.996 0.291          2.26
22 mu_0       0.4      1.01         1.00  0.502          1.56
23 mu_0       0.5      1.01         1.02  0.640          1.34
24 mu_0       0.6      0.999        0.995 0.745          1.27
25 mu_0       0.7      0.996        0.983 0.741          1.34
26 mu_0       0.8      1.00         1.00  0.679          1.28
27 mu_0       0.9      1.02         1.02  0.164          1.72
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.769     8.66e-12  2.31e-38     67.3 
 2 mu         0.2      1.43      4.37e- 6  5.07e-25     79.6 
 3 mu         0.3      1.23      2.58e- 3  2.50e-17     27.1 
 4 mu         0.4      0.957     1.37e- 1  5.64e-12     12.8 
 5 mu         0.5      1.07      5.49e- 1  4.54e- 8      6.02
 6 mu         0.6      1.21      9.66e- 1  2.97e- 5      6.90
 7 mu         0.7      1.03      5.93e- 1  7.04e- 9      3.79
 8 mu         0.8      1.10      1.45e- 1  2.10e-14      8.69
 9 mu         0.9      2.20      3.08e- 4  2.23e-24     30.7 
10 mu_1       0.1      1.23      6.17e-11  2.12e-37    102.  
11 mu_1       0.2      1.39      1.28e- 5  2.33e-24     60.3 
12 mu_1       0.3      1.17      5.62e- 3  7.64e-17     28.1 
13 mu_1       0.4      0.927     2.03e- 1  1.30e-11      9.95
14 mu_1       0.5      1.10      6.08e- 1  8.63e- 8      6.72
15 mu_1       0.6      1.20      9.61e- 1  1.21e- 5      6.42
16 mu_1       0.7      1.01      6.03e- 1  2.40e- 9      4.03
17 mu_1       0.8      1.12      1.09e- 1  6.28e-15      8.87
18 mu_1       0.9      2.22      2.25e- 4  5.93e-25     31.3 
19 mu_0       0.1      0.718     3.13e-12  2.09e-39     63.5 
20 mu_0       0.2      1.44      2.38e- 6  5.17e-26     84.4 
21 mu_0       0.3      1.26      1.27e- 3  2.91e-18     26.7 
22 mu_0       0.4      0.978     9.23e- 2  7.68e-13     14.7 
23 mu_0       0.5      1.03      4.51e- 1  4.54e- 9      5.32
24 mu_0       0.6      1.22      8.38e- 1  3.71e- 6      7.62
25 mu_0       0.7      1.06      6.53e- 1  1.79e- 8      3.41
26 mu_0       0.8      1.01      2.90e- 1  7.99e-14      8.01
27 mu_0       0.9      2.01      1.12e- 3  1.70e-23     25.1 
[1] "Total run time was 198.09 seconds"
