
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3587"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 3  2  3  3  3  3  3  3  2  4  2  2  2  3  3  6  9  4  2  4  1  1  3  3  1  4 
46 47 48 49 50 
 4  4  3  5  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04274 0.37787 0.63338 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
2102 1485 
[1] "treatment indicator table: "

   0    1 
1305 2282 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1805
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 68"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1782
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 78"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 206.874 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.240 0.0595
 2 mu         0.1   0.2 0.398 0.0622
 3 mu         0.1   0.3 0.431 0.0681
 4 mu         0.1   0.4 0.499 0.0797
 5 mu         0.1   0.5 0.492 0.0812
 6 mu         0.2   0.1 0.290 0.0342
 7 mu         0.2   0.2 0.434 0.0272
 8 mu         0.2   0.3 0.491 0.0318
 9 mu         0.2   0.4 0.544 0.0337
10 mu         0.2   0.5 0.575 0.0346
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.844        0.433 0.0000000161      7.59
 2 mu         0.2      1.00         0.959 0.000794          2.45
 3 mu         0.3      1.02         0.985 0.0892            1.78
 4 mu         0.4      1.00         0.998 0.594             1.61
 5 mu         0.5      0.993        0.996 0.669             1.38
 6 mu         0.6      1.00         1.01  0.749             1.26
 7 mu         0.7      1.00         0.998 0.756             1.49
 8 mu         0.8      1.00         1.00  0.600             1.37
 9 mu         0.9      0.989        0.984 0.323             1.80
10 mu_1       0.1      0.901        0.690 0.0000000666      5.19
11 mu_1       0.2      1.02         0.987 0.00167           2.20
12 mu_1       0.3      1.02         1.00  0.129             1.78
13 mu_1       0.4      1.00         1.01  0.633             1.54
14 mu_1       0.5      0.993        0.991 0.687             1.39
15 mu_1       0.6      1.00         1.01  0.747             1.25
16 mu_1       0.7      1.00         1.00  0.730             1.49
17 mu_1       0.8      1.00         1.00  0.607             1.37
18 mu_1       0.9      0.989        0.986 0.323             1.81
19 mu_0       0.1      0.837        0.400 0.0000000105      7.85
20 mu_0       0.2      0.998        0.935 0.000574          2.51
21 mu_0       0.3      1.02         1.00  0.0722            1.78
22 mu_0       0.4      1.00         1.01  0.568             1.65
23 mu_0       0.5      0.993        0.998 0.650             1.37
24 mu_0       0.6      0.998        0.996 0.740             1.27
25 mu_0       0.7      1.00         0.993 0.760             1.48
26 mu_0       0.8      1.00         1.00  0.574             1.38
27 mu_0       0.9      0.992        0.984 0.326             1.64
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.342     3.12e-13  9.56e-44     22.7 
 2 mu         0.2      1.02      1.24e- 7  2.13e-29     30.6 
 3 mu         0.3      0.939     2.50e- 4  4.61e-21     15.3 
 4 mu         0.4      1.04      2.86e- 2  3.37e-15      8.38
 5 mu         0.5      1.14      1.49e- 1  1.05e-10      8.20
 6 mu         0.6      1.06      6.41e- 1  2.07e- 7      5.61
 7 mu         0.7      1.09      7.37e- 1  2.11e-11      5.72
 8 mu         0.8      0.986     3.12e- 1  7.25e-18      4.58
 9 mu         0.9      0.769     9.90e- 4  2.14e-29      9.13
10 mu_1       0.1      0.616     2.39e-12  9.18e-43     36.3 
11 mu_1       0.2      1.07      4.74e- 7  1.02e-28     24.6 
12 mu_1       0.3      0.904     5.46e- 4  1.48e-20     12.8 
13 mu_1       0.4      1.06      3.44e- 2  8.08e-15      6.98
14 mu_1       0.5      1.13      2.15e- 1  2.01e-10      7.95
15 mu_1       0.6      1.06      6.22e- 1  1.50e- 7      5.84
16 mu_1       0.7      1.09      6.82e- 1  6.03e-12      5.83
17 mu_1       0.8      0.977     2.73e- 1  1.81e-18      4.81
18 mu_1       0.9      0.776     7.24e- 4  4.76e-30      9.76
19 mu_0       0.1      0.312     1.04e-13  0            21.2 
20 mu_0       0.2      1.01      3.70e- 8  0            32.1 
21 mu_0       0.3      0.954     1.23e- 4  0            16.4 
22 mu_0       0.4      1.03      1.71e- 2  0             9.31
23 mu_0       0.5      1.15      1.07e- 1  0             8.44
24 mu_0       0.6      1.07      6.07e- 1  0             5.48
25 mu_0       0.7      1.09      6.21e- 1  0             5.46
26 mu_0       0.8      1.02      3.32e- 1  0             4.41
27 mu_0       0.9      0.705     2.09e- 3  0             6.34
[1] "Total run time was 210.06 seconds"
