
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3323"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 1  7  4  4  5  3  5  2  5  5  3  3  5  2  4  5  2  2  1  4  1  3  5  3  1  4 
46 47 48 49 50 
 2  4  1  2  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03207 0.34812 0.61519 1.00000 5.00000 
[1] "event indicator table: "

   0    1 
1992 1331 
[1] "treatment indicator table: "

   0    1 
1257 2066 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1665
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1658
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 39"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 175.088 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.452 0.0739
 2 mu         0.1   0.2 0.519 0.0664
 3 mu         0.1   0.3 0.582 0.0777
 4 mu         0.1   0.4 0.572 0.0745
 5 mu         0.1   0.5 0.568 0.0810
 6 mu         0.2   0.1 0.411 0.0544
 7 mu         0.2   0.2 0.503 0.0493
 8 mu         0.2   0.3 0.554 0.0542
 9 mu         0.2   0.4 0.553 0.0544
10 mu         0.2   0.5 0.556 0.0645
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.903        0.446  1.22e-11      4.49
 2 mu         0.2      0.978        0.913  6.05e- 6      8.22
 3 mu         0.3      0.944        0.924  2.80e- 3      3.58
 4 mu         0.4      0.949        0.935  5.68e- 2      2.15
 5 mu         0.5      0.986        0.998  2.03e- 1      1.69
 6 mu         0.6      1.01         1.02   4.50e- 1      1.56
 7 mu         0.7      1.01         1.01   5.85e- 1      1.48
 8 mu         0.8      0.965        0.987  4.09e- 1      1.76
 9 mu         0.9      0.954        0.959  1.30e- 2      2.64
10 mu_1       0.1      0.946        0.690  5.95e-11      7.28
11 mu_1       0.2      0.972        0.914  1.48e- 5      6.91
12 mu_1       0.3      0.949        0.934  4.58e- 3      3.35
13 mu_1       0.4      0.953        0.951  7.09e- 2      2.06
14 mu_1       0.5      0.992        1.00   2.21e- 1      1.75
15 mu_1       0.6      1.02         1.01   4.80e- 1      1.49
16 mu_1       0.7      1.00         1.00   5.64e- 1      1.48
17 mu_1       0.8      0.962        0.984  3.68e- 1      1.79
18 mu_1       0.9      0.953        0.945  1.13e- 2      2.62
19 mu_0       0.1      0.898        0.425  6.90e-12      4.66
20 mu_0       0.2      0.979        0.903  3.86e- 6      8.55
21 mu_0       0.3      0.941        0.928  2.03e- 3      3.68
22 mu_0       0.4      0.946        0.932  4.73e- 2      2.22
23 mu_0       0.5      0.980        0.981  1.85e- 1      1.64
24 mu_0       0.6      1.01         1.02   4.07e- 1      1.66
25 mu_0       0.7      1.01         1.01   6.33e- 1      1.49
26 mu_0       0.8      0.978        0.985  4.63e- 1      1.63
27 mu_0       0.9      0.963        0.939  2.87e- 2      2.84
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.627     3.80e-11  4.21e-37     52.2 
 2 mu         0.2      6.71      3.54e- 6  4.11e-24    571.  
 3 mu         0.3     12.1       1.74e- 3  1.18e-16    878.  
 4 mu         0.4      9.39      9.47e- 2  1.71e-11    489.  
 5 mu         0.5      4.16      3.43e- 1  6.91e- 8    121.  
 6 mu         0.6      1.71      6.87e- 1  3.76e- 5     26.6 
 7 mu         0.7      1.41      4.50e- 1  2.88e- 8     16.2 
 8 mu         0.8      3.90      9.76e- 2  4.99e-14    199.  
 9 mu         0.9     16.6       2.18e- 4  1.68e-24   1239.  
10 mu_1       0.1      1.71      2.39e-10  3.78e-36    149.  
11 mu_1       0.2      9.53      1.24e- 5  1.84e-23    816.  
12 mu_1       0.3     12.2       3.67e- 3  3.53e-16    836.  
13 mu_1       0.4      7.87      1.46e- 1  3.85e-11    349.  
14 mu_1       0.5      3.39      4.12e- 1  1.31e- 7     69.1 
15 mu_1       0.6      1.55      6.27e- 1  5.95e- 5     22.7 
16 mu_1       0.7      1.47      3.88e- 1  1.07e- 8     19.9 
17 mu_1       0.8      4.13      7.36e- 2  1.62e-14    214.  
18 mu_1       0.9     17.5       1.44e- 4  4.85e-25   1343.  
19 mu_0       0.1      0.506     1.51e-11  4.77e-38     41.5 
20 mu_0       0.2      6.01      1.50e- 6  5.24e-25    510.  
21 mu_0       0.3     12.0       9.77e- 4  1.72e-17    896.  
22 mu_0       0.4     10.4       6.04e- 2  2.21e-12    582.  
23 mu_0       0.5      4.92      2.56e- 1  7.08e- 9    173.  
24 mu_0       0.6      1.94      5.44e- 1  4.82e- 6     32.3 
25 mu_0       0.7      1.24      5.79e- 1  7.11e- 8      7.53
26 mu_0       0.8      2.97      1.22e- 1  1.85e-13    139.  
27 mu_0       0.9      8.39      8.80e- 4  1.24e-23    339.  
[1] "Total run time was 178.372 seconds"
