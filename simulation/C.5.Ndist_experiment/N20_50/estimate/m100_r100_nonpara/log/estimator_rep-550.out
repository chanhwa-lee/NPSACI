
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3597"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 46 
 3  2  1  1  1  2  4  6  3  2  5  2  3  5  6  2  2  7  7  2  5  2  1  3  4  3 
47 48 49 50 
 2  5  5  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0408  0.3889  0.6325  1.0000  6.0000 
[1] "event indicator table: "

   0    1 
2111 1486 
[1] "treatment indicator table: "

   0    1 
1296 2301 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1827
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1770
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 248.246 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.477 0.123 
 2 mu         0.1   0.2 0.579 0.155 
 3 mu         0.1   0.3 0.647 0.168 
 4 mu         0.1   0.4 0.679 0.180 
 5 mu         0.1   0.5 0.755 0.188 
 6 mu         0.2   0.1 0.359 0.0440
 7 mu         0.2   0.2 0.434 0.0589
 8 mu         0.2   0.3 0.495 0.0582
 9 mu         0.2   0.4 0.525 0.0620
10 mu         0.2   0.5 0.598 0.0608
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      1.13        0.0942 0.000000239     21.4 
 2 mu         0.2      0.950       0.731  0.00127          4.95
 3 mu         0.3      0.996       0.963  0.0556           2.93
 4 mu         0.4      1.01        0.990  0.326            2.11
 5 mu         0.5      1.02        1.01   0.553            1.45
 6 mu         0.6      1.02        1.00   0.737            1.32
 7 mu         0.7      0.992       1.01   0.626            1.20
 8 mu         0.8      0.985       1.01   0.593            1.31
 9 mu         0.9      0.986       0.969  0.112            2.59
10 mu_1       0.1      1.15        0.189  0.00000101      21.8 
11 mu_1       0.2      0.950       0.821  0.00271          3.92
12 mu_1       0.3      1.00        0.968  0.0816           2.88
13 mu_1       0.4      1.00        0.981  0.385            1.88
14 mu_1       0.5      1.02        1.01   0.585            1.43
15 mu_1       0.6      1.01        1.00   0.770            1.32
16 mu_1       0.7      0.991       1.00   0.617            1.19
17 mu_1       0.8      0.985       1.00   0.596            1.32
18 mu_1       0.9      0.986       0.964  0.103            2.67
19 mu_0       0.1      1.13        0.0821 0.000000153     21.4 
20 mu_0       0.2      0.950       0.676  0.000910         5.46
21 mu_0       0.3      0.992       0.980  0.0444           2.95
22 mu_0       0.4      1.01        0.993  0.286            2.26
23 mu_0       0.5      1.01        1.01   0.521            1.48
24 mu_0       0.6      1.02        0.999  0.684            1.32
25 mu_0       0.7      0.994       1.00   0.649            1.26
26 mu_0       0.8      0.985       1.01   0.581            1.25
27 mu_0       0.9      0.983       0.997  0.189            1.85
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.391     4.04e-13  4.65e-38     31.3 
 2 mu         0.2      1.18      5.17e- 7  6.47e-25     46.2 
 3 mu         0.3      1.58      5.86e- 4  1.32e-17     30.9 
 4 mu         0.4      1.73      5.59e- 2  1.72e-12     32.9 
 5 mu         0.5      1.47      5.36e- 1  1.40e- 8      9.96
 6 mu         0.6      1.29      7.73e- 1  7.84e- 6      6.52
 7 mu         0.7      1.19      6.78e- 1  1.99e- 9     12.2 
 8 mu         0.8      1.26      3.18e- 1  1.03e-14      8.60
 9 mu         0.9      1.66      1.16e- 3  4.84e-24     29.5 
10 mu_1       0.1      0.683     2.46e-12  4.18e-37     49.4 
11 mu_1       0.2      1.31      1.71e- 6  2.96e-24     36.5 
12 mu_1       0.3      1.65      1.35e- 3  4.21e-17     27.0 
13 mu_1       0.4      1.67      8.72e- 2  4.10e-12     30.2 
14 mu_1       0.5      1.44      7.22e- 1  2.68e- 8      9.16
15 mu_1       0.6      1.27      8.33e- 1  2.06e- 6      6.75
16 mu_1       0.7      1.19      5.92e- 1  4.48e-10     12.4 
17 mu_1       0.8      1.28      2.60e- 1  2.03e-15      8.86
18 mu_1       0.9      1.67      8.63e- 4  8.50e-25     31.3 
19 mu_0       0.1      0.359     1.76e-13  5.16e-39     29.3 
20 mu_0       0.2      1.14      2.26e- 7  3.95e-26     48.7 
21 mu_0       0.3      1.55      2.73e- 4  8.59e-19     32.6 
22 mu_0       0.4      1.76      3.41e- 2  1.30e-13     34.7 
23 mu_0       0.5      1.51      4.09e- 1  1.27e- 9     10.8 
24 mu_0       0.6      1.32      8.53e- 1  2.16e- 6      6.52
25 mu_0       0.7      1.20      5.81e- 1  5.58e- 9     11.9 
26 mu_0       0.8      1.20      3.16e- 1  4.32e-14      7.92
27 mu_0       0.9      1.52      3.81e- 3  4.08e-23     16.4 
[1] "Total run time was 252.593 seconds"
