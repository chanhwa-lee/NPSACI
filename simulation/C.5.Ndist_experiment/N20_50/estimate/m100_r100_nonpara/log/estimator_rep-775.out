
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3495"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 4  1  3  3  2  2  5  4  3  3  6  4  5  3  4  2  3  1  1  7  3  1  4  6  1  5 
46 47 48 49 50 
 4  1  4  2  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04587 0.36616 0.62896 1.00000 7.00000 
[1] "event indicator table: "

   0    1 
2115 1380 
[1] "treatment indicator table: "

   0    1 
1140 2355 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1759
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1736
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 370.789 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.407 0.128 
 2 mu         0.1   0.2 0.510 0.138 
 3 mu         0.1   0.3 0.591 0.168 
 4 mu         0.1   0.4 0.599 0.159 
 5 mu         0.1   0.5 0.612 0.155 
 6 mu         0.2   0.1 0.383 0.0976
 7 mu         0.2   0.2 0.477 0.0860
 8 mu         0.2   0.3 0.553 0.118 
 9 mu         0.2   0.4 0.573 0.0991
10 mu         0.2   0.5 0.593 0.0789
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.969        0.209 0.0000189     20.5 
 2 mu         0.2      1.03         0.959 0.0292         3.65
 3 mu         0.3      1.02         0.987 0.263          2.05
 4 mu         0.4      1.01         0.988 0.518          1.70
 5 mu         0.5      1.00         0.981 0.671          1.47
 6 mu         0.6      0.988        0.980 0.725          1.29
 7 mu         0.7      0.993        0.995 0.742          1.28
 8 mu         0.8      0.989        1.00  0.691          1.28
 9 mu         0.9      0.990        0.985 0.592          1.54
10 mu_1       0.1      0.935        0.415 0.0000631      7.43
11 mu_1       0.2      1.05         1.09  0.0513         3.06
12 mu_1       0.3      1.02         0.981 0.250          1.88
13 mu_1       0.4      1.01         0.988 0.549          1.61
14 mu_1       0.5      1.00         0.962 0.682          1.45
15 mu_1       0.6      0.988        0.981 0.737          1.30
16 mu_1       0.7      0.993        0.998 0.727          1.28
17 mu_1       0.8      0.989        0.999 0.683          1.28
18 mu_1       0.9      0.991        0.984 0.576          1.56
19 mu_0       0.1      0.973        0.186 0.0000140     21.9 
20 mu_0       0.2      1.02         0.910 0.0236         3.80
21 mu_0       0.3      1.03         1.00  0.269          2.12
22 mu_0       0.4      1.02         0.988 0.497          1.75
23 mu_0       0.5      1.01         0.982 0.659          1.48
24 mu_0       0.6      0.988        0.975 0.706          1.31
25 mu_0       0.7      0.990        0.988 0.766          1.29
26 mu_0       0.8      0.991        1.00  0.718          1.31
27 mu_0       0.9      0.983        0.967 0.538          1.56
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.854     1.96e-15  4.87e-36     85.3 
 2 mu         0.2      0.857     1.79e- 8  2.38e-23     78.7 
 3 mu         0.3      0.494     1.34e- 4  3.60e-16     11.9 
 4 mu         0.4      0.818     2.02e- 2  1.15e-11      8.46
 5 mu         0.5      1.09      2.32e- 1  1.81e- 8      7.53
 6 mu         0.6      1.17      5.41e- 1  8.35e- 7      6.78
 7 mu         0.7      1.08      7.68e- 1  6.69e-11      5.22
 8 mu         0.8      1.15      4.25e- 1  6.82e-17      5.37
 9 mu         0.9      1.29      5.67e- 3  2.01e-27     16.1 
10 mu_1       0.1      1.22      1.43e-14  4.36e-35    122.  
11 mu_1       0.2      0.678     5.64e- 8  1.07e-22     56.2 
12 mu_1       0.3      0.543     2.79e- 4  1.14e-15     12.0 
13 mu_1       0.4      0.885     3.36e- 2  2.86e-11      9.33
14 mu_1       0.5      1.12      2.65e- 1  3.61e- 8      6.94
15 mu_1       0.6      1.17      5.41e- 1  1.99e- 7      7.12
16 mu_1       0.7      1.07      7.73e- 1  1.37e-11      5.18
17 mu_1       0.8      1.16      3.54e- 1  1.22e-17      5.34
18 mu_1       0.9      1.29      4.14e- 3  3.20e-28     16.3 
19 mu_0       0.1      0.813     6.55e-16  0            81.3 
20 mu_0       0.2      0.901     6.50e- 9  0            84.3 
21 mu_0       0.3      0.473     6.69e- 5  0            11.8 
22 mu_0       0.4      0.774     1.12e- 2  0             7.88
23 mu_0       0.5      1.07      1.46e- 1  0             8.41
24 mu_0       0.6      1.17      4.36e- 1  0             6.26
25 mu_0       0.7      1.10      5.31e- 1  0             5.48
26 mu_0       0.8      1.10      5.72e- 1  0             5.48
27 mu_0       0.9      1.28      1.30e- 2  0            14.3 
[1] "Total run time was 377.263 seconds"
