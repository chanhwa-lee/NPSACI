
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3533"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 1  3  4  5  3  5  2  5  2  3  1  2  3  1  3  3  4  9  2  3  4  3  5  3  2  3 
46 47 48 49 50 
 3  1  2  4  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04287 0.34650 0.60398 1.00000 5.35604 
[1] "event indicator table: "

   0    1 
2052 1481 
[1] "treatment indicator table: "

   0    1 
1367 2166 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1679
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1854
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 209.882 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.550 0.129 
 2 mu         0.1   0.2 0.614 0.149 
 3 mu         0.1   0.3 0.658 0.171 
 4 mu         0.1   0.4 0.699 0.171 
 5 mu         0.1   0.5 0.739 0.174 
 6 mu         0.2   0.1 0.393 0.0591
 7 mu         0.2   0.2 0.457 0.0623
 8 mu         0.2   0.3 0.489 0.0746
 9 mu         0.2   0.4 0.534 0.0692
10 mu         0.2   0.5 0.569 0.0625
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      1.20         0.468 0.00000558     26.1 
 2 mu         0.2      0.990        0.857 0.00958         5.03
 3 mu         0.3      0.956        0.900 0.163           2.36
 4 mu         0.4      0.988        0.976 0.428           1.50
 5 mu         0.5      0.998        1.01  0.607           1.29
 6 mu         0.6      1.00         1.01  0.690           1.34
 7 mu         0.7      0.994        0.997 0.663           1.41
 8 mu         0.8      1.00         0.992 0.711           1.47
 9 mu         0.9      1.01         1.02  0.160           1.95
10 mu_1       0.1      1.07         0.687 0.0000198      12.1 
11 mu_1       0.2      0.945        0.907 0.0174          4.33
12 mu_1       0.3      0.957        0.906 0.206           1.97
13 mu_1       0.4      0.993        1.00  0.460           1.46
14 mu_1       0.5      1.00         1.01  0.598           1.27
15 mu_1       0.6      1.00         1.01  0.703           1.37
16 mu_1       0.7      0.994        0.992 0.661           1.39
17 mu_1       0.8      1.00         0.987 0.689           1.48
18 mu_1       0.9      1.01         1.04  0.147           1.99
19 mu_0       0.1      1.22         0.426 0.00000399     27.6 
20 mu_0       0.2      1.00         0.857 0.00762         5.83
21 mu_0       0.3      0.956        0.896 0.144           2.53
22 mu_0       0.4      0.985        0.976 0.406           1.53
23 mu_0       0.5      0.997        0.996 0.615           1.31
24 mu_0       0.6      1.00         1.00  0.672           1.30
25 mu_0       0.7      0.995        0.998 0.635           1.47
26 mu_0       0.8      1.00         0.987 0.717           1.43
27 mu_0       0.9      0.995        1.01  0.275           1.72
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.0746     1.30e-12  7.79e-33      5.05
 2 mu         0.2     0.742      1.44e- 6  1.50e-21     26.1 
 3 mu         0.3     0.966      1.23e- 3  4.95e-15     22.8 
 4 mu         0.4     1.01       7.88e- 2  1.74e-10     20.2 
 5 mu         0.5     1.33       5.81e- 1  4.86e- 7     11.8 
 6 mu         0.6     1.57       1.15e+ 0  9.36e- 7     12.9 
 7 mu         0.7     1.49       7.69e- 1  5.03e-11      6.73
 8 mu         0.8     1.18       2.54e- 1  2.27e-17      8.69
 9 mu         0.9     1.81       6.06e- 4  1.19e-28     26.6 
10 mu_1       0.1     0.153      7.54e-12  7.22e-32      9.47
11 mu_1       0.2     0.886      4.53e- 6  6.97e-21     24.5 
12 mu_1       0.3     0.971      2.65e- 3  1.53e-14     22.0 
13 mu_1       0.4     1.03       1.09e- 1  4.04e-10     21.2 
14 mu_1       0.5     1.38       5.08e- 1  9.01e- 7     10.6 
15 mu_1       0.6     1.59       1.22e+ 0  2.93e- 7     12.3 
16 mu_1       0.7     1.47       7.34e- 1  1.35e-11      6.64
17 mu_1       0.8     1.17       2.02e- 1  5.32e-18      8.91
18 mu_1       0.9     1.84       4.37e- 4  2.48e-29     27.4 
19 mu_0       0.1     0.0659     5.23e-13  6.33e-34      4.56
20 mu_0       0.2     0.706      6.97e- 7  1.38e-22     26.6 
21 mu_0       0.3     0.964      6.17e- 4  5.18e-16     23.2 
22 mu_0       0.4     0.988      4.91e- 2  2.13e-11     19.6 
23 mu_0       0.5     1.28       4.43e- 1  7.11e- 8     13.7 
24 mu_0       0.6     1.55       1.02e+ 0  1.90e- 6     13.9 
25 mu_0       0.7     1.54       8.47e- 1  1.36e-10      6.95
26 mu_0       0.8     1.19       4.30e- 1  9.21e-17      7.82
27 mu_0       0.9     1.53       2.15e- 3  9.68e-28     19.0 
[1] "Total run time was 212.985 seconds"
