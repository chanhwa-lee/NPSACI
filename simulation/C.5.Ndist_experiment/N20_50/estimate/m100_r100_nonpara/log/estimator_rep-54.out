
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3277"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 42 43 44 45 46 
 6  6  2  6  3  3  4  4  1  5  6  8  2  2  1  3  4  2  3  5  2  2  4  2  1  2 
47 48 49 50 
 3  3  3  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02151 0.28164 0.57013 0.98614 6.01920 
[1] "event indicator table: "

   0    1 
1962 1315 
[1] "treatment indicator table: "

   0    1 
1375 1902 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1668
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 50"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 95"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1609
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 71"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 180.104 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.262 0.0663
 2 mu         0.1   0.2 0.367 0.0561
 3 mu         0.1   0.3 0.417 0.0758
 4 mu         0.1   0.4 0.441 0.0691
 5 mu         0.1   0.5 0.498 0.0682
 6 mu         0.2   0.1 0.289 0.0320
 7 mu         0.2   0.2 0.379 0.0311
 8 mu         0.2   0.3 0.440 0.0360
 9 mu         0.2   0.4 0.455 0.0304
10 mu         0.2   0.5 0.494 0.0279
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.885        0.578   0.00299      7.89
 2 mu         0.2      0.954        0.886   0.224        1.92
 3 mu         0.3      1.01         0.984   0.534        1.61
 4 mu         0.4      1.01         0.995   0.636        1.33
 5 mu         0.5      1.00         1.00    0.725        1.22
 6 mu         0.6      1.00         0.994   0.722        1.21
 7 mu         0.7      1.01         1.01    0.775        1.30
 8 mu         0.8      1.00         0.994   0.585        1.40
 9 mu         0.9      0.991        0.995   0.434        1.63
10 mu_1       0.1      0.865        0.767   0.00787      2.94
11 mu_1       0.2      0.975        0.909   0.339        1.74
12 mu_1       0.3      1.02         1.01    0.553        1.58
13 mu_1       0.4      1.00         1.01    0.677        1.32
14 mu_1       0.5      1.00         1.00    0.713        1.23
15 mu_1       0.6      1.00         0.993   0.723        1.22
16 mu_1       0.7      1.01         1.01    0.776        1.32
17 mu_1       0.8      1.00         0.998   0.571        1.40
18 mu_1       0.9      0.990        0.991   0.422        1.65
19 mu_0       0.1      0.887        0.549   0.00245      8.48
20 mu_0       0.2      0.948        0.890   0.195        2.01
21 mu_0       0.3      1.01         0.977   0.516        1.62
22 mu_0       0.4      1.01         0.990   0.609        1.34
23 mu_0       0.5      0.999        1.01    0.722        1.24
24 mu_0       0.6      1.00         1.00    0.721        1.22
25 mu_0       0.7      1.01         1.01    0.770        1.27
26 mu_0       0.8      1.01         1.00    0.638        1.44
27 mu_0       0.9      1.01         1.04    0.500        1.45
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.119     1.66e- 9  1.37e-38      5.23
 2 mu         0.2      0.774     1.03e- 4  3.01e-25     19.8 
 3 mu         0.3      1.13      2.58e- 2  1.48e-17     10.6 
 4 mu         0.4      1.09      4.11e- 1  3.35e-12      5.49
 5 mu         0.5      1.10      7.80e- 1  3.71e- 8      5.16
 6 mu         0.6      0.979     6.59e- 1  5.29e- 5      4.50
 7 mu         0.7      0.833     4.11e- 1  3.36e- 8      5.99
 8 mu         0.8      0.924     4.65e- 2  1.15e-13      7.00
 9 mu         0.9      1.34      4.42e- 5  1.37e-23     19.3 
10 mu_1       0.1      0.257     9.65e- 9  1.26e-37     10.5 
11 mu_1       0.2      0.945     2.92e- 4  1.38e-24     19.8 
12 mu_1       0.3      1.13      4.78e- 2  4.54e-17      8.84
13 mu_1       0.4      1.08      5.51e- 1  7.70e-12      5.17
14 mu_1       0.5      1.10      6.74e- 1  6.82e- 8      5.19
15 mu_1       0.6      0.957     6.40e- 1  5.31e- 5      4.53
16 mu_1       0.7      0.826     3.74e- 1  1.23e- 8      5.94
17 mu_1       0.8      0.939     3.25e- 2  3.66e-14      6.89
18 mu_1       0.9      1.35      3.07e- 5  3.89e-24     20.8 
19 mu_0       0.1      0.104     8.38e-10  1.24e-39      4.65
20 mu_0       0.2      0.732     5.33e- 5  3.07e-26     19.8 
21 mu_0       0.3      1.13      1.50e- 2  1.73e-18     11.4 
22 mu_0       0.4      1.09      3.15e- 1  4.56e-13      5.96
23 mu_0       0.5      1.10      7.13e- 1  6.06e- 9      5.46
24 mu_0       0.6      1.01      6.86e- 1  3.67e- 6      4.46
25 mu_0       0.7      0.849     5.37e- 1  8.35e- 8      6.11
26 mu_0       0.8      0.862     8.43e- 2  4.27e-13      7.45
27 mu_0       0.9      1.25      1.66e- 4  1.02e-22     14.9 
[1] "Total run time was 183.315 seconds"
