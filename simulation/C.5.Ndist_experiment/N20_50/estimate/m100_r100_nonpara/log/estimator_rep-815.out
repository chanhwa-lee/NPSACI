
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3489"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 2  4  4  2  5  3  3  3  3  3  5  1  3  7  1  4  4  2  5  2  3  1  3  5  1  6 
46 47 48 49 50 
 1  5  3  3  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03173 0.32133 0.59479 0.99916 5.34064 
[1] "event indicator table: "

   0    1 
2089 1400 
[1] "treatment indicator table: "

   0    1 
1409 2080 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1691
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1798
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 8"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 200.477 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.524 0.0745
 2 mu         0.1   0.2 0.628 0.0856
 3 mu         0.1   0.3 0.706 0.0945
 4 mu         0.1   0.4 0.796 0.120 
 5 mu         0.1   0.5 0.815 0.116 
 6 mu         0.2   0.1 0.389 0.0558
 7 mu         0.2   0.2 0.473 0.0584
 8 mu         0.2   0.3 0.534 0.0514
 9 mu         0.2   0.4 0.620 0.0885
10 mu         0.2   0.5 0.643 0.0747
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.24         0.778    0.0130     12.3 
 2 mu         0.2      0.996        0.967    0.293       2.60
 3 mu         0.3      0.977        0.973    0.500       1.55
 4 mu         0.4      0.985        0.987    0.461       1.56
 5 mu         0.5      0.985        0.983    0.626       1.34
 6 mu         0.6      0.987        0.983    0.705       1.35
 7 mu         0.7      1.00         1.01     0.773       1.45
 8 mu         0.8      1.01         0.990    0.592       1.39
 9 mu         0.9      1.01         0.964    0.234       2.12
10 mu_1       0.1      1.05         0.870    0.0327      6.08
11 mu_1       0.2      0.982        0.958    0.361       2.23
12 mu_1       0.3      0.980        0.972    0.471       1.52
13 mu_1       0.4      0.987        0.987    0.480       1.49
14 mu_1       0.5      0.984        0.981    0.642       1.34
15 mu_1       0.6      0.989        0.983    0.717       1.37
16 mu_1       0.7      1.01         1.02     0.750       1.44
17 mu_1       0.8      1.01         0.987    0.580       1.40
18 mu_1       0.9      1.01         0.964    0.225       2.14
19 mu_0       0.1      1.26         0.771    0.0109     13.0 
20 mu_0       0.2      0.999        0.955    0.276       2.69
21 mu_0       0.3      0.976        0.966    0.512       1.60
22 mu_0       0.4      0.984        0.986    0.449       1.60
23 mu_0       0.5      0.986        0.982    0.609       1.35
24 mu_0       0.6      0.986        0.975    0.687       1.33
25 mu_0       0.7      1.00         1.02     0.760       1.45
26 mu_0       0.8      1.01         0.990    0.638       1.35
27 mu_0       0.9      1.01         1.01     0.307       2.00
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.171     2.36e-11  3.94e-40      7.26
 2 mu         0.2      1.46      1.01e- 5  6.17e-27     33.4 
 3 mu         0.3      1.39      5.76e- 3  3.02e-19     16.5 
 4 mu         0.4      1.19      1.74e- 1  8.14e-14      9.57
 5 mu         0.5      1.21      5.11e- 1  1.25e- 9      7.14
 6 mu         0.6      1.15      5.80e- 1  5.98e- 7      7.29
 7 mu         0.7      1.13      4.53e- 1  2.41e-11      7.65
 8 mu         0.8      1.47      7.80e- 2  7.25e-18      8.81
 9 mu         0.9      2.05      9.64e- 5  1.90e-29     42.5 
10 mu_1       0.1      0.358     1.38e-10  3.86e-39     13.3 
11 mu_1       0.2      1.64      2.84e- 5  3.02e-26     30.7 
12 mu_1       0.3      1.33      1.18e- 2  9.85e-19     12.2 
13 mu_1       0.4      1.21      2.56e- 1  1.99e-13      8.77
14 mu_1       0.5      1.21      4.12e- 1  2.44e- 9      6.63
15 mu_1       0.6      1.13      6.09e- 1  1.83e- 7      7.75
16 mu_1       0.7      1.14      4.91e- 1  6.32e-12      7.60
17 mu_1       0.8      1.51      5.45e- 2  1.66e-18      9.23
18 mu_1       0.9      2.08      6.79e- 5  3.88e-30     46.2 
19 mu_0       0.1      0.151     1.13e-11  9.74e-42      6.58
20 mu_0       0.2      1.42      5.49e- 6  1.71e-28     34.1 
21 mu_0       0.3      1.41      3.15e- 3  9.59e-21     18.3 
22 mu_0       0.4      1.18      1.37e- 1  3.01e-15     10.1 
23 mu_0       0.5      1.21      4.90e- 1  5.54e-11      7.65
24 mu_0       0.6      1.17      5.62e- 1  1.69e- 7      6.59
25 mu_0       0.7      1.09      4.30e- 1  6.56e-11      7.76
26 mu_0       0.8      1.34      1.46e- 1  2.96e-17      8.81
27 mu_0       0.9      1.79      3.52e- 4  1.55e-28     16.5 
[1] "Total run time was 203.601 seconds"
