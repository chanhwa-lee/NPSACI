
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3512"
[1] "cluster size dist'n: "

20 21 22 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 
 3  4  5  2  2  6  5  3  5  1  4  3  1  4  2  5  3  4  2  4  1  2  2  6  2  6 
47 48 49 50 
 3  3  6  1 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0176  0.2970  0.5885  1.0000  6.0000 
[1] "event indicator table: "

   0    1 
2074 1438 
[1] "treatment indicator table: "

   0    1 
1349 2163 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1743
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1769
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 61"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 383.481 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.493 0.0707
 2 mu         0.1   0.2 0.608 0.0859
 3 mu         0.1   0.3 0.655 0.0855
 4 mu         0.1   0.4 0.706 0.0971
 5 mu         0.1   0.5 0.740 0.0892
 6 mu         0.2   0.1 0.404 0.0506
 7 mu         0.2   0.2 0.494 0.0588
 8 mu         0.2   0.3 0.540 0.0555
 9 mu         0.2   0.4 0.589 0.0652
10 mu         0.2   0.5 0.617 0.0560
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.25         0.909    0.0306      6.22
 2 mu         0.2      1.07         0.990    0.387       3.17
 3 mu         0.3      1.02         0.967    0.509       3.09
 4 mu         0.4      0.994        0.977    0.636       1.65
 5 mu         0.5      0.999        0.994    0.709       1.30
 6 mu         0.6      1.01         1.00     0.685       1.30
 7 mu         0.7      0.998        1.00     0.699       1.31
 8 mu         0.8      1.00         0.964    0.703       1.54
 9 mu         0.9      1.03         0.997    0.185       1.92
10 mu_1       0.1      1.15         1.02     0.0717      3.26
11 mu_1       0.2      1.06         0.991    0.430       3.11
12 mu_1       0.3      1.01         0.966    0.558       2.92
13 mu_1       0.4      0.993        0.983    0.661       1.49
14 mu_1       0.5      1.00         0.984    0.692       1.33
15 mu_1       0.6      1.01         1.01     0.696       1.32
16 mu_1       0.7      0.997        0.994    0.682       1.33
17 mu_1       0.8      1.00         0.966    0.690       1.56
18 mu_1       0.9      1.03         1.00     0.171       1.99
19 mu_0       0.1      1.26         0.878    0.0261      6.56
20 mu_0       0.2      1.08         1.00     0.360       3.19
21 mu_0       0.3      1.02         0.972    0.487       3.17
22 mu_0       0.4      0.994        0.979    0.620       1.76
23 mu_0       0.5      0.998        0.994    0.727       1.27
24 mu_0       0.6      1.01         1.00     0.667       1.28
25 mu_0       0.7      0.999        0.990    0.718       1.30
26 mu_0       0.8      0.999        0.966    0.686       1.52
27 mu_0       0.9      1.01         0.987    0.306       1.73
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.737     8.69e-13  2.31e-39     73.0 
 2 mu         0.2      0.440     1.20e- 6  3.21e-26     26.6 
 3 mu         0.3      0.767     1.34e- 3  1.37e-18      8.83
 4 mu         0.4      1.30      5.51e- 2  3.17e-13     12.8 
 5 mu         0.5      1.16      5.73e- 1  4.05e- 9      7.84
 6 mu         0.6      0.966     4.36e- 1  2.35e- 8      7.60
 7 mu         0.7      0.853     3.76e- 1  9.08e-13      5.10
 8 mu         0.8      1.05      8.11e- 2  3.60e-19      6.86
 9 mu         0.9      1.92      3.25e- 5  2.36e-30     27.6 
10 mu_1       0.1      0.868     5.18e-12  2.21e-38     84.9 
11 mu_1       0.2      0.422     3.62e- 6  1.53e-25     15.5 
12 mu_1       0.3      0.909     2.73e- 3  4.38e-18      9.23
13 mu_1       0.4      1.33      8.90e- 2  7.59e-13     12.0 
14 mu_1       0.5      1.12      6.09e- 1  7.74e- 9      6.72
15 mu_1       0.6      0.941     3.73e- 1  4.55e- 9      8.01
16 mu_1       0.7      0.858     3.01e- 1  1.51e-13      4.61
17 mu_1       0.8      1.07      6.06e- 2  5.24e-20      7.06
18 mu_1       0.9      1.96      2.10e- 5  3.05e-31     29.3 
19 mu_0       0.1      0.722     4.04e-13  0            71.7 
20 mu_0       0.2      0.444     5.97e- 7  0            29.4 
21 mu_0       0.3      0.706     7.40e- 4  0             8.89
22 mu_0       0.4      1.27      3.24e- 2  0            13.4 
23 mu_0       0.5      1.21      5.45e- 1  0             8.96
24 mu_0       0.6      1.00      3.97e- 1  0             6.98
25 mu_0       0.7      0.843     3.29e- 1  0             6.24
26 mu_0       0.8      0.933     1.14e- 1  0             6.06
27 mu_0       0.9      1.56      9.44e- 5  0            16.3 
[1] "Total run time was 388.817 seconds"
