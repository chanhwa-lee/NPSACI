
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3646"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 33 34 35 36 37 38 39 40 41 42 43 44 45 46 
 3  1  2  1  6  4  1  4  1  3  5  2  3  2  4  3  3  4  4  1 10  2  5  4  4  4 
47 48 49 50 
 7  3  3  1 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03001 0.32510 0.60307 0.97697 5.40822 
[1] "event indicator table: "

   0    1 
2117 1529 
[1] "treatment indicator table: "

   0    1 
1408 2238 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1831
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 77"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1815
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 263.613 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.373 0.0666
 2 mu         0.1   0.2 0.478 0.0703
 3 mu         0.1   0.3 0.591 0.0747
 4 mu         0.1   0.4 0.638 0.0834
 5 mu         0.1   0.5 0.695 0.0844
 6 mu         0.2   0.1 0.374 0.0548
 7 mu         0.2   0.2 0.465 0.0606
 8 mu         0.2   0.3 0.557 0.0579
 9 mu         0.2   0.4 0.597 0.0511
10 mu         0.2   0.5 0.663 0.0521
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.973        0.773   0.00280      6.67
 2 mu         0.2      1.00         0.936   0.127        2.63
 3 mu         0.3      0.976        0.951   0.399        2.24
 4 mu         0.4      0.978        0.955   0.624        1.51
 5 mu         0.5      0.972        0.970   0.572        1.34
 6 mu         0.6      0.991        1.01    0.611        1.51
 7 mu         0.7      1.01         1.01    0.676        1.35
 8 mu         0.8      1.03         1.02    0.666        1.57
 9 mu         0.9      1.07         1.08    0.576        1.74
10 mu_1       0.1      1.00         0.850   0.00818      5.56
11 mu_1       0.2      0.997        0.977   0.191        2.48
12 mu_1       0.3      0.975        0.955   0.476        2.15
13 mu_1       0.4      0.978        0.956   0.614        1.51
14 mu_1       0.5      0.973        0.970   0.555        1.33
15 mu_1       0.6      0.993        1.02    0.622        1.53
16 mu_1       0.7      1.01         1.01    0.690        1.37
17 mu_1       0.8      1.04         1.02    0.666        1.60
18 mu_1       0.9      1.08         1.08    0.560        1.77
19 mu_0       0.1      0.970        0.724   0.00220      6.80
20 mu_0       0.2      1.01         0.934   0.107        2.66
21 mu_0       0.3      0.976        0.950   0.366        2.28
22 mu_0       0.4      0.978        0.949   0.615        1.51
23 mu_0       0.5      0.972        0.955   0.588        1.35
24 mu_0       0.6      0.987        1.01    0.594        1.48
25 mu_0       0.7      1.01         1.01    0.646        1.32
26 mu_0       0.8      1.03         1.01    0.667        1.53
27 mu_0       0.9      1.05         1.03    0.609        1.71
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       1.76     8.79e-13  9.79e-43    104.  
 2 mu         0.2       1.37     8.02e- 7  6.12e-29     47.8 
 3 mu         0.3       1.12     1.30e- 3  6.75e-21     17.6 
 4 mu         0.4       1.27     9.54e- 2  3.23e-15     14.3 
 5 mu         0.5       1.43     5.39e- 1  7.73e-11     15.4 
 6 mu         0.6       1.27     7.50e- 1  1.69e- 7      8.75
 7 mu         0.7       1.02     5.21e- 1  1.16e-11      5.23
 8 mu         0.8       1.06     5.97e- 2  1.04e-17     10.4 
 9 mu         0.9       1.87     6.33e- 5  2.72e-28     44.1 
10 mu_1       0.1       2.25     5.36e-12  9.58e-42    126.  
11 mu_1       0.2       1.18     2.51e- 6  3.00e-28     29.5 
12 mu_1       0.3       1.16     2.71e- 3  2.20e-20     14.1 
13 mu_1       0.4       1.29     1.16e- 1  7.91e-15     13.0 
14 mu_1       0.5       1.43     6.15e- 1  1.51e-10     15.8 
15 mu_1       0.6       1.23     7.13e- 1  3.43e- 8      7.78
16 mu_1       0.7       1.02     4.77e- 1  2.02e-12      5.47
17 mu_1       0.8       1.06     4.50e- 2  1.58e-18     10.3 
18 mu_1       0.9       1.91     4.45e- 5  3.68e-29     45.0 
19 mu_0       0.1       1.70     3.81e-13  0           101.  
20 mu_0       0.2       1.42     3.93e- 7  0            52.4 
21 mu_0       0.3       1.10     6.76e- 4  0            19.0 
22 mu_0       0.4       1.26     5.98e- 2  0            15.2 
23 mu_0       0.5       1.43     4.56e- 1  0            15.1 
24 mu_0       0.6       1.32     7.23e- 1  0            10.2 
25 mu_0       0.7       1.02     6.00e- 1  0             5.48
26 mu_0       0.8       1.03     7.11e- 2  0            10.9 
27 mu_0       0.9       1.45     8.71e- 5  0            35.3 
[1] "Total run time was 268.094 seconds"
