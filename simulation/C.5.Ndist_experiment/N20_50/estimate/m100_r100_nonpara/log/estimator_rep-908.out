
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3594"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 4  1  7  1  3  1  2  3  1  4  2  3  3  4  2  5  9  1  3  2  3  2  6  2  4  2 
46 47 48 49 50 
 6  2  5  1  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02355 0.31306 0.59387 1.00000 5.00000 
[1] "event indicator table: "

   0    1 
2140 1454 
[1] "treatment indicator table: "

   0    1 
1442 2152 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1751
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 48"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1843
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 165.056 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.594 0.134 
 2 mu         0.1   0.2 0.719 0.163 
 3 mu         0.1   0.3 0.814 0.186 
 4 mu         0.1   0.4 0.827 0.184 
 5 mu         0.1   0.5 0.870 0.197 
 6 mu         0.2   0.1 0.397 0.0542
 7 mu         0.2   0.2 0.504 0.0627
 8 mu         0.2   0.3 0.583 0.0729
 9 mu         0.2   0.4 0.604 0.0686
10 mu         0.2   0.5 0.643 0.0765
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      1.28         0.570 0.00000640     27.2 
 2 mu         0.2      1.07         0.944 0.0122          4.43
 3 mu         0.3      1.02         0.998 0.152           2.02
 4 mu         0.4      1.01         1.00  0.579           1.50
 5 mu         0.5      1.01         1.01  0.707           1.29
 6 mu         0.6      1.00         1.00  0.736           1.28
 7 mu         0.7      0.999        0.996 0.705           1.29
 8 mu         0.8      0.968        0.951 0.608           1.45
 9 mu         0.9      0.953        0.932 0.253           1.86
10 mu_1       0.1      1.22         0.744 0.0000241      23.3 
11 mu_1       0.2      1.06         0.972 0.0219          4.07
12 mu_1       0.3      1.02         0.991 0.189           1.75
13 mu_1       0.4      1.01         1.00  0.642           1.46
14 mu_1       0.5      1.01         1.00  0.718           1.28
15 mu_1       0.6      1.00         0.999 0.752           1.28
16 mu_1       0.7      0.998        0.995 0.699           1.28
17 mu_1       0.8      0.966        0.952 0.603           1.48
18 mu_1       0.9      0.953        0.934 0.235           1.89
19 mu_0       0.1      1.29         0.541 0.00000443     27.7 
20 mu_0       0.2      1.07         0.935 0.00946         4.82
21 mu_0       0.3      1.02         0.992 0.136           2.18
22 mu_0       0.4      1.01         0.991 0.530           1.53
23 mu_0       0.5      1.01         1.01  0.696           1.31
24 mu_0       0.6      1.00         0.997 0.712           1.28
25 mu_0       0.7      1.00         0.999 0.717           1.32
26 mu_0       0.8      0.974        0.970 0.626           1.34
27 mu_0       0.9      0.954        0.964 0.341           1.65
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.0772     1.45e-11  1.47e-35      3.97
 2 mu         0.2     1.27       3.24e- 6  7.16e-23     31.3 
 3 mu         0.3     2.06       2.30e- 3  2.11e-16     56.3 
 4 mu         0.4     1.24       1.29e- 1  7.57e-12     16.4 
 5 mu         0.5     1.04       5.46e- 1  2.43e- 8      5.39
 6 mu         0.6     1.17       9.12e- 1  1.65e- 5      4.63
 7 mu         0.7     1.13       7.24e- 1  4.28e- 8      4.05
 8 mu         0.8     1.15       7.76e- 2  1.71e-13      7.49
 9 mu         0.9     1.47       5.78e- 5  1.29e-23     27.8 
10 mu_1       0.1     0.174      8.91e-11  1.31e-34      8.17
11 mu_1       0.2     1.64       9.15e- 6  3.21e-22     43.0 
12 mu_1       0.3     1.97       5.03e- 3  6.83e-16     51.6 
13 mu_1       0.4     1.14       1.87e- 1  1.84e-11     14.1 
14 mu_1       0.5     1.06       6.32e- 1  4.73e- 8      4.46
15 mu_1       0.6     1.19       8.34e- 1  2.68e- 5      4.38
16 mu_1       0.7     1.12       6.27e- 1  1.46e- 8      4.24
17 mu_1       0.8     1.16       5.81e- 2  5.98e-14      8.07
18 mu_1       0.9     1.47       3.85e- 5  4.02e-24     27.7 
19 mu_0       0.1     0.0665     6.24e-12  1.70e-36      3.50
20 mu_0       0.2     1.18       1.76e- 6  2.42e-24     28.3 
21 mu_0       0.3     2.09       1.12e- 3  7.92e-18     58.3 
22 mu_0       0.4     1.30       8.50e- 2  3.32e-13     18.4 
23 mu_0       0.5     1.02       4.22e- 1  1.28e- 9      6.32
24 mu_0       0.6     1.15       9.17e- 1  1.09e- 6      5.02
25 mu_0       0.7     1.15       7.96e- 1  1.09e- 7      4.36
26 mu_0       0.8     1.14       1.46e- 1  6.15e-13      6.28
27 mu_0       0.9     1.44       2.32e- 4  9.31e-23     29.0 
[1] "Total run time was 168.176 seconds"
