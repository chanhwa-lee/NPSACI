
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3549"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 33 34 35 36 37 38 39 40 41 42 43 44 45 46 
 4  3  5  3  6  1  3  1  4  2  3  1  1  4  4  5  3  3  5  5  2  6  3  3  1  3 
47 48 49 50 
 6  3  1  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03914 0.35321 0.62164 1.00000 5.75781 
[1] "event indicator table: "

   0    1 
2125 1424 
[1] "treatment indicator table: "

   0    1 
1324 2225 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1799
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1750
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 46"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 261.131 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.357 0.0761
 2 mu         0.1   0.2 0.460 0.107 
 3 mu         0.1   0.3 0.477 0.0911
 4 mu         0.1   0.4 0.515 0.0976
 5 mu         0.1   0.5 0.497 0.101 
 6 mu         0.2   0.1 0.349 0.0484
 7 mu         0.2   0.2 0.445 0.0577
 8 mu         0.2   0.3 0.480 0.0393
 9 mu         0.2   0.4 0.517 0.0394
10 mu         0.2   0.5 0.514 0.0406
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.898        0.320 0.0000711     12.6 
 2 mu         0.2      0.881        0.817 0.0146         1.91
 3 mu         0.3      0.985        0.984 0.168          1.66
 4 mu         0.4      1.01         1.03  0.569          1.38
 5 mu         0.5      1.01         1.00  0.755          1.33
 6 mu         0.6      0.997        1.00  0.710          1.25
 7 mu         0.7      0.996        0.993 0.735          1.25
 8 mu         0.8      1.00         0.992 0.635          1.40
 9 mu         0.9      0.991        0.944 0.137          1.78
10 mu_1       0.1      0.872        0.556 0.000263      10.1 
11 mu_1       0.2      0.905        0.881 0.0288         1.83
12 mu_1       0.3      0.998        0.984 0.240          1.66
13 mu_1       0.4      1.01         1.02  0.569          1.31
14 mu_1       0.5      1.01         0.992 0.765          1.33
15 mu_1       0.6      0.995        0.997 0.726          1.25
16 mu_1       0.7      0.997        0.995 0.710          1.26
17 mu_1       0.8      1.00         1.01  0.640          1.42
18 mu_1       0.9      0.992        0.955 0.125          1.79
19 mu_0       0.1      0.901        0.295 0.0000498     12.9 
20 mu_0       0.2      0.875        0.790 0.0111         2.03
21 mu_0       0.3      0.980        0.967 0.137          1.66
22 mu_0       0.4      1.01         1.01  0.503          1.42
23 mu_0       0.5      1.01         1.01  0.740          1.34
24 mu_0       0.6      0.998        1.00  0.686          1.24
25 mu_0       0.7      0.995        0.988 0.730          1.23
26 mu_0       0.8      1.00         1.00  0.613          1.37
27 mu_0       0.9      0.980        0.953 0.243          1.65
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.0986     4.43e-13  8.06e-36      9.10
 2 mu         0.2     0.286      4.77e- 7  3.93e-23     13.8 
 3 mu         0.3     0.598      4.76e- 4  7.53e-16      6.96
 4 mu         0.4     0.853      3.71e- 2  3.80e-11      5.33
 5 mu         0.5     0.920      4.60e- 1  1.02e- 7      3.95
 6 mu         0.6     1.06       8.79e- 1  5.54e- 5      4.21
 7 mu         0.7     1.14       6.83e- 1  3.34e- 6      6.16
 8 mu         0.8     1.14       1.87e- 1  5.74e-11      6.99
 9 mu         0.9     1.46       2.94e- 4  7.82e-20     23.1 
10 mu_1       0.1     0.172      3.29e-12  7.22e-35     15.2 
11 mu_1       0.2     0.339      1.44e- 6  1.76e-22     11.5 
12 mu_1       0.3     0.668      1.15e- 3  2.25e-15      6.63
13 mu_1       0.4     0.871      5.81e- 2  9.02e-11      5.40
14 mu_1       0.5     0.926      5.85e- 1  1.93e- 7      3.95
15 mu_1       0.6     1.07       8.82e- 1  8.76e- 5      4.39
16 mu_1       0.7     1.15       7.44e- 1  1.49e- 6      6.47
17 mu_1       0.8     1.14       1.43e- 1  2.29e-11      7.17
18 mu_1       0.9     1.49       2.16e- 4  2.77e-20     23.9 
19 mu_0       0.1     0.0904     1.11e-13  0             8.43
20 mu_0       0.2     0.272      2.14e- 7  0            14.4 
21 mu_0       0.3     0.568      1.93e- 4  0             7.10
22 mu_0       0.4     0.841      2.08e- 2  0             5.34
23 mu_0       0.5     0.913      3.66e- 1  0             3.95
24 mu_0       0.6     1.03       8.09e- 1  0             3.95
25 mu_0       0.7     1.13       7.22e- 1  0             5.45
26 mu_0       0.8     1.14       2.13e- 1  0             6.29
27 mu_0       0.9     1.24       5.60e- 4  0            16.3 
[1] "Total run time was 264.72 seconds"
