
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3529"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 4  2  2  4  2  9  2  2  1  2  3  4  5  3  1  3  3  3  2  4  5  2  1  3 10  3 
46 47 48 49 50 
 5  3  1  4  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.05349 0.39329 0.66688 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
2109 1420 
[1] "treatment indicator table: "

   0    1 
1170 2359 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1654
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 6"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 37"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1875
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 234.277 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.312 0.114 
 2 mu         0.1   0.2 0.408 0.119 
 3 mu         0.1   0.3 0.429 0.107 
 4 mu         0.1   0.4 0.450 0.103 
 5 mu         0.1   0.5 0.504 0.123 
 6 mu         0.2   0.1 0.321 0.0717
 7 mu         0.2   0.2 0.431 0.0748
 8 mu         0.2   0.3 0.490 0.0705
 9 mu         0.2   0.4 0.531 0.0722
10 mu         0.2   0.5 0.587 0.0834
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.647       0.0832  6.56e-11      9.07
 2 mu         0.2      0.946       0.664   2.29e- 5      8.32
 3 mu         0.3      1.01        0.913   1.03e- 2      3.43
 4 mu         0.4      0.989       0.941   2.33e- 1      1.92
 5 mu         0.5      1.01        1.01    5.55e- 1      1.50
 6 mu         0.6      0.987       0.984   7.15e- 1      1.31
 7 mu         0.7      0.984       0.974   7.61e- 1      1.33
 8 mu         0.8      0.990       0.977   5.96e- 1      1.31
 9 mu         0.9      0.946       0.971   3.99e- 1      1.43
10 mu_1       0.1      0.708       0.179   3.29e-10      9.11
11 mu_1       0.2      1.01        0.768   5.76e- 5      7.85
12 mu_1       0.3      1.00        0.944   1.74e- 2      2.79
13 mu_1       0.4      0.993       0.963   2.98e- 1      1.88
14 mu_1       0.5      1.01        1.00    5.88e- 1      1.44
15 mu_1       0.6      0.984       0.983   7.06e- 1      1.32
16 mu_1       0.7      0.985       0.977   7.42e- 1      1.32
17 mu_1       0.8      0.990       0.976   5.94e- 1      1.33
18 mu_1       0.9      0.945       0.970   3.80e- 1      1.46
19 mu_0       0.1      0.640       0.0740  3.63e-11      9.07
20 mu_0       0.2      0.931       0.634   1.42e- 5      8.43
21 mu_0       0.3      1.01        0.897   7.25e- 3      3.80
22 mu_0       0.4      0.986       0.945   1.89e- 1      1.95
23 mu_0       0.5      1.01        1.02    5.23e- 1      1.56
24 mu_0       0.6      0.992       0.990   7.29e- 1      1.30
25 mu_0       0.7      0.982       0.977   7.57e- 1      1.35
26 mu_0       0.8      0.993       0.988   6.03e- 1      1.32
27 mu_0       0.9      0.959       0.941   5.66e- 1      1.31
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.260     5.54e-14  4.06e-40     24.7 
 2 mu         0.2      1.91      2.89e- 8  3.17e-27     95.0 
 3 mu         0.3      3.70      9.78e- 5  1.04e-19    153.  
 4 mu         0.4      2.42      1.30e- 2  2.09e-14     75.3 
 5 mu         0.5      1.39      3.20e- 1  2.56e-10     11.8 
 6 mu         0.6      1.20      5.83e- 1  5.21e- 7      6.43
 7 mu         0.7      1.18      8.45e- 1  5.47e- 5      4.93
 8 mu         0.8      0.975     4.70e- 1  4.76e- 9      5.67
 9 mu         0.9      0.956     5.52e- 3  1.04e-16     16.0 
10 mu_1       0.1      0.575     3.89e-13  3.96e-39     53.8 
11 mu_1       0.2      2.49      9.78e- 8  1.55e-26    103.  
12 mu_1       0.3      3.67      2.33e- 4  3.37e-19    157.  
13 mu_1       0.4      2.13      2.10e- 2  5.11e-14     58.0 
14 mu_1       0.5      1.31      3.98e- 1  5.01e-10     10.1 
15 mu_1       0.6      1.19      6.76e- 1  8.48e- 7      6.82
16 mu_1       0.7      1.17      8.43e- 1  2.73e- 5      4.90
17 mu_1       0.8      0.960     3.86e- 1  2.08e- 9      5.72
18 mu_1       0.9      0.968     4.20e- 3  4.02e-17     17.2 
19 mu_0       0.1      0.225     1.28e-14  1.02e-41     21.5 
20 mu_0       0.2      1.77      1.16e- 8  9.01e-29     93.0 
21 mu_0       0.3      3.71      4.21e- 5  3.36e-21    152.  
22 mu_0       0.4      2.62      7.71e- 3  7.93e-16     86.9 
23 mu_0       0.5      1.46      2.16e- 1  1.16e-11     13.5 
24 mu_0       0.6      1.21      5.08e- 1  2.96e- 8      5.85
25 mu_0       0.7      1.20      7.64e- 1  2.24e- 5      5.85
26 mu_0       0.8      1.03      5.24e- 1  1.55e- 8      5.52
27 mu_0       0.9      0.845     1.74e- 2  6.76e-16      9.05
[1] "Total run time was 238.639 seconds"
