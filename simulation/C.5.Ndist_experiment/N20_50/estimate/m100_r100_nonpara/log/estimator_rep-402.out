
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3514"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 
 3  4  6  3  2  4  5  2  4  3  2  1  5  1  5  1  2  3  4  4  5  3  2  5  3  4 
47 48 49 50 
 2  9  2  1 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02434 0.33398 0.59718 1.00000 5.31434 
[1] "event indicator table: "

   0    1 
2109 1405 
[1] "treatment indicator table: "

   0    1 
1317 2197 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1804
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1710
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 249.381 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.386 0.0682
 2 mu         0.1   0.2 0.451 0.0731
 3 mu         0.1   0.3 0.521 0.0619
 4 mu         0.1   0.4 0.546 0.0567
 5 mu         0.1   0.5 0.556 0.0545
 6 mu         0.2   0.1 0.415 0.0467
 7 mu         0.2   0.2 0.507 0.0438
 8 mu         0.2   0.3 0.560 0.0386
 9 mu         0.2   0.4 0.590 0.0346
10 mu         0.2   0.5 0.612 0.0337
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.861        0.601   0.00327      3.28
 2 mu         0.2      0.991        0.969   0.154        1.88
 3 mu         0.3      1.02         1.01    0.233        1.96
 4 mu         0.4      1.02         1.03    0.532        1.67
 5 mu         0.5      1.02         1.00    0.696        1.44
 6 mu         0.6      1.00         1.01    0.738        1.25
 7 mu         0.7      0.989        0.990   0.663        1.28
 8 mu         0.8      0.991        0.964   0.688        1.45
 9 mu         0.9      0.976        0.959   0.421        1.49
10 mu_1       0.1      0.910        0.782   0.00887      2.60
11 mu_1       0.2      1.01         1.00    0.216        1.83
12 mu_1       0.3      1.02         1.01    0.233        1.87
13 mu_1       0.4      1.02         1.02    0.589        1.63
14 mu_1       0.5      1.01         0.999   0.695        1.42
15 mu_1       0.6      0.998        0.996   0.754        1.26
16 mu_1       0.7      0.989        0.985   0.678        1.28
17 mu_1       0.8      0.990        0.954   0.675        1.46
18 mu_1       0.9      0.978        0.966   0.417        1.50
19 mu_0       0.1      0.856        0.567   0.00265      3.45
20 mu_0       0.2      0.985        0.963   0.138        1.92
21 mu_0       0.3      1.02         1.00    0.233        1.99
22 mu_0       0.4      1.02         1.02    0.494        1.69
23 mu_0       0.5      1.02         1.01    0.697        1.46
24 mu_0       0.6      1.00         1.01    0.715        1.27
25 mu_0       0.7      0.990        0.999   0.629        1.26
26 mu_0       0.8      0.995        0.974   0.697        1.42
27 mu_0       0.9      0.960        0.922   0.462        1.46
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.364     5.42e-13  3.95e-40     20.3 
 2 mu         0.2      1.10      8.52e- 7  3.09e-27     36.9 
 3 mu         0.3      1.16      1.26e- 3  1.01e-19     13.6 
 4 mu         0.4      1.04      5.50e- 2  2.04e-14      7.67
 5 mu         0.5      0.965     4.06e- 1  2.50e-10      6.00
 6 mu         0.6      1.04      5.08e- 1  2.06e- 8      5.95
 7 mu         0.7      1.19      5.31e- 1  4.57e-13      6.99
 8 mu         0.8      1.25      1.78e- 1  7.02e-20     13.1 
 9 mu         0.9      0.964     3.89e- 4  7.28e-32     13.0 
10 mu_1       0.1      0.615     3.71e-12  3.86e-39     29.5 
11 mu_1       0.2      1.21      2.60e- 6  1.51e-26     33.1 
12 mu_1       0.3      1.16      2.57e- 3  3.29e-19     12.9 
13 mu_1       0.4      0.999     9.08e- 2  4.98e-14      7.44
14 mu_1       0.5      0.955     4.90e- 1  4.88e-10      6.57
15 mu_1       0.6      1.06      4.94e- 1  5.01e- 9      6.47
16 mu_1       0.7      1.20      5.84e- 1  9.53e-14      6.79
17 mu_1       0.8      1.24      1.56e- 1  1.28e-20     13.0 
18 mu_1       0.9      0.954     2.86e- 4  1.18e-32     13.3 
19 mu_0       0.1      0.337     2.10e-13  0            19.2 
20 mu_0       0.2      1.08      3.97e- 7  0            37.9 
21 mu_0       0.3      1.16      6.27e- 4  0            13.9 
22 mu_0       0.4      1.06      2.93e- 2  0             7.83
23 mu_0       0.5      0.974     2.56e- 1  0             5.43
24 mu_0       0.6      1.01      5.43e- 1  0             6.48
25 mu_0       0.7      1.17      4.01e- 1  0             7.45
26 mu_0       0.8      1.30      2.71e- 1  0            13.7 
27 mu_0       0.9      1.05      1.23e- 3  0            12.1 
[1] "Total run time was 253.671 seconds"
