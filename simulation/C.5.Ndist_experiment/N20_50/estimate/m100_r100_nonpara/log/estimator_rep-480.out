
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3569"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 28 29 30 31 32 33 34 35 36 37 38 39 41 42 43 44 45 46 47 
 2  2  2  3  5  1  3  4  2  5  5  8  3  4  3  3  2  7  2  2  2  5  2  4  7  4 
49 50 
 5  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02997 0.32269 0.59296 1.00000 5.00000 
[1] "event indicator table: "

   0    1 
2161 1408 
[1] "treatment indicator table: "

   0    1 
1334 2235 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1856
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 59"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 97"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1713
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 237.574 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.488 0.0847
 2 mu         0.1   0.2 0.570 0.103 
 3 mu         0.1   0.3 0.579 0.0907
 4 mu         0.1   0.4 0.663 0.136 
 5 mu         0.1   0.5 0.666 0.131 
 6 mu         0.2   0.1 0.438 0.0493
 7 mu         0.2   0.2 0.507 0.0474
 8 mu         0.2   0.3 0.540 0.0406
 9 mu         0.2   0.4 0.607 0.0575
10 mu         0.2   0.5 0.616 0.0549
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.898        0.451   0.00314      6.74
 2 mu         0.2      0.969        0.933   0.145        2.30
 3 mu         0.3      1.02         0.996   0.340        1.60
 4 mu         0.4      0.999        0.987   0.523        1.68
 5 mu         0.5      0.991        0.976   0.693        1.43
 6 mu         0.6      1.00         0.988   0.726        1.30
 7 mu         0.7      1.01         1.01    0.732        1.33
 8 mu         0.8      0.987        0.983   0.556        1.51
 9 mu         0.9      0.993        0.987   0.367        2.39
10 mu_1       0.1      0.898        0.684   0.00816      5.60
11 mu_1       0.2      0.991        0.946   0.195        2.11
12 mu_1       0.3      1.02         1.02    0.378        1.56
13 mu_1       0.4      0.996        0.989   0.557        1.71
14 mu_1       0.5      0.991        0.966   0.706        1.43
15 mu_1       0.6      1.00         0.995   0.731        1.29
16 mu_1       0.7      1.01         1.01    0.722        1.32
17 mu_1       0.8      0.987        0.986   0.547        1.55
18 mu_1       0.9      0.993        0.996   0.357        2.41
19 mu_0       0.1      0.898        0.422   0.00258      6.86
20 mu_0       0.2      0.964        0.910   0.133        2.39
21 mu_0       0.3      1.02         1.00    0.324        1.62
22 mu_0       0.4      1.00         0.986   0.500        1.66
23 mu_0       0.5      0.991        0.982   0.678        1.42
24 mu_0       0.6      0.998        0.986   0.712        1.34
25 mu_0       0.7      1.01         1.02    0.756        1.35
26 mu_0       0.8      0.988        0.984   0.593        1.40
27 mu_0       0.9      0.998        0.985   0.454        2.18
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      2.22      1.05e-13  3.94e-36    210.  
 2 mu         0.2      1.31      2.37e- 7  6.09e-24     28.0 
 3 mu         0.3      1.35      3.69e- 4  6.77e-17     23.1 
 4 mu         0.4      0.956     3.67e- 2  5.65e-12     11.4 
 5 mu         0.5      0.903     2.99e- 1  3.08e- 8      7.17
 6 mu         0.6      1.22      6.47e- 1  5.13e- 6      8.59
 7 mu         0.7      1.33      8.51e- 1  7.46e-10      9.01
 8 mu         0.8      1.31      2.87e- 1  1.49e-15      7.46
 9 mu         0.9      1.15      1.04e- 3  1.11e-25     11.7 
10 mu_1       0.1      1.11      6.46e-13  3.67e-35     87.7 
11 mu_1       0.2      1.29      7.21e- 7  2.84e-23     25.0 
12 mu_1       0.3      1.29      7.99e- 4  2.10e-16     19.7 
13 mu_1       0.4      0.914     5.19e- 2  1.32e-11     12.1 
14 mu_1       0.5      0.932     3.04e- 1  5.73e- 8      6.11
15 mu_1       0.6      1.25      6.84e- 1  6.96e- 7      9.15
16 mu_1       0.7      1.32      8.91e- 1  1.98e-10      8.75
17 mu_1       0.8      1.32      2.31e- 1  3.47e-16      7.58
18 mu_1       0.9      1.13      7.21e- 4  2.30e-26     12.4 
19 mu_0       0.1      2.34      4.65e-14  2.99e-37    224.  
20 mu_0       0.2      1.32      1.16e- 7  5.19e-25     33.6 
21 mu_0       0.3      1.38      1.78e- 4  6.59e-18     24.6 
22 mu_0       0.4      0.984     2.00e- 2  6.42e-13     10.9 
23 mu_0       0.5      0.873     2.25e- 1  4.19e- 9      8.24
24 mu_0       0.6      1.17      4.34e- 1  4.73e- 6      7.76
25 mu_0       0.7      1.33      6.63e- 1  2.02e- 9      9.61
26 mu_0       0.8      1.27      4.49e- 1  6.07e-15      7.26
27 mu_0       0.9      1.32      3.87e- 3  9.06e-25      8.93
[1] "Total run time was 241.935 seconds"
