
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3452"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 5  2  4  3  3  4  4  3  5  1  3  6  4  3  1  3  2  4  3  3  4  3  1  4  5  1 
46 47 48 49 50 
 1  4  4  4  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.05279 0.39579 0.64834 1.00000 7.00000 
[1] "event indicator table: "

   0    1 
2065 1387 
[1] "treatment indicator table: "

   0    1 
1173 2279 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1753
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 8"
[1] "     Cluster: 12"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1699
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 31"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 224.144 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.264 0.0672
 2 mu         0.1   0.2 0.313 0.101 
 3 mu         0.1   0.3 0.338 0.0969
 4 mu         0.1   0.4 0.388 0.0591
 5 mu         0.1   0.5 0.379 0.0653
 6 mu         0.2   0.1 0.316 0.0418
 7 mu         0.2   0.2 0.405 0.0624
 8 mu         0.2   0.3 0.448 0.0606
 9 mu         0.2   0.4 0.514 0.0392
10 mu         0.2   0.5 0.528 0.0441
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.728        0.377 0.0000276      4.91
 2 mu         0.2      1.03         0.963 0.0383         3.07
 3 mu         0.3      1.04         1.01  0.303          2.03
 4 mu         0.4      0.984        1.02  0.419          1.48
 5 mu         0.5      0.994        0.975 0.437          1.40
 6 mu         0.6      1.01         1.02  0.617          1.40
 7 mu         0.7      0.998        0.996 0.599          1.29
 8 mu         0.8      0.993        0.995 0.685          1.46
 9 mu         0.9      1.00         1.00  0.466          1.74
10 mu_1       0.1      0.880        0.611 0.0000902      5.56
11 mu_1       0.2      1.06         0.967 0.0630         2.85
12 mu_1       0.3      1.03         1.01  0.376          1.99
13 mu_1       0.4      0.978        0.998 0.419          1.46
14 mu_1       0.5      0.999        0.983 0.460          1.40
15 mu_1       0.6      1.01         1.03  0.625          1.38
16 mu_1       0.7      0.998        1.00  0.598          1.30
17 mu_1       0.8      0.992        0.988 0.679          1.46
18 mu_1       0.9      1.01         1.00  0.459          1.75
19 mu_0       0.1      0.712        0.345 0.0000206      4.84
20 mu_0       0.2      1.03         0.937 0.0322         3.13
21 mu_0       0.3      1.04         1.00  0.272          2.05
22 mu_0       0.4      0.988        1.01  0.394          1.55
23 mu_0       0.5      0.990        0.971 0.414          1.39
24 mu_0       0.6      1.01         1.01  0.604          1.42
25 mu_0       0.7      1.00         0.993 0.602          1.29
26 mu_0       0.8      0.995        0.988 0.684          1.44
27 mu_0       0.9      0.998        0.969 0.524          1.63
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.16      3.26e-14  2.83e-41    111.  
 2 mu         0.2      1.35      1.60e- 8  1.40e-27     66.6 
 3 mu         0.3      1.12      4.56e- 5  1.18e-19     21.4 
 4 mu         0.4      1.10      5.16e- 3  4.16e-14     12.9 
 5 mu         0.5      1.13      1.04e- 1  3.27e-10     11.9 
 6 mu         0.6      0.995     4.85e- 1  3.34e- 7      8.38
 7 mu         0.7      0.941     7.06e- 1  7.05e-10      4.80
 8 mu         0.8      1.02      5.43e- 1  5.45e-16      4.86
 9 mu         0.9      1.27      7.13e- 3  6.44e-27     15.6 
10 mu_1       0.1      1.43      2.63e-13  2.66e-40    133.  
11 mu_1       0.2      1.23      5.21e- 8  6.57e-27     40.9 
12 mu_1       0.3      1.09      1.15e- 4  3.70e-19     21.7 
13 mu_1       0.4      1.12      8.87e- 3  9.76e-14     11.8 
14 mu_1       0.5      1.13      1.33e- 1  6.54e-10     12.7 
15 mu_1       0.6      0.978     4.14e- 1  5.56e- 7      7.43
16 mu_1       0.7      0.947     6.29e- 1  2.10e-10      4.83
17 mu_1       0.8      1.03      5.24e- 1  1.42e-16      4.98
18 mu_1       0.9      1.28      5.44e- 3  1.49e-27     16.3 
19 mu_0       0.1      1.13      7.00e-15  0           109.  
20 mu_0       0.2      1.38      5.66e- 9  0            73.2 
21 mu_0       0.3      1.13      1.59e- 5  0            21.2 
22 mu_0       0.4      1.09      2.68e- 3  0            13.6 
23 mu_0       0.5      1.14      6.20e- 2  0            11.1 
24 mu_0       0.6      1.02      3.65e- 1  0             9.80
25 mu_0       0.7      0.927     5.26e- 1  0             4.73
26 mu_0       0.8      0.975     4.38e- 1  0             4.48
27 mu_0       0.9      1.19      1.94e- 2  0            10.1 
[1] "Total run time was 227.247 seconds"
