
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3477"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 3  3  7  3  3  2  6  5  1  4  3  2  1  4  1  1  3  3  6  2  4  3  3  5  3  3 
46 47 48 50 
 4  1  4  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04544 0.40779 0.64549 1.00000 6.37100 
[1] "event indicator table: "

   0    1 
2066 1411 
[1] "treatment indicator table: "

   0    1 
1294 2183 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1754
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1723
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 34"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 45"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 218.604 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.426 0.0647
 2 mu         0.1   0.2 0.524 0.0759
 3 mu         0.1   0.3 0.553 0.0734
 4 mu         0.1   0.4 0.597 0.0789
 5 mu         0.1   0.5 0.619 0.0710
 6 mu         0.2   0.1 0.414 0.0389
 7 mu         0.2   0.2 0.505 0.0366
 8 mu         0.2   0.3 0.558 0.0387
 9 mu         0.2   0.4 0.598 0.0413
10 mu         0.2   0.5 0.641 0.0400
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.942        0.710   0.00992      7.65
 2 mu         0.2      1.07         1.00    0.157        4.11
 3 mu         0.3      1.03         1.01    0.539        2.14
 4 mu         0.4      0.987        0.969   0.588        1.54
 5 mu         0.5      0.975        0.988   0.595        1.40
 6 mu         0.6      1.00         1.00    0.718        1.38
 7 mu         0.7      1.01         1.02    0.683        1.30
 8 mu         0.8      0.998        0.984   0.610        1.55
 9 mu         0.9      0.979        0.986   0.422        1.60
10 mu_1       0.1      1.04         0.838   0.0209       8.46
11 mu_1       0.2      1.07         1.05    0.202        3.28
12 mu_1       0.3      1.02         0.987   0.545        2.05
13 mu_1       0.4      0.981        0.984   0.566        1.50
14 mu_1       0.5      0.977        0.990   0.590        1.39
15 mu_1       0.6      1.01         1.01    0.717        1.39
16 mu_1       0.7      1.01         1.02    0.683        1.34
17 mu_1       0.8      0.996        0.979   0.599        1.54
18 mu_1       0.9      0.979        0.974   0.409        1.62
19 mu_0       0.1      0.932        0.706   0.00869      7.56
20 mu_0       0.2      1.07         1.00    0.146        4.31
21 mu_0       0.3      1.04         1.01    0.499        2.18
22 mu_0       0.4      0.992        0.964   0.603        1.57
23 mu_0       0.5      0.973        0.975   0.597        1.42
24 mu_0       0.6      0.997        1.01    0.694        1.36
25 mu_0       0.7      1.01         1.02    0.684        1.32
26 mu_0       0.8      1.00         0.994   0.652        1.59
27 mu_0       0.9      0.976        0.966   0.500        1.53
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.988     9.19e-13  7.71e-40     51.8 
 2 mu         0.2      1.48      1.86e- 7  3.39e-26     38.6 
 3 mu         0.3      1.08      2.46e- 4  2.50e-18     19.7 
 4 mu         0.4      1.05      2.44e- 2  7.54e-13     19.7 
 5 mu         0.5      0.997     2.36e- 1  4.19e- 9      6.20
 6 mu         0.6      1.16      3.83e- 1  3.75e- 8      7.37
 7 mu         0.7      1.20      8.29e- 1  1.93e-12      9.29
 8 mu         0.8      1.21      2.02e- 1  1.15e-18      7.24
 9 mu         0.9      1.15      9.47e- 4  1.51e-29     11.8 
10 mu_1       0.1      1.37      5.87e-12  7.09e-39     61.7 
11 mu_1       0.2      1.42      6.68e- 7  1.56e-25     40.4 
12 mu_1       0.3      1.04      5.38e- 4  7.67e-18     22.9 
13 mu_1       0.4      1.04      3.24e- 2  1.73e-12     17.1 
14 mu_1       0.5      1.01      2.76e- 1  8.16e- 9      6.71
15 mu_1       0.6      1.17      4.63e- 1  7.44e- 9      7.01
16 mu_1       0.7      1.20      7.63e- 1  3.29e-13      9.02
17 mu_1       0.8      1.21      1.76e- 1  1.71e-19      6.89
18 mu_1       0.9      1.14      6.59e- 4  2.00e-30     11.9 
19 mu_0       0.1      0.945     3.01e-13  6.85e-41     50.7 
20 mu_0       0.2      1.50      6.41e- 8  3.39e-27     38.2 
21 mu_0       0.3      1.09      1.29e- 4  2.86e-19     18.3 
22 mu_0       0.4      1.05      1.80e- 2  3.48e-14     21.3 
23 mu_0       0.5      0.986     1.73e- 1  2.09e-10      5.70
24 mu_0       0.6      1.15      3.51e- 1  8.26e- 8      7.89
25 mu_0       0.7      1.18      6.18e- 1  5.68e-12      9.91
26 mu_0       0.8      1.21      2.43e- 1  5.07e-18      8.66
27 mu_0       0.9      1.20      3.54e- 3  1.33e-28     10.5 
[1] "Total run time was 221.936 seconds"
