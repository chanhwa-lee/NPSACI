
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3408"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 4  5  2  4  4  4  3  1  2  8  2  8  1  3  2  4  6  2  3  3  1  2  4  1  2  1 
46 47 48 49 50 
 5  3  2  3  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03855 0.34987 0.61979 1.00000 5.45042 
[1] "event indicator table: "

   0    1 
2102 1306 
[1] "treatment indicator table: "

   0    1 
1096 2312 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1654
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1754
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 39"
[1] "     Cluster: 50"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 229.573 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.217 0.141 
 2 mu         0.1   0.2 0.228 0.137 
 3 mu         0.1   0.3 0.236 0.125 
 4 mu         0.1   0.4 0.263 0.154 
 5 mu         0.1   0.5 0.286 0.140 
 6 mu         0.2   0.1 0.257 0.0681
 7 mu         0.2   0.2 0.284 0.0623
 8 mu         0.2   0.3 0.309 0.0539
 9 mu         0.2   0.4 0.333 0.0723
10 mu         0.2   0.5 0.379 0.0621
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.295      0.00950 0.0000000176     15.7 
 2 mu         0.2      0.613      0.334   0.000426          3.34
 3 mu         0.3      0.953      0.851   0.0449            3.22
 4 mu         0.4      1.01       0.928   0.298             3.73
 5 mu         0.5      0.994      0.973   0.564             2.44
 6 mu         0.6      1.00       1.01    0.689             1.42
 7 mu         0.7      0.992      0.987   0.740             1.24
 8 mu         0.8      1.02       1.00    0.523             1.30
 9 mu         0.9      0.985      0.949   0.0227            2.13
10 mu_1       0.1      0.313      0.0253  0.0000000816      7.59
11 mu_1       0.2      0.708      0.486   0.000993          3.66
12 mu_1       0.3      0.988      0.858   0.0709            3.22
13 mu_1       0.4      1.01       0.937   0.374             3.78
14 mu_1       0.5      0.995      0.981   0.619             2.23
15 mu_1       0.6      0.999      1.00    0.699             1.39
16 mu_1       0.7      0.993      0.984   0.749             1.25
17 mu_1       0.8      1.02       0.998   0.493             1.31
18 mu_1       0.9      0.984      0.949   0.0197            2.21
19 mu_0       0.1      0.293      0.00756 0.0000000105     16.6 
20 mu_0       0.2      0.589      0.291   0.000284          3.87
21 mu_0       0.3      0.938      0.831   0.0337            3.22
22 mu_0       0.4      1.01       0.924   0.248             3.70
23 mu_0       0.5      0.993      0.959   0.496             2.64
24 mu_0       0.6      1.00       1.01    0.660             1.52
25 mu_0       0.7      0.990      0.983   0.720             1.21
26 mu_0       0.8      1.01       1.01    0.641             1.25
27 mu_0       0.9      0.992      0.987   0.0497            1.84
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.0497     1.64e-13  2.68e-42      4.76
 2 mu         0.2     0.608      7.64e- 8  2.98e-28     45.0 
 3 mu         0.3     1.47       1.50e- 4  4.31e-20     82.7 
 4 mu         0.4     2.06       1.38e- 2  2.36e-14    134.  
 5 mu         0.5     1.61       2.56e- 1  5.88e-10     45.9 
 6 mu         0.6     1.20       1.04e+ 0  1.98e- 6      8.26
 7 mu         0.7     1.02       7.72e- 1  1.20e- 6      6.10
 8 mu         0.8     1.06       3.34e- 1  4.09e-11      9.00
 9 mu         0.9     1.91       3.85e- 3  3.91e-19     38.6 
10 mu_1       0.1     0.113      1.20e-12  2.57e-41     10.6 
11 mu_1       0.2     0.777      2.92e- 7  1.43e-27     50.0 
12 mu_1       0.3     1.68       3.19e- 4  1.38e-19    104.  
13 mu_1       0.4     2.04       2.39e- 2  5.66e-14    127.  
14 mu_1       0.5     1.54       3.48e- 1  1.13e- 9     34.8 
15 mu_1       0.6     1.17       1.02e+ 0  3.17e- 6      6.88
16 mu_1       0.7     1.01       6.38e- 1  3.81e- 7      6.46
17 mu_1       0.8     1.07       3.00e- 1  1.14e-11      9.24
18 mu_1       0.9     1.95       2.98e- 3  9.66e-20     41.1 
19 mu_0       0.1     0.0427     5.20e-14  0             4.11
20 mu_0       0.2     0.566      2.69e- 8  0            43.8 
21 mu_0       0.3     1.38       7.80e- 5  0            73.4 
22 mu_0       0.4     2.07       7.00e- 3  0           139.  
23 mu_0       0.5     1.68       1.91e- 1  0            57.1 
24 mu_0       0.6     1.24       9.88e- 1  0            10.3 
25 mu_0       0.7     1.03       9.44e- 1  0             5.24
26 mu_0       0.8     1.02       3.69e- 1  0             9.20
27 mu_0       0.9     1.52       1.14e- 2  0            16.8 
[1] "Total run time was 234.352 seconds"
