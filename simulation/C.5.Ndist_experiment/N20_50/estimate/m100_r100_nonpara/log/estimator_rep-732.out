
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3488"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 
 3  3  5  3  2  3  5  4  2  1  5  5  3  2  2  6  1  6  5  4  3  3  4  3  4  5 
47 48 49 50 
 2  1  3  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04017 0.34191 0.60142 1.00000 5.00000 
[1] "event indicator table: "

   0    1 
2077 1411 
[1] "treatment indicator table: "

   0    1 
1247 2241 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1747
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 25"
[1] "     Cluster: 31"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1741
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 78"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 211.466 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.536 0.199 
 2 mu         0.1   0.2 0.622 0.245 
 3 mu         0.1   0.3 0.731 0.265 
 4 mu         0.1   0.4 0.825 0.285 
 5 mu         0.1   0.5 0.833 0.300 
 6 mu         0.2   0.1 0.369 0.0609
 7 mu         0.2   0.2 0.458 0.0817
 8 mu         0.2   0.3 0.526 0.0764
 9 mu         0.2   0.4 0.598 0.0783
10 mu         0.2   0.5 0.623 0.0857
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.48         0.309 0.0000245     48.2 
 2 mu         0.2      1.13         0.835 0.0307        10.5 
 3 mu         0.3      1.01         1.02  0.327          1.95
 4 mu         0.4      0.987        0.995 0.451          1.88
 5 mu         0.5      1.00         0.980 0.629          1.59
 6 mu         0.6      1.01         1.01  0.686          1.42
 7 mu         0.7      1.01         1.01  0.723          1.55
 8 mu         0.8      0.972        0.974 0.591          1.49
 9 mu         0.9      0.945        0.974 0.353          1.55
10 mu_1       0.1      1.47         0.551 0.0000804     42.7 
11 mu_1       0.2      1.10         0.971 0.0531         7.74
12 mu_1       0.3      1.00         0.992 0.385          1.86
13 mu_1       0.4      0.987        0.974 0.483          1.94
14 mu_1       0.5      1.00         0.986 0.631          1.58
15 mu_1       0.6      1.01         1.00  0.695          1.40
16 mu_1       0.7      1.01         1.00  0.729          1.55
17 mu_1       0.8      0.970        0.970 0.582          1.47
18 mu_1       0.9      0.946        0.978 0.364          1.55
19 mu_0       0.1      1.48         0.280 0.0000183     48.8 
20 mu_0       0.2      1.14         0.789 0.0250        11.2 
21 mu_0       0.3      1.02         1.03  0.297          2.08
22 mu_0       0.4      0.987        0.992 0.429          1.84
23 mu_0       0.5      1.00         0.974 0.627          1.68
24 mu_0       0.6      1.01         1.01  0.668          1.45
25 mu_0       0.7      1.02         1.01  0.711          1.53
26 mu_0       0.8      0.982        0.987 0.585          1.57
27 mu_0       0.9      0.942        0.950 0.252          1.56
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       1.40     9.49e-13  4.23e-39    127.  
 2 mu         0.2       2.09     1.52e- 7  9.30e-26     81.9 
 3 mu         0.3       2.44     1.44e- 4  4.58e-18    113.  
 4 mu         0.4       1.77     1.68e- 2  1.04e-12     18.9 
 5 mu         0.5       1.39     2.42e- 1  7.74e- 9     15.8 
 6 mu         0.6       1.34     6.13e- 1  1.09e- 7      9.08
 7 mu         0.7       1.54     7.10e- 1  3.67e-12     11.5 
 8 mu         0.8       1.52     6.79e- 1  1.11e-18      9.75
 9 mu         0.9       1.27     1.02e- 2  4.09e-30     16.1 
10 mu_1       0.1       1.94     6.16e-12  3.89e-38    169.  
11 mu_1       0.2       2.20     5.68e- 7  4.27e-25    106.  
12 mu_1       0.3       2.42     3.72e- 4  1.40e-17     98.1 
13 mu_1       0.4       1.67     2.12e- 2  2.38e-12     15.1 
14 mu_1       0.5       1.38     3.00e- 1  1.51e- 8     16.2 
15 mu_1       0.6       1.34     5.66e- 1  2.41e- 8      7.77
16 mu_1       0.7       1.56     7.09e- 1  7.00e-13     12.2 
17 mu_1       0.8       1.50     5.97e- 1  1.85e-19      9.02
18 mu_1       0.9       1.26     7.40e- 3  6.07e-31     16.5 
19 mu_0       0.1       1.34     2.90e-13  3.84e-40    122.  
20 mu_0       0.2       2.07     5.82e- 8  9.49e-27     88.8 
21 mu_0       0.3       2.45     6.18e- 5  5.34e-19    119.  
22 mu_0       0.4       1.83     8.95e- 3  8.24e-14     23.2 
23 mu_0       0.5       1.41     2.41e- 1  3.97e-10     15.3 
24 mu_0       0.6       1.33     4.86e- 1  2.35e- 7     11.0 
25 mu_0       0.7       1.49     8.24e- 1  1.06e-11      9.96
26 mu_0       0.8       1.60     5.19e- 1  4.81e-18     12.6 
27 mu_0       0.9       1.35     3.67e- 2  3.55e-29     15.9 
[1] "Total run time was 214.619 seconds"
