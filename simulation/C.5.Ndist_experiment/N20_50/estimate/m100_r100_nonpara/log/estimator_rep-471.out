
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3379"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 7  2  1  7  2  4  7  3  3  3  2  5  3  1  3  3  3  4  3  3  2  1  3  4  5  1 
46 47 48 49 50 
 5  4  3  2  1 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03512 0.35118 0.61036 1.00000 5.28491 
[1] "event indicator table: "

   0    1 
1968 1411 
[1] "treatment indicator table: "

   0    1 
1254 2125 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1607
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 7"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1772
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 36"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 212.531 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.486 0.0924
 2 mu         0.1   0.2 0.640 0.113 
 3 mu         0.1   0.3 0.707 0.0977
 4 mu         0.1   0.4 0.746 0.0922
 5 mu         0.1   0.5 0.763 0.0950
 6 mu         0.2   0.1 0.404 0.0537
 7 mu         0.2   0.2 0.511 0.0673
 8 mu         0.2   0.3 0.598 0.0568
 9 mu         0.2   0.4 0.644 0.0521
10 mu         0.2   0.5 0.659 0.0537
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.12         0.648   0.00207      7.27
 2 mu         0.2      1.03         0.976   0.107        2.41
 3 mu         0.3      1.03         1.04    0.435        2.01
 4 mu         0.4      1.03         1.00    0.601        1.62
 5 mu         0.5      1.00         0.987   0.608        1.39
 6 mu         0.6      0.996        0.991   0.678        1.42
 7 mu         0.7      0.996        1.00    0.649        1.28
 8 mu         0.8      1.00         0.983   0.657        1.38
 9 mu         0.9      0.990        0.961   0.464        1.67
10 mu_1       0.1      1.15         0.925   0.00688      5.22
11 mu_1       0.2      1.02         0.964   0.186        2.38
12 mu_1       0.3      1.04         1.03    0.483        1.88
13 mu_1       0.4      1.03         0.995   0.595        1.61
14 mu_1       0.5      0.997        0.982   0.610        1.38
15 mu_1       0.6      0.997        0.992   0.689        1.40
16 mu_1       0.7      0.996        1.00    0.653        1.29
17 mu_1       0.8      1.00         0.986   0.670        1.40
18 mu_1       0.9      0.990        0.963   0.452        1.70
19 mu_0       0.1      1.12         0.597   0.00153      7.50
20 mu_0       0.2      1.03         0.978   0.0867       2.41
21 mu_0       0.3      1.03         1.03    0.415        2.06
22 mu_0       0.4      1.03         1.02    0.605        1.63
23 mu_0       0.5      1.00         1.00    0.606        1.39
24 mu_0       0.6      0.995        0.995   0.661        1.44
25 mu_0       0.7      0.996        0.992   0.640        1.26
26 mu_0       0.8      1.01         1.01    0.603        1.35
27 mu_0       0.9      0.994        0.946   0.452        1.69
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.0958     3.87e-12  4.44e-38      6.88
 2 mu         0.2     0.503      3.05e- 7  8.69e-26     18.5 
 3 mu         0.3     1.21       4.39e- 4  1.26e-18     13.4 
 4 mu         0.4     1.30       3.71e- 2  1.43e-13     15.9 
 5 mu         0.5     0.959      3.27e- 1  1.12e- 9      6.84
 6 mu         0.6     0.833      5.22e- 1  1.58e- 6      3.89
 7 mu         0.7     0.952      6.89e- 1  6.57e- 7      3.52
 8 mu         0.8     1.19       2.73e- 1  6.58e-12      8.26
 9 mu         0.9     1.30       8.53e- 4  3.99e-21     17.0 
10 mu_1       0.1     0.193      2.37e-11  4.34e-37     13.2 
11 mu_1       0.2     0.636      1.02e- 6  4.24e-25     17.8 
12 mu_1       0.3     1.31       9.40e- 4  4.10e-18     12.8 
13 mu_1       0.4     1.26       6.27e- 2  3.50e-13     15.7 
14 mu_1       0.5     0.924      3.24e- 1  2.19e- 9      5.98
15 mu_1       0.6     0.835      5.00e- 1  2.58e- 6      3.73
16 mu_1       0.7     0.972      6.66e- 1  2.80e- 7      4.03
17 mu_1       0.8     1.21       2.22e- 1  2.45e-12      8.74
18 mu_1       0.9     1.30       6.38e- 4  1.32e-21     18.0 
19 mu_0       0.1     0.0849     9.58e-13  1.18e-39      6.17
20 mu_0       0.2     0.469      1.13e- 7  2.59e-27     18.7 
21 mu_0       0.3     1.17       2.24e- 4  4.29e-20     13.7 
22 mu_0       0.4     1.33       2.01e- 2  5.69e-15     16.1 
23 mu_0       0.5     0.995      2.46e- 1  5.35e-11      8.28
24 mu_0       0.6     0.830      3.39e- 1  9.43e- 8      4.22
25 mu_0       0.7     0.906      5.01e- 1  1.54e- 6      3.35
26 mu_0       0.8     1.15       3.37e- 1  2.31e-11      6.35
27 mu_0       0.9     1.28       3.13e- 3  2.80e-20     10.3 
[1] "Total run time was 216.167 seconds"
