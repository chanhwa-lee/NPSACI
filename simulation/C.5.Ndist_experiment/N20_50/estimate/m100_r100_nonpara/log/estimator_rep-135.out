
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3616"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 3  2  3  3  2  2  2  2  1  2  8  2  2  5  2  4  3  4  3  1  2  7  7  6  5  5 
46 47 48 49 50 
 2  2  4  1  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0394  0.3535  0.6091  1.0000  5.0000 
[1] "event indicator table: "

   0    1 
2137 1479 
[1] "treatment indicator table: "

   0    1 
1322 2294 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1806
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1810
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 39"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 217.809 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.281 0.109 
 2 mu         0.1   0.2 0.406 0.118 
 3 mu         0.1   0.3 0.517 0.113 
 4 mu         0.1   0.4 0.547 0.128 
 5 mu         0.1   0.5 0.663 0.141 
 6 mu         0.2   0.1 0.268 0.0588
 7 mu         0.2   0.2 0.376 0.0560
 8 mu         0.2   0.3 0.458 0.0396
 9 mu         0.2   0.4 0.491 0.0506
10 mu         0.2   0.5 0.576 0.0576
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.12         0.169  0.000186     15.0 
 2 mu         0.2      1.02         0.850  0.0480        3.64
 3 mu         0.3      1.02         0.980  0.174         2.05
 4 mu         0.4      0.997        1.01   0.309         1.61
 5 mu         0.5      1.00         1.00   0.701         1.32
 6 mu         0.6      1.02         1.01   0.689         1.34
 7 mu         0.7      1.01         0.994  0.713         1.33
 8 mu         0.8      0.993        0.987  0.671         1.29
 9 mu         0.9      0.987        0.962  0.311         1.66
10 mu_1       0.1      1.12         0.346  0.000691     10.5 
11 mu_1       0.2      1.02         0.923  0.0907        2.82
12 mu_1       0.3      1.02         0.981  0.165         2.03
13 mu_1       0.4      0.997        1.00   0.358         1.60
14 mu_1       0.5      1.00         0.999  0.732         1.31
15 mu_1       0.6      1.02         1.01   0.691         1.33
16 mu_1       0.7      1.00         0.993  0.714         1.34
17 mu_1       0.8      0.994        0.990  0.659         1.30
18 mu_1       0.9      0.987        0.968  0.298         1.72
19 mu_0       0.1      1.12         0.149  0.000130     15.8 
20 mu_0       0.2      1.02         0.820  0.0373        3.86
21 mu_0       0.3      1.02         0.979  0.178         2.05
22 mu_0       0.4      0.997        0.998  0.277         1.62
23 mu_0       0.5      0.999        0.999  0.671         1.34
24 mu_0       0.6      1.01         1.02   0.688         1.35
25 mu_0       0.7      1.01         0.995  0.712         1.31
26 mu_0       0.8      0.992        1.01   0.663         1.36
27 mu_0       0.9      0.991        0.985  0.425         1.49
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      2.86      4.83e-15  8.84e-34    146.  
 2 mu         0.2      3.03      3.24e- 8  1.15e-21    113.  
 3 mu         0.3      1.38      9.53e- 5  4.95e-15     21.4 
 4 mu         0.4      1.07      1.68e- 2  1.99e-10     11.8 
 5 mu         0.5      0.887     2.82e- 1  5.79e- 7      4.82
 6 mu         0.6      1.06      7.32e- 1  1.12e- 7      5.53
 7 mu         0.7      1.05      9.07e- 1  2.49e-12      3.36
 8 mu         0.8      1.00      3.52e- 1  3.83e-19      4.11
 9 mu         0.9      0.836     7.04e- 4  3.97e-31     17.5 
10 mu_1       0.1      4.09      2.91e-14  7.58e-33    194.  
11 mu_1       0.2      2.44      1.04e- 7  5.20e-21     82.4 
12 mu_1       0.3      1.25      2.03e- 4  1.50e-14     20.7 
13 mu_1       0.4      1.00      2.74e- 2  4.52e-10     11.4 
14 mu_1       0.5      0.888     3.21e- 1  1.05e- 6      5.39
15 mu_1       0.6      1.07      6.95e- 1  2.73e- 8      5.14
16 mu_1       0.7      1.05      8.33e- 1  5.20e-13      3.38
17 mu_1       0.8      1.01      2.91e- 1  6.98e-20      4.21
18 mu_1       0.9      0.824     5.18e- 4  6.43e-32     18.5 
19 mu_0       0.1      2.72      2.13e-15  1.40e-34    140.  
20 mu_0       0.2      3.17      1.45e- 8  1.33e-22    121.  
21 mu_0       0.3      1.44      4.75e- 5  6.58e-16     21.7 
22 mu_0       0.4      1.12      9.80e- 3  3.09e-11     12.1 
23 mu_0       0.5      0.885     2.05e- 1  1.08e- 7      4.69
24 mu_0       0.6      1.03      6.91e- 1  2.40e- 7      6.11
25 mu_0       0.7      1.07      8.10e- 1  7.10e-12      3.58
26 mu_0       0.8      0.984     5.92e- 1  1.64e-18      4.51
27 mu_0       0.9      0.945     2.39e- 3  3.39e-30     10.5 
[1] "Total run time was 221.156 seconds"
