
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3419"
[1] "cluster size dist'n: "

20 21 22 23 24 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 
 6  5  5  3  4  1  3  4  3  4  4  2  3  3  3  4  2  3  4  4  4  4  3  2  2  4 
47 48 49 50 
 5  2  3  1 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03895 0.35811 0.62892 1.00000 5.92556 
[1] "event indicator table: "

   0    1 
2076 1343 
[1] "treatment indicator table: "

   0    1 
1195 2224 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1666
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1753
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 241.777 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.222 0.0778
 2 mu         0.1   0.2 0.236 0.0932
 3 mu         0.1   0.3 0.292 0.116 
 4 mu         0.1   0.4 0.328 0.124 
 5 mu         0.1   0.5 0.364 0.119 
 6 mu         0.2   0.1 0.272 0.0407
 7 mu         0.2   0.2 0.304 0.0487
 8 mu         0.2   0.3 0.389 0.0594
 9 mu         0.2   0.4 0.423 0.0651
10 mu         0.2   0.5 0.443 0.0654
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      0.743        0.294 0.00000150      11.0 
 2 mu         0.2      0.869        0.756 0.00494          8.37
 3 mu         0.3      0.955        0.935 0.167            2.48
 4 mu         0.4      0.988        0.992 0.402            2.03
 5 mu         0.5      0.996        0.982 0.562            1.50
 6 mu         0.6      0.995        0.997 0.727            1.26
 7 mu         0.7      1.01         1.01  0.723            1.28
 8 mu         0.8      1.01         1.01  0.762            1.42
 9 mu         0.9      0.986        0.966 0.457            1.71
10 mu_1       0.1      0.769        0.450 0.00000644      13.6 
11 mu_1       0.2      0.905        0.842 0.0107           6.79
12 mu_1       0.3      0.968        0.948 0.203            2.09
13 mu_1       0.4      0.991        0.982 0.429            1.97
14 mu_1       0.5      0.997        0.982 0.566            1.41
15 mu_1       0.6      0.996        1.00  0.720            1.26
16 mu_1       0.7      1.01         1.01  0.718            1.28
17 mu_1       0.8      1.01         1.01  0.746            1.45
18 mu_1       0.9      0.984        0.966 0.447            1.71
19 mu_0       0.1      0.740        0.269 0.000000952     11.4 
20 mu_0       0.2      0.861        0.726 0.00351          8.76
21 mu_0       0.3      0.949        0.930 0.137            2.65
22 mu_0       0.4      0.986        0.977 0.383            2.06
23 mu_0       0.5      0.995        0.999 0.557            1.58
24 mu_0       0.6      0.993        1.00  0.727            1.28
25 mu_0       0.7      1.00         1.00  0.737            1.28
26 mu_0       0.8      1.02         1.00  0.771            1.35
27 mu_0       0.9      1.00         0.989 0.543            1.64
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.271     7.51e-15  7.68e-41     15.8 
 2 mu         0.2      1.99      2.95e- 8  3.79e-27     46.1 
 3 mu         0.3      3.33      1.29e- 4  3.20e-19     63.4 
 4 mu         0.4      2.59      1.32e- 2  1.13e-13     68.8 
 5 mu         0.5      1.21      1.64e- 1  1.87e- 9     20.9 
 6 mu         0.6      0.968     5.48e- 1  4.20e- 6      4.93
 7 mu         0.7      1.12      7.78e- 1  1.42e- 8      5.48
 8 mu         0.8      1.21      3.72e- 1  2.82e-14      6.95
 9 mu         0.9      1.06      5.19e- 3  1.50e-24      8.27
10 mu_1       0.1      0.586     5.38e-14  7.21e-40     31.6 
11 mu_1       0.2      2.48      9.35e- 8  1.78e-26     53.7 
12 mu_1       0.3      3.39      2.89e- 4  1.00e-18     75.0 
13 mu_1       0.4      2.31      2.34e- 2  2.64e-13     61.0 
14 mu_1       0.5      1.08      2.34e- 1  3.51e- 9     14.8 
15 mu_1       0.6      0.970     4.40e- 1  6.58e- 6      4.99
16 mu_1       0.7      1.13      8.09e- 1  4.73e- 9      5.79
17 mu_1       0.8      1.22      3.76e- 1  8.24e-15      7.28
18 mu_1       0.9      1.04      3.79e- 3  3.89e-25      8.63
19 mu_0       0.1      0.236     2.37e-15  0            14.0 
20 mu_0       0.2      1.87      1.18e- 8  0            44.1 
21 mu_0       0.3      3.31      5.17e- 5  0            58.4 
22 mu_0       0.4      2.78      6.29e- 3  0            74.0 
23 mu_0       0.5      1.34      1.27e- 1  0            26.9 
24 mu_0       0.6      0.965     4.66e- 1  0             5.54
25 mu_0       0.7      1.11      7.69e- 1  0             4.93
26 mu_0       0.8      1.19      4.87e- 1  0             7.43
27 mu_0       0.9      1.18      1.46e- 2  0             9.63
[1] "Total run time was 245.37 seconds"
