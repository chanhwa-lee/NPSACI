
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3450"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 2  2  2  3  2  3  8  6  4  5  2  1  3  5  3  3  1  4  5  4  7  3  2  2  2  6 
47 48 49 50 
 2  3  3  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03287 0.35336 0.61835 1.00000 5.00000 
[1] "event indicator table: "

   0    1 
2058 1392 
[1] "treatment indicator table: "

   0    1 
1290 2160 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1772
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1678
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 23"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 241.728 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.355 0.123 
 2 mu         0.1   0.2 0.419 0.125 
 3 mu         0.1   0.3 0.488 0.148 
 4 mu         0.1   0.4 0.494 0.149 
 5 mu         0.1   0.5 0.542 0.129 
 6 mu         0.2   0.1 0.365 0.0752
 7 mu         0.2   0.2 0.450 0.0782
 8 mu         0.2   0.3 0.510 0.0893
 9 mu         0.2   0.4 0.528 0.0905
10 mu         0.2   0.5 0.571 0.0736
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.863        0.358   0.00232      6.50
 2 mu         0.2      0.934        0.863   0.129        2.45
 3 mu         0.3      1.00         0.986   0.272        2.03
 4 mu         0.4      1.03         1.03    0.454        1.69
 5 mu         0.5      1.02         1.02    0.639        1.38
 6 mu         0.6      0.993        0.991   0.688        1.30
 7 mu         0.7      0.979        0.980   0.705        1.28
 8 mu         0.8      0.989        0.973   0.597        1.46
 9 mu         0.9      0.972        0.946   0.502        1.55
10 mu_1       0.1      0.840        0.528   0.00641      6.14
11 mu_1       0.2      0.960        0.883   0.208        2.33
12 mu_1       0.3      1.01         0.998   0.330        1.89
13 mu_1       0.4      1.03         1.04    0.469        1.70
14 mu_1       0.5      1.02         1.02    0.641        1.37
15 mu_1       0.6      0.989        0.989   0.683        1.30
16 mu_1       0.7      0.979        0.979   0.704        1.28
17 mu_1       0.8      0.989        0.971   0.585        1.49
18 mu_1       0.9      0.971        0.938   0.474        1.56
19 mu_0       0.1      0.866        0.333   0.00187      6.96
20 mu_0       0.2      0.928        0.870   0.109        2.59
21 mu_0       0.3      0.999        0.970   0.248        2.08
22 mu_0       0.4      1.03         1.02    0.444        1.69
23 mu_0       0.5      1.03         1.02    0.637        1.40
24 mu_0       0.6      0.998        0.993   0.679        1.29
25 mu_0       0.7      0.979        0.979   0.707        1.28
26 mu_0       0.8      0.988        0.983   0.646        1.37
27 mu_0       0.9      0.975        0.974   0.555        1.69
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      2.12      1.23e-12  1.90e-41    179.  
 2 mu         0.2      1.27      3.57e- 7  1.88e-27     47.6 
 3 mu         0.3      1.10      2.76e- 4  2.38e-19     15.8 
 4 mu         0.4      1.31      1.84e- 2  1.12e-13     12.9 
 5 mu         0.5      1.13      2.00e- 1  2.31e- 9     14.8 
 6 mu         0.6      0.929     4.66e- 1  1.16e- 6      6.38
 7 mu         0.7      1.21      5.70e- 1  1.66e-10     10.2 
 8 mu         0.8      1.40      6.97e- 1  3.81e-16      5.62
 9 mu         0.9      1.18      3.95e- 3  4.50e-26     18.4 
10 mu_1       0.1      1.96      8.58e-12  1.79e-40    143.  
11 mu_1       0.2      1.04      1.29e- 6  8.83e-27     20.6 
12 mu_1       0.3      1.13      6.42e- 4  7.45e-19     13.8 
13 mu_1       0.4      1.31      3.35e- 2  2.62e-13     13.0 
14 mu_1       0.5      1.10      2.28e- 1  4.35e- 9     13.9 
15 mu_1       0.6      0.931     5.86e- 1  2.91e- 7      6.13
16 mu_1       0.7      1.25      6.32e- 1  3.56e-11     10.5 
17 mu_1       0.8      1.39      6.82e- 1  7.14e-17      5.75
18 mu_1       0.9      1.18      3.07e- 3  7.49e-27     19.2 
19 mu_0       0.1      2.14      4.10e-13  1.27e-42    183.  
20 mu_0       0.2      1.32      1.24e- 7  1.41e-28     54.8 
21 mu_0       0.3      1.09      1.20e- 4  2.04e-20     16.6 
22 mu_0       0.4      1.31      8.34e- 3  1.12e-14     13.4 
23 mu_0       0.5      1.17      1.18e- 1  2.78e-10     15.7 
24 mu_0       0.6      0.926     3.92e- 1  9.36e- 7      6.74
25 mu_0       0.7      1.13      5.79e- 1  4.70e-10      9.48
26 mu_0       0.8      1.43      3.92e- 1  1.62e-15      6.88
27 mu_0       0.9      1.19      1.19e- 2  3.82e-25     11.1 
[1] "Total run time was 245.675 seconds"
