
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3570"
[1] "cluster size dist'n: "

20 21 22 23 25 26 27 28 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 
 2  7  2  4  2  3  4  3  2  6  2  2  4  2  4  5  5  2  3  3  6  5  3  2  3  2 
48 49 50 
 6  4  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.01303 0.28480 0.56407 0.98663 5.85342 
[1] "event indicator table: "

   0    1 
2166 1404 
[1] "treatment indicator table: "

   0    1 
1350 2220 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1732
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 63"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1838
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 21"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 34"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 174.359 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.431 0.0617
 2 mu         0.1   0.2 0.518 0.0770
 3 mu         0.1   0.3 0.550 0.0887
 4 mu         0.1   0.4 0.614 0.0927
 5 mu         0.1   0.5 0.629 0.0974
 6 mu         0.2   0.1 0.377 0.0318
 7 mu         0.2   0.2 0.448 0.0306
 8 mu         0.2   0.3 0.484 0.0354
 9 mu         0.2   0.4 0.536 0.0297
10 mu         0.2   0.5 0.551 0.0337
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.01         0.409  0.000236      9.37
 2 mu         0.2      0.952        0.829  0.0701        2.65
 3 mu         0.3      0.970        0.988  0.391         1.54
 4 mu         0.4      0.994        0.983  0.633         1.47
 5 mu         0.5      0.989        0.992  0.666         1.29
 6 mu         0.6      0.997        1.01   0.771         1.22
 7 mu         0.7      1.01         1.02   0.795         1.18
 8 mu         0.8      0.996        0.982  0.732         1.37
 9 mu         0.9      0.972        0.960  0.356         1.89
10 mu_1       0.1      0.998        0.626  0.000779      3.81
11 mu_1       0.2      0.953        0.854  0.120         2.43
12 mu_1       0.3      0.978        0.980  0.388         1.50
13 mu_1       0.4      0.996        0.979  0.627         1.51
14 mu_1       0.5      0.989        0.985  0.681         1.23
15 mu_1       0.6      0.998        1.01   0.755         1.23
16 mu_1       0.7      1.01         1.02   0.801         1.19
17 mu_1       0.8      0.994        0.975  0.718         1.38
18 mu_1       0.9      0.972        0.950  0.335         1.90
19 mu_0       0.1      1.01         0.382  0.000175      9.99
20 mu_0       0.2      0.951        0.845  0.0577        2.70
21 mu_0       0.3      0.967        0.990  0.392         1.60
22 mu_0       0.4      0.992        0.983  0.637         1.44
23 mu_0       0.5      0.990        0.997  0.651         1.36
24 mu_0       0.6      0.994        1.00   0.771         1.22
25 mu_0       0.7      1.01         1.02   0.779         1.19
26 mu_0       0.8      1.00         0.987  0.744         1.34
27 mu_0       0.9      0.973        0.964  0.498         1.80
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.0969     1.70e-13  2.32e-39      8.02
 2 mu         0.2     0.572      2.57e- 7  3.23e-26     27.0 
 3 mu         0.3     1.02       3.50e- 4  1.38e-18     20.0 
 4 mu         0.4     1.08       3.21e- 2  3.19e-13      7.62
 5 mu         0.5     0.950      3.33e- 1  4.07e- 9      6.15
 6 mu         0.6     0.896      7.35e- 1  7.95e- 6      5.50
 7 mu         0.7     1.01       5.49e- 1  3.77e- 7      4.08
 8 mu         0.8     1.07       3.32e- 1  2.52e-12      6.03
 9 mu         0.9     1.55       5.86e- 4  7.63e-22     27.8 
10 mu_1       0.1     0.196      1.14e-12  2.22e-38     15.5 
11 mu_1       0.2     0.684      7.62e- 7  1.54e-25     26.2 
12 mu_1       0.3     1.06       7.36e- 4  4.41e-18     17.9 
13 mu_1       0.4     1.07       5.35e- 2  7.64e-13      7.26
14 mu_1       0.5     0.935      2.86e- 1  7.79e- 9      6.15
15 mu_1       0.6     0.906      7.23e- 1  1.27e- 5      5.43
16 mu_1       0.7     1.03       5.92e- 1  1.57e- 7      4.33
17 mu_1       0.8     1.07       3.14e- 1  9.19e-13      6.31
18 mu_1       0.9     1.59       4.43e- 4  2.47e-22     29.5 
19 mu_0       0.1     0.0859     7.08e-14  0             7.19
20 mu_0       0.2     0.544      1.22e- 7  0            27.2 
21 mu_0       0.3     1.00       1.65e- 4  0            20.9 
22 mu_0       0.4     1.08       1.75e- 2  0             7.87
23 mu_0       0.5     0.966      2.41e- 1  0             6.15
24 mu_0       0.6     0.882      6.21e- 1  0             5.61
25 mu_0       0.7     0.972      4.28e- 1  0             4.00
26 mu_0       0.8     1.06       2.52e- 1  0             4.89
27 mu_0       0.9     1.25       7.32e- 4  0            18.2 
[1] "Total run time was 186.373 seconds"
