
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3582"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 1  1  3  2  3  8  7  3  1  2  1  4  3  4  2  5  1  2  4  5  2  3  6  2  2  1 
46 47 48 49 50 
 4  7  2  7  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04772 0.39492 0.63660 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
2111 1471 
[1] "treatment indicator table: "

   0    1 
1254 2328 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1706
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 69"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1876
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 221.132 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.377 0.114 
 2 mu         0.1   0.2 0.411 0.0981
 3 mu         0.1   0.3 0.485 0.0972
 4 mu         0.1   0.4 0.536 0.110 
 5 mu         0.1   0.5 0.539 0.104 
 6 mu         0.2   0.1 0.399 0.0951
 7 mu         0.2   0.2 0.449 0.0771
 8 mu         0.2   0.3 0.531 0.0774
 9 mu         0.2   0.4 0.591 0.0861
10 mu         0.2   0.5 0.608 0.0756
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      0.798        0.236 0.000000396      5.41
 2 mu         0.2      0.949        0.851 0.00335          3.03
 3 mu         0.3      1.02         0.954 0.166            2.73
 4 mu         0.4      1.04         0.980 0.529            3.41
 5 mu         0.5      1.02         1.00  0.636            1.81
 6 mu         0.6      1.01         1.01  0.714            1.60
 7 mu         0.7      1.00         1.00  0.656            1.36
 8 mu         0.8      1.00         1.01  0.588            1.29
 9 mu         0.9      0.982        1.00  0.376            1.47
10 mu_1       0.1      0.813        0.410 0.00000146       5.11
11 mu_1       0.2      0.979        0.955 0.00638          2.87
12 mu_1       0.3      1.03         0.936 0.229            2.66
13 mu_1       0.4      1.04         0.987 0.550            3.31
14 mu_1       0.5      1.02         1.00  0.626            1.68
15 mu_1       0.6      1.01         1.01  0.704            1.54
16 mu_1       0.7      1.00         1.01  0.650            1.36
17 mu_1       0.8      1.00         1.01  0.583            1.30
18 mu_1       0.9      0.981        0.999 0.358            1.48
19 mu_0       0.1      0.796        0.216 0.000000278      5.68
20 mu_0       0.2      0.941        0.841 0.00259          3.06
21 mu_0       0.3      1.02         0.946 0.139            2.76
22 mu_0       0.4      1.04         0.967 0.514            3.48
23 mu_0       0.5      1.03         0.994 0.625            1.97
24 mu_0       0.6      1.01         1.00  0.674            1.69
25 mu_0       0.7      1.00         1.01  0.672            1.37
26 mu_0       0.8      1.00         1.02  0.608            1.29
27 mu_0       0.9      0.991        1.01  0.414            1.55
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.174     5.92e-15  2.77e-39      9.74
 2 mu         0.2      1.34      1.43e- 8  3.69e-26     45.4 
 3 mu         0.3      2.16      9.22e- 5  1.05e-18     42.7 
 4 mu         0.4      2.04      1.54e- 2  1.83e-13     25.9 
 5 mu         0.5      1.45      2.25e- 1  1.86e- 9     11.5 
 6 mu         0.6      1.47      4.54e- 1  3.03e- 6     29.3 
 7 mu         0.7      1.27      5.96e- 1  3.37e- 9     19.7 
 8 mu         0.8      1.17      5.54e- 1  1.01e-14      6.45
 9 mu         0.9      1.24      6.32e- 3  1.51e-24     18.9 
10 mu_1       0.1      0.384     3.40e-14  2.54e-38     18.5 
11 mu_1       0.2      1.66      5.05e- 8  1.76e-25     51.8 
12 mu_1       0.3      2.25      1.90e- 4  3.36e-18     35.6 
13 mu_1       0.4      1.89      2.44e- 2  4.36e-13     23.3 
14 mu_1       0.5      1.39      2.85e- 1  3.56e- 9     12.2 
15 mu_1       0.6      1.47      5.13e- 1  4.82e- 6     30.9 
16 mu_1       0.7      1.25      5.17e- 1  9.16e-10     17.8 
17 mu_1       0.8      1.18      4.63e- 1  2.40e-15      6.49
18 mu_1       0.9      1.24      4.51e- 3  3.19e-25     18.7 
19 mu_0       0.1      0.151     2.50e-15  2.51e-40      8.76
20 mu_0       0.2      1.26      5.29e- 9  2.05e-27     46.0 
21 mu_0       0.3      2.13      4.22e- 5  6.69e-20     45.7 
22 mu_0       0.4      2.14      9.19e- 3  1.35e-14     27.6 
23 mu_0       0.5      1.51      1.46e- 1  1.66e-10     13.4 
24 mu_0       0.6      1.48      3.71e- 1  3.36e- 7     26.9 
25 mu_0       0.7      1.31      6.98e- 1  9.08e- 9     24.1 
26 mu_0       0.8      1.13      4.20e- 1  4.08e-14      6.42
27 mu_0       0.9      1.30      2.26e- 2  1.22e-23     20.1 
[1] "Total run time was 224.446 seconds"
