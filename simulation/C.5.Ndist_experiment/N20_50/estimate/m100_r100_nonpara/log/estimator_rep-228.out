
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3567"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 3  1  1  3  3  3  3  3  4  2  2  7  4  3  1  4  3  7  6  5  3  2  2  1  4  4 
46 47 48 49 50 
 3  4  4  2  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02655 0.35607 0.61600 1.00000 6.85810 
[1] "event indicator table: "

   0    1 
2097 1470 
[1] "treatment indicator table: "

   0    1 
1349 2218 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1783
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1784
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 195.847 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.413 0.280 
 2 mu         0.1   0.2 0.566 0.340 
 3 mu         0.1   0.3 0.651 0.397 
 4 mu         0.1   0.4 0.779 0.415 
 5 mu         0.1   0.5 0.851 0.456 
 6 mu         0.2   0.1 0.224 0.0604
 7 mu         0.2   0.2 0.319 0.0620
 8 mu         0.2   0.3 0.354 0.0629
 9 mu         0.2   0.4 0.451 0.0438
10 mu         0.2   0.5 0.501 0.0460
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      1.61         0.132 0.000000102      81.0 
 2 mu         0.2      0.992        0.841 0.00153           4.41
 3 mu         0.3      1.01         0.949 0.0948            2.43
 4 mu         0.4      1.02         0.992 0.575             1.67
 5 mu         0.5      1.01         1.00  0.699             1.52
 6 mu         0.6      0.993        0.997 0.700             1.30
 7 mu         0.7      0.993        0.993 0.702             1.29
 8 mu         0.8      1.00         0.996 0.604             1.53
 9 mu         0.9      1.05         1.01  0.127             3.17
10 mu_1       0.1      0.916        0.263 0.000000389      14.9 
11 mu_1       0.2      0.978        0.869 0.00321           3.42
12 mu_1       0.3      1.02         0.981 0.130             2.28
13 mu_1       0.4      1.02         1.00  0.644             1.63
14 mu_1       0.5      1.01         1.00  0.696             1.49
15 mu_1       0.6      0.992        0.991 0.704             1.28
16 mu_1       0.7      0.993        0.992 0.685             1.29
17 mu_1       0.8      1.00         0.995 0.604             1.57
18 mu_1       0.9      1.06         1.01  0.119             3.24
19 mu_0       0.1      1.68         0.117 0.0000000699     89.9 
20 mu_0       0.2      0.996        0.857 0.00112           4.83
21 mu_0       0.3      1.01         0.945 0.0798            2.50
22 mu_0       0.4      1.02         0.988 0.522             1.72
23 mu_0       0.5      1.01         0.991 0.699             1.54
24 mu_0       0.6      0.994        0.989 0.695             1.34
25 mu_0       0.7      0.993        0.987 0.692             1.30
26 mu_0       0.8      0.998        0.998 0.605             1.36
27 mu_0       0.9      1.01         0.965 0.202             2.50
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.187     1.51e-13  1.08e-41     12.4 
 2 mu         0.2      1.48      1.19e- 7  6.01e-28     65.9 
 3 mu         0.3      1.44      2.10e- 4  5.80e-20     31.3 
 4 mu         0.4      1.25      2.65e- 2  2.38e-14     11.6 
 5 mu         0.5      1.23      3.00e- 1  4.74e-10     14.0 
 6 mu         0.6      1.12      8.08e- 1  1.33e- 6     10.1 
 7 mu         0.7      1.08      7.95e- 1  3.54e-10      8.60
 8 mu         0.8      0.992     1.61e- 1  2.09e-16      5.70
 9 mu         0.9      0.974     4.07e- 4  1.39e-27     11.9 
10 mu_1       0.1      0.394     1.12e-12  1.04e-40     25.5 
11 mu_1       0.2      1.68      3.65e- 7  2.88e-27     67.9 
12 mu_1       0.3      1.37      4.42e- 4  1.85e-19     28.2 
13 mu_1       0.4      1.25      4.21e- 2  5.70e-14     13.4 
14 mu_1       0.5      1.20      3.64e- 1  9.09e-10     12.9 
15 mu_1       0.6      1.11      7.66e- 1  1.78e- 6      9.75
16 mu_1       0.7      1.08      8.53e- 1  1.11e-10      9.01
17 mu_1       0.8      0.987     1.25e- 1  5.74e-17      5.97
18 mu_1       0.9      0.978     2.82e- 4  3.39e-28     12.1 
19 mu_0       0.1      0.164     4.50e-14  5.01e-43     10.9 
20 mu_0       0.2      1.43      5.12e- 8  3.13e-29     65.5 
21 mu_0       0.3      1.48      1.10e- 4  3.45e-21     34.7 
22 mu_0       0.4      1.25      1.61e- 2  1.65e-15     10.6 
23 mu_0       0.5      1.25      2.38e- 1  3.95e-11     15.1 
24 mu_0       0.6      1.13      6.72e- 1  1.39e- 7     10.5 
25 mu_0       0.7      1.07      5.24e- 1  9.21e-10      7.64
26 mu_0       0.8      1.01      2.36e- 1  8.14e-16      7.24
27 mu_0       0.9      0.942     1.53e- 3  1.08e-26     10.2 
[1] "Total run time was 198.947 seconds"
