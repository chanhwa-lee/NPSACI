
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3511"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 4  1  1  3  6  2  4  5  3  3  4  3  2  8  5  2  2  1  3  2  3  1  2  2  7  3 
46 47 48 49 50 
 4  5  4  2  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.01887 0.28927 0.57698 0.98398 6.00000 
[1] "event indicator table: "

   0    1 
2057 1454 
[1] "treatment indicator table: "

   0    1 
1359 2152 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1751
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1760
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 46"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 237.339 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.490 0.0945
 2 mu         0.1   0.2 0.559 0.0938
 3 mu         0.1   0.3 0.609 0.101 
 4 mu         0.1   0.4 0.621 0.104 
 5 mu         0.1   0.5 0.698 0.116 
 6 mu         0.2   0.1 0.442 0.0508
 7 mu         0.2   0.2 0.525 0.0572
 8 mu         0.2   0.3 0.569 0.0530
 9 mu         0.2   0.4 0.607 0.0574
10 mu         0.2   0.5 0.697 0.0891
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.948        0.321 0.000108      12.7 
 2 mu         0.2      0.942        0.862 0.0536         2.67
 3 mu         0.3      1.01         1.00  0.498          1.90
 4 mu         0.4      1.01         1.01  0.539          1.88
 5 mu         0.5      1.01         1.01  0.719          1.47
 6 mu         0.6      1.00         1.00  0.754          1.26
 7 mu         0.7      1.00         0.998 0.747          1.19
 8 mu         0.8      1.00         0.989 0.610          1.44
 9 mu         0.9      1.00         1.00  0.537          1.58
10 mu_1       0.1      0.853        0.599 0.000333       4.08
11 mu_1       0.2      0.964        0.923 0.0894         2.26
12 mu_1       0.3      1.01         1.01  0.468          2.03
13 mu_1       0.4      1.01         0.998 0.591          1.82
14 mu_1       0.5      1.01         1.01  0.726          1.49
15 mu_1       0.6      1.00         0.994 0.773          1.27
16 mu_1       0.7      1.00         1.00  0.735          1.20
17 mu_1       0.8      1.00         0.988 0.602          1.44
18 mu_1       0.9      1.00         0.984 0.527          1.60
19 mu_0       0.1      0.958        0.291 0.0000834     13.7 
20 mu_0       0.2      0.936        0.856 0.0447         2.77
21 mu_0       0.3      1.00         0.988 0.487          1.84
22 mu_0       0.4      1.01         1.02  0.504          1.93
23 mu_0       0.5      1.01         1.00  0.699          1.45
24 mu_0       0.6      1.01         1.01  0.726          1.32
25 mu_0       0.7      1.00         0.993 0.773          1.24
26 mu_0       0.8      1.00         0.991 0.641          1.42
27 mu_0       0.9      0.994        1.02  0.518          1.65
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.0185     1.81e-12  3.79e-40     0.858
 2 mu         0.2     0.390      6.54e- 7  1.81e-27     9.19 
 3 mu         0.3     1.10       7.78e- 4  4.51e-20    12.6  
 4 mu         0.4     1.24       7.55e- 2  7.98e-15    11.4  
 5 mu         0.5     1.12       4.96e- 1  9.38e-11     5.93 
 6 mu         0.6     1.09       6.90e- 1  1.99e- 7     5.64 
 7 mu         0.7     0.936      5.91e- 1  1.01e- 6     3.81 
 8 mu         0.8     0.839      7.24e- 2  1.01e-11     6.83 
 9 mu         0.9     1.05       9.18e- 5  6.14e-21    18.2  
10 mu_1       0.1     0.0465     1.20e-11  3.70e-39     1.95 
11 mu_1       0.2     0.553      2.00e- 6  9.07e-27    12.1  
12 mu_1       0.3     1.20       1.63e- 3  1.50e-19    11.1  
13 mu_1       0.4     1.23       1.15e- 1  1.99e-14    10.6  
14 mu_1       0.5     1.11       5.36e- 1  1.88e-10     5.93 
15 mu_1       0.6     1.08       6.87e- 1  3.31e- 7     5.92 
16 mu_1       0.7     0.925      5.04e- 1  4.30e- 7     3.96 
17 mu_1       0.8     0.843      5.71e- 2  3.77e-12     6.76 
18 mu_1       0.9     1.06       6.36e- 5  2.03e-21    19.2  
19 mu_0       0.1     0.0153     5.38e-13  0            0.737
20 mu_0       0.2     0.350      3.02e- 7  0            8.46 
21 mu_0       0.3     1.06       4.19e- 4  0           13.3  
22 mu_0       0.4     1.24       4.85e- 2  0           11.9  
23 mu_0       0.5     1.13       4.05e- 1  0            5.93 
24 mu_0       0.6     1.10       6.19e- 1  0            5.21 
25 mu_0       0.7     0.963      4.89e- 1  0            4.62 
26 mu_0       0.8     0.822      1.30e- 1  0            7.12 
27 mu_0       0.9     0.934      2.59e- 4  0           12.6  
[1] "Total run time was 240.794 seconds"
