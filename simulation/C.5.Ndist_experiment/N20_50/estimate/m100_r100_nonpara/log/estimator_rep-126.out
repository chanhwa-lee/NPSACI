
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3318"
[1] "cluster size dist'n: "

20 22 23 24 25 26 27 28 29 30 31 32 33 34 36 37 38 39 40 41 42 43 44 45 47 48 
 6  7  1  4  6  3  1  6  4  3  4  6  3  6  4  3  4  2  3  2  4  4  3  3  4  1 
49 
 3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04449 0.35042 0.62569 1.00000 5.00000 
[1] "event indicator table: "

   0    1 
1962 1356 
[1] "treatment indicator table: "

   0    1 
1197 2121 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1677
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 43"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1641
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 193.556 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.408 0.119 
 2 mu         0.1   0.2 0.422 0.103 
 3 mu         0.1   0.3 0.482 0.0980
 4 mu         0.1   0.4 0.583 0.121 
 5 mu         0.1   0.5 0.598 0.122 
 6 mu         0.2   0.1 0.358 0.0442
 7 mu         0.2   0.2 0.407 0.0478
 8 mu         0.2   0.3 0.482 0.0391
 9 mu         0.2   0.4 0.563 0.0453
10 mu         0.2   0.5 0.599 0.0489
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.902        0.460 0.000106      16.2 
 2 mu         0.2      1.03         0.879 0.0355         4.40
 3 mu         0.3      1.04         0.985 0.279          2.46
 4 mu         0.4      1.01         0.985 0.549          1.65
 5 mu         0.5      1.01         0.986 0.622          1.40
 6 mu         0.6      1.02         1.02  0.642          1.36
 7 mu         0.7      0.995        0.988 0.589          1.35
 8 mu         0.8      1.00         0.999 0.694          1.43
 9 mu         0.9      1.02         1.02  0.483          2.17
10 mu_1       0.1      0.901        0.611 0.000357       4.62
11 mu_1       0.2      1.05         0.964 0.0652         4.11
12 mu_1       0.3      1.04         0.994 0.368          2.01
13 mu_1       0.4      1.01         0.983 0.547          1.68
14 mu_1       0.5      1.01         0.992 0.639          1.40
15 mu_1       0.6      1.01         1.01  0.610          1.37
16 mu_1       0.7      0.993        0.981 0.608          1.34
17 mu_1       0.8      1.00         1.00  0.707          1.46
18 mu_1       0.9      1.02         1.02  0.460          2.22
19 mu_0       0.1      0.902        0.426 0.0000784     17.5 
20 mu_0       0.2      1.03         0.859 0.0281         4.51
21 mu_0       0.3      1.05         0.983 0.241          2.65
22 mu_0       0.4      1.02         0.993 0.551          1.68
23 mu_0       0.5      1.00         0.983 0.606          1.41
24 mu_0       0.6      1.02         1.02  0.691          1.36
25 mu_0       0.7      0.998        0.989 0.546          1.37
26 mu_0       0.8      0.997        0.988 0.641          1.33
27 mu_0       0.9      1.02         1.01  0.544          1.67
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       1.92     4.41e-13  7.58e-39    161.  
 2 mu         0.2       2.11     1.89e- 7  5.27e-26     85.8 
 3 mu         0.3       1.90     3.77e- 4  1.51e-18     45.3 
 4 mu         0.4       1.62     2.65e- 2  2.61e-13     16.1 
 5 mu         0.5       1.35     3.41e- 1  2.66e- 9     15.3 
 6 mu         0.6       1.17     6.32e- 1  4.32e- 6      9.74
 7 mu         0.7       1.28     8.42e- 1  8.39e- 8     11.7 
 8 mu         0.8       1.38     6.13e- 1  9.77e-12     11.1 
 9 mu         0.9       1.38     8.10e- 3  1.47e-18     12.7 
10 mu_1       0.1       1.93     2.79e-12  7.24e-38    129.  
11 mu_1       0.2       2.12     6.65e- 7  2.52e-25     88.8 
12 mu_1       0.3       1.78     8.15e- 4  4.80e-18     31.2 
13 mu_1       0.4       1.55     4.26e- 2  6.23e-13     16.2 
14 mu_1       0.5       1.30     4.21e- 1  5.08e- 9     16.0 
15 mu_1       0.6       1.18     5.25e- 1  6.15e- 6      8.50
16 mu_1       0.7       1.30     8.89e- 1  9.59e- 9     11.8 
17 mu_1       0.8       1.39     5.28e- 1  9.77e-13     11.5 
18 mu_1       0.9       1.39     6.24e- 3  1.31e-19     13.7 
19 mu_0       0.1       1.92     1.75e-13  3.74e-40    165.  
20 mu_0       0.2       2.11     8.27e- 8  2.93e-27     85.1 
21 mu_0       0.3       1.95     1.65e- 4  9.56e-20     51.3 
22 mu_0       0.4       1.67     1.54e- 2  1.93e-14     15.9 
23 mu_0       0.5       1.40     2.14e- 1  2.36e-10     14.6 
24 mu_0       0.6       1.16     6.20e- 1  4.80e- 7     11.6 
25 mu_0       0.7       1.24     5.08e- 1  2.57e- 7     11.3 
26 mu_0       0.8       1.37     6.52e- 1  4.49e-11      9.42
27 mu_0       0.9       1.33     2.54e- 2  1.36e-17      9.22
[1] "Total run time was 196.823 seconds"
