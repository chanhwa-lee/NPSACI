
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3443"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 43 44 45 46 
 3  4  5  5  3  3  4  1  3  3  3  3  3  4  2  4  6  1  3  3  3  4  5  4  2  2 
47 48 49 
 9  3  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02238 0.33930 0.58602 1.00000 5.00000 
[1] "event indicator table: "

   0    1 
2089 1354 
[1] "treatment indicator table: "

   0    1 
1300 2143 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1689
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1754
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 117.861 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.453 0.124 
 2 mu         0.1   0.2 0.482 0.147 
 3 mu         0.1   0.3 0.613 0.117 
 4 mu         0.1   0.4 0.625 0.127 
 5 mu         0.1   0.5 0.635 0.140 
 6 mu         0.2   0.1 0.413 0.0849
 7 mu         0.2   0.2 0.444 0.101 
 8 mu         0.2   0.3 0.562 0.0666
 9 mu         0.2   0.4 0.584 0.0749
10 mu         0.2   0.5 0.600 0.0859
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.983        0.587 0.0000191     12.3 
 2 mu         0.2      0.990        0.914 0.0183         3.93
 3 mu         0.3      1.03         0.986 0.214          4.09
 4 mu         0.4      1.03         0.991 0.583          2.08
 5 mu         0.5      1.00         0.998 0.699          1.41
 6 mu         0.6      0.987        0.976 0.665          1.29
 7 mu         0.7      0.986        0.987 0.705          1.40
 8 mu         0.8      1.01         1.00  0.688          1.32
 9 mu         0.9      1.02         1.02  0.176          2.11
10 mu_1       0.1      0.998        0.712 0.0000621      9.00
11 mu_1       0.2      0.997        0.918 0.0365         3.82
12 mu_1       0.3      1.03         0.981 0.294          3.76
13 mu_1       0.4      1.02         1.02  0.579          1.82
14 mu_1       0.5      1.00         0.987 0.718          1.41
15 mu_1       0.6      0.986        0.974 0.659          1.28
16 mu_1       0.7      0.987        0.990 0.686          1.40
17 mu_1       0.8      1.01         1.01  0.651          1.31
18 mu_1       0.9      1.02         1.02  0.163          2.13
19 mu_0       0.1      0.981        0.583 0.0000143     12.6 
20 mu_0       0.2      0.988        0.912 0.0138         4.14
21 mu_0       0.3      1.03         0.980 0.179          4.22
22 mu_0       0.4      1.03         0.998 0.537          2.26
23 mu_0       0.5      1.01         1.01  0.661          1.41
24 mu_0       0.6      0.989        0.984 0.675          1.36
25 mu_0       0.7      0.985        0.992 0.682          1.41
26 mu_0       0.8      1.01         0.974 0.698          1.34
27 mu_0       0.9      1.03         1.03  0.291          1.94
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     77.2       7.78e-12  2.77e-44   7667.  
 2 mu         0.2      5.51      1.86e- 6  6.94e-30    442.  
 3 mu         0.3      1.09      1.08e- 3  1.72e-21     20.3 
 4 mu         0.4      1.17      5.56e- 2  1.46e-15      9.83
 5 mu         0.5      1.33      3.55e- 1  5.47e-11      8.87
 6 mu         0.6      1.20      6.49e- 1  5.79e- 8      9.23
 7 mu         0.7      1.13      5.77e- 1  2.50e-12      8.09
 8 mu         0.8      1.31      2.50e- 1  1.50e-18     10.2 
 9 mu         0.9      1.64      1.13e- 3  2.76e-29     29.5 
10 mu_1       0.1     41.1       4.96e-11  2.72e-43   4036.  
11 mu_1       0.2      2.32      6.84e- 6  3.40e-29    116.  
12 mu_1       0.3      0.965     2.44e- 3  5.62e-21     18.0 
13 mu_1       0.4      1.22      8.10e- 2  3.59e-15     10.7 
14 mu_1       0.5      1.33      4.18e- 1  1.07e-10      8.59
15 mu_1       0.6      1.19      6.74e- 1  5.08e- 9      8.94
16 mu_1       0.7      1.14      5.32e- 1  1.88e-13      7.62
17 mu_1       0.8      1.31      1.99e- 1  9.85e-20     10.5 
18 mu_1       0.9      1.66      8.34e- 4  1.61e-30     29.8 
19 mu_0       0.1     81.2       3.30e-12  6.29e-46   8071.  
20 mu_0       0.2      6.31      6.08e- 7  1.77e-31    523.  
21 mu_0       0.3      1.14      5.02e- 4  5.02e-23     22.3 
22 mu_0       0.4      1.14      3.49e- 2  4.98e-17     11.0 
23 mu_0       0.5      1.34      2.74e- 1  2.23e-12      9.52
24 mu_0       0.6      1.21      6.57e- 1  1.41e- 8      9.66
25 mu_0       0.7      1.13      5.94e- 1  7.90e-12      9.18
26 mu_0       0.8      1.29      3.75e- 1  7.09e-18      9.29
27 mu_0       0.9      1.46      3.82e- 3  2.61e-28     26.2 
[1] "Total run time was 119.867 seconds"
