
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3411"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 45 46 
 4  3  3  2  4  6  4  3  5  4  3  3  2  1  5  6  2  2  5  5  4  1  1  3  3  3 
47 48 49 50 
 1  5  4  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02226 0.32477 0.59435 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
2024 1387 
[1] "treatment indicator table: "

   0    1 
1384 2027 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1670
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 64"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1741
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 84"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 289.276 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.375 0.0506
 2 mu         0.1   0.2 0.436 0.0662
 3 mu         0.1   0.3 0.505 0.0847
 4 mu         0.1   0.4 0.594 0.0781
 5 mu         0.1   0.5 0.630 0.0853
 6 mu         0.2   0.1 0.341 0.0251
 7 mu         0.2   0.2 0.399 0.0309
 8 mu         0.2   0.3 0.468 0.0420
 9 mu         0.2   0.4 0.546 0.0362
10 mu         0.2   0.5 0.592 0.0426
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.07         0.763  0.00121       8.14
 2 mu         0.2      1.01         0.996  0.147         2.43
 3 mu         0.3      1.02         1.01   0.450         1.75
 4 mu         0.4      1.01         1.00   0.616         1.36
 5 mu         0.5      1.01         1.00   0.727         1.34
 6 mu         0.6      1.02         1.01   0.744         1.37
 7 mu         0.7      0.993        0.991  0.761         1.24
 8 mu         0.8      0.957        0.959  0.534         1.44
 9 mu         0.9      0.987        0.997  0.287         2.44
10 mu_1       0.1      1.00         0.917  0.00344       5.23
11 mu_1       0.2      1.02         0.972  0.224         2.03
12 mu_1       0.3      1.02         1.03   0.509         1.75
13 mu_1       0.4      1.01         1.00   0.630         1.33
14 mu_1       0.5      1.01         1.01   0.726         1.33
15 mu_1       0.6      1.02         1.01   0.758         1.34
16 mu_1       0.7      0.990        0.985  0.753         1.24
17 mu_1       0.8      0.956        0.951  0.517         1.43
18 mu_1       0.9      0.989        0.987  0.263         2.47
19 mu_0       0.1      1.07         0.746  0.000961      8.80
20 mu_0       0.2      1.01         1.00   0.127         2.54
21 mu_0       0.3      1.02         1.01   0.424         1.75
22 mu_0       0.4      1.01         0.993  0.606         1.44
23 mu_0       0.5      1.01         1.01   0.727         1.34
24 mu_0       0.6      1.02         1.01   0.723         1.41
25 mu_0       0.7      1.00         0.997  0.775         1.27
26 mu_0       0.8      0.962        0.955  0.600         1.46
27 mu_0       0.9      0.968        0.984  0.383         2.11
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.22      1.12e-11  6.30e-39    111.  
 2 mu         0.2      1.41      7.16e- 6  1.38e-25     71.8 
 3 mu         0.3      1.03      4.57e- 3  6.81e-18      9.77
 4 mu         0.4      0.977     1.26e- 1  1.54e-12      6.56
 5 mu         0.5      1.09      3.78e- 1  1.71e- 8      6.44
 6 mu         0.6      1.17      1.01e+ 0  9.52e- 8      7.63
 7 mu         0.7      1.25      5.14e- 1  3.22e-12      5.40
 8 mu         0.8      1.26      1.50e- 1  9.73e-19      7.49
 9 mu         0.9      2.09      4.70e- 4  3.59e-30     26.5 
10 mu_1       0.1      1.71      6.36e-11  5.79e-38    148.  
11 mu_1       0.2      1.32      2.21e- 5  6.35e-25     47.9 
12 mu_1       0.3      1.00      9.32e- 3  2.09e-17      7.86
13 mu_1       0.4      0.974     1.90e- 1  3.54e-12      6.31
14 mu_1       0.5      1.11      3.24e- 1  3.13e- 8      6.97
15 mu_1       0.6      1.18      9.19e- 1  2.12e- 8      7.58
16 mu_1       0.7      1.26      5.52e- 1  6.13e-13      5.75
17 mu_1       0.8      1.28      1.11e- 1  1.62e-19      7.25
18 mu_1       0.9      2.14      3.28e- 4  5.31e-31     28.1 
19 mu_0       0.1      1.16      5.47e-12  0           107.  
20 mu_0       0.2      1.43      3.37e- 6  0            77.8 
21 mu_0       0.3      1.05      2.43e- 3  0            10.6 
22 mu_0       0.4      0.979     8.78e- 2  0             6.73
23 mu_0       0.5      1.07      3.19e- 1  0             5.90
24 mu_0       0.6      1.16      9.12e- 1  0             7.71
25 mu_0       0.7      1.23      5.90e- 1  0             5.76
26 mu_0       0.8      1.18      2.31e- 1  0             8.46
27 mu_0       0.9      1.63      1.21e- 3  0            20.8 
[1] "Total run time was 294.849 seconds"
