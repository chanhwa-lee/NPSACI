
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3622"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 31 32 33 35 36 37 38 39 40 41 42 43 44 45 46 47 
 3  3  2  1  5  3  3  1  6  2  1  4  4  4  2  5  6  2  5  3  2  5  6  5  6  4 
48 49 
 6  1 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03326 0.34500 0.60911 1.00000 5.10586 
[1] "event indicator table: "

   0    1 
2169 1453 
[1] "treatment indicator table: "

   0    1 
1332 2290 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1861
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 55"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 96"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1761
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 212.356 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.197 0.0883
 2 mu         0.1   0.2 0.289 0.0823
 3 mu         0.1   0.3 0.314 0.105 
 4 mu         0.1   0.4 0.378 0.121 
 5 mu         0.1   0.5 0.399 0.141 
 6 mu         0.2   0.1 0.290 0.0391
 7 mu         0.2   0.2 0.371 0.0366
 8 mu         0.2   0.3 0.437 0.0436
 9 mu         0.2   0.4 0.502 0.0458
10 mu         0.2   0.5 0.525 0.0524
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.932        0.553 0.000111       3.96
 2 mu         0.2      1.05         0.945 0.0547         2.63
 3 mu         0.3      1.03         1.02  0.445          2.21
 4 mu         0.4      1.02         1.00  0.619          1.65
 5 mu         0.5      1.02         1.02  0.661          1.55
 6 mu         0.6      1.00         0.994 0.646          1.41
 7 mu         0.7      0.989        0.995 0.699          1.33
 8 mu         0.8      0.969        0.958 0.683          1.35
 9 mu         0.9      0.955        0.963 0.356          1.56
10 mu_1       0.1      1.03         0.773 0.000339       3.93
11 mu_1       0.2      1.04         0.941 0.0879         2.34
12 mu_1       0.3      1.03         0.985 0.511          2.29
13 mu_1       0.4      1.02         1.03  0.629          1.61
14 mu_1       0.5      1.02         1.01  0.660          1.51
15 mu_1       0.6      1.00         0.991 0.648          1.40
16 mu_1       0.7      0.988        0.995 0.711          1.33
17 mu_1       0.8      0.968        0.963 0.680          1.35
18 mu_1       0.9      0.957        0.969 0.357          1.58
19 mu_0       0.1      0.920        0.529 0.0000855      3.98
20 mu_0       0.2      1.05         0.939 0.0464         2.70
21 mu_0       0.3      1.03         1.02  0.401          2.18
22 mu_0       0.4      1.02         0.997 0.611          1.73
23 mu_0       0.5      1.02         1.01  0.661          1.60
24 mu_0       0.6      1.01         1.00  0.643          1.42
25 mu_0       0.7      0.993        0.995 0.672          1.33
26 mu_0       0.8      0.975        0.961 0.696          1.36
27 mu_0       0.9      0.945        0.938 0.347          1.40
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.0850     9.22e-14  5.73e-41      4.96
 2 mu         0.2     0.521      1.02e- 7  5.04e-28     16.5 
 3 mu         0.3     1.16       1.40e- 4  1.88e-20     18.4 
 4 mu         0.4     1.42       1.71e- 2  4.43e-15     28.0 
 5 mu         0.5     1.13       1.94e- 1  6.51e-11      7.30
 6 mu         0.6     1.04       5.77e- 1  1.65e- 7      8.18
 7 mu         0.7     1.10       5.15e- 1  4.26e- 9      6.43
 8 mu         0.8     1.03       2.71e- 1  1.46e-14      6.09
 9 mu         0.9     1.09       2.16e- 3  2.46e-24     11.7 
10 mu_1       0.1     0.180      6.42e-13  5.73e-40      9.91
11 mu_1       0.2     0.634      3.42e- 7  2.52e-27     17.2 
12 mu_1       0.3     1.28       3.31e- 4  6.27e-20     22.7 
13 mu_1       0.4     1.38       2.67e- 2  1.11e-14     25.9 
14 mu_1       0.5     1.11       2.26e- 1  1.30e-10      7.84
15 mu_1       0.6     1.04       5.20e- 1  2.76e- 7      8.30
16 mu_1       0.7     1.10       4.70e- 1  1.28e- 9      6.89
17 mu_1       0.8     1.02       2.39e- 1  3.82e-15      5.71
18 mu_1       0.9     1.10       1.51e- 3  5.71e-25     12.1 
19 mu_0       0.1     0.0745     3.37e-14  0             4.41
20 mu_0       0.2     0.492      4.71e- 8  0            16.3 
21 mu_0       0.3     1.11       6.16e- 5  0            16.6 
22 mu_0       0.4     1.44       1.08e- 2  0            29.5 
23 mu_0       0.5     1.15       1.31e- 1  0             7.94
24 mu_0       0.6     1.05       4.87e- 1  0             8.00
25 mu_0       0.7     1.09       5.22e- 1  0             5.88
26 mu_0       0.8     1.06       3.17e- 1  0             7.62
27 mu_0       0.9     1.02       6.12e- 3  0            14.2 
[1] "Total run time was 215.576 seconds"
