
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3572"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 37 38 39 40 41 42 43 45 46 47 
 5  4  3  2  5  1  1  4  5  3  2  2  2  2  2  1  6  8  4  5  1  3  1  6  6  4 
48 49 50 
 2  7  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03454 0.31681 0.59300 0.99986 7.00000 
[1] "event indicator table: "

   0    1 
2103 1469 
[1] "treatment indicator table: "

   0    1 
1448 2124 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1832
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1740
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 82"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 258.845 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.267 0.0612
 2 mu         0.1   0.2 0.430 0.0443
 3 mu         0.1   0.3 0.476 0.0365
 4 mu         0.1   0.4 0.538 0.0696
 5 mu         0.1   0.5 0.590 0.0774
 6 mu         0.2   0.1 0.310 0.0359
 7 mu         0.2   0.2 0.449 0.0329
 8 mu         0.2   0.3 0.506 0.0259
 9 mu         0.2   0.4 0.556 0.0397
10 mu         0.2   0.5 0.596 0.0456
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.988        0.823    0.0304      2.69
 2 mu         0.2      1.06         1.02     0.320       2.49
 3 mu         0.3      1.03         1.04     0.575       1.57
 4 mu         0.4      1.00         0.995    0.629       1.38
 5 mu         0.5      0.983        0.973    0.620       1.25
 6 mu         0.6      0.988        0.978    0.687       1.38
 7 mu         0.7      0.985        0.981    0.701       1.38
 8 mu         0.8      0.995        0.982    0.627       1.47
 9 mu         0.9      1.02         0.981    0.336       2.01
10 mu_1       0.1      1.04         0.991    0.0670      2.27
11 mu_1       0.2      1.05         1.03     0.339       2.28
12 mu_1       0.3      1.02         1.02     0.590       1.63
13 mu_1       0.4      0.994        0.977    0.596       1.38
14 mu_1       0.5      0.982        0.975    0.625       1.26
15 mu_1       0.6      0.988        0.979    0.676       1.38
16 mu_1       0.7      0.985        0.983    0.681       1.39
17 mu_1       0.8      0.997        0.979    0.640       1.50
18 mu_1       0.9      1.02         0.979    0.317       2.05
19 mu_0       0.1      0.982        0.798    0.0263      2.80
20 mu_0       0.2      1.06         1.01     0.315       2.55
21 mu_0       0.3      1.03         1.04     0.569       1.58
22 mu_0       0.4      1.00         1.01     0.651       1.40
23 mu_0       0.5      0.983        0.963    0.615       1.28
24 mu_0       0.6      0.988        0.975    0.703       1.38
25 mu_0       0.7      0.985        0.967    0.748       1.34
26 mu_0       0.8      0.988        0.989    0.573       1.40
27 mu_0       0.9      1.03         0.991    0.508       1.76
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.952     1.41e-11  1.53e-38     88.1 
 2 mu         0.2      0.544     2.51e- 6  3.35e-25     16.0 
 3 mu         0.3      0.965     2.33e- 3  1.46e-17      8.61
 4 mu         0.4      1.08      9.37e- 2  2.16e-12      8.71
 5 mu         0.5      0.932     2.85e- 1  1.84e- 8      5.32
 6 mu         0.6      0.947     4.03e- 1  4.73e- 9      4.60
 7 mu         0.7      1.12      8.24e- 1  1.57e-13      5.55
 8 mu         0.8      1.34      2.14e- 1  5.43e-20      8.70
 9 mu         0.9      1.43      7.88e- 4  3.17e-31     23.4 
10 mu_1       0.1      0.980     9.94e-11  1.40e-37     83.9 
11 mu_1       0.2      0.565     7.68e- 6  1.54e-24      7.64
12 mu_1       0.3      1.03      4.95e- 3  4.54e-17      8.79
13 mu_1       0.4      1.06      1.45e- 1  5.06e-12      8.07
14 mu_1       0.5      0.932     2.90e- 1  3.44e- 8      5.09
15 mu_1       0.6      0.962     4.42e- 1  7.50e-10      4.67
16 mu_1       0.7      1.15      7.99e- 1  2.13e-14      5.74
17 mu_1       0.8      1.35      1.65e- 1  6.47e-21      8.46
18 mu_1       0.9      1.43      5.24e- 4  3.35e-32     24.6 
19 mu_0       0.1      0.949     4.82e-12  1.38e-39     88.5 
20 mu_0       0.2      0.539     1.31e- 6  3.42e-26     18.1 
21 mu_0       0.3      0.936     1.28e- 3  1.36e-18      8.54
22 mu_0       0.4      1.09      5.68e- 2  2.35e-13      9.30
23 mu_0       0.5      0.931     3.01e- 1  2.40e- 9      5.55
24 mu_0       0.6      0.923     5.13e- 1  1.07e- 8      4.93
25 mu_0       0.7      1.07      6.01e- 1  4.72e-13      5.12
26 mu_0       0.8      1.32      3.28e- 1  2.46e-19      9.67
27 mu_0       0.9      1.41      3.17e- 3  2.86e-30     16.6 
[1] "Total run time was 262.58 seconds"
