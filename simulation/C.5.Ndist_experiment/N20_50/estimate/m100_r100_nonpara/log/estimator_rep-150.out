
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3503"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 2  6  3  4  1  4  6  3  4  2  1  2  2  5  1  3  5  1  4  3  2  6  3  4  2  6 
46 47 48 49 50 
 3  3  2  5  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03232 0.33814 0.60332 1.00000 5.00000 
[1] "event indicator table: "

   0    1 
2116 1387 
[1] "treatment indicator table: "

   0    1 
1306 2197 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1822
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1681
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 91"
[1] "     Cluster: 96"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 232.524 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.329 0.0588
 2 mu         0.1   0.2 0.355 0.0600
 3 mu         0.1   0.3 0.408 0.0625
 4 mu         0.1   0.4 0.438 0.0705
 5 mu         0.1   0.5 0.489 0.0688
 6 mu         0.2   0.1 0.355 0.0506
 7 mu         0.2   0.2 0.444 0.0595
 8 mu         0.2   0.3 0.500 0.0652
 9 mu         0.2   0.4 0.545 0.0651
10 mu         0.2   0.5 0.589 0.0762
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      0.805        0.758 0.00000698      7.00
 2 mu         0.2      0.897        0.961 0.0114          2.57
 3 mu         0.3      1.01         0.999 0.255           2.16
 4 mu         0.4      0.994        0.996 0.415           1.56
 5 mu         0.5      0.980        0.987 0.645           1.40
 6 mu         0.6      0.983        0.993 0.736           1.24
 7 mu         0.7      0.993        0.998 0.695           1.22
 8 mu         0.8      1.01         1.01  0.656           1.33
 9 mu         0.9      1.03         1.02  0.312           1.79
10 mu_1       0.1      0.831        0.857 0.0000265       5.14
11 mu_1       0.2      0.939        0.974 0.0223          2.73
12 mu_1       0.3      1.01         1.01  0.348           2.07
13 mu_1       0.4      0.989        0.999 0.433           1.49
14 mu_1       0.5      0.979        0.985 0.635           1.36
15 mu_1       0.6      0.984        0.989 0.741           1.24
16 mu_1       0.7      0.994        1.00  0.690           1.23
17 mu_1       0.8      1.01         1.01  0.650           1.34
18 mu_1       0.9      1.03         1.02  0.294           1.80
19 mu_0       0.1      0.802        0.739 0.00000481      7.24
20 mu_0       0.2      0.887        0.953 0.00866         2.53
21 mu_0       0.3      1.00         0.999 0.215           2.25
22 mu_0       0.4      0.997        0.993 0.404           1.61
23 mu_0       0.5      0.980        0.984 0.644           1.44
24 mu_0       0.6      0.983        0.993 0.687           1.26
25 mu_0       0.7      0.989        1.00  0.701           1.20
26 mu_0       0.8      1.01         1.00  0.680           1.34
27 mu_0       0.9      1.01         1.01  0.476           1.74
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       2.40     1.19e-11  2.22e-37     83.7 
 2 mu         0.2       2.67     1.70e- 6  3.86e-25     65.2 
 3 mu         0.3       1.32     3.15e- 3  4.90e-18     23.0 
 4 mu         0.4       1.10     1.11e- 1  4.77e-13     15.6 
 5 mu         0.5       1.28     4.37e- 1  3.12e- 9      9.98
 6 mu         0.6       1.31     7.41e- 1  1.38e- 6      6.57
 7 mu         0.7       1.21     6.24e- 1  1.48e-10      4.24
 8 mu         0.8       1.28     3.70e- 1  2.26e-16      6.63
 9 mu         0.9       1.30     2.41e- 3  4.47e-27     13.3 
10 mu_1       0.1       3.15     7.19e-11  2.12e-36    109.  
11 mu_1       0.2       2.22     5.04e- 6  1.84e-24     53.3 
12 mu_1       0.3       1.13     6.56e- 3  1.56e-17     22.8 
13 mu_1       0.4       1.12     1.23e- 1  1.14e-12     15.6 
14 mu_1       0.5       1.32     4.85e- 1  5.94e- 9     10.4 
15 mu_1       0.6       1.30     8.84e- 1  1.17e- 7      6.26
16 mu_1       0.7       1.20     6.03e- 1  3.09e-11      4.41
17 mu_1       0.8       1.28     2.95e- 1  4.14e-17      6.70
18 mu_1       0.9       1.29     1.72e- 3  1.09e-27     13.8 
19 mu_0       0.1       2.32     3.14e-12  1.15e-38     80.9 
20 mu_0       0.2       2.79     9.26e- 7  2.24e-26     69.6 
21 mu_0       0.3       1.40     1.58e- 3  3.26e-19     25.6 
22 mu_0       0.4       1.08     6.54e- 2  3.70e-14     16.4 
23 mu_0       0.5       1.25     3.50e- 1  2.90e-10      9.57
24 mu_0       0.6       1.32     6.12e- 1  4.09e- 7      7.04
25 mu_0       0.7       1.23     6.37e- 1  4.21e-10      4.37
26 mu_0       0.8       1.27     4.92e- 1  9.66e-16      6.40
27 mu_0       0.9       1.37     8.84e- 3  3.49e-26      9.65
[1] "Total run time was 236.325 seconds"
