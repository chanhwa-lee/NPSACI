
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3391"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 6  3  6  3  3  4  8  1  1  4  3  3  2  3  2  5  1  3  1  4  2  4  2  4  6  2 
46 47 48 49 50 
 4  1  2  5  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04838 0.37105 0.64152 1.00000 5.00000 
[1] "event indicator table: "

   0    1 
1992 1399 
[1] "treatment indicator table: "

   0    1 
1192 2199 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1627
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1764
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 83"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 490.429 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.408 0.133 
 2 mu         0.1   0.2 0.471 0.143 
 3 mu         0.1   0.3 0.535 0.163 
 4 mu         0.1   0.4 0.674 0.198 
 5 mu         0.1   0.5 0.737 0.214 
 6 mu         0.2   0.1 0.318 0.0552
 7 mu         0.2   0.2 0.386 0.0446
 8 mu         0.2   0.3 0.441 0.0511
 9 mu         0.2   0.4 0.571 0.0827
10 mu         0.2   0.5 0.645 0.109 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.04        0.0613  1.43e-11     25.8 
 2 mu         0.2      0.898       0.731   1.12e- 5      4.87
 3 mu         0.3      0.920       0.912   5.94e- 3      3.92
 4 mu         0.4      0.993       0.961   1.17e- 1      3.79
 5 mu         0.5      1.00        1.00    4.03e- 1      2.07
 6 mu         0.6      0.994       0.984   5.50e- 1      1.32
 7 mu         0.7      1.00        1.01    7.00e- 1      1.33
 8 mu         0.8      1.00        1.01    6.76e- 1      1.48
 9 mu         0.9      1.06        0.966   1.91e- 1      8.23
10 mu_1       0.1      0.921       0.161   6.87e-11     16.8 
11 mu_1       0.2      0.901       0.897   2.70e- 5      4.27
12 mu_1       0.3      0.935       0.898   9.53e- 3      4.38
13 mu_1       0.4      1.00        0.957   1.44e- 1      3.42
14 mu_1       0.5      1.00        1.00    4.39e- 1      1.81
15 mu_1       0.6      0.995       0.982   5.61e- 1      1.32
16 mu_1       0.7      1.00        1.01    6.87e- 1      1.32
17 mu_1       0.8      1.01        1.02    6.75e- 1      1.49
18 mu_1       0.9      1.07        0.976   1.71e- 1      8.81
19 mu_0       0.1      1.05        0.0503  8.27e-12     27.5 
20 mu_0       0.2      0.897       0.702   7.31e- 6      5.01
21 mu_0       0.3      0.913       0.898   4.41e- 3      3.72
22 mu_0       0.4      0.989       0.957   9.98e- 2      4.04
23 mu_0       0.5      1.01        0.993   3.68e- 1      2.33
24 mu_0       0.6      0.994       0.979   5.33e- 1      1.37
25 mu_0       0.7      1.00        1.01    7.31e- 1      1.34
26 mu_0       0.8      1.00        1.00    6.48e- 1      1.42
27 mu_0       0.9      1.01        0.984   3.69e- 1      3.03
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      29.9      9.11e-13  7.65e-34   2986.  
 2 mu         0.2      63.2      2.20e- 7  8.30e-22   6278.  
 3 mu         0.3      16.3      3.76e- 4  6.18e-15   1488.  
 4 mu         0.4       3.33     3.39e- 2  3.25e-10     95.7 
 5 mu         0.5       2.14     3.38e- 1  1.02e- 6     22.5 
 6 mu         0.6       1.38     7.30e- 1  2.74e- 4      7.83
 7 mu         0.7       1.01     7.58e- 1  6.47e- 8      4.58
 8 mu         0.8       1.58     5.05e- 1  1.68e-13     25.0 
 9 mu         0.9       3.99     3.72e- 3  1.13e-23    137.  
10 mu_1       0.1      51.2      6.19e-12  6.68e-33   5119.  
11 mu_1       0.2      54.4      7.87e- 7  3.62e-21   5381.  
12 mu_1       0.3      10.1      7.95e- 4  1.80e-14    850.  
13 mu_1       0.4       2.85     5.71e- 2  7.09e-10     45.6 
14 mu_1       0.5       2.03     4.25e- 1  1.79e- 6     20.0 
15 mu_1       0.6       1.32     6.63e- 1  1.21e- 4      6.53
16 mu_1       0.7       1.01     8.01e- 1  2.45e- 8      4.48
17 mu_1       0.8       1.67     4.18e- 1  5.57e-14     28.3 
18 mu_1       0.9       4.05     2.77e- 3  3.33e-24    138.  
19 mu_0       0.1      27.5      3.42e-13  1.09e-34   2749.  
20 mu_0       0.2      65.4      7.55e- 8  1.32e-22   6503.  
21 mu_0       0.3      18.9      2.01e- 4  1.13e-15   1761.  
22 mu_0       0.4       3.66     1.86e- 2  6.91e-11    132.  
23 mu_0       0.5       2.25     2.15e- 1  2.61e- 7     27.1 
24 mu_0       0.6       1.47     6.53e- 1  1.18e- 4      9.79
25 mu_0       0.7       1.01     7.25e- 1  1.58e- 7      5.48
26 mu_0       0.8       1.22     5.48e- 1  6.17e-13     11.9 
27 mu_0       0.9       3.41     1.19e- 2  8.30e-23    131.  
[1] "Total run time was 494.785 seconds"
