
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3326"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 46 
 7  5  2  2  3  5  3  1  2  6  6  1  4  5  3  3  4  6  2  3  5  3  2  2  4  5 
47 48 49 50 
 2  1  2  1 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02503 0.32648 0.59401 1.00000 5.75622 
[1] "event indicator table: "

   0    1 
1958 1368 
[1] "treatment indicator table: "

   0    1 
1276 2050 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1686
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 81"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1640
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 53"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 74"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 190.861 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.182 0.109 
 2 mu         0.1   0.2 0.218 0.139 
 3 mu         0.1   0.3 0.307 0.124 
 4 mu         0.1   0.4 0.369 0.119 
 5 mu         0.1   0.5 0.462 0.135 
 6 mu         0.2   0.1 0.212 0.0556
 7 mu         0.2   0.2 0.273 0.0717
 8 mu         0.2   0.3 0.332 0.0716
 9 mu         0.2   0.4 0.378 0.0740
10 mu         0.2   0.5 0.471 0.0835
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      0.943        0.271 0.00000258      8.57
 2 mu         0.2      0.924        0.851 0.00552         3.15
 3 mu         0.3      0.959        0.933 0.138           1.93
 4 mu         0.4      0.963        0.946 0.450           1.63
 5 mu         0.5      0.967        0.958 0.569           1.47
 6 mu         0.6      0.974        0.979 0.743           1.19
 7 mu         0.7      0.997        0.992 0.705           1.29
 8 mu         0.8      1.01         1.02  0.661           1.41
 9 mu         0.9      1.01         0.950 0.272           2.01
10 mu_1       0.1      0.899        0.470 0.00000996      4.64
11 mu_1       0.2      0.929        0.887 0.0108          2.65
12 mu_1       0.3      0.962        0.937 0.191           1.79
13 mu_1       0.4      0.961        0.946 0.481           1.65
14 mu_1       0.5      0.967        0.962 0.591           1.42
15 mu_1       0.6      0.977        0.980 0.744           1.19
16 mu_1       0.7      1.00         0.990 0.712           1.29
17 mu_1       0.8      1.01         1.02  0.650           1.43
18 mu_1       0.9      1.01         0.941 0.256           2.10
19 mu_0       0.1      0.948        0.254 0.00000176      9.01
20 mu_0       0.2      0.923        0.851 0.00419         3.28
21 mu_0       0.3      0.958        0.923 0.115           2.00
22 mu_0       0.4      0.964        0.943 0.425           1.62
23 mu_0       0.5      0.966        0.962 0.547           1.52
24 mu_0       0.6      0.971        0.977 0.708           1.23
25 mu_0       0.7      0.991        0.995 0.688           1.30
26 mu_0       0.8      1.01         1.01  0.702           1.35
27 mu_0       0.9      1.01         0.993 0.415           1.70
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     20.0       2.67e-12  4.27e-34   1051.  
 2 mu         0.2     12.6       5.27e- 7  9.26e-22    770.  
 3 mu         0.3      2.86      7.97e- 4  1.03e-14     93.1 
 4 mu         0.4      1.45      4.31e- 2  5.69e-10     18.2 
 5 mu         0.5      1.05      3.45e- 1  1.32e- 6     10.3 
 6 mu         0.6      0.987     6.76e- 1  1.69e- 8      9.42
 7 mu         0.7      1.14      5.54e- 1  8.72e-13      7.23
 8 mu         0.8      1.33      2.51e- 1  5.19e-19      6.98
 9 mu         0.9      1.45      2.27e- 3  6.80e-30     19.5 
10 mu_1       0.1     23.2       1.93e-11  3.73e-33   1287.  
11 mu_1       0.2      7.96      1.74e- 6  4.05e-21    535.  
12 mu_1       0.3      1.96      1.61e- 3  3.01e-14     43.1 
13 mu_1       0.4      1.36      7.06e- 2  1.29e- 9     18.4 
14 mu_1       0.5      1.02      3.94e- 1  2.39e- 6     11.1 
15 mu_1       0.6      0.997     6.11e- 1  3.36e- 9      8.51
16 mu_1       0.7      1.15      6.34e- 1  1.48e-13      7.51
17 mu_1       0.8      1.34      2.08e- 1  7.72e-20      7.83
18 mu_1       0.9      1.42      1.64e- 3  9.00e-31     19.7 
19 mu_0       0.1     19.7       7.92e-13  5.93e-35   1056.  
20 mu_0       0.2     13.7       2.38e- 7  1.45e-22    829.  
21 mu_0       0.3      3.25      4.32e- 4  1.85e-15    115.  
22 mu_0       0.4      1.51      2.39e- 2  9.03e-11     18.0 
23 mu_0       0.5      1.08      2.72e- 1  2.52e- 7      9.40
24 mu_0       0.6      0.972     5.66e- 1  3.73e- 8     10.8 
25 mu_0       0.7      1.11      5.18e- 1  2.56e-12      6.57
26 mu_0       0.8      1.26      4.50e- 1  2.29e-18      7.33
27 mu_0       0.9      1.68      7.87e- 3  5.99e-29     20.0 
[1] "Total run time was 194.023 seconds"
