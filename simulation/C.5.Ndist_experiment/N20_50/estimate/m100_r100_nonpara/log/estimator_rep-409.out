
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3530"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 29 30 31 32 33 34 35 36 37 38 40 41 42 43 44 45 47 48 
 2  2  5  3  5  1  2  9  2  4  3  7  2  3  6  2  1  4  2  1  2  4  5  6  2  5 
49 50 
 6  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04073 0.37792 0.63617 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
2091 1439 
[1] "treatment indicator table: "

   0    1 
1278 2252 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1883
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1647
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 50"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 445.412 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.512 0.137 
 2 mu         0.1   0.2 0.608 0.157 
 3 mu         0.1   0.3 0.622 0.167 
 4 mu         0.1   0.4 0.704 0.174 
 5 mu         0.1   0.5 0.715 0.183 
 6 mu         0.2   0.1 0.367 0.0666
 7 mu         0.2   0.2 0.443 0.0726
 8 mu         0.2   0.3 0.462 0.0756
 9 mu         0.2   0.4 0.523 0.0687
10 mu         0.2   0.5 0.549 0.0738
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      1.24         0.632 0.0000149      21.0 
 2 mu         0.2      1.02         1.01  0.00802         2.90
 3 mu         0.3      1.04         1.02  0.122           2.38
 4 mu         0.4      1.02         0.979 0.424           1.68
 5 mu         0.5      0.990        0.981 0.559           1.49
 6 mu         0.6      0.993        1.00  0.494           1.29
 7 mu         0.7      0.993        0.982 0.648           1.37
 8 mu         0.8      0.982        0.977 0.687           1.35
 9 mu         0.9      0.998        1.00  0.500           1.70
10 mu_1       0.1      1.11         0.813 0.0000599      12.6 
11 mu_1       0.2      1.03         0.972 0.0164          3.04
12 mu_1       0.3      1.04         0.992 0.174           2.15
13 mu_1       0.4      1.01         0.989 0.458           1.70
14 mu_1       0.5      0.990        0.998 0.574           1.47
15 mu_1       0.6      0.994        0.998 0.493           1.27
16 mu_1       0.7      0.992        0.983 0.672           1.38
17 mu_1       0.8      0.981        0.972 0.686           1.34
18 mu_1       0.9      0.999        0.999 0.485           1.75
19 mu_0       0.1      1.26         0.590 0.00000994     21.9 
20 mu_0       0.2      1.02         1.03  0.00594         2.86
21 mu_0       0.3      1.04         1.01  0.0996          2.47
22 mu_0       0.4      1.02         0.987 0.396           1.66
23 mu_0       0.5      0.990        0.976 0.530           1.51
24 mu_0       0.6      0.992        1.01  0.494           1.32
25 mu_0       0.7      0.994        0.991 0.591           1.36
26 mu_0       0.8      0.985        0.981 0.691           1.39
27 mu_0       0.9      0.990        0.982 0.529           1.67
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     16.4       1.83e-12  2.68e-39   1639.  
 2 mu         0.2      4.44      7.34e- 7  1.86e-26    373.  
 3 mu         0.3      1.69      5.97e- 4  5.31e-19     25.6 
 4 mu         0.4      1.79      4.39e- 2  7.10e-14     18.7 
 5 mu         0.5      1.24      2.76e- 1  3.42e-10      8.43
 6 mu         0.6      0.988     3.58e- 1  2.06e- 8     11.0 
 7 mu         0.7      0.938     4.89e- 1  2.52e-13      4.30
 8 mu         0.8      1.06      2.24e- 1  1.97e-20      7.68
 9 mu         0.9      1.10      1.80e- 3  8.08e-33     11.7 
10 mu_1       0.1     17.5       9.52e-12  2.56e-38   1743.  
11 mu_1       0.2      2.89      2.32e- 6  8.88e-26    198.  
12 mu_1       0.3      1.77      1.33e- 3  1.69e-18     27.1 
13 mu_1       0.4      1.75      4.41e- 2  1.78e-13     16.3 
14 mu_1       0.5      1.19      3.34e- 1  6.84e-10      8.27
15 mu_1       0.6      0.974     4.59e- 1  3.65e- 9     10.5 
16 mu_1       0.7      0.935     5.11e- 1  3.82e-14      4.16
17 mu_1       0.8      1.07      1.80e- 1  2.62e-21      8.34
18 mu_1       0.9      1.09      1.22e- 3  9.55e-34     11.3 
19 mu_0       0.1     16.3       8.51e-13  0          1627.  
20 mu_0       0.2      4.83      3.20e- 7  0           416.  
21 mu_0       0.3      1.65      2.83e- 4  0            25.0 
22 mu_0       0.4      1.81      2.49e- 2  0            20.2 
23 mu_0       0.5      1.30      1.90e- 1  0             9.63
24 mu_0       0.6      1.01      3.45e- 1  0            11.8 
25 mu_0       0.7      0.945     3.60e- 1  0             4.78
26 mu_0       0.8      1.03      3.12e- 1  0             5.67
27 mu_0       0.9      1.10      5.19e- 3  0            15.4 
[1] "Total run time was 449.355 seconds"
