
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3521"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 45 46 
 3  2  2  5  2  2  5  3  5  4  4  2  2  3  4  7  4  2  2  3  3  2  3  1  6  4 
47 48 49 50 
 1  4  6  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.05122 0.38318 0.63180 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
2064 1457 
[1] "treatment indicator table: "

   0    1 
1293 2228 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1765
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1756
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 195.813 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.228 0.130 
 2 mu         0.1   0.2 0.380 0.103 
 3 mu         0.1   0.3 0.515 0.0833
 4 mu         0.1   0.4 0.524 0.0785
 5 mu         0.1   0.5 0.610 0.101 
 6 mu         0.2   0.1 0.248 0.0755
 7 mu         0.2   0.2 0.368 0.0600
 8 mu         0.2   0.3 0.469 0.0506
 9 mu         0.2   0.4 0.494 0.0448
10 mu         0.2   0.5 0.568 0.0607
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.979        0.738   0.00457      5.83
 2 mu         0.2      1.02         1.01    0.132        2.73
 3 mu         0.3      0.982        0.942   0.145        1.72
 4 mu         0.4      0.980        0.975   0.264        1.38
 5 mu         0.5      1.00         1.01    0.634        1.34
 6 mu         0.6      0.986        0.982   0.633        1.36
 7 mu         0.7      0.989        0.991   0.767        1.39
 8 mu         0.8      1.02         1.00    0.721        1.42
 9 mu         0.9      1.02         1.04    0.413        1.81
10 mu_1       0.1      1.07         0.989   0.0114       5.06
11 mu_1       0.2      1.01         0.963   0.225        2.34
12 mu_1       0.3      0.977        0.957   0.115        1.62
13 mu_1       0.4      0.985        0.983   0.313        1.39
14 mu_1       0.5      1.00         0.998   0.677        1.31
15 mu_1       0.6      0.986        0.979   0.640        1.34
16 mu_1       0.7      0.990        0.992   0.766        1.39
17 mu_1       0.8      1.02         1.01    0.715        1.42
18 mu_1       0.9      1.02         1.03    0.396        1.85
19 mu_0       0.1      0.969        0.709   0.00382      6.08
20 mu_0       0.2      1.02         1.01    0.109        2.86
21 mu_0       0.3      0.984        0.945   0.159        1.76
22 mu_0       0.4      0.978        0.976   0.231        1.41
23 mu_0       0.5      1.00         1.01    0.585        1.39
24 mu_0       0.6      0.986        0.989   0.622        1.38
25 mu_0       0.7      0.987        0.969   0.764        1.41
26 mu_0       0.8      1.01         1.00    0.699        1.41
27 mu_0       0.9      1.02         1.01    0.470        1.66
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.942     7.56e-13  1.62e-40     88.6 
 2 mu         0.2      0.633     2.42e- 7  7.99e-27     21.0 
 3 mu         0.3      1.10      5.63e- 4  6.74e-19     14.3 
 4 mu         0.4      1.30      5.12e- 2  2.37e-13     14.9 
 5 mu         0.5      1.23      4.29e- 1  3.94e- 9     10.7 
 6 mu         0.6      1.24      7.04e- 1  8.85e- 6      9.51
 7 mu         0.7      1.15      5.20e- 1  1.54e- 8      5.96
 8 mu         0.8      1.17      2.74e- 1  1.19e-12      7.90
 9 mu         0.9      1.70      1.22e- 3  4.21e-22     20.0 
10 mu_1       0.1      0.803     4.85e-12  1.52e-39     68.1 
11 mu_1       0.2      0.642     8.61e- 7  3.75e-26     17.8 
12 mu_1       0.3      1.19      1.16e- 3  2.11e-18     13.0 
13 mu_1       0.4      1.29      7.05e- 2  5.56e-13     13.8 
14 mu_1       0.5      1.24      3.89e- 1  7.39e- 9     10.9 
15 mu_1       0.6      1.24      8.51e- 1  1.44e- 6      9.43
16 mu_1       0.7      1.15      5.58e- 1  1.69e- 9      5.60
17 mu_1       0.8      1.17      2.27e- 1  1.15e-13      8.68
18 mu_1       0.9      1.73      8.52e- 4  1.40e-22     21.4 
19 mu_0       0.1      0.957     2.20e-13  1.10e-41     90.8 
20 mu_0       0.2      0.631     1.00e- 7  6.11e-28     24.2 
21 mu_0       0.3      1.07      2.99e- 4  5.89e-20     14.9 
22 mu_0       0.4      1.31      3.03e- 2  2.42e-14     15.6 
23 mu_0       0.5      1.23      3.21e- 1  4.82e-10     10.5 
24 mu_0       0.6      1.24      5.37e- 1  1.35e- 6      9.62
25 mu_0       0.7      1.16      6.60e- 1  4.73e- 8      6.82
26 mu_0       0.8      1.14      2.56e- 1  5.50e-12      4.91
27 mu_0       0.9      1.44      4.42e- 3  2.95e-21     18.2 
[1] "Total run time was 199.055 seconds"
