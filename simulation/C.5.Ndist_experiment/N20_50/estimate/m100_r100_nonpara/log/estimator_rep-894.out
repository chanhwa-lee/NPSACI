
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3531"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 1  2  2  2  4  5  3  4  5  2  5  1  3  6  6  4  3  4  2  3  2  3  1  3  6  1 
46 47 48 49 50 
 1  3  5  4  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03514 0.36096 0.64187 1.00000 7.00000 
[1] "event indicator table: "

   0    1 
2072 1459 
[1] "treatment indicator table: "

   0    1 
1297 2234 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1777
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1754
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 81"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 224.475 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.419 0.148 
 2 mu         0.1   0.2 0.525 0.145 
 3 mu         0.1   0.3 0.536 0.161 
 4 mu         0.1   0.4 0.631 0.139 
 5 mu         0.1   0.5 0.654 0.146 
 6 mu         0.2   0.1 0.317 0.0946
 7 mu         0.2   0.2 0.423 0.0898
 8 mu         0.2   0.3 0.456 0.120 
 9 mu         0.2   0.4 0.572 0.0987
10 mu         0.2   0.5 0.597 0.105 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.07         0.604  0.000160      5.82
 2 mu         0.2      1.11         1.00   0.0613        2.77
 3 mu         0.3      1.05         1.01   0.544         1.72
 4 mu         0.4      0.996        0.976  0.611         1.60
 5 mu         0.5      0.983        0.978  0.642         1.30
 6 mu         0.6      0.985        1.00   0.632         1.37
 7 mu         0.7      0.978        0.972  0.633         1.21
 8 mu         0.8      1.01         1.01   0.563         1.33
 9 mu         0.9      1.04         1.01   0.534         1.65
10 mu_1       0.1      1.11         0.876  0.000484      5.91
11 mu_1       0.2      1.10         1.02   0.100         2.29
12 mu_1       0.3      1.04         1.02   0.544         1.67
13 mu_1       0.4      0.991        0.971  0.594         1.59
14 mu_1       0.5      0.983        0.975  0.677         1.29
15 mu_1       0.6      0.985        1.00   0.641         1.36
16 mu_1       0.7      0.978        0.978  0.626         1.22
17 mu_1       0.8      1.01         1.01   0.554         1.35
18 mu_1       0.9      1.04         1.00   0.514         1.67
19 mu_0       0.1      1.07         0.589  0.000124      5.81
20 mu_0       0.2      1.11         1.02   0.0517        2.89
21 mu_0       0.3      1.06         1.01   0.519         1.75
22 mu_0       0.4      0.999        0.972  0.613         1.61
23 mu_0       0.5      0.982        0.979  0.606         1.32
24 mu_0       0.6      0.985        0.999  0.619         1.39
25 mu_0       0.7      0.979        0.966  0.650         1.22
26 mu_0       0.8      0.995        1.01   0.601         1.25
27 mu_0       0.9      1.05         1.04   0.593         1.59
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      2.56      3.47e-14  5.68e-40    119.  
 2 mu         0.2      2.30      1.24e- 7  4.44e-27    104.  
 3 mu         0.3      0.775     2.49e- 4  1.45e-19     14.5 
 4 mu         0.4      0.965     2.49e- 2  2.93e-14      8.46
 5 mu         0.5      1.03      2.08e- 1  3.59e-10      7.06
 6 mu         0.6      0.975     6.14e- 1  7.64e- 8      5.97
 7 mu         0.7      1.11      6.08e- 1  1.69e-12      7.96
 8 mu         0.8      1.21      3.25e- 1  2.60e-19      7.66
 9 mu         0.9      1.20      2.59e- 3  2.70e-31     22.5 
10 mu_1       0.1      3.20      2.43e-13  5.55e-39    109.  
11 mu_1       0.2      1.79      3.86e- 7  2.17e-26     84.6 
12 mu_1       0.3      0.764     5.53e- 4  4.73e-19      7.87
13 mu_1       0.4      1.01      2.80e- 2  7.16e-14      7.93
14 mu_1       0.5      1.03      2.20e- 1  7.02e-10      7.65
15 mu_1       0.6      0.969     4.98e- 1  1.86e- 8      5.39
16 mu_1       0.7      1.13      5.57e- 1  3.53e-13      8.08
17 mu_1       0.8      1.21      2.73e- 1  4.74e-20      7.53
18 mu_1       0.9      1.19      1.90e- 3  4.37e-32     22.5 
19 mu_0       0.1      2.49      1.16e-14  1.44e-41    120.  
20 mu_0       0.2      2.43      5.90e- 8  1.26e-28    109.  
21 mu_0       0.3      0.780     1.19e- 4  4.71e-21     17.3 
22 mu_0       0.4      0.932     1.48e- 2  1.11e-15      8.81
23 mu_0       0.5      1.03      1.49e- 1  1.63e-11      6.48
24 mu_0       0.6      0.985     4.68e- 1  4.14e- 8      6.84
25 mu_0       0.7      1.07      6.65e- 1  4.83e-12      7.68
26 mu_0       0.8      1.21      5.26e- 1  1.11e-18      8.21
27 mu_0       0.9      1.20      7.94e- 3  2.31e-30     22.5 
[1] "Total run time was 228.092 seconds"
