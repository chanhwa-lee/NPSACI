
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3531"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 29 30 31 32 33 34 35 36 37 39 40 41 42 43 44 45 46 47 
 5  3  3  3  1  1  2  6  5  4  2  7  4  5  2  2  5  4  2  3  2  2  6  4  1  4 
48 49 50 
 7  3  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03658 0.34936 0.60436 1.00000 6.26326 
[1] "event indicator table: "

   0    1 
2156 1375 
[1] "treatment indicator table: "

   0    1 
1280 2251 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1759
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1772
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 45"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 240.863 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.425 0.0647
 2 mu         0.1   0.2 0.481 0.0582
 3 mu         0.1   0.3 0.517 0.0696
 4 mu         0.1   0.4 0.604 0.0785
 5 mu         0.1   0.5 0.613 0.0716
 6 mu         0.2   0.1 0.369 0.0301
 7 mu         0.2   0.2 0.455 0.0292
 8 mu         0.2   0.3 0.495 0.0375
 9 mu         0.2   0.4 0.547 0.0460
10 mu         0.2   0.5 0.580 0.0389
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.952        0.535   0.00171      5.31
 2 mu         0.2      0.970        0.914   0.196        2.16
 3 mu         0.3      0.976        0.985   0.427        1.83
 4 mu         0.4      0.998        0.982   0.625        1.73
 5 mu         0.5      1.02         1.01    0.764        1.37
 6 mu         0.6      1.02         1.01    0.792        1.31
 7 mu         0.7      1.00         0.992   0.793        1.34
 8 mu         0.8      0.996        0.995   0.637        1.34
 9 mu         0.9      0.995        0.981   0.284        1.50
10 mu_1       0.1      0.957        0.802   0.00462      3.70
11 mu_1       0.2      0.961        0.936   0.280        1.94
12 mu_1       0.3      0.979        0.978   0.490        1.72
13 mu_1       0.4      1.00         0.991   0.624        1.77
14 mu_1       0.5      1.02         1.01    0.776        1.36
15 mu_1       0.6      1.02         1.02    0.790        1.31
16 mu_1       0.7      1.00         0.997   0.782        1.34
17 mu_1       0.8      0.997        0.998   0.620        1.34
18 mu_1       0.9      0.994        0.969   0.272        1.52
19 mu_0       0.1      0.951        0.507   0.00139      5.62
20 mu_0       0.2      0.973        0.918   0.175        2.26
21 mu_0       0.3      0.975        0.972   0.400        1.89
22 mu_0       0.4      0.996        0.988   0.626        1.70
23 mu_0       0.5      1.01         1.01    0.744        1.39
24 mu_0       0.6      1.02         1.02    0.794        1.31
25 mu_0       0.7      1.01         0.982   0.777        1.35
26 mu_0       0.8      0.993        0.992   0.705        1.33
27 mu_0       0.9      1.00         1.02    0.394        1.41
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       1.68     8.33e-13  5.67e-40    157.  
 2 mu         0.2       1.47     1.37e- 6  4.43e-27     28.8 
 3 mu         0.3       1.49     1.09e- 3  1.45e-19     33.9 
 4 mu         0.4       1.27     4.66e- 2  2.92e-14     50.3 
 5 mu         0.5       1.27     2.70e- 1  3.58e-10     14.1 
 6 mu         0.6       1.33     1.01e+ 0  3.61e- 8      8.84
 7 mu         0.7       1.17     8.76e- 1  3.24e-12      6.42
 8 mu         0.8       1.18     2.00e- 1  4.98e-18     11.1 
 9 mu         0.9       1.11     1.37e- 3  4.12e-28     13.9 
10 mu_1       0.1       1.51     4.95e-12  5.54e-39    128.  
11 mu_1       0.2       1.54     3.89e- 6  2.17e-26     29.1 
12 mu_1       0.3       1.44     2.31e- 3  4.71e-19     31.7 
13 mu_1       0.4       1.28     7.85e- 2  7.14e-14     48.1 
14 mu_1       0.5       1.30     3.46e- 1  7.00e-10     10.8 
15 mu_1       0.6       1.32     8.41e- 1  4.87e- 9      8.03
16 mu_1       0.7       1.16     7.31e- 1  3.75e-13      6.69
17 mu_1       0.8       1.17     1.80e- 1  5.04e-19     11.2 
18 mu_1       0.9       1.12     9.62e- 4  3.72e-29     14.3 
19 mu_0       0.1       1.70     3.75e-13  0           161.  
20 mu_0       0.2       1.45     6.86e- 7  0            29.0 
21 mu_0       0.3       1.51     5.70e- 4  0            34.9 
22 mu_0       0.4       1.26     2.86e- 2  0            51.7 
23 mu_0       0.5       1.24     2.52e- 1  0            17.4 
24 mu_0       0.6       1.35     8.57e- 1  0            10.0 
25 mu_0       0.7       1.20     8.45e- 1  0             6.79
26 mu_0       0.8       1.20     3.05e- 1  0            10.7 
27 mu_0       0.9       1.08     4.57e- 3  0            15.0 
[1] "Total run time was 244.501 seconds"
