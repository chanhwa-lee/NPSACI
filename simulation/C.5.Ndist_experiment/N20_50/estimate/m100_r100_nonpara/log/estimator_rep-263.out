
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3395"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 35 36 37 38 39 40 41 42 43 44 45 47 
 3  2  3  1  2  9  6  4  4  4  5  6  2  5  1  5  3  1  3  3  4  2  2  3  4  4 
48 49 50 
 4  3  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04512 0.37616 0.64352 1.00000 5.00000 
[1] "event indicator table: "

   0    1 
1980 1415 
[1] "treatment indicator table: "

   0    1 
1223 2172 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1695
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 11"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1700
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 236.062 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.382 0.106 
 2 mu         0.1   0.2 0.502 0.184 
 3 mu         0.1   0.3 0.494 0.157 
 4 mu         0.1   0.4 0.571 0.145 
 5 mu         0.1   0.5 0.600 0.135 
 6 mu         0.2   0.1 0.353 0.0613
 7 mu         0.2   0.2 0.457 0.104 
 8 mu         0.2   0.3 0.496 0.0866
 9 mu         0.2   0.4 0.552 0.0823
10 mu         0.2   0.5 0.583 0.0770
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.984        0.808    0.0239      4.07
 2 mu         0.2      1.08         1.02     0.214       3.79
 3 mu         0.3      1.06         1.04     0.411       1.76
 4 mu         0.4      1.02         1.01     0.661       1.40
 5 mu         0.5      1.01         1.02     0.728       1.33
 6 mu         0.6      1.01         0.994    0.701       1.32
 7 mu         0.7      0.994        0.985    0.604       1.32
 8 mu         0.8      0.981        0.975    0.553       1.33
 9 mu         0.9      1.00         0.972    0.425       1.59
10 mu_1       0.1      1.04         0.891    0.0521      5.17
11 mu_1       0.2      1.08         1.03     0.262       3.20
12 mu_1       0.3      1.05         1.04     0.469       1.73
13 mu_1       0.4      1.01         1.02     0.662       1.38
14 mu_1       0.5      1.01         1.02     0.716       1.35
15 mu_1       0.6      1.01         0.995    0.712       1.31
16 mu_1       0.7      0.992        0.985    0.588       1.32
17 mu_1       0.8      0.981        0.987    0.549       1.33
18 mu_1       0.9      1.00         0.972    0.404       1.61
19 mu_0       0.1      0.979        0.765    0.0208      3.95
20 mu_0       0.2      1.08         1.00     0.202       3.93
21 mu_0       0.3      1.06         1.04     0.386       1.78
22 mu_0       0.4      1.02         1.01     0.661       1.43
23 mu_0       0.5      1.01         1.02     0.739       1.31
24 mu_0       0.6      1.01         1.00     0.684       1.36
25 mu_0       0.7      0.997        0.973    0.643       1.35
26 mu_0       0.8      0.978        0.973    0.567       1.33
27 mu_0       0.9      0.993        0.993    0.535       1.47
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.61      2.24e-12  8.95e-42    124.  
 2 mu         0.2      0.717     1.18e- 6  4.97e-28     28.9 
 3 mu         0.3      0.790     6.24e- 4  4.80e-20     15.3 
 4 mu         0.4      1.05      2.56e- 2  1.97e-14     10.1 
 5 mu         0.5      1.06      3.05e- 1  3.92e-10      5.62
 6 mu         0.6      1.02      5.91e- 1  3.92e- 8      5.60
 7 mu         0.7      1.08      4.84e- 1  6.26e-12      7.70
 8 mu         0.8      1.32      3.47e- 1  2.17e-17      7.13
 9 mu         0.9      1.50      3.16e- 3  7.18e-27     12.4 
10 mu_1       0.1      1.48      1.51e-11  8.57e-41    113.  
11 mu_1       0.2      0.639     3.45e- 6  2.38e-27     16.6 
12 mu_1       0.3      0.855     1.47e- 3  1.53e-19     13.2 
13 mu_1       0.4      1.08      3.87e- 2  4.72e-14      9.31
14 mu_1       0.5      1.05      3.26e- 1  7.52e-10      5.38
15 mu_1       0.6      1.02      6.37e- 1  5.60e- 9      5.69
16 mu_1       0.7      1.09      4.92e- 1  7.66e-13      8.00
17 mu_1       0.8      1.34      2.89e- 1  2.32e-18      7.59
18 mu_1       0.9      1.49      2.24e- 3  6.84e-28     12.4 
19 mu_0       0.1      1.62      8.07e-13  0           125.  
20 mu_0       0.2      0.737     4.82e- 7  0            32.9 
21 mu_0       0.3      0.762     2.62e- 4  0            16.2 
22 mu_0       0.4      1.03      1.45e- 2  0            10.7 
23 mu_0       0.5      1.07      2.25e- 1  0             5.87
24 mu_0       0.6      1.02      4.57e- 1  0             5.46
25 mu_0       0.7      1.04      5.01e- 1  0             7.00
26 mu_0       0.8      1.24      3.68e- 1  0             7.46
27 mu_0       0.9      1.54      8.38e- 3  0            12.4 
[1] "Total run time was 240.641 seconds"
