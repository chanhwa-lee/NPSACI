
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3545"
[1] "cluster size dist'n: "

20 21 22 23 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 
 4  3  2  2  4  5  2  4  6  2  5  1  2  4  2  6  5  3  3  4  1  4  3  2  1  2 
47 48 49 50 
 7  5  1  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03944 0.38919 0.64455 1.00000 7.08749 
[1] "event indicator table: "

   0    1 
2122 1423 
[1] "treatment indicator table: "

   0    1 
1271 2274 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1771
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1774
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 234.175 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.523 0.132 
 2 mu         0.1   0.2 0.584 0.138 
 3 mu         0.1   0.3 0.604 0.132 
 4 mu         0.1   0.4 0.631 0.134 
 5 mu         0.1   0.5 0.672 0.143 
 6 mu         0.2   0.1 0.492 0.0945
 7 mu         0.2   0.2 0.565 0.0974
 8 mu         0.2   0.3 0.594 0.0919
 9 mu         0.2   0.4 0.631 0.0908
10 mu         0.2   0.5 0.690 0.0966
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      0.874        0.234 0.000000574     13.9 
 2 mu         0.2      1.04         0.875 0.00198          6.26
 3 mu         0.3      1.05         1.05  0.0753           3.97
 4 mu         0.4      1.01         0.995 0.405            2.07
 5 mu         0.5      1.04         1.03  0.756            1.82
 6 mu         0.6      1.02         0.999 0.794            1.33
 7 mu         0.7      0.977        0.974 0.762            1.33
 8 mu         0.8      0.976        0.956 0.650            1.83
 9 mu         0.9      0.955        0.913 0.257            2.52
10 mu_1       0.1      0.896        0.419 0.00000242      14.7 
11 mu_1       0.2      1.05         0.938 0.00425          5.31
12 mu_1       0.3      1.03         1.03  0.111            3.50
13 mu_1       0.4      1.02         1.00  0.476            1.86
14 mu_1       0.5      1.05         1.04  0.756            1.83
15 mu_1       0.6      1.01         0.992 0.811            1.32
16 mu_1       0.7      0.975        0.972 0.753            1.34
17 mu_1       0.8      0.976        0.957 0.629            1.85
18 mu_1       0.9      0.954        0.914 0.244            2.56
19 mu_0       0.1      0.871        0.211 0.000000369     13.8 
20 mu_0       0.2      1.04         0.847 0.00141          6.85
21 mu_0       0.3      1.05         1.05  0.0599           4.17
22 mu_0       0.4      1.01         0.996 0.358            2.21
23 mu_0       0.5      1.04         1.02  0.706            1.81
24 mu_0       0.6      1.03         1.01  0.767            1.41
25 mu_0       0.7      0.980        0.977 0.751            1.31
26 mu_0       0.8      0.976        0.960 0.712            1.77
27 mu_0       0.9      0.959        0.942 0.372            2.15
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.545     3.64e-13  6.13e-41     45.6 
 2 mu         0.2      0.994     1.80e- 7  3.41e-27     49.9 
 3 mu         0.3      1.21      1.56e- 4  3.29e-19     22.4 
 4 mu         0.4      0.991     1.56e- 2  1.35e-13     18.8 
 5 mu         0.5      0.834     1.91e- 1  2.69e- 9      6.35
 6 mu         0.6      1.00      5.94e- 1  7.55e- 6      5.52
 7 mu         0.7      1.16      7.48e- 1  1.85e- 8      4.71
 8 mu         0.8      1.07      3.66e- 1  7.09e-13      8.84
 9 mu         0.9      1.37      3.98e- 3  8.44e-22     59.4 
10 mu_1       0.1      0.678     2.52e-12  5.87e-40     48.8 
11 mu_1       0.2      1.05      6.46e- 7  1.63e-26     51.2 
12 mu_1       0.3      1.20      3.41e- 4  1.05e-18     25.5 
13 mu_1       0.4      0.942     2.68e- 2  3.23e-13     16.0 
14 mu_1       0.5      0.852     2.56e- 1  5.15e- 9      6.80
15 mu_1       0.6      1.03      5.98e- 1  2.76e- 6      5.68
16 mu_1       0.7      1.16      8.53e- 1  2.82e- 9      4.73
17 mu_1       0.8      1.07      3.38e- 1  1.46e-13      9.04
18 mu_1       0.9      1.40      2.90e- 3  1.93e-22     63.3 
19 mu_0       0.1      0.530     1.25e-13  0            45.2 
20 mu_0       0.2      0.980     6.34e- 8  0            49.6 
21 mu_0       0.3      1.21      7.65e- 5  0            23.1 
22 mu_0       0.4      1.02      8.10e- 3  0            20.7 
23 mu_0       0.5      0.815     1.89e- 1  0             5.91
24 mu_0       0.6      0.957     4.75e- 1  0             5.64
25 mu_0       0.7      1.15      7.80e- 1  0             4.74
26 mu_0       0.8      1.09      5.39e- 1  0             8.03
27 mu_0       0.9      1.17      1.00e- 2  0            24.8 
[1] "Total run time was 238.297 seconds"
