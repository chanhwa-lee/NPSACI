
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3489"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 4  6  2  1  2  2  2  4  5  4  5  4  1  5  1  3  4  2  6  2  2  2  3  8  3  5 
46 47 48 49 50 
 2  1  2  6  1 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02399 0.30425 0.58277 1.00000 6.89953 
[1] "event indicator table: "

   0    1 
2082 1407 
[1] "treatment indicator table: "

   0    1 
1328 2161 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1738
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 8"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 60"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1751
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 196.851 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.518 0.0981
 2 mu         0.1   0.2 0.591 0.102 
 3 mu         0.1   0.3 0.675 0.114 
 4 mu         0.1   0.4 0.691 0.0936
 5 mu         0.1   0.5 0.706 0.0876
 6 mu         0.2   0.1 0.459 0.0640
 7 mu         0.2   0.2 0.540 0.0631
 8 mu         0.2   0.3 0.619 0.0709
 9 mu         0.2   0.4 0.636 0.0572
10 mu         0.2   0.5 0.651 0.0559
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.04         0.891  0.000332      4.25
 2 mu         0.2      1.08         1.04   0.0567        2.61
 3 mu         0.3      1.06         1.03   0.385         1.87
 4 mu         0.4      1.02         1.01   0.688         1.56
 5 mu         0.5      0.988        0.981  0.700         1.53
 6 mu         0.6      0.984        0.975  0.663         1.38
 7 mu         0.7      0.990        0.997  0.730         1.31
 8 mu         0.8      0.993        0.993  0.679         1.42
 9 mu         0.9      0.985        0.994  0.497         1.49
10 mu_1       0.1      1.04         0.899  0.00109       3.00
11 mu_1       0.2      1.08         1.01   0.0963        2.51
12 mu_1       0.3      1.06         1.07   0.473         1.83
13 mu_1       0.4      1.02         0.991  0.707         1.53
14 mu_1       0.5      0.986        0.982  0.682         1.51
15 mu_1       0.6      0.984        0.971  0.679         1.36
16 mu_1       0.7      0.991        0.993  0.717         1.28
17 mu_1       0.8      0.994        0.998  0.671         1.43
18 mu_1       0.9      0.985        0.995  0.475         1.50
19 mu_0       0.1      1.04         0.901  0.000248      4.41
20 mu_0       0.2      1.08         1.05   0.0468        2.63
21 mu_0       0.3      1.07         1.04   0.346         1.92
22 mu_0       0.4      1.03         1.02   0.675         1.58
23 mu_0       0.5      0.990        0.988  0.703         1.55
24 mu_0       0.6      0.984        0.979  0.639         1.41
25 mu_0       0.7      0.989        0.981  0.732         1.36
26 mu_0       0.8      0.991        0.983  0.687         1.38
27 mu_0       0.9      0.988        1.00   0.591         1.46
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      2.18      1.03e-11  3.80e-39    111.  
 2 mu         0.2      1.98      6.92e- 6  1.49e-26     72.8 
 3 mu         0.3      0.758     2.27e- 3  3.24e-19      8.90
 4 mu         0.4      0.975     7.98e- 2  4.91e-14      9.19
 5 mu         0.5      1.50      6.53e- 1  4.81e-10     11.9 
 6 mu         0.6      1.49      9.28e- 1  7.72e- 7      6.95
 7 mu         0.7      1.09      5.43e- 1  1.91e-10      8.09
 8 mu         0.8      0.922     1.37e- 1  1.01e-15      7.52
 9 mu         0.9      1.11      1.32e- 4  2.12e-25     17.7 
10 mu_1       0.1      2.95      7.59e-11  3.72e-38    146.  
11 mu_1       0.2      1.54      2.26e- 5  7.26e-26     47.9 
12 mu_1       0.3      0.703     4.98e- 3  1.05e-18      8.40
13 mu_1       0.4      1.07      1.11e- 1  1.20e-13      9.51
14 mu_1       0.5      1.55      8.48e- 1  9.39e-10     11.6 
15 mu_1       0.6      1.46      8.36e- 1  1.47e- 7      7.05
16 mu_1       0.7      1.06      4.85e- 1  3.13e-11      8.60
17 mu_1       0.8      0.919     1.08e- 1  1.62e-16      7.78
18 mu_1       0.9      1.13      9.19e- 5  3.10e-26     18.1 
19 mu_0       0.1      2.09      3.31e-12  0           107.  
20 mu_0       0.2      2.09      3.02e- 6  0            79.0 
21 mu_0       0.3      0.781     1.11e- 3  0            10.8 
22 mu_0       0.4      0.911     5.80e- 2  0             8.98
23 mu_0       0.5      1.46      4.43e- 1  0            12.2 
24 mu_0       0.6      1.54      1.02e+ 0  0             7.73
25 mu_0       0.7      1.14      6.40e- 1  0             6.90
26 mu_0       0.8      0.934     1.15e- 1  0             8.58
27 mu_0       0.9      0.941     3.18e- 4  0            14.2 
[1] "Total run time was 200.068 seconds"
