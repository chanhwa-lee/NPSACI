
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3512"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 29 30 31 32 33 34 35 36 37 38 39 41 42 43 44 45 46 47 
 3  5  2  3  3  6  2  5  2  3  6  3  3  4  3  4  2  3  3  5  5  3  1  1  2  3 
48 49 50 
 2  6  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0388  0.3641  0.6397  1.0000  5.8710 
[1] "event indicator table: "

   0    1 
2050 1462 
[1] "treatment indicator table: "

   0    1 
1397 2115 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1803
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1709
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 50"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 227.56 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.244 0.0890
 2 mu         0.1   0.2 0.279 0.122 
 3 mu         0.1   0.3 0.266 0.150 
 4 mu         0.1   0.4 0.299 0.138 
 5 mu         0.1   0.5 0.339 0.135 
 6 mu         0.2   0.1 0.269 0.0561
 7 mu         0.2   0.2 0.332 0.0838
 8 mu         0.2   0.3 0.347 0.106 
 9 mu         0.2   0.4 0.392 0.0959
10 mu         0.2   0.5 0.436 0.0922
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.821        0.427   0.00332     13.4 
 2 mu         0.2      0.999        0.936   0.124        2.27
 3 mu         0.3      1.01         0.976   0.449        2.45
 4 mu         0.4      1.01         1.00    0.653        1.76
 5 mu         0.5      1.02         1.01    0.762        1.40
 6 mu         0.6      1.01         1.01    0.755        1.27
 7 mu         0.7      1.00         0.998   0.726        1.33
 8 mu         0.8      1.02         0.997   0.684        1.41
 9 mu         0.9      0.994        0.990   0.283        2.02
10 mu_1       0.1      0.890        0.642   0.00992      9.39
11 mu_1       0.2      1.01         0.924   0.194        2.38
12 mu_1       0.3      1.01         0.967   0.543        2.49
13 mu_1       0.4      1.02         1.01    0.626        1.61
14 mu_1       0.5      1.02         1.01    0.777        1.41
15 mu_1       0.6      1.01         1.01    0.747        1.26
16 mu_1       0.7      1.00         0.995   0.730        1.36
17 mu_1       0.8      1.02         1.00    0.670        1.43
18 mu_1       0.9      0.992        0.984   0.270        2.03
19 mu_0       0.1      0.813        0.400   0.00259     13.9 
20 mu_0       0.2      0.995        0.920   0.107        2.24
21 mu_0       0.3      1.01         0.969   0.410        2.43
22 mu_0       0.4      1.01         0.997   0.671        1.87
23 mu_0       0.5      1.02         1.01    0.736        1.39
24 mu_0       0.6      1.01         1.00    0.766        1.32
25 mu_0       0.7      1.00         1.00    0.718        1.26
26 mu_0       0.8      1.01         1.01    0.740        1.45
27 mu_0       0.9      1.01         0.994   0.406        2.01
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.870     4.81e-12  2.77e-34     64.5 
 2 mu         0.2      1.11      1.87e- 6  1.07e-21     43.5 
 3 mu         0.3      1.18      3.83e- 3  1.57e-14     22.2 
 4 mu         0.4      1.15      8.93e- 2  1.08e- 9      7.61
 5 mu         0.5      1.14      3.73e- 1  1.23e- 6     11.3 
 6 mu         0.6      1.10      5.96e- 1  2.44e- 7      8.14
 7 mu         0.7      1.13      6.33e- 1  9.82e-12      7.56
 8 mu         0.8      1.38      1.14e- 1  2.95e-18      6.77
 9 mu         0.9      1.16      1.61e- 4  7.75e-30     20.0 
10 mu_1       0.1      1.18      3.07e-11  2.38e-33     80.6 
11 mu_1       0.2      1.02      5.87e- 6  4.60e-21     27.2 
12 mu_1       0.3      1.19      7.11e- 3  4.49e-14     22.2 
13 mu_1       0.4      1.15      1.15e- 1  2.48e- 9      8.93
14 mu_1       0.5      1.15      3.51e- 1  2.27e- 6     10.6 
15 mu_1       0.6      1.09      6.61e- 1  7.46e- 8      7.94
16 mu_1       0.7      1.14      6.17e- 1  2.58e-12      7.58
17 mu_1       0.8      1.39      7.96e- 2  6.78e-19      6.92
18 mu_1       0.9      1.15      1.06e- 4  1.58e-30     21.2 
19 mu_0       0.1      0.836     1.93e-12  4.31e-35     62.7 
20 mu_0       0.2      1.14      9.24e- 7  1.87e-22     47.6 
21 mu_0       0.3      1.18      2.31e- 3  3.13e-15     22.2 
22 mu_0       0.4      1.15      9.04e- 2  1.46e-10      8.78
23 mu_0       0.5      1.14      3.15e- 1  2.00e- 7     12.0 
24 mu_0       0.6      1.11      6.09e- 1  4.97e- 7      8.43
25 mu_0       0.7      1.11      6.49e- 1  2.67e-11      7.50
26 mu_0       0.8      1.32      2.24e- 1  1.21e-17      6.19
27 mu_0       0.9      1.23      6.48e- 4  6.33e-29     15.7 
[1] "Total run time was 231.533 seconds"
