
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3377"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 41 42 43 44 45 46 
 1  5  5  3  4  1  4  4  1  6  4  4  3  6  4  4  6  2  4  4  6  2  1  2  1  4 
48 50 
 7  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.05053 0.38364 0.65579 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
2061 1316 
[1] "treatment indicator table: "

   0    1 
1142 2235 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1651
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1726
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 7"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 315.944 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.464 0.149 
 2 mu         0.1   0.2 0.456 0.103 
 3 mu         0.1   0.3 0.505 0.115 
 4 mu         0.1   0.4 0.501 0.105 
 5 mu         0.1   0.5 0.516 0.0891
 6 mu         0.2   0.1 0.403 0.110 
 7 mu         0.2   0.2 0.429 0.0729
 8 mu         0.2   0.3 0.496 0.0820
 9 mu         0.2   0.4 0.503 0.0723
10 mu         0.2   0.5 0.530 0.0574
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.840        0.367 0.000000113       5.24
 2 mu         0.2      0.970        0.912 0.00259           2.68
 3 mu         0.3      1.00         0.915 0.170             2.44
 4 mu         0.4      1.01         0.987 0.525             1.93
 5 mu         0.5      1.00         1.02  0.588             1.34
 6 mu         0.6      0.991        0.984 0.744             1.26
 7 mu         0.7      0.994        0.992 0.738             1.36
 8 mu         0.8      1.01         1.01  0.741             1.38
 9 mu         0.9      1.00         0.975 0.539             1.48
10 mu_1       0.1      0.896        0.577 0.000000440       4.70
11 mu_1       0.2      0.986        0.873 0.00514           2.59
12 mu_1       0.3      1.01         0.928 0.232             2.40
13 mu_1       0.4      1.01         1.00  0.538             1.80
14 mu_1       0.5      1.00         1.03  0.586             1.29
15 mu_1       0.6      0.989        0.989 0.769             1.28
16 mu_1       0.7      0.994        0.990 0.735             1.37
17 mu_1       0.8      1.01         1.01  0.746             1.38
18 mu_1       0.9      1.00         0.974 0.502             1.51
19 mu_0       0.1      0.834        0.336 0.0000000767      5.30
20 mu_0       0.2      0.966        0.903 0.00195           2.80
21 mu_0       0.3      1.00         0.898 0.143             2.53
22 mu_0       0.4      1.01         0.977 0.485             2.02
23 mu_0       0.5      1.00         1.02  0.589             1.39
24 mu_0       0.6      0.992        0.988 0.689             1.26
25 mu_0       0.7      0.992        0.988 0.738             1.34
26 mu_0       0.8      1.01         1.00  0.712             1.39
27 mu_0       0.9      1.01         0.991 0.625             1.53
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.422     1.99e-13  6.42e-38     42.0 
 2 mu         0.2      0.515     2.05e- 7  7.05e-25     35.9 
 3 mu         0.3      0.939     2.34e- 4  2.31e-17     28.7 
 4 mu         0.4      1.28      2.10e- 2  3.93e-12     16.5 
 5 mu         0.5      1.32      3.05e- 1  9.80e- 9     11.9 
 6 mu         0.6      1.11      7.36e- 1  4.83e- 6      7.78
 7 mu         0.7      0.984     6.05e- 1  6.85e- 6      3.77
 8 mu         0.8      1.16      4.07e- 1  1.34e-10      8.11
 9 mu         0.9      1.40      6.04e- 3  2.06e-19     12.6 
10 mu_1       0.1      0.577     1.32e-12  5.89e-37     57.3 
11 mu_1       0.2      0.504     6.81e- 7  3.23e-24     24.5 
12 mu_1       0.3      1.03      5.40e- 4  7.07e-17     30.2 
13 mu_1       0.4      1.31      3.49e- 2  9.00e-12     13.0 
14 mu_1       0.5      1.30      3.86e- 1  1.96e- 8     11.2 
15 mu_1       0.6      1.09      6.34e- 1  8.04e- 6      7.05
16 mu_1       0.7      0.978     5.74e- 1  2.42e- 6      4.05
17 mu_1       0.8      1.18      3.31e- 1  5.60e-11      8.02
18 mu_1       0.9      1.39      4.48e- 3  7.64e-20     12.6 
19 mu_0       0.1      0.404     7.90e-14  0            40.3 
20 mu_0       0.2      0.517     8.63e- 8  0            38.7 
21 mu_0       0.3      0.899     1.09e- 4  0            28.0 
22 mu_0       0.4      1.26      1.10e- 2  0            18.8 
23 mu_0       0.5      1.33      1.93e- 1  0            12.6 
24 mu_0       0.6      1.13      6.07e- 1  0             8.88
25 mu_0       0.7      0.998     4.02e- 1  0             4.19
26 mu_0       0.8      1.08      5.29e- 1  0             8.44
27 mu_0       0.9      1.45      1.14e- 2  0            13.1 
[1] "Total run time was 321.25 seconds"
