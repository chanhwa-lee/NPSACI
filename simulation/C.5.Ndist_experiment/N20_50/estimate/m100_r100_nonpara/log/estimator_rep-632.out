
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3456"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 37 38 39 40 41 43 44 45 46 47 
 5  6  2  1  1  3  7  5  4  4  2  4  2  3  1  5  2  2  5  5  2  2  6  5  6  2 
48 49 50 
 3  3  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03392 0.36506 0.63519 1.00000 5.85450 
[1] "event indicator table: "

   0    1 
2029 1427 
[1] "treatment indicator table: "

   0    1 
1318 2138 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1697
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1759
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 56"
[1] "     Cluster: 60"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 265.369 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.157 0.106 
 2 mu         0.1   0.2 0.310 0.0622
 3 mu         0.1   0.3 0.356 0.0682
 4 mu         0.1   0.4 0.374 0.0546
 5 mu         0.1   0.5 0.423 0.0712
 6 mu         0.2   0.1 0.220 0.0941
 7 mu         0.2   0.2 0.375 0.0491
 8 mu         0.2   0.3 0.431 0.0517
 9 mu         0.2   0.4 0.463 0.0412
10 mu         0.2   0.5 0.518 0.0528
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.699        0.562 0.0000496      2.89
 2 mu         0.2      0.914        0.907 0.0280         2.76
 3 mu         0.3      0.959        0.966 0.274          1.89
 4 mu         0.4      0.988        0.972 0.551          1.46
 5 mu         0.5      0.983        0.967 0.662          1.33
 6 mu         0.6      0.988        0.996 0.633          1.39
 7 mu         0.7      1.00         0.999 0.779          1.28
 8 mu         0.8      1.02         1.00  0.675          1.85
 9 mu         0.9      1.00         0.998 0.144          3.10
10 mu_1       0.1      0.774        0.666 0.000165       3.25
11 mu_1       0.2      0.933        0.932 0.0493         2.57
12 mu_1       0.3      0.969        0.967 0.315          1.73
13 mu_1       0.4      0.991        0.977 0.571          1.44
14 mu_1       0.5      0.983        0.967 0.697          1.39
15 mu_1       0.6      0.990        0.994 0.639          1.35
16 mu_1       0.7      1.01         0.991 0.759          1.26
17 mu_1       0.8      1.02         0.995 0.654          1.92
18 mu_1       0.9      0.999        0.996 0.133          3.22
19 mu_0       0.1      0.691        0.530 0.0000367      2.97
20 mu_0       0.2      0.909        0.899 0.0227         2.88
21 mu_0       0.3      0.955        0.965 0.257          1.96
22 mu_0       0.4      0.986        0.969 0.533          1.47
23 mu_0       0.5      0.983        0.973 0.627          1.32
24 mu_0       0.6      0.986        0.984 0.624          1.44
25 mu_0       0.7      1.00         1.00  0.766          1.33
26 mu_0       0.8      1.02         0.993 0.699          1.56
27 mu_0       0.9      1.01         0.986 0.237          2.54
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      3.23      7.33e-13  2.76e-30    291.  
 2 mu         0.2      4.24      1.81e- 7  6.65e-19    340.  
 3 mu         0.3      1.71      3.79e- 4  1.92e-12     41.3 
 4 mu         0.4      1.39      2.91e- 2  4.88e- 8     20.3 
 5 mu         0.5      1.03      1.65e- 1  1.50e- 5      5.37
 6 mu         0.6      0.845     4.39e- 1  3.66e- 9      4.57
 7 mu         0.7      1.13      8.11e- 1  4.57e-14      5.47
 8 mu         0.8      1.83      2.97e- 1  3.12e-21     18.9 
 9 mu         0.9      1.18      1.56e- 3  8.08e-34     10.4 
10 mu_1       0.1      4.91      4.97e-12  2.34e-29    437.  
11 mu_1       0.2      3.52      6.41e- 7  2.82e-18    255.  
12 mu_1       0.3      1.55      8.12e- 4  5.44e-12     31.4 
13 mu_1       0.4      1.33      4.90e- 2  1.03e- 7     18.2 
14 mu_1       0.5      0.987     2.33e- 1  4.20e- 6      5.64
15 mu_1       0.6      0.848     3.68e- 1  8.54e-10      4.14
16 mu_1       0.7      1.17      8.31e- 1  9.14e-15      6.01
17 mu_1       0.8      1.86      2.32e- 1  5.45e-22     19.5 
18 mu_1       0.9      1.13      1.08e- 3  1.26e-34      9.81
19 mu_0       0.1      3.04      2.34e-13  4.66e-31    275.  
20 mu_0       0.2      4.42      7.96e- 8  1.26e-19    361.  
21 mu_0       0.3      1.77      1.93e- 4  4.18e-13     50.2 
22 mu_0       0.4      1.44      1.73e- 2  1.18e- 8     21.7 
23 mu_0       0.5      1.08      1.92e- 1  4.07e- 6      6.21
24 mu_0       0.6      0.841     3.42e- 1  7.87e- 9      5.21
25 mu_0       0.7      1.03      5.48e- 1  1.31e-13      4.75
26 mu_0       0.8      1.69      5.28e- 1  1.34e-20     16.4 
27 mu_0       0.9      1.61      5.91e- 3  6.95e-33     15.9 
[1] "Total run time was 270.067 seconds"
