
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3486"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 5  3  2  1  5  4  1  1  2  3  6  4  4  3  4  6  6  1  2  6  3  3  2  1  4  2 
46 47 48 50 
 4  4  4  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03568 0.35795 0.61562 1.00000 7.00000 
[1] "event indicator table: "

   0    1 
2055 1431 
[1] "treatment indicator table: "

   0    1 
1266 2220 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1845
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1641
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 209.52 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.398 0.0837
 2 mu         0.1   0.2 0.499 0.114 
 3 mu         0.1   0.3 0.526 0.118 
 4 mu         0.1   0.4 0.550 0.138 
 5 mu         0.1   0.5 0.591 0.139 
 6 mu         0.2   0.1 0.356 0.0553
 7 mu         0.2   0.2 0.443 0.0773
 8 mu         0.2   0.3 0.475 0.0755
 9 mu         0.2   0.4 0.497 0.0911
10 mu         0.2   0.5 0.538 0.0883
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.947        0.450   0.00321     11.8 
 2 mu         0.2      0.897        0.852   0.142        2.53
 3 mu         0.3      0.974        0.976   0.327        1.73
 4 mu         0.4      1.01         1.00    0.492        1.55
 5 mu         0.5      0.994        0.994   0.635        1.45
 6 mu         0.6      0.985        0.977   0.594        1.33
 7 mu         0.7      0.999        0.982   0.702        1.40
 8 mu         0.8      1.01         1.02    0.680        1.42
 9 mu         0.9      1.05         1.05    0.548        1.50
10 mu_1       0.1      0.886        0.715   0.00783      5.38
11 mu_1       0.2      0.913        0.824   0.240        2.41
12 mu_1       0.3      0.988        0.992   0.318        1.66
13 mu_1       0.4      1.01         1.00    0.514        1.56
14 mu_1       0.5      0.991        1.00    0.634        1.43
15 mu_1       0.6      0.987        0.971   0.598        1.32
16 mu_1       0.7      1.00         0.980   0.716        1.40
17 mu_1       0.8      1.02         1.02    0.671        1.43
18 mu_1       0.9      1.05         1.04    0.526        1.52
19 mu_0       0.1      0.953        0.421   0.00269     12.5 
20 mu_0       0.2      0.893        0.860   0.117        2.56
21 mu_0       0.3      0.968        0.955   0.331        1.75
22 mu_0       0.4      1.01         1.01    0.477        1.54
23 mu_0       0.5      0.996        1.01    0.632        1.48
24 mu_0       0.6      0.983        0.980   0.588        1.34
25 mu_0       0.7      0.997        0.985   0.671        1.39
26 mu_0       0.8      1.00         1.01    0.714        1.40
27 mu_0       0.9      1.05         1.05    0.540        1.53
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.71      9.34e-14  7.83e-38    161.  
 2 mu         0.2      1.56      6.66e- 8  4.84e-25     73.0 
 3 mu         0.3      1.27      1.74e- 4  1.21e-17     15.7 
 4 mu         0.4      1.36      2.96e- 2  1.79e-12     20.3 
 5 mu         0.5      1.24      3.01e- 1  1.53e- 8     15.1 
 6 mu         0.6      1.16      7.91e- 1  1.21e- 8      5.23
 7 mu         0.7      1.17      6.35e- 1  1.73e-13      9.31
 8 mu         0.8      1.14      1.96e- 1  1.55e-20      8.76
 9 mu         0.9      0.807     5.14e- 4  7.13e-33     11.6 
10 mu_1       0.1      2.23      7.17e-13  7.32e-37    201.  
11 mu_1       0.2      1.47      2.42e- 7  2.26e-24     45.6 
12 mu_1       0.3      1.32      3.67e- 4  3.77e-17     17.7 
13 mu_1       0.4      1.35      4.70e- 2  4.19e-12     21.8 
14 mu_1       0.5      1.20      3.59e- 1  2.85e- 8     12.9 
15 mu_1       0.6      1.15      8.20e- 1  2.52e- 9      5.95
16 mu_1       0.7      1.16      6.47e- 1  3.08e-14      9.08
17 mu_1       0.8      1.13      1.71e- 1  2.42e-21      8.52
18 mu_1       0.9      0.800     3.56e- 4  9.90e-34     12.0 
19 mu_0       0.1      1.65      2.23e-14  0           156.  
20 mu_0       0.2      1.59      2.41e- 8  0            79.8 
21 mu_0       0.3      1.25      9.25e- 5  0            17.8 
22 mu_0       0.4      1.36      1.94e- 2  0            19.4 
23 mu_0       0.5      1.27      2.50e- 1  0            17.2 
24 mu_0       0.6      1.18      8.35e- 1  0             4.28
25 mu_0       0.7      1.17      5.74e- 1  0             9.84
26 mu_0       0.8      1.17      3.20e- 1  0             9.74
27 mu_0       0.9      0.874     1.40e- 3  0             7.83
[1] "Total run time was 213.63 seconds"
