
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3628"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 1  4  3  3  4  2  2  1  2  1  5  2  1  3  7  1  7  5  1  5  4  4  3  2  4  7 
46 47 48 49 50 
 4  3  2  5  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04672 0.36929 0.63074 1.00000 5.00000 
[1] "event indicator table: "

   0    1 
2147 1481 
[1] "treatment indicator table: "

   0    1 
1261 2367 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1847
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 31"
[1] "     Cluster: 37"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1781
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 204.927 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.565 0.116 
 2 mu         0.1   0.2 0.644 0.114 
 3 mu         0.1   0.3 0.694 0.115 
 4 mu         0.1   0.4 0.738 0.126 
 5 mu         0.1   0.5 0.782 0.123 
 6 mu         0.2   0.1 0.411 0.0641
 7 mu         0.2   0.2 0.497 0.0625
 8 mu         0.2   0.3 0.563 0.0639
 9 mu         0.2   0.4 0.614 0.0712
10 mu         0.2   0.5 0.646 0.0644
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.04         0.643 0.0000534      7.09
 2 mu         0.2      0.952        0.945 0.0468         2.38
 3 mu         0.3      0.986        1.00  0.474          1.53
 4 mu         0.4      1.00         0.987 0.641          1.50
 5 mu         0.5      1.01         0.992 0.574          1.44
 6 mu         0.6      1.01         1.01  0.680          1.36
 7 mu         0.7      1.01         1.01  0.558          1.51
 8 mu         0.8      0.995        0.981 0.698          1.42
 9 mu         0.9      0.998        0.972 0.552          1.68
10 mu_1       0.1      0.956        0.843 0.000166       4.48
11 mu_1       0.2      0.955        0.960 0.0757         2.07
12 mu_1       0.3      0.991        0.998 0.555          1.51
13 mu_1       0.4      1.01         0.989 0.616          1.52
14 mu_1       0.5      1.01         0.986 0.551          1.47
15 mu_1       0.6      1.01         1.01  0.651          1.32
16 mu_1       0.7      1.01         1.01  0.563          1.52
17 mu_1       0.8      0.995        0.980 0.703          1.43
18 mu_1       0.9      0.998        0.971 0.541          1.68
19 mu_0       0.1      1.05         0.599 0.0000409      7.68
20 mu_0       0.2      0.951        0.928 0.0395         2.50
21 mu_0       0.3      0.983        0.995 0.439          1.57
22 mu_0       0.4      1.00         0.994 0.615          1.51
23 mu_0       0.5      1.01         0.996 0.597          1.48
24 mu_0       0.6      1.01         1.01  0.679          1.42
25 mu_0       0.7      1.02         1.02  0.546          1.50
26 mu_0       0.8      0.995        0.991 0.682          1.40
27 mu_0       0.9      0.996        0.984 0.602          1.65
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.10      1.31e-14  7.46e-39     80.9 
 2 mu         0.2      0.705     1.88e- 8  1.64e-25     37.8 
 3 mu         0.3      0.814     8.44e- 5  4.77e-18     10.7 
 4 mu         0.4      0.916     7.30e- 3  6.19e-13      7.58
 5 mu         0.5      0.926     2.11e- 1  5.06e- 9      5.41
 6 mu         0.6      1.01      6.72e- 1  1.46e- 8      4.26
 7 mu         0.7      1.49      9.41e- 1  1.75e-12      7.91
 8 mu         0.8      1.49      5.33e- 1  4.04e-18     10.6 
 9 mu         0.9      1.04      8.83e- 3  6.69e-28     12.8 
10 mu_1       0.1      1.22      8.80e-14  6.85e-38     95.2 
11 mu_1       0.2      0.649     6.38e- 8  7.53e-25     22.2 
12 mu_1       0.3      0.869     1.80e- 4  1.52e-17     10.1 
13 mu_1       0.4      0.913     1.35e- 2  1.48e-12      6.46
14 mu_1       0.5      0.926     2.88e- 1  9.65e- 9      5.33
15 mu_1       0.6      1.04      8.12e- 1  2.03e- 9      4.84
16 mu_1       0.7      1.53      9.91e- 1  2.08e-13      7.69
17 mu_1       0.8      1.47      4.45e- 1  4.20e-19     10.8 
18 mu_1       0.9      1.04      6.36e- 3  6.19e-29     13.3 
19 mu_0       0.1      1.09      3.67e-15  0            79.3 
20 mu_0       0.2      0.720     7.48e- 9  0            41.7 
21 mu_0       0.3      0.790     3.51e- 5  0            11.4 
22 mu_0       0.4      0.919     3.97e- 3  0             8.33
23 mu_0       0.5      0.926     1.27e- 1  0             5.57
24 mu_0       0.6      0.970     5.37e- 1  0             3.86
25 mu_0       0.7      1.40      8.78e- 1  0             8.41
26 mu_0       0.8      1.60      6.65e- 1  0             9.48
27 mu_0       0.9      1.07      2.66e- 2  0             8.38
[1] "Total run time was 208.165 seconds"
