
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3499"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 2  2  5  2  4  2  4  5  4  2  3  4  7  2  3  2  2  3  2  3  1  5  4  5  2  6 
46 47 48 49 50 
 5  2  2  2  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02358 0.31432 0.59852 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
2087 1412 
[1] "treatment indicator table: "

   0    1 
1368 2131 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1762
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 53"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1737
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 8"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 94"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 243.754 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.372 0.0745
 2 mu         0.1   0.2 0.470 0.100 
 3 mu         0.1   0.3 0.547 0.147 
 4 mu         0.1   0.4 0.632 0.121 
 5 mu         0.1   0.5 0.636 0.108 
 6 mu         0.2   0.1 0.349 0.0402
 7 mu         0.2   0.2 0.436 0.0517
 8 mu         0.2   0.3 0.508 0.0780
 9 mu         0.2   0.4 0.590 0.0617
10 mu         0.2   0.5 0.621 0.0589
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      1.00         0.484 0.000000594     10.2 
 2 mu         0.2      1.08         0.914 0.00474          4.83
 3 mu         0.3      1.03         1.03  0.141            2.39
 4 mu         0.4      1.03         1.01  0.377            1.57
 5 mu         0.5      1.02         1.01  0.663            1.43
 6 mu         0.6      1.00         1.01  0.681            1.36
 7 mu         0.7      0.988        0.996 0.651            1.28
 8 mu         0.8      0.955        0.948 0.540            1.64
 9 mu         0.9      1.06         1.01  0.0906           5.11
10 mu_1       0.1      1.12         0.758 0.00000230       8.55
11 mu_1       0.2      1.06         0.973 0.00941          4.09
12 mu_1       0.3      1.03         1.01  0.193            2.16
13 mu_1       0.4      1.03         1.02  0.439            1.47
14 mu_1       0.5      1.02         0.997 0.719            1.41
15 mu_1       0.6      1.00         0.999 0.672            1.34
16 mu_1       0.7      0.985        0.987 0.625            1.30
17 mu_1       0.8      0.954        0.942 0.547            1.67
18 mu_1       0.9      1.07         1.01  0.0816           5.33
19 mu_0       0.1      0.989        0.453 0.000000405     10.4 
20 mu_0       0.2      1.09         0.915 0.00357          5.01
21 mu_0       0.3      1.03         1.03  0.118            2.49
22 mu_0       0.4      1.03         1.01  0.336            1.64
23 mu_0       0.5      1.02         1.03  0.607            1.44
24 mu_0       0.6      1.00         1.00  0.695            1.39
25 mu_0       0.7      0.993        1.00  0.712            1.27
26 mu_0       0.8      0.957        0.958 0.510            1.53
27 mu_0       0.9      1.03         0.988 0.171            3.05
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.721     4.29e-12  2.99e-34     59.1 
 2 mu         0.2      0.940     5.99e- 7  6.49e-22     28.0 
 3 mu         0.3      0.921     6.70e- 4  3.49e-15     18.6 
 4 mu         0.4      1.04      5.47e- 2  1.64e-10     11.4 
 5 mu         0.5      1.13      4.37e- 1  5.70e- 7      7.22
 6 mu         0.6      1.16      9.47e- 1  3.37e- 5      5.48
 7 mu         0.7      1.23      7.59e- 1  6.68e- 9      7.71
 8 mu         0.8      1.22      1.85e- 1  1.74e-14     16.4 
 9 mu         0.9      1.42      2.30e- 4  1.65e-24     41.2 
10 mu_1       0.1      0.897     2.37e-11  2.62e-33     65.7 
11 mu_1       0.2      0.907     2.07e- 6  2.84e-21     23.4 
12 mu_1       0.3      0.940     1.46e- 3  1.08e-14     19.3 
13 mu_1       0.4      1.07      8.27e- 2  3.80e-10      8.81
14 mu_1       0.5      1.14      4.91e- 1  1.06e- 6      6.87
15 mu_1       0.6      1.17      1.04e+ 0  8.34e- 6      5.81
16 mu_1       0.7      1.23      6.62e- 1  2.12e- 9      8.19
17 mu_1       0.8      1.21      1.35e- 1  4.84e-15     17.0 
18 mu_1       0.9      1.43      1.50e- 4  4.07e-25     42.5 
19 mu_0       0.1      0.701     1.81e-12  4.16e-35     58.4 
20 mu_0       0.2      0.948     2.71e- 7  6.30e-23     31.1 
21 mu_0       0.3      0.913     3.35e- 4  3.56e-16     18.3 
22 mu_0       0.4      1.02      3.28e- 2  1.95e-11     13.1 
23 mu_0       0.5      1.13      3.06e- 1  5.80e- 8      7.70
24 mu_0       0.6      1.16      8.19e- 1  1.65e- 5      4.98
25 mu_0       0.7      1.22      7.83e- 1  1.73e- 8      6.59
26 mu_0       0.8      1.24      3.47e- 1  6.78e-14     14.3 
27 mu_0       0.9      1.25      9.49e- 4  1.28e-23     29.4 
[1] "Total run time was 247.199 seconds"
