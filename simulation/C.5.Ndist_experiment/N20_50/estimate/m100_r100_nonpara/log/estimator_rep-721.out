
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3407"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 4  2  2  5  3  3  7  3  2  4  4  4  6  2  3  3  4  3  1  5  2  6  1  1  3  6 
46 47 48 49 50 
 1  2  2  2  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02335 0.30875 0.56931 0.95032 5.77488 
[1] "event indicator table: "

   0    1 
2031 1376 
[1] "treatment indicator table: "

   0    1 
1327 2080 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1734
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1673
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 346.155 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.487 0.0870
 2 mu         0.1   0.2 0.627 0.116 
 3 mu         0.1   0.3 0.714 0.138 
 4 mu         0.1   0.4 0.776 0.152 
 5 mu         0.1   0.5 0.807 0.152 
 6 mu         0.2   0.1 0.379 0.0398
 7 mu         0.2   0.2 0.492 0.0516
 8 mu         0.2   0.3 0.558 0.0676
 9 mu         0.2   0.4 0.621 0.0718
10 mu         0.2   0.5 0.651 0.0679
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.26         0.375  0.000734     13.3 
 2 mu         0.2      1.08         0.932  0.0409        5.33
 3 mu         0.3      1.01         0.982  0.230         1.69
 4 mu         0.4      0.998        1.01   0.506         1.50
 5 mu         0.5      1.00         0.987  0.745         1.47
 6 mu         0.6      1.02         1.01   0.774         1.48
 7 mu         0.7      1.00         1.00   0.785         1.44
 8 mu         0.8      0.989        1.00   0.543         1.30
 9 mu         0.9      1.05         0.981  0.282         2.20
10 mu_1       0.1      1.26         0.541  0.00233      10.6 
11 mu_1       0.2      1.04         0.967  0.0761        4.22
12 mu_1       0.3      1.00         0.984  0.312         1.67
13 mu_1       0.4      0.997        1.02   0.547         1.48
14 mu_1       0.5      1.01         1.00   0.736         1.47
15 mu_1       0.6      1.02         1.00   0.783         1.49
16 mu_1       0.7      1.00         0.999  0.773         1.45
17 mu_1       0.8      0.990        1.00   0.540         1.33
18 mu_1       0.9      1.05         0.974  0.264         2.23
19 mu_0       0.1      1.26         0.356  0.000527     14.2 
20 mu_0       0.2      1.09         0.911  0.0321        5.70
21 mu_0       0.3      1.01         0.975  0.195         1.73
22 mu_0       0.4      0.998        1.00   0.476         1.52
23 mu_0       0.5      1.00         0.996  0.738         1.48
24 mu_0       0.6      1.02         1.01   0.760         1.47
25 mu_0       0.7      1.01         1.00   0.784         1.42
26 mu_0       0.8      0.985        0.983  0.556         1.40
27 mu_0       0.9      1.03         0.990  0.443         1.90
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.111      5.74e-12  1.53e-34      5.50
 2 mu         0.2     1.19       7.00e- 6  6.63e-23     32.9 
 3 mu         0.3     1.40       2.90e- 3  3.74e-16     18.9 
 4 mu         0.4     1.11       1.36e- 1  2.05e-11     15.9 
 5 mu         0.5     1.32       6.79e- 1  8.56e- 8      7.15
 6 mu         0.6     1.37       8.77e- 1  3.13e- 5      8.89
 7 mu         0.7     1.10       7.09e- 1  6.19e- 9      5.19
 8 mu         0.8     1.22       7.78e- 2  1.62e-14      7.77
 9 mu         0.9     1.42       1.11e- 4  1.53e-24     30.9 
10 mu_1       0.1     0.245      4.09e-11  1.45e-33     11.7 
11 mu_1       0.2     1.42       1.84e- 5  3.15e-22     34.9 
12 mu_1       0.3     1.33       6.49e- 3  1.19e-15     18.4 
13 mu_1       0.4     1.12       2.14e- 1  4.87e-11     15.9 
14 mu_1       0.5     1.36       7.49e- 1  1.63e- 7      8.07
15 mu_1       0.6     1.34       8.24e- 1  1.16e- 5      8.36
16 mu_1       0.7     1.09       6.89e- 1  1.96e- 9      5.41
17 mu_1       0.8     1.24       5.64e- 2  4.49e-15      8.29
18 mu_1       0.9     1.44       7.05e- 5  3.77e-25     32.7 
19 mu_0       0.1     0.0961     1.83e-12  8.27e-36      4.82
20 mu_0       0.2     1.13       3.17e- 6  4.04e-24     32.4 
21 mu_0       0.3     1.42       1.45e- 3  2.61e-17     19.7 
22 mu_0       0.4     1.11       8.32e- 2  1.67e-12     15.9 
23 mu_0       0.5     1.29       6.27e- 1  6.40e- 9      8.55
24 mu_0       0.6     1.41       8.52e- 1  3.78e- 6      9.69
25 mu_0       0.7     1.11       7.23e- 1  1.60e- 8      5.75
26 mu_0       0.8     1.16       1.41e- 1  6.28e-14      8.33
27 mu_0       0.9     1.30       4.74e- 4  1.19e-23     15.1 
[1] "Total run time was 351.035 seconds"
