
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3597"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 3  1  3  6  1  2  1  5  8  2  3  2  4  1  2  4  2  1  4  1  4  5  4  7  4  1 
47 48 49 50 
 6  4  5  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03319 0.32639 0.58605 0.97264 6.00000 
[1] "event indicator table: "

   0    1 
2105 1492 
[1] "treatment indicator table: "

   0    1 
1381 2216 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1790
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1807
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 66"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 87"
[1] "     Cluster: 93"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 113.455 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.614 0.112 
 2 mu         0.1   0.2 0.753 0.122 
 3 mu         0.1   0.3 0.867 0.139 
 4 mu         0.1   0.4 0.919 0.145 
 5 mu         0.1   0.5 0.985 0.152 
 6 mu         0.2   0.1 0.484 0.0632
 7 mu         0.2   0.2 0.600 0.0657
 8 mu         0.2   0.3 0.691 0.0757
 9 mu         0.2   0.4 0.744 0.0774
10 mu         0.2   0.5 0.806 0.0790
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.26         0.588 0.0000614      7.44
 2 mu         0.2      1.11         0.999 0.0829         4.75
 3 mu         0.3      1.01         0.991 0.461          2.33
 4 mu         0.4      0.976        0.976 0.533          1.33
 5 mu         0.5      0.991        0.990 0.716          1.30
 6 mu         0.6      1.02         1.01  0.741          1.26
 7 mu         0.7      1.01         1.01  0.759          1.25
 8 mu         0.8      0.996        0.978 0.676          1.41
 9 mu         0.9      0.985        0.963 0.393          2.15
10 mu_1       0.1      1.22         0.904 0.000198       7.43
11 mu_1       0.2      1.08         1.00  0.137          4.61
12 mu_1       0.3      1.00         0.971 0.495          2.03
13 mu_1       0.4      0.975        0.980 0.562          1.33
14 mu_1       0.5      0.995        0.989 0.722          1.29
15 mu_1       0.6      1.02         1.02  0.767          1.26
16 mu_1       0.7      1.01         1.02  0.747          1.24
17 mu_1       0.8      0.995        0.979 0.672          1.44
18 mu_1       0.9      0.986        0.967 0.379          2.18
19 mu_0       0.1      1.26         0.547 0.0000462      7.81
20 mu_0       0.2      1.12         1.01  0.0695         4.79
21 mu_0       0.3      1.01         0.992 0.418          2.46
22 mu_0       0.4      0.977        0.973 0.513          1.33
23 mu_0       0.5      0.987        0.989 0.690          1.31
24 mu_0       0.6      1.02         1.01  0.703          1.27
25 mu_0       0.7      1.02         1.01  0.788          1.27
26 mu_0       0.8      1.00         0.985 0.692          1.36
27 mu_0       0.9      0.979        0.966 0.501          1.93
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.47      1.13e-12  2.19e-40    124.  
 2 mu         0.2      1.76      5.47e- 7  1.08e-26     64.5 
 3 mu         0.3      1.25      6.38e- 4  9.11e-19     15.0 
 4 mu         0.4      0.964     3.95e- 2  3.21e-13      6.70
 5 mu         0.5      0.871     3.00e- 1  5.33e- 9      6.45
 6 mu         0.6      1.03      9.41e- 1  4.56e- 7      4.19
 7 mu         0.7      1.20      9.57e- 1  4.18e-11      4.98
 8 mu         0.8      1.02      3.19e- 1  5.59e-17      6.16
 9 mu         0.9      0.889     8.46e- 4  2.93e-27     23.5 
10 mu_1       0.1      1.99      6.75e-12  2.05e-39    155.  
11 mu_1       0.2      1.66      1.83e- 6  5.07e-26     40.3 
12 mu_1       0.3      1.19      1.47e- 3  2.85e-18     12.9 
13 mu_1       0.4      0.924     5.48e- 2  7.53e-13      6.36
14 mu_1       0.5      0.871     3.93e- 1  1.00e- 8      6.09
15 mu_1       0.6      1.06      8.53e- 1  9.50e- 8      4.38
16 mu_1       0.7      1.20      8.86e- 1  7.46e-12      5.19
17 mu_1       0.8      1.01      2.62e- 1  8.74e-18      6.16
18 mu_1       0.9      0.879     6.41e- 4  4.07e-28     24.6 
19 mu_0       0.1      1.41      4.56e-13  1.49e-41    121.  
20 mu_0       0.2      1.79      2.86e- 7  8.27e-28     70.5 
21 mu_0       0.3      1.28      2.84e- 4  7.97e-20     16.0 
22 mu_0       0.4      0.990     2.23e- 2  3.27e-14      7.52
23 mu_0       0.5      0.872     2.41e- 1  6.52e-10      6.81
24 mu_0       0.6      0.994     7.33e- 1  9.97e- 7      4.24
25 mu_0       0.7      1.21      7.23e- 1  1.22e-10      4.62
26 mu_0       0.8      1.05      4.78e- 1  2.45e-16      6.24
27 mu_0       0.9      0.976     2.70e- 3  2.57e-26     14.4 
[1] "Total run time was 115.878 seconds"
