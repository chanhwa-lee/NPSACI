
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3429"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 29 30 31 32 33 34 35 36 37 38 39 40 41 42 44 45 46 47 
 4  1  3  2  3  5  4  8  6  4  6  3  4  2  2  2  2  1  5  9  2  3  1  2  1  5 
48 49 50 
 3  3  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02259 0.29727 0.58079 0.97411 5.73634 
[1] "event indicator table: "

   0    1 
2011 1418 
[1] "treatment indicator table: "

   0    1 
1407 2022 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1635
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 30"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1794
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 83"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 192.504 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.372 0.0396
 2 mu         0.1   0.2 0.466 0.0422
 3 mu         0.1   0.3 0.514 0.0480
 4 mu         0.1   0.4 0.542 0.0487
 5 mu         0.1   0.5 0.558 0.0451
 6 mu         0.2   0.1 0.338 0.0358
 7 mu         0.2   0.2 0.422 0.0457
 8 mu         0.2   0.3 0.472 0.0414
 9 mu         0.2   0.4 0.521 0.0346
10 mu         0.2   0.5 0.567 0.0384
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.930        0.856     0.125      2.26
 2 mu         0.2      0.982        0.980     0.275      1.81
 3 mu         0.3      0.986        1.00      0.535      1.56
 4 mu         0.4      0.992        0.983     0.626      1.67
 5 mu         0.5      0.992        0.981     0.684      1.36
 6 mu         0.6      0.980        0.986     0.658      1.34
 7 mu         0.7      0.994        0.992     0.755      1.38
 8 mu         0.8      1.01         1.01      0.604      1.50
 9 mu         0.9      1.04         1.05      0.476      1.64
10 mu_1       0.1      0.951        0.922     0.243      2.18
11 mu_1       0.2      0.989        0.975     0.338      1.82
12 mu_1       0.3      0.986        1.01      0.520      1.69
13 mu_1       0.4      0.993        0.988     0.634      1.60
14 mu_1       0.5      0.990        0.978     0.688      1.30
15 mu_1       0.6      0.980        0.978     0.662      1.33
16 mu_1       0.7      0.995        0.992     0.737      1.38
17 mu_1       0.8      1.01         1.02      0.599      1.53
18 mu_1       0.9      1.04         1.06      0.461      1.62
19 mu_0       0.1      0.928        0.863     0.110      2.29
20 mu_0       0.2      0.980        0.969     0.259      1.81
21 mu_0       0.3      0.986        1.00      0.514      1.54
22 mu_0       0.4      0.991        0.990     0.587      1.71
23 mu_0       0.5      0.993        0.988     0.652      1.41
24 mu_0       0.6      0.980        0.977     0.653      1.34
25 mu_0       0.7      0.992        0.988     0.746      1.39
26 mu_0       0.8      1.00         0.993     0.626      1.39
27 mu_0       0.9      1.04         1.05      0.509      1.80
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.25      4.40e-13  8.00e-36     35.1 
 2 mu         0.2      1.21      8.54e- 7  6.95e-23     25.7 
 3 mu         0.3      0.890     5.77e- 4  1.74e-15     12.1 
 4 mu         0.4      0.985     2.71e- 2  9.78e-11      9.97
 5 mu         0.5      1.16      1.67e- 1  1.29e- 7     17.3 
 6 mu         0.6      1.29      4.45e- 1  5.51e-11      9.77
 7 mu         0.7      1.40      9.98e- 1  1.79e-15      5.97
 8 mu         0.8      1.57      2.70e- 1  7.13e-22      7.93
 9 mu         0.9      0.979     1.29e- 3  4.02e-34     14.6 
10 mu_1       0.1      1.28      3.23e-12  7.04e-35     30.1 
11 mu_1       0.2      1.18      2.87e- 6  3.06e-22     27.6 
12 mu_1       0.3      0.865     1.32e- 3  5.12e-15      8.62
13 mu_1       0.4      1.01      4.18e- 2  2.37e-10     10.1 
14 mu_1       0.5      1.18      1.38e- 1  1.51e- 8     18.1 
15 mu_1       0.6      1.31      4.68e- 1  4.71e-12      8.48
16 mu_1       0.7      1.42      9.10e- 1  1.31e-16      5.69
17 mu_1       0.8      1.55      2.52e- 1  4.57e-23      8.30
18 mu_1       0.9      0.964     8.84e- 4  5.58e-35     14.3 
19 mu_0       0.1      1.25      1.53e-13  1.07e-36     35.7 
20 mu_0       0.2      1.22      3.49e- 7  1.04e-23     25.3 
21 mu_0       0.3      0.901     2.57e- 4  2.99e-16     13.5 
22 mu_0       0.4      0.966     1.66e- 2  4.79e-12      9.90
23 mu_0       0.5      1.14      1.17e- 1  7.56e- 9     16.6 
24 mu_0       0.6      1.26      3.40e- 1  1.31e-10     11.7 
25 mu_0       0.7      1.35      8.92e- 1  5.65e-15      6.64
26 mu_0       0.8      1.62      3.37e- 1  3.38e-21      8.34
27 mu_0       0.9      1.11      4.81e- 3  3.52e-33     17.5 
[1] "Total run time was 195.682 seconds"
