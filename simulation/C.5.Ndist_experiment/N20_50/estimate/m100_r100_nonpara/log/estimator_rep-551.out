
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3585"
[1] "cluster size dist'n: "

20 22 24 25 26 27 28 29 30 31 32 33 34 35 37 38 39 40 41 42 43 44 45 46 47 48 
 1  3  3  2  2  3  5  4  9  4  4  3  2  7  2  5  4  3  4  6  6  2  5  2  1  5 
49 50 
 2  1 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02523 0.32958 0.60158 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
2138 1447 
[1] "treatment indicator table: "

   0    1 
1362 2223 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1795
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1790
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 20"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 221.123 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.380 0.0352
 2 mu         0.1   0.2 0.482 0.0619
 3 mu         0.1   0.3 0.518 0.0880
 4 mu         0.1   0.4 0.567 0.0955
 5 mu         0.1   0.5 0.616 0.121 
 6 mu         0.2   0.1 0.448 0.0610
 7 mu         0.2   0.2 0.536 0.0585
 8 mu         0.2   0.3 0.556 0.0460
 9 mu         0.2   0.4 0.605 0.0507
10 mu         0.2   0.5 0.662 0.0636
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.944        0.786   0.00263      3.47
 2 mu         0.2      1.04         1.00    0.157        2.60
 3 mu         0.3      1.07         1.09    0.567        1.69
 4 mu         0.4      1.05         1.03    0.606        1.52
 5 mu         0.5      1.01         0.998   0.704        1.51
 6 mu         0.6      1.01         1.00    0.685        1.35
 7 mu         0.7      0.998        0.997   0.624        1.32
 8 mu         0.8      0.984        0.979   0.593        1.40
 9 mu         0.9      0.990        0.963   0.535        2.03
10 mu_1       0.1      0.974        0.821   0.00748      3.11
11 mu_1       0.2      1.05         1.03    0.234        2.24
12 mu_1       0.3      1.07         1.06    0.590        1.67
13 mu_1       0.4      1.04         1.04    0.591        1.48
14 mu_1       0.5      1.00         1.00    0.739        1.49
15 mu_1       0.6      1.01         0.998   0.687        1.37
16 mu_1       0.7      0.996        0.989   0.625        1.33
17 mu_1       0.8      0.984        0.976   0.589        1.41
18 mu_1       0.9      0.990        0.966   0.530        2.05
19 mu_0       0.1      0.941        0.765   0.00209      3.57
20 mu_0       0.2      1.04         0.994   0.138        2.69
21 mu_0       0.3      1.07         1.08    0.557        1.70
22 mu_0       0.4      1.05         1.04    0.616        1.57
23 mu_0       0.5      1.01         1.00    0.670        1.53
24 mu_0       0.6      1.01         0.996   0.682        1.39
25 mu_0       0.7      1.00         1.00    0.622        1.29
26 mu_0       0.8      0.983        0.986   0.610        1.39
27 mu_0       0.9      0.982        0.953   0.587        1.84
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.55      5.53e-13  4.74e-37     79.3 
 2 mu         0.2      1.61      2.15e- 7  1.46e-24     46.6 
 3 mu         0.3      1.19      2.31e- 4  2.44e-17     16.5 
 4 mu         0.4      1.04      1.98e- 2  2.72e-12      7.72
 5 mu         0.5      0.981     1.74e- 1  8.50e- 9      7.36
 6 mu         0.6      0.992     6.56e- 1  7.09e-10      5.91
 7 mu         0.7      1.21      4.95e- 1  2.01e-14      7.27
 8 mu         0.8      1.24      2.28e- 1  6.12e-21      7.79
 9 mu         0.9      1.01      1.40e- 3  3.17e-32     13.8 
10 mu_1       0.1      1.72      3.90e-12  4.43e-36     58.0 
11 mu_1       0.2      1.57      7.24e- 7  6.84e-24     43.7 
12 mu_1       0.3      1.11      5.10e- 4  7.60e-17     13.7 
13 mu_1       0.4      1.04      3.02e- 2  6.34e-12      7.56
14 mu_1       0.5      0.970     2.26e- 1  1.70e- 8      6.73
15 mu_1       0.6      1.01      7.14e- 1  8.65e-11      6.57
16 mu_1       0.7      1.23      5.30e- 1  2.11e-15      6.92
17 mu_1       0.8      1.23      1.86e- 1  5.60e-22      7.91
18 mu_1       0.9      1.01      9.97e- 4  2.58e-33     13.6 
19 mu_0       0.1      1.53      1.81e-13  0            81.7 
20 mu_0       0.2      1.63      7.63e- 8  0            47.3 
21 mu_0       0.3      1.22      1.04e- 4  0            19.1 
22 mu_0       0.4      1.04      1.11e- 2  0             7.97
23 mu_0       0.5      0.992     1.36e- 1  0             7.99
24 mu_0       0.6      0.960     5.27e- 1  0             4.93
25 mu_0       0.7      1.18      5.47e- 1  0             8.08
26 mu_0       0.8      1.29      3.42e- 1  0             7.60
27 mu_0       0.9      1.03      2.04e- 3  0            15.3 
[1] "Total run time was 224.412 seconds"
