
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3482"
[1] "cluster size dist'n: "

21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 47 
 4  3  6  5  1  3  5  5  5  2  1  2  2  3  3  2  2  7  4  4  5  6  2  2  3  2 
48 49 50 
 6  3  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0325  0.3690  0.6326  1.0000  7.0000 
[1] "event indicator table: "

   0    1 
2055 1427 
[1] "treatment indicator table: "

   0    1 
1265 2217 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1689
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 56"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1793
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 46"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 319.631 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.392 0.0573
 2 mu         0.1   0.2 0.464 0.0561
 3 mu         0.1   0.3 0.499 0.0628
 4 mu         0.1   0.4 0.526 0.0651
 5 mu         0.1   0.5 0.571 0.0701
 6 mu         0.2   0.1 0.339 0.0468
 7 mu         0.2   0.2 0.420 0.0438
 8 mu         0.2   0.3 0.459 0.0518
 9 mu         0.2   0.4 0.494 0.0494
10 mu         0.2   0.5 0.520 0.0571
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.995        0.789  0.00103       3.87
 2 mu         0.2      1.00         1.02   0.212         2.28
 3 mu         0.3      1.01         0.969  0.304         1.76
 4 mu         0.4      1.02         1.05   0.542         1.65
 5 mu         0.5      1.01         1.02   0.669         1.49
 6 mu         0.6      0.985        0.951  0.694         1.43
 7 mu         0.7      0.987        0.993  0.502         1.72
 8 mu         0.8      0.992        0.989  0.647         1.41
 9 mu         0.9      0.992        0.973  0.528         1.84
10 mu_1       0.1      0.982        0.889  0.00311       3.61
11 mu_1       0.2      1.00         0.994  0.323         2.21
12 mu_1       0.3      1.01         0.991  0.286         1.74
13 mu_1       0.4      1.02         1.04   0.554         1.65
14 mu_1       0.5      1.00         1.01   0.683         1.44
15 mu_1       0.6      0.983        0.952  0.689         1.46
16 mu_1       0.7      0.986        0.987  0.504         1.72
17 mu_1       0.8      0.992        0.987  0.642         1.41
18 mu_1       0.9      0.992        0.973  0.528         1.86
19 mu_0       0.1      0.997        0.771  0.000799      4.06
20 mu_0       0.2      1.00         1.03   0.183         2.30
21 mu_0       0.3      1.01         0.975  0.312         1.79
22 mu_0       0.4      1.02         1.04   0.516         1.64
23 mu_0       0.5      1.01         1.03   0.654         1.55
24 mu_0       0.6      0.987        0.962  0.702         1.38
25 mu_0       0.7      0.988        0.979  0.497         1.71
26 mu_0       0.8      0.990        0.985  0.655         1.42
27 mu_0       0.9      0.995        0.979  0.527         1.68
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.314     4.20e-13  4.84e-41      9.54
 2 mu         0.2      1.57      6.80e- 7  2.39e-27     73.9 
 3 mu         0.3      1.18      3.31e- 4  2.02e-19     26.6 
 4 mu         0.4      1.10      3.23e- 2  7.10e-14     13.9 
 5 mu         0.5      1.26      1.71e- 1  9.59e-10     11.2 
 6 mu         0.6      1.11      7.91e- 1  3.11e- 7      8.36
 7 mu         0.7      1.21      3.18e- 1  1.67e-11      9.14
 8 mu         0.8      1.26      2.39e- 1  7.53e-18      8.00
 9 mu         0.9      1.39      2.01e- 3  3.96e-29     15.7 
10 mu_1       0.1      0.560     2.60e-12  4.55e-40     13.2 
11 mu_1       0.2      1.66      2.15e- 6  1.12e-26     76.9 
12 mu_1       0.3      1.13      7.65e- 4  6.32e-19     18.5 
13 mu_1       0.4      1.15      3.07e- 2  1.67e-13     11.6 
14 mu_1       0.5      1.24      2.29e- 1  1.87e- 9     11.2 
15 mu_1       0.6      1.09      7.07e- 1  9.72e- 8      8.89
16 mu_1       0.7      1.22      3.04e- 1  4.47e-12      9.33
17 mu_1       0.8      1.26      2.20e- 1  1.77e-18      8.29
18 mu_1       0.9      1.39      1.47e- 3  8.24e-30     15.5 
19 mu_0       0.1      0.287     1.77e-13  0             9.14
20 mu_0       0.2      1.55      2.62e- 7  0            73.1 
21 mu_0       0.3      1.21      1.45e- 4  0            30.1 
22 mu_0       0.4      1.07      1.92e- 2  0            15.5 
23 mu_0       0.5      1.27      1.07e- 1  0            11.2 
24 mu_0       0.6      1.12      6.91e- 1  0             7.56
25 mu_0       0.7      1.18      3.95e- 1  0             8.71
26 mu_0       0.8      1.26      2.16e- 1  0             8.87
27 mu_0       0.9      1.31      3.11e- 3  0            18.3 
[1] "Total run time was 324.13 seconds"
