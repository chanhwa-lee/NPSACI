
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3339"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 35 36 37 38 39 40 41 42 43 44 45 47 
 2  9  2  2  2  4  2  7  3  6  3  5  4  6  4  2  2  1  4  4  5  3  2  3  4  3 
48 49 50 
 3  2  1 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03068 0.34691 0.60803 1.00000 7.00000 
[1] "event indicator table: "

   0    1 
2001 1338 
[1] "treatment indicator table: "

   0    1 
1298 2041 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1730
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 35"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1609
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 7"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 50"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 225.153 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.348 0.0660
 2 mu         0.1   0.2 0.434 0.0951
 3 mu         0.1   0.3 0.458 0.0958
 4 mu         0.1   0.4 0.534 0.0988
 5 mu         0.1   0.5 0.589 0.122 
 6 mu         0.2   0.1 0.321 0.0343
 7 mu         0.2   0.2 0.382 0.0493
 8 mu         0.2   0.3 0.426 0.0490
 9 mu         0.2   0.4 0.497 0.0495
10 mu         0.2   0.5 0.527 0.0625
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.872        0.156 0.0000266      8.54
 2 mu         0.2      0.932        0.797 0.0259         3.78
 3 mu         0.3      0.958        0.964 0.169          2.00
 4 mu         0.4      0.991        0.996 0.352          1.67
 5 mu         0.5      1.01         1.00  0.555          1.50
 6 mu         0.6      1.01         0.996 0.727          1.26
 7 mu         0.7      1.01         1.01  0.686          1.33
 8 mu         0.8      1.01         0.991 0.631          1.54
 9 mu         0.9      0.974        0.942 0.0954         2.61
10 mu_1       0.1      0.941        0.301 0.0000939      9.77
11 mu_1       0.2      0.932        0.876 0.0517         2.38
12 mu_1       0.3      0.967        0.982 0.245          2.02
13 mu_1       0.4      0.998        0.993 0.403          1.62
14 mu_1       0.5      1.01         1.01  0.590          1.47
15 mu_1       0.6      1.01         0.998 0.701          1.24
16 mu_1       0.7      1.01         1.01  0.694          1.33
17 mu_1       0.8      1.01         0.994 0.605          1.57
18 mu_1       0.9      0.971        0.921 0.0868         2.70
19 mu_0       0.1      0.864        0.137 0.0000191      9.43
20 mu_0       0.2      0.932        0.755 0.0195         4.13
21 mu_0       0.3      0.954        0.942 0.137          1.99
22 mu_0       0.4      0.987        0.989 0.317          1.70
23 mu_0       0.5      1.01         1.01  0.520          1.53
24 mu_0       0.6      1.01         1.00  0.730          1.32
25 mu_0       0.7      1.01         1.01  0.668          1.31
26 mu_0       0.8      1.01         0.998 0.734          1.42
27 mu_0       0.9      1.00         0.995 0.173          1.85
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.145     5.47e-11  6.01e-39     11.2 
 2 mu         0.2      0.884     1.11e- 5  1.49e-25     34.0 
 3 mu         0.3      1.18      4.13e- 3  8.35e-18     33.1 
 4 mu         0.4      1.31      1.24e- 1  2.20e-12     15.5 
 5 mu         0.5      1.47      7.39e- 1  2.93e- 8     12.5 
 6 mu         0.6      1.29      7.82e- 1  4.81e- 5     11.7 
 7 mu         0.7      1.10      7.22e- 1  2.10e- 7      4.39
 8 mu         0.8      1.13      1.17e- 1  2.77e-12     10.2 
 9 mu         0.9      2.86      2.32e- 4  4.20e-21     74.6 
10 mu_1       0.1      0.313     3.28e-10  5.63e-38     22.4 
11 mu_1       0.2      1.08      3.46e- 5  6.96e-25     34.0 
12 mu_1       0.3      1.17      8.57e- 3  2.61e-17     30.9 
13 mu_1       0.4      1.35      1.87e- 1  5.17e-12     10.8 
14 mu_1       0.5      1.46      7.43e- 1  5.49e- 8     12.5 
15 mu_1       0.6      1.26      8.72e- 1  7.64e- 5     11.1 
16 mu_1       0.7      1.08      6.90e- 1  7.32e- 8      4.87
17 mu_1       0.8      1.14      8.90e- 2  8.46e-13     10.9 
18 mu_1       0.9      2.94      1.61e- 4  1.14e-21     79.1 
19 mu_0       0.1      0.127     2.53e-11  4.17e-40      9.97
20 mu_0       0.2      0.834     5.21e- 6  1.16e-26     34.0 
21 mu_0       0.3      1.18      2.07e- 3  7.46e-19     34.0 
22 mu_0       0.4      1.29      8.17e- 2  2.30e-13     18.6 
23 mu_0       0.5      1.47      5.79e- 1  3.66e- 9     12.5 
24 mu_0       0.6      1.34      6.54e- 1  5.59e- 6     12.5 
25 mu_0       0.7      1.14      7.94e- 1  5.29e- 7      6.22
26 mu_0       0.8      1.08      1.96e- 1  1.05e-11      8.07
27 mu_0       0.9      2.13      9.12e- 4  3.17e-20     45.0 
[1] "Total run time was 228.404 seconds"
