
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3633"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 4  1  6  2  1  3  3  2  1  3  3  3  1  3  5  4  3  1  3  5  6  1  4  5  5  6 
46 47 48 49 50 
 3  1  4  1  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02557 0.32160 0.60197 1.00000 5.00000 
[1] "event indicator table: "

   0    1 
2129 1504 
[1] "treatment indicator table: "

   0    1 
1474 2159 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1852
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1781
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 197.644 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.400 0.0996
 2 mu         0.1   0.2 0.486 0.108 
 3 mu         0.1   0.3 0.487 0.144 
 4 mu         0.1   0.4 0.569 0.184 
 5 mu         0.1   0.5 0.633 0.174 
 6 mu         0.2   0.1 0.362 0.0446
 7 mu         0.2   0.2 0.456 0.0427
 8 mu         0.2   0.3 0.482 0.0603
 9 mu         0.2   0.4 0.529 0.0801
10 mu         0.2   0.5 0.577 0.0696
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.21         0.615   0.00175     15.0 
 2 mu         0.2      1.07         0.994   0.158        2.87
 3 mu         0.3      1.03         1.01    0.408        1.63
 4 mu         0.4      1.00         1.00    0.648        1.42
 5 mu         0.5      1.00         0.986   0.657        1.33
 6 mu         0.6      0.999        0.984   0.745        1.38
 7 mu         0.7      0.990        0.976   0.598        1.51
 8 mu         0.8      0.992        0.981   0.575        1.45
 9 mu         0.9      1.04         0.998   0.372        2.04
10 mu_1       0.1      1.15         0.908   0.00456      7.48
11 mu_1       0.2      1.07         1.06    0.233        2.56
12 mu_1       0.3      1.02         1.03    0.427        1.60
13 mu_1       0.4      1.00         0.993   0.687        1.40
14 mu_1       0.5      1.00         0.984   0.650        1.33
15 mu_1       0.6      0.997        0.989   0.730        1.40
16 mu_1       0.7      0.989        0.970   0.583        1.51
17 mu_1       0.8      0.994        0.975   0.584        1.47
18 mu_1       0.9      1.04         0.995   0.380        2.06
19 mu_0       0.1      1.22         0.568   0.00142     15.8 
20 mu_0       0.2      1.07         0.999   0.139        2.94
21 mu_0       0.3      1.03         1.02    0.399        1.65
22 mu_0       0.4      1.01         1.02    0.622        1.45
23 mu_0       0.5      1.00         0.985   0.663        1.34
24 mu_0       0.6      1.00         0.991   0.738        1.35
25 mu_0       0.7      0.992        0.989   0.632        1.51
26 mu_0       0.8      0.986        0.983   0.537        1.37
27 mu_0       0.9      1.04         0.996   0.308        1.84
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       7.37     1.54e-10  1.98e-40    733.  
 2 mu         0.2       1.13     1.98e- 5  3.10e-27     46.9 
 3 mu         0.3       1.09     8.96e- 3  1.52e-19     19.9 
 4 mu         0.4       1.23     2.06e- 1  4.09e-14     10.4 
 5 mu         0.5       1.33     8.65e- 1  6.26e-10      7.75
 6 mu         0.6       1.18     7.87e- 1  5.76e-10      5.65
 7 mu         0.7       1.10     3.44e- 1  6.89e-15      8.90
 8 mu         0.8       1.22     4.19e- 2  6.20e-22     16.9 
 9 mu         0.9       1.92     2.31e- 5  4.02e-34     27.5 
10 mu_1       0.1       5.10     9.79e-10  1.94e-39    500.  
11 mu_1       0.2       1.02     5.57e- 5  1.52e-26     21.2 
12 mu_1       0.3       1.11     1.81e- 2  4.95e-19     17.0 
13 mu_1       0.4       1.26     3.08e- 1  1.00e-13     10.8 
14 mu_1       0.5       1.32     9.24e- 1  1.22e- 9      7.50
15 mu_1       0.6       1.16     6.93e- 1  6.54e-11      6.21
16 mu_1       0.7       1.10     3.42e- 1  6.71e-16     10.1 
17 mu_1       0.8       1.22     3.01e- 2  5.29e-23     16.7 
18 mu_1       0.9       1.96     1.44e- 5  3.04e-35     29.2 
19 mu_0       0.1       7.62     6.58e-11  4.90e-42    759.  
20 mu_0       0.2       1.16     1.13e- 5  8.61e-29     54.6 
21 mu_0       0.3       1.08     5.30e- 3  4.82e-21     21.2 
22 mu_0       0.4       1.21     1.51e- 1  1.52e-15     10.2 
23 mu_0       0.5       1.33     8.03e- 1  2.78e-11      8.00
24 mu_0       0.6       1.20     8.07e- 1  1.34e- 9      4.82
25 mu_0       0.7       1.10     2.93e- 1  2.14e-14      7.98
26 mu_0       0.8       1.19     6.68e- 2  2.89e-21     17.4 
27 mu_0       0.9       1.58     9.65e- 5  3.74e-33     22.0 
[1] "Total run time was 200.857 seconds"
