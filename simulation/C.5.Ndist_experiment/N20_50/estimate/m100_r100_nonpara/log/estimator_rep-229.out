
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3405"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 4  5  6  4  5  2  1  3  5  3  2  3  3  7  2  1  2  3  2  3  3  1  4  7  3  2 
46 47 48 49 50 
 2  1  3  2  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03035 0.32928 0.59522 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
2040 1365 
[1] "treatment indicator table: "

   0    1 
1278 2127 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1681
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 21"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1724
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 65"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 211.745 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.558 0.132 
 2 mu         0.1   0.2 0.640 0.127 
 3 mu         0.1   0.3 0.654 0.112 
 4 mu         0.1   0.4 0.699 0.108 
 5 mu         0.1   0.5 0.719 0.107 
 6 mu         0.2   0.1 0.376 0.0790
 7 mu         0.2   0.2 0.467 0.0824
 8 mu         0.2   0.3 0.507 0.0715
 9 mu         0.2   0.4 0.560 0.0638
10 mu         0.2   0.5 0.591 0.0570
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.03         0.699  0.000140      9.63
 2 mu         0.2      1.01         0.960  0.0604        2.89
 3 mu         0.3      0.988        1.01   0.275         1.71
 4 mu         0.4      0.994        0.972  0.538         1.72
 5 mu         0.5      0.987        0.973  0.625         1.35
 6 mu         0.6      0.979        0.964  0.695         1.37
 7 mu         0.7      0.979        0.980  0.700         1.32
 8 mu         0.8      0.996        0.997  0.502         1.36
 9 mu         0.9      1.02         1.01   0.601         1.48
10 mu_1       0.1      0.994        0.837  0.000416      5.27
11 mu_1       0.2      1.01         1.01   0.0935        2.73
12 mu_1       0.3      0.989        0.990  0.283         1.62
13 mu_1       0.4      0.994        0.990  0.590         1.69
14 mu_1       0.5      0.986        0.973  0.641         1.35
15 mu_1       0.6      0.979        0.965  0.686         1.35
16 mu_1       0.7      0.980        0.978  0.686         1.35
17 mu_1       0.8      0.998        1.00   0.500         1.36
18 mu_1       0.9      1.01         1.01   0.582         1.49
19 mu_0       0.1      1.04         0.686  0.000109     10.1 
20 mu_0       0.2      1.01         0.964  0.0522        2.93
21 mu_0       0.3      0.988        1.02   0.272         1.74
22 mu_0       0.4      0.994        0.982  0.503         1.73
23 mu_0       0.5      0.989        0.977  0.609         1.35
24 mu_0       0.6      0.978        0.969  0.710         1.39
25 mu_0       0.7      0.977        0.977  0.731         1.28
26 mu_0       0.8      0.991        0.993  0.511         1.37
27 mu_0       0.9      1.02         1.04   0.563         1.41
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     10.3       7.34e-13  6.45e-40    858.  
 2 mu         0.2      3.09      2.24e- 7  1.59e-26     97.7 
 3 mu         0.3      1.58      1.65e- 4  8.96e-19     28.2 
 4 mu         0.4      1.15      1.35e- 2  2.36e-13      9.11
 5 mu         0.5      0.975     1.17e- 1  3.14e- 9      7.05
 6 mu         0.6      0.954     5.28e- 1  2.22e-11      4.88
 7 mu         0.7      1.22      6.96e- 1  1.28e-16      7.32
 8 mu         0.8      1.23      5.77e- 1  4.48e-24     11.6 
 9 mu         0.9      1.16      5.52e- 3  6.45e-37     13.0 
10 mu_1       0.1      6.54      5.27e-12  6.04e-39    381.  
11 mu_1       0.2      2.63      7.74e- 7  7.47e-26     81.4 
12 mu_1       0.3      1.34      3.80e- 4  2.80e-18     23.5 
13 mu_1       0.4      1.11      2.08e- 2  5.54e-13      9.77
14 mu_1       0.5      0.959     1.54e- 1  5.89e- 9      6.84
15 mu_1       0.6      0.969     5.64e- 1  1.64e-12      4.40
16 mu_1       0.7      1.24      7.78e- 1  8.13e-18      7.41
17 mu_1       0.8      1.22      4.96e- 1  2.49e-25     11.8 
18 mu_1       0.9      1.14      4.31e- 3  3.18e-38     12.9 
19 mu_0       0.1     10.8       2.30e-13  4.48e-41    910.  
20 mu_0       0.2      3.21      8.70e- 8  1.24e-27    102.  
21 mu_0       0.3      1.67      7.47e- 5  8.00e-20     31.4 
22 mu_0       0.4      1.17      7.16e- 3  2.46e-14     10.4 
23 mu_0       0.5      0.992     8.65e- 2  3.93e-10      7.93
24 mu_0       0.6      0.932     4.19e- 1  5.30e-11      5.67
25 mu_0       0.7      1.18      8.09e- 1  4.08e-16      7.12
26 mu_0       0.8      1.24      7.87e- 1  2.14e-23     10.8 
27 mu_0       0.9      1.33      1.64e- 2  6.16e-36     13.8 
[1] "Total run time was 214.966 seconds"
