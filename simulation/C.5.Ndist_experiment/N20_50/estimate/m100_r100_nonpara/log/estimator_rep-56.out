
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3434"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 2  2  5  3  5  4  3  4  7  3  1  3  5  3  3  3  5  1  4  4  2  1  3  3  4  2 
46 47 48 49 50 
 1  2  4  4  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.05332 0.37225 0.64119 1.00000 6.35371 
[1] "event indicator table: "

   0    1 
2059 1375 
[1] "treatment indicator table: "

   0    1 
1142 2292 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1760
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1674
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 63"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 80"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 223.829 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.360 0.0863
 2 mu         0.1   0.2 0.451 0.0927
 3 mu         0.1   0.3 0.542 0.131 
 4 mu         0.1   0.4 0.567 0.105 
 5 mu         0.1   0.5 0.587 0.109 
 6 mu         0.2   0.1 0.414 0.0676
 7 mu         0.2   0.2 0.498 0.0669
 8 mu         0.2   0.3 0.561 0.0710
 9 mu         0.2   0.4 0.630 0.0668
10 mu         0.2   0.5 0.662 0.0642
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.813        0.279  0.000261      5.64
 2 mu         0.2      1.01         0.834  0.0534        4.31
 3 mu         0.3      1.00         0.899  0.299         3.03
 4 mu         0.4      0.986        0.961  0.466         1.95
 5 mu         0.5      0.984        0.967  0.571         1.75
 6 mu         0.6      0.991        0.981  0.720         1.29
 7 mu         0.7      1.00         1.01   0.762         1.37
 8 mu         0.8      1.01         1.03   0.756         1.29
 9 mu         0.9      1.00         0.979  0.619         1.58
10 mu_1       0.1      0.940        0.419  0.000882      6.27
11 mu_1       0.2      1.01         0.827  0.0975        3.40
12 mu_1       0.3      1.00         0.906  0.380         3.08
13 mu_1       0.4      0.987        0.975  0.454         1.75
14 mu_1       0.5      0.985        0.958  0.613         1.70
15 mu_1       0.6      0.993        0.981  0.720         1.28
16 mu_1       0.7      1.01         1.01   0.761         1.38
17 mu_1       0.8      1.02         1.03   0.756         1.30
18 mu_1       0.9      1.00         0.981  0.613         1.60
19 mu_0       0.1      0.799        0.253  0.000192      5.67
20 mu_0       0.2      1.01         0.822  0.0424        4.54
21 mu_0       0.3      0.998        0.897  0.264         3.01
22 mu_0       0.4      0.986        0.948  0.474         2.07
23 mu_0       0.5      0.983        0.982  0.530         1.80
24 mu_0       0.6      0.989        0.981  0.721         1.30
25 mu_0       0.7      1.00         1.00   0.723         1.34
26 mu_0       0.8      1.01         1.02   0.740         1.38
27 mu_0       0.9      1.01         1.00   0.678         1.50
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       1.93     5.07e-14  6.65e-38    191.  
 2 mu         0.2       1.46     2.45e- 7  2.31e-25    114.  
 3 mu         0.3       1.05     2.31e- 4  4.40e-18     20.5 
 4 mu         0.4       1.37     1.59e- 2  5.72e-13     21.0 
 5 mu         0.5       1.48     2.89e- 1  4.67e- 9     20.0 
 6 mu         0.6       1.43     7.88e- 1  6.32e- 6     12.4 
 7 mu         0.7       1.36     7.62e- 1  2.09e- 6      9.72
 8 mu         0.8       1.23     5.46e- 1  4.16e-10     10.7 
 9 mu         0.9       1.35     4.91e- 3  3.46e-17     19.9 
10 mu_1       0.1       2.36     3.62e-13  6.35e-37    229.  
11 mu_1       0.2       1.14     8.26e- 7  1.10e-24     68.7 
12 mu_1       0.3       1.04     5.50e- 4  1.40e-17     17.2 
13 mu_1       0.4       1.41     2.75e- 2  1.36e-12     19.3 
14 mu_1       0.5       1.48     3.87e- 1  8.91e- 9     20.8 
15 mu_1       0.6       1.42     8.53e- 1  1.01e- 5     12.4 
16 mu_1       0.7       1.35     7.23e- 1  3.58e- 7      9.75
17 mu_1       0.8       1.22     5.15e- 1  6.25e-11     10.9 
18 mu_1       0.9       1.36     3.75e- 3  1.41e-17     19.6 
19 mu_0       0.1       1.89     1.75e-14  0           187.  
20 mu_0       0.2       1.54     9.92e- 8  0           126.  
21 mu_0       0.3       1.05     9.50e- 5  0            25.7 
22 mu_0       0.4       1.34     9.00e- 3  0            22.1 
23 mu_0       0.5       1.49     1.91e- 1  0            19.2 
24 mu_0       0.6       1.44     7.36e- 1  0            13.0 
25 mu_0       0.7       1.40     6.59e- 1  0             9.65
26 mu_0       0.8       1.25     3.97e- 1  0             9.88
27 mu_0       0.9       1.31     1.38e- 2  0            22.6 
[1] "Total run time was 227.355 seconds"
