
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3608"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 1  3  3  4  5  2  3  1  2  1  3  3  2  2  3  3  7  3  3  2  8  9  5  2  2  2 
46 47 48 49 50 
 4  1  5  2  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0398  0.3539  0.6061  1.0000  6.0000 
[1] "event indicator table: "

   0    1 
2140 1468 
[1] "treatment indicator table: "

   0    1 
1361 2247 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1808
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 14"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1800
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 7"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 341.293 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.436 0.0918
 2 mu         0.1   0.2 0.494 0.0921
 3 mu         0.1   0.3 0.512 0.0859
 4 mu         0.1   0.4 0.539 0.0977
 5 mu         0.1   0.5 0.571 0.110 
 6 mu         0.2   0.1 0.350 0.0496
 7 mu         0.2   0.2 0.437 0.0465
 8 mu         0.2   0.3 0.490 0.0405
 9 mu         0.2   0.4 0.527 0.0461
10 mu         0.2   0.5 0.560 0.0520
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.961        0.456 0.000122       9.16
 2 mu         0.2      1.01         0.881 0.0614         3.34
 3 mu         0.3      1.01         0.972 0.397          2.20
 4 mu         0.4      0.997        0.968 0.596          1.67
 5 mu         0.5      1.01         0.999 0.626          1.54
 6 mu         0.6      1.01         1.01  0.695          1.38
 7 mu         0.7      1.02         1.02  0.724          1.36
 8 mu         0.8      1.02         1.04  0.668          1.46
 9 mu         0.9      0.994        0.996 0.213          1.82
10 mu_1       0.1      1.00         0.650 0.000398       7.98
11 mu_1       0.2      1.01         0.947 0.104          2.72
12 mu_1       0.3      1.01         0.991 0.489          2.15
13 mu_1       0.4      0.997        0.988 0.622          1.56
14 mu_1       0.5      1.01         1.00  0.615          1.54
15 mu_1       0.6      1.01         1.01  0.675          1.36
16 mu_1       0.7      1.02         1.03  0.724          1.36
17 mu_1       0.8      1.02         1.04  0.667          1.48
18 mu_1       0.9      0.992        0.991 0.198          1.88
19 mu_0       0.1      0.956        0.427 0.0000911      9.29
20 mu_0       0.2      1.01         0.887 0.0507         3.50
21 mu_0       0.3      1.01         0.965 0.352          2.21
22 mu_0       0.4      0.997        0.963 0.567          1.74
23 mu_0       0.5      1.00         0.997 0.636          1.54
24 mu_0       0.6      1.01         1.01  0.686          1.42
25 mu_0       0.7      1.02         1.02  0.725          1.37
26 mu_0       0.8      1.03         1.04  0.671          1.40
27 mu_0       0.9      1.01         0.991 0.350          1.49
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.836     5.39e-12  4.14e-40     80.1 
 2 mu         0.2      1.03      1.66e- 6  3.24e-27     33.0 
 3 mu         0.3      1.16      1.36e- 3  1.06e-19     45.7 
 4 mu         0.4      0.974     5.76e- 2  2.14e-14      9.09
 5 mu         0.5      1.20      3.04e- 1  2.62e-10     17.1 
 6 mu         0.6      1.12      5.27e- 1  5.32e- 7      7.37
 7 mu         0.7      1.14      7.75e- 1  3.65e- 8      5.45
 8 mu         0.8      1.27      1.46e- 1  2.81e-13     11.4 
 9 mu         0.9      0.862     5.15e- 4  1.89e-22     18.1 
10 mu_1       0.1      0.751     3.18e-11  4.05e-39     66.7 
11 mu_1       0.2      1.10      4.96e- 6  1.58e-26     43.0 
12 mu_1       0.3      1.10      2.85e- 3  3.45e-19     39.7 
13 mu_1       0.4      1.01      8.49e- 2  5.22e-14     11.1 
14 mu_1       0.5      1.22      2.56e- 1  5.12e-10     16.7 
15 mu_1       0.6      1.10      5.61e- 1  8.66e- 7      7.17
16 mu_1       0.7      1.15      8.01e- 1  1.14e- 8      5.79
17 mu_1       0.8      1.26      1.10e- 1  7.71e-14     11.9 
18 mu_1       0.9      0.868     3.33e- 4  4.61e-23     19.3 
19 mu_0       0.1      0.846     2.22e-12  0            81.5 
20 mu_0       0.2      1.01      8.39e- 7  0            30.5 
21 mu_0       0.3      1.18      7.20e- 4  0            48.2 
22 mu_0       0.4      0.952     3.56e- 2  0             9.40
23 mu_0       0.5      1.19      2.50e- 1  0            17.6 
24 mu_0       0.6      1.14      5.59e- 1  0             7.76
25 mu_0       0.7      1.11      7.04e- 1  0             4.84
26 mu_0       0.8      1.30      2.11e- 1  0             9.50
27 mu_0       0.9      0.811     1.05e- 3  0             8.25
[1] "Total run time was 345.808 seconds"
