
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3480"
[1] "cluster size dist'n: "

20 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 
 4  2  6  6  4  2  2  4  1  6  3  2  3  3  2  3  3  5  5  5  1  5  1  5  4  2 
47 48 49 
 2  6  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02374 0.32001 0.59610 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
2065 1415 
[1] "treatment indicator table: "

   0    1 
1343 2137 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1675
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1805
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 61"
[1] "     Cluster: 65"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 241.098 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.348 0.103 
 2 mu         0.1   0.2 0.468 0.0995
 3 mu         0.1   0.3 0.597 0.0846
 4 mu         0.1   0.4 0.599 0.0825
 5 mu         0.1   0.5 0.622 0.0873
 6 mu         0.2   0.1 0.312 0.0780
 7 mu         0.2   0.2 0.436 0.0678
 8 mu         0.2   0.3 0.551 0.0498
 9 mu         0.2   0.4 0.575 0.0461
10 mu         0.2   0.5 0.605 0.0506
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.949        0.599 0.0000333      7.55
 2 mu         0.2      1.02         0.898 0.0382         4.21
 3 mu         0.3      0.998        0.927 0.274          2.52
 4 mu         0.4      0.973        0.994 0.455          1.55
 5 mu         0.5      0.985        0.988 0.472          1.37
 6 mu         0.6      0.987        0.993 0.611          1.31
 7 mu         0.7      0.997        0.986 0.654          1.55
 8 mu         0.8      1.02         0.993 0.590          1.65
 9 mu         0.9      1.01         1.00  0.261          1.84
10 mu_1       0.1      0.961        0.849 0.000108       4.78
11 mu_1       0.2      1.02         0.915 0.0629         4.60
12 mu_1       0.3      0.990        0.942 0.303          2.17
13 mu_1       0.4      0.974        0.979 0.481          1.55
14 mu_1       0.5      0.985        0.986 0.474          1.39
15 mu_1       0.6      0.987        0.990 0.627          1.30
16 mu_1       0.7      0.998        0.978 0.648          1.56
17 mu_1       0.8      1.02         1.00  0.574          1.65
18 mu_1       0.9      1.01         1.01  0.243          1.86
19 mu_0       0.1      0.947        0.581 0.0000250      7.86
20 mu_0       0.2      1.02         0.902 0.0320         4.12
21 mu_0       0.3      1.00         0.936 0.261          2.74
22 mu_0       0.4      0.973        0.992 0.433          1.55
23 mu_0       0.5      0.984        0.978 0.469          1.36
24 mu_0       0.6      0.988        0.989 0.587          1.33
25 mu_0       0.7      0.993        0.986 0.642          1.52
26 mu_0       0.8      1.01         1.01  0.655          1.67
27 mu_0       0.9      1.01         0.988 0.428          1.77
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       1.94     7.56e-11  2.31e-37    147.  
 2 mu         0.2       1.42     6.34e- 6  2.25e-24     48.2 
 3 mu         0.3       1.47     3.28e- 3  6.47e-17     37.1 
 4 mu         0.4       1.30     9.18e- 2  9.41e-12     21.3 
 5 mu         0.5       1.16     4.16e- 1  6.95e- 8      8.06
 6 mu         0.6       1.16     5.40e- 1  5.91e- 8      7.54
 7 mu         0.7       1.30     6.34e- 1  1.10e-11     10.1 
 8 mu         0.8       1.90     2.64e- 1  4.35e-17     26.4 
 9 mu         0.9       1.72     1.67e- 3  1.62e-26     44.0 
10 mu_1       0.1       2.31     5.22e-10  2.07e-36    159.  
11 mu_1       0.2       1.28     2.04e- 5  1.01e-23     26.1 
12 mu_1       0.3       1.47     6.66e- 3  1.94e-16     39.0 
13 mu_1       0.4       1.26     1.48e- 1  2.11e-11     16.8 
14 mu_1       0.5       1.16     4.99e- 1  1.25e- 7      8.68
15 mu_1       0.6       1.17     5.23e- 1  1.09e- 8      7.99
16 mu_1       0.7       1.32     6.91e- 1  1.75e-12     10.7 
17 mu_1       0.8       1.92     2.32e- 1  6.04e-18     26.5 
18 mu_1       0.9       1.71     1.22e- 3  2.00e-27     45.4 
19 mu_0       0.1       1.90     2.93e-11  0           146.  
20 mu_0       0.2       1.46     2.83e- 6  0            53.8 
21 mu_0       0.3       1.47     1.66e- 3  0            36.2 
22 mu_0       0.4       1.32     7.22e- 2  0            24.3 
23 mu_0       0.5       1.15     2.96e- 1  0             7.44
24 mu_0       0.6       1.16     4.05e- 1  0             7.71
25 mu_0       0.7       1.23     7.21e- 1  0             8.78
26 mu_0       0.8       1.82     3.59e- 1  0            25.8 
27 mu_0       0.9       1.83     3.51e- 3  0            31.9 
[1] "Total run time was 245.356 seconds"
