
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3474"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 4  3  4  4  4  3  3  4  1  2  3  2  3  4  2  5  3  3  4  5  3  3  3  3  5  4 
46 47 48 49 50 
 4  1  4  2  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03412 0.33134 0.61371 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
2067 1407 
[1] "treatment indicator table: "

   0    1 
1320 2154 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1699
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1775
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 253.129 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.339 0.111 
 2 mu         0.1   0.2 0.507 0.142 
 3 mu         0.1   0.3 0.537 0.158 
 4 mu         0.1   0.4 0.537 0.165 
 5 mu         0.1   0.5 0.534 0.170 
 6 mu         0.2   0.1 0.363 0.0415
 7 mu         0.2   0.2 0.475 0.0461
 8 mu         0.2   0.3 0.526 0.0620
 9 mu         0.2   0.4 0.564 0.0553
10 mu         0.2   0.5 0.573 0.0534
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      0.940       0.110  0.00000706     27.6 
 2 mu         0.2      1.05        0.754  0.0121          6.51
 3 mu         0.3      1.07        1.01   0.218           2.76
 4 mu         0.4      1.01        1.00   0.618           1.99
 5 mu         0.5      1.00        1.02   0.682           1.39
 6 mu         0.6      0.994       0.987  0.728           1.36
 7 mu         0.7      0.992       0.974  0.772           1.30
 8 mu         0.8      0.989       0.990  0.700           1.35
 9 mu         0.9      0.978       0.986  0.174           2.06
10 mu_1       0.1      0.825       0.225  0.0000268       7.56
11 mu_1       0.2      1.08        0.920  0.0228          6.39
12 mu_1       0.3      1.05        0.987  0.293           2.25
13 mu_1       0.4      1.01        0.989  0.628           1.93
14 mu_1       0.5      1.00        1.02   0.691           1.33
15 mu_1       0.6      0.992       0.990  0.735           1.36
16 mu_1       0.7      0.992       0.975  0.767           1.32
17 mu_1       0.8      0.988       0.991  0.688           1.35
18 mu_1       0.9      0.979       0.979  0.161           2.10
19 mu_0       0.1      0.953       0.0967 0.00000487     29.8 
20 mu_0       0.2      1.04        0.728  0.00944         6.54
21 mu_0       0.3      1.07        1.04   0.186           2.98
22 mu_0       0.4      1.01        1.00   0.611           2.03
23 mu_0       0.5      1.01        1.02   0.668           1.45
24 mu_0       0.6      0.997       0.990  0.717           1.37
25 mu_0       0.7      0.990       0.977  0.784           1.28
26 mu_0       0.8      0.993       0.980  0.712           1.39
27 mu_0       0.9      0.967       0.950  0.289           1.74
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.0929     1.80e-13  1.45e-39      6.46
 2 mu         0.2     1.02       1.30e- 7  2.02e-26     38.7 
 3 mu         0.3     1.53       2.58e- 4  8.64e-19     35.1 
 4 mu         0.4     1.14       2.93e- 2  2.00e-13      9.91
 5 mu         0.5     1.07       4.14e- 1  2.55e- 9     13.0 
 6 mu         0.6     1.12       8.93e- 1  4.96e- 6      4.23
 7 mu         0.7     1.24       8.53e- 1  8.48e- 8      6.01
 8 mu         0.8     0.971      2.84e- 1  7.47e-13      5.84
 9 mu         0.9     1.07       1.03e- 3  5.65e-22     17.4 
10 mu_1       0.1     0.207      1.12e-12  1.39e-38     13.7 
11 mu_1       0.2     1.26       4.30e- 7  9.64e-26     41.0 
12 mu_1       0.3     1.48       5.53e- 4  2.76e-18     33.0 
13 mu_1       0.4     1.12       4.70e- 2  4.77e-13     11.1 
14 mu_1       0.5     1.07       4.41e- 1  4.87e- 9     12.1 
15 mu_1       0.6     1.13       9.65e- 1  7.91e- 6      4.20
16 mu_1       0.7     1.24       7.74e- 1  2.88e- 8      6.19
17 mu_1       0.8     0.960      2.13e- 1  2.22e-13      6.00
18 mu_1       0.9     1.09       7.31e- 4  1.49e-22     18.5 
19 mu_0       0.1     0.0803     5.78e-14  0             5.66
20 mu_0       0.2     0.959      4.89e- 8  0            38.1 
21 mu_0       0.3     1.55       1.31e- 4  0            35.9 
22 mu_0       0.4     1.15       1.75e- 2  0            10.9 
23 mu_0       0.5     1.07       3.37e- 1  0            13.8 
24 mu_0       0.6     1.09       8.37e- 1  0             4.28
25 mu_0       0.7     1.26       9.96e- 1  0             5.59
26 mu_0       0.8     1.02       2.80e- 1  0             6.37
27 mu_0       0.9     0.976      3.37e- 3  0            13.8 
[1] "Total run time was 256.947 seconds"
