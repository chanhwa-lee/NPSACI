
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3391"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 38 39 40 41 42 43 44 46 48 
 5  5  2  3  5  3  3  1  2  4  3  4  4  4  5  3  7  5  3  4  4  2  4  3  3  2 
49 50 
 3  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04928 0.40753 0.66014 1.00000 5.37843 
[1] "event indicator table: "

   0    1 
2032 1359 
[1] "treatment indicator table: "

   0    1 
1157 2234 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1759
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1632
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 197.115 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.477 0.0524
 2 mu         0.1   0.2 0.593 0.0542
 3 mu         0.1   0.3 0.754 0.0895
 4 mu         0.1   0.4 0.791 0.0831
 5 mu         0.1   0.5 0.858 0.0915
 6 mu         0.2   0.1 0.357 0.0651
 7 mu         0.2   0.2 0.481 0.0413
 8 mu         0.2   0.3 0.587 0.0540
 9 mu         0.2   0.4 0.638 0.0570
10 mu         0.2   0.5 0.678 0.0583
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.23         1.08     0.0141      5.45
 2 mu         0.2      1.06         1.05     0.299       2.32
 3 mu         0.3      1.04         1.03     0.451       1.59
 4 mu         0.4      0.998        0.987    0.534       1.58
 5 mu         0.5      0.986        0.976    0.616       1.32
 6 mu         0.6      0.997        0.996    0.680       1.44
 7 mu         0.7      0.999        1.01     0.805       1.29
 8 mu         0.8      0.992        0.998    0.716       1.36
 9 mu         0.9      0.958        0.953    0.394       1.38
10 mu_1       0.1      1.14         1.04     0.0345      3.87
11 mu_1       0.2      1.05         1.06     0.320       1.90
12 mu_1       0.3      1.03         1.01     0.436       1.60
13 mu_1       0.4      0.993        0.968    0.572       1.57
14 mu_1       0.5      0.986        0.971    0.610       1.31
15 mu_1       0.6      0.997        0.990    0.700       1.44
16 mu_1       0.7      0.999        1.00     0.792       1.32
17 mu_1       0.8      0.991        0.996    0.713       1.35
18 mu_1       0.9      0.957        0.948    0.385       1.37
19 mu_0       0.1      1.24         1.05     0.0119      5.63
20 mu_0       0.2      1.07         1.05     0.294       2.48
21 mu_0       0.3      1.05         1.03     0.450       1.58
22 mu_0       0.4      1.00         0.987    0.508       1.59
23 mu_0       0.5      0.986        0.982    0.622       1.38
24 mu_0       0.6      0.995        0.986    0.650       1.44
25 mu_0       0.7      0.999        1.00     0.795       1.29
26 mu_0       0.8      0.995        0.994    0.727       1.42
27 mu_0       0.9      0.972        0.980    0.478       1.41
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.242     1.15e-14  2.88e-37     11.0 
 2 mu         0.2      1.06      3.26e- 8  2.81e-24     24.1 
 3 mu         0.3      0.984     1.27e- 4  6.56e-18     16.4 
 4 mu         0.4      0.949     1.18e- 2  2.06e-13      9.62
 5 mu         0.5      1.12      1.31e- 1  6.36e-10     15.8 
 6 mu         0.6      1.06      3.54e- 1  4.51e- 7      6.75
 7 mu         0.7      1.08      5.69e- 1  1.86e- 9      8.85
 8 mu         0.8      1.36      6.24e- 1  1.10e-14     13.1 
 9 mu         0.9      1.15      2.44e- 2  5.82e-24      7.66
10 mu_1       0.1      0.441     8.39e-14  2.59e-36     16.9 
11 mu_1       0.2      1.17      1.07e- 7  1.26e-23     24.1 
12 mu_1       0.3      0.930     2.62e- 4  2.19e-17     13.4 
13 mu_1       0.4      0.984     2.21e- 2  5.16e-13     11.5 
14 mu_1       0.5      1.12      1.56e- 1  1.27e- 9     15.0 
15 mu_1       0.6      1.05      3.01e- 1  7.51e- 7      6.98
16 mu_1       0.7      1.10      6.57e- 1  4.76e-10      9.03
17 mu_1       0.8      1.37      6.11e- 1  2.46e-15     13.7 
18 mu_1       0.9      1.14      1.91e- 2  1.16e-24      8.27
19 mu_0       0.1      0.220     3.15e-15  0            10.3 
20 mu_0       0.2      1.04      1.41e- 8  0            24.1 
21 mu_0       0.3      1.01      6.89e- 5  0            17.8 
22 mu_0       0.4      0.925     4.95e- 3  0             8.39
23 mu_0       0.5      1.12      6.78e- 2  0            16.5 
24 mu_0       0.6      1.07      2.73e- 1  0             6.41
25 mu_0       0.7      1.04      4.48e- 1  0             8.43
26 mu_0       0.8      1.31      4.75e- 1  0            10.9 
27 mu_0       0.9      1.22      2.31e- 2  0             9.51
[1] "Total run time was 200.289 seconds"
