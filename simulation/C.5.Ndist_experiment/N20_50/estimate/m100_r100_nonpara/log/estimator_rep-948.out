
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3408"
[1] "cluster size dist'n: "

20 21 22 23 24 25 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 
 7  6  5  3  4  3  2  2  1  2  4  4  3  5  1  6  5  3  3  1  2  4  4  3  2  4 
47 48 49 50 
 1  3  4  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04183 0.38168 0.63623 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
2029 1379 
[1] "treatment indicator table: "

   0    1 
1278 2130 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1669
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1739
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 90"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 263.208 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.370 0.0646
 2 mu         0.1   0.2 0.427 0.0680
 3 mu         0.1   0.3 0.514 0.0789
 4 mu         0.1   0.4 0.534 0.0842
 5 mu         0.1   0.5 0.559 0.0847
 6 mu         0.2   0.1 0.331 0.0342
 7 mu         0.2   0.2 0.405 0.0367
 8 mu         0.2   0.3 0.490 0.0498
 9 mu         0.2   0.4 0.531 0.0546
10 mu         0.2   0.5 0.564 0.0524
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.846        0.441  0.000335      5.77
 2 mu         0.2      0.986        0.916  0.0722        2.90
 3 mu         0.3      1.02         0.976  0.297         2.51
 4 mu         0.4      1.00         0.967  0.668         1.61
 5 mu         0.5      1.03         1.03   0.665         1.35
 6 mu         0.6      1.03         1.02   0.738         1.47
 7 mu         0.7      0.998        1.00   0.665         1.28
 8 mu         0.8      0.972        0.969  0.664         1.32
 9 mu         0.9      0.952        0.933  0.406         1.92
10 mu_1       0.1      0.865        0.640  0.000942      3.64
11 mu_1       0.2      1.02         0.967  0.115         2.97
12 mu_1       0.3      1.01         0.958  0.368         2.36
13 mu_1       0.4      1.01         0.986  0.665         1.55
14 mu_1       0.5      1.03         1.03   0.673         1.30
15 mu_1       0.6      1.03         1.01   0.756         1.49
16 mu_1       0.7      0.996        1.00   0.660         1.26
17 mu_1       0.8      0.970        0.965  0.657         1.31
18 mu_1       0.9      0.953        0.929  0.391         1.96
19 mu_0       0.1      0.843        0.403  0.000267      6.00
20 mu_0       0.2      0.976        0.882  0.0615        2.89
21 mu_0       0.3      1.02         0.977  0.263         2.58
22 mu_0       0.4      1.00         0.960  0.646         1.65
23 mu_0       0.5      1.02         1.03   0.652         1.39
24 mu_0       0.6      1.03         1.03   0.713         1.44
25 mu_0       0.7      1.00         1.01   0.677         1.37
26 mu_0       0.8      0.979        0.968  0.646         1.34
27 mu_0       0.9      0.948        0.936  0.487         1.62
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.315     2.84e-11  4.03e-40     12.3 
 2 mu         0.2      1.65      5.69e- 6  1.77e-26     40.9 
 3 mu         0.3      1.55      1.83e- 3  1.31e-18     28.6 
 4 mu         0.4      1.14      4.58e- 2  3.94e-13      9.13
 5 mu         0.5      1.06      3.40e- 1  5.45e- 9     11.3 
 6 mu         0.6      1.04      6.92e- 1  4.39e- 6      5.40
 7 mu         0.7      1.19      4.60e- 1  2.75e-10      9.25
 8 mu         0.8      1.09      2.37e- 1  1.42e-16      8.65
 9 mu         0.9      0.930     1.25e- 3  8.37e-28     10.9 
10 mu_1       0.1      0.546     1.64e-10  3.70e-39     16.0 
11 mu_1       0.2      1.85      1.65e- 5  8.14e-26     42.2 
12 mu_1       0.3      1.44      4.27e- 3  4.00e-18     22.4 
13 mu_1       0.4      1.12      7.27e- 2  9.06e-13      9.71
14 mu_1       0.5      1.05      3.55e- 1  1.00e- 8     10.6 
15 mu_1       0.6      1.04      5.53e- 1  1.49e- 6      5.87
16 mu_1       0.7      1.19      3.78e- 1  8.02e-11      9.01
17 mu_1       0.8      1.08      2.30e- 1  3.62e-17      8.46
18 mu_1       0.9      0.939     8.54e- 4  1.90e-28     11.1 
19 mu_0       0.1      0.289     1.19e-11  0            11.9 
20 mu_0       0.2      1.60      2.93e- 6  0            40.7 
21 mu_0       0.3      1.60      7.84e- 4  0            31.2 
22 mu_0       0.4      1.16      2.66e- 2  0             8.74
23 mu_0       0.5      1.07      2.61e- 1  0            12.1 
24 mu_0       0.6      1.03      6.54e- 1  0             5.62
25 mu_0       0.7      1.19      6.31e- 1  0             9.81
26 mu_0       0.8      1.13      2.31e- 1  0             9.40
27 mu_0       0.9      0.847     3.30e- 3  0             9.10
[1] "Total run time was 266.331 seconds"
