
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3500"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 6  3  4  6  1  4  1  1  2  2  2  6  2  6  4  3  1  4  5  2  3  2  3  1  4  3 
46 47 48 49 50 
 2  5  4  2  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04006 0.36266 0.60832 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
2093 1407 
[1] "treatment indicator table: "

   0    1 
1227 2273 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1724
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 25"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 90"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1776
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 56"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 183.846 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.380 0.104 
 2 mu         0.1   0.2 0.488 0.123 
 3 mu         0.1   0.3 0.570 0.148 
 4 mu         0.1   0.4 0.677 0.174 
 5 mu         0.1   0.5 0.743 0.195 
 6 mu         0.2   0.1 0.365 0.0479
 7 mu         0.2   0.2 0.472 0.0591
 8 mu         0.2   0.3 0.555 0.0661
 9 mu         0.2   0.4 0.651 0.0782
10 mu         0.2   0.5 0.716 0.0884
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.13         0.194 0.0000177     25.3 
 2 mu         0.2      1.19         0.769 0.0273        11.7 
 3 mu         0.3      1.09         0.989 0.298          2.40
 4 mu         0.4      1.02         1.01  0.421          1.95
 5 mu         0.5      1.00         0.991 0.585          1.44
 6 mu         0.6      0.994        1.01  0.684          1.34
 7 mu         0.7      0.984        0.975 0.705          1.38
 8 mu         0.8      0.983        0.982 0.552          1.46
 9 mu         0.9      0.992        0.973 0.443          1.80
10 mu_1       0.1      1.29         0.390 0.0000591     31.6 
11 mu_1       0.2      1.16         0.847 0.0456         7.56
12 mu_1       0.3      1.08         1.01  0.350          2.22
13 mu_1       0.4      1.01         1.01  0.436          1.86
14 mu_1       0.5      0.999        0.985 0.590          1.40
15 mu_1       0.6      0.993        1.00  0.684          1.33
16 mu_1       0.7      0.983        0.972 0.716          1.39
17 mu_1       0.8      0.984        0.986 0.539          1.47
18 mu_1       0.9      0.992        0.975 0.429          1.82
19 mu_0       0.1      1.12         0.171 0.0000131     24.7 
20 mu_0       0.2      1.20         0.743 0.0227        12.8 
21 mu_0       0.3      1.09         1.01  0.275          2.51
22 mu_0       0.4      1.03         1.00  0.411          2.01
23 mu_0       0.5      1.00         0.999 0.559          1.48
24 mu_0       0.6      0.997        1.01  0.681          1.36
25 mu_0       0.7      0.987        0.989 0.679          1.35
26 mu_0       0.8      0.981        0.976 0.606          1.40
27 mu_0       0.9      0.997        1.01  0.507          1.57
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.465     3.78e-13  3.81e-38     44.9 
 2 mu         0.2      1.61      3.58e- 7  7.44e-25    116.  
 3 mu         0.3      1.22      3.82e- 4  3.20e-17     17.1 
 4 mu         0.4      1.16      1.81e- 2  6.21e-12     16.7 
 5 mu         0.5      1.07      1.96e- 1  5.73e- 8      8.77
 6 mu         0.6      1.05      5.73e- 1  1.39e- 6      6.93
 7 mu         0.7      1.21      7.75e- 1  6.39e-11      8.75
 8 mu         0.8      1.22      5.60e- 1  2.52e-17      6.54
 9 mu         0.9      1.03      9.39e- 3  1.18e-28     15.2 
10 mu_1       0.1      0.807     2.62e-12  3.43e-37     76.4 
11 mu_1       0.2      1.63      1.10e- 6  3.35e-24     99.0 
12 mu_1       0.3      1.24      8.00e- 4  9.61e-17     17.8 
13 mu_1       0.4      1.14      3.22e- 2  1.40e-11     17.4 
14 mu_1       0.5      1.05      2.71e- 1  1.03e- 7      7.93
15 mu_1       0.6      1.05      5.89e- 1  3.94e- 7      6.98
16 mu_1       0.7      1.23      6.16e- 1  1.55e-11      8.93
17 mu_1       0.8      1.20      5.23e- 1  5.37e-18      6.36
18 mu_1       0.9      1.04      7.05e- 3  2.23e-29     16.9 
19 mu_0       0.1      0.427     1.33e-13  0            41.4 
20 mu_0       0.2      1.61      1.35e- 7  0           121.  
21 mu_0       0.3      1.21      1.88e- 4  0            19.3 
22 mu_0       0.4      1.18      8.59e- 3  0            16.2 
23 mu_0       0.5      1.08      1.21e- 1  0            10.2 
24 mu_0       0.6      1.05      5.14e- 1  0             6.86
25 mu_0       0.7      1.17      8.72e- 1  0             8.34
26 mu_0       0.8      1.29      4.77e- 1  0             7.38
27 mu_0       0.9      0.948     2.55e- 2  0            10.6 
[1] "Total run time was 187.001 seconds"
