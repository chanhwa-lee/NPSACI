
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3546"
[1] "cluster size dist'n: "

20 21 22 23 25 26 27 29 30 31 32 33 34 35 36 37 38 39 40 41 42 44 45 46 47 48 
 2  3  3  4  1  6  2  2  5 10  5  3  2  5  5  1  3  3  5  3  1  6  4  1  4  4 
49 50 
 3  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0414  0.3562  0.6114  1.0000  6.0000 
[1] "event indicator table: "

   0    1 
2124 1422 
[1] "treatment indicator table: "

   0    1 
1298 2248 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1748
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1798
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 63"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 252.767 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.530 0.152 
 2 mu         0.1   0.2 0.613 0.160 
 3 mu         0.1   0.3 0.705 0.169 
 4 mu         0.1   0.4 0.754 0.174 
 5 mu         0.1   0.5 0.751 0.176 
 6 mu         0.2   0.1 0.456 0.103 
 7 mu         0.2   0.2 0.547 0.0969
 8 mu         0.2   0.3 0.638 0.102 
 9 mu         0.2   0.4 0.690 0.108 
10 mu         0.2   0.5 0.695 0.0930
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.08        0.0899 0.0000491     17.5 
 2 mu         0.2      1.05        0.831  0.0388         6.20
 3 mu         0.3      1.03        0.987  0.247          2.62
 4 mu         0.4      1.00        0.988  0.483          1.57
 5 mu         0.5      0.990       0.985  0.648          1.35
 6 mu         0.6      1.01        1.02   0.709          1.26
 7 mu         0.7      1.01        1.01   0.798          1.25
 8 mu         0.8      1.00        1.01   0.610          1.35
 9 mu         0.9      1.01        0.989  0.404          1.58
10 mu_1       0.1      1.11        0.195  0.000156      19.5 
11 mu_1       0.2      1.05        0.924  0.0668         6.20
12 mu_1       0.3      1.02        0.997  0.315          2.15
13 mu_1       0.4      0.998       0.994  0.527          1.52
14 mu_1       0.5      0.992       0.997  0.688          1.33
15 mu_1       0.6      1.01        1.01   0.720          1.28
16 mu_1       0.7      1.01        0.999  0.790          1.23
17 mu_1       0.8      1.00        1.01   0.602          1.37
18 mu_1       0.9      1.01        0.983  0.397          1.60
19 mu_0       0.1      1.08        0.0774 0.0000372     17.3 
20 mu_0       0.2      1.06        0.781  0.0318         6.20
21 mu_0       0.3      1.03        0.986  0.218          2.88
22 mu_0       0.4      1.01        0.981  0.454          1.62
23 mu_0       0.5      0.988       0.980  0.608          1.37
24 mu_0       0.6      1.01        1.02   0.694          1.28
25 mu_0       0.7      1.01        1.01   0.789          1.29
26 mu_0       0.8      1.00        1.01   0.643          1.27
27 mu_0       0.9      1.01        0.990  0.470          1.50
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.642     2.41e-13  4.10e-36     42.9 
 2 mu         0.2      1.63      1.04e- 7  2.00e-23     63.4 
 3 mu         0.3      1.62      1.22e- 4  3.83e-16     44.6 
 4 mu         0.4      1.11      1.19e- 2  4.17e-11     13.8 
 5 mu         0.5      0.844     2.26e- 1  2.47e- 7      7.50
 6 mu         0.6      0.907     6.48e- 1  1.08e- 5      4.22
 7 mu         0.7      1.14      1.12e+ 0  2.73e- 9      4.58
 8 mu         0.8      1.15      4.50e- 1  1.41e-14      6.84
 9 mu         0.9      0.860     4.14e- 3  6.64e-24     14.6 
10 mu_1       0.1      1.07      1.63e-12  3.67e-35     67.8 
11 mu_1       0.2      1.64      3.54e- 7  8.96e-23     50.3 
12 mu_1       0.3      1.57      2.81e- 4  1.14e-15     39.7 
13 mu_1       0.4      1.05      1.98e- 2  9.35e-11     11.2 
14 mu_1       0.5      0.844     2.84e- 1  4.42e- 7      7.81
15 mu_1       0.6      0.935     7.23e- 1  2.83e- 6      3.67
16 mu_1       0.7      1.15      1.09e+ 0  6.15e-10      4.91
17 mu_1       0.8      1.15      3.82e- 1  2.78e-15      7.00
18 mu_1       0.9      0.841     3.13e- 3  1.17e-24     15.0 
19 mu_0       0.1      0.594     6.99e-14  4.74e-37     40.2 
20 mu_0       0.2      1.63      4.00e- 8  2.60e-24     66.7 
21 mu_0       0.3      1.64      5.63e- 5  5.70e-17     46.8 
22 mu_0       0.4      1.16      6.56e- 3  7.25e-12     15.5 
23 mu_0       0.5      0.844     1.41e- 1  5.14e- 8      7.19
24 mu_0       0.6      0.865     5.23e- 1  2.27e- 5      5.06
25 mu_0       0.7      1.12      9.43e- 1  7.65e- 9      4.79
26 mu_0       0.8      1.17      6.47e- 1  5.93e-14      6.22
27 mu_0       0.9      1.03      1.32e- 2  5.60e-23     10.9 
[1] "Total run time was 257.316 seconds"
