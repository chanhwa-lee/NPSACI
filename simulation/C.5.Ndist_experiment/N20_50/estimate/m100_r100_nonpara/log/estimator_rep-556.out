
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3491"
[1] "cluster size dist'n: "

20 21 23 24 25 26 27 28 29 30 31 32 33 34 36 37 38 40 41 42 43 44 45 46 47 48 
 4  3  4  4  6  3  3  2  4  3  2  9  4  2  4  3  1  5  3  5  4  2  3  2  3  7 
49 50 
 1  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02626 0.31379 0.60325 1.00000 6.62341 
[1] "event indicator table: "

   0    1 
2078 1413 
[1] "treatment indicator table: "

   0    1 
1379 2112 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1650
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 62"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1841
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 211.457 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.428 0.0611
 2 mu         0.1   0.2 0.465 0.0490
 3 mu         0.1   0.3 0.497 0.0524
 4 mu         0.1   0.4 0.502 0.0520
 5 mu         0.1   0.5 0.524 0.0586
 6 mu         0.2   0.1 0.422 0.0438
 7 mu         0.2   0.2 0.480 0.0367
 8 mu         0.2   0.3 0.512 0.0380
 9 mu         0.2   0.4 0.543 0.0341
10 mu         0.2   0.5 0.588 0.0369
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.873        0.735 0.0000372      4.17
 2 mu         0.2      0.971        0.945 0.0600         2.28
 3 mu         0.3      1.03         1.03  0.311          1.79
 4 mu         0.4      1.03         1.01  0.678          1.64
 5 mu         0.5      0.990        0.983 0.736          1.41
 6 mu         0.6      0.988        0.971 0.706          1.27
 7 mu         0.7      0.992        1.01  0.694          1.31
 8 mu         0.8      1.01         1.01  0.543          1.39
 9 mu         0.9      1.01         1.01  0.374          1.64
10 mu_1       0.1      0.928        0.773 0.000122       4.35
11 mu_1       0.2      0.997        0.949 0.100          1.93
12 mu_1       0.3      1.03         1.03  0.329          1.77
13 mu_1       0.4      1.02         1.01  0.687          1.63
14 mu_1       0.5      0.985        0.979 0.732          1.36
15 mu_1       0.6      0.989        0.974 0.708          1.29
16 mu_1       0.7      0.992        1.00  0.691          1.31
17 mu_1       0.8      1.01         1.01  0.529          1.41
18 mu_1       0.9      1.01         1.01  0.363          1.67
19 mu_0       0.1      0.867        0.702 0.0000277      4.14
20 mu_0       0.2      0.965        0.939 0.0500         2.37
21 mu_0       0.3      1.03         1.03  0.303          1.81
22 mu_0       0.4      1.03         1.02  0.658          1.65
23 mu_0       0.5      0.994        0.978 0.718          1.46
24 mu_0       0.6      0.986        0.979 0.702          1.29
25 mu_0       0.7      0.993        1.00  0.701          1.33
26 mu_0       0.8      1.00         1.00  0.597          1.36
27 mu_0       0.9      1.01         1.04  0.472          1.63
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.78      9.74e-13  5.01e-40     99.4 
 2 mu         0.2      1.93      4.02e- 7  2.20e-26     41.8 
 3 mu         0.3      1.39      5.28e- 4  1.62e-18     26.7 
 4 mu         0.4      1.05      4.13e- 2  4.90e-13     11.3 
 5 mu         0.5      0.974     2.53e- 1  6.78e- 9      5.08
 6 mu         0.6      1.06      5.83e- 1  2.87e- 9      7.33
 7 mu         0.7      1.09      7.09e- 1  5.47e-14      4.38
 8 mu         0.8      1.12      2.16e- 1  7.35e-21      8.44
 9 mu         0.9      1.26      5.58e- 4  6.77e-33     36.4 
10 mu_1       0.1      2.23      6.08e-12  4.61e-39    106.  
11 mu_1       0.2      1.75      1.28e- 6  1.01e-25     35.2 
12 mu_1       0.3      1.28      1.11e- 3  4.98e-18     26.7 
13 mu_1       0.4      1.01      4.67e- 2  1.13e-12      8.44
14 mu_1       0.5      0.971     2.75e- 1  1.25e- 8      5.54
15 mu_1       0.6      1.07      5.64e- 1  6.12e-10      7.13
16 mu_1       0.7      1.09      6.98e- 1  9.97e-15      4.59
17 mu_1       0.8      1.12      1.89e- 1  1.17e-21      8.44
18 mu_1       0.9      1.28      3.99e- 4  9.60e-34     37.9 
19 mu_0       0.1      1.73      3.30e-13  0            98.6 
20 mu_0       0.2      1.97      1.72e- 7  0            46.7 
21 mu_0       0.3      1.44      2.79e- 4  0            26.7 
22 mu_0       0.4      1.08      2.50e- 2  0            13.1 
23 mu_0       0.5      0.977     1.67e- 1  0             4.65
24 mu_0       0.6      1.05      5.23e- 1  0             7.63
25 mu_0       0.7      1.08      4.74e- 1  0             4.23
26 mu_0       0.8      1.12      2.94e- 1  0             8.44
27 mu_0       0.9      1.08      1.43e- 3  0            22.8 
[1] "Total run time was 215.175 seconds"
