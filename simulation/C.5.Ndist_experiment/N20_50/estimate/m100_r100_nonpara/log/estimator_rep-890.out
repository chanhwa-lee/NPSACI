
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3473"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 4  2  5  4  6  2  2  2  6  2  4  3  1  2  1  3  6  3  4  4  2  2  5  2  3  4 
46 47 48 49 50 
 2  4  4  4  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02185 0.29474 0.57519 0.97597 7.00000 
[1] "event indicator table: "

   0    1 
2050 1423 
[1] "treatment indicator table: "

   0    1 
1384 2089 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1710
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1763
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 553.088 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.520 0.129 
 2 mu         0.1   0.2 0.573 0.127 
 3 mu         0.1   0.3 0.671 0.157 
 4 mu         0.1   0.4 0.751 0.201 
 5 mu         0.1   0.5 0.777 0.192 
 6 mu         0.2   0.1 0.404 0.0670
 7 mu         0.2   0.2 0.475 0.0679
 8 mu         0.2   0.3 0.550 0.0812
 9 mu         0.2   0.4 0.621 0.107 
10 mu         0.2   0.5 0.650 0.0986
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      0.981        0.499 0.00000891     12.8 
 2 mu         0.2      0.910        0.848 0.0190          2.47
 3 mu         0.3      0.968        0.937 0.306           1.75
 4 mu         0.4      1.02         0.990 0.671           1.48
 5 mu         0.5      1.01         1.00  0.645           1.54
 6 mu         0.6      1.01         0.997 0.740           1.29
 7 mu         0.7      1.01         1.01  0.743           1.28
 8 mu         0.8      1.02         1.03  0.642           1.57
 9 mu         0.9      1.01         0.987 0.271           1.99
10 mu_1       0.1      0.945        0.685 0.0000317       5.45
11 mu_1       0.2      0.908        0.890 0.0348          2.12
12 mu_1       0.3      0.983        0.958 0.382           1.79
13 mu_1       0.4      1.02         0.985 0.682           1.52
14 mu_1       0.5      1.01         1.01  0.659           1.52
15 mu_1       0.6      1.01         1.00  0.755           1.29
16 mu_1       0.7      1.01         1.01  0.723           1.30
17 mu_1       0.8      1.02         1.03  0.638           1.57
18 mu_1       0.9      1.01         0.985 0.256           1.99
19 mu_0       0.1      0.985        0.474 0.00000638     13.7 
20 mu_0       0.2      0.910        0.841 0.0151          2.62
21 mu_0       0.3      0.962        0.935 0.273           1.73
22 mu_0       0.4      1.02         0.987 0.652           1.52
23 mu_0       0.5      1.02         1.00  0.631           1.57
24 mu_0       0.6      1.01         0.980 0.719           1.33
25 mu_0       0.7      1.01         1.00  0.736           1.26
26 mu_0       0.8      1.01         0.998 0.652           1.56
27 mu_0       0.9      1.02         1.02  0.406           2.05
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      3.84      1.42e-12  5.59e-33    375.  
 2 mu         0.2      1.25      1.16e- 6  1.28e-21     56.2 
 3 mu         0.3      1.57      1.06e- 3  3.20e-15     26.2 
 4 mu         0.4      1.51      3.82e- 2  9.86e-11     28.5 
 5 mu         0.5      0.961     4.22e- 1  2.64e- 7      8.64
 6 mu         0.6      0.960     6.45e- 1  4.02e- 5      5.55
 7 mu         0.7      1.11      7.18e- 1  1.88e- 8      5.55
 8 mu         0.8      1.25      1.82e- 1  4.27e-14     13.4 
 9 mu         0.9      1.38      1.99e- 4  2.55e-24     29.4 
10 mu_1       0.1      1.81      1.03e-11  4.70e-32    163.  
11 mu_1       0.2      1.03      3.52e- 6  6.05e-21     15.7 
12 mu_1       0.3      1.63      2.29e- 3  1.01e-14     31.0 
13 mu_1       0.4      1.41      6.06e- 2  2.34e-10     25.3 
14 mu_1       0.5      0.922     4.82e- 1  5.01e- 7      6.13
15 mu_1       0.6      0.979     5.34e- 1  2.91e- 6      6.02
16 mu_1       0.7      1.12      6.67e- 1  5.19e- 9      5.56
17 mu_1       0.8      1.27      1.41e- 1  1.33e-14     14.3 
18 mu_1       0.9      1.37      1.47e- 4  7.09e-25     31.0 
19 mu_0       0.1      4.06      4.89e-13  6.69e-34    398.  
20 mu_0       0.2      1.31      5.38e- 7  8.18e-23     67.1 
21 mu_0       0.3      1.55      4.95e- 4  2.34e-16     24.2 
22 mu_0       0.4      1.57      2.27e- 2  8.43e-12     30.6 
23 mu_0       0.5      1.00      3.71e- 1  2.71e- 8     11.2 
24 mu_0       0.6      0.933     5.13e- 1  1.84e- 5      4.84
25 mu_0       0.7      1.08      5.45e- 1  4.69e- 8      6.46
26 mu_0       0.8      1.16      3.03e- 1  1.60e-13      9.54
27 mu_0       0.9      1.43      6.78e- 4  1.91e-23     20.7 
[1] "Total run time was 557.503 seconds"
