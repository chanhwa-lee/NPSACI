
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3442"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 5  1  5  2  4  2  2  2  3  5  5  3  1  3 10  3  7  1  4  1  3  3  3  5  3  2 
46 47 48 49 50 
 3  1  1  4  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.05007 0.40368 0.64700 1.00000 7.00000 
[1] "event indicator table: "

   0    1 
2048 1394 
[1] "treatment indicator table: "

   0    1 
1182 2260 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1769
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 45"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1673
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 21"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 252.718 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.390 0.105 
 2 mu         0.1   0.2 0.490 0.126 
 3 mu         0.1   0.3 0.659 0.165 
 4 mu         0.1   0.4 0.753 0.171 
 5 mu         0.1   0.5 0.783 0.180 
 6 mu         0.2   0.1 0.314 0.0654
 7 mu         0.2   0.2 0.396 0.0755
 8 mu         0.2   0.3 0.521 0.106 
 9 mu         0.2   0.4 0.595 0.0978
10 mu         0.2   0.5 0.642 0.101 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      1.18         0.159 0.00000102      17.8 
 2 mu         0.2      0.995        0.776 0.00417          4.31
 3 mu         0.3      1.02         0.978 0.133            2.67
 4 mu         0.4      1.01         0.983 0.418            1.91
 5 mu         0.5      0.991        0.984 0.600            1.56
 6 mu         0.6      0.995        0.991 0.623            1.59
 7 mu         0.7      1.01         0.998 0.739            1.31
 8 mu         0.8      1.02         1.04  0.647            1.40
 9 mu         0.9      0.979        1.01  0.342            1.62
10 mu_1       0.1      1.13         0.323 0.00000382      10.4 
11 mu_1       0.2      0.976        0.865 0.00803          3.24
12 mu_1       0.3      1.02         0.994 0.158            2.30
13 mu_1       0.4      1.00         1.00  0.446            1.87
14 mu_1       0.5      0.991        0.988 0.604            1.50
15 mu_1       0.6      0.997        0.992 0.638            1.62
16 mu_1       0.7      1.01         1.01  0.734            1.31
17 mu_1       0.8      1.02         1.04  0.651            1.40
18 mu_1       0.9      0.976        1.00  0.319            1.64
19 mu_0       0.1      1.19         0.142 0.000000714     18.7 
20 mu_0       0.2      1.00         0.747 0.00320          4.83
21 mu_0       0.3      1.02         0.947 0.114            2.82
22 mu_0       0.4      1.01         0.980 0.384            1.97
23 mu_0       0.5      0.992        0.998 0.592            1.62
24 mu_0       0.6      0.994        0.991 0.599            1.55
25 mu_0       0.7      1.01         0.998 0.750            1.39
26 mu_0       0.8      1.02         1.02  0.632            1.39
27 mu_0       0.9      1.01         1.01  0.461            1.45
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.632     8.35e-15  1.20e-30     55.8 
 2 mu         0.2      1.55      8.63e- 9  5.17e-20     60.2 
 3 mu         0.3      1.57      3.87e- 5  4.41e-14     52.6 
 4 mu         0.4      1.24      4.96e- 3  5.74e-10     28.9 
 5 mu         0.5      1.35      1.43e- 1  7.86e- 7     24.6 
 6 mu         0.6      1.29      5.53e- 1  1.45e- 5     17.3 
 7 mu         0.7      1.30      1.13e+ 0  1.41e- 9      7.05
 8 mu         0.8      1.15      7.56e- 1  1.25e-15      5.08
 9 mu         0.9      0.916     1.62e- 2  1.66e-26     15.0 
10 mu_1       0.1      1.00      5.80e-14  1.08e-29     83.6 
11 mu_1       0.2      1.59      3.08e- 8  2.33e-19     45.2 
12 mu_1       0.3      1.50      8.85e- 5  1.39e-13     55.8 
13 mu_1       0.4      1.20      8.55e- 3  1.35e- 9     23.0 
14 mu_1       0.5      1.36      1.91e- 1  1.48e- 6     26.2 
15 mu_1       0.6      1.28      5.35e- 1  5.42e- 6     15.4 
16 mu_1       0.7      1.31      1.04e+ 0  4.52e-10      6.99
17 mu_1       0.8      1.13      7.30e- 1  3.50e-16      5.08
18 mu_1       0.9      0.917     1.27e- 2  4.13e-27     15.8 
19 mu_0       0.1      0.591     2.28e-15  1.34e-31     52.7 
20 mu_0       0.2      1.53      3.08e- 9  4.12e-21     64.0 
21 mu_0       0.3      1.60      1.59e- 5  3.50e-15     51.2 
22 mu_0       0.4      1.27      2.66e- 3  5.31e-11     32.9 
23 mu_0       0.5      1.33      8.60e- 2  8.73e- 8     23.1 
24 mu_0       0.6      1.31      4.47e- 1  2.81e- 5     20.3 
25 mu_0       0.7      1.28      1.03e+ 0  3.65e- 9      7.18
26 mu_0       0.8      1.24      7.03e- 1  4.84e-15      5.59
27 mu_0       0.9      0.909     4.82e- 2  1.29e-25      9.25
[1] "Total run time was 257.734 seconds"
