
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3571"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 2  5  3  3  2  2  3  5  1  1  3  5  4  2  4  5  1  1  5  2  3  7  5  4  4  1 
46 47 48 49 50 
 3  2  3  4  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04493 0.34957 0.62659 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
2164 1407 
[1] "treatment indicator table: "

   0    1 
1277 2294 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1727
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 19"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1844
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 76"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 236.659 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.430 0.0704
 2 mu         0.1   0.2 0.486 0.0717
 3 mu         0.1   0.3 0.587 0.0865
 4 mu         0.1   0.4 0.640 0.0913
 5 mu         0.1   0.5 0.694 0.112 
 6 mu         0.2   0.1 0.365 0.0441
 7 mu         0.2   0.2 0.425 0.0304
 8 mu         0.2   0.3 0.518 0.0425
 9 mu         0.2   0.4 0.563 0.0430
10 mu         0.2   0.5 0.612 0.0614
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      1.06         0.518 0.000000308      9.87
 2 mu         0.2      1.00         0.898 0.00303          3.09
 3 mu         0.3      0.959        0.962 0.160            1.99
 4 mu         0.4      0.980        0.981 0.524            1.70
 5 mu         0.5      0.996        0.991 0.602            1.28
 6 mu         0.6      0.996        0.999 0.684            1.30
 7 mu         0.7      0.995        0.998 0.728            1.44
 8 mu         0.8      1.01         1.00  0.667            1.37
 9 mu         0.9      1.01         1.01  0.473            1.52
10 mu_1       0.1      1.04         0.714 0.00000127       8.11
11 mu_1       0.2      0.998        0.951 0.00635          2.61
12 mu_1       0.3      0.958        0.975 0.228            1.81
13 mu_1       0.4      0.986        0.982 0.588            1.72
14 mu_1       0.5      0.996        0.982 0.611            1.27
15 mu_1       0.6      0.995        1.00  0.685            1.31
16 mu_1       0.7      0.995        0.996 0.728            1.44
17 mu_1       0.8      1.01         1.00  0.667            1.37
18 mu_1       0.9      1.01         1.01  0.464            1.54
19 mu_0       0.1      1.07         0.486 0.000000201     10.1 
20 mu_0       0.2      1.01         0.863 0.00220          3.22
21 mu_0       0.3      0.960        0.982 0.131            2.07
22 mu_0       0.4      0.977        0.971 0.476            1.68
23 mu_0       0.5      0.995        0.987 0.593            1.31
24 mu_0       0.6      0.996        0.983 0.683            1.28
25 mu_0       0.7      0.996        0.996 0.727            1.45
26 mu_0       0.8      1.00         1.00  0.665            1.35
27 mu_0       0.9      1.02         1.03  0.557            1.51
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.01      1.16e-13  4.50e-41     55.4 
 2 mu         0.2      2.63      5.91e- 8  2.23e-27     96.6 
 3 mu         0.3      1.73      5.77e- 5  1.88e-19     26.3 
 4 mu         0.4      1.31      1.19e- 2  6.61e-14     17.2 
 5 mu         0.5      1.13      1.28e- 1  1.10e- 9      7.20
 6 mu         0.6      1.12      4.92e- 1  2.47e- 6      5.73
 7 mu         0.7      1.36      6.29e- 1  1.70e- 8     12.6 
 8 mu         0.8      1.18      5.45e- 1  3.80e-14      6.59
 9 mu         0.9      0.970     1.14e- 2  1.28e-24      8.86
10 mu_1       0.1      1.72      6.79e-13  4.23e-40     86.5 
11 mu_1       0.2      2.55      2.01e- 7  1.04e-26     89.0 
12 mu_1       0.3      1.59      1.41e- 4  5.88e-19     16.1 
13 mu_1       0.4      1.27      2.09e- 2  1.55e-13     16.4 
14 mu_1       0.5      1.11      1.74e- 1  2.06e- 9      7.73
15 mu_1       0.6      1.14      5.56e- 1  3.86e- 6      6.22
16 mu_1       0.7      1.37      5.73e- 1  5.53e- 9     12.6 
17 mu_1       0.8      1.15      4.91e- 1  1.23e-14      6.42
18 mu_1       0.9      0.976     8.47e- 3  3.69e-25      9.12
19 mu_0       0.1      0.936     5.30e-14  0            51.9 
20 mu_0       0.2      2.65      1.92e- 8  0            98.5 
21 mu_0       0.3      1.78      2.38e- 5  0            30.6 
22 mu_0       0.4      1.34      5.85e- 3  0            17.8 
23 mu_0       0.5      1.15      7.87e- 2  0             7.85
24 mu_0       0.6      1.10      4.16e- 1  0             6.64
25 mu_0       0.7      1.32      6.17e- 1  0            12.6 
26 mu_0       0.8      1.28      5.05e- 1  0             7.25
27 mu_0       0.9      0.914     2.35e- 2  0             8.84
[1] "Total run time was 240.903 seconds"
