
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3503"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 4  1  3  3  1  6  1  6  7  3  3  3  3  3  4  3  2  2  2  2  5  5  1  4  3  4 
46 47 48 49 50 
 2  3  3  5  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03586 0.33032 0.59818 1.00000 7.00000 
[1] "event indicator table: "

   0    1 
2102 1401 
[1] "treatment indicator table: "

   0    1 
1253 2250 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1800
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 94"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1703
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 63"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 225.278 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.449 0.113 
 2 mu         0.1   0.2 0.487 0.102 
 3 mu         0.1   0.3 0.507 0.0859
 4 mu         0.1   0.4 0.559 0.111 
 5 mu         0.1   0.5 0.580 0.118 
 6 mu         0.2   0.1 0.392 0.0498
 7 mu         0.2   0.2 0.439 0.0512
 8 mu         0.2   0.3 0.508 0.0479
 9 mu         0.2   0.4 0.552 0.0513
10 mu         0.2   0.5 0.589 0.0604
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      0.821        0.421 0.00000169      5.12
 2 mu         0.2      0.928        0.876 0.00530         3.04
 3 mu         0.3      0.953        0.950 0.144           1.80
 4 mu         0.4      0.976        0.973 0.326           1.45
 5 mu         0.5      0.999        0.998 0.557           1.40
 6 mu         0.6      1.01         1.00  0.730           1.44
 7 mu         0.7      1.00         1.02  0.689           1.34
 8 mu         0.8      1.01         1.01  0.621           1.27
 9 mu         0.9      0.974        0.985 0.431           1.54
10 mu_1       0.1      0.885        0.611 0.00000620      5.52
11 mu_1       0.2      0.942        0.912 0.00999         2.63
12 mu_1       0.3      0.958        0.931 0.192           1.86
13 mu_1       0.4      0.980        0.983 0.313           1.43
14 mu_1       0.5      1.00         1.00  0.580           1.44
15 mu_1       0.6      1.01         1.00  0.703           1.44
16 mu_1       0.7      1.00         1.00  0.696           1.32
17 mu_1       0.8      1.01         1.00  0.623           1.27
18 mu_1       0.9      0.974        0.990 0.410           1.55
19 mu_0       0.1      0.814        0.395 0.00000118      5.07
20 mu_0       0.2      0.924        0.879 0.00413         3.14
21 mu_0       0.3      0.951        0.936 0.123           1.77
22 mu_0       0.4      0.974        0.966 0.335           1.48
23 mu_0       0.5      0.997        0.991 0.494           1.41
24 mu_0       0.6      1.01         0.986 0.751           1.46
25 mu_0       0.7      1.00         1.02  0.671           1.43
26 mu_0       0.8      1.01         1.01  0.613           1.31
27 mu_0       0.9      0.979        0.992 0.501           1.42
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      3.34      1.04e-14  5.58e-42    236.  
 2 mu         0.2      1.39      2.03e- 8  4.91e-29     42.6 
 3 mu         0.3      0.826     4.76e- 5  1.83e-21     17.4 
 4 mu         0.4      1.10      1.33e- 2  4.32e-16      9.87
 5 mu         0.5      1.12      2.12e- 1  6.34e-12     10.2 
 6 mu         0.6      1.33      6.55e- 1  5.63e- 9     10.2 
 7 mu         0.7      1.39      8.86e- 1  1.40e-13      7.82
 8 mu         0.8      1.15      3.65e- 1  3.24e-20      4.99
 9 mu         0.9      0.751     2.68e- 3  9.43e-32      8.18
10 mu_1       0.1      3.21      7.15e-14  5.58e-41    220.  
11 mu_1       0.2      1.14      7.17e- 8  2.45e-28     43.7 
12 mu_1       0.3      0.866     1.10e- 4  6.10e-21     11.9 
13 mu_1       0.4      1.15      2.10e- 2  1.08e-15     11.1 
14 mu_1       0.5      1.12      3.05e- 1  1.27e-11      9.26
15 mu_1       0.6      1.35      7.79e- 1  8.73e-10     10.5 
16 mu_1       0.7      1.39      1.03e+ 0  1.86e-14      8.15
17 mu_1       0.8      1.12      2.98e- 1  3.76e-21      4.87
18 mu_1       0.9      0.744     1.87e- 3  9.74e-33      8.46
19 mu_0       0.1      3.36      3.63e-15  0           238.  
20 mu_0       0.2      1.45      6.89e- 9  0            43.3 
21 mu_0       0.3      0.809     2.28e- 5  0            19.7 
22 mu_0       0.4      1.06      7.68e- 3  0             9.40
23 mu_0       0.5      1.13      1.19e- 1  0            11.1 
24 mu_0       0.6      1.30      4.96e- 1  0             9.87
25 mu_0       0.7      1.41      1.07e+ 0  0             7.66
26 mu_0       0.8      1.23      4.36e- 1  0             6.74
27 mu_0       0.9      0.821     5.99e- 3  0             7.23
[1] "Total run time was 228.58 seconds"
