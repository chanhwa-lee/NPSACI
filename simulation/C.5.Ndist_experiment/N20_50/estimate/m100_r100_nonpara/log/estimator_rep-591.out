
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3348"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 4  7  1  5  4  2  4  4  5  4  2  2  4  3  4  3  3  5  6  1  2  1  4  4  3  1 
46 48 49 50 
 1  6  2  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03394 0.31719 0.59338 1.00000 5.00000 
[1] "event indicator table: "

   0    1 
1943 1405 
[1] "treatment indicator table: "

   0    1 
1359 1989 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1705
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1643
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 237.633 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.359 0.0720
 2 mu         0.1   0.2 0.441 0.104 
 3 mu         0.1   0.3 0.436 0.125 
 4 mu         0.1   0.4 0.533 0.0898
 5 mu         0.1   0.5 0.549 0.104 
 6 mu         0.2   0.1 0.342 0.0515
 7 mu         0.2   0.2 0.416 0.0672
 8 mu         0.2   0.3 0.441 0.0956
 9 mu         0.2   0.4 0.565 0.0717
10 mu         0.2   0.5 0.603 0.0915
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.973        0.467  0.000727     10.7 
 2 mu         0.2      1.04         0.858  0.127         3.26
 3 mu         0.3      1.03         1.02   0.466         2.15
 4 mu         0.4      1.01         1.01   0.656         1.43
 5 mu         0.5      1.01         0.994  0.769         1.33
 6 mu         0.6      1.00         0.994  0.810         1.25
 7 mu         0.7      0.997        0.988  0.736         1.23
 8 mu         0.8      1.01         0.996  0.617         1.47
 9 mu         0.9      0.966        0.940  0.109         2.71
10 mu_1       0.1      1.03         0.778  0.00208       5.59
11 mu_1       0.2      1.04         0.924  0.189         3.27
12 mu_1       0.3      1.03         1.01   0.493         1.98
13 mu_1       0.4      1.01         1.00   0.642         1.44
14 mu_1       0.5      1.01         0.993  0.793         1.29
15 mu_1       0.6      1.00         0.992  0.797         1.26
16 mu_1       0.7      0.998        0.994  0.733         1.23
17 mu_1       0.8      1.01         0.994  0.596         1.51
18 mu_1       0.9      0.963        0.938  0.100         2.74
19 mu_0       0.1      0.966        0.429  0.000576     11.3 
20 mu_0       0.2      1.04         0.879  0.111         3.26
21 mu_0       0.3      1.03         1.03   0.437         2.23
22 mu_0       0.4      1.01         1.01   0.622         1.45
23 mu_0       0.5      1.01         0.999  0.745         1.37
24 mu_0       0.6      1.00         1.00   0.814         1.23
25 mu_0       0.7      0.996        0.991  0.737         1.25
26 mu_0       0.8      1.00         1.01   0.670         1.29
27 mu_0       0.9      0.988        0.977  0.189         2.49
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.103      2.99e-11  6.66e-36      6.07
 2 mu         0.2     0.780      5.85e- 6  5.78e-23     25.9 
 3 mu         0.3     0.868      2.62e- 3  1.45e-15     16.0 
 4 mu         0.4     0.943      9.56e- 2  1.81e-10      4.94
 5 mu         0.5     1.09       5.45e- 1  8.62e- 7      6.64
 6 mu         0.6     1.06       9.79e- 1  5.88e- 5      3.75
 7 mu         0.7     1.04       6.38e- 1  1.77e- 8      4.31
 8 mu         0.8     0.931      9.57e- 2  9.12e-14      7.04
 9 mu         0.9     2.24       3.27e- 4  1.74e-23     62.2 
10 mu_1       0.1     0.212      1.84e-10  5.86e-35     11.6 
11 mu_1       0.2     0.904      1.85e- 5  2.54e-22     29.5 
12 mu_1       0.3     0.863      5.90e- 3  4.26e-15     12.1 
13 mu_1       0.4     0.977      1.49e- 1  3.98e-10      4.98
14 mu_1       0.5     1.09       5.79e- 1  1.60e- 6      6.64
15 mu_1       0.6     1.06       9.24e- 1  2.10e- 5      3.96
16 mu_1       0.7     1.03       5.59e- 1  5.43e- 9      4.43
17 mu_1       0.8     0.942      6.84e- 2  2.44e-14      7.58
18 mu_1       0.9     2.33       2.25e- 4  4.40e-24     64.2 
19 mu_0       0.1     0.0911     1.32e-11  0             5.46
20 mu_0       0.2     0.749      2.90e- 6  0            25.2 
21 mu_0       0.3     0.869      1.27e- 3  0            17.6 
22 mu_0       0.4     0.920      6.30e- 2  0             5.11
23 mu_0       0.5     1.09       4.15e- 1  0             6.64
24 mu_0       0.6     1.05       8.97e- 1  0             3.68
25 mu_0       0.7     1.05       5.47e- 1  0             4.16
26 mu_0       0.8     0.885      1.85e- 1  0             5.96
27 mu_0       0.9     1.52       9.59e- 4  0            44.5 
[1] "Total run time was 241.481 seconds"
