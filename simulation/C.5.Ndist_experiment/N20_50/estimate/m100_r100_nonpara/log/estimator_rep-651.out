
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3461"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 33 34 35 36 37 38 39 40 41 42 43 44 45 46 
 5  4  3  2  3  3  4  6  6  3  2  2  3  8  2  1  2  3  4  3  1  3  1  5  2  4 
47 48 49 50 
 1  6  5  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03343 0.34331 0.60737 1.00000 5.49261 
[1] "event indicator table: "

   0    1 
2044 1417 
[1] "treatment indicator table: "

   0    1 
1370 2091 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1716
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1745
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 56"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 72"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 82"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 380.418 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.248 0.0491
 2 mu         0.1   0.2 0.333 0.0581
 3 mu         0.1   0.3 0.377 0.0544
 4 mu         0.1   0.4 0.401 0.0627
 5 mu         0.1   0.5 0.468 0.0805
 6 mu         0.2   0.1 0.279 0.0329
 7 mu         0.2   0.2 0.353 0.0356
 8 mu         0.2   0.3 0.410 0.0257
 9 mu         0.2   0.4 0.440 0.0274
10 mu         0.2   0.5 0.505 0.0448
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.826        0.475   0.0107       7.00
 2 mu         0.2      0.913        0.860   0.184        2.23
 3 mu         0.3      0.980        0.965   0.394        1.64
 4 mu         0.4      1.01         0.994   0.587        1.44
 5 mu         0.5      1.01         1.02    0.739        1.35
 6 mu         0.6      1.01         1.00    0.769        1.29
 7 mu         0.7      0.993        1.00    0.705        1.23
 8 mu         0.8      0.998        0.996   0.460        1.36
 9 mu         0.9      0.984        0.990   0.339        1.76
10 mu_1       0.1      0.812        0.586   0.0263       6.13
11 mu_1       0.2      0.939        0.870   0.264        1.94
12 mu_1       0.3      0.992        0.975   0.442        1.58
13 mu_1       0.4      1.01         0.993   0.597        1.46
14 mu_1       0.5      1.01         1.02    0.739        1.34
15 mu_1       0.6      1.01         1.01    0.771        1.27
16 mu_1       0.7      0.993        1.00    0.676        1.24
17 mu_1       0.8      0.998        0.986   0.468        1.38
18 mu_1       0.9      0.981        0.988   0.316        1.79
19 mu_0       0.1      0.828        0.451   0.00900      7.10
20 mu_0       0.2      0.906        0.840   0.163        2.36
21 mu_0       0.3      0.975        0.952   0.373        1.66
22 mu_0       0.4      1.01         0.989   0.581        1.42
23 mu_0       0.5      1.01         1.03    0.738        1.36
24 mu_0       0.6      1.01         1.00    0.767        1.31
25 mu_0       0.7      0.994        0.995   0.765        1.21
26 mu_0       0.8      0.997        0.992   0.430        1.29
27 mu_0       0.9      1.01         1.02    0.546        1.53
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.418     4.58e-11  8.57e-37     25.0 
 2 mu         0.2      0.758     5.26e- 6  4.71e-24     25.7 
 3 mu         0.3      0.705     2.86e- 3  1.03e-16      6.61
 4 mu         0.4      1.01      1.01e- 1  1.31e-11      7.38
 5 mu         0.5      1.07      6.39e- 1  9.28e- 8      7.94
 6 mu         0.6      1.04      7.35e- 1  2.55e- 8      4.05
 7 mu         0.7      1.06      6.11e- 1  5.65e-13      4.58
 8 mu         0.8      1.04      1.31e- 1  8.68e-20      5.15
 9 mu         0.9      1.28      3.12e- 4  9.00e-32     14.1 
10 mu_1       0.1      0.651     2.76e-10  7.84e-36     36.5 
11 mu_1       0.2      0.743     1.57e- 5  2.15e-23     20.8 
12 mu_1       0.3      0.752     6.22e- 3  3.14e-16      6.51
13 mu_1       0.4      1.04      1.52e- 1  3.00e-11      8.27
14 mu_1       0.5      1.06      6.06e- 1  1.70e- 7      7.22
15 mu_1       0.6      1.04      7.65e- 1  6.19e- 9      3.91
16 mu_1       0.7      1.05      5.34e- 1  1.18e-13      4.80
17 mu_1       0.8      1.04      9.68e- 2  1.58e-20      5.55
18 mu_1       0.9      1.28      2.08e- 4  1.46e-32     14.8 
19 mu_0       0.1      0.392     1.71e-11  8.10e-38     23.8 
20 mu_0       0.2      0.762     2.54e- 6  5.01e-25     27.3 
21 mu_0       0.3      0.685     1.42e- 3  1.25e-17      6.66
22 mu_0       0.4      0.980     6.60e- 2  1.86e-12      7.38
23 mu_0       0.5      1.07      5.12e- 1  1.58e- 8      8.66
24 mu_0       0.6      1.02      6.49e- 1  5.44e- 8      4.25
25 mu_0       0.7      1.07      5.91e- 1  1.61e-12      4.14
26 mu_0       0.8      0.998     2.37e- 1  3.71e-19      5.16
27 mu_0       0.9      1.29      1.25e- 3  7.69e-31     12.0 
[1] "Total run time was 385.542 seconds"
