
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3492"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 39 40 41 42 43 44 45 46 
 1  4  3  5  6  2  2  3  2  2  3  2  4  5  3  7  8  2  2  1  3  4  4  2  4  6 
47 48 49 50 
 2  2  3  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04579 0.37932 0.62041 1.00000 7.00000 
[1] "event indicator table: "

   0    1 
2116 1376 
[1] "treatment indicator table: "

   0    1 
1187 2305 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1754
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 18"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1738
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 343.48 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.456 0.0754
 2 mu         0.1   0.2 0.569 0.0973
 3 mu         0.1   0.3 0.584 0.0958
 4 mu         0.1   0.4 0.689 0.104 
 5 mu         0.1   0.5 0.688 0.104 
 6 mu         0.2   0.1 0.384 0.0347
 7 mu         0.2   0.2 0.481 0.0462
 8 mu         0.2   0.3 0.514 0.0419
 9 mu         0.2   0.4 0.593 0.0441
10 mu         0.2   0.5 0.617 0.0438
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      1.13         0.472 0.00000907      7.71
 2 mu         0.2      1.06         0.951 0.0123          3.56
 3 mu         0.3      0.991        0.973 0.241           1.78
 4 mu         0.4      1.00         0.984 0.586           1.97
 5 mu         0.5      1.01         1.00  0.690           1.69
 6 mu         0.6      1.02         1.01  0.736           1.27
 7 mu         0.7      1.01         1.01  0.768           1.37
 8 mu         0.8      0.993        0.971 0.630           1.34
 9 mu         0.9      0.975        0.973 0.457           1.31
10 mu_1       0.1      1.19         0.796 0.0000311       5.96
11 mu_1       0.2      1.03         0.935 0.0219          3.25
12 mu_1       0.3      0.991        0.965 0.312           1.66
13 mu_1       0.4      1.01         0.973 0.578           2.00
14 mu_1       0.5      1.02         1.01  0.714           1.60
15 mu_1       0.6      1.02         1.02  0.750           1.28
16 mu_1       0.7      1.01         1.00  0.771           1.36
17 mu_1       0.8      0.992        0.972 0.608           1.34
18 mu_1       0.9      0.976        0.970 0.472           1.33
19 mu_0       0.1      1.12         0.436 0.00000663      8.06
20 mu_0       0.2      1.07         0.938 0.00985         3.66
21 mu_0       0.3      0.992        0.973 0.208           1.89
22 mu_0       0.4      1.00         0.987 0.545           1.96
23 mu_0       0.5      1.01         0.995 0.666           1.78
24 mu_0       0.6      1.02         1.01  0.714           1.29
25 mu_0       0.7      1.01         1.01  0.730           1.37
26 mu_0       0.8      0.998        0.987 0.661           1.37
27 mu_0       0.9      0.967        0.981 0.323           1.35
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.171     1.24e-14  1.81e-41      7.76
 2 mu         0.2      1.04      9.21e- 9  1.79e-27     28.6 
 3 mu         0.3      1.31      4.13e- 5  2.26e-19     25.0 
 4 mu         0.4      1.21      1.05e- 2  1.06e-13     11.5 
 5 mu         0.5      0.979     1.78e- 1  2.20e- 9      5.27
 6 mu         0.6      1.07      5.02e- 1  5.94e- 6      5.27
 7 mu         0.7      1.16      9.68e- 1  1.08e- 6      4.89
 8 mu         0.8      1.18      4.67e- 1  7.50e-11      9.25
 9 mu         0.9      1.29      3.35e- 3  8.07e-19     17.5 
10 mu_1       0.1      0.349     9.37e-14  1.70e-40     15.1 
11 mu_1       0.2      1.22      3.72e- 8  8.40e-27     28.6 
12 mu_1       0.3      1.30      9.26e- 5  7.09e-19     23.8 
13 mu_1       0.4      1.17      1.81e- 2  2.49e-13     11.5 
14 mu_1       0.5      0.962     2.46e- 1  4.14e- 9      5.04
15 mu_1       0.6      1.09      5.37e- 1  9.31e- 6      5.37
16 mu_1       0.7      1.16      9.54e- 1  2.98e- 7      4.66
17 mu_1       0.8      1.18      3.97e- 1  2.28e-11      9.51
18 mu_1       0.9      1.30      2.40e- 3  2.18e-19     18.3 
19 mu_0       0.1      0.152     3.17e-15  0             6.95
20 mu_0       0.2      0.993     2.95e- 9  0            28.6 
21 mu_0       0.3      1.32      1.94e- 5  0            25.5 
22 mu_0       0.4      1.24      5.50e- 3  0            11.5 
23 mu_0       0.5      0.996     1.32e- 1  0             5.86
24 mu_0       0.6      1.05      4.59e- 1  0             5.52
25 mu_0       0.7      1.16      9.11e- 1  0             5.43
26 mu_0       0.8      1.16      5.76e- 1  0             8.22
27 mu_0       0.9      1.22      7.97e- 3  0            15.1 
[1] "Total run time was 349.21 seconds"
