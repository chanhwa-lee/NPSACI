
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3408"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 37 38 39 40 42 43 44 45 46 47 
 2  4  1  3  4  5  5  2  3  2  2  3  6  8  5  4  6  7  4  1  5  2  2  5  2  1 
48 49 50 
 1  3  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.01748 0.28648 0.53818 0.91206 4.00000 
[1] "event indicator table: "

   0    1 
2040 1368 
[1] "treatment indicator table: "

   0    1 
1300 2108 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1766
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 87"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1642
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 189.232 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.440 0.0749
 2 mu         0.1   0.2 0.479 0.0610
 3 mu         0.1   0.3 0.538 0.0727
 4 mu         0.1   0.4 0.591 0.0803
 5 mu         0.1   0.5 0.645 0.0855
 6 mu         0.2   0.1 0.402 0.0581
 7 mu         0.2   0.2 0.462 0.0441
 8 mu         0.2   0.3 0.520 0.0552
 9 mu         0.2   0.4 0.572 0.0611
10 mu         0.2   0.5 0.627 0.0609
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.952        0.694   0.00217      6.33
 2 mu         0.2      0.984        0.963   0.204        2.31
 3 mu         0.3      0.981        0.991   0.493        1.37
 4 mu         0.4      0.988        0.994   0.598        1.49
 5 mu         0.5      0.993        0.982   0.685        1.57
 6 mu         0.6      0.989        0.986   0.667        1.39
 7 mu         0.7      1.00         0.996   0.713        1.28
 8 mu         0.8      1.00         0.972   0.698        1.51
 9 mu         0.9      0.998        1.01    0.442        1.68
10 mu_1       0.1      0.938        0.879   0.00593      4.87
11 mu_1       0.2      0.991        1.00    0.289        2.11
12 mu_1       0.3      0.980        0.998   0.563        1.32
13 mu_1       0.4      0.990        1.00    0.590        1.51
14 mu_1       0.5      0.992        0.989   0.698        1.58
15 mu_1       0.6      0.990        0.991   0.669        1.38
16 mu_1       0.7      1.00         1.00    0.706        1.31
17 mu_1       0.8      1.00         0.971   0.686        1.51
18 mu_1       0.9      0.998        0.999   0.438        1.69
19 mu_0       0.1      0.954        0.665   0.00176      6.49
20 mu_0       0.2      0.983        0.948   0.182        2.36
21 mu_0       0.3      0.981        0.984   0.462        1.38
22 mu_0       0.4      0.987        0.997   0.603        1.48
23 mu_0       0.5      0.994        0.987   0.641        1.56
24 mu_0       0.6      0.987        0.983   0.662        1.42
25 mu_0       0.7      1.00         0.998   0.730        1.29
26 mu_0       0.8      1.00         1.00    0.701        1.53
27 mu_0       0.9      1.00         1.01    0.477        1.57
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.726     1.22e-11  6.19e-41     34.2 
 2 mu         0.2      0.713     2.50e- 6  3.06e-27     22.2 
 3 mu         0.3      0.779     2.69e- 3  2.58e-19      9.34
 4 mu         0.4      1.17      8.23e- 2  9.09e-14      7.40
 5 mu         0.5      1.19      5.15e- 1  1.12e- 9      7.73
 6 mu         0.6      1.19      6.43e- 1  2.94e- 8      5.41
 7 mu         0.7      1.24      5.78e- 1  9.94e-13      9.10
 8 mu         0.8      1.24      1.87e- 1  3.00e-19      9.09
 9 mu         0.9      1.25      1.13e- 3  1.11e-30     15.5 
10 mu_1       0.1      1.00      8.67e-11  5.82e-40     45.6 
11 mu_1       0.2      0.632     7.87e- 6  1.44e-26     14.8 
12 mu_1       0.3      0.885     5.39e- 3  8.08e-19      9.25
13 mu_1       0.4      1.21      1.31e- 1  2.13e-13      7.08
14 mu_1       0.5      1.19      4.84e- 1  2.19e- 9      7.73
15 mu_1       0.6      1.19      6.30e- 1  6.53e- 9      5.82
16 mu_1       0.7      1.24      5.26e- 1  1.89e-13      9.10
17 mu_1       0.8      1.24      1.50e- 1  5.01e-20      9.39
18 mu_1       0.9      1.24      7.13e- 4  1.64e-31     15.9 
19 mu_0       0.1      0.695     3.95e-12  4.21e-42     33.0 
20 mu_0       0.2      0.733     1.15e- 6  2.34e-28     24.0 
21 mu_0       0.3      0.734     1.51e- 3  2.26e-20      9.37
22 mu_0       0.4      1.15      5.67e- 2  5.69e-15      7.62
23 mu_0       0.5      1.20      5.36e- 1  5.35e-11      7.73
24 mu_0       0.6      1.18      5.49e- 1  6.37e- 8      5.15
25 mu_0       0.7      1.23      4.36e- 1  2.87e-12      9.10
26 mu_0       0.8      1.23      2.61e- 1  1.30e-18      7.90
27 mu_0       0.9      1.30      4.85e- 3  9.60e-30     12.6 
[1] "Total run time was 192.303 seconds"
