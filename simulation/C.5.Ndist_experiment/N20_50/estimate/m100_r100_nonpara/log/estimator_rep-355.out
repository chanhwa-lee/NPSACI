
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3490"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 39 40 41 42 43 44 45 46 
 1  2  6  3  6  4  2  2  3  5  1  1  7  2  6  6  2  4  2  2  5  2  6  1  2  2 
47 48 49 50 
 3  3  3  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02382 0.34159 0.60168 1.00000 6.59328 
[1] "event indicator table: "

   0    1 
2020 1470 
[1] "treatment indicator table: "

   0    1 
1330 2160 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1783
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1707
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 73"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 238.378 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.407 0.0967
 2 mu         0.1   0.2 0.470 0.0737
 3 mu         0.1   0.3 0.516 0.104 
 4 mu         0.1   0.4 0.565 0.134 
 5 mu         0.1   0.5 0.583 0.122 
 6 mu         0.2   0.1 0.405 0.0661
 7 mu         0.2   0.2 0.489 0.0495
 8 mu         0.2   0.3 0.534 0.0686
 9 mu         0.2   0.4 0.586 0.0897
10 mu         0.2   0.5 0.615 0.0803
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.792        0.366 0.0000519      4.75
 2 mu         0.2      0.946        0.944 0.0444         2.35
 3 mu         0.3      0.970        0.928 0.426          1.61
 4 mu         0.4      1.00         0.984 0.600          1.58
 5 mu         0.5      1.00         1.00  0.694          1.30
 6 mu         0.6      1.01         1.01  0.664          1.27
 7 mu         0.7      1.01         1.01  0.758          1.26
 8 mu         0.8      0.992        0.997 0.583          1.48
 9 mu         0.9      1.00         1.00  0.213          1.73
10 mu_1       0.1      0.887        0.622 0.000165       4.52
11 mu_1       0.2      0.952        0.935 0.0708         2.01
12 mu_1       0.3      0.980        0.939 0.513          1.62
13 mu_1       0.4      1.01         1.01  0.643          1.52
14 mu_1       0.5      1.00         1.01  0.672          1.28
15 mu_1       0.6      1.01         1.01  0.672          1.29
16 mu_1       0.7      1.01         1.01  0.750          1.25
17 mu_1       0.8      0.992        1.00  0.575          1.49
18 mu_1       0.9      1.00         0.994 0.201          1.76
19 mu_0       0.1      0.782        0.335 0.0000393      4.93
20 mu_0       0.2      0.944        0.899 0.0378         2.45
21 mu_0       0.3      0.966        0.939 0.389          1.65
22 mu_0       0.4      1.00         0.982 0.568          1.62
23 mu_0       0.5      1.00         1.00  0.715          1.33
24 mu_0       0.6      1.00         1.01  0.653          1.30
25 mu_0       0.7      1.01         1.00  0.777          1.30
26 mu_0       0.8      0.995        0.992 0.615          1.43
27 mu_0       0.9      1.01         1.01  0.327          1.60
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.230     4.78e-13  8.05e-38      9.75
 2 mu         0.2      1.87      4.04e- 7  8.84e-25     65.8 
 3 mu         0.3      1.44      6.00e- 4  2.90e-17     30.8 
 4 mu         0.4      0.963     5.37e- 2  4.92e-12     11.1 
 5 mu         0.5      1.01      3.92e- 1  4.36e- 8      5.31
 6 mu         0.6      1.06      6.13e- 1  6.01e- 7      6.03
 7 mu         0.7      1.07      7.72e- 1  3.23e-11      4.68
 8 mu         0.8      1.30      1.16e- 1  1.46e-17      7.64
 9 mu         0.9      0.676     2.73e- 4  7.65e-29     11.9 
10 mu_1       0.1      0.488     2.90e-12  7.38e-37     20.1 
11 mu_1       0.2      2.08      1.37e- 6  4.05e-24     70.5 
12 mu_1       0.3      1.28      1.30e- 3  8.86e-17     22.0 
13 mu_1       0.4      0.945     7.78e- 2  1.13e-11     11.4 
14 mu_1       0.5      1.02      4.90e- 1  7.99e- 8      5.53
15 mu_1       0.6      1.05      6.79e- 1  1.88e- 7      6.33
16 mu_1       0.7      1.08      7.84e- 1  8.65e-12      5.18
17 mu_1       0.8      1.29      9.30e- 2  3.41e-18      7.40
18 mu_1       0.9      0.650     1.79e- 4  1.59e-29     12.1 
19 mu_0       0.1      0.202     2.10e-13  7.45e-39      8.61
20 mu_0       0.2      1.81      1.89e- 7  9.21e-26     64.6 
21 mu_0       0.3      1.51      3.20e- 4  3.45e-18     34.6 
22 mu_0       0.4      0.974     3.40e- 2  6.84e-13     11.0 
23 mu_0       0.5      0.994     3.35e- 1  7.27e- 9      5.78
24 mu_0       0.6      1.06      6.30e- 1  1.22e- 6      5.64
25 mu_0       0.7      1.03      8.35e- 1  8.74e-11      5.76
26 mu_0       0.8      1.31      2.26e- 1  5.92e-17      8.60
27 mu_0       0.9      0.913     1.15e- 3  6.21e-28      9.92
[1] "Total run time was 242.006 seconds"
