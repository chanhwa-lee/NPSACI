
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3536"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 29 30 31 32 33 34 35 36 37 38 40 41 42 43 44 45 46 47 
 4  4  2  3  4  5  5  1  3  4  1  2  1  4  8  3  2  2  4  5  4  3  5  4  7  2 
48 49 50 
 2  2  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02565 0.31929 0.59295 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
2088 1448 
[1] "treatment indicator table: "

   0    1 
1361 2175 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1755
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 61"
[1] "     Cluster: 67"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1781
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 197.305 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.538 0.159 
 2 mu         0.1   0.2 0.716 0.220 
 3 mu         0.1   0.3 0.817 0.230 
 4 mu         0.1   0.4 0.865 0.252 
 5 mu         0.1   0.5 0.921 0.266 
 6 mu         0.2   0.1 0.442 0.0479
 7 mu         0.2   0.2 0.551 0.0545
 8 mu         0.2   0.3 0.640 0.0581
 9 mu         0.2   0.4 0.677 0.0624
10 mu         0.2   0.5 0.716 0.0646
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      1.50         0.602 0.0000000680     45.2 
 2 mu         0.2      1.12         0.906 0.00119           8.38
 3 mu         0.3      1.00         0.965 0.0865            2.14
 4 mu         0.4      0.997        0.994 0.545             1.48
 5 mu         0.5      1.02         1.01  0.708             1.37
 6 mu         0.6      1.02         0.997 0.823             1.41
 7 mu         0.7      0.996        0.988 0.661             1.31
 8 mu         0.8      0.977        0.981 0.658             1.39
 9 mu         0.9      0.963        0.966 0.405             1.64
10 mu_1       0.1      1.48         0.792 0.000000288      38.8 
11 mu_1       0.2      1.05         0.913 0.00254           3.66
12 mu_1       0.3      0.997        0.958 0.127             2.11
13 mu_1       0.4      1.00         1.00  0.557             1.46
14 mu_1       0.5      1.02         1.01  0.765             1.39
15 mu_1       0.6      1.02         1.01  0.827             1.37
16 mu_1       0.7      0.993        0.978 0.651             1.34
17 mu_1       0.8      0.976        0.983 0.656             1.41
18 mu_1       0.9      0.963        0.971 0.392             1.66
19 mu_0       0.1      1.50         0.585 0.0000000436     45.9 
20 mu_0       0.2      1.14         0.906 0.000848          9.56
21 mu_0       0.3      1.01         0.960 0.0694            2.14
22 mu_0       0.4      0.995        0.996 0.519             1.56
23 mu_0       0.5      1.02         1.01  0.652             1.41
24 mu_0       0.6      1.02         1.00  0.807             1.45
25 mu_0       0.7      1.00         1.00  0.686             1.26
26 mu_0       0.8      0.979        0.969 0.662             1.40
27 mu_0       0.9      0.964        0.967 0.516             1.57
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.113      3.62e-13  9.66e-40      5.17
 2 mu         0.2     1.61       4.57e- 7  1.34e-26     37.7 
 3 mu         0.3     2.10       9.25e- 4  5.75e-19     42.7 
 4 mu         0.4     1.62       8.10e- 2  1.33e-13     28.2 
 5 mu         0.5     1.32       5.00e- 1  1.69e- 9      9.49
 6 mu         0.6     1.28       7.21e- 1  3.31e- 6     10.7 
 7 mu         0.7     1.29       7.13e- 1  3.57e- 7      6.62
 8 mu         0.8     1.10       1.48e- 1  7.08e-12      5.68
 9 mu         0.9     1.03       1.38e- 4  1.30e-20     14.3 
10 mu_1       0.1     0.264      2.48e-12  9.24e-39     10.6 
11 mu_1       0.2     2.01       1.37e- 6  6.42e-26     46.0 
12 mu_1       0.3     2.01       1.99e- 3  1.83e-18     36.6 
13 mu_1       0.4     1.56       1.26e- 1  3.18e-13     27.6 
14 mu_1       0.5     1.29       4.59e- 1  3.24e- 9      7.43
15 mu_1       0.6     1.28       7.81e- 1  5.27e- 6     10.9 
16 mu_1       0.7     1.29       7.02e- 1  1.28e- 7      6.86
17 mu_1       0.8     1.09       1.12e- 1  2.21e-12      5.55
18 mu_1       0.9     1.04       9.46e- 5  3.52e-21     14.3 
19 mu_0       0.1     0.0961     1.28e-13  0             4.56
20 mu_0       0.2     1.50       2.29e- 7  0            35.7 
21 mu_0       0.3     2.15       4.78e- 4  0            45.4 
22 mu_0       0.4     1.67       5.12e- 2  0            28.6 
23 mu_0       0.5     1.36       4.40e- 1  0            11.6 
24 mu_0       0.6     1.27       7.34e- 1  0            10.5 
25 mu_0       0.7     1.29       5.65e- 1  0             6.59
26 mu_0       0.8     1.16       1.65e- 1  0             6.22
27 mu_0       0.9     1.01       5.07e- 4  0            14.6 
[1] "Total run time was 200.43 seconds"
