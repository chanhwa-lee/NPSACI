
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3540"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 5  6  3  2  3  4  3  3  1  1  3  2  1  5  2  2  3  2  3  7  1  7  4  5  2  5 
46 47 48 49 50 
 2  1  1  2  9 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02571 0.31768 0.59929 0.99810 6.00000 
[1] "event indicator table: "

   0    1 
2102 1438 
[1] "treatment indicator table: "

   0    1 
1359 2181 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1845
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 79"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1695
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 246.933 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.328 0.0478
 2 mu         0.1   0.2 0.387 0.0461
 3 mu         0.1   0.3 0.490 0.0826
 4 mu         0.1   0.4 0.550 0.103 
 5 mu         0.1   0.5 0.557 0.107 
 6 mu         0.2   0.1 0.377 0.0412
 7 mu         0.2   0.2 0.451 0.0391
 8 mu         0.2   0.3 0.568 0.0696
 9 mu         0.2   0.4 0.631 0.0863
10 mu         0.2   0.5 0.642 0.0902
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.822        0.693 0.0000276      3.56
 2 mu         0.2      1.06         0.982 0.0308         4.54
 3 mu         0.3      1.04         1.01  0.399          2.88
 4 mu         0.4      0.982        0.968 0.678          1.61
 5 mu         0.5      0.983        0.974 0.739          1.34
 6 mu         0.6      0.998        1.00  0.758          1.22
 7 mu         0.7      1.00         0.992 0.732          1.41
 8 mu         0.8      1.01         0.996 0.672          1.39
 9 mu         0.9      1.05         1.02  0.486          1.78
10 mu_1       0.1      0.916        0.827 0.0000951      4.61
11 mu_1       0.2      1.08         0.995 0.0556         3.93
12 mu_1       0.3      1.02         1.03  0.477          2.71
13 mu_1       0.4      0.978        0.965 0.677          1.55
14 mu_1       0.5      0.985        0.988 0.730          1.31
15 mu_1       0.6      1.00         1.00  0.755          1.23
16 mu_1       0.7      1.00         0.996 0.728          1.42
17 mu_1       0.8      1.01         1.00  0.653          1.39
18 mu_1       0.9      1.05         1.02  0.468          1.85
19 mu_0       0.1      0.811        0.701 0.0000201      3.54
20 mu_0       0.2      1.06         0.964 0.0246         4.71
21 mu_0       0.3      1.05         1.01  0.366          2.95
22 mu_0       0.4      0.985        0.972 0.654          1.65
23 mu_0       0.5      0.980        0.960 0.745          1.37
24 mu_0       0.6      0.995        1.00  0.762          1.20
25 mu_0       0.7      1.00         0.994 0.741          1.39
26 mu_0       0.8      1.00         1.01  0.735          1.38
27 mu_0       0.9      1.04         1.03  0.450          1.64
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       3.73     2.78e-12  3.61e-42    311.  
 2 mu         0.2       3.16     7.06e- 7  2.01e-28    184.  
 3 mu         0.3       1.64     9.35e- 4  1.94e-20     22.1 
 4 mu         0.4       1.06     6.78e- 2  7.95e-15      8.32
 5 mu         0.5       1.06     3.83e- 1  1.58e-10      6.98
 6 mu         0.6       1.11     8.78e- 1  4.45e- 7      6.14
 7 mu         0.7       1.11     6.61e- 1  3.26e- 8      5.14
 8 mu         0.8       1.08     1.12e- 1  3.33e-13     10.7 
 9 mu         0.9       2.19     2.54e- 4  1.26e-22     56.0 
10 mu_1       0.1       4.82     1.57e-11  3.46e-41    388.  
11 mu_1       0.2       2.53     2.69e- 6  9.62e-28    115.  
12 mu_1       0.3       1.42     1.92e- 3  6.18e-20     18.3 
13 mu_1       0.4       1.02     1.04e- 1  1.90e-14      6.47
14 mu_1       0.5       1.07     4.44e- 1  3.03e-10      7.59
15 mu_1       0.6       1.11     7.80e- 1  7.10e- 7      5.56
16 mu_1       0.7       1.11     6.13e- 1  5.82e- 9      5.29
17 mu_1       0.8       1.09     8.82e- 2  9.68e-14     11.3 
18 mu_1       0.9       2.27     1.75e- 4  3.25e-23     60.5 
19 mu_0       0.1       3.61     1.18e-12  1.67e-43    302.  
20 mu_0       0.2       3.32     2.21e- 7  1.05e-29    201.  
21 mu_0       0.3       1.74     4.86e- 4  1.15e-21     27.7 
22 mu_0       0.4       1.09     4.24e- 2  5.52e-16      9.55
23 mu_0       0.5       1.05     2.83e- 1  1.32e-11      6.40
24 mu_0       0.6       1.10     7.23e- 1  4.63e- 8      7.01
25 mu_0       0.7       1.13     6.76e- 1  9.51e- 8      4.80
26 mu_0       0.8       1.03     1.98e- 1  1.28e-12      8.58
27 mu_0       0.9       1.51     9.66e- 4  9.66e-22     15.5 
[1] "Total run time was 250.893 seconds"
