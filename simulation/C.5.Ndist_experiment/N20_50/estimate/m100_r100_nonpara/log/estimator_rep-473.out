
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3515"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 2  4  4  2  3  2  2  1  2  7  6  5  5  4  2  3  4  2  2  3  4  1  3  4  4  3 
46 47 48 49 50 
 2  2  3  4  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03753 0.36502 0.63886 1.00000 6.76472 
[1] "event indicator table: "

   0    1 
2082 1433 
[1] "treatment indicator table: "

   0    1 
1276 2239 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1745
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 95"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1770
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 19"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 503.026 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.335 0.0974
 2 mu         0.1   0.2 0.406 0.106 
 3 mu         0.1   0.3 0.467 0.128 
 4 mu         0.1   0.4 0.501 0.118 
 5 mu         0.1   0.5 0.536 0.111 
 6 mu         0.2   0.1 0.326 0.0661
 7 mu         0.2   0.2 0.406 0.0691
 8 mu         0.2   0.3 0.476 0.0864
 9 mu         0.2   0.4 0.521 0.0727
10 mu         0.2   0.5 0.562 0.0585
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.940        0.291  0.000182      7.86
 2 mu         0.2      1.06         0.941  0.0807        2.84
 3 mu         0.3      1.08         1.07   0.395         1.74
 4 mu         0.4      1.04         1.00   0.621         1.62
 5 mu         0.5      0.997        0.985  0.686         1.40
 6 mu         0.6      0.985        0.988  0.709         1.27
 7 mu         0.7      0.982        0.977  0.598         1.27
 8 mu         0.8      0.992        1.00   0.634         1.38
 9 mu         0.9      1.02         0.996  0.421         2.02
10 mu_1       0.1      1.03         0.561  0.000556      8.30
11 mu_1       0.2      1.07         1.01   0.136         2.57
12 mu_1       0.3      1.08         1.08   0.431         1.68
13 mu_1       0.4      1.03         1.00   0.619         1.61
14 mu_1       0.5      0.992        0.978  0.695         1.37
15 mu_1       0.6      0.984        0.977  0.707         1.27
16 mu_1       0.7      0.981        0.968  0.588         1.29
17 mu_1       0.8      0.993        1.00   0.621         1.38
18 mu_1       0.9      1.02         0.995  0.399         2.07
19 mu_0       0.1      0.930        0.261  0.000141      7.81
20 mu_0       0.2      1.06         0.951  0.0669        2.95
21 mu_0       0.3      1.08         1.08   0.376         1.82
22 mu_0       0.4      1.05         1.01   0.622         1.64
23 mu_0       0.5      1.00         0.981  0.677         1.44
24 mu_0       0.6      0.986        0.974  0.711         1.27
25 mu_0       0.7      0.983        0.988  0.621         1.23
26 mu_0       0.8      0.986        0.972  0.625         1.39
27 mu_0       0.9      1.02         1.00   0.541         1.65
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.843     2.50e-13  3.26e-37     81.9 
 2 mu         0.2      1.79      2.70e- 7  3.18e-24    134.  
 3 mu         0.3      0.937     4.53e- 4  9.13e-17     23.3 
 4 mu         0.4      1.02      3.58e- 2  1.33e-11      9.14
 5 mu         0.5      1.24      3.31e- 1  9.80e- 8     15.7 
 6 mu         0.6      1.05      8.13e- 1  2.14e- 6      7.07
 7 mu         0.7      1.11      4.75e- 1  1.50e-10      6.43
 8 mu         0.8      1.17      3.13e- 1  1.16e-16      5.84
 9 mu         0.9      0.986     1.77e- 3  1.93e-27     15.2 
10 mu_1       0.1      1.36      1.56e-12  2.93e-36    130.  
11 mu_1       0.2      1.64      8.48e- 7  1.43e-23    107.  
12 mu_1       0.3      0.898     1.01e- 3  2.73e-16     19.8 
13 mu_1       0.4      1.10      5.94e- 2  2.98e-11      9.28
14 mu_1       0.5      1.24      3.32e- 1  1.76e- 7     16.0 
15 mu_1       0.6      1.03      7.53e- 1  5.66e- 7      6.01
16 mu_1       0.7      1.12      5.46e- 1  3.40e-11      6.21
17 mu_1       0.8      1.17      2.47e- 1  2.32e-17      5.68
18 mu_1       0.9      0.972     1.29e- 3  3.42e-28     15.3 
19 mu_0       0.1      0.785     1.04e-13  3.69e-38     76.5 
20 mu_0       0.2      1.83      1.26e- 7  4.06e-25    141.  
21 mu_0       0.3      0.953     2.13e- 4  1.33e-17     24.7 
22 mu_0       0.4      0.975     2.13e- 2  2.26e-12      9.04
23 mu_0       0.5      1.25      2.23e- 1  2.00e- 8     15.4 
24 mu_0       0.6      1.08      7.09e- 1  4.49e- 6      8.65
25 mu_0       0.7      1.10      4.70e- 1  4.20e-10      6.93
26 mu_0       0.8      1.17      4.34e- 1  4.90e-16      6.49
27 mu_0       0.9      1.11      6.18e- 3  1.62e-26     14.2 
[1] "Total run time was 507.416 seconds"
