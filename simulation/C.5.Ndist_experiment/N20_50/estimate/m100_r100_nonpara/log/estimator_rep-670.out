
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3572"
[1] "cluster size dist'n: "

20 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 
 2  5  2  6  2  2  4  3  2  4  2  4  1  2  3  5  3  7  5  1  5  5  6  1  3  2 
47 48 49 50 
 2  6  4  1 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0390  0.3653  0.6188  1.0000  7.0000 
[1] "event indicator table: "

   0    1 
2175 1397 
[1] "treatment indicator table: "

   0    1 
1279 2293 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1779
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1793
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 23"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 231.972 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.573 0.304 
 2 mu         0.1   0.2 0.726 0.386 
 3 mu         0.1   0.3 0.887 0.459 
 4 mu         0.1   0.4 1.05  0.514 
 5 mu         0.1   0.5 1.15  0.568 
 6 mu         0.2   0.1 0.298 0.0518
 7 mu         0.2   0.2 0.393 0.0737
 8 mu         0.2   0.3 0.468 0.0826
 9 mu         0.2   0.4 0.556 0.0781
10 mu         0.2   0.5 0.615 0.0851
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      2.05         0.148 0.00000384     75.1 
 2 mu         0.2      1.16         0.832 0.0140          7.30
 3 mu         0.3      1.01         0.987 0.287           2.32
 4 mu         0.4      0.994        0.980 0.412           1.92
 5 mu         0.5      0.987        0.973 0.640           1.45
 6 mu         0.6      0.997        0.984 0.733           1.46
 7 mu         0.7      1.01         1.01  0.734           1.22
 8 mu         0.8      1.03         1.04  0.577           1.45
 9 mu         0.9      1.05         1.04  0.0887          2.66
10 mu_1       0.1      1.23         0.302 0.0000134      18.1 
11 mu_1       0.2      1.08         0.913 0.0249          4.15
12 mu_1       0.3      0.998        0.963 0.328           2.34
13 mu_1       0.4      0.992        1.00  0.430           1.89
14 mu_1       0.5      0.987        0.978 0.648           1.45
15 mu_1       0.6      0.998        0.985 0.748           1.44
16 mu_1       0.7      1.01         0.999 0.747           1.23
17 mu_1       0.8      1.03         1.05  0.554           1.48
18 mu_1       0.9      1.05         1.04  0.0791          2.62
19 mu_0       0.1      2.14         0.130 0.00000277     81.5 
20 mu_0       0.2      1.18         0.789 0.0113          8.62
21 mu_0       0.3      1.02         0.991 0.255           2.31
22 mu_0       0.4      0.995        0.975 0.397           1.95
23 mu_0       0.5      0.986        0.973 0.627           1.48
24 mu_0       0.6      0.995        0.978 0.710           1.48
25 mu_0       0.7      1.00         1.00  0.703           1.22
26 mu_0       0.8      1.01         1.02  0.659           1.39
27 mu_0       0.9      1.06         1.06  0.175           3.00
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.0299     5.64e-13  4.98e-37      2.32
 2 mu         0.2     0.413      1.57e- 7  2.73e-24     17.8 
 3 mu         0.3     0.937      4.01e- 4  5.98e-17     18.3 
 4 mu         0.4     1.21       2.60e- 2  7.61e-12     13.7 
 5 mu         0.5     1.14       3.24e- 1  5.39e- 8      6.76
 6 mu         0.6     0.964      6.61e- 1  5.61e- 5      5.25
 7 mu         0.7     1.09       6.93e- 1  8.92e- 8      8.32
 8 mu         0.8     1.40       2.25e- 1  7.86e-13      9.08
 9 mu         0.9     1.57       6.84e- 4  5.94e-22     27.7 
10 mu_1       0.1     0.0751     3.21e-12  4.55e-36      5.79
11 mu_1       0.2     0.556      6.00e- 7  1.25e-23     22.2 
12 mu_1       0.3     1.03       8.60e- 4  1.82e-16     15.3 
13 mu_1       0.4     1.22       4.17e- 2  1.74e-11     13.3 
14 mu_1       0.5     1.11       3.66e- 1  9.86e- 8      7.13
15 mu_1       0.6     0.950      5.55e- 1  7.54e- 5      5.11
16 mu_1       0.7     1.11       6.30e- 1  3.03e- 8      8.72
17 mu_1       0.8     1.41       1.81e- 1  2.34e-13      9.23
18 mu_1       0.9     1.55       4.86e- 4  1.57e-22     28.1 
19 mu_0       0.1     0.0249     2.36e-13  4.71e-38      1.93
20 mu_0       0.2     0.378      6.71e- 8  2.91e-25     16.7 
21 mu_0       0.3     0.899      2.05e- 4  7.27e-18     19.6 
22 mu_0       0.4     1.20       1.41e- 2  1.08e-12     13.9 
23 mu_0       0.5     1.17       2.00e- 1  9.17e- 9      6.45
24 mu_0       0.6     0.985      6.57e- 1  1.19e- 5      5.74
25 mu_0       0.7     1.02       6.38e- 1  2.26e- 7      7.40
26 mu_0       0.8     1.33       3.61e- 1  2.99e-12      9.50
27 mu_0       0.9     1.76       2.47e- 3  4.53e-21     24.1 
[1] "Total run time was 236.263 seconds"
