
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3526"
[1] "cluster size dist'n: "

20 21 22 24 25 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 
 3  6  6  5  2  3  3  2  1  5  1  2  7  4  6  5  2  4  1  2  1  4  1  6  3  3 
48 49 50 
 2  4  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03248 0.33020 0.59777 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
2059 1467 
[1] "treatment indicator table: "

   0    1 
1356 2170 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1755
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1771
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 166.716 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.370 0.0771
 2 mu         0.1   0.2 0.429 0.0615
 3 mu         0.1   0.3 0.452 0.0582
 4 mu         0.1   0.4 0.453 0.0648
 5 mu         0.1   0.5 0.493 0.0598
 6 mu         0.2   0.1 0.380 0.0459
 7 mu         0.2   0.2 0.471 0.0470
 8 mu         0.2   0.3 0.515 0.0461
 9 mu         0.2   0.4 0.532 0.0450
10 mu         0.2   0.5 0.576 0.0400
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.853        0.639   0.0116       3.42
 2 mu         0.2      0.990        0.934   0.307        2.23
 3 mu         0.3      1.01         1.01    0.449        1.40
 4 mu         0.4      1.01         1.02    0.585        1.40
 5 mu         0.5      0.990        0.994   0.583        1.22
 6 mu         0.6      0.974        0.973   0.717        1.28
 7 mu         0.7      0.974        0.983   0.640        1.24
 8 mu         0.8      1.01         1.00    0.643        1.46
 9 mu         0.9      1.04         1.06    0.328        1.73
10 mu_1       0.1      0.921        0.812   0.0280       3.33
11 mu_1       0.2      1.00         0.956   0.317        2.07
12 mu_1       0.3      1.01         1.03    0.475        1.37
13 mu_1       0.4      1.01         1.01    0.621        1.41
14 mu_1       0.5      0.987        0.988   0.579        1.23
15 mu_1       0.6      0.973        0.971   0.727        1.28
16 mu_1       0.7      0.976        0.982   0.629        1.24
17 mu_1       0.8      1.01         1.00    0.633        1.49
18 mu_1       0.9      1.04         1.06    0.324        1.73
19 mu_0       0.1      0.845        0.611   0.00981      3.51
20 mu_0       0.2      0.987        0.923   0.305        2.29
21 mu_0       0.3      1.01         0.998   0.426        1.43
22 mu_0       0.4      1.01         1.03    0.561        1.40
23 mu_0       0.5      0.993        0.996   0.587        1.25
24 mu_0       0.6      0.976        0.973   0.686        1.29
25 mu_0       0.7      0.971        0.980   0.665        1.24
26 mu_0       0.8      0.994        1.01    0.683        1.33
27 mu_0       0.9      1.05         1.05    0.364        1.68
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.827     9.17e-13  5.25e-41     29.8 
 2 mu         0.2      1.71      1.04e- 6  8.21e-28     70.4 
 3 mu         0.3      1.21      6.66e- 4  4.02e-20     19.1 
 4 mu         0.4      0.909     7.92e- 2  1.08e-14      7.95
 5 mu         0.5      1.09      4.39e- 1  1.66e-10      8.73
 6 mu         0.6      1.27      8.68e- 1  4.04e- 7      5.57
 7 mu         0.7      1.10      7.84e- 1  1.53e- 7      5.69
 8 mu         0.8      0.950     1.35e- 1  4.00e-12      5.75
 9 mu         0.9      1.20      1.54e- 4  2.56e-20     14.7 
10 mu_1       0.1      1.37      5.61e-12  5.13e-40     52.5 
11 mu_1       0.2      1.61      3.51e- 6  4.01e-27     62.1 
12 mu_1       0.3      1.09      1.31e- 3  1.31e-19     17.5 
13 mu_1       0.4      0.906     1.22e- 1  2.65e-14      8.45
14 mu_1       0.5      1.13      4.13e- 1  3.24e-10      8.00
15 mu_1       0.6      1.28      8.67e- 1  6.58e- 7      5.57
16 mu_1       0.7      1.08      7.70e- 1  3.86e- 8      5.73
17 mu_1       0.8      0.954     1.01e- 1  8.83e-13      5.90
18 mu_1       0.9      1.21      1.10e- 4  5.92e-21     15.6 
19 mu_0       0.1      0.767     3.66e-13  1.30e-42     27.2 
20 mu_0       0.2      1.73      4.24e- 7  2.28e-29     72.5 
21 mu_0       0.3      1.27      3.88e- 4  1.28e-21     22.4 
22 mu_0       0.4      0.910     5.07e- 2  4.01e-16      9.13
23 mu_0       0.5      1.06      2.85e- 1  7.36e-12      9.46
24 mu_0       0.6      1.27      8.50e- 1  2.24e- 8      5.57
25 mu_0       0.7      1.13      6.35e- 1  4.20e- 7      5.58
26 mu_0       0.8      0.936     1.48e- 1  1.65e-11      5.83
27 mu_0       0.9      1.07      5.57e- 4  1.85e-19      8.66
[1] "Total run time was 181.476 seconds"
