
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3489"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 3  3  2  2  4  4  2  5  4  3  3  4  3  1  5  3  6  3  5  4  4  2  1  2  3  4 
46 47 48 49 50 
 4  1  4  2  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02558 0.32910 0.60252 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
2093 1396 
[1] "treatment indicator table: "

   0    1 
1197 2292 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1767
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 5"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 95"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1722
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 229.831 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.360 0.0686
 2 mu         0.1   0.2 0.471 0.0717
 3 mu         0.1   0.3 0.536 0.0839
 4 mu         0.1   0.4 0.583 0.0910
 5 mu         0.1   0.5 0.615 0.0946
 6 mu         0.2   0.1 0.361 0.0461
 7 mu         0.2   0.2 0.475 0.0437
 8 mu         0.2   0.3 0.541 0.0528
 9 mu         0.2   0.4 0.590 0.0567
10 mu         0.2   0.5 0.629 0.0576
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      1.01         0.208 0.000000435      7.89
 2 mu         0.2      1.12         0.894 0.00291          6.05
 3 mu         0.3      1.04         1.05  0.119            2.35
 4 mu         0.4      1.00         1.00  0.558            1.53
 5 mu         0.5      0.990        0.997 0.569            1.42
 6 mu         0.6      0.994        0.970 0.733            1.37
 7 mu         0.7      1.01         0.993 0.710            1.39
 8 mu         0.8      1.00         0.989 0.682            1.55
 9 mu         0.9      1.02         1.00  0.355            1.93
10 mu_1       0.1      1.09         0.400 0.00000169       7.18
11 mu_1       0.2      1.10         0.977 0.00577          4.87
12 mu_1       0.3      1.03         1.06  0.164            2.30
13 mu_1       0.4      0.999        1.00  0.543            1.48
14 mu_1       0.5      0.990        0.997 0.598            1.39
15 mu_1       0.6      0.995        0.973 0.740            1.39
16 mu_1       0.7      1.01         0.993 0.713            1.39
17 mu_1       0.8      1.00         0.991 0.674            1.54
18 mu_1       0.9      1.02         0.998 0.341            1.96
19 mu_0       0.1      0.999        0.189 0.000000295      8.12
20 mu_0       0.2      1.12         0.882 0.00219          6.35
21 mu_0       0.3      1.04         1.04  0.0993           2.37
22 mu_0       0.4      1.00         0.999 0.533            1.56
23 mu_0       0.5      0.991        0.995 0.539            1.45
24 mu_0       0.6      0.991        0.966 0.723            1.34
25 mu_0       0.7      1.01         0.995 0.705            1.42
26 mu_0       0.8      1.01         1.00  0.714            1.56
27 mu_0       0.9      1.01         0.993 0.487            1.73
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.0344     8.03e-14  3.48e-37      1.54
 2 mu         0.2     0.869      1.92e- 7  1.08e-24     29.1 
 3 mu         0.3     1.66       1.54e- 4  1.79e-17     39.0 
 4 mu         0.4     1.30       1.84e- 2  2.00e-12     26.8 
 5 mu         0.5     1.15       2.18e- 1  1.36e- 8     10.1 
 6 mu         0.6     1.11       6.99e- 1  1.47e- 5      6.31
 7 mu         0.7     1.18       6.67e- 1  1.61e- 7      6.36
 8 mu         0.8     1.26       4.38e- 1  6.26e-13     10.5 
 9 mu         0.9     1.06       4.81e- 3  8.42e-23     10.7 
10 mu_1       0.1     0.0872     5.22e-13  3.25e-36      3.74
11 mu_1       0.2     1.16       6.18e- 7  5.02e-24     37.8 
12 mu_1       0.3     1.67       3.57e- 4  5.58e-17     34.4 
13 mu_1       0.4     1.26       3.08e- 2  4.66e-12     22.9 
14 mu_1       0.5     1.14       1.93e- 1  2.53e- 8      8.53
15 mu_1       0.6     1.10       7.37e- 1  2.29e- 5      5.70
16 mu_1       0.7     1.19       5.87e- 1  6.21e- 8      7.04
17 mu_1       0.8     1.25       3.87e- 1  2.12e-13     10.3 
18 mu_1       0.9     1.04       3.63e- 3  2.53e-23     11.4 
19 mu_0       0.1     0.0285     3.13e-14  2.58e-38      1.29
20 mu_0       0.2     0.796      8.57e- 8  8.96e-26     27.5 
21 mu_0       0.3     1.65       6.59e- 5  1.71e-18     40.9 
22 mu_0       0.4     1.33       1.01e- 2  2.22e-13     29.4 
23 mu_0       0.5     1.15       1.75e- 1  1.81e- 9     11.6 
24 mu_0       0.6     1.13       4.71e- 1  2.45e- 6      7.23
25 mu_0       0.7     1.15       7.58e- 1  3.90e- 7      4.87
26 mu_0       0.8     1.28       4.74e- 1  2.28e-12     11.7 
27 mu_0       0.9     1.16       1.73e- 2  6.14e-22      9.25
[1] "Total run time was 234.053 seconds"
