
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3468"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 3  3  8  3  4  1  4  1  4  4  4  4  1  3  1  3  3  3  4  3  4  2  1  3  6  5 
46 47 48 49 50 
 2  3  8  1  1 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0355  0.3397  0.6187  1.0000  6.6511 
[1] "event indicator table: "

   0    1 
2043 1425 
[1] "treatment indicator table: "

   0    1 
1308 2160 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1659
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 53"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 68"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1809
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 87"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 395.459 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.263 0.0305
 2 mu         0.1   0.2 0.256 0.0498
 3 mu         0.1   0.3 0.326 0.0453
 4 mu         0.1   0.4 0.320 0.0645
 5 mu         0.1   0.5 0.314 0.0884
 6 mu         0.2   0.1 0.316 0.0233
 7 mu         0.2   0.2 0.347 0.0333
 8 mu         0.2   0.3 0.413 0.0321
 9 mu         0.2   0.4 0.428 0.0458
10 mu         0.2   0.5 0.456 0.0623
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      0.736        0.473 0.00000510      3.44
 2 mu         0.2      0.956        0.969 0.0154          2.61
 3 mu         0.3      0.967        0.956 0.336           2.20
 4 mu         0.4      0.962        0.952 0.449           1.44
 5 mu         0.5      0.987        0.985 0.661           1.42
 6 mu         0.6      1.01         0.994 0.620           1.48
 7 mu         0.7      1.02         1.01  0.653           1.51
 8 mu         0.8      1.03         1.02  0.601           1.61
 9 mu         0.9      1.02         0.944 0.295           2.51
10 mu_1       0.1      0.858        0.740 0.0000174       3.24
11 mu_1       0.2      0.971        0.973 0.0278          2.94
12 mu_1       0.3      0.964        0.944 0.374           1.91
13 mu_1       0.4      0.965        0.971 0.459           1.45
14 mu_1       0.5      0.990        0.984 0.674           1.43
15 mu_1       0.6      1.01         0.999 0.641           1.48
16 mu_1       0.7      1.03         1.01  0.641           1.53
17 mu_1       0.8      1.03         1.02  0.605           1.63
18 mu_1       0.9      1.02         0.949 0.281           2.52
19 mu_0       0.1      0.723        0.440 0.00000374      3.54
20 mu_0       0.2      0.953        0.972 0.0123          2.53
21 mu_0       0.3      0.968        0.945 0.303           2.33
22 mu_0       0.4      0.960        0.946 0.441           1.45
23 mu_0       0.5      0.984        0.980 0.630           1.42
24 mu_0       0.6      1.01         0.987 0.589           1.48
25 mu_0       0.7      1.02         1.01  0.679           1.48
26 mu_0       0.8      1.02         1.03  0.584           1.52
27 mu_0       0.9      1.03         0.996 0.395           2.43
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.228     7.17e-13  6.96e-39     16.8 
 2 mu         0.2      0.874     1.33e- 7  8.60e-26     36.4 
 3 mu         0.3      0.971     2.75e- 4  3.23e-18     17.0 
 4 mu         0.4      0.768     3.20e- 2  6.38e-13      5.52
 5 mu         0.5      0.841     1.94e- 1  6.78e- 9      6.22
 6 mu         0.6      1.08      6.22e- 1  5.29e- 6      6.82
 7 mu         0.7      1.19      7.42e- 1  7.86e-10      6.23
 8 mu         0.8      1.22      3.76e- 1  1.37e-15     11.0 
 9 mu         0.9      1.43      2.91e- 3  6.46e-26     22.0 
10 mu_1       0.1      0.370     5.36e-12  6.52e-38     24.1 
11 mu_1       0.2      0.979     4.59e- 7  4.03e-25     38.3 
12 mu_1       0.3      0.938     6.35e- 4  1.01e-17     11.9 
13 mu_1       0.4      0.754     4.87e- 2  1.49e-12      4.96
14 mu_1       0.5      0.875     2.39e- 1  1.27e- 8      6.79
15 mu_1       0.6      1.10      6.87e- 1  1.92e- 6      6.82
16 mu_1       0.7      1.19      6.59e- 1  2.44e-10      6.21
17 mu_1       0.8      1.22      2.80e- 1  3.72e-16     11.3 
18 mu_1       0.9      1.43      2.08e- 3  1.56e-26     22.8 
19 mu_0       0.1      0.212     1.86e-13  4.94e-40     16.0 
20 mu_0       0.2      0.847     6.17e- 8  6.86e-27     35.9 
21 mu_0       0.3      0.986     1.37e- 4  2.94e-19     19.1 
22 mu_0       0.4      0.778     1.87e- 2  6.79e-14      6.37
23 mu_0       0.5      0.807     1.32e- 1  8.66e-10      5.66
24 mu_0       0.6      1.05      4.39e- 1  1.69e- 6      6.82
25 mu_0       0.7      1.17      7.87e- 1  2.05e- 9      6.28
26 mu_0       0.8      1.18      5.21e- 1  5.35e-15     10.1 
27 mu_0       0.9      1.45      8.64e- 3  5.06e-25     18.7 
[1] "Total run time was 399.758 seconds"
