
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3629"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 43 44 45 46 
 4  2  2  1  1  2  4  2  5  1  6  2  2  3  4  3  7  5  1  6  2  4  1  5  4  6 
47 48 49 50 
 6  5  1  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03468 0.37272 0.63083 1.00000 5.00000 
[1] "event indicator table: "

   0    1 
2181 1448 
[1] "treatment indicator table: "

   0    1 
1271 2358 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1806
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 79"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1823
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 171.208 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.285 0.101 
 2 mu         0.1   0.2 0.397 0.0792
 3 mu         0.1   0.3 0.421 0.0935
 4 mu         0.1   0.4 0.461 0.0859
 5 mu         0.1   0.5 0.523 0.0912
 6 mu         0.2   0.1 0.284 0.0795
 7 mu         0.2   0.2 0.370 0.0552
 8 mu         0.2   0.3 0.394 0.0618
 9 mu         0.2   0.4 0.426 0.0509
10 mu         0.2   0.5 0.479 0.0495
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.972        0.682 0.0000709     13.7 
 2 mu         0.2      0.896        0.899 0.0320         2.44
 3 mu         0.3      0.965        0.971 0.324          1.87
 4 mu         0.4      0.983        0.985 0.586          1.33
 5 mu         0.5      0.985        1.01  0.616          1.25
 6 mu         0.6      1.00         1.00  0.666          1.34
 7 mu         0.7      1.01         1.02  0.668          1.25
 8 mu         0.8      1.01         1.01  0.713          1.41
 9 mu         0.9      1.01         0.997 0.436          1.82
10 mu_1       0.1      0.870        0.775 0.000257       6.40
11 mu_1       0.2      0.910        0.900 0.0597         2.16
12 mu_1       0.3      0.975        0.968 0.378          1.92
13 mu_1       0.4      0.983        0.985 0.554          1.29
14 mu_1       0.5      0.987        1.00  0.645          1.26
15 mu_1       0.6      1.00         1.00  0.676          1.35
16 mu_1       0.7      1.01         1.02  0.662          1.24
17 mu_1       0.8      1.01         1.01  0.717          1.40
18 mu_1       0.9      1.01         0.995 0.418          1.88
19 mu_0       0.1      0.984        0.670 0.0000502     14.6 
20 mu_0       0.2      0.892        0.889 0.0251         2.60
21 mu_0       0.3      0.961        0.964 0.300          1.85
22 mu_0       0.4      0.984        0.969 0.586          1.39
23 mu_0       0.5      0.984        0.994 0.588          1.25
24 mu_0       0.6      1.00         0.996 0.650          1.32
25 mu_0       0.7      1.01         1.02  0.681          1.29
26 mu_0       0.8      1.01         1.01  0.678          1.44
27 mu_0       0.9      1.01         0.996 0.596          1.64
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.791     5.25e-15  5.17e-45     70.3 
 2 mu         0.2      0.820     2.20e- 8  7.28e-31     32.4 
 3 mu         0.3      0.706     5.65e- 5  1.38e-22      9.57
 4 mu         0.4      0.773     1.14e- 2  1.02e-16      8.92
 5 mu         0.5      0.927     2.25e- 1  3.68e-12      6.79
 6 mu         0.6      1.18      5.39e- 1  1.94e- 8      5.86
 7 mu         0.7      1.20      9.65e- 1  7.87e-12      4.84
 8 mu         0.8      1.08      4.24e- 1  7.03e-18      5.52
 9 mu         0.9      1.06      7.49e- 3  1.84e-28      9.30
10 mu_1       0.1      1.03      4.05e-14  5.17e-44     85.7 
11 mu_1       0.2      0.761     7.50e- 8  3.64e-30     19.8 
12 mu_1       0.3      0.735     1.25e- 4  4.58e-22     10.4 
13 mu_1       0.4      0.780     1.60e- 2  2.56e-16      8.18
14 mu_1       0.5      0.960     2.11e- 1  7.35e-12      7.34
15 mu_1       0.6      1.19      6.31e- 1  2.33e- 8      5.62
16 mu_1       0.7      1.19      9.54e- 1  1.37e-12      5.08
17 mu_1       0.8      1.07      3.83e- 1  1.07e-18      5.74
18 mu_1       0.9      1.06      5.47e- 3  2.50e-29      9.66
19 mu_0       0.1      0.765     1.33e-15  0            68.6 
20 mu_0       0.2      0.834     8.12e- 9  0            35.6 
21 mu_0       0.3      0.694     2.34e- 5  0             9.22
22 mu_0       0.4      0.769     5.88e- 3  0             9.42
23 mu_0       0.5      0.893     1.41e- 1  0             6.24
24 mu_0       0.6      1.16      3.90e- 1  0             6.73
25 mu_0       0.7      1.20      9.40e- 1  0             5.65
26 mu_0       0.8      1.12      4.68e- 1  0             5.37
27 mu_0       0.9      1.01      2.07e- 2  0             8.78
[1] "Total run time was 182.44 seconds"
