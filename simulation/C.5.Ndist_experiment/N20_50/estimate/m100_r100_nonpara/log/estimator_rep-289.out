
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3609"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 2  6  1  2  1  4  4  1  3  3  2  3  3  1  6  7  2  5  2  1  2  5  3  3  9  3 
46 47 48 49 50 
 1  5  1  4  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03545 0.34608 0.59823 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
2187 1422 
[1] "treatment indicator table: "

   0    1 
1256 2353 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1850
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1759
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 200.219 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.296 0.0650
 2 mu         0.1   0.2 0.371 0.0779
 3 mu         0.1   0.3 0.443 0.0932
 4 mu         0.1   0.4 0.461 0.0918
 5 mu         0.1   0.5 0.495 0.0985
 6 mu         0.2   0.1 0.354 0.0610
 7 mu         0.2   0.2 0.455 0.0728
 8 mu         0.2   0.3 0.548 0.0877
 9 mu         0.2   0.4 0.581 0.0886
10 mu         0.2   0.5 0.627 0.0948
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1      0.694       0.0508 0.0000000146       5.40
 2 mu         0.2      1.02        0.669  0.000560           9.01
 3 mu         0.3      1.01        0.906  0.0530             4.16
 4 mu         0.4      0.983       0.974  0.329              2.00
 5 mu         0.5      0.971       0.947  0.595              1.60
 6 mu         0.6      1.00        0.985  0.769              1.34
 7 mu         0.7      1.01        1.00   0.733              1.27
 8 mu         0.8      1.01        1.02   0.617              1.32
 9 mu         0.9      1.03        1.05   0.370              1.70
10 mu_1       0.1      0.803       0.127  0.0000000599       7.92
11 mu_1       0.2      1.04        0.715  0.00116            7.37
12 mu_1       0.3      1.00        0.923  0.0757             4.09
13 mu_1       0.4      0.981       0.966  0.358              1.72
14 mu_1       0.5      0.973       0.960  0.647              1.56
15 mu_1       0.6      1.00        0.992  0.773              1.35
16 mu_1       0.7      1.01        0.997  0.740              1.27
17 mu_1       0.8      1.01        1.03   0.630              1.33
18 mu_1       0.9      1.03        1.05   0.351              1.72
19 mu_0       0.1      0.682       0.0417 0.00000000962      5.52
20 mu_0       0.2      1.02        0.602  0.000410           9.42
21 mu_0       0.3      1.02        0.911  0.0432             4.19
22 mu_0       0.4      0.985       0.978  0.304              2.19
23 mu_0       0.5      0.970       0.943  0.544              1.64
24 mu_0       0.6      0.994       0.993  0.751              1.41
25 mu_0       0.7      1.01        1.01   0.716              1.31
26 mu_0       0.8      1.01        1.02   0.567              1.29
27 mu_0       0.9      1.03        1.04   0.548              1.60
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       3.59     4.76e-14  3.14e-33    354.  
 2 mu         0.2       7.13     6.24e- 8  3.41e-21    580.  
 3 mu         0.3       2.69     2.10e- 4  1.50e-14     70.9 
 4 mu         0.4       1.66     2.19e- 2  5.16e-10     20.1 
 5 mu         0.5       1.52     3.70e- 1  1.25e- 6     12.4 
 6 mu         0.6       1.40     7.88e- 1  9.23e- 6      7.56
 7 mu         0.7       1.22     5.61e- 1  6.48e-10      9.08
 8 mu         0.8       1.25     4.28e- 1  5.03e-16      5.12
 9 mu         0.9       1.37     1.69e- 3  8.35e-27     15.3 
10 mu_1       0.1       5.75     2.76e-13  2.74e-32    563.  
11 mu_1       0.2       6.29     2.30e- 7  1.49e-20    462.  
12 mu_1       0.3       2.33     4.45e- 4  4.42e-14     49.1 
13 mu_1       0.4       1.64     3.66e- 2  1.14e- 9     16.2 
14 mu_1       0.5       1.51     4.62e- 1  2.21e- 6     12.9 
15 mu_1       0.6       1.38     7.87e- 1  2.45e- 6      7.40
16 mu_1       0.7       1.19     5.44e- 1  1.47e-10      8.83
17 mu_1       0.8       1.27     3.62e- 1  1.00e-16      5.59
18 mu_1       0.9       1.35     1.20e- 3  1.48e-27     15.1 
19 mu_0       0.1       3.35     2.27e-14  0           331.  
20 mu_0       0.2       7.34     2.31e- 8  0           610.  
21 mu_0       0.3       2.84     1.05e- 4  0            85.2 
22 mu_0       0.4       1.67     1.24e- 2  0            22.8 
23 mu_0       0.5       1.53     2.73e- 1  0            11.8 
24 mu_0       0.6       1.43     7.89e- 1  0             9.02
25 mu_0       0.7       1.27     5.41e- 1  0             9.69
26 mu_0       0.8       1.14     6.35e- 1  0             4.37
27 mu_0       0.9       1.51     3.95e- 3  0            16.5 
[1] "Total run time was 203.576 seconds"
