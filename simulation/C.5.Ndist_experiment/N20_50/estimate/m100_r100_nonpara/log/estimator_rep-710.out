
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3611"
[1] "cluster size dist'n: "

20 21 22 23 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 46 47 48 49 
 5  2  6  3  2  3  1  6  3  4  3  4  5  3  4  4  6  3  2  1  2  8  2  5  3  5 
50 
 5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03308 0.34010 0.61020 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
2089 1522 
[1] "treatment indicator table: "

   0    1 
1395 2216 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1811
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 97"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1800
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 244.232 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.480 0.225 
 2 mu         0.1   0.2 0.625 0.293 
 3 mu         0.1   0.3 0.677 0.323 
 4 mu         0.1   0.4 0.750 0.360 
 5 mu         0.1   0.5 0.781 0.391 
 6 mu         0.2   0.1 0.396 0.0760
 7 mu         0.2   0.2 0.529 0.0983
 8 mu         0.2   0.3 0.583 0.0934
 9 mu         0.2   0.4 0.652 0.103 
10 mu         0.2   0.5 0.678 0.0934
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      1.20         0.142 0.00000578     71.3 
 2 mu         0.2      1.08         0.833 0.0113         10.5 
 3 mu         0.3      1.02         1.01  0.0932          2.14
 4 mu         0.4      1.03         1.02  0.352           1.76
 5 mu         0.5      1.02         0.997 0.694           1.46
 6 mu         0.6      0.997        0.999 0.659           1.31
 7 mu         0.7      0.999        1.01  0.760           1.25
 8 mu         0.8      0.989        1.00  0.309           1.86
 9 mu         0.9      0.956        0.961 0.0117          2.69
10 mu_1       0.1      1.21         0.270 0.0000199      51.8 
11 mu_1       0.2      1.08         0.922 0.0208          6.60
12 mu_1       0.3      1.02         0.996 0.130           1.86
13 mu_1       0.4      1.03         1.03  0.435           1.70
14 mu_1       0.5      1.01         0.988 0.709           1.46
15 mu_1       0.6      0.996        1.00  0.664           1.29
16 mu_1       0.7      0.999        1.00  0.743           1.25
17 mu_1       0.8      0.989        1.00  0.286           1.90
18 mu_1       0.9      0.953        0.954 0.0103          2.80
19 mu_0       0.1      1.20         0.126 0.00000421     73.4 
20 mu_0       0.2      1.08         0.822 0.00893        11.4 
21 mu_0       0.3      1.03         1.01  0.0775          2.30
22 mu_0       0.4      1.03         1.02  0.297           1.80
23 mu_0       0.5      1.02         1.01  0.678           1.46
24 mu_0       0.6      0.998        0.982 0.652           1.33
25 mu_0       0.7      0.999        1.01  0.781           1.26
26 mu_0       0.8      0.990        0.987 0.400           1.71
27 mu_0       0.9      0.980        0.980 0.0246          2.24
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.0261     8.58e-12  3.27e-34      2.07
 2 mu         0.2     0.749      1.24e- 6  9.07e-22     48.4 
 3 mu         0.3     0.973      5.95e- 4  1.01e-14     36.2 
 4 mu         0.4     1.04       5.00e- 2  7.10e-10      8.24
 5 mu         0.5     1.14       4.85e- 1  2.70e- 6      6.49
 6 mu         0.6     1.11       8.66e- 1  3.12e- 5      5.45
 7 mu         0.7     1.16       8.22e- 1  3.04e- 9      6.29
 8 mu         0.8     1.44       1.25e- 1  2.68e-15     10.1 
 9 mu         0.9     2.44       1.57e- 4  3.57e-26     53.8 
10 mu_1       0.1     0.0621     5.50e-11  2.81e-33      4.66
11 mu_1       0.2     0.921      4.15e- 6  3.97e-21     54.3 
12 mu_1       0.3     0.973      1.25e- 3  2.95e-14     32.9 
13 mu_1       0.4     1.08       8.01e- 2  1.55e- 9      6.45
14 mu_1       0.5     1.13       5.74e- 1  4.89e- 6      6.31
15 mu_1       0.6     1.12       9.10e- 1  1.17e- 5      5.62
16 mu_1       0.7     1.17       7.87e- 1  9.74e-10      6.95
17 mu_1       0.8     1.49       9.65e- 2  7.53e-16     11.3 
18 mu_1       0.9     2.45       1.08e- 4  8.90e-27     54.6 
19 mu_0       0.1     0.0221     3.42e-12  5.09e-35      1.79
20 mu_0       0.2     0.706      5.02e- 7  1.42e-22     46.9 
21 mu_0       0.3     0.973      3.15e- 4  1.81e-15     37.6 
22 mu_0       0.4     1.01       3.00e- 2  1.48e-10      9.99
23 mu_0       0.5     1.14       4.41e- 1  4.15e- 7      6.66
24 mu_0       0.6     1.11       8.23e- 1  6.04e- 5      5.78
25 mu_0       0.7     1.14       6.69e- 1  7.85e- 9      5.96
26 mu_0       0.8     1.23       2.39e- 1  1.04e-14      9.12
27 mu_0       0.9     2.30       5.94e- 4  2.77e-25     46.1 
[1] "Total run time was 248.591 seconds"
