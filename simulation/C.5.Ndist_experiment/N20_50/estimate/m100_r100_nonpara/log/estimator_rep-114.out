
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3507"
[1] "cluster size dist'n: "

20 21 22 23 24 25 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 44 45 46 47 
 5  2  3  4  1  4  3  2  1  3  1  6  4  6  4  8  5  2  5  1  3  9  2  4  3  2 
48 49 50 
 2  3  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02964 0.31335 0.57407 0.99150 6.00000 
[1] "event indicator table: "

   0    1 
2089 1418 
[1] "treatment indicator table: "

   0    1 
1406 2101 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1680
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 68"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1827
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 187.938 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.306 0.0696
 2 mu         0.1   0.2 0.430 0.0540
 3 mu         0.1   0.3 0.522 0.0666
 4 mu         0.1   0.4 0.544 0.0627
 5 mu         0.1   0.5 0.562 0.0637
 6 mu         0.2   0.1 0.335 0.0424
 7 mu         0.2   0.2 0.459 0.0337
 8 mu         0.2   0.3 0.555 0.0356
 9 mu         0.2   0.4 0.591 0.0345
10 mu         0.2   0.5 0.619 0.0353
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.899        0.469    0.0143      4.38
 2 mu         0.2      0.991        0.938    0.188       2.08
 3 mu         0.3      0.986        0.976    0.554       1.50
 4 mu         0.4      0.987        0.969    0.640       1.37
 5 mu         0.5      0.987        0.987    0.653       1.39
 6 mu         0.6      1.00         1.01     0.785       1.34
 7 mu         0.7      1.01         1.01     0.734       1.23
 8 mu         0.8      1.02         1.01     0.641       1.46
 9 mu         0.9      1.00         0.976    0.163       1.71
10 mu_1       0.1      0.895        0.688    0.0373      3.06
11 mu_1       0.2      0.997        0.974    0.266       1.98
12 mu_1       0.3      0.986        0.981    0.622       1.42
13 mu_1       0.4      0.986        0.981    0.641       1.40
14 mu_1       0.5      0.988        0.985    0.666       1.37
15 mu_1       0.6      1.00         1.01     0.779       1.35
16 mu_1       0.7      1.01         1.02     0.717       1.23
17 mu_1       0.8      1.02         1.01     0.628       1.46
18 mu_1       0.9      1.00         0.970    0.152       1.75
19 mu_0       0.1      0.900        0.433    0.0117      4.67
20 mu_0       0.2      0.990        0.921    0.169       2.15
21 mu_0       0.3      0.986        0.982    0.505       1.54
22 mu_0       0.4      0.987        0.963    0.640       1.39
23 mu_0       0.5      0.986        0.980    0.640       1.41
24 mu_0       0.6      1.00         1.00     0.756       1.37
25 mu_0       0.7      1.01         1.02     0.773       1.25
26 mu_0       0.8      1.02         1.01     0.662       1.44
27 mu_0       0.9      1.01         0.999    0.261       1.55
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.483     1.04e-11  9.71e-39     43.2 
 2 mu         0.2      0.749     3.87e- 6  6.75e-26     20.8 
 3 mu         0.3      0.927     2.71e- 3  1.93e-18     11.2 
 4 mu         0.4      1.14      1.51e- 1  3.34e-13     11.5 
 5 mu         0.5      1.27      6.01e- 1  3.41e- 9      8.74
 6 mu         0.6      1.07      8.35e- 1  5.54e- 6      4.25
 7 mu         0.7      0.897     4.37e- 1  2.53e- 8      4.54
 8 mu         0.8      0.957     3.90e- 2  2.56e-13     10.1 
 9 mu         0.9      1.07      1.26e- 5  3.06e-22     13.8 
10 mu_1       0.1      0.549     5.49e-11  9.28e-38     43.2 
11 mu_1       0.2      0.783     1.13e- 5  3.22e-25     18.5 
12 mu_1       0.3      0.933     5.25e- 3  6.14e-18      9.99
13 mu_1       0.4      1.18      1.84e- 1  7.98e-13     12.5 
14 mu_1       0.5      1.26      6.11e- 1  6.51e- 9      7.60
15 mu_1       0.6      1.04      8.04e- 1  8.82e- 6      4.22
16 mu_1       0.7      0.897     3.46e- 1  7.41e- 9      4.79
17 mu_1       0.8      0.966     2.95e- 2  6.56e-14     10.5 
18 mu_1       0.9      1.08      7.68e- 6  6.97e-23     14.2 
19 mu_0       0.1      0.475     5.13e-12  0            43.2 
20 mu_0       0.2      0.740     2.01e- 6  0            23.3 
21 mu_0       0.3      0.924     1.67e- 3  0            11.8 
22 mu_0       0.4      1.12      1.04e- 1  0            10.9 
23 mu_0       0.5      1.28      5.19e- 1  0             9.88
24 mu_0       0.6      1.11      8.04e- 1  0             4.30
25 mu_0       0.7      0.896     5.35e- 1  0             4.24
26 mu_0       0.8      0.919     6.89e- 2  0             8.63
27 mu_0       0.9      0.936     4.24e- 5  0            11.5 
[1] "Total run time was 190.995 seconds"
