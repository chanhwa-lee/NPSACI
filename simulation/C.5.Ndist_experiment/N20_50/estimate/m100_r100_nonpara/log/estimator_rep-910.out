
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3515"
[1] "cluster size dist'n: "

20 21 22 23 24 25 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 
 6  1  6  2  2  4  3  3  1  4  2  5  4  5  5  6  1  2  2  2  1  4  4  6  3  3 
47 48 49 50 
 4  2  4  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0396  0.3749  0.6287  1.0000  7.0000 
[1] "event indicator table: "

   0    1 
2132 1383 
[1] "treatment indicator table: "

   0    1 
1226 2289 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1801
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1714
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 276.226 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.219 0.0622
 2 mu         0.1   0.2 0.264 0.0690
 3 mu         0.1   0.3 0.256 0.0668
 4 mu         0.1   0.4 0.288 0.0810
 5 mu         0.1   0.5 0.310 0.0762
 6 mu         0.2   0.1 0.296 0.0409
 7 mu         0.2   0.2 0.365 0.0454
 8 mu         0.2   0.3 0.385 0.0468
 9 mu         0.2   0.4 0.422 0.0563
10 mu         0.2   0.5 0.452 0.0555
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.563        0.168 0.0000945      4.97
 2 mu         0.2      0.919        0.831 0.0451         3.40
 3 mu         0.3      0.998        0.951 0.321          1.99
 4 mu         0.4      0.997        1.02  0.482          1.59
 5 mu         0.5      1.01         1.01  0.644          1.38
 6 mu         0.6      1.01         1.02  0.672          1.27
 7 mu         0.7      0.998        0.995 0.732          1.25
 8 mu         0.8      0.991        0.992 0.734          1.42
 9 mu         0.9      0.959        0.947 0.431          1.77
10 mu_1       0.1      0.711        0.344 0.000289       3.81
11 mu_1       0.2      0.961        0.911 0.0817         3.43
12 mu_1       0.3      0.999        0.970 0.374          1.73
13 mu_1       0.4      0.997        1.01  0.470          1.58
14 mu_1       0.5      1.01         1.02  0.674          1.34
15 mu_1       0.6      1.01         1.01  0.672          1.27
16 mu_1       0.7      0.996        0.992 0.734          1.25
17 mu_1       0.8      0.991        0.992 0.722          1.42
18 mu_1       0.9      0.956        0.946 0.420          1.81
19 mu_0       0.1      0.546        0.148 0.0000728      5.10
20 mu_0       0.2      0.909        0.815 0.0359         3.50
21 mu_0       0.3      0.998        0.951 0.298          2.14
22 mu_0       0.4      0.997        1.00  0.490          1.60
23 mu_0       0.5      1.01         1.00  0.614          1.45
24 mu_0       0.6      1.01         1.01  0.672          1.26
25 mu_0       0.7      1.00         0.989 0.726          1.26
26 mu_0       0.8      0.993        0.985 0.759          1.42
27 mu_0       0.9      0.984        0.976 0.522          1.52
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1    0.00226     5.11e-13  5.71e-38    0.0882
 2 mu         0.2    0.106       2.61e- 7  1.98e-25    3.05  
 3 mu         0.3    0.644       4.04e- 4  3.78e-18   12.4   
 4 mu         0.4    1.31        2.76e- 2  4.91e-13   18.5   
 5 mu         0.5    1.24        4.48e- 1  4.00e- 9    7.40  
 6 mu         0.6    0.963       6.05e- 1  5.42e- 6    3.39  
 7 mu         0.7    0.972       6.88e- 1  2.04e- 4    3.88  
 8 mu         0.8    1.18        2.76e- 1  7.85e- 9    6.80  
 9 mu         0.9    1.25        1.57e- 3  3.04e-17   12.9   
10 mu_1       0.1    0.00771     2.89e-12  5.45e-37    0.282 
11 mu_1       0.2    0.187       8.32e- 7  9.46e-25    4.88  
12 mu_1       0.3    0.814       8.71e- 4  1.20e-17   15.2   
13 mu_1       0.4    1.37        4.80e- 2  1.17e-12   17.0   
14 mu_1       0.5    1.19        5.84e- 1  7.65e- 9    7.18  
15 mu_1       0.6    0.940       6.07e- 1  8.63e- 6    3.22  
16 mu_1       0.7    0.980       6.30e- 1  1.07e- 4    4.16  
17 mu_1       0.8    1.19        2.37e- 1  3.60e- 9    7.08  
18 mu_1       0.9    1.24        1.05e- 3  1.24e-17   12.9   
19 mu_0       0.1    0.00166     1.86e-13  2.88e-39    0.0666
20 mu_0       0.2    0.0862      1.20e- 7  1.13e-26    2.59  
21 mu_0       0.3    0.572       1.86e- 4  2.45e-19   11.2   
22 mu_0       0.4    1.27        1.41e- 2  3.72e-14   19.5   
23 mu_0       0.5    1.29        3.00e- 1  3.64e-10    7.63  
24 mu_0       0.6    0.997       6.48e- 1  6.16e- 7    4.04  
25 mu_0       0.7    0.955       5.81e- 1  3.00e- 4    3.39  
26 mu_0       0.8    1.11        4.51e- 1  2.48e- 8    5.66  
27 mu_0       0.9    1.36        6.15e- 3  1.93e-16   13.2   
[1] "Total run time was 280.376 seconds"
