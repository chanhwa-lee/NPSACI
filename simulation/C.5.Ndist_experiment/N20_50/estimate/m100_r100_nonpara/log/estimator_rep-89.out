
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3614"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 1  3  2  2  3  4  3  1  3  4  1  4  2  4  5  3  4  3  5  7  2  2  4  5  4  3 
46 47 48 49 50 
 4  3  4  2  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.05115 0.40264 0.66274 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
2134 1480 
[1] "treatment indicator table: "

   0    1 
1245 2369 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1810
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 60"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1804
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 40"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 210.192 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.297 0.0592
 2 mu         0.1   0.2 0.379 0.0826
 3 mu         0.1   0.3 0.424 0.0871
 4 mu         0.1   0.4 0.450 0.0939
 5 mu         0.1   0.5 0.498 0.0968
 6 mu         0.2   0.1 0.326 0.0323
 7 mu         0.2   0.2 0.420 0.0487
 8 mu         0.2   0.3 0.492 0.0497
 9 mu         0.2   0.4 0.534 0.0511
10 mu         0.2   0.5 0.593 0.0487
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.765        0.150 0.0000301      9.01
 2 mu         0.2      0.970        0.835 0.0467         2.98
 3 mu         0.3      1.02         0.985 0.288          2.21
 4 mu         0.4      1.04         1.03  0.473          1.81
 5 mu         0.5      1.01         0.980 0.566          1.74
 6 mu         0.6      0.999        1.00  0.668          1.35
 7 mu         0.7      0.996        0.989 0.777          1.23
 8 mu         0.8      1.00         1.00  0.729          1.34
 9 mu         0.9      1.02         0.999 0.454          1.88
10 mu_1       0.1      0.861        0.308 0.000101       6.25
11 mu_1       0.2      0.998        0.890 0.0800         2.97
12 mu_1       0.3      1.03         0.978 0.306          2.26
13 mu_1       0.4      1.03         1.01  0.483          1.72
14 mu_1       0.5      1.01         0.980 0.585          1.67
15 mu_1       0.6      0.999        1.00  0.678          1.33
16 mu_1       0.7      0.996        0.992 0.778          1.24
17 mu_1       0.8      1.00         1.00  0.726          1.35
18 mu_1       0.9      1.02         0.995 0.447          1.91
19 mu_0       0.1      0.754        0.134 0.0000222      9.33
20 mu_0       0.2      0.963        0.812 0.0384         2.98
21 mu_0       0.3      1.02         0.977 0.281          2.19
22 mu_0       0.4      1.04         1.03  0.440          1.87
23 mu_0       0.5      1.01         0.984 0.547          1.80
24 mu_0       0.6      1.00         0.995 0.651          1.39
25 mu_0       0.7      0.997        0.989 0.775          1.25
26 mu_0       0.8      0.997        0.999 0.740          1.30
27 mu_0       0.9      1.02         1.02  0.519          1.57
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.0217     3.10e-14  3.30e-48      1.52
 2 mu         0.2     0.506      7.10e- 8  3.72e-33     15.3 
 3 mu         0.3     1.06       2.10e- 4  2.37e-24     24.0 
 4 mu         0.4     1.08       2.44e- 2  4.19e-18     15.5 
 5 mu         0.5     1.16       4.06e- 1  2.93e-13     13.5 
 6 mu         0.6     1.20       6.16e- 1  2.67e- 9      5.31
 7 mu         0.7     1.04       8.45e- 1  1.47e- 6      3.83
 8 mu         0.8     0.958      1.78e- 1  3.32e-11      5.60
 9 mu         0.9     0.775      2.20e- 3  1.13e-19      7.36
10 mu_1       0.1     0.0548     1.97e-13  3.30e-47      3.67
11 mu_1       0.2     0.690      2.46e- 7  1.86e-32     20.7 
12 mu_1       0.3     1.08       4.74e- 4  7.90e-24     21.6 
13 mu_1       0.4     1.09       3.87e- 2  1.05e-17     17.1 
14 mu_1       0.5     1.18       3.50e- 1  5.86e-13     11.9 
15 mu_1       0.6     1.20       6.64e- 1  4.45e- 9      5.19
16 mu_1       0.7     1.03       8.39e- 1  5.62e- 7      3.90
17 mu_1       0.8     0.956      1.56e- 1  1.11e-11      6.00
18 mu_1       0.9     0.764      1.60e- 3  3.37e-20      7.43
19 mu_0       0.1     0.0180     1.25e-14  0             1.28
20 mu_0       0.2     0.461      3.13e- 8  0            14.0 
21 mu_0       0.3     1.04       9.35e- 5  0            25.0 
22 mu_0       0.4     1.07       1.50e- 2  0            14.4 
23 mu_0       0.5     1.15       2.96e- 1  0            15.1 
24 mu_0       0.6     1.21       6.29e- 1  0             6.11
25 mu_0       0.7     1.08       9.80e- 1  0             3.85
26 mu_0       0.8     0.969      3.20e- 1  0             5.01
27 mu_0       0.9     0.879      1.49e- 3  0             8.68
[1] "Total run time was 213.408 seconds"
