
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3451"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 33 34 35 36 37 38 39 40 41 42 43 44 45 46 
 5  3  7  3  1  5  3  2  4  3  1  1  2  3  5  9  4  2  2  3  6  5  2  2  4  2 
47 48 49 50 
 3  2  4  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0341  0.3636  0.6263  1.0000  7.0000 
[1] "event indicator table: "

   0    1 
2072 1379 
[1] "treatment indicator table: "

   0    1 
1244 2207 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1694
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 33"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1757
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 93"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 184.231 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.337 0.0913
 2 mu         0.1   0.2 0.380 0.109 
 3 mu         0.1   0.3 0.469 0.0939
 4 mu         0.1   0.4 0.554 0.111 
 5 mu         0.1   0.5 0.633 0.140 
 6 mu         0.2   0.1 0.303 0.0562
 7 mu         0.2   0.2 0.378 0.0669
 8 mu         0.2   0.3 0.465 0.0686
 9 mu         0.2   0.4 0.526 0.0826
10 mu         0.2   0.5 0.575 0.0971
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.909        0.120  3.21e-16     14.3 
 2 mu         0.2      0.996        0.803  8.51e- 9     13.8 
 3 mu         0.3      1.00         0.988  5.43e- 5      3.20
 4 mu         0.4      0.993        0.979  9.12e- 3      1.73
 5 mu         0.5      0.992        0.986  1.67e- 1      1.45
 6 mu         0.6      0.994        0.985  6.45e- 1      1.32
 7 mu         0.7      1.00         1.01   6.73e- 1      1.61
 8 mu         0.8      0.988        0.992  5.42e- 1      1.52
 9 mu         0.9      0.984        0.962  1.28e- 1      2.23
10 mu_1       0.1      0.926        0.259  1.87e-15     20.4 
11 mu_1       0.2      1.01         0.853  2.49e- 8     10.4 
12 mu_1       0.3      1.01         1.01   1.07e- 4      2.62
13 mu_1       0.4      0.993        0.980  1.35e- 2      1.60
14 mu_1       0.5      0.993        0.984  2.03e- 1      1.44
15 mu_1       0.6      0.995        0.994  6.85e- 1      1.32
16 mu_1       0.7      1.00         1.01   6.78e- 1      1.63
17 mu_1       0.8      0.987        0.989  5.14e- 1      1.50
18 mu_1       0.9      0.984        0.964  1.18e- 1      2.25
19 mu_0       0.1      0.907        0.105  1.48e-16     13.6 
20 mu_0       0.2      0.994        0.781  4.41e- 9     14.7 
21 mu_0       0.3      1.00         0.994  3.20e- 5      3.45
22 mu_0       0.4      0.993        0.969  6.18e- 3      1.88
23 mu_0       0.5      0.991        0.979  1.32e- 1      1.50
24 mu_0       0.6      0.992        0.997  5.85e- 1      1.32
25 mu_0       0.7      1.00         1.01   6.63e- 1      1.54
26 mu_0       0.8      0.992        0.994  6.56e- 1      1.61
27 mu_0       0.9      0.981        0.972  1.86e- 1      2.00
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.146     1.20e-12  1.64e-38     13.8 
 2 mu         0.2      1.46      6.74e- 7  1.81e-25     73.5 
 3 mu         0.3      3.59      4.93e- 4  5.93e-18    191.  
 4 mu         0.4      3.01      4.46e- 2  1.01e-12    112.  
 5 mu         0.5      1.53      5.33e- 1  8.91e- 9     16.4 
 6 mu         0.6      1.19      8.52e- 1  1.11e- 5      6.39
 7 mu         0.7      1.10      5.89e- 1  1.49e- 6      4.55
 8 mu         0.8      1.15      3.05e- 1  6.68e-11      7.03
 9 mu         0.9      1.45      1.56e- 3  9.67e-19     17.3 
10 mu_1       0.1      0.309     8.00e-12  1.51e-37     28.4 
11 mu_1       0.2      1.91      2.00e- 6  8.28e-25     85.6 
12 mu_1       0.3      3.82      1.14e- 3  1.81e-17    200.  
13 mu_1       0.4      2.72      7.56e- 2  2.30e-12     87.9 
14 mu_1       0.5      1.43      5.30e- 1  1.63e- 8     14.1 
15 mu_1       0.6      1.18      7.66e- 1  1.70e- 5      5.89
16 mu_1       0.7      1.09      6.73e- 1  4.39e- 7      4.79
17 mu_1       0.8      1.16      2.53e- 1  1.72e-11      7.53
18 mu_1       0.9      1.46      1.15e- 3  2.60e-19     18.5 
19 mu_0       0.1      0.128     4.44e-13  1.52e-39     12.2 
20 mu_0       0.2      1.35      3.43e- 7  1.88e-26     73.0 
21 mu_0       0.3      3.49      2.36e- 4  7.06e-19    187.  
22 mu_0       0.4      3.21      2.39e- 2  1.40e-13    128.  
23 mu_0       0.5      1.63      3.75e- 1  1.48e- 9     22.5 
24 mu_0       0.6      1.20      7.62e- 1  2.32e- 6      7.77
25 mu_0       0.7      1.12      6.78e- 1  3.95e- 6      4.50
26 mu_0       0.8      1.10      4.14e- 1  2.65e-10      5.44
27 mu_0       0.9      1.41      5.14e- 3  6.52e-18     14.5 
[1] "Total run time was 187.179 seconds"
