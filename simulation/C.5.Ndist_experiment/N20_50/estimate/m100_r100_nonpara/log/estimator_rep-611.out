
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3436"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 40 41 42 43 44 45 46 
 2  9  4  2  3  4  3  5  3  2  3  3  1  1  7  2  1  3  7  4  2  2  7  4  1  1 
47 48 49 50 
 2  3  5  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.01981 0.28049 0.55534 0.93258 6.00000 
[1] "event indicator table: "

   0    1 
2022 1414 
[1] "treatment indicator table: "

   0    1 
1289 2147 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1728
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1708
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 267.555 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.398 0.0533
 2 mu         0.1   0.2 0.451 0.0610
 3 mu         0.1   0.3 0.556 0.0688
 4 mu         0.1   0.4 0.557 0.0649
 5 mu         0.1   0.5 0.596 0.0806
 6 mu         0.2   0.1 0.411 0.0394
 7 mu         0.2   0.2 0.472 0.0433
 8 mu         0.2   0.3 0.585 0.0427
 9 mu         0.2   0.4 0.606 0.0382
10 mu         0.2   0.5 0.637 0.0470
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.775        0.532  0.000857      3.24
 2 mu         0.2      0.933        0.899  0.184         2.10
 3 mu         0.3      1.00         0.994  0.426         1.82
 4 mu         0.4      1.00         0.979  0.646         1.69
 5 mu         0.5      1.01         1.01   0.743         1.34
 6 mu         0.6      1.01         1.00   0.617         1.29
 7 mu         0.7      0.989        0.988  0.663         1.39
 8 mu         0.8      0.986        1.00   0.600         1.37
 9 mu         0.9      1.03         1.01   0.195         2.00
10 mu_1       0.1      0.810        0.746  0.00230       3.24
11 mu_1       0.2      0.956        0.902  0.270         1.97
12 mu_1       0.3      1.00         1.00   0.469         1.81
13 mu_1       0.4      1.00         0.983  0.656         1.65
14 mu_1       0.5      1.01         1.01   0.771         1.33
15 mu_1       0.6      1.01         1.00   0.612         1.29
16 mu_1       0.7      0.988        0.984  0.652         1.40
17 mu_1       0.8      0.987        1.00   0.599         1.39
18 mu_1       0.9      1.04         1.01   0.178         2.03
19 mu_0       0.1      0.771        0.491  0.000697      3.47
20 mu_0       0.2      0.927        0.917  0.163         2.15
21 mu_0       0.3      1.00         0.991  0.407         1.83
22 mu_0       0.4      1.00         0.977  0.608         1.71
23 mu_0       0.5      1.01         1.00   0.715         1.38
24 mu_0       0.6      1.01         1.01   0.625         1.29
25 mu_0       0.7      0.991        0.994  0.688         1.38
26 mu_0       0.8      0.984        0.992  0.602         1.30
27 mu_0       0.9      1.00         1.00   0.347         1.75
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.265     6.02e-13  8.17e-37      8.14
 2 mu         0.2      1.26      7.38e- 7  7.97e-24     23.8 
 3 mu         0.3      1.13      1.22e- 3  2.29e-16     12.9 
 4 mu         0.4      0.917     5.22e- 2  3.33e-11      6.88
 5 mu         0.5      0.995     2.80e- 1  2.46e- 7      4.94
 6 mu         0.6      1.10      5.71e- 1  1.53e- 5      9.98
 7 mu         0.7      1.15      6.38e- 1  1.49e- 9      6.40
 8 mu         0.8      1.31      1.57e- 1  1.32e-15      7.82
 9 mu         0.9      1.51      4.48e- 4  1.75e-26     18.2 
10 mu_1       0.1      0.522     4.19e-12  7.33e-36     14.4 
11 mu_1       0.2      1.40      2.23e- 6  3.58e-23     26.7 
12 mu_1       0.3      1.03      2.87e- 3  6.85e-16     11.1 
13 mu_1       0.4      0.910     8.69e- 2  7.47e-11      7.24
14 mu_1       0.5      1.00      3.01e- 1  4.41e- 7      4.68
15 mu_1       0.6      1.10      4.84e- 1  5.73e- 6     10.1 
16 mu_1       0.7      1.16      6.32e- 1  4.79e-10      6.76
17 mu_1       0.8      1.33      1.19e- 1  3.70e-16      7.89
18 mu_1       0.9      1.51      3.17e- 4  4.37e-27     19.2 
19 mu_0       0.1      0.237     1.75e-13  0             7.45
20 mu_0       0.2      1.22      3.18e- 7  0            23.0 
21 mu_0       0.3      1.17      4.99e- 4  0            14.2 
22 mu_0       0.4      0.922     3.07e- 2  0             6.63
23 mu_0       0.5      0.987     2.22e- 1  0             5.25
24 mu_0       0.6      1.09      5.77e- 1  0             9.87
25 mu_0       0.7      1.12      5.59e- 1  0             5.56
26 mu_0       0.8      1.24      2.53e- 1  0             7.57
27 mu_0       0.9      1.50      1.04e- 3  0            14.9 
[1] "Total run time was 271.862 seconds"
