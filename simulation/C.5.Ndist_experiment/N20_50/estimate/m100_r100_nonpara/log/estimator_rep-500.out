
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3560"
[1] "cluster size dist'n: "

20 21 22 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 
 2  5  4  4  1  6  4  4  6  2  3  1  1  5  1  3  1  3  4  4  4  3  3  5  1  3 
48 49 50 
 5  4  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03938 0.39790 0.63737 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
2161 1399 
[1] "treatment indicator table: "

   0    1 
1268 2292 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1827
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1733
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 191.825 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.234 0.0608
 2 mu         0.1   0.2 0.445 0.0970
 3 mu         0.1   0.3 0.423 0.0837
 4 mu         0.1   0.4 0.423 0.0853
 5 mu         0.1   0.5 0.444 0.0976
 6 mu         0.2   0.1 0.270 0.0241
 7 mu         0.2   0.2 0.414 0.0466
 8 mu         0.2   0.3 0.414 0.0408
 9 mu         0.2   0.4 0.419 0.0463
10 mu         0.2   0.5 0.438 0.0592
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      0.798        0.156 0.00000316      9.46
 2 mu         0.2      0.911        0.812 0.0135          4.46
 3 mu         0.3      1.00         1.02  0.338           2.01
 4 mu         0.4      1.03         1.00  0.584           1.62
 5 mu         0.5      1.02         1.00  0.698           1.43
 6 mu         0.6      0.998        1.01  0.737           1.38
 7 mu         0.7      0.999        0.989 0.732           1.32
 8 mu         0.8      0.995        0.995 0.640           1.44
 9 mu         0.9      0.982        0.984 0.614           1.59
10 mu_1       0.1      0.819        0.332 0.0000113       7.38
11 mu_1       0.2      0.946        0.868 0.0247          3.54
12 mu_1       0.3      1.02         1.02  0.436           1.88
13 mu_1       0.4      1.03         1.01  0.626           1.58
14 mu_1       0.5      1.01         0.982 0.689           1.42
15 mu_1       0.6      0.997        1.00  0.737           1.37
16 mu_1       0.7      0.999        0.993 0.737           1.31
17 mu_1       0.8      0.994        0.991 0.633           1.44
18 mu_1       0.9      0.982        0.989 0.597           1.60
19 mu_0       0.1      0.796        0.137 0.00000226      9.85
20 mu_0       0.2      0.902        0.788 0.0108          4.69
21 mu_0       0.3      0.997        0.992 0.296           2.06
22 mu_0       0.4      1.04         1.03  0.555           1.65
23 mu_0       0.5      1.02         1.00  0.682           1.43
24 mu_0       0.6      0.998        0.995 0.733           1.39
25 mu_0       0.7      0.999        0.991 0.719           1.34
26 mu_0       0.8      0.998        0.990 0.669           1.43
27 mu_0       0.9      0.979        0.974 0.616           1.50
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.0261     3.53e-14  2.71e-38      1.25
 2 mu         0.2     0.610      1.17e- 7  5.57e-26     20.7 
 3 mu         0.3     1.51       3.63e- 4  8.09e-19     32.7 
 4 mu         0.4     1.56       2.08e- 2  9.19e-14     15.6 
 5 mu         0.5     1.17       3.11e- 1  7.20e-10      7.28
 6 mu         0.6     1.08       6.85e- 1  1.02e- 6      5.83
 7 mu         0.7     1.05       6.27e- 1  1.74e- 6      4.95
 8 mu         0.8     0.857      3.33e- 1  1.99e-11      4.29
 9 mu         0.9     0.911      2.40e- 3  1.36e-20      8.86
10 mu_1       0.1     0.0687     2.42e-13  2.48e-37      3.12
11 mu_1       0.2     0.855      3.41e- 7  2.72e-25     27.8 
12 mu_1       0.3     1.59       8.11e- 4  2.63e-18     29.2 
13 mu_1       0.4     1.52       3.58e- 2  2.24e-13     15.6 
14 mu_1       0.5     1.13       3.37e- 1  1.41e- 9      6.11
15 mu_1       0.6     1.08       6.74e- 1  1.65e- 6      5.55
16 mu_1       0.7     1.04       7.19e- 1  7.77e- 7      4.90
17 mu_1       0.8     0.849      2.98e- 1  7.79e-12      4.49
18 mu_1       0.9     0.922      1.84e- 3  4.72e-21      9.11
19 mu_0       0.1     0.0214     1.24e-14  0             1.04
20 mu_0       0.2     0.548      4.62e- 8  0            19.0 
21 mu_0       0.3     1.48       1.81e- 4  0            34.1 
22 mu_0       0.4     1.59       1.09e- 2  0            15.6 
23 mu_0       0.5     1.22       2.36e- 1  0             8.44
24 mu_0       0.6     1.07       5.99e- 1  0             6.24
25 mu_0       0.7     1.06       5.73e- 1  0             5.05
26 mu_0       0.8     0.890      3.37e- 1  0             4.82
27 mu_0       0.9     0.815      4.96e- 3  0            10.1 
[1] "Total run time was 194.997 seconds"
