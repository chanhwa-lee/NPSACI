
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3528"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 36 37 38 39 40 41 42 43 44 45 46 
 2  2  2  1  2  6  2  4  6  3  3  4  4  3  5  3  6  2  5  6  3  2  6  2  3  1 
47 48 49 50 
 4  1  6  1 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.01824 0.28732 0.58013 1.00000 5.00000 
[1] "event indicator table: "

   0    1 
2066 1462 
[1] "treatment indicator table: "

   0    1 
1423 2105 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1749
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1779
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 228.212 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.491 0.0682
 2 mu         0.1   0.2 0.603 0.0943
 3 mu         0.1   0.3 0.646 0.0869
 4 mu         0.1   0.4 0.727 0.122 
 5 mu         0.1   0.5 0.729 0.102 
 6 mu         0.2   0.1 0.388 0.0355
 7 mu         0.2   0.2 0.479 0.0309
 8 mu         0.2   0.3 0.539 0.0347
 9 mu         0.2   0.4 0.588 0.0413
10 mu         0.2   0.5 0.627 0.0423
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.03         0.944    0.0340      3.11
 2 mu         0.2      1.00         0.982    0.259       1.79
 3 mu         0.3      0.991        0.964    0.577       1.57
 4 mu         0.4      0.983        0.978    0.704       1.43
 5 mu         0.5      1.02         1.01     0.700       1.38
 6 mu         0.6      1.04         1.04     0.577       1.38
 7 mu         0.7      1.02         1.01     0.679       1.34
 8 mu         0.8      0.974        0.958    0.638       1.40
 9 mu         0.9      0.965        0.940    0.457       1.65
10 mu_1       0.1      1.04         0.998    0.0121      2.77
11 mu_1       0.2      0.997        0.974    0.353       1.84
12 mu_1       0.3      0.988        0.966    0.612       1.52
13 mu_1       0.4      0.987        0.982    0.667       1.41
14 mu_1       0.5      1.02         1.02     0.702       1.38
15 mu_1       0.6      1.04         1.05     0.574       1.41
16 mu_1       0.7      1.01         1.00     0.661       1.33
17 mu_1       0.8      0.972        0.959    0.619       1.41
18 mu_1       0.9      0.965        0.943    0.443       1.64
19 mu_0       0.1      1.03         0.937    0.0288      3.26
20 mu_0       0.2      1.01         0.989    0.235       1.85
21 mu_0       0.3      0.992        0.976    0.562       1.63
22 mu_0       0.4      0.980        0.979    0.707       1.44
23 mu_0       0.5      1.01         1.00     0.678       1.39
24 mu_0       0.6      1.04         1.05     0.582       1.35
25 mu_0       0.7      1.03         1.03     0.720       1.41
26 mu_0       0.8      0.981        0.962    0.646       1.45
27 mu_0       0.9      0.965        0.948    0.487       1.67
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.21      2.15e-12  7.15e-44    104.  
 2 mu         0.2      1.02      7.77e- 7  8.94e-30     29.3 
 3 mu         0.3      1.14      1.39e- 3  1.48e-21     14.3 
 4 mu         0.4      1.08      5.36e- 2  9.44e-16      8.29
 5 mu         0.5      0.991     3.08e- 1  2.82e-11      7.56
 6 mu         0.6      0.991     4.27e- 1  1.25e- 9      5.07
 7 mu         0.7      1.03      3.47e- 1  1.68e-13     11.4 
 8 mu         0.8      1.09      4.54e- 2  5.84e-19      7.22
 9 mu         0.9      1.18      2.11e- 5  1.67e-29     13.9 
10 mu_1       0.1      0.322     3.31e-12  0            11.7 
11 mu_1       0.2      1.12      1.57e- 6  0            26.9 
12 mu_1       0.3      1.16      2.16e- 3  0            12.6 
13 mu_1       0.4      1.06      6.75e- 2  0             7.44
14 mu_1       0.5      0.970     2.42e- 1  0             7.56
15 mu_1       0.6      0.991     4.02e- 1  0             5.21
16 mu_1       0.7      1.04      2.87e- 1  0            12.0 
17 mu_1       0.8      1.10      4.51e- 2  0             7.10
18 mu_1       0.9      1.18      1.40e- 5  0            14.9 
19 mu_0       0.1      1.31      4.94e-13  1.65e-45    115.  
20 mu_0       0.2      0.998     4.01e- 7  2.33e-31     29.9 
21 mu_0       0.3      1.13      7.51e- 4  4.40e-23     15.0 
22 mu_0       0.4      1.09      3.51e- 2  3.28e-17      8.86
23 mu_0       0.5      1.01      2.71e- 1  1.18e-12      7.56
24 mu_0       0.6      0.990     2.98e- 1  3.14e- 9      4.85
25 mu_0       0.7      0.995     2.79e- 1  5.60e-13     10.2 
26 mu_0       0.8      1.06      8.28e- 2  2.92e-18      9.62
27 mu_0       0.9      1.17      8.73e- 5  1.36e-28     10.3 
[1] "Total run time was 231.801 seconds"
