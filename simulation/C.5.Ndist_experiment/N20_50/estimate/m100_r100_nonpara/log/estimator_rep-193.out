
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3463"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 34 35 36 37 38 39 40 41 42 43 44 45 46 
 5  5  1  1  3  3  6  2  4  2  4  4  4  4  2  4  3  5  6  3  2  2  5  4  2  5 
47 48 50 
 2  6  1 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04357 0.38985 0.63787 1.00000 5.00000 
[1] "event indicator table: "

   0    1 
2015 1448 
[1] "treatment indicator table: "

   0    1 
1240 2223 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1753
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1710
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 470.397 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.512 0.0939
 2 mu         0.1   0.2 0.590 0.0811
 3 mu         0.1   0.3 0.648 0.0824
 4 mu         0.1   0.4 0.738 0.119 
 5 mu         0.1   0.5 0.763 0.103 
 6 mu         0.2   0.1 0.443 0.0602
 7 mu         0.2   0.2 0.535 0.0551
 8 mu         0.2   0.3 0.597 0.0590
 9 mu         0.2   0.4 0.661 0.0705
10 mu         0.2   0.5 0.706 0.0668
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.969        0.779    0.0129      5.43
 2 mu         0.2      0.980        0.935    0.247       2.12
 3 mu         0.3      0.950        0.929    0.382       1.78
 4 mu         0.4      0.974        0.947    0.554       1.49
 5 mu         0.5      0.990        0.986    0.503       1.35
 6 mu         0.6      0.998        0.989    0.681       1.33
 7 mu         0.7      1.02         1.01     0.675       1.38
 8 mu         0.8      1.02         1.03     0.515       1.56
 9 mu         0.9      1.05         1.05     0.582       1.51
10 mu_1       0.1      1.04         0.932    0.0294      3.60
11 mu_1       0.2      0.961        0.944    0.211       1.86
12 mu_1       0.3      0.951        0.924    0.446       1.80
13 mu_1       0.4      0.979        0.978    0.552       1.51
14 mu_1       0.5      0.992        0.990    0.503       1.33
15 mu_1       0.6      1.00         0.987    0.713       1.32
16 mu_1       0.7      1.02         1.01     0.664       1.38
17 mu_1       0.8      1.02         1.03     0.510       1.56
18 mu_1       0.9      1.05         1.05     0.580       1.52
19 mu_0       0.1      0.961        0.742    0.0111      5.64
20 mu_0       0.2      0.985        0.943    0.231       2.26
21 mu_0       0.3      0.949        0.934    0.354       1.77
22 mu_0       0.4      0.970        0.943    0.555       1.47
23 mu_0       0.5      0.988        0.982    0.503       1.39
24 mu_0       0.6      0.994        0.987    0.631       1.34
25 mu_0       0.7      1.01         1.00     0.700       1.37
26 mu_0       0.8      1.02         1.01     0.536       1.54
27 mu_0       0.9      1.04         1.05     0.595       1.56
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.45      4.73e-13  1.07e-45     61.8 
 2 mu         0.2      1.49      2.62e- 7  1.50e-31     35.8 
 3 mu         0.3      0.651     2.88e- 4  2.84e-23     11.9 
 4 mu         0.4      0.809     2.09e- 2  2.11e-17     10.0 
 5 mu         0.5      1.19      1.82e- 1  7.58e-13      9.58
 6 mu         0.6      1.20      7.09e- 1  3.99e- 9      5.52
 7 mu         0.7      1.14      7.50e- 1  9.29e-12      6.00
 8 mu         0.8      1.06      2.19e- 1  6.32e-18      5.05
 9 mu         0.9      0.991     3.32e- 3  9.32e-29     10.6 
10 mu_1       0.1      1.79      3.47e-12  1.07e-44     51.5 
11 mu_1       0.2      1.20      8.72e- 7  7.51e-31     29.9 
12 mu_1       0.3      0.627     6.62e- 4  9.46e-23     13.6 
13 mu_1       0.4      0.875     2.98e- 2  5.29e-17      8.52
14 mu_1       0.5      1.23      2.52e- 1  1.52e-12      9.84
15 mu_1       0.6      1.19      8.05e- 1  6.66e- 9      5.68
16 mu_1       0.7      1.14      8.20e- 1  1.85e-12      5.94
17 mu_1       0.8      1.06      1.91e- 1  1.10e-18      5.33
18 mu_1       0.9      0.981     2.38e- 3  1.44e-29     10.4 
19 mu_0       0.1      1.41      1.51e-13  0            62.9 
20 mu_0       0.2      1.56      1.12e- 7  0            37.3 
21 mu_0       0.3      0.661     1.30e- 4  0            11.3 
22 mu_0       0.4      0.766     1.15e- 2  0            11.0 
23 mu_0       0.5      1.14      1.12e- 1  0             9.32
24 mu_0       0.6      1.21      5.82e- 1  0             6.71
25 mu_0       0.7      1.15      5.53e- 1  0             6.16
26 mu_0       0.8      1.07      3.34e- 1  0             4.86
27 mu_0       0.9      1.08      8.53e- 3  0            11.7 
[1] "Total run time was 474.859 seconds"
