
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3422"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 1  3  3  5  3  3  2  3  3  4  5  9  3  3  9  2  1  2  3  1  3  3  3  5  5  4 
46 47 48 50 
 1  3  3  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04121 0.38146 0.64440 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
2064 1358 
[1] "treatment indicator table: "

   0    1 
1208 2214 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1720
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 53"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1702
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 89"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 193.344 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.411 0.0909
 2 mu         0.1   0.2 0.492 0.0954
 3 mu         0.1   0.3 0.502 0.107 
 4 mu         0.1   0.4 0.605 0.131 
 5 mu         0.1   0.5 0.667 0.121 
 6 mu         0.2   0.1 0.354 0.0539
 7 mu         0.2   0.2 0.441 0.0539
 8 mu         0.2   0.3 0.478 0.0692
 9 mu         0.2   0.4 0.557 0.0826
10 mu         0.2   0.5 0.610 0.0627
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      1.19         0.357 0.00000100      14.4 
 2 mu         0.2      1.15         0.900 0.00189          7.54
 3 mu         0.3      1.04         1.03  0.0601           2.03
 4 mu         0.4      0.998        0.994 0.353            1.86
 5 mu         0.5      0.998        1.00  0.700            1.46
 6 mu         0.6      0.992        0.990 0.639            1.26
 7 mu         0.7      0.988        0.979 0.722            1.30
 8 mu         0.8      0.992        1.00  0.631            1.42
 9 mu         0.9      0.978        1.01  0.169            1.62
10 mu_1       0.1      1.20         0.571 0.00000415       9.36
11 mu_1       0.2      1.12         0.978 0.00402          6.10
12 mu_1       0.3      1.03         1.02  0.0902           1.81
13 mu_1       0.4      0.995        0.979 0.428            1.84
14 mu_1       0.5      0.998        1.00  0.708            1.36
15 mu_1       0.6      0.991        0.985 0.640            1.26
16 mu_1       0.7      0.988        0.990 0.709            1.31
17 mu_1       0.8      0.991        1.00  0.609            1.42
18 mu_1       0.9      0.979        1.00  0.160            1.62
19 mu_0       0.1      1.18         0.332 0.000000651     16.0 
20 mu_0       0.2      1.15         0.870 0.00135          7.90
21 mu_0       0.3      1.05         1.04  0.0472           2.12
22 mu_0       0.4      1.00         1.02  0.302            1.87
23 mu_0       0.5      0.998        0.997 0.653            1.55
24 mu_0       0.6      0.994        0.996 0.637            1.30
25 mu_0       0.7      0.988        0.979 0.724            1.31
26 mu_0       0.8      0.994        0.989 0.669            1.42
27 mu_0       0.9      0.974        0.990 0.256            1.61
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.171     1.28e-13  9.38e-36     13.3 
 2 mu         0.2      1.14      5.81e- 8  4.58e-23     50.4 
 3 mu         0.3      1.32      7.31e- 5  8.76e-16     29.6 
 4 mu         0.4      1.55      7.14e- 3  2.73e-11     35.2 
 5 mu         0.5      1.45      1.69e- 1  2.75e- 8      9.88
 6 mu         0.6      0.970     5.06e- 1  7.84e- 6      5.20
 7 mu         0.7      0.950     4.64e- 1  4.79e- 9      5.63
 8 mu         0.8      1.30      5.79e- 1  1.64e-14      9.69
 9 mu         0.9      1.39      6.93e- 3  2.76e-24     17.1 
10 mu_1       0.1      0.353     7.86e-13  8.40e-35     26.6 
11 mu_1       0.2      1.30      2.01e- 7  2.05e-22     50.4 
12 mu_1       0.3      1.34      1.68e- 4  2.62e-15     24.7 
13 mu_1       0.4      1.60      1.28e- 2  6.81e-11     33.7 
14 mu_1       0.5      1.39      1.49e- 1  5.50e- 8      7.57
15 mu_1       0.6      0.925     5.94e- 1  7.38e- 6      5.31
16 mu_1       0.7      0.970     4.91e- 1  1.43e- 9      5.90
17 mu_1       0.8      1.32      4.77e- 1  4.29e-15     10.5 
18 mu_1       0.9      1.38      5.16e- 3  6.41e-25     17.0 
19 mu_0       0.1      0.151     5.35e-14  0            11.8 
20 mu_0       0.2      1.11      2.19e- 8  0            50.4 
21 mu_0       0.3      1.32      3.26e- 5  0            31.7 
22 mu_0       0.4      1.51      3.61e- 3  0            36.2 
23 mu_0       0.5      1.51      1.17e- 1  0            12.2 
24 mu_0       0.6      1.04      4.85e- 1  0             5.75
25 mu_0       0.7      0.904     5.04e- 1  0             5.01
26 mu_0       0.8      1.22      6.53e- 1  0             8.36
27 mu_0       0.9      1.50      1.49e- 2  0            20.0 
[1] "Total run time was 196.592 seconds"
