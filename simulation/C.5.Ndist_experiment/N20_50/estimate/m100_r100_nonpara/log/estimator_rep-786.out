
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3425"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 1  6  3  5  2  5  4  3  4  3  7  4  1  3  3  1  3  4  4  2  3  2  2  3  2  3 
46 47 48 49 50 
 2  5  4  4  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03837 0.33094 0.60888 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
2040 1385 
[1] "treatment indicator table: "

   0    1 
1301 2124 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1641
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1784
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 90"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 174.465 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.552 0.111 
 2 mu         0.1   0.2 0.698 0.143 
 3 mu         0.1   0.3 0.809 0.161 
 4 mu         0.1   0.4 0.847 0.170 
 5 mu         0.1   0.5 0.879 0.168 
 6 mu         0.2   0.1 0.402 0.0735
 7 mu         0.2   0.2 0.511 0.0938
 8 mu         0.2   0.3 0.591 0.0977
 9 mu         0.2   0.4 0.621 0.107 
10 mu         0.2   0.5 0.643 0.0922
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.29         0.393 0.0000297     18.3 
 2 mu         0.2      0.971        0.866 0.0233         5.87
 3 mu         0.3      0.962        0.949 0.216          2.44
 4 mu         0.4      0.991        0.971 0.593          1.41
 5 mu         0.5      1.02         1.01  0.675          1.59
 6 mu         0.6      1.01         1.00  0.809          1.45
 7 mu         0.7      0.994        1.01  0.779          1.36
 8 mu         0.8      1.00         1.01  0.637          1.32
 9 mu         0.9      1.04         1.04  0.401          1.74
10 mu_1       0.1      1.20         0.562 0.0000933     15.3 
11 mu_1       0.2      0.947        0.880 0.0375         4.33
12 mu_1       0.3      0.969        0.951 0.258          2.12
13 mu_1       0.4      0.996        0.990 0.634          1.40
14 mu_1       0.5      1.02         0.999 0.670          1.60
15 mu_1       0.6      1.01         1.01  0.803          1.43
16 mu_1       0.7      0.992        1.01  0.764          1.38
17 mu_1       0.8      1.00         1.00  0.621          1.34
18 mu_1       0.9      1.04         1.05  0.395          1.76
19 mu_0       0.1      1.30         0.364 0.0000226     19.4 
20 mu_0       0.2      0.977        0.850 0.0198         6.25
21 mu_0       0.3      0.959        0.951 0.198          2.58
22 mu_0       0.4      0.988        0.965 0.566          1.43
23 mu_0       0.5      1.01         1.02  0.680          1.59
24 mu_0       0.6      1.01         0.998 0.808          1.48
25 mu_0       0.7      0.999        1.01  0.775          1.32
26 mu_0       0.8      0.993        0.993 0.699          1.31
27 mu_0       0.9      1.03         1.03  0.462          1.72
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.843     4.49e-12  1.06e-40     83.6 
 2 mu         0.2      2.33      9.35e- 7  1.65e-27    192.  
 3 mu         0.3      1.13      8.27e- 4  8.10e-20     23.8 
 4 mu         0.4      1.09      4.05e- 2  2.18e-14     11.5 
 5 mu         0.5      1.09      3.46e- 1  3.34e-10      6.41
 6 mu         0.6      1.15      9.08e- 1  8.14e- 7      5.45
 7 mu         0.7      1.26      9.56e- 1  3.96e-11      6.37
 8 mu         0.8      1.14      3.07e- 1  1.04e-17      9.09
 9 mu         0.9      1.15      9.51e- 4  2.43e-29     13.3 
10 mu_1       0.1      1.41      3.27e-11  1.03e-39    139.  
11 mu_1       0.2      2.16      2.87e- 6  8.09e-27    160.  
12 mu_1       0.3      1.09      1.82e- 3  2.64e-19     20.3 
13 mu_1       0.4      1.12      6.70e- 2  5.33e-14     11.9 
14 mu_1       0.5      1.09      4.75e- 1  6.53e-10      5.69
15 mu_1       0.6      1.17      1.00e+ 0  3.19e- 7      5.57
16 mu_1       0.7      1.26      9.26e- 1  9.44e-12      7.00
17 mu_1       0.8      1.13      2.42e- 1  2.17e-18      8.75
18 mu_1       0.9      1.15      7.02e- 4  4.51e-30     13.4 
19 mu_0       0.1      0.780     1.59e-12  2.61e-42     77.4 
20 mu_0       0.2      2.38      4.00e- 7  4.59e-29    200.  
21 mu_0       0.3      1.14      3.98e- 4  2.57e-21     28.1 
22 mu_0       0.4      1.07      2.30e- 2  8.08e-16     11.2 
23 mu_0       0.5      1.09      2.16e- 1  1.48e-11      7.50
24 mu_0       0.6      1.12      8.01e- 1  4.52e- 8      5.28
25 mu_0       0.7      1.27      9.53e- 1  1.10e-10      4.90
26 mu_0       0.8      1.18      4.71e- 1  4.35e-17     10.5 
27 mu_0       0.9      1.13      3.30e- 3  2.03e-28     12.9 
[1] "Total run time was 182.575 seconds"
