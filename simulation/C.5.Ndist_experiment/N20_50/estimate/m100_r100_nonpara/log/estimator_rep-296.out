
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3426"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 
 2  5  3  5  2  3  3  7  4  5  4  2  3  4  5  1  2  4  6  1  3  5  1  4  1  1 
47 48 49 50 
 3  3  5  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04218 0.35965 0.60928 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
1942 1484 
[1] "treatment indicator table: "

   0    1 
1290 2136 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1729
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 7"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1697
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 30"
[1] "     Cluster: 34"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 196.363 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.265 0.0808
 2 mu         0.1   0.2 0.442 0.0673
 3 mu         0.1   0.3 0.458 0.0770
 4 mu         0.1   0.4 0.537 0.0637
 5 mu         0.1   0.5 0.604 0.0811
 6 mu         0.2   0.1 0.259 0.0540
 7 mu         0.2   0.2 0.411 0.0369
 8 mu         0.2   0.3 0.456 0.0452
 9 mu         0.2   0.4 0.517 0.0379
10 mu         0.2   0.5 0.582 0.0448
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.907        0.824  0.000300      4.31
 2 mu         0.2      0.973        0.919  0.0577        2.46
 3 mu         0.3      1.03         1.01   0.303         2.01
 4 mu         0.4      1.00         0.988  0.615         1.70
 5 mu         0.5      0.987        0.968  0.675         1.72
 6 mu         0.6      0.995        0.992  0.560         1.50
 7 mu         0.7      0.997        0.963  0.600         1.47
 8 mu         0.8      1.00         0.991  0.565         1.88
 9 mu         0.9      1.02         0.965  0.560         2.05
10 mu_1       0.1      0.901        0.832  0.000886      4.03
11 mu_1       0.2      0.996        0.934  0.0884        2.43
12 mu_1       0.3      1.02         1.04   0.351         1.79
13 mu_1       0.4      0.997        0.978  0.641         1.75
14 mu_1       0.5      0.989        0.973  0.658         1.67
15 mu_1       0.6      0.997        0.988  0.558         1.51
16 mu_1       0.7      0.997        0.966  0.610         1.50
17 mu_1       0.8      1.00         0.991  0.574         1.88
18 mu_1       0.9      1.02         0.967  0.542         2.05
19 mu_0       0.1      0.908        0.819  0.000235      4.34
20 mu_0       0.2      0.967        0.912  0.0501        2.54
21 mu_0       0.3      1.03         1.01   0.283         2.10
22 mu_0       0.4      1.00         0.991  0.592         1.66
23 mu_0       0.5      0.986        0.971  0.692         1.77
24 mu_0       0.6      0.992        0.993  0.564         1.48
25 mu_0       0.7      0.998        0.981  0.577         1.44
26 mu_0       0.8      1.00         0.989  0.527         1.90
27 mu_0       0.9      1.01         0.988  0.584         2.07
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.114     1.25e-12  8.84e-38      9.73
 2 mu         0.2      0.693     6.90e- 7  1.73e-24     19.9 
 3 mu         0.3      1.11      4.87e- 4  7.43e-17     17.8 
 4 mu         0.4      1.16      3.94e- 2  3.11e-12      9.48
 5 mu         0.5      1.18      3.21e- 1  7.66e- 9      6.84
 6 mu         0.6      1.29      6.00e- 1  5.94e- 8     13.8 
 7 mu         0.7      1.19      5.89e- 1  1.54e-12      7.21
 8 mu         0.8      1.16      2.21e- 1  2.70e-19      5.84
 9 mu         0.9      1.32      6.32e- 4  3.15e-31     18.2 
10 mu_1       0.1      0.204     8.51e-12  7.95e-37     15.9 
11 mu_1       0.2      0.839     2.06e- 6  7.76e-24     21.0 
12 mu_1       0.3      1.17      1.06e- 3  2.23e-16     14.9 
13 mu_1       0.4      1.17      6.43e- 2  7.76e-12      9.65
14 mu_1       0.5      1.19      4.02e- 1  1.53e- 8      7.91
15 mu_1       0.6      1.29      5.35e- 1  1.62e- 8     13.6 
16 mu_1       0.7      1.18      5.58e- 1  3.59e-13      6.40
17 mu_1       0.8      1.16      1.74e- 1  5.51e-20      6.09
18 mu_1       0.9      1.34      4.55e- 4  5.71e-32     19.4 
19 mu_0       0.1      0.104     4.38e-13  0             9.04
20 mu_0       0.2      0.657     2.54e- 7  0            20.8 
21 mu_0       0.3      1.08      2.59e- 4  0            19.1 
22 mu_0       0.4      1.16      2.56e- 2  0             9.36
23 mu_0       0.5      1.18      2.68e- 1  0             7.07
24 mu_0       0.6      1.29      4.42e- 1  0            14.1 
25 mu_0       0.7      1.20      5.48e- 1  0             9.12
26 mu_0       0.8      1.14      3.37e- 1  0             5.80
27 mu_0       0.9      1.18      1.89e- 3  0            13.1 
[1] "Total run time was 199.476 seconds"
