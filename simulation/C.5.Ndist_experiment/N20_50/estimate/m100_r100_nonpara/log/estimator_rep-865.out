
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3429"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 2  5  3  5  5  4  1  5  2  5  2  3  4  4  1  4  6  1  3  1  3  3  4  1  5  2 
46 47 48 49 50 
 5  2  3  4  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03034 0.33412 0.59498 1.00000 5.00000 
[1] "event indicator table: "

   0    1 
2025 1404 
[1] "treatment indicator table: "

   0    1 
1302 2127 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1616
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1813
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 82"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 143.968 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.462 0.0517
 2 mu         0.1   0.2 0.574 0.0702
 3 mu         0.1   0.3 0.599 0.0574
 4 mu         0.1   0.4 0.653 0.0593
 5 mu         0.1   0.5 0.731 0.0802
 6 mu         0.2   0.1 0.416 0.0430
 7 mu         0.2   0.2 0.486 0.0444
 8 mu         0.2   0.3 0.527 0.0362
 9 mu         0.2   0.4 0.578 0.0373
10 mu         0.2   0.5 0.623 0.0387
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.01         0.905    0.0364      4.18
 2 mu         0.2      1.02         0.994    0.364       1.79
 3 mu         0.3      1.06         1.05     0.560       1.64
 4 mu         0.4      1.03         1.03     0.658       1.41
 5 mu         0.5      0.992        0.981    0.685       1.27
 6 mu         0.6      0.983        0.968    0.723       1.23
 7 mu         0.7      0.993        0.975    0.709       1.29
 8 mu         0.8      0.999        0.992    0.671       1.44
 9 mu         0.9      1.01         0.994    0.494       1.61
10 mu_1       0.1      1.01         0.945    0.0837      2.21
11 mu_1       0.2      1.03         1.01     0.445       1.77
12 mu_1       0.3      1.06         1.07     0.590       1.65
13 mu_1       0.4      1.02         1.02     0.675       1.34
14 mu_1       0.5      0.989        0.973    0.676       1.25
15 mu_1       0.6      0.985        0.966    0.711       1.24
16 mu_1       0.7      0.994        0.980    0.700       1.30
17 mu_1       0.8      0.999        0.990    0.663       1.45
18 mu_1       0.9      1.01         0.988    0.481       1.62
19 mu_0       0.1      1.01         0.918    0.0312      4.40
20 mu_0       0.2      1.01         0.983    0.335       1.81
21 mu_0       0.3      1.06         1.04     0.547       1.64
22 mu_0       0.4      1.03         1.04     0.643       1.45
23 mu_0       0.5      0.996        1.00     0.695       1.28
24 mu_0       0.6      0.982        0.977    0.741       1.22
25 mu_0       0.7      0.991        0.973    0.732       1.29
26 mu_0       0.8      0.997        0.993    0.646       1.40
27 mu_0       0.9      1.01         0.992    0.500       1.57
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.364     4.55e-12  4.51e-35     19.0 
 2 mu         0.2      0.835     3.30e- 6  1.96e-22     20.5 
 3 mu         0.3      0.847     4.19e- 3  3.28e-15      9.39
 4 mu         0.4      0.856     1.46e- 1  3.06e-10      4.68
 5 mu         0.5      1.09      3.23e- 1  7.13e- 7      5.56
 6 mu         0.6      1.02      5.64e- 1  3.49e- 6      4.87
 7 mu         0.7      0.826     4.97e- 1  8.83e-10      3.48
 8 mu         0.8      1.27      6.86e- 2  4.56e-15      8.39
 9 mu         0.9      1.26      1.78e- 4  2.15e-24      9.56
10 mu_1       0.1      0.540     3.32e-11  3.96e-34     23.8 
11 mu_1       0.2      0.884     9.45e- 6  8.58e-22     16.2 
12 mu_1       0.3      0.827     8.39e- 3  9.58e-15      7.48
13 mu_1       0.4      0.898     1.78e- 1  6.72e-10      4.34
14 mu_1       0.5      1.11      3.46e- 1  1.43e- 6      5.70
15 mu_1       0.6      0.990     4.97e- 1  9.17e- 7      5.08
16 mu_1       0.7      0.828     4.45e- 1  1.99e-10      3.68
17 mu_1       0.8      1.31      4.86e- 2  9.00e-16      8.48
18 mu_1       0.9      1.23      1.15e- 4  3.78e-25      9.47
19 mu_0       0.1      0.344     1.70e-12  0            18.5 
20 mu_0       0.2      0.823     1.76e- 6  0            21.6 
21 mu_0       0.3      0.855     2.38e- 3  0            10.2 
22 mu_0       0.4      0.827     1.48e- 1  0             5.07
23 mu_0       0.5      1.06      3.01e- 1  0             5.43
24 mu_0       0.6      1.07      4.01e- 1  0             4.95
25 mu_0       0.7      0.824     5.74e- 1  0             3.86
26 mu_0       0.8      1.13      1.46e- 1  0             8.04
27 mu_0       0.9      1.53      4.94e- 4  0            12.5 
[1] "Total run time was 146.831 seconds"
