
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3690"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 
 3  1  3  2  2  1  3  1  3  1  6  3  3  6  3  7  3  1  3  9  5  3  4  2  5  2 
47 48 49 50 
 6  2  2  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04085 0.35710 0.62328 1.00000 6.52535 
[1] "event indicator table: "

   0    1 
2142 1548 
[1] "treatment indicator table: "

   0    1 
1412 2278 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1816
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 58"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1874
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 212.247 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.347 0.0387
 2 mu         0.1   0.2 0.387 0.0555
 3 mu         0.1   0.3 0.487 0.0484
 4 mu         0.1   0.4 0.621 0.119 
 5 mu         0.1   0.5 0.661 0.134 
 6 mu         0.2   0.1 0.360 0.0514
 7 mu         0.2   0.2 0.435 0.0536
 8 mu         0.2   0.3 0.504 0.0447
 9 mu         0.2   0.4 0.574 0.0541
10 mu         0.2   0.5 0.614 0.0565
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.950        0.731  0.000348      3.91
 2 mu         0.2      1.04         1.04   0.0870        1.90
 3 mu         0.3      1.03         1.03   0.505         1.60
 4 mu         0.4      0.979        0.957  0.686         1.52
 5 mu         0.5      0.972        0.969  0.627         1.32
 6 mu         0.6      1.01         1.03   0.731         1.32
 7 mu         0.7      1.00         0.991  0.645         1.23
 8 mu         0.8      0.996        1.00   0.579         1.41
 9 mu         0.9      0.982        0.978  0.369         1.61
10 mu_1       0.1      1.00         0.902  0.00108       3.05
11 mu_1       0.2      1.04         1.05   0.140         1.76
12 mu_1       0.3      1.02         1.00   0.577         1.66
13 mu_1       0.4      0.973        0.944  0.642         1.43
14 mu_1       0.5      0.976        0.973  0.636         1.31
15 mu_1       0.6      1.01         1.03   0.713         1.30
16 mu_1       0.7      1.00         0.988  0.644         1.24
17 mu_1       0.8      0.997        0.999  0.572         1.42
18 mu_1       0.9      0.982        0.980  0.377         1.63
19 mu_0       0.1      0.945        0.700  0.000267      4.01
20 mu_0       0.2      1.04         1.04   0.0738        1.95
21 mu_0       0.3      1.03         1.03   0.474         1.64
22 mu_0       0.4      0.984        0.966  0.673         1.58
23 mu_0       0.5      0.968        0.959  0.619         1.33
24 mu_0       0.6      1.00         1.00   0.758         1.36
25 mu_0       0.7      1.01         1.01   0.645         1.21
26 mu_0       0.8      0.995        0.974  0.598         1.37
27 mu_0       0.9      0.987        1.00   0.303         1.59
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      2.62      1.17e-12  1.23e-42    226.  
 2 mu         0.2      1.16      9.92e- 7  1.37e-28     35.8 
 3 mu         0.3      0.968     7.16e- 4  1.98e-20     13.6 
 4 mu         0.4      0.973     5.07e- 2  1.08e-14     10.9 
 5 mu         0.5      1.12      4.65e- 1  2.70e-10      6.53
 6 mu         0.6      1.14      7.72e- 1  1.02e- 8      5.58
 7 mu         0.7      1.05      4.57e- 1  5.16e-13      5.18
 8 mu         0.8      1.11      1.34e- 1  3.53e-19      7.39
 9 mu         0.9      1.06      1.38e- 4  7.31e-30     14.2 
10 mu_1       0.1      2.33      7.35e-12  1.18e-41    174.  
11 mu_1       0.2      1.04      3.22e- 6  6.57e-28     32.2 
12 mu_1       0.3      0.969     1.58e- 3  6.34e-20     12.5 
13 mu_1       0.4      0.981     7.93e- 2  2.60e-14      9.60
14 mu_1       0.5      1.14      4.30e- 1  5.18e-10      6.95
15 mu_1       0.6      1.13      7.24e- 1  1.31e- 9      5.23
16 mu_1       0.7      1.06      3.83e- 1  5.67e-14      5.55
17 mu_1       0.8      1.09      1.06e- 1  3.39e-20      7.30
18 mu_1       0.9      1.06      9.60e- 5  6.24e-31     15.4 
19 mu_0       0.1      2.65      4.67e-13  5.59e-44    232.  
20 mu_0       0.2      1.19      4.22e- 7  6.99e-30     36.8 
21 mu_0       0.3      0.968     3.85e- 4  1.16e-21     14.1 
22 mu_0       0.4      0.967     3.17e- 2  7.38e-16     11.7 
23 mu_0       0.5      1.11      3.48e- 1  2.21e-11      6.11
24 mu_0       0.6      1.16      5.97e- 1  2.36e- 8      6.10
25 mu_0       0.7      1.03      5.15e- 1  1.59e-12      4.32
26 mu_0       0.8      1.15      1.14e- 1  1.63e-18      7.73
27 mu_0       0.9      1.01      5.19e- 4  6.74e-29     14.7 
[1] "Total run time was 215.485 seconds"
