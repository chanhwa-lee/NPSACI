
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3381"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 5  4  2  3  2  5  7  3  2  7  2  2  6  5  2  3  2  3  3  3  2  2  2  2  2  5 
46 47 48 50 
 1  4  3  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02629 0.32472 0.58737 1.00000 5.00000 
[1] "event indicator table: "

   0    1 
1974 1407 
[1] "treatment indicator table: "

   0    1 
1319 2062 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1646
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 51"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1735
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 216.185 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.429 0.157 
 2 mu         0.1   0.2 0.537 0.206 
 3 mu         0.1   0.3 0.565 0.185 
 4 mu         0.1   0.4 0.588 0.211 
 5 mu         0.1   0.5 0.552 0.233 
 6 mu         0.2   0.1 0.431 0.0842
 7 mu         0.2   0.2 0.540 0.109 
 8 mu         0.2   0.3 0.593 0.101 
 9 mu         0.2   0.4 0.634 0.120 
10 mu         0.2   0.5 0.618 0.142 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      0.943        0.448 0.00000474      5.92
 2 mu         0.2      1.16         0.980 0.00603         6.96
 3 mu         0.3      1.02         0.999 0.102           2.14
 4 mu         0.4      0.971        0.962 0.280           1.63
 5 mu         0.5      0.980        0.984 0.518           1.52
 6 mu         0.6      0.990        1.01  0.555           1.35
 7 mu         0.7      0.983        0.973 0.661           1.33
 8 mu         0.8      0.994        0.999 0.522           1.44
 9 mu         0.9      1.04         1.02  0.463           2.59
10 mu_1       0.1      1.08         0.671 0.0000165       6.31
11 mu_1       0.2      1.14         1.02  0.0107          5.80
12 mu_1       0.3      0.995        0.989 0.135           2.10
13 mu_1       0.4      0.970        0.962 0.323           1.56
14 mu_1       0.5      0.982        0.987 0.549           1.56
15 mu_1       0.6      0.989        1.01  0.558           1.36
16 mu_1       0.7      0.982        0.971 0.654           1.35
17 mu_1       0.8      0.996        1.00  0.508           1.46
18 mu_1       0.9      1.04         1.03  0.454           2.63
19 mu_0       0.1      0.927        0.423 0.00000343      5.88
20 mu_0       0.2      1.17         0.965 0.00487         7.25
21 mu_0       0.3      1.03         1.01  0.0878          2.16
22 mu_0       0.4      0.973        0.961 0.252           1.68
23 mu_0       0.5      0.978        0.989 0.487           1.47
24 mu_0       0.6      0.991        1.01  0.551           1.40
25 mu_0       0.7      0.985        0.982 0.676           1.27
26 mu_0       0.8      0.983        0.986 0.579           1.37
27 mu_0       0.9      1.04         1.01  0.551           2.22
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.97      3.61e-11  6.19e-32    185.  
 2 mu         0.2      4.22      4.56e- 6  3.36e-21    176.  
 3 mu         0.3      5.38      1.95e- 3  5.62e-15    348.  
 4 mu         0.4      2.49      6.62e- 2  1.30e-10     92.3 
 5 mu         0.5      1.37      4.24e- 1  2.78e- 7     11.0 
 6 mu         0.6      1.16      7.25e- 1  1.26e- 4      8.41
 7 mu         0.7      1.02      5.70e- 1  1.58e- 6     14.4 
 8 mu         0.8      1.00      1.47e- 1  6.24e-11      9.62
 9 mu         0.9      1.36      2.97e- 4  8.71e-20     30.5 
10 mu_1       0.1      2.94      2.32e-10  5.87e-31    265.  
11 mu_1       0.2      4.62      1.63e- 5  1.59e-20    235.  
12 mu_1       0.3      5.00      4.25e- 3  1.78e-14    323.  
13 mu_1       0.4      2.14      1.12e- 1  3.08e-10     64.4 
14 mu_1       0.5      1.32      5.38e- 1  5.27e- 7     11.5 
15 mu_1       0.6      1.14      5.93e- 1  1.99e- 4      7.31
16 mu_1       0.7      1.00      5.45e- 1  3.21e- 7     14.4 
17 mu_1       0.8      1.02      1.20e- 1  2.09e-11     10.1 
18 mu_1       0.9      1.35      2.02e- 4  3.09e-20     31.9 
19 mu_0       0.1      1.86      1.79e-11  3.62e-33    176.  
20 mu_0       0.2      4.11      1.63e- 6  2.21e-22    188.  
21 mu_0       0.3      5.55      9.61e- 4  4.23e-16    358.  
22 mu_0       0.4      2.72      3.80e- 2  1.14e-11    111.  
23 mu_0       0.5      1.41      3.36e- 1  2.93e- 8     10.5 
24 mu_0       0.6      1.18      6.86e- 1  1.66e- 5     10.0 
25 mu_0       0.7      1.05      4.54e- 1  4.50e- 6     14.5 
26 mu_0       0.8      0.927     2.60e- 1  2.18e-10      7.70
27 mu_0       0.9      1.36      1.15e- 3  5.93e-19     17.9 
[1] "Total run time was 220.007 seconds"
