
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3495"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 1  2  5  4  6  1  2  7  3  4  2  1  1  4  3  2  2  4  6  5  5  4  5  5  3  1 
47 48 49 50 
 2  3  3  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04494 0.36857 0.62915 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
2060 1435 
[1] "treatment indicator table: "

   0    1 
1292 2203 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1757
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 46"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1738
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 20"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 75"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 110.547 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.344 0.108 
 2 mu         0.1   0.2 0.534 0.122 
 3 mu         0.1   0.3 0.536 0.0991
 4 mu         0.1   0.4 0.562 0.0976
 5 mu         0.1   0.5 0.572 0.0918
 6 mu         0.2   0.1 0.361 0.0864
 7 mu         0.2   0.2 0.506 0.0829
 8 mu         0.2   0.3 0.522 0.0722
 9 mu         0.2   0.4 0.560 0.0721
10 mu         0.2   0.5 0.584 0.0681
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      0.775        0.609 0.00000240      3.79
 2 mu         0.2      0.920        0.944 0.00774         2.74
 3 mu         0.3      0.954        0.974 0.202           1.86
 4 mu         0.4      0.989        0.997 0.388           1.98
 5 mu         0.5      1.00         0.986 0.649           1.47
 6 mu         0.6      1.01         1.01  0.704           1.31
 7 mu         0.7      1.00         0.991 0.753           1.39
 8 mu         0.8      1.00         0.993 0.710           1.57
 9 mu         0.9      1.01         0.970 0.537           2.89
10 mu_1       0.1      0.877        0.803 0.00000916      3.57
11 mu_1       0.2      0.934        0.945 0.0149          2.22
12 mu_1       0.3      0.960        0.984 0.271           1.99
13 mu_1       0.4      0.993        0.995 0.430           1.91
14 mu_1       0.5      1.00         0.988 0.676           1.47
15 mu_1       0.6      1.01         1.01  0.700           1.29
16 mu_1       0.7      1.00         0.989 0.741           1.42
17 mu_1       0.8      1.00         0.994 0.713           1.55
18 mu_1       0.9      1.01         0.968 0.523           2.97
19 mu_0       0.1      0.763        0.568 0.00000165      3.83
20 mu_0       0.2      0.916        0.960 0.00595         2.87
21 mu_0       0.3      0.952        0.968 0.172           1.80
22 mu_0       0.4      0.987        0.995 0.360           2.04
23 mu_0       0.5      1.00         0.995 0.622           1.47
24 mu_0       0.6      1.01         1.00  0.711           1.36
25 mu_0       0.7      1.00         0.999 0.780           1.34
26 mu_0       0.8      1.00         0.992 0.699           1.65
27 mu_0       0.9      1.01         0.977 0.662           2.17
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      4.70      8.29e-14  1.61e-42    255.  
 2 mu         0.2      3.91      2.83e- 7  2.83e-29    191.  
 3 mu         0.3      2.09      4.29e- 4  1.59e-21     61.2 
 4 mu         0.4      1.49      4.22e- 2  4.98e-16     16.9 
 5 mu         0.5      1.22      3.55e- 1  9.15e-12     12.4 
 6 mu         0.6      1.19      4.89e- 1  2.79e- 8      7.14
 7 mu         0.7      1.13      6.10e- 1  2.24e- 8      9.19
 8 mu         0.8      1.18      2.24e- 1  2.79e-13      6.10
 9 mu         0.9      0.917     7.01e- 4  3.34e-23     11.0 
10 mu_1       0.1      6.11      5.31e-13  1.61e-41    340.  
11 mu_1       0.2      3.08      8.60e- 7  1.42e-28    127.  
12 mu_1       0.3      1.90      9.38e- 4  5.29e-21     55.2 
13 mu_1       0.4      1.43      6.72e- 2  1.25e-15     14.2 
14 mu_1       0.5      1.19      3.41e- 1  1.83e-11     11.8 
15 mu_1       0.6      1.18      4.30e- 1  4.65e- 8      7.14
16 mu_1       0.7      1.13      6.32e- 1  4.00e- 9      8.84
17 mu_1       0.8      1.18      1.86e- 1  7.00e-14      6.28
18 mu_1       0.9      0.902     4.81e- 4  9.47e-24     10.8 
19 mu_0       0.1      4.54      3.31e-14  0           245.  
20 mu_0       0.2      4.11      1.39e- 7  0           207.  
21 mu_0       0.3      2.17      2.11e- 4  0            63.8 
22 mu_0       0.4      1.53      2.56e- 2  0            20.6 
23 mu_0       0.5      1.24      2.68e- 1  0            13.0 
24 mu_0       0.6      1.21      4.55e- 1  0             7.67
25 mu_0       0.7      1.14      5.63e- 1  0            10.0 
26 mu_0       0.8      1.15      2.35e- 1  0             5.82
27 mu_0       0.9      1.05      1.94e- 3  0            13.0 
[1] "Total run time was 112.591 seconds"
