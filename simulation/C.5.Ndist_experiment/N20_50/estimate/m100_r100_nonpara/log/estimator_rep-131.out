
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3409"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 43 44 45 46 
 5  2  7  5  3  4  5  2  4  1  2  2  3  2  1  6  8  1  1  3  3  2  6  5  2  3 
47 48 49 50 
 1  4  4  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.05164 0.38588 0.64180 1.00000 5.17797 
[1] "event indicator table: "

   0    1 
2012 1397 
[1] "treatment indicator table: "

   0    1 
1210 2199 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1666
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 41"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 96"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1743
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 186.457 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.238 0.0615
 2 mu         0.1   0.2 0.316 0.0718
 3 mu         0.1   0.3 0.332 0.0808
 4 mu         0.1   0.4 0.350 0.0982
 5 mu         0.1   0.5 0.374 0.122 
 6 mu         0.2   0.1 0.282 0.0471
 7 mu         0.2   0.2 0.342 0.0532
 8 mu         0.2   0.3 0.376 0.0569
 9 mu         0.2   0.4 0.398 0.0671
10 mu         0.2   0.5 0.431 0.0820
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1      0.682       0.103  0.0000000152      13.0 
 2 mu         0.2      0.907       0.705  0.000438           6.24
 3 mu         0.3      0.978       0.906  0.0482             3.05
 4 mu         0.4      0.976       0.961  0.431              1.62
 5 mu         0.5      1.00        0.998  0.718              1.35
 6 mu         0.6      1.00        0.992  0.763              1.28
 7 mu         0.7      1.00        0.993  0.637              1.34
 8 mu         0.8      1.02        1.02   0.731              1.35
 9 mu         0.9      1.04        1.04   0.110              2.54
10 mu_1       0.1      0.737       0.222  0.0000000644      10.8 
11 mu_1       0.2      0.934       0.777  0.000946           5.04
12 mu_1       0.3      0.973       0.923  0.0729             2.20
13 mu_1       0.4      0.975       0.964  0.481              1.48
14 mu_1       0.5      1.00        0.995  0.730              1.33
15 mu_1       0.6      1.00        0.992  0.763              1.28
16 mu_1       0.7      1.00        0.991  0.641              1.33
17 mu_1       0.8      1.02        1.02   0.712              1.36
18 mu_1       0.9      1.04        1.04   0.0989             2.65
19 mu_0       0.1      0.676       0.0898 0.00000000974     13.2 
20 mu_0       0.2      0.901       0.682  0.000311           6.54
21 mu_0       0.3      0.981       0.892  0.0376             3.42
22 mu_0       0.4      0.978       0.972  0.398              1.76
23 mu_0       0.5      1.00        0.996  0.695              1.37
24 mu_0       0.6      1.00        0.996  0.764              1.28
25 mu_0       0.7      0.999       0.996  0.630              1.37
26 mu_0       0.8      1.01        1.01   0.735              1.36
27 mu_0       0.9      1.04        1.00   0.212              1.62
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.123     4.56e-13  2.76e-40      9.37
 2 mu         0.2      1.84      6.81e- 7  1.36e-26     65.7 
 3 mu         0.3      2.93      7.02e- 4  1.15e-18    104.  
 4 mu         0.4      1.61      4.12e- 2  4.04e-13     24.2 
 5 mu         0.5      1.01      4.71e- 1  6.71e- 9      7.53
 6 mu         0.6      1.05      8.07e- 1  1.51e- 5      4.72
 7 mu         0.7      1.18      8.16e- 1  1.28e- 7      5.16
 8 mu         0.8      1.25      3.63e- 1  8.57e-13      9.14
 9 mu         0.9      1.63      2.65e- 3  3.65e-22     38.0 
10 mu_1       0.1      0.303     2.83e-12  2.59e-39     22.5 
11 mu_1       0.2      2.40      2.06e- 6  6.39e-26     87.6 
12 mu_1       0.3      2.78      1.52e- 3  3.60e-18     92.4 
13 mu_1       0.4      1.42      7.10e- 2  9.49e-13     22.0 
14 mu_1       0.5      0.985     5.16e- 1  1.26e- 8      7.11
15 mu_1       0.6      1.06      9.31e- 1  2.36e- 5      4.89
16 mu_1       0.7      1.19      8.56e- 1  4.56e- 8      5.49
17 mu_1       0.8      1.25      2.95e- 1  2.68e-13      9.49
18 mu_1       0.9      1.64      1.96e- 3  1.01e-22     38.0 
19 mu_0       0.1      0.103     1.93e-13  1.87e-41      7.91
20 mu_0       0.2      1.69      3.01e- 7  1.04e-27     60.8 
21 mu_0       0.3      2.99      3.30e- 4  1.00e-19    109.  
22 mu_0       0.4      1.73      2.36e- 2  4.12e-14     25.7 
23 mu_0       0.5      1.03      2.85e- 1  8.22e-10      7.95
24 mu_0       0.6      1.03      7.02e- 1  2.31e- 6      4.46
25 mu_0       0.7      1.17      8.75e- 1  3.19e- 7      4.97
26 mu_0       0.8      1.24      5.07e- 1  3.21e-12      7.99
27 mu_0       0.9      1.49      8.91e- 3  2.73e-21     38.0 
[1] "Total run time was 189.391 seconds"
