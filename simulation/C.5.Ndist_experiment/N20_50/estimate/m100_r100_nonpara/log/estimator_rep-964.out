
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3674"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 
 4  1  1  5  2  5  2  2  5  5  2  2  2  5  3  1  6  1  2  4  3  3  1  3  2  4 
47 48 49 50 
 6  6  2 10 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03259 0.34489 0.61359 1.00000 7.00000 
[1] "event indicator table: "

   0    1 
2219 1455 
[1] "treatment indicator table: "

   0    1 
1331 2343 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1823
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 34"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1851
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 22"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 206.311 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.372 0.135 
 2 mu         0.1   0.2 0.419 0.125 
 3 mu         0.1   0.3 0.483 0.118 
 4 mu         0.1   0.4 0.532 0.121 
 5 mu         0.1   0.5 0.571 0.122 
 6 mu         0.2   0.1 0.344 0.0845
 7 mu         0.2   0.2 0.416 0.0810
 8 mu         0.2   0.3 0.478 0.0732
 9 mu         0.2   0.4 0.524 0.0722
10 mu         0.2   0.5 0.557 0.0740
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.809        0.341 0.0000205     10.0 
 2 mu         0.2      0.871        0.736 0.0269         4.11
 3 mu         0.3      0.892        0.873 0.309          2.35
 4 mu         0.4      0.962        0.987 0.534          1.39
 5 mu         0.5      0.992        0.977 0.734          1.28
 6 mu         0.6      1.01         1.01  0.759          1.30
 7 mu         0.7      1.02         1.02  0.746          1.32
 8 mu         0.8      1.02         1.02  0.680          1.33
 9 mu         0.9      1.00         0.977 0.234          2.68
10 mu_1       0.1      0.868        0.592 0.0000658     10.8 
11 mu_1       0.2      0.872        0.759 0.0439         3.82
12 mu_1       0.3      0.904        0.890 0.368          1.95
13 mu_1       0.4      0.972        0.979 0.545          1.41
14 mu_1       0.5      0.993        0.988 0.772          1.32
15 mu_1       0.6      1.01         1.01  0.750          1.29
16 mu_1       0.7      1.02         1.02  0.754          1.33
17 mu_1       0.8      1.02         1.03  0.676          1.34
18 mu_1       0.9      1.00         0.974 0.213          2.74
19 mu_0       0.1      0.803        0.308 0.0000155      9.96
20 mu_0       0.2      0.871        0.738 0.0226         4.37
21 mu_0       0.3      0.888        0.855 0.283          2.52
22 mu_0       0.4      0.956        0.976 0.527          1.37
23 mu_0       0.5      0.990        0.974 0.695          1.28
24 mu_0       0.6      1.00         0.997 0.747          1.31
25 mu_0       0.7      1.02         1.03  0.729          1.31
26 mu_0       0.8      1.02         1.02  0.691          1.30
27 mu_0       0.9      1.00         0.990 0.380          2.12
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.226     2.08e-13  3.22e-47     15.3 
 2 mu         0.2      0.933     1.86e- 7  3.62e-32     36.1 
 3 mu         0.3      0.843     2.91e- 4  2.31e-23     14.0 
 4 mu         0.4      1.01      3.43e- 2  4.08e-17     10.3 
 5 mu         0.5      1.14      4.29e- 1  2.86e-12      8.17
 6 mu         0.6      1.13      9.55e- 1  2.60e- 8      4.52
 7 mu         0.7      1.16      9.50e- 1  1.65e- 8      5.43
 8 mu         0.8      1.33      2.29e- 1  8.50e-14      8.13
 9 mu         0.9      1.12      8.34e- 4  2.86e-23     16.6 
10 mu_1       0.1      0.427     1.33e-12  3.22e-46     26.9 
11 mu_1       0.2      0.990     5.85e- 7  1.81e-31     31.9 
12 mu_1       0.3      0.840     6.24e- 4  7.70e-23     12.1 
13 mu_1       0.4      1.04      5.36e- 2  1.02e-16     10.6 
14 mu_1       0.5      1.14      5.63e- 1  5.71e-12      8.50
15 mu_1       0.6      1.13      8.58e- 1  4.33e- 8      4.71
16 mu_1       0.7      1.16      9.22e- 1  5.06e- 9      5.43
17 mu_1       0.8      1.34      1.87e- 1  2.28e-14      8.43
18 mu_1       0.9      1.10      6.00e- 4  6.80e-24     18.4 
19 mu_0       0.1      0.203     7.36e-14  0            14.0 
20 mu_0       0.2      0.919     7.05e- 8  0            37.2 
21 mu_0       0.3      0.844     1.49e- 4  0            15.8 
22 mu_0       0.4      0.993     2.05e- 2  0            10.2 
23 mu_0       0.5      1.15      3.07e- 1  0             7.84
24 mu_0       0.6      1.12      8.43e- 1  0             5.30
25 mu_0       0.7      1.14      7.07e- 1  0             5.43
26 mu_0       0.8      1.30      3.94e- 1  0             7.39
27 mu_0       0.9      1.26      2.46e- 3  0            15.9 
[1] "Total run time was 209.261 seconds"
