
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3457"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 2  2  5  3  1  3  3  5  2  4  6  5  2  3  8  6  2  1  1  3  3  5  3  4  3  2 
46 47 48 49 50 
 4  1  2  4  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02848 0.35349 0.62832 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
2034 1423 
[1] "treatment indicator table: "

   0    1 
1257 2200 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1701
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1756
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 62"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 235.209 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.529 0.242 
 2 mu         0.1   0.2 0.563 0.282 
 3 mu         0.1   0.3 0.731 0.335 
 4 mu         0.1   0.4 0.732 0.347 
 5 mu         0.1   0.5 0.758 0.362 
 6 mu         0.2   0.1 0.444 0.0670
 7 mu         0.2   0.2 0.477 0.0473
 8 mu         0.2   0.3 0.592 0.0822
 9 mu         0.2   0.4 0.600 0.0722
10 mu         0.2   0.5 0.636 0.0733
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      1.10         0.188 0.00000652     61.1 
 2 mu         0.2      1.01         0.893 0.0119          5.58
 3 mu         0.3      1.04         1.04  0.181           2.48
 4 mu         0.4      1.01         0.988 0.562           1.70
 5 mu         0.5      1.01         1.00  0.539           1.44
 6 mu         0.6      1.01         1.01  0.739           1.45
 7 mu         0.7      1.00         1.00  0.750           1.31
 8 mu         0.8      1.00         0.995 0.714           1.38
 9 mu         0.9      1.02         1.03  0.465           2.02
10 mu_1       0.1      1.10         0.372 0.0000222      44.7 
11 mu_1       0.2      1.04         1.03  0.0205          2.39
12 mu_1       0.3      1.04         1.02  0.225           2.34
13 mu_1       0.4      1.01         0.994 0.557           1.68
14 mu_1       0.5      1.01         1.01  0.553           1.44
15 mu_1       0.6      1.01         1.01  0.757           1.46
16 mu_1       0.7      0.999        0.997 0.746           1.28
17 mu_1       0.8      1.00         0.993 0.716           1.41
18 mu_1       0.9      1.02         1.03  0.447           2.01
19 mu_0       0.1      1.10         0.165 0.00000478     62.9 
20 mu_0       0.2      1.00         0.843 0.00970         6.46
21 mu_0       0.3      1.05         1.02  0.162           2.53
22 mu_0       0.4      1.01         0.998 0.546           1.73
23 mu_0       0.5      1.01         1.01  0.525           1.44
24 mu_0       0.6      1.02         1.01  0.708           1.43
25 mu_0       0.7      1.00         1.01  0.752           1.39
26 mu_0       0.8      0.997        1.01  0.708           1.30
27 mu_0       0.9      1.02         1.02  0.504           2.09
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.62      1.88e-13  6.73e-33    145.  
 2 mu         0.2      2.95      1.39e- 7  1.60e-22    135.  
 3 mu         0.3      1.60      1.82e- 4  1.56e-16     56.3 
 4 mu         0.4      0.989     2.07e- 2  2.76e-12      8.69
 5 mu         0.5      1.09      3.21e- 1  5.43e- 9      5.75
 6 mu         0.6      1.20      8.94e- 1  2.67e- 6      6.20
 7 mu         0.7      1.30      8.07e- 1  1.16e- 9      7.82
 8 mu         0.8      1.09      5.49e- 1  1.03e-15      6.55
 9 mu         0.9      1.14      5.53e- 3  1.36e-26     23.5 
10 mu_1       0.1      2.43      1.31e-12  6.38e-32    207.  
11 mu_1       0.2      2.79      5.19e- 7  8.02e-22    104.  
12 mu_1       0.3      1.37      3.97e- 4  5.19e-16     42.7 
13 mu_1       0.4      0.982     3.31e- 2  6.89e-12      8.95
14 mu_1       0.5      1.10      3.91e- 1  1.09e- 8      6.17
15 mu_1       0.6      1.21      8.89e- 1  4.45e- 6      6.41
16 mu_1       0.7      1.31      7.58e- 1  3.72e-10      8.30
17 mu_1       0.8      1.07      4.61e- 1  2.88e-16      6.08
18 mu_1       0.9      1.16      4.28e- 3  3.40e-27     25.2 
19 mu_0       0.1      1.53      6.37e-14  0           138.  
20 mu_0       0.2      2.99      4.71e- 8  0           145.  
21 mu_0       0.3      1.70      9.34e- 5  0            62.2 
22 mu_0       0.4      0.993     1.26e- 2  0             8.52
23 mu_0       0.5      1.07      2.26e- 1  0             6.07
24 mu_0       0.6      1.17      8.22e- 1  0             5.89
25 mu_0       0.7      1.30      7.01e- 1  0             6.70
26 mu_0       0.8      1.15      6.19e- 1  0             8.42
27 mu_0       0.9      0.971     1.21e- 2  0             9.45
[1] "Total run time was 239.017 seconds"
