
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3584"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 1  5  2  1  3  3  2  5  3  4  3  4  4  3  2  5  2  1  2  4  6  2  5  7  3  2 
46 47 48 49 50 
 2  2  3  2  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04119 0.36445 0.65119 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
2172 1412 
[1] "treatment indicator table: "

   0    1 
1236 2348 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1837
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1747
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 212.653 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.248 0.0533
 2 mu         0.1   0.2 0.303 0.0615
 3 mu         0.1   0.3 0.326 0.0705
 4 mu         0.1   0.4 0.393 0.0784
 5 mu         0.1   0.5 0.424 0.0869
 6 mu         0.2   0.1 0.314 0.0450
 7 mu         0.2   0.2 0.402 0.0583
 8 mu         0.2   0.3 0.436 0.0575
 9 mu         0.2   0.4 0.499 0.0616
10 mu         0.2   0.5 0.550 0.0724
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.740        0.345 0.0000000659     10.3 
 2 mu         0.2      0.952        0.845 0.000928          5.32
 3 mu         0.3      0.998        0.940 0.0545            2.72
 4 mu         0.4      0.961        0.928 0.324             1.63
 5 mu         0.5      0.978        0.970 0.649             1.33
 6 mu         0.6      1.01         1.02  0.734             1.32
 7 mu         0.7      1.02         1.01  0.731             1.34
 8 mu         0.8      1.01         1.01  0.664             1.41
 9 mu         0.9      0.996        1.00  0.464             2.28
10 mu_1       0.1      0.848        0.516 0.000000276      11.5 
11 mu_1       0.2      0.977        0.868 0.00195           3.40
12 mu_1       0.3      0.991        0.959 0.0779            2.57
13 mu_1       0.4      0.959        0.915 0.376             1.52
14 mu_1       0.5      0.983        0.979 0.681             1.32
15 mu_1       0.6      1.01         1.02  0.714             1.32
16 mu_1       0.7      1.02         1.01  0.714             1.34
17 mu_1       0.8      1.01         1.01  0.658             1.41
18 mu_1       0.9      0.996        1.00  0.449             2.30
19 mu_0       0.1      0.728        0.307 0.0000000426     10.2 
20 mu_0       0.2      0.945        0.832 0.000672          5.80
21 mu_0       0.3      1.00         0.942 0.0444            2.78
22 mu_0       0.4      0.963        0.916 0.290             1.70
23 mu_0       0.5      0.973        0.972 0.617             1.35
24 mu_0       0.6      1.01         1.00  0.736             1.32
25 mu_0       0.7      1.02         1.02  0.732             1.36
26 mu_0       0.8      1.01         1.02  0.670             1.42
27 mu_0       0.9      0.998        0.994 0.504             2.09
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1    0.00922     1.83e-14  9.85e-43     0.456
 2 mu         0.2    0.434       3.99e- 8  1.10e-28     9.79 
 3 mu         0.3    1.12        7.75e- 5  1.58e-20    22.2  
 4 mu         0.4    1.21        1.02e- 2  8.67e-15    12.0  
 5 mu         0.5    1.20        1.70e- 1  1.04e-10    12.1  
 6 mu         0.6    0.994       5.09e- 1  1.52e- 7     6.09 
 7 mu         0.7    1.12        7.49e- 1  9.67e- 8     5.97 
 8 mu         0.8    1.26        2.98e- 1  4.95e-13     8.40 
 9 mu         0.9    1.08        4.87e- 3  9.24e-23    10.6  
10 mu_1       0.1    0.0253      1.35e-13  9.45e-42     1.22 
11 mu_1       0.2    0.615       1.43e- 7  5.25e-28    13.1  
12 mu_1       0.3    1.20        1.85e- 4  5.06e-20    22.2  
13 mu_1       0.4    1.25        1.74e- 2  2.08e-14    12.7  
14 mu_1       0.5    1.17        2.09e- 1  2.07e-10    11.6  
15 mu_1       0.6    0.970       4.65e- 1  2.54e- 7     5.90 
16 mu_1       0.7    1.15        6.71e- 1  3.60e- 8     6.48 
17 mu_1       0.8    1.25        2.60e- 1  1.61e-13     8.06 
18 mu_1       0.9    1.09        3.48e- 3  2.93e-23    11.4  
19 mu_0       0.1    0.00742     5.63e-15  0            0.372
20 mu_0       0.2    0.389       1.39e- 8  0            8.95 
21 mu_0       0.3    1.09        3.15e- 5  0           22.2  
22 mu_0       0.4    1.19        5.35e- 3  0           11.6  
23 mu_0       0.5    1.23        1.30e- 1  0           12.6  
24 mu_0       0.6    1.03        4.07e- 1  0            7.70 
25 mu_0       0.7    1.06        7.62e- 1  0            5.60 
26 mu_0       0.8    1.31        2.99e- 1  0            9.77 
27 mu_0       0.9    1.03        9.55e- 3  0            7.53 
[1] "Total run time was 216.188 seconds"
