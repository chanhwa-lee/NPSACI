
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3307"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 29 30 31 32 33 34 35 36 37 38 39 40 41 42 44 45 46 47 
 7  5  4  3  4  4  5  4  2  6  3  7  2  1  4  1  5  5  2  5  1  1  2  3  1  3 
49 50 
 6  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03298 0.34544 0.62151 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
1926 1381 
[1] "treatment indicator table: "

   0    1 
1290 2017 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1652
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1655
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 186.422 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.448 0.0965
 2 mu         0.1   0.2 0.530 0.0969
 3 mu         0.1   0.3 0.576 0.0947
 4 mu         0.1   0.4 0.596 0.0754
 5 mu         0.1   0.5 0.650 0.0918
 6 mu         0.2   0.1 0.345 0.0456
 7 mu         0.2   0.2 0.414 0.0478
 8 mu         0.2   0.3 0.474 0.0432
 9 mu         0.2   0.4 0.518 0.0354
10 mu         0.2   0.5 0.559 0.0437
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      0.965        0.701 0.00000718      5.73
 2 mu         0.2      0.950        0.896 0.0184          2.12
 3 mu         0.3      0.975        0.958 0.329           1.88
 4 mu         0.4      0.973        0.978 0.575           1.36
 5 mu         0.5      0.988        0.990 0.602           1.57
 6 mu         0.6      1.01         1.01  0.602           1.50
 7 mu         0.7      1.00         1.00  0.732           1.51
 8 mu         0.8      0.990        1.03  0.571           1.40
 9 mu         0.9      1.00         0.996 0.333           1.51
10 mu_1       0.1      0.964        0.884 0.0000257       4.40
11 mu_1       0.2      0.961        0.928 0.0335          2.38
12 mu_1       0.3      0.978        0.949 0.408           1.66
13 mu_1       0.4      0.974        0.975 0.584           1.29
14 mu_1       0.5      0.991        0.982 0.612           1.62
15 mu_1       0.6      1.01         1.01  0.617           1.47
16 mu_1       0.7      1.00         0.998 0.716           1.52
17 mu_1       0.8      0.990        1.02  0.565           1.40
18 mu_1       0.9      1.00         0.995 0.318           1.52
19 mu_0       0.1      0.965        0.677 0.00000512      5.87
20 mu_0       0.2      0.947        0.894 0.0147          2.10
21 mu_0       0.3      0.973        0.939 0.295           1.98
22 mu_0       0.4      0.973        0.971 0.570           1.41
23 mu_0       0.5      0.985        0.981 0.593           1.52
24 mu_0       0.6      1.01         1.00  0.580           1.55
25 mu_0       0.7      1.01         1.00  0.769           1.48
26 mu_0       0.8      0.987        1.01  0.597           1.42
27 mu_0       0.9      1.02         1.01  0.410           1.41
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.792     6.47e-11  5.30e-36     32.9 
 2 mu         0.2      1.73      9.23e- 6  1.46e-23     78.9 
 3 mu         0.3      1.35      2.40e- 3  2.12e-16     24.9 
 4 mu         0.4      1.18      8.03e- 2  2.03e-11      8.10
 5 mu         0.5      1.11      4.22e- 1  1.15e- 7      7.32
 6 mu         0.6      1.10      6.47e- 1  8.48e- 6      5.90
 7 mu         0.7      1.09      4.37e- 1  5.31e-10     10.9 
 8 mu         0.8      1.06      2.74e- 1  2.74e-16      7.85
 9 mu         0.9      1.27      9.72e- 4  1.62e-27     11.4 
10 mu_1       0.1      1.11      4.35e-10  4.84e-35     43.9 
11 mu_1       0.2      1.73      3.12e- 5  6.65e-23     80.5 
12 mu_1       0.3      1.30      5.40e- 3  6.46e-16     17.0 
13 mu_1       0.4      1.20      8.39e- 2  4.62e-11      8.34
14 mu_1       0.5      1.10      5.55e- 1  2.10e- 7      7.77
15 mu_1       0.6      1.10      5.68e- 1  2.88e- 6      6.09
16 mu_1       0.7      1.07      4.96e- 1  1.55e-10     11.0 
17 mu_1       0.8      1.08      2.22e- 1  6.99e-17      8.06
18 mu_1       0.9      1.26      7.03e- 4  3.67e-28     12.1 
19 mu_0       0.1      0.756     2.35e-11  5.12e-37     31.7 
20 mu_0       0.2      1.73      3.73e- 6  1.58e-24     78.5 
21 mu_0       0.3      1.38      1.16e- 3  2.64e-17     28.3 
22 mu_0       0.4      1.17      4.63e- 2  2.94e-12      7.94
23 mu_0       0.5      1.12      3.02e- 1  2.00e- 8      7.25
24 mu_0       0.6      1.09      5.18e- 1  5.73e- 6      6.69
25 mu_0       0.7      1.13      3.84e- 1  1.41e- 9     10.8 
26 mu_0       0.8      0.989     4.41e- 1  1.09e-15      6.97
27 mu_0       0.9      1.37      3.53e- 3  1.29e-26     12.9 
[1] "Total run time was 189.54 seconds"
