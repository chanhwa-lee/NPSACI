
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3554"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 36 37 38 39 40 41 42 43 44 45 46 
 6  3  1  3  3  2  3  4  5  3  2  6  1  2  1  1  3  5  5  5  5  2  4  3  3  5 
47 48 49 50 
 3  5  4  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03556 0.38669 0.63177 1.00000 8.00000 
[1] "event indicator table: "

   0    1 
2132 1422 
[1] "treatment indicator table: "

   0    1 
1366 2188 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1738
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1816
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 230.25 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.395 0.116 
 2 mu         0.1   0.2 0.398 0.105 
 3 mu         0.1   0.3 0.414 0.100 
 4 mu         0.1   0.4 0.453 0.0999
 5 mu         0.1   0.5 0.452 0.104 
 6 mu         0.2   0.1 0.371 0.0561
 7 mu         0.2   0.2 0.396 0.0509
 8 mu         0.2   0.3 0.430 0.0509
 9 mu         0.2   0.4 0.492 0.0526
10 mu         0.2   0.5 0.498 0.0518
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.854        0.248 0.000119      13.4 
 2 mu         0.2      0.941        0.868 0.0709         3.20
 3 mu         0.3      0.989        0.931 0.405          2.24
 4 mu         0.4      1.00         0.998 0.473          1.55
 5 mu         0.5      0.996        0.989 0.665          1.25
 6 mu         0.6      1.00         1.03  0.699          1.25
 7 mu         0.7      1.01         1.00  0.664          1.31
 8 mu         0.8      0.976        0.980 0.533          1.55
 9 mu         0.9      0.929        0.947 0.331          1.93
10 mu_1       0.1      0.968        0.465 0.000373      11.9 
11 mu_1       0.2      0.951        0.885 0.122          2.96
12 mu_1       0.3      0.995        0.944 0.433          2.09
13 mu_1       0.4      1.00         0.991 0.496          1.50
14 mu_1       0.5      0.996        0.990 0.653          1.23
15 mu_1       0.6      1.00         1.03  0.722          1.24
16 mu_1       0.7      1.01         1.00  0.670          1.33
17 mu_1       0.8      0.973        0.969 0.521          1.56
18 mu_1       0.9      0.928        0.944 0.318          1.97
19 mu_0       0.1      0.841        0.227 0.0000909     13.6 
20 mu_0       0.2      0.938        0.831 0.0581         3.38
21 mu_0       0.3      0.986        0.918 0.393          2.30
22 mu_0       0.4      1.00         0.995 0.459          1.58
23 mu_0       0.5      0.997        0.998 0.665          1.29
24 mu_0       0.6      1.00         1.01  0.663          1.25
25 mu_0       0.7      1.01         1.00  0.649          1.32
26 mu_0       0.8      0.991        0.996 0.579          1.50
27 mu_0       0.9      0.937        0.905 0.454          1.68
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      2.71      7.10e-13  2.06e-33    232.  
 2 mu         0.2      2.11      3.79e- 7  7.53e-22     53.5 
 3 mu         0.3      1.13      5.14e- 4  1.89e-15     29.0 
 4 mu         0.4      0.943     3.68e- 2  5.82e-11     10.1 
 5 mu         0.5      1.08      2.92e- 1  1.56e- 7     11.1 
 6 mu         0.6      1.13      7.10e- 1  6.31e- 8      7.55
 7 mu         0.7      1.07      7.17e- 1  3.72e-12     10.3 
 8 mu         0.8      1.09      1.90e- 1  1.78e-18     11.2 
 9 mu         0.9      1.05      8.66e- 4  4.16e-30     17.4 
10 mu_1       0.1      3.05      4.26e-12  1.76e-32    232.  
11 mu_1       0.2      1.90      1.15e- 6  3.57e-21     53.2 
12 mu_1       0.3      1.03      1.10e- 3  5.98e-15     21.7 
13 mu_1       0.4      0.946     5.36e- 2  1.38e-10     10.7 
14 mu_1       0.5      1.09      3.64e- 1  2.96e- 7     10.9 
15 mu_1       0.6      1.13      7.47e- 1  1.05e- 8      8.39
16 mu_1       0.7      1.06      7.47e- 1  5.31e-13      9.80
17 mu_1       0.8      1.09      1.52e- 1  3.63e-19     11.1 
18 mu_1       0.9      1.04      6.02e- 4  7.70e-31     18.3 
19 mu_0       0.1      2.67      2.93e-13  3.27e-34    232.  
20 mu_0       0.2      2.16      1.87e- 7  4.83e-23     60.2 
21 mu_0       0.3      1.18      2.66e- 4  1.38e-16     32.1 
22 mu_0       0.4      0.942     2.41e- 2  4.98e-12      9.67
23 mu_0       0.5      1.06      2.38e- 1  1.60e- 8     11.4 
24 mu_0       0.6      1.13      5.83e- 1  1.42e- 7      6.44
25 mu_0       0.7      1.09      7.26e- 1  1.11e-11     11.4 
26 mu_0       0.8      1.06      3.06e- 1  7.42e-18     11.7 
27 mu_0       0.9      1.10      3.20e- 3  3.47e-29     16.5 
[1] "Total run time was 233.941 seconds"
