
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3548"
[1] "cluster size dist'n: "

20 21 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 40 41 42 43 44 45 46 47 
 3  2  2  1  1  4  7  2  4  6  6  1  5  4  2  9  5  1  4  2  4  3  3  3  3  5 
48 49 50 
 2  5  1 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03092 0.33522 0.59996 1.00000 5.24660 
[1] "event indicator table: "

   0    1 
2097 1451 
[1] "treatment indicator table: "

   0    1 
1284 2264 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1698
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1850
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 204.224 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.413 0.144 
 2 mu         0.1   0.2 0.497 0.171 
 3 mu         0.1   0.3 0.545 0.192 
 4 mu         0.1   0.4 0.573 0.208 
 5 mu         0.1   0.5 0.592 0.216 
 6 mu         0.2   0.1 0.387 0.0470
 7 mu         0.2   0.2 0.474 0.0513
 8 mu         0.2   0.3 0.525 0.0681
 9 mu         0.2   0.4 0.578 0.0692
10 mu         0.2   0.5 0.614 0.0865
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      0.943        0.312 0.000000331     30.8 
 2 mu         0.2      1.03         0.833 0.00249          5.99
 3 mu         0.3      1.01         0.953 0.102            2.33
 4 mu         0.4      1.00         1.03  0.418            1.51
 5 mu         0.5      0.994        0.989 0.602            1.29
 6 mu         0.6      0.992        0.977 0.753            1.22
 7 mu         0.7      0.984        0.984 0.663            1.19
 8 mu         0.8      0.985        0.989 0.696            1.36
 9 mu         0.9      1.00         0.990 0.264            1.62
10 mu_1       0.1      0.986        0.524 0.00000132      20.6 
11 mu_1       0.2      1.05         0.886 0.00502          5.75
12 mu_1       0.3      1.00         0.954 0.140            1.95
13 mu_1       0.4      1.00         1.02  0.458            1.51
14 mu_1       0.5      0.993        0.996 0.620            1.26
15 mu_1       0.6      0.992        0.975 0.752            1.22
16 mu_1       0.7      0.983        0.979 0.657            1.20
17 mu_1       0.8      0.988        0.991 0.689            1.36
18 mu_1       0.9      0.999        0.993 0.247            1.66
19 mu_0       0.1      0.938        0.289 0.000000221     32.0 
20 mu_0       0.2      1.02         0.805 0.00185          6.06
21 mu_0       0.3      1.02         0.960 0.0851           2.49
22 mu_0       0.4      1.00         1.02  0.391            1.53
23 mu_0       0.5      0.995        1.00  0.584            1.33
24 mu_0       0.6      0.993        0.983 0.755            1.24
25 mu_0       0.7      0.987        0.986 0.675            1.18
26 mu_0       0.8      0.977        0.973 0.678            1.35
27 mu_0       0.9      1.01         0.994 0.421            1.61
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.144     4.13e-14  6.08e-40     10.4 
 2 mu         0.2      1.49      2.93e- 7  8.45e-27     58.8 
 3 mu         0.3      2.37      5.82e- 4  3.62e-19     47.1 
 4 mu         0.4      1.70      4.14e- 2  8.37e-14     14.2 
 5 mu         0.5      1.11      4.73e- 1  1.07e- 9      7.21
 6 mu         0.6      1.03      5.09e- 1  2.08e- 6      5.29
 7 mu         0.7      1.13      8.48e- 1  1.96e- 6      7.04
 8 mu         0.8      1.29      3.22e- 1  1.49e-11      9.71
 9 mu         0.9      0.853     2.21e- 3  5.09e-21     11.1 
10 mu_1       0.1      0.328     2.36e-13  5.82e-39     23.1 
11 mu_1       0.2      1.86      8.94e- 7  4.04e-26     69.7 
12 mu_1       0.3      2.34      1.21e- 3  1.16e-18     37.2 
13 mu_1       0.4      1.57      6.54e- 2  2.00e-13     14.3 
14 mu_1       0.5      1.08      4.77e- 1  2.04e- 9      7.06
15 mu_1       0.6      1.03      4.85e- 1  3.32e- 6      5.46
16 mu_1       0.7      1.14      8.92e- 1  6.96e- 7      7.46
17 mu_1       0.8      1.29      2.51e- 1  5.72e-12      9.60
18 mu_1       0.9      0.840     1.55e- 3  1.73e-21     12.0 
19 mu_0       0.1      0.123     1.97e-14  2.94e-41      9.00
20 mu_0       0.2      1.40      1.52e- 7  4.59e-28     56.1 
21 mu_0       0.3      2.39      3.08e- 4  2.25e-20     51.3 
22 mu_0       0.4      1.80      2.54e- 2  6.06e-15     14.2 
23 mu_0       0.5      1.14      3.81e- 1  9.28e-11      7.37
24 mu_0       0.6      1.03      4.73e- 1  2.26e- 7      5.79
25 mu_0       0.7      1.11      7.34e- 1  4.53e- 6      6.06
26 mu_0       0.8      1.31      5.08e- 1  5.19e-11     10.2 
27 mu_0       0.9      0.972     7.75e- 3  3.53e-20     10.3 
[1] "Total run time was 207.732 seconds"
