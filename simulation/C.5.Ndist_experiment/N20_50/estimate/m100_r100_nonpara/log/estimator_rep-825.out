
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3581"
[1] "cluster size dist'n: "

20 21 22 23 24 26 27 28 29 30 31 32 33 34 36 37 39 40 41 42 43 44 45 46 47 48 
 5  3  2  4  2  7  8  1  2  2  5  2  2  1  4  2  3  4  3  5  4  4  4  4  3  1 
49 50 
 8  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03791 0.36232 0.62783 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
2103 1478 
[1] "treatment indicator table: "

   0    1 
1330 2251 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1749
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 38"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1832
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 175.454 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.443 0.0648
 2 mu         0.1   0.2 0.460 0.0467
 3 mu         0.1   0.3 0.494 0.0599
 4 mu         0.1   0.4 0.536 0.0572
 5 mu         0.1   0.5 0.562 0.0620
 6 mu         0.2   0.1 0.376 0.0382
 7 mu         0.2   0.2 0.405 0.0200
 8 mu         0.2   0.3 0.441 0.0316
 9 mu         0.2   0.4 0.482 0.0278
10 mu         0.2   0.5 0.514 0.0326
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.05         0.832   0.00272      5.85
 2 mu         0.2      0.982        0.928   0.225        2.79
 3 mu         0.3      0.965        0.929   0.363        1.88
 4 mu         0.4      0.967        0.962   0.607        1.49
 5 mu         0.5      0.982        0.996   0.599        1.65
 6 mu         0.6      0.997        1.01    0.596        1.27
 7 mu         0.7      1.01         1.00    0.745        1.31
 8 mu         0.8      1.02         1.01    0.690        1.47
 9 mu         0.9      1.01         0.973   0.437        1.65
10 mu_1       0.1      1.03         0.918   0.00684      3.80
11 mu_1       0.2      0.973        0.940   0.249        2.53
12 mu_1       0.3      0.966        0.947   0.409        1.80
13 mu_1       0.4      0.969        0.979   0.634        1.44
14 mu_1       0.5      0.985        0.984   0.595        1.63
15 mu_1       0.6      0.999        1.00    0.589        1.28
16 mu_1       0.7      1.02         1.00    0.747        1.32
17 mu_1       0.8      1.02         1.01    0.675        1.46
18 mu_1       0.9      1.01         0.976   0.416        1.65
19 mu_0       0.1      1.05         0.812   0.00226      6.08
20 mu_0       0.2      0.984        0.940   0.208        2.86
21 mu_0       0.3      0.964        0.920   0.344        1.92
22 mu_0       0.4      0.967        0.974   0.581        1.52
23 mu_0       0.5      0.979        0.995   0.603        1.67
24 mu_0       0.6      0.995        1.01    0.606        1.26
25 mu_0       0.7      1.01         1.00    0.711        1.35
26 mu_0       0.8      1.02         1.01    0.726        1.51
27 mu_0       0.9      1.02         1.00    0.539        1.66
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.0962     3.72e-12  1.06e-45      6.42
 2 mu         0.2     0.654      1.74e- 6  5.30e-31     24.0 
 3 mu         0.3     1.36       7.92e- 4  1.97e-22     18.8 
 4 mu         0.4     1.50       5.34e- 2  2.24e-16     14.7 
 5 mu         0.5     1.37       3.10e- 1  1.04e-11     12.0 
 6 mu         0.6     1.24       5.60e- 1  6.34e- 8     11.4 
 7 mu         0.7     1.18       8.13e- 1  2.57e- 8      7.59
 8 mu         0.8     1.19       2.94e- 1  2.90e-13      6.73
 9 mu         0.9     1.26       1.40e- 3  3.47e-22     13.7 
10 mu_1       0.1     0.188      2.45e-11  1.04e-44     12.1 
11 mu_1       0.2     0.778      5.32e- 6  2.60e-30     22.7 
12 mu_1       0.3     1.49       1.68e- 3  6.44e-22     20.9 
13 mu_1       0.4     1.48       8.57e- 2  5.48e-16     12.3 
14 mu_1       0.5     1.37       3.35e- 1  2.05e-11     13.1 
15 mu_1       0.6     1.21       5.23e- 1  1.04e- 7     10.4 
16 mu_1       0.7     1.19       7.37e- 1  6.94e- 9      8.02
17 mu_1       0.8     1.19       2.84e- 1  7.44e-14      6.36
18 mu_1       0.9     1.26       1.03e- 3  7.90e-23     14.4 
19 mu_0       0.1     0.0859     1.42e-12  2.35e-47      5.79
20 mu_0       0.2     0.623      6.22e- 7  1.32e-32     24.3 
21 mu_0       0.3     1.31       3.68e- 4  5.63e-24     17.9 
22 mu_0       0.4     1.50       2.98e- 2  7.45e-18     16.3 
23 mu_0       0.5     1.37       2.71e- 1  4.18e-13     11.5 
24 mu_0       0.6     1.27       5.06e- 1  3.17e- 9     12.9 
25 mu_0       0.7     1.17       5.96e- 1  6.94e- 8      6.60
26 mu_0       0.8     1.20       3.32e- 1  1.15e-12      8.21
27 mu_0       0.9     1.27       4.70e- 3  2.76e-21      8.98
[1] "Total run time was 178.029 seconds"
