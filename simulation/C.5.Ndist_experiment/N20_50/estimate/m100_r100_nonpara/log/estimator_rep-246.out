
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3646"
[1] "cluster size dist'n: "

21 22 23 24 25 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 
 3  3  4  5  1  5  1  4  6  4  2  4  2  3  7  4  4  3  3  1  3  3  5  4  4  4 
49 50 
 5  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03463 0.36271 0.62874 1.00000 6.35542 
[1] "event indicator table: "

   0    1 
2201 1445 
[1] "treatment indicator table: "

   0    1 
1291 2355 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1842
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1804
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 163.995 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.466 0.105 
 2 mu         0.1   0.2 0.543 0.130 
 3 mu         0.1   0.3 0.544 0.121 
 4 mu         0.1   0.4 0.595 0.0986
 5 mu         0.1   0.5 0.614 0.111 
 6 mu         0.2   0.1 0.388 0.0391
 7 mu         0.2   0.2 0.455 0.0550
 8 mu         0.2   0.3 0.468 0.0668
 9 mu         0.2   0.4 0.541 0.0547
10 mu         0.2   0.5 0.556 0.0683
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.07         0.594   0.00131      4.47
 2 mu         0.2      1.07         0.954   0.116        3.06
 3 mu         0.3      1.03         1.00    0.495        2.03
 4 mu         0.4      1.02         1.01    0.541        1.64
 5 mu         0.5      1.03         1.02    0.565        2.00
 6 mu         0.6      1.01         1.02    0.547        1.67
 7 mu         0.7      1.01         1.00    0.712        1.34
 8 mu         0.8      0.989        0.984   0.648        1.45
 9 mu         0.9      0.990        0.976   0.430        2.09
10 mu_1       0.1      1.08         0.821   0.00395      3.90
11 mu_1       0.2      1.06         0.894   0.183        2.73
12 mu_1       0.3      1.03         0.989   0.486        1.91
13 mu_1       0.4      1.03         1.02    0.545        1.64
14 mu_1       0.5      1.03         1.01    0.570        2.02
15 mu_1       0.6      1.01         1.01    0.546        1.61
16 mu_1       0.7      1.01         1.01    0.706        1.36
17 mu_1       0.8      0.988        0.980   0.639        1.47
18 mu_1       0.9      0.991        0.979   0.423        2.12
19 mu_0       0.1      1.07         0.563   0.00102      4.54
20 mu_0       0.2      1.08         0.986   0.0985       3.15
21 mu_0       0.3      1.04         1.01    0.497        2.08
22 mu_0       0.4      1.02         1.01    0.537        1.64
23 mu_0       0.5      1.03         1.03    0.560        1.98
24 mu_0       0.6      1.02         1.01    0.549        1.76
25 mu_0       0.7      1.01         1.01    0.689        1.30
26 mu_0       0.8      0.994        1.01    0.626        1.35
27 mu_0       0.9      0.981        0.978   0.494        1.87
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.731     5.43e-14  5.28e-41     68.1 
 2 mu         0.2      0.819     7.74e- 8  5.47e-28     22.2 
 3 mu         0.3      1.30      2.18e- 4  1.36e-20     26.3 
 4 mu         0.4      1.33      1.46e- 2  2.41e-15     22.7 
 5 mu         0.5      1.12      1.92e- 1  2.83e-11     13.2 
 6 mu         0.6      1.20      4.75e- 1  8.22e- 9      9.41
 7 mu         0.7      1.26      5.38e- 1  3.63e-13      9.04
 8 mu         0.8      1.52      2.04e- 1  1.89e-19     25.4 
 9 mu         0.9      1.22      1.39e- 3  2.20e-30     24.8 
10 mu_1       0.1      0.776     3.76e-13  4.96e-40     66.4 
11 mu_1       0.2      0.939     2.86e- 7  2.74e-27     28.6 
12 mu_1       0.3      1.37      4.93e- 4  4.54e-20     22.7 
13 mu_1       0.4      1.29      2.61e- 2  6.02e-15     20.9 
14 mu_1       0.5      1.11      2.41e- 1  5.66e-11     12.0 
15 mu_1       0.6      1.21      5.72e- 1  1.34e- 9     10.2 
16 mu_1       0.7      1.27      4.87e- 1  5.06e-14      8.90
17 mu_1       0.8      1.53      1.96e- 1  2.31e-20     27.1 
18 mu_1       0.9      1.20      9.56e- 4  2.39e-31     23.5 
19 mu_0       0.1      0.726     2.07e-14  0            68.3 
20 mu_0       0.2      0.790     2.72e- 8  0            20.6 
21 mu_0       0.3      1.27      1.00e- 4  0            27.9 
22 mu_0       0.4      1.35      7.66e- 3  0            24.0 
23 mu_0       0.5      1.13      1.51e- 1  0            14.3 
24 mu_0       0.6      1.19      3.36e- 1  0             8.44
25 mu_0       0.7      1.25      3.71e- 1  0            10.6 
26 mu_0       0.8      1.47      2.69e- 1  0            18.5 
27 mu_0       0.9      1.41      2.52e- 3  0            36.1 
[1] "Total run time was 167.257 seconds"
