
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3665"
[1] "cluster size dist'n: "

20 21 22 23 24 25 27 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 
 2  4  2  4  3  4  4  2  2  4  2  2  3  6  1  4  2  4  7  4  2  3  2  5  3  8 
48 49 50 
 3  3  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04841 0.36775 0.61891 1.00000 5.00000 
[1] "event indicator table: "

   0    1 
2254 1411 
[1] "treatment indicator table: "

   0    1 
1263 2402 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1871
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 13"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1794
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 42"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 253.818 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.365 0.0448
 2 mu         0.1   0.2 0.490 0.0561
 3 mu         0.1   0.3 0.574 0.0817
 4 mu         0.1   0.4 0.648 0.0854
 5 mu         0.1   0.5 0.690 0.0913
 6 mu         0.2   0.1 0.304 0.0224
 7 mu         0.2   0.2 0.414 0.0295
 8 mu         0.2   0.3 0.465 0.0417
 9 mu         0.2   0.4 0.518 0.0414
10 mu         0.2   0.5 0.549 0.0419
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.13         0.712   0.00129      6.35
 2 mu         0.2      1.00         0.959   0.0663       2.35
 3 mu         0.3      1.02         1.02    0.234        1.77
 4 mu         0.4      1.01         1.03    0.490        1.35
 5 mu         0.5      0.998        0.999   0.647        1.34
 6 mu         0.6      0.988        0.979   0.626        1.33
 7 mu         0.7      0.988        0.983   0.680        1.26
 8 mu         0.8      0.998        1.00    0.658        1.25
 9 mu         0.9      1.01         0.969   0.699        1.45
10 mu_1       0.1      1.08         0.887   0.00350      5.60
11 mu_1       0.2      1.00         0.995   0.0950       2.24
12 mu_1       0.3      1.02         1.05    0.273        1.72
13 mu_1       0.4      1.01         1.02    0.537        1.38
14 mu_1       0.5      0.995        0.992   0.687        1.32
15 mu_1       0.6      0.987        0.977   0.633        1.35
16 mu_1       0.7      0.989        0.983   0.669        1.26
17 mu_1       0.8      0.999        0.997   0.663        1.25
18 mu_1       0.9      1.01         0.966   0.684        1.45
19 mu_0       0.1      1.13         0.680   0.00104      6.43
20 mu_0       0.2      1.00         0.959   0.0591       2.39
21 mu_0       0.3      1.02         1.01    0.218        1.84
22 mu_0       0.4      1.01         1.03    0.459        1.34
23 mu_0       0.5      1.00         1.00    0.607        1.35
24 mu_0       0.6      0.989        0.971   0.614        1.33
25 mu_0       0.7      0.987        0.970   0.703        1.29
26 mu_0       0.8      0.996        1.01    0.637        1.26
27 mu_0       0.9      1.00         0.990   0.694        1.46
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.0670     2.17e-15  4.05e-42      6.17
 2 mu         0.2     0.646      1.02e- 8  2.25e-28     36.0 
 3 mu         0.3     1.23       3.48e- 5  2.17e-20     14.0 
 4 mu         0.4     1.47       1.26e- 2  5.30e-15     10.3 
 5 mu         0.5     1.28       2.52e- 1  4.99e-11      9.78
 6 mu         0.6     1.09       3.61e- 1  8.79e- 8      4.85
 7 mu         0.7     1.08       4.19e- 1  1.84e-10      6.21
 8 mu         0.8     1.07       4.05e- 1  1.25e-16      7.11
 9 mu         0.9     1.45       5.24e- 3  1.31e-27     16.7 
10 mu_1       0.1     0.133      1.68e-14  3.88e-41     11.8 
11 mu_1       0.2     0.775      3.42e- 8  1.08e-27     34.4 
12 mu_1       0.3     1.34       7.51e- 5  6.93e-20     12.9 
13 mu_1       0.4     1.47       2.03e- 2  1.33e-14     11.5 
14 mu_1       0.5     1.24       2.44e- 1  9.97e-11      8.74
15 mu_1       0.6     1.09       4.20e- 1  1.47e- 7      4.68
16 mu_1       0.7     1.08       4.09e- 1  5.04e-11      5.99
17 mu_1       0.8     1.08       4.32e- 1  2.99e-17      6.91
18 mu_1       0.9     1.46       4.03e- 3  2.79e-28     16.9 
19 mu_0       0.1     0.0597     7.02e-16  0             5.54
20 mu_0       0.2     0.613      4.16e- 9  0            36.3 
21 mu_0       0.3     1.18       1.66e- 5  0            14.5 
22 mu_0       0.4     1.48       7.40e- 3  0             9.52
23 mu_0       0.5     1.32       2.36e- 1  0            10.8 
24 mu_0       0.6     1.11       3.33e- 1  0             5.39
25 mu_0       0.7     1.08       2.68e- 1  0             6.71
26 mu_0       0.8     1.01       2.51e- 1  0             7.90
27 mu_0       0.9     1.41       1.14e- 2  0            17.5 
[1] "Total run time was 257.02 seconds"
