
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3623"
[1] "cluster size dist'n: "

20 21 22 24 25 26 27 28 29 30 31 32 33 35 36 37 38 39 40 41 42 43 44 45 46 47 
 4  1  1  3  4  1  4  7  3  2  2  3  4  5  6  2  1  6  2  6  5  4  5  4  3  2 
48 49 
 6  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02646 0.32686 0.59520 1.00000 7.31261 
[1] "event indicator table: "

   0    1 
2167 1456 
[1] "treatment indicator table: "

   0    1 
1383 2240 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1775
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1848
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 369.045 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.500 0.0678
 2 mu         0.1   0.2 0.597 0.0668
 3 mu         0.1   0.3 0.663 0.0716
 4 mu         0.1   0.4 0.708 0.0788
 5 mu         0.1   0.5 0.778 0.110 
 6 mu         0.2   0.1 0.401 0.0453
 7 mu         0.2   0.2 0.465 0.0336
 8 mu         0.2   0.3 0.516 0.0336
 9 mu         0.2   0.4 0.558 0.0389
10 mu         0.2   0.5 0.611 0.0659
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.20         0.674  0.000420      5.21
 2 mu         0.2      0.997        0.899  0.0606        2.39
 3 mu         0.3      0.983        0.947  0.319         1.67
 4 mu         0.4      0.988        0.969  0.573         1.44
 5 mu         0.5      1.00         0.991  0.739         1.51
 6 mu         0.6      1.02         1.02   0.737         1.48
 7 mu         0.7      1.01         1.02   0.758         1.26
 8 mu         0.8      0.976        0.976  0.607         1.28
 9 mu         0.9      0.985        0.980  0.287         1.67
10 mu_1       0.1      1.16         0.872  0.00121       4.12
11 mu_1       0.2      0.978        0.893  0.0908        2.29
12 mu_1       0.3      0.984        0.938  0.380         1.65
13 mu_1       0.4      0.988        0.975  0.599         1.41
14 mu_1       0.5      1.01         1.00   0.736         1.50
15 mu_1       0.6      1.03         1.03   0.742         1.48
16 mu_1       0.7      1.01         1.02   0.741         1.26
17 mu_1       0.8      0.974        0.973  0.594         1.28
18 mu_1       0.9      0.986        0.976  0.273         1.68
19 mu_0       0.1      1.21         0.641  0.000332      5.51
20 mu_0       0.2      1.00         0.918  0.0531        2.50
21 mu_0       0.3      0.983        0.937  0.294         1.69
22 mu_0       0.4      0.987        0.979  0.556         1.46
23 mu_0       0.5      1.00         0.976  0.741         1.53
24 mu_0       0.6      1.02         1.02   0.729         1.47
25 mu_0       0.7      1.02         1.02   0.794         1.25
26 mu_0       0.8      0.983        0.983  0.658         1.28
27 mu_0       0.9      0.981        0.957  0.418         1.52
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.201     1.15e-13  7.39e-40     17.7 
 2 mu         0.2      0.991     2.62e- 7  1.03e-26     46.4 
 3 mu         0.3      1.08      1.19e- 3  4.41e-19     11.5 
 4 mu         0.4      0.966     9.11e- 2  1.02e-13      6.17
 5 mu         0.5      1.04      3.51e- 1  1.30e- 9      5.15
 6 mu         0.6      0.988     5.18e- 1  2.09e- 6      4.73
 7 mu         0.7      0.849     4.76e- 1  2.62e- 9      4.10
 8 mu         0.8      0.991     1.24e- 1  1.03e-14      6.69
 9 mu         0.9      1.00      4.03e- 4  1.65e-24      9.80
10 mu_1       0.1      0.370     6.35e-13  7.07e-39     30.9 
11 mu_1       0.2      1.10      8.20e- 7  4.92e-26     40.6 
12 mu_1       0.3      1.08      2.30e- 3  1.40e-18     10.8 
13 mu_1       0.4      0.953     1.44e- 1  2.43e-13      5.50
14 mu_1       0.5      1.05      3.09e- 1  2.48e- 9      5.53
15 mu_1       0.6      0.967     4.98e- 1  3.40e- 6      4.51
16 mu_1       0.7      0.853     4.40e- 1  6.54e-10      3.86
17 mu_1       0.8      1.00      9.32e- 2  2.25e-15      7.03
18 mu_1       0.9      1.00      2.86e- 4  4.07e-25      9.78
19 mu_0       0.1      0.183     3.93e-14  0            16.2 
20 mu_0       0.2      0.964     1.38e- 7  0            47.8 
21 mu_0       0.3      1.08      7.19e- 4  0            11.8 
22 mu_0       0.4      0.975     5.95e- 2  0             6.69
23 mu_0       0.5      1.04      3.32e- 1  0             4.77
24 mu_0       0.6      1.02      3.77e- 1  0             5.07
25 mu_0       0.7      0.839     4.31e- 1  0             4.66
26 mu_0       0.8      0.944     8.87e- 2  0             6.22
27 mu_0       0.9      1.02      8.73e- 4  0            10.0 
[1] "Total run time was 373.754 seconds"
