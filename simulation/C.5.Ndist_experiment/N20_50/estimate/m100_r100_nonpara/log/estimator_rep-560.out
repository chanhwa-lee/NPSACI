
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3639"
[1] "cluster size dist'n: "

20 21 23 24 25 26 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 
 2  4  2  8  4  2  2  4  1  2  3  1  2  2  6  5  3  3  4  3  8  2  4  5  7  3 
48 49 50 
 1  5  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03415 0.34773 0.61821 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
2102 1537 
[1] "treatment indicator table: "

   0    1 
1406 2233 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1846
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 62"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1793
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 255.641 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.421 0.105 
 2 mu         0.1   0.2 0.433 0.0820
 3 mu         0.1   0.3 0.550 0.139 
 4 mu         0.1   0.4 0.584 0.150 
 5 mu         0.1   0.5 0.584 0.132 
 6 mu         0.2   0.1 0.373 0.0679
 7 mu         0.2   0.2 0.407 0.0501
 8 mu         0.2   0.3 0.502 0.0862
 9 mu         0.2   0.4 0.537 0.0918
10 mu         0.2   0.5 0.552 0.0790
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.766        0.320   0.00247      7.07
 2 mu         0.2      0.890        0.906   0.189        1.89
 3 mu         0.3      0.961        0.944   0.543        1.82
 4 mu         0.4      0.958        0.935   0.531        1.54
 5 mu         0.5      0.984        0.980   0.759        1.27
 6 mu         0.6      1.01         1.00    0.708        1.22
 7 mu         0.7      1.01         1.01    0.697        1.43
 8 mu         0.8      1.01         1.04    0.677        1.48
 9 mu         0.9      1.03         0.986   0.336        1.92
10 mu_1       0.1      0.803        0.579   0.00664      3.38
11 mu_1       0.2      0.919        0.912   0.286        1.76
12 mu_1       0.3      0.962        0.933   0.558        1.79
13 mu_1       0.4      0.960        0.945   0.544        1.54
14 mu_1       0.5      0.987        0.983   0.734        1.27
15 mu_1       0.6      1.01         1.00    0.713        1.25
16 mu_1       0.7      1.01         1.00    0.687        1.43
17 mu_1       0.8      1.01         1.03    0.683        1.53
18 mu_1       0.9      1.03         0.989   0.323        1.91
19 mu_0       0.1      0.762        0.293   0.00201      7.54
20 mu_0       0.2      0.883        0.892   0.161        1.92
21 mu_0       0.3      0.961        0.944   0.509        1.84
22 mu_0       0.4      0.956        0.931   0.523        1.55
23 mu_0       0.5      0.981        0.994   0.749        1.31
24 mu_0       0.6      1.00         1.00    0.702        1.21
25 mu_0       0.7      1.01         1.01    0.721        1.43
26 mu_0       0.8      1.01         1.02    0.651        1.36
27 mu_0       0.9      1.02         0.997   0.461        1.99
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      6.27      9.60e-14  6.51e-35    610.  
 2 mu         0.2      1.99      1.67e- 7  2.83e-23     98.7 
 3 mu         0.3      0.958     3.87e- 4  1.60e-16     15.8 
 4 mu         0.4      0.743     3.68e- 2  8.75e-12      5.69
 5 mu         0.5      0.919     3.19e- 1  3.66e- 8      7.08
 6 mu         0.6      1.10      8.50e- 1  1.45e- 8      5.88
 7 mu         0.7      1.19      7.98e- 1  3.61e-13      4.84
 8 mu         0.8      1.14      1.91e- 1  8.36e-20      9.73
 9 mu         0.9      1.03      3.57e- 4  2.44e-31     24.2 
10 mu_1       0.1      6.00      6.03e-13  6.19e-34    567.  
11 mu_1       0.2      1.57      5.73e- 7  1.35e-22     45.9 
12 mu_1       0.3      0.891     7.83e- 4  5.06e-16     13.6 
13 mu_1       0.4      0.748     5.79e- 2  2.08e-11      4.74
14 mu_1       0.5      0.945     3.62e- 1  6.96e- 8      7.08
15 mu_1       0.6      1.12      1.01e+ 0  2.26e- 9      6.26
16 mu_1       0.7      1.19      7.05e- 1  4.80e-14      4.42
17 mu_1       0.8      1.13      1.53e- 1  9.72e-21      9.88
18 mu_1       0.9      1.04      2.48e- 4  2.52e-32     26.9 
19 mu_0       0.1      6.30      3.97e-14  0           615.  
20 mu_0       0.2      2.09      6.50e- 8  0           112.  
21 mu_0       0.3      0.987     2.23e- 4  0            16.8 
22 mu_0       0.4      0.739     2.71e- 2  0             6.32
23 mu_0       0.5      0.894     1.99e- 1  0             7.08
24 mu_0       0.6      1.09      6.42e- 1  0             5.31
25 mu_0       0.7      1.17      1.00e+ 0  0             5.83
26 mu_0       0.8      1.16      3.13e- 1  0             9.12
27 mu_0       0.9      0.952     1.11e- 3  0            15.2 
[1] "Total run time was 260.727 seconds"
