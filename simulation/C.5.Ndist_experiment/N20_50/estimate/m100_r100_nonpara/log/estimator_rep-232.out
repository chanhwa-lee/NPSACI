
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3471"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 33 34 35 37 38 39 40 41 42 43 44 45 46 47 
 4  4  3  3  3  3  6  2  3  4  1  6  3  3  6  4  5  2  4  3  2  3  3  2  4  7 
48 49 50 
 4  1  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04042 0.36569 0.63558 1.00000 6.44448 
[1] "event indicator table: "

   0    1 
2128 1343 
[1] "treatment indicator table: "

   0    1 
1169 2302 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1695
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 73"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1776
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 10"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 214.394 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.340 0.124 
 2 mu         0.1   0.2 0.484 0.143 
 3 mu         0.1   0.3 0.587 0.162 
 4 mu         0.1   0.4 0.655 0.178 
 5 mu         0.1   0.5 0.698 0.189 
 6 mu         0.2   0.1 0.246 0.0613
 7 mu         0.2   0.2 0.359 0.0554
 8 mu         0.2   0.3 0.429 0.0374
 9 mu         0.2   0.4 0.477 0.0427
10 mu         0.2   0.5 0.506 0.0439
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      1.25         0.174 0.00000105      25.4 
 2 mu         0.2      0.970        0.834 0.00371          4.08
 3 mu         0.3      0.976        0.983 0.0970           2.52
 4 mu         0.4      1.01         0.986 0.477            1.82
 5 mu         0.5      1.01         1.00  0.633            1.51
 6 mu         0.6      0.998        0.982 0.707            1.31
 7 mu         0.7      1.00         0.992 0.771            1.43
 8 mu         0.8      1.02         1.02  0.656            1.41
 9 mu         0.9      1.03         1.04  0.461            1.85
10 mu_1       0.1      0.916        0.340 0.00000407       5.36
11 mu_1       0.2      0.968        0.875 0.00808          3.51
12 mu_1       0.3      0.977        0.961 0.146            2.22
13 mu_1       0.4      1.02         0.970 0.541            1.72
14 mu_1       0.5      1.01         1.00  0.630            1.49
15 mu_1       0.6      0.997        0.984 0.704            1.29
16 mu_1       0.7      1.00         0.995 0.777            1.44
17 mu_1       0.8      1.02         1.02  0.643            1.40
18 mu_1       0.9      1.03         1.03  0.436            1.89
19 mu_0       0.1      1.29         0.153 0.000000719     28.2 
20 mu_0       0.2      0.971        0.826 0.00261          4.23
21 mu_0       0.3      0.976        0.972 0.0759           2.64
22 mu_0       0.4      1.01         0.999 0.413            1.88
23 mu_0       0.5      1.01         1.00  0.636            1.52
24 mu_0       0.6      0.999        0.998 0.710            1.34
25 mu_0       0.7      1.00         0.981 0.753            1.40
26 mu_0       0.8      1.02         1.01  0.709            1.45
27 mu_0       0.9      1.04         1.05  0.410            1.55
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.0688     5.79e-14  4.99e-37      6.59
 2 mu         0.2     0.835      9.95e- 8  2.74e-24     68.3 
 3 mu         0.3     0.857      2.47e- 4  6.00e-17     21.6 
 4 mu         0.4     1.14       2.65e- 2  7.63e-12     10.6 
 5 mu         0.5     1.36       2.92e- 1  5.41e- 8     11.6 
 6 mu         0.6     1.32       6.30e- 1  7.34e- 6     19.1 
 7 mu         0.7     1.22       6.46e- 1  4.60e-10      8.05
 8 mu         0.8     1.13       5.98e- 1  2.37e-16      6.34
 9 mu         0.9     1.16       9.20e- 3  1.40e-27     11.1 
10 mu_1       0.1     0.144      4.45e-13  4.57e-36     13.5 
11 mu_1       0.2     0.949      3.42e- 7  1.25e-23     69.7 
12 mu_1       0.3     0.902      5.79e- 4  1.83e-16     19.0 
13 mu_1       0.4     1.19       4.29e- 2  1.75e-11     10.5 
14 mu_1       0.5     1.37       3.16e- 1  9.90e- 8     10.9 
15 mu_1       0.6     1.32       6.89e- 1  2.50e- 6     19.3 
16 mu_1       0.7     1.22       6.34e- 1  1.34e-10      7.00
17 mu_1       0.8     1.12       5.00e- 1  6.04e-17      6.40
18 mu_1       0.9     1.16       7.30e- 3  3.17e-28     10.9 
19 mu_0       0.1     0.0604     1.70e-14  4.72e-38      5.83
20 mu_0       0.2     0.807      3.89e- 8  2.92e-25     67.9 
21 mu_0       0.3     0.838      1.05e- 4  7.29e-18     24.5 
22 mu_0       0.4     1.11       1.55e- 2  1.08e-12     12.1 
23 mu_0       0.5     1.36       1.87e- 1  5.48e- 9     12.3 
24 mu_0       0.6     1.33       4.96e- 1  2.70e- 6     18.6 
25 mu_0       0.7     1.22       5.71e- 1  1.22e- 9     10.5 
26 mu_0       0.8     1.17       4.99e- 1  9.43e-16      6.10
27 mu_0       0.9     1.16       2.90e- 2  1.11e-26     13.2 
[1] "Total run time was 217.579 seconds"
