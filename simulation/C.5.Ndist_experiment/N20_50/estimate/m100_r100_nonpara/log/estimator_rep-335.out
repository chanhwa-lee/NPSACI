
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3517"
[1] "cluster size dist'n: "

21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 
 4  3  5  4  2  4  2  3  4  3  5  3  2  2  4  1  2  6  5  2  7  5  3  2  2  2 
47 48 49 50 
 4  6  2  1 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03741 0.37154 0.64637 1.00000 6.09590 
[1] "event indicator table: "

   0    1 
2132 1385 
[1] "treatment indicator table: "

   0    1 
1220 2297 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1779
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 96"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1738
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 301.872 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.452 0.0793
 2 mu         0.1   0.2 0.539 0.102 
 3 mu         0.1   0.3 0.616 0.145 
 4 mu         0.1   0.4 0.636 0.155 
 5 mu         0.1   0.5 0.687 0.170 
 6 mu         0.2   0.1 0.342 0.0264
 7 mu         0.2   0.2 0.421 0.0450
 8 mu         0.2   0.3 0.464 0.0638
 9 mu         0.2   0.4 0.488 0.0716
10 mu         0.2   0.5 0.526 0.0768
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.17         0.623  0.000183     17.4 
 2 mu         0.2      0.954        0.903  0.0514        2.70
 3 mu         0.3      0.982        0.950  0.269         2.10
 4 mu         0.4      1.01         0.991  0.445         1.64
 5 mu         0.5      1.01         1.02   0.559         1.46
 6 mu         0.6      0.987        0.991  0.449         1.46
 7 mu         0.7      1.00         0.996  0.739         1.34
 8 mu         0.8      1.02         1.02   0.712         1.42
 9 mu         0.9      1.00         0.963  0.491         1.81
10 mu_1       0.1      1.03         0.804  0.000572      7.44
11 mu_1       0.2      0.952        0.934  0.0992        2.42
12 mu_1       0.3      0.986        0.926  0.276         2.08
13 mu_1       0.4      1.01         0.994  0.476         1.55
14 mu_1       0.5      1.01         1.01   0.540         1.50
15 mu_1       0.6      0.986        0.986  0.465         1.44
16 mu_1       0.7      1.00         1.00   0.738         1.35
17 mu_1       0.8      1.02         1.02   0.701         1.44
18 mu_1       0.9      1.00         0.953  0.487         1.82
19 mu_0       0.1      1.19         0.572  0.000140     18.5 
20 mu_0       0.2      0.955        0.907  0.0394        2.95
21 mu_0       0.3      0.980        0.931  0.255         2.10
22 mu_0       0.4      1.00         0.977  0.425         1.69
23 mu_0       0.5      1.01         1.02   0.555         1.45
24 mu_0       0.6      0.987        0.988  0.425         1.49
25 mu_0       0.7      0.996        0.989  0.731         1.32
26 mu_0       0.8      1.02         1.01   0.744         1.37
27 mu_0       0.9      1.01         1.01   0.531         1.75
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.68      1.15e-13  7.07e-44    165.  
 2 mu         0.2      0.750     9.75e- 8  1.57e-29     24.4 
 3 mu         0.3      0.962     2.42e- 4  3.41e-21     19.1 
 4 mu         0.4      0.966     2.83e- 2  2.49e-15     11.2 
 5 mu         0.5      1.05      3.19e- 1  7.75e-11      7.66
 6 mu         0.6      1.29      7.14e- 1  3.13e- 7      9.53
 7 mu         0.7      1.17      7.96e- 1  3.53e-10      6.25
 8 mu         0.8      1.05      2.58e- 1  1.05e-15      5.34
 9 mu         0.9      1.10      1.78e- 3  1.39e-26     13.2 
10 mu_1       0.1      1.18      8.03e-13  6.78e-43    110.  
11 mu_1       0.2      0.751     3.30e- 7  7.54e-29     21.2 
12 mu_1       0.3      1.00      4.95e- 4  1.09e-20     20.0 
13 mu_1       0.4      0.949     3.80e- 2  5.97e-15      9.93
14 mu_1       0.5      1.08      3.51e- 1  1.49e-10      8.15
15 mu_1       0.6      1.30      6.86e- 1  9.09e- 8      9.60
16 mu_1       0.7      1.16      7.38e- 1  3.37e-11      6.64
17 mu_1       0.8      1.05      2.14e- 1  2.94e-16      5.41
18 mu_1       0.9      1.09      1.24e- 3  3.47e-27     13.9 
19 mu_0       0.1      1.74      3.61e-14  0           171.  
20 mu_0       0.2      0.749     3.87e- 8  0            28.5 
21 mu_0       0.3      0.946     1.34e- 4  0            18.7 
22 mu_0       0.4      0.976     1.51e- 2  0            12.8 
23 mu_0       0.5      1.03      2.54e- 1  0             7.17
24 mu_0       0.6      1.29      7.17e- 1  0             9.43
25 mu_0       0.7      1.21      6.13e- 1  0             5.34
26 mu_0       0.8      1.04      3.25e- 1  0             6.68
27 mu_0       0.9      1.12      5.09e- 3  0             8.46
[1] "Total run time was 306.107 seconds"
