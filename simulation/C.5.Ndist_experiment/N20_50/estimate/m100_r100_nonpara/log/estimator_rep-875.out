
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3482"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 35 36 37 38 39 40 41 42 44 45 46 47 
 2  6  2  4  4  3  2  7  6  2  1  2  3  3  2  4  6  2  3  3  2  6  5  4  1  4 
48 49 50 
 4  4  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.05971 0.40634 0.66460 1.00000 6.38585 
[1] "event indicator table: "

   0    1 
2076 1406 
[1] "treatment indicator table: "

   0    1 
1288 2194 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1730
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 11"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1752
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 40"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 97"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 164.235 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.233 0.0581
 2 mu         0.1   0.2 0.251 0.0494
 3 mu         0.1   0.3 0.363 0.0831
 4 mu         0.1   0.4 0.430 0.101 
 5 mu         0.1   0.5 0.434 0.103 
 6 mu         0.2   0.1 0.279 0.0397
 7 mu         0.2   0.2 0.329 0.0351
 8 mu         0.2   0.3 0.457 0.0567
 9 mu         0.2   0.4 0.528 0.0679
10 mu         0.2   0.5 0.543 0.0710
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.653        0.311  0.000418      6.29
 2 mu         0.2      0.969        0.868  0.187         3.88
 3 mu         0.3      1.05         1.01   0.460         2.22
 4 mu         0.4      1.01         1.02   0.438         1.57
 5 mu         0.5      0.988        0.998  0.493         1.36
 6 mu         0.6      0.985        0.994  0.611         1.55
 7 mu         0.7      0.992        0.987  0.658         1.31
 8 mu         0.8      0.985        0.973  0.586         1.37
 9 mu         0.9      1.02         1.02   0.532         1.56
10 mu_1       0.1      0.788        0.540  0.00125       6.16
11 mu_1       0.2      1.02         0.923  0.261         3.62
12 mu_1       0.3      1.05         1.00   0.417         2.19
13 mu_1       0.4      0.999        1.01   0.438         1.51
14 mu_1       0.5      0.987        0.998  0.473         1.38
15 mu_1       0.6      0.985        0.997  0.602         1.56
16 mu_1       0.7      0.992        0.998  0.628         1.33
17 mu_1       0.8      0.985        0.973  0.602         1.37
18 mu_1       0.9      1.02         1.02   0.549         1.57
19 mu_0       0.1      0.638        0.285  0.000326      6.31
20 mu_0       0.2      0.955        0.866  0.168         4.04
21 mu_0       0.3      1.05         1.01   0.474         2.24
22 mu_0       0.4      1.01         1.01   0.438         1.61
23 mu_0       0.5      0.990        0.996  0.514         1.37
24 mu_0       0.6      0.984        0.990  0.550         1.54
25 mu_0       0.7      0.992        1.00   0.661         1.37
26 mu_0       0.8      0.985        0.974  0.523         1.43
27 mu_0       0.9      1.01         0.995  0.381         1.50
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.711     2.16e-12  5.50e-42     56.4 
 2 mu         0.2      1.82      1.12e- 6  3.06e-28     64.9 
 3 mu         0.3      1.64      8.84e- 4  2.95e-20     26.1 
 4 mu         0.4      1.56      5.20e- 2  1.21e-14     39.5 
 5 mu         0.5      1.38      3.72e- 1  2.41e-10     19.2 
 6 mu         0.6      1.36      6.65e- 1  1.29e- 7      8.84
 7 mu         0.7      1.10      5.42e- 1  3.82e-12      5.80
 8 mu         0.8      0.973     2.33e- 1  8.79e-19      9.03
 9 mu         0.9      1.13      3.92e- 3  1.82e-30     16.3 
10 mu_1       0.1      1.16      1.54e-11  5.27e-41     84.0 
11 mu_1       0.2      1.88      3.92e- 6  1.47e-27     48.3 
12 mu_1       0.3      1.63      2.07e- 3  9.42e-20     25.4 
13 mu_1       0.4      1.52      6.39e- 2  2.90e-14     40.4 
14 mu_1       0.5      1.39      3.94e- 1  4.62e-10     15.7 
15 mu_1       0.6      1.35      7.81e- 1  3.20e- 8      8.72
16 mu_1       0.7      1.08      5.04e- 1  8.12e-13      6.12
17 mu_1       0.8      0.962     1.85e- 1  1.64e-19      8.75
18 mu_1       0.9      1.14      2.88e- 3  3.02e-31     17.5 
19 mu_0       0.1      0.662     6.93e-13  2.55e-43     53.3 
20 mu_0       0.2      1.80      4.14e- 7  1.59e-29     69.0 
21 mu_0       0.3      1.65      3.78e- 4  1.76e-21     26.4 
22 mu_0       0.4      1.59      2.79e- 2  8.41e-16     38.9 
23 mu_0       0.5      1.38      2.46e- 1  2.01e-11     22.7 
24 mu_0       0.6      1.38      5.09e- 1  7.06e- 8      9.02
25 mu_0       0.7      1.13      5.37e- 1  1.08e-11      6.44
26 mu_0       0.8      1.02      2.35e- 1  3.74e-18     10.2 
27 mu_0       0.9      1.01      1.28e- 2  1.55e-29     11.5 
[1] "Total run time was 167.147 seconds"
