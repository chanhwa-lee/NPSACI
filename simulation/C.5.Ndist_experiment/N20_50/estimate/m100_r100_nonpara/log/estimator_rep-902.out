
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3455"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 3  6  8  4  2  3  8  1  3  1  1  2  1  4  3  5  3  1  3  1  1  1  6  1  4  5 
46 47 48 49 50 
 2  4  1  6  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02093 0.30179 0.56493 0.95433 7.00000 
[1] "event indicator table: "

   0    1 
2084 1371 
[1] "treatment indicator table: "

   0    1 
1284 2171 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1657
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1798
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 206.872 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.472 0.0938
 2 mu         0.1   0.2 0.515 0.0931
 3 mu         0.1   0.3 0.599 0.117 
 4 mu         0.1   0.4 0.635 0.116 
 5 mu         0.1   0.5 0.659 0.112 
 6 mu         0.2   0.1 0.462 0.0550
 7 mu         0.2   0.2 0.527 0.0534
 8 mu         0.2   0.3 0.601 0.0637
 9 mu         0.2   0.4 0.645 0.0646
10 mu         0.2   0.5 0.694 0.0613
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.887        0.378 0.0000156      8.24
 2 mu         0.2      1.00         1.01  0.0239         2.94
 3 mu         0.3      0.995        1.01  0.380          1.74
 4 mu         0.4      1.01         0.988 0.562          1.60
 5 mu         0.5      1.01         1.01  0.688          1.35
 6 mu         0.6      0.997        0.992 0.790          1.25
 7 mu         0.7      1.00         1.00  0.766          1.41
 8 mu         0.8      0.994        0.986 0.639          1.47
 9 mu         0.9      0.996        0.979 0.218          1.94
10 mu_1       0.1      0.956        0.639 0.0000558      5.34
11 mu_1       0.2      0.994        1.03  0.0435         2.82
12 mu_1       0.3      1.00         0.980 0.471          1.72
13 mu_1       0.4      1.02         0.989 0.570          1.64
14 mu_1       0.5      1.00         0.995 0.714          1.29
15 mu_1       0.6      0.997        0.991 0.789          1.25
16 mu_1       0.7      1.00         0.991 0.763          1.42
17 mu_1       0.8      0.993        0.984 0.605          1.47
18 mu_1       0.9      0.998        0.977 0.203          1.98
19 mu_0       0.1      0.880        0.348 0.0000111      8.62
20 mu_0       0.2      1.00         0.982 0.0190         2.98
21 mu_0       0.3      0.992        1.01  0.338          1.79
22 mu_0       0.4      1.01         0.992 0.544          1.58
23 mu_0       0.5      1.01         1.00  0.661          1.41
24 mu_0       0.6      0.998        1.00  0.791          1.25
25 mu_0       0.7      1.00         0.998 0.761          1.40
26 mu_0       0.8      0.998        0.974 0.672          1.46
27 mu_0       0.9      0.977        0.993 0.350          1.60
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.805     7.23e-12  3.52e-43     73.3 
 2 mu         0.2      1.20      4.87e- 6  7.84e-29     62.5 
 3 mu         0.3      0.813     2.94e- 3  1.70e-20     16.7 
 4 mu         0.4      0.769     1.03e- 1  1.24e-14      7.30
 5 mu         0.5      1.14      6.30e- 1  3.86e-10      6.38
 6 mu         0.6      1.26      1.19e+ 0  1.56e- 6      3.27
 7 mu         0.7      1.11      8.39e- 1  1.84e- 8      9.23
 8 mu         0.8      0.848     1.90e- 1  1.24e-13      6.65
 9 mu         0.9      1.17      7.09e- 4  7.42e-23     27.7 
10 mu_1       0.1      1.15      4.26e-11  3.38e-42     99.9 
11 mu_1       0.2      1.09      1.51e- 5  3.76e-28     42.6 
12 mu_1       0.3      0.729     5.85e- 3  5.44e-20     10.2 
13 mu_1       0.4      0.795     1.63e- 1  2.98e-14      7.30
14 mu_1       0.5      1.19      6.94e- 1  7.42e-10      6.38
15 mu_1       0.6      1.25      1.21e+ 0  2.50e- 6      3.66
16 mu_1       0.7      1.09      7.33e- 1  5.26e- 9      9.23
17 mu_1       0.8      0.844     1.67e- 1  3.11e-14      6.97
18 mu_1       0.9      1.20      5.17e- 4  1.65e-23     29.5 
19 mu_0       0.1      0.767     3.30e-12  0            70.3 
20 mu_0       0.2      1.22      2.63e- 6  0            67.5 
21 mu_0       0.3      0.849     1.68e- 3  0            20.6 
22 mu_0       0.4      0.751     6.33e- 2  0             7.30
23 mu_0       0.5      1.09      4.40e- 1  0             6.38
24 mu_0       0.6      1.27      1.11e+ 0  0             3.82
25 mu_0       0.7      1.17      1.04e+ 0  0             9.23
26 mu_0       0.8      0.866     3.21e- 1  0             5.39
27 mu_0       0.9      0.907     1.59e- 3  0            13.0 
[1] "Total run time was 210.428 seconds"
