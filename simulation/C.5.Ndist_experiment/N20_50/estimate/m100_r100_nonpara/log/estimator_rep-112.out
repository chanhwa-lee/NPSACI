
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3501"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 
 5  5  3  2  3  2  5  3  2  7  2  2  3  3  4  4  2  1  2  5  1  4  4  6  3  5 
47 48 49 50 
 4  2  1  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03331 0.35844 0.61610 1.00000 5.00000 
[1] "event indicator table: "

   0    1 
2040 1461 
[1] "treatment indicator table: "

   0    1 
1193 2308 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1772
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1729
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 183.337 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.230 0.214 
 2 mu         0.1   0.2 0.286 0.261 
 3 mu         0.1   0.3 0.337 0.275 
 4 mu         0.1   0.4 0.433 0.306 
 5 mu         0.1   0.5 0.451 0.352 
 6 mu         0.2   0.1 0.257 0.0732
 7 mu         0.2   0.2 0.294 0.0774
 8 mu         0.2   0.3 0.327 0.0764
 9 mu         0.2   0.4 0.389 0.0824
10 mu         0.2   0.5 0.438 0.115 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.757      0.00625  3.35e-13     52.6 
 2 mu         0.2      0.662      0.309    5.40e- 7      8.99
 3 mu         0.3      0.841      0.774    6.67e- 4      7.05
 4 mu         0.4      0.896      0.901    3.59e- 2      1.78
 5 mu         0.5      0.951      0.978    3.08e- 1      1.66
 6 mu         0.6      0.993      0.989    6.93e- 1      1.38
 7 mu         0.7      0.997      0.998    7.22e- 1      1.41
 8 mu         0.8      1.00       1.00     3.35e- 1      1.63
 9 mu         0.9      1.00       0.933    7.36e- 3      4.69
10 mu_1       0.1      0.822      0.0182   1.79e-12     52.6 
11 mu_1       0.2      0.702      0.439    1.46e- 6      6.83
12 mu_1       0.3      0.863      0.852    1.21e- 3      6.25
13 mu_1       0.4      0.905      0.922    5.00e- 2      1.65
14 mu_1       0.5      0.960      0.982    3.54e- 1      1.63
15 mu_1       0.6      0.995      0.996    7.04e- 1      1.41
16 mu_1       0.7      0.998      0.999    7.04e- 1      1.39
17 mu_1       0.8      1.01       1.00     3.11e- 1      1.64
18 mu_1       0.9      0.998      0.928    6.29e- 3      4.85
19 mu_0       0.1      0.750      0.00475  1.73e-13     52.6 
20 mu_0       0.2      0.652      0.286    3.11e- 7      9.98
21 mu_0       0.3      0.832      0.765    4.34e- 4      7.40
22 mu_0       0.4      0.889      0.897    2.66e- 2      2.03
23 mu_0       0.5      0.942      0.957    2.60e- 1      1.69
24 mu_0       0.6      0.990      0.991    6.76e- 1      1.41
25 mu_0       0.7      0.997      1.00     7.36e- 1      1.44
26 mu_0       0.8      1.00       0.993    4.27e- 1      1.56
27 mu_0       0.9      1.01       0.961    1.70e- 2      3.30
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1    0.00575     4.17e-14  3.10e-34     0.505
 2 mu         0.2    0.234       3.71e- 8  1.20e-22     9.90 
 3 mu         0.3    1.06        1.15e- 4  5.92e-16    40.3  
 4 mu         0.4    1.39        1.77e- 2  2.78e-11    22.7  
 5 mu         0.5    1.38        2.37e- 1  9.68e- 8    16.7  
 6 mu         0.6    1.20        8.32e- 1  6.07e- 5     8.32 
 7 mu         0.7    1.11        7.94e- 1  4.47e- 8     6.01 
 8 mu         0.8    1.55        5.16e- 1  1.33e-13    35.8  
 9 mu         0.9    2.09        2.90e- 3  1.00e-23   111.   
10 mu_1       0.1    0.0176      2.67e-13  2.88e-33     1.51 
11 mu_1       0.2    0.372       1.21e- 7  5.56e-22    15.1  
12 mu_1       0.3    1.21        2.48e- 4  1.83e-15    40.9  
13 mu_1       0.4    1.41        3.01e- 2  6.45e-11    22.2  
14 mu_1       0.5    1.36        3.17e- 1  1.80e- 7    16.0  
15 mu_1       0.6    1.18        8.20e- 1  7.58e- 5     8.13 
16 mu_1       0.7    1.11        8.08e- 1  1.79e- 8     5.92 
17 mu_1       0.8    1.59        4.39e- 1  4.64e-14    39.7  
18 mu_1       0.9    2.06        2.26e- 3  3.12e-24   109.   
19 mu_0       0.1    0.00444     1.43e-14  2.46e-35     0.392
20 mu_0       0.2    0.200       1.61e- 8  1.07e-23     8.61 
21 mu_0       0.3    0.992       5.83e- 5  6.04e-17    40.0  
22 mu_0       0.4    1.38        9.47e- 3  3.31e-12    23.0  
23 mu_0       0.5    1.40        1.66e- 1  1.38e- 8    17.4  
24 mu_0       0.6    1.24        7.46e- 1  1.08e- 5     8.61 
25 mu_0       0.7    1.11        7.68e- 1  1.07e- 7     6.22 
26 mu_0       0.8    1.37        5.41e- 1  4.77e-13    20.4  
27 mu_0       0.9    2.30        8.65e- 3  7.23e-23   126.   
[1] "Total run time was 186.409 seconds"
