
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3510"
[1] "cluster size dist'n: "

20 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 
 8  1  8  4  2  1  4  5  3  2  5  2  4  1  2  4  2  1  1  2  2  3  3  1  7  5 
47 48 49 50 
 7  2  4  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.07292 0.43456 0.68974 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
2080 1430 
[1] "treatment indicator table: "

   0    1 
1155 2355 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1691
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1819
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 227.355 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.502 0.130 
 2 mu         0.1   0.2 0.545 0.168 
 3 mu         0.1   0.3 0.563 0.192 
 4 mu         0.1   0.4 0.572 0.206 
 5 mu         0.1   0.5 0.585 0.214 
 6 mu         0.2   0.1 0.381 0.0458
 7 mu         0.2   0.2 0.416 0.0711
 8 mu         0.2   0.3 0.447 0.0865
 9 mu         0.2   0.4 0.464 0.0956
10 mu         0.2   0.5 0.479 0.0980
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.12         0.384  0.000968     23.1 
 2 mu         0.2      1.00         0.882  0.0896        2.58
 3 mu         0.3      1.04         1.04   0.394         2.21
 4 mu         0.4      1.04         1.02   0.531         1.93
 5 mu         0.5      1.04         1.03   0.446         1.54
 6 mu         0.6      1.03         1.03   0.465         1.36
 7 mu         0.7      1.01         1.01   0.428         1.41
 8 mu         0.8      0.989        0.983  0.628         1.36
 9 mu         0.9      0.955        0.956  0.520         1.37
10 mu_1       0.1      1.09         0.568  0.00280      14.8 
11 mu_1       0.2      1.01         0.914  0.146         2.48
12 mu_1       0.3      1.04         1.01   0.484         2.14
13 mu_1       0.4      1.04         1.03   0.532         1.83
14 mu_1       0.5      1.04         1.04   0.470         1.53
15 mu_1       0.6      1.03         1.03   0.448         1.35
16 mu_1       0.7      1.01         1.01   0.434         1.42
17 mu_1       0.8      0.987        0.981  0.624         1.35
18 mu_1       0.9      0.955        0.963  0.513         1.35
19 mu_0       0.1      1.13         0.355  0.000764     24.0 
20 mu_0       0.2      1.00         0.868  0.0756        2.60
21 mu_0       0.3      1.04         1.04   0.356         2.27
22 mu_0       0.4      1.04         1.02   0.515         1.99
23 mu_0       0.5      1.04         1.03   0.422         1.54
24 mu_0       0.6      1.03         1.03   0.490         1.39
25 mu_0       0.7      1.02         1.01   0.412         1.39
26 mu_0       0.8      0.996        0.993  0.635         1.40
27 mu_0       0.9      0.958        0.955  0.555         1.46
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.173     1.66e-14  1.54e-41      9.06
 2 mu         0.2      0.824     2.90e- 8  4.83e-28     27.5 
 3 mu         0.3      1.18      4.74e- 5  3.55e-20     26.5 
 4 mu         0.4      1.13      4.74e- 3  1.27e-14     19.1 
 5 mu         0.5      1.17      9.50e- 2  2.44e-10     13.4 
 6 mu         0.6      1.31      3.48e- 1  6.48e- 7     10.3 
 7 mu         0.7      1.31      8.11e- 1  2.83e- 7     21.6 
 8 mu         0.8      1.37      5.49e- 1  1.64e-12     11.1 
 9 mu         0.9      1.58      1.81e- 2  2.80e-22     15.0 
10 mu_1       0.1      0.347     1.07e-13  1.51e-40     18.1 
11 mu_1       0.2      0.941     1.04e- 7  2.36e-27     27.5 
12 mu_1       0.3      1.17      1.06e- 4  1.16e-19     25.5 
13 mu_1       0.4      1.13      8.70e- 3  3.12e-14     19.3 
14 mu_1       0.5      1.21      1.18e- 1  4.77e-10     14.0 
15 mu_1       0.6      1.30      3.64e- 1  1.06e- 6     10.0 
16 mu_1       0.7      1.31      8.18e- 1  8.97e- 8     21.4 
17 mu_1       0.8      1.38      4.61e- 1  6.16e-13     11.4 
18 mu_1       0.9      1.61      1.34e- 2  9.32e-23     16.3 
19 mu_0       0.1      0.153     6.57e-15  0             8.06
20 mu_0       0.2      0.794     1.02e- 8  0            27.5 
21 mu_0       0.3      1.18      1.87e- 5  0            27.0 
22 mu_0       0.4      1.12      2.16e- 3  0            18.9 
23 mu_0       0.5      1.13      4.93e- 2  0            12.8 
24 mu_0       0.6      1.31      2.93e- 1  0            12.3 
25 mu_0       0.7      1.32      7.36e- 1  0            22.1 
26 mu_0       0.8      1.33      5.51e- 1  0             9.84
27 mu_0       0.9      1.36      4.40e- 2  0             8.89
[1] "Total run time was 231.148 seconds"
