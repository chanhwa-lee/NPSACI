
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3457"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 
 1  5  2  3  7  2  6  2  5  5  3  4  5  2  4  1  4  4  1  5  1  3  3  3  4  5 
47 48 49 50 
 1  1  6  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04204 0.35471 0.61172 1.00000 5.93371 
[1] "event indicator table: "

   0    1 
2059 1398 
[1] "treatment indicator table: "

   0    1 
1178 2279 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1804
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1653
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 194.491 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.350 0.0597
 2 mu         0.1   0.2 0.411 0.0695
 3 mu         0.1   0.3 0.513 0.0668
 4 mu         0.1   0.4 0.567 0.0760
 5 mu         0.1   0.5 0.644 0.0837
 6 mu         0.2   0.1 0.347 0.0351
 7 mu         0.2   0.2 0.411 0.0421
 8 mu         0.2   0.3 0.497 0.0452
 9 mu         0.2   0.4 0.565 0.0480
10 mu         0.2   0.5 0.630 0.0491
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      0.964        0.498 0.000000980      7.87
 2 mu         0.2      1.01         0.912 0.00411          3.60
 3 mu         0.3      0.978        0.975 0.140            1.96
 4 mu         0.4      0.971        1.00  0.408            1.37
 5 mu         0.5      0.964        0.956 0.589            1.33
 6 mu         0.6      0.983        0.971 0.767            1.42
 7 mu         0.7      1.01         1.01  0.757            1.35
 8 mu         0.8      0.999        1.01  0.518            1.43
 9 mu         0.9      0.976        0.985 0.577            1.47
10 mu_1       0.1      1.06         0.665 0.00000378       7.16
11 mu_1       0.2      1.01         0.960 0.00814          2.84
12 mu_1       0.3      0.977        0.983 0.193            1.91
13 mu_1       0.4      0.970        0.984 0.383            1.33
14 mu_1       0.5      0.963        0.949 0.631            1.32
15 mu_1       0.6      0.986        0.979 0.723            1.41
16 mu_1       0.7      1.01         1.00  0.794            1.36
17 mu_1       0.8      0.997        1.00  0.511            1.46
18 mu_1       0.9      0.975        0.983 0.570            1.47
19 mu_0       0.1      0.954        0.480 0.000000669      7.95
20 mu_0       0.2      1.01         0.897 0.00310          3.79
21 mu_0       0.3      0.979        0.968 0.117            1.98
22 mu_0       0.4      0.972        1.01  0.420            1.41
23 mu_0       0.5      0.964        0.966 0.546            1.34
24 mu_0       0.6      0.979        0.963 0.752            1.43
25 mu_0       0.7      1.01         1.00  0.667            1.33
26 mu_0       0.8      1.01         1.02  0.545            1.33
27 mu_0       0.9      0.982        0.982 0.597            1.48
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.0813     1.70e-13  9.24e-43      2.62
 2 mu         0.2     0.757      7.57e- 8  1.03e-28     28.9 
 3 mu         0.3     0.983      1.75e- 4  1.49e-20     17.7 
 4 mu         0.4     1.06       1.56e- 2  8.13e-15     10.4 
 5 mu         0.5     1.03       1.36e- 1  2.03e-10      6.20
 6 mu         0.6     0.970      3.72e- 1  6.83e- 7      8.18
 7 mu         0.7     0.980      5.87e- 1  1.42e- 7      4.77
 8 mu         0.8     1.29       7.14e- 1  1.64e-12      6.25
 9 mu         0.9     1.48       1.78e- 2  2.21e-21     19.3 
10 mu_1       0.1     0.190      1.23e-12  8.86e-42      6.23
11 mu_1       0.2     0.917      2.43e- 7  4.93e-28     32.5 
12 mu_1       0.3     0.965      3.85e- 4  4.75e-20     13.3 
13 mu_1       0.4     1.06       2.85e- 2  1.95e-14     10.1 
14 mu_1       0.5     1.03       1.50e- 1  3.89e-10      7.01
15 mu_1       0.6     0.969      4.41e- 1  1.09e- 6      8.15
16 mu_1       0.7     0.994      5.83e- 1  4.56e- 8      5.15
17 mu_1       0.8     1.31       5.95e- 1  4.61e-13      6.87
18 mu_1       0.9     1.47       1.36e- 2  5.51e-22     19.8 
19 mu_0       0.1     0.0692     5.22e-14  4.19e-44      2.21
20 mu_0       0.2     0.718      3.39e- 8  5.24e-30     28.0 
21 mu_0       0.3     0.990      8.46e- 5  8.67e-22     19.6 
22 mu_0       0.4     1.05       7.09e- 3  5.53e-16     10.6 
23 mu_0       0.5     1.02       1.27e- 1  1.65e-11      5.91
24 mu_0       0.6     0.972      2.96e- 1  6.97e- 8      8.89
25 mu_0       0.7     0.946      5.36e- 1  3.66e- 7      5.49
26 mu_0       0.8     1.24       6.53e- 1  6.36e-12      6.30
27 mu_0       0.9     1.54       5.41e- 2  1.71e-20     15.5 
[1] "Total run time was 197.737 seconds"
