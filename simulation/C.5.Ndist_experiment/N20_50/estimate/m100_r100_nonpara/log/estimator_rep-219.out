
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3553"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 
 5  2  2  4  1  3  3  4  2  3  7  2  2  2  3  3  5  5  6  5  4  2  5  4  1  1 
47 48 49 50 
 5  2  4  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02552 0.31816 0.59508 1.00000 6.10097 
[1] "event indicator table: "

   0    1 
2093 1460 
[1] "treatment indicator table: "

   0    1 
1380 2173 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1702
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 77"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1851
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 208.75 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.345 0.110 
 2 mu         0.1   0.2 0.407 0.144 
 3 mu         0.1   0.3 0.416 0.172 
 4 mu         0.1   0.4 0.450 0.195 
 5 mu         0.1   0.5 0.439 0.199 
 6 mu         0.2   0.1 0.389 0.0655
 7 mu         0.2   0.2 0.470 0.0927
 8 mu         0.2   0.3 0.500 0.112 
 9 mu         0.2   0.4 0.533 0.132 
10 mu         0.2   0.5 0.549 0.126 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      0.772        0.193 0.000000236     12.2 
 2 mu         0.2      0.941        0.852 0.00200          4.16
 3 mu         0.3      1.01         1.04  0.100            2.32
 4 mu         0.4      1.02         0.978 0.367            2.39
 5 mu         0.5      1.00         0.985 0.597            1.39
 6 mu         0.6      1.00         1.02  0.703            1.33
 7 mu         0.7      1.00         0.996 0.633            1.43
 8 mu         0.8      0.993        0.994 0.485            1.46
 9 mu         0.9      0.989        0.916 0.0632           3.91
10 mu_1       0.1      0.880        0.341 0.000000963     13.1 
11 mu_1       0.2      0.954        0.921 0.00416          3.00
12 mu_1       0.3      1.02         1.03  0.142            2.56
13 mu_1       0.4      1.01         0.976 0.411            2.25
14 mu_1       0.5      0.999        0.993 0.639            1.36
15 mu_1       0.6      1.00         1.01  0.692            1.34
16 mu_1       0.7      1.00         0.993 0.630            1.44
17 mu_1       0.8      0.991        0.992 0.459            1.48
18 mu_1       0.9      0.992        0.918 0.0558           4.07
19 mu_0       0.1      0.760        0.174 0.000000155     12.1 
20 mu_0       0.2      0.938        0.838 0.00146          4.45
21 mu_0       0.3      1.01         1.03  0.0819           2.22
22 mu_0       0.4      1.02         0.980 0.337            2.49
23 mu_0       0.5      1.00         0.997 0.555            1.47
24 mu_0       0.6      1.00         1.01  0.719            1.32
25 mu_0       0.7      1.00         0.994 0.641            1.41
26 mu_0       0.8      1.00         0.995 0.590            1.38
27 mu_0       0.9      0.965        0.973 0.130            2.52
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.157     1.08e-12  2.03e-35      5.52
 2 mu         0.2      1.62      1.18e- 6  5.57e-23     48.3 
 3 mu         0.3      2.98      1.05e- 3  8.12e-16     98.4 
 4 mu         0.4      2.17      6.00e- 2  7.75e-11     44.1 
 5 mu         0.5      1.31      5.19e- 1  4.39e- 7      8.78
 6 mu         0.6      1.04      8.07e- 1  1.65e- 4      4.77
 7 mu         0.7      1.09      4.51e- 1  6.63e- 8      5.61
 8 mu         0.8      1.58      1.16e- 1  5.11e-13     14.7 
 9 mu         0.9      2.86      1.38e- 4  3.43e-22     70.0 
10 mu_1       0.1      0.364     7.03e-12  1.85e-34     13.8 
11 mu_1       0.2      2.13      3.52e- 6  2.54e-22     70.1 
12 mu_1       0.3      2.98      2.11e- 3  2.47e-15     95.3 
13 mu_1       0.4      1.95      9.43e- 2  1.77e-10     32.0 
14 mu_1       0.5      1.22      5.92e- 1  8.02e- 7      8.78
15 mu_1       0.6      1.03      7.94e- 1  6.03e- 5      4.81
16 mu_1       0.7      1.10      3.76e- 1  2.08e- 8      5.63
17 mu_1       0.8      1.63      9.16e- 2  1.40e-13     15.6 
18 mu_1       0.9      2.85      9.33e- 5  8.37e-23     72.3 
19 mu_0       0.1      0.134     2.93e-13  1.96e-36      4.71
20 mu_0       0.2      1.49      5.22e- 7  6.05e-24     42.9 
21 mu_0       0.3      2.97      5.39e- 4  1.01e-16     99.8 
22 mu_0       0.4      2.32      3.66e- 2  1.12e-11     52.2 
23 mu_0       0.5      1.40      3.91e- 1  7.51e- 8      8.78
24 mu_0       0.6      1.06      6.19e- 1  7.06e- 5      5.14
25 mu_0       0.7      1.06      4.87e- 1  1.72e- 7      5.72
26 mu_0       0.8      1.38      2.16e- 1  1.99e-12     14.0 
27 mu_0       0.9      2.91      5.43e- 4  2.68e-21     48.8 
[1] "Total run time was 211.939 seconds"
