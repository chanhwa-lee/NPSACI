
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3484"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 46 
 2  2  1  5  2  4  6  2  4  6  5  5  3  3  4  1  1  1  4  5  4  3  4  4  2  3 
47 48 49 50 
 4  3  1  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03737 0.34447 0.61047 1.00000 5.00000 
[1] "event indicator table: "

   0    1 
2078 1406 
[1] "treatment indicator table: "

   0    1 
1245 2239 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1680
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 31"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1804
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 16"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 64"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 249.041 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.477 0.170 
 2 mu         0.1   0.2 0.601 0.220 
 3 mu         0.1   0.3 0.650 0.241 
 4 mu         0.1   0.4 0.718 0.255 
 5 mu         0.1   0.5 0.745 0.258 
 6 mu         0.2   0.1 0.328 0.0487
 7 mu         0.2   0.2 0.412 0.0777
 8 mu         0.2   0.3 0.444 0.0709
 9 mu         0.2   0.4 0.500 0.0682
10 mu         0.2   0.5 0.525 0.0555
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.15         0.114  6.99e-11     37.0 
 2 mu         0.2      0.871        0.695  2.20e- 5      4.77
 3 mu         0.3      0.964        0.900  8.83e- 3      2.77
 4 mu         0.4      0.999        0.972  1.77e- 1      2.27
 5 mu         0.5      0.992        0.989  3.83e- 1      1.75
 6 mu         0.6      0.988        0.988  6.17e- 1      1.49
 7 mu         0.7      0.997        1.00   7.08e- 1      1.42
 8 mu         0.8      1.01         0.985  6.61e- 1      1.77
 9 mu         0.9      1.01         0.955  2.53e- 1      2.38
10 mu_1       0.1      0.970        0.232  3.49e-10     11.0 
11 mu_1       0.2      0.874        0.753  5.50e- 5      4.68
12 mu_1       0.3      0.986        0.943  1.48e- 2      2.96
13 mu_1       0.4      1.00         0.996  2.25e- 1      2.06
14 mu_1       0.5      0.991        0.985  4.12e- 1      1.72
15 mu_1       0.6      0.987        0.991  6.12e- 1      1.50
16 mu_1       0.7      0.999        0.997  7.33e- 1      1.46
17 mu_1       0.8      1.01         0.988  6.48e- 1      1.81
18 mu_1       0.9      1.01         0.954  2.39e- 1      2.51
19 mu_0       0.1      1.17         0.102  3.88e-11     39.9 
20 mu_0       0.2      0.870        0.685  1.38e- 5      4.79
21 mu_0       0.3      0.954        0.881  6.29e- 3      2.69
22 mu_0       0.4      0.997        0.976  1.46e- 1      2.40
23 mu_0       0.5      0.993        0.999  3.53e- 1      1.78
24 mu_0       0.6      0.989        0.984  6.25e- 1      1.48
25 mu_0       0.7      0.994        1.00   6.48e- 1      1.35
26 mu_0       0.8      1.01         0.997  7.03e- 1      1.63
27 mu_0       0.9      0.987        0.964  3.75e- 1      2.08
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       1.79     9.10e-13  1.69e-41    178.  
 2 mu         0.2      17.6      3.95e- 7  5.28e-28   1640.  
 3 mu         0.3       8.67     3.81e- 4  3.88e-20    453.  
 4 mu         0.4       2.72     4.64e- 2  1.39e-14    131.  
 5 mu         0.5       1.57     4.66e- 1  2.67e-10     14.9 
 6 mu         0.6       1.91     5.98e- 1  7.80e- 7     24.4 
 7 mu         0.7       1.60     8.76e- 1  4.14e- 9     23.9 
 8 mu         0.8       1.30     2.80e- 1  1.42e-15     13.2 
 9 mu         0.9       1.79     2.51e- 3  4.20e-27     16.6 
10 mu_1       0.1       3.60     5.91e-12  1.64e-40    356.  
11 mu_1       0.2      18.2      1.38e- 6  2.58e-27   1640.  
12 mu_1       0.3       7.31     8.48e- 4  1.27e-19    320.  
13 mu_1       0.4       2.34     7.55e- 2  3.41e-14     99.0 
14 mu_1       0.5       1.58     5.10e- 1  5.22e-10     14.5 
15 mu_1       0.6       1.92     5.87e- 1  1.27e- 6     25.0 
16 mu_1       0.7       1.56     8.42e- 1  1.18e- 9     22.5 
17 mu_1       0.8       1.30     2.21e- 1  3.56e-16     14.2 
18 mu_1       0.9       1.82     1.81e- 3  9.34e-28     17.8 
19 mu_0       0.1       1.59     3.54e-13  4.08e-43    158.  
20 mu_0       0.2      17.4      1.38e- 7  1.44e-29   1640.  
21 mu_0       0.3       9.25     1.80e- 4  1.21e-21    518.  
22 mu_0       0.4       2.97     2.70e- 2  5.05e-16    152.  
23 mu_0       0.5       1.56     3.40e- 1  1.16e-11     15.4 
24 mu_0       0.6       1.89     5.56e- 1  4.24e- 8     23.5 
25 mu_0       0.7       1.70     8.73e- 1  1.10e- 8     27.2 
26 mu_0       0.8       1.30     4.18e- 1  5.69e-15      9.23
27 mu_0       0.9       1.60     8.84e- 3  3.36e-26     22.8 
[1] "Total run time was 254.344 seconds"
