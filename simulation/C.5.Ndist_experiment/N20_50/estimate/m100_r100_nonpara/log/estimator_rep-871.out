
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3556"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 36 37 38 39 40 41 42 43 44 45 46 
 4  4  3  2  2  3  3  4  1  4  2  4  3  5  2  2  5  3  5  5  7  1  4  2  2  2 
47 48 49 50 
 5  1  6  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04831 0.38312 0.64204 1.00000 5.00000 
[1] "event indicator table: "

   0    1 
2082 1474 
[1] "treatment indicator table: "

   0    1 
1237 2319 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1807
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1749
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 148.892 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.369 0.141 
 2 mu         0.1   0.2 0.542 0.157 
 3 mu         0.1   0.3 0.605 0.173 
 4 mu         0.1   0.4 0.630 0.196 
 5 mu         0.1   0.5 0.764 0.190 
 6 mu         0.2   0.1 0.308 0.0729
 7 mu         0.2   0.2 0.437 0.0528
 8 mu         0.2   0.3 0.496 0.0568
 9 mu         0.2   0.4 0.539 0.0761
10 mu         0.2   0.5 0.640 0.0557
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      1.19         0.361 0.000000367     27.2 
 2 mu         0.2      0.975        0.953 0.00643          3.74
 3 mu         0.3      0.958        0.976 0.312            1.91
 4 mu         0.4      0.991        1.00  0.574            1.53
 5 mu         0.5      0.999        0.999 0.687            1.32
 6 mu         0.6      0.997        0.989 0.780            1.34
 7 mu         0.7      0.995        0.991 0.744            1.21
 8 mu         0.8      1.00         1.00  0.620            1.35
 9 mu         0.9      1.04         1.04  0.542            1.60
10 mu_1       0.1      1.10         0.624 0.00000143      12.7 
11 mu_1       0.2      0.961        0.937 0.0126           2.43
12 mu_1       0.3      0.963        0.980 0.398            1.93
13 mu_1       0.4      0.995        0.998 0.597            1.44
14 mu_1       0.5      0.998        0.992 0.672            1.32
15 mu_1       0.6      0.997        0.987 0.779            1.33
16 mu_1       0.7      0.995        0.994 0.714            1.22
17 mu_1       0.8      1.00         1.01  0.624            1.36
18 mu_1       0.9      1.04         1.03  0.521            1.62
19 mu_0       0.1      1.20         0.329 0.000000249     28.8 
20 mu_0       0.2      0.979        0.953 0.00488          4.07
21 mu_0       0.3      0.955        0.975 0.269            1.90
22 mu_0       0.4      0.989        1.00  0.545            1.59
23 mu_0       0.5      0.999        1.00  0.703            1.35
24 mu_0       0.6      0.997        0.991 0.766            1.35
25 mu_0       0.7      0.994        0.977 0.760            1.24
26 mu_0       0.8      0.997        0.995 0.605            1.32
27 mu_0       0.9      1.03         1.03  0.616            1.57
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      5.66      6.94e-15  4.20e-41    297.  
 2 mu         0.2      5.30      2.88e- 8  2.07e-27    220.  
 3 mu         0.3      1.47      5.24e- 5  1.75e-19     35.3 
 4 mu         0.4      0.741     9.46e- 3  6.15e-14      9.68
 5 mu         0.5      0.736     6.47e- 2  1.02e- 9      5.34
 6 mu         0.6      1.04      3.80e- 1  4.43e- 9      5.14
 7 mu         0.7      1.19      7.27e- 1  3.55e-14      4.35
 8 mu         0.8      1.25      6.92e- 1  1.41e-21      5.55
 9 mu         0.9      1.11      6.86e- 3  1.63e-34     11.8 
10 mu_1       0.1      7.59      4.38e-14  3.94e-40    357.  
11 mu_1       0.2      4.29      9.42e- 8  9.73e-27    175.  
12 mu_1       0.3      1.20      1.19e- 4  5.47e-19     24.6 
13 mu_1       0.4      0.700     1.51e- 2  1.44e-13      7.86
14 mu_1       0.5      0.768     8.78e- 2  1.92e- 9      5.34
15 mu_1       0.6      1.07      3.34e- 1  8.85e-10      5.26
16 mu_1       0.7      1.20      7.86e- 1  6.09e-15      4.60
17 mu_1       0.8      1.26      6.67e- 1  2.12e-22      5.46
18 mu_1       0.9      1.10      5.34e- 3  2.17e-35     11.9 
19 mu_0       0.1      5.45      1.79e-15  2.85e-42    291.  
20 mu_0       0.2      5.55      1.12e- 8  1.59e-28    231.  
21 mu_0       0.3      1.58      2.48e- 5  1.53e-20     39.9 
22 mu_0       0.4      0.769     5.32e- 3  6.28e-15     10.9 
23 mu_0       0.5      0.705     4.68e- 2  1.25e-10      5.34
24 mu_0       0.6      0.996     2.98e- 1  9.74e- 9      4.97
25 mu_0       0.7      1.16      6.69e- 1  1.04e-13      4.05
26 mu_0       0.8      1.23      6.54e- 1  6.22e-21      6.49
27 mu_0       0.9      1.24      2.15e- 2  1.43e-33     11.0 
[1] "Total run time was 151.103 seconds"
