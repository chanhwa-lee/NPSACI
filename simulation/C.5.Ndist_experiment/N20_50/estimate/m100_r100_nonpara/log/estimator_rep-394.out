
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3520"
[1] "cluster size dist'n: "

20 21 22 23 24 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 
 3  5  5  1  3  3  4  1  4  7  3  1  1  3  2  6  2  4  4  2  7  3  4  3  5  7 
47 48 49 50 
 1  4  1  1 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0320  0.3341  0.6025  1.0000  6.4278 
[1] "event indicator table: "

   0    1 
2110 1410 
[1] "treatment indicator table: "

   0    1 
1277 2243 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1741
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 73"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1779
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 202.197 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.358 0.0988
 2 mu         0.1   0.2 0.420 0.104 
 3 mu         0.1   0.3 0.427 0.0963
 4 mu         0.1   0.4 0.456 0.116 
 5 mu         0.1   0.5 0.508 0.131 
 6 mu         0.2   0.1 0.345 0.0686
 7 mu         0.2   0.2 0.444 0.0701
 8 mu         0.2   0.3 0.458 0.0588
 9 mu         0.2   0.4 0.485 0.0699
10 mu         0.2   0.5 0.523 0.0797
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      0.843        0.387 0.00000310      8.15
 2 mu         0.2      0.928        0.867 0.00984         2.17
 3 mu         0.3      0.995        0.964 0.244           1.94
 4 mu         0.4      1.00         0.999 0.558           1.57
 5 mu         0.5      1.00         0.998 0.709           1.38
 6 mu         0.6      1.02         1.01  0.741           1.31
 7 mu         0.7      1.01         1.01  0.789           1.35
 8 mu         0.8      0.976        0.987 0.640           1.30
 9 mu         0.9      0.973        0.982 0.292           1.55
10 mu_1       0.1      0.865        0.620 0.0000116       6.38
11 mu_1       0.2      0.950        0.949 0.0187          2.13
12 mu_1       0.3      1.00         0.974 0.328           1.90
13 mu_1       0.4      1.00         0.986 0.588           1.53
14 mu_1       0.5      1.01         1.01  0.711           1.39
15 mu_1       0.6      1.02         1.02  0.742           1.32
16 mu_1       0.7      1.01         0.997 0.797           1.34
17 mu_1       0.8      0.974        0.987 0.627           1.30
18 mu_1       0.9      0.975        0.985 0.280           1.56
19 mu_0       0.1      0.841        0.364 0.00000216      8.34
20 mu_0       0.2      0.923        0.863 0.00762         2.18
21 mu_0       0.3      0.992        0.970 0.202           1.95
22 mu_0       0.4      1.01         1.01  0.538           1.60
23 mu_0       0.5      1.00         0.998 0.673           1.41
24 mu_0       0.6      1.02         1.02  0.717           1.32
25 mu_0       0.7      1.01         1.01  0.764           1.37
26 mu_0       0.8      0.984        0.990 0.692           1.31
27 mu_0       0.9      0.959        0.978 0.399           1.44
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       3.73     2.05e-13  4.42e-37    370.  
 2 mu         0.2       1.29     2.49e- 7  1.37e-24     85.2 
 3 mu         0.3       1.49     3.33e- 4  1.99e-17     26.8 
 4 mu         0.4       1.84     3.14e- 2  6.27e-13     16.3 
 5 mu         0.5       1.23     3.77e- 1  1.93e- 9     11.1 
 6 mu         0.6       1.09     3.49e- 1  1.00e- 7     10.2 
 7 mu         0.7       1.25     4.45e- 1  5.92e-12      8.09
 8 mu         0.8       1.26     4.87e- 1  4.62e-18      5.76
 9 mu         0.9       1.17     1.64e- 2  1.08e-28      8.83
10 mu_1       0.1       3.78     1.36e-12  4.13e-36    370.  
11 mu_1       0.2       1.03     8.75e- 7  6.37e-24     42.6 
12 mu_1       0.3       1.64     7.36e- 4  6.65e-17     21.6 
13 mu_1       0.4       1.78     4.37e- 2  1.57e-12     16.3 
14 mu_1       0.5       1.18     3.21e- 1  3.87e- 9     10.3 
15 mu_1       0.6       1.11     4.39e- 1  1.67e- 8     10.8 
16 mu_1       0.7       1.26     4.47e- 1  8.45e-13      8.09
17 mu_1       0.8       1.26     4.54e- 1  5.78e-19      5.62
18 mu_1       0.9       1.16     1.25e- 2  1.20e-29      8.99
19 mu_0       0.1       3.73     7.68e-14  0           370.  
20 mu_0       0.2       1.36     9.27e- 8  0            95.9 
21 mu_0       0.3       1.42     1.60e- 4  0            29.0 
22 mu_0       0.4       1.88     1.68e- 2  0            17.7 
23 mu_0       0.5       1.28     3.29e- 1  0            12.0 
24 mu_0       0.6       1.05     3.47e- 1  0             9.34
25 mu_0       0.7       1.23     5.51e- 1  0             9.16
26 mu_0       0.8       1.27     7.35e- 1  0             6.32
27 mu_0       0.9       1.26     2.33e- 2  0             9.63
[1] "Total run time was 205.5 seconds"
