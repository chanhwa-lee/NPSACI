
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3491"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 34 35 36 37 38 39 40 41 42 43 44 45 46 
 3  7  2  3  4  7  4  1  3  3  2  1  1  4  4  4  6  1  2  3  4  5  2  2  5  1 
47 48 49 50 
 1  6  7  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0261  0.3475  0.6239  1.0000  6.0517 
[1] "event indicator table: "

   0    1 
2075 1416 
[1] "treatment indicator table: "

   0    1 
1306 2185 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1739
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1752
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 190.725 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.497 0.107 
 2 mu         0.1   0.2 0.641 0.154 
 3 mu         0.1   0.3 0.661 0.154 
 4 mu         0.1   0.4 0.726 0.160 
 5 mu         0.1   0.5 0.771 0.166 
 6 mu         0.2   0.1 0.426 0.0451
 7 mu         0.2   0.2 0.528 0.0684
 8 mu         0.2   0.3 0.553 0.0627
 9 mu         0.2   0.4 0.623 0.0665
10 mu         0.2   0.5 0.665 0.0711
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.11         0.139 0.0000327     18.9 
 2 mu         0.2      1.05         0.993 0.0187         5.26
 3 mu         0.3      1.00         1.00  0.271          1.77
 4 mu         0.4      0.994        0.984 0.564          1.74
 5 mu         0.5      0.990        0.995 0.675          1.37
 6 mu         0.6      0.990        0.970 0.706          1.33
 7 mu         0.7      0.989        0.978 0.734          1.31
 8 mu         0.8      0.978        0.990 0.489          1.27
 9 mu         0.9      1.02         0.989 0.147          3.61
10 mu_1       0.1      1.17         0.308 0.000120      15.4 
11 mu_1       0.2      1.04         1.03  0.0360         4.29
12 mu_1       0.3      1.00         0.978 0.309          1.70
13 mu_1       0.4      0.994        0.985 0.605          1.70
14 mu_1       0.5      0.989        0.991 0.696          1.38
15 mu_1       0.6      0.990        0.971 0.698          1.34
16 mu_1       0.7      0.988        0.979 0.727          1.30
17 mu_1       0.8      0.978        0.986 0.473          1.28
18 mu_1       0.9      1.02         0.980 0.138          3.67
19 mu_0       0.1      1.10         0.121 0.0000230     19.3 
20 mu_0       0.2      1.05         0.968 0.0144         5.50
21 mu_0       0.3      1.00         1.01  0.231          1.88
22 mu_0       0.4      0.995        0.988 0.537          1.76
23 mu_0       0.5      0.991        0.992 0.654          1.37
24 mu_0       0.6      0.990        0.971 0.709          1.34
25 mu_0       0.7      0.990        0.991 0.752          1.34
26 mu_0       0.8      0.980        1.00  0.550          1.31
27 mu_0       0.9      1.00         0.989 0.220          2.99
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.226     8.54e-13  1.53e-40     17.1 
 2 mu         0.2      1.21      7.43e- 7  1.35e-27     40.4 
 3 mu         0.3      1.26      5.34e- 4  5.03e-20     19.9 
 4 mu         0.4      0.913     3.96e- 2  1.19e-14     13.3 
 5 mu         0.5      0.926     4.53e- 1  1.74e-10      7.95
 6 mu         0.6      0.971     6.97e- 1  4.43e- 7      4.59
 7 mu         0.7      1.06      7.84e- 1  7.25e-10      6.37
 8 mu         0.8      1.09      1.27e- 1  5.61e-16      7.99
 9 mu         0.9      1.17      6.11e- 4  6.62e-27     22.9 
10 mu_1       0.1      0.453     5.94e-12  1.53e-39     32.6 
11 mu_1       0.2      1.38      2.28e- 6  6.74e-27     42.1 
12 mu_1       0.3      1.18      1.23e- 3  1.68e-19     21.5 
13 mu_1       0.4      0.876     5.96e- 2  2.97e-14     10.8 
14 mu_1       0.5      0.935     3.88e- 1  3.49e-10      8.28
15 mu_1       0.6      0.968     7.39e- 1  7.38e- 7      4.44
16 mu_1       0.7      1.06      7.12e- 1  2.16e-10      6.87
17 mu_1       0.8      1.09      1.13e- 1  1.46e-16      8.62
18 mu_1       0.9      1.17      4.05e- 4  1.53e-27     24.0 
19 mu_0       0.1      0.201     2.89e-13  0            15.4 
20 mu_0       0.2      1.17      3.10e- 7  0            40.0 
21 mu_0       0.3      1.29      2.53e- 4  0            22.3 
22 mu_0       0.4      0.937     2.62e- 2  0            15.0 
23 mu_0       0.5      0.917     3.57e- 1  0             7.62
24 mu_0       0.6      0.975     6.32e- 1  0             5.36
25 mu_0       0.7      1.04      7.59e- 1  0             5.20
26 mu_0       0.8      1.08      2.53e- 1  0             8.40
27 mu_0       0.9      1.14      2.15e- 3  0            24.6 
[1] "Total run time was 194.05 seconds"
