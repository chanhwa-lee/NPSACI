
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3380"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 5  4  2  3  4  4  2  6  3  1  3  5  6  1  4  1  3  6  4  5  1  4  5  2  2  4 
46 47 48 50 
 3  4  1  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0357  0.3464  0.6213  1.0000  6.0000 
[1] "event indicator table: "

   0    1 
1948 1432 
[1] "treatment indicator table: "

   0    1 
1173 2207 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1726
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1654
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 290.909 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.327 0.0644
 2 mu         0.1   0.2 0.423 0.0671
 3 mu         0.1   0.3 0.581 0.0873
 4 mu         0.1   0.4 0.606 0.0843
 5 mu         0.1   0.5 0.623 0.0809
 6 mu         0.2   0.1 0.366 0.0384
 7 mu         0.2   0.2 0.473 0.0341
 8 mu         0.2   0.3 0.570 0.0435
 9 mu         0.2   0.4 0.600 0.0446
10 mu         0.2   0.5 0.651 0.0410
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.998        0.422 0.0000871      8.46
 2 mu         0.2      1.12         0.999 0.0416         3.48
 3 mu         0.3      1.02         0.984 0.374          1.88
 4 mu         0.4      1.00         0.972 0.608          1.72
 5 mu         0.5      1.00         1.00  0.503          1.42
 6 mu         0.6      1.00         1.00  0.754          1.43
 7 mu         0.7      0.986        0.981 0.654          1.31
 8 mu         0.8      0.998        0.999 0.517          1.37
 9 mu         0.9      0.950        0.974 0.337          1.69
10 mu_1       0.1      1.12         0.705 0.000294       6.49
11 mu_1       0.2      1.10         1.04  0.0717         2.73
12 mu_1       0.3      1.01         0.971 0.457          1.84
13 mu_1       0.4      1.00         0.985 0.565          1.70
14 mu_1       0.5      1.00         0.997 0.519          1.37
15 mu_1       0.6      1.00         0.994 0.780          1.43
16 mu_1       0.7      0.985        0.973 0.638          1.30
17 mu_1       0.8      0.997        1.00  0.515          1.37
18 mu_1       0.9      0.949        0.973 0.325          1.68
19 mu_0       0.1      0.984        0.387 0.0000641      8.70
20 mu_0       0.2      1.13         0.995 0.0341         3.70
21 mu_0       0.3      1.02         1.00  0.339          1.90
22 mu_0       0.4      1.00         0.955 0.591          1.73
23 mu_0       0.5      1.00         1.00  0.487          1.47
24 mu_0       0.6      1.00         1.00  0.715          1.43
25 mu_0       0.7      0.987        0.975 0.651          1.38
26 mu_0       0.8      1.00         0.981 0.523          1.38
27 mu_0       0.9      0.966        0.966 0.444          1.75
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.256     2.73e-14  7.64e-43     17.1 
 2 mu         0.2      1.57      4.82e- 8  4.78e-29     41.0 
 3 mu         0.3      1.75      1.42e- 4  5.27e-21     30.2 
 4 mu         0.4      1.59      2.11e- 2  2.52e-15     13.3 
 5 mu         0.5      1.71      1.86e- 1  6.03e-11     22.6 
 6 mu         0.6      1.29      4.88e- 1  2.12e- 7      6.83
 7 mu         0.7      1.18      7.58e- 1  1.04e- 7      6.00
 8 mu         0.8      1.53      6.57e- 1  4.65e-13     10.2 
 9 mu         0.9      1.72      1.11e- 2  9.88e-23     22.4 
10 mu_1       0.1      0.524     1.78e-13  7.48e-42     31.7 
11 mu_1       0.2      1.85      1.75e- 7  2.34e-28     40.0 
12 mu_1       0.3      1.67      3.01e- 4  1.72e-20     24.6 
13 mu_1       0.4      1.60      3.52e- 2  6.17e-15     15.9 
14 mu_1       0.5      1.66      2.60e- 1  1.18e-10     21.6 
15 mu_1       0.6      1.24      5.09e- 1  3.46e- 7      6.59
16 mu_1       0.7      1.20      8.06e- 1  3.63e- 8      6.27
17 mu_1       0.8      1.54      5.86e- 1  1.42e-13     10.1 
18 mu_1       0.9      1.75      8.17e- 3  2.68e-23     23.3 
19 mu_0       0.1      0.227     1.05e-14  0            15.5 
20 mu_0       0.2      1.50      1.83e- 8  0            41.8 
21 mu_0       0.3      1.78      7.56e- 5  0            32.6 
22 mu_0       0.4      1.59      1.16e- 2  0            13.4 
23 mu_0       0.5      1.75      1.50e- 1  0            23.6 
24 mu_0       0.6      1.36      4.02e- 1  0             7.69
25 mu_0       0.7      1.13      5.93e- 1  0             5.63
26 mu_0       0.8      1.48      5.10e- 1  0            10.7 
27 mu_0       0.9      1.53      2.82e- 2  0            14.9 
[1] "Total run time was 296.31 seconds"
