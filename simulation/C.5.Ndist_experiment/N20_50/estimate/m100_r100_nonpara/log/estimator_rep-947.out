
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3587"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 28 29 30 31 32 33 34 35 36 37 38 39 41 42 43 44 45 46 47 
 4  1  2  2  2  1  6  4  3  3  7  5  6  1  2  3  5  4  3  6  2  2  3  2  4  8 
48 49 50 
 3  5  1 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03361 0.34625 0.62363 1.00000 5.00000 
[1] "event indicator table: "

   0    1 
2132 1455 
[1] "treatment indicator table: "

   0    1 
1221 2366 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1797
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 20"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1790
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 46"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 61"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 182.213 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.473 0.169 
 2 mu         0.1   0.2 0.489 0.148 
 3 mu         0.1   0.3 0.518 0.134 
 4 mu         0.1   0.4 0.559 0.145 
 5 mu         0.1   0.5 0.567 0.145 
 6 mu         0.2   0.1 0.446 0.121 
 7 mu         0.2   0.2 0.473 0.0957
 8 mu         0.2   0.3 0.526 0.0753
 9 mu         0.2   0.4 0.558 0.0827
10 mu         0.2   0.5 0.562 0.0781
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1      0.932        0.171 0.00000000714     14.6 
 2 mu         0.2      0.977        0.834 0.000355           6.90
 3 mu         0.3      0.993        0.940 0.0382             3.07
 4 mu         0.4      0.985        0.970 0.275              1.86
 5 mu         0.5      0.986        0.983 0.611              1.37
 6 mu         0.6      0.989        0.992 0.695              1.31
 7 mu         0.7      1.02         1.01  0.853              1.32
 8 mu         0.8      1.03         1.03  0.711              1.41
 9 mu         0.9      0.991        0.992 0.319              1.70
10 mu_1       0.1      0.902        0.340 0.0000000305      11.1 
11 mu_1       0.2      1.00         0.948 0.000764           6.77
12 mu_1       0.3      0.991        0.988 0.0554             2.42
13 mu_1       0.4      0.986        0.965 0.316              1.75
14 mu_1       0.5      0.986        0.990 0.647              1.36
15 mu_1       0.6      0.990        0.991 0.701              1.31
16 mu_1       0.7      1.02         1.01  0.852              1.33
17 mu_1       0.8      1.03         1.03  0.706              1.42
18 mu_1       0.9      0.990        0.989 0.309              1.72
19 mu_0       0.1      0.936        0.153 0.00000000454     15.4 
20 mu_0       0.2      0.971        0.827 0.000253           6.93
21 mu_0       0.3      0.993        0.924 0.0308             3.34
22 mu_0       0.4      0.985        0.969 0.248              1.94
23 mu_0       0.5      0.987        0.984 0.572              1.39
24 mu_0       0.6      0.987        0.996 0.686              1.31
25 mu_0       0.7      1.01         0.999 0.827              1.30
26 mu_0       0.8      1.03         1.03  0.731              1.41
27 mu_0       0.9      1.01         1.00  0.407              1.65
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      2.16      5.58e-14  2.82e-37    214.  
 2 mu         0.2      1.63      6.14e- 8  4.89e-25    114.  
 3 mu         0.3      1.42      9.21e- 5  6.21e-18     26.1 
 4 mu         0.4      1.34      1.31e- 2  6.05e-13     16.6 
 5 mu         0.5      1.07      2.81e- 1  3.95e- 9     16.1 
 6 mu         0.6      1.00      4.89e- 1  4.46e- 6      4.38
 7 mu         0.7      1.06      5.59e- 1  7.79e- 7      4.48
 8 mu         0.8      1.13      4.56e- 1  1.04e-10      9.01
 9 mu         0.9      1.65      2.98e- 3  9.55e-19     30.4 
10 mu_1       0.1      2.54      3.43e-13  2.68e-36    247.  
11 mu_1       0.2      1.36      2.16e- 7  2.33e-24     65.8 
12 mu_1       0.3      1.41      2.13e- 4  1.97e-17     21.7 
13 mu_1       0.4      1.28      2.28e- 2  1.44e-12     15.9 
14 mu_1       0.5      1.03      2.79e- 1  7.54e- 9     15.4 
15 mu_1       0.6      1.00      4.49e- 1  7.09e- 6      4.76
16 mu_1       0.7      1.06      5.31e- 1  1.28e- 7      4.58
17 mu_1       0.8      1.14      3.96e- 1  1.50e-11      9.35
18 mu_1       0.9      1.66      2.29e- 3  3.68e-19     32.2 
19 mu_0       0.1      2.12      1.81e-14  0           210.  
20 mu_0       0.2      1.70      2.02e- 8  0           126.  
21 mu_0       0.3      1.42      4.05e- 5  0            27.9 
22 mu_0       0.4      1.38      6.70e- 3  0            17.0 
23 mu_0       0.5      1.11      1.72e- 1  0            16.8 
24 mu_0       0.6      0.996     4.88e- 1  0             5.25
25 mu_0       0.7      1.06      5.76e- 1  0             5.19
26 mu_0       0.8      1.09      6.86e- 1  0             7.67
27 mu_0       0.9      1.54      8.51e- 3  0            24.2 
[1] "Total run time was 185.403 seconds"
