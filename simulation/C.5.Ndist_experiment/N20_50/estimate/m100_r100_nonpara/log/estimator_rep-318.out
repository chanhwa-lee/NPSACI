
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3591"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 43 44 45 46 
 1  4  1  1  3  2  3  6  7  1  1  3  4  3  5  3  4  5  7  1  2  3  3  5  1  6 
47 48 49 50 
 4  5  5  1 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0312  0.3345  0.5897  1.0000  5.5254 
[1] "event indicator table: "

   0    1 
2140 1451 
[1] "treatment indicator table: "

   0    1 
1322 2269 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1766
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 11"
[1] "     Cluster: 16"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1825
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 69"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 225.408 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.386 0.135 
 2 mu         0.1   0.2 0.466 0.0996
 3 mu         0.1   0.3 0.526 0.0870
 4 mu         0.1   0.4 0.513 0.0850
 5 mu         0.1   0.5 0.631 0.106 
 6 mu         0.2   0.1 0.349 0.0921
 7 mu         0.2   0.2 0.452 0.0569
 8 mu         0.2   0.3 0.514 0.0407
 9 mu         0.2   0.4 0.520 0.0351
10 mu         0.2   0.5 0.628 0.0548
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.878        0.345  0.00109       7.10
 2 mu         0.2      0.954        0.940  0.0849        2.00
 3 mu         0.3      0.988        0.983  0.332         1.88
 4 mu         0.4      0.997        0.994  0.536         1.51
 5 mu         0.5      1.00         1.02   0.676         1.30
 6 mu         0.6      1.02         1.00   0.741         1.28
 7 mu         0.7      1.02         1.02   0.739         1.44
 8 mu         0.8      1.01         1.01   0.682         1.52
 9 mu         0.9      0.974        0.964  0.292         1.81
10 mu_1       0.1      0.832        0.584  0.00189       3.52
11 mu_1       0.2      0.975        1.01   0.116         1.96
12 mu_1       0.3      0.992        0.974  0.363         1.82
13 mu_1       0.4      0.999        0.999  0.577         1.50
14 mu_1       0.5      1.01         1.03   0.680         1.31
15 mu_1       0.6      1.02         1.00   0.745         1.27
16 mu_1       0.7      1.02         1.02   0.743         1.45
17 mu_1       0.8      1.01         1.01   0.677         1.53
18 mu_1       0.9      0.972        0.965  0.279         1.84
19 mu_0       0.1      0.883        0.313  0.000873      7.53
20 mu_0       0.2      0.948        0.899  0.0734        2.09
21 mu_0       0.3      0.987        0.993  0.319         1.90
22 mu_0       0.4      0.996        0.993  0.509         1.54
23 mu_0       0.5      1.00         1.01   0.673         1.32
24 mu_0       0.6      1.02         1.00   0.737         1.29
25 mu_0       0.7      1.02         1.01   0.726         1.43
26 mu_0       0.8      1.02         1.00   0.656         1.50
27 mu_0       0.9      0.999        0.987  0.408         1.65
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.181     1.25e-12  1.55e-36     12.7 
 2 mu         0.2      0.657     7.94e- 7  8.49e-24     30.6 
 3 mu         0.3      0.908     7.58e- 4  1.86e-16     12.3 
 4 mu         0.4      1.08      5.36e- 2  2.36e-11      8.08
 5 mu         0.5      1.15      5.45e- 1  1.61e- 7      7.57
 6 mu         0.6      1.09      7.82e- 1  1.05e- 4      5.76
 7 mu         0.7      0.971     6.30e- 1  1.12e- 6      4.10
 8 mu         0.8      1.04      1.24e- 1  2.22e-11      5.62
 9 mu         0.9      2.22      2.61e- 4  4.77e-20     58.3 
10 mu_1       0.1      0.352     7.13e-12  1.41e-35     23.6 
11 mu_1       0.2      0.740     2.55e- 6  3.88e-23     28.3 
12 mu_1       0.3      0.927     1.65e- 3  5.66e-16     10.9 
13 mu_1       0.4      1.10      8.55e- 2  5.40e-11      8.42
14 mu_1       0.5      1.14      5.55e- 1  3.06e- 7      6.93
15 mu_1       0.6      1.08      7.95e- 1  1.66e- 4      5.52
16 mu_1       0.7      0.964     6.71e- 1  4.74e- 7      4.39
17 mu_1       0.8      1.06      9.55e- 2  8.19e-12      5.99
18 mu_1       0.9      2.25      1.85e- 4  1.57e-20     61.6 
19 mu_0       0.1      0.162     5.06e-13  1.46e-37     11.5 
20 mu_0       0.2      0.636     3.55e- 7  9.03e-25     31.1 
21 mu_0       0.3      0.900     3.78e- 4  2.26e-17     14.3 
22 mu_0       0.4      1.07      3.11e- 2  3.14e-12      8.87
23 mu_0       0.5      1.15      4.12e- 1  1.57e- 8      8.20
24 mu_0       0.6      1.11      6.79e- 1  1.34e- 5      6.12
25 mu_0       0.7      0.988     7.18e- 1  2.64e- 6      3.88
26 mu_0       0.8      0.971     2.38e- 1  7.81e-11      5.60
27 mu_0       0.9      1.87      9.51e- 4  3.36e-19     28.4 
[1] "Total run time was 228.63 seconds"
