
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3710"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 1  1  2  4  4  1  3  1  2  5  4  1  2  4  3  5  4  4  1  3  2  5  4  5  3  4 
46 47 48 49 50 
 5  4  5  3  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0267  0.3086  0.5734  0.9786  5.0000 
[1] "event indicator table: "

   0    1 
2187 1523 
[1] "treatment indicator table: "

   0    1 
1444 2266 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1842
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 86"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1868
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 15"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 178.659 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.490 0.132 
 2 mu         0.1   0.2 0.535 0.111 
 3 mu         0.1   0.3 0.582 0.0888
 4 mu         0.1   0.4 0.600 0.0863
 5 mu         0.1   0.5 0.611 0.0809
 6 mu         0.2   0.1 0.382 0.0476
 7 mu         0.2   0.2 0.458 0.0413
 8 mu         0.2   0.3 0.520 0.0440
 9 mu         0.2   0.4 0.546 0.0401
10 mu         0.2   0.5 0.570 0.0373
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.984        0.764  0.000423      4.34
 2 mu         0.2      0.932        0.948  0.0933        1.94
 3 mu         0.3      1.02         1.01   0.460         1.67
 4 mu         0.4      1.02         1.00   0.656         1.58
 5 mu         0.5      1.02         1.01   0.676         1.41
 6 mu         0.6      1.01         1.01   0.643         1.32
 7 mu         0.7      0.989        0.970  0.677         1.32
 8 mu         0.8      0.982        0.984  0.589         1.33
 9 mu         0.9      1.05         1.04   0.224         1.99
10 mu_1       0.1      0.953        0.872  0.00120       4.13
11 mu_1       0.2      0.948        0.958  0.142         1.94
12 mu_1       0.3      1.03         1.00   0.530         1.73
13 mu_1       0.4      1.02         1.01   0.688         1.53
14 mu_1       0.5      1.02         1.00   0.674         1.39
15 mu_1       0.6      1.01         0.994  0.655         1.32
16 mu_1       0.7      0.987        0.970  0.683         1.33
17 mu_1       0.8      0.983        0.985  0.571         1.33
18 mu_1       0.9      1.05         1.03   0.213         2.05
19 mu_0       0.1      0.987        0.743  0.000337      4.36
20 mu_0       0.2      0.927        0.948  0.0812        1.94
21 mu_0       0.3      1.02         1.00   0.426         1.64
22 mu_0       0.4      1.02         0.994  0.634         1.61
23 mu_0       0.5      1.02         1.00   0.676         1.43
24 mu_0       0.6      1.01         1.01   0.625         1.34
25 mu_0       0.7      0.992        0.983  0.663         1.31
26 mu_0       0.8      0.979        0.971  0.622         1.42
27 mu_0       0.9      1.03         1.05   0.319         1.82
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.34      7.75e-12  7.99e-40    132.  
 2 mu         0.2      0.755     2.01e- 6  3.51e-26     17.6 
 3 mu         0.3      1.16      4.07e- 3  7.13e-19     18.7 
 4 mu         0.4      1.11      1.48e- 1  9.45e-14      8.31
 5 mu         0.5      1.09      4.69e- 1  8.89e-10      5.18
 6 mu         0.6      1.17      5.39e- 1  1.57e- 6      6.71
 7 mu         0.7      1.23      8.03e- 1  2.50e- 9      8.79
 8 mu         0.8      1.44      1.21e- 1  2.53e-15     15.9 
 9 mu         0.9      1.72      2.31e- 4  3.78e-26     38.1 
10 mu_1       0.1      0.588     4.90e-11  7.35e-39     55.2 
11 mu_1       0.2      0.804     6.31e- 6  1.61e-25     17.5 
12 mu_1       0.3      1.19      7.63e- 3  2.38e-18     17.6 
13 mu_1       0.4      1.12      2.34e- 1  2.36e-13      8.40
14 mu_1       0.5      1.10      5.34e- 1  1.78e- 9      5.88
15 mu_1       0.6      1.17      5.35e- 1  4.38e- 7      6.34
16 mu_1       0.7      1.23      7.41e- 1  5.86e-10      8.79
17 mu_1       0.8      1.45      8.56e- 2  7.59e-16     16.0 
18 mu_1       0.9      1.73      1.49e- 4  1.01e-26     37.9 
19 mu_0       0.1      1.42      2.62e-12  0           141.  
20 mu_0       0.2      0.743     1.06e- 6  0            21.1 
21 mu_0       0.3      1.15      2.21e- 3  0            19.2 
22 mu_0       0.4      1.11      9.22e- 2  0             8.24
23 mu_0       0.5      1.08      4.26e- 1  0             5.20
24 mu_0       0.6      1.16      5.60e- 1  0             7.25
25 mu_0       0.7      1.22      6.02e- 1  0             8.79
26 mu_0       0.8      1.38      1.91e- 1  0            15.6 
27 mu_0       0.9      1.66      7.92e- 4  0            39.7 
[1] "Total run time was 189.884 seconds"
