
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3494"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 5  2  2  4  4  6  3  3  5  1  1  2  3  1  3  6  4  1  4  3  3  4  4  3  3  4 
46 47 48 49 50 
 4  3  3  3  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04577 0.33742 0.59403 1.00000 4.68818 
[1] "event indicator table: "

   0    1 
2080 1414 
[1] "treatment indicator table: "

   0    1 
1359 2135 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1738
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1756
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 80"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 192.332 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.414 0.0789
 2 mu         0.1   0.2 0.498 0.0926
 3 mu         0.1   0.3 0.570 0.0896
 4 mu         0.1   0.4 0.651 0.114 
 5 mu         0.1   0.5 0.745 0.138 
 6 mu         0.2   0.1 0.357 0.0456
 7 mu         0.2   0.2 0.426 0.0427
 8 mu         0.2   0.3 0.479 0.0405
 9 mu         0.2   0.4 0.534 0.0505
10 mu         0.2   0.5 0.606 0.0592
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.963        0.759 0.0000836      5.58
 2 mu         0.2      0.972        0.956 0.0481         2.46
 3 mu         0.3      0.974        0.951 0.406          1.85
 4 mu         0.4      0.976        0.992 0.460          1.46
 5 mu         0.5      0.993        1.01  0.655          1.48
 6 mu         0.6      1.02         1.01  0.667          1.32
 7 mu         0.7      0.999        0.993 0.627          1.27
 8 mu         0.8      0.987        0.984 0.624          1.33
 9 mu         0.9      1.00         1.01  0.435          1.58
10 mu_1       0.1      0.972        0.797 0.000270       4.45
11 mu_1       0.2      0.966        0.931 0.0825         2.03
12 mu_1       0.3      0.977        0.946 0.397          1.89
13 mu_1       0.4      0.978        0.983 0.485          1.44
14 mu_1       0.5      0.998        1.01  0.660          1.49
15 mu_1       0.6      1.02         1.02  0.687          1.30
16 mu_1       0.7      0.996        0.985 0.611          1.26
17 mu_1       0.8      0.987        0.985 0.637          1.36
18 mu_1       0.9      1.00         1.00  0.438          1.58
19 mu_0       0.1      0.962        0.756 0.0000629      5.71
20 mu_0       0.2      0.973        0.940 0.0395         2.56
21 mu_0       0.3      0.972        0.951 0.409          1.83
22 mu_0       0.4      0.975        0.987 0.444          1.48
23 mu_0       0.5      0.987        1.01  0.616          1.48
24 mu_0       0.6      1.02         1.02  0.638          1.39
25 mu_0       0.7      1.00         0.991 0.665          1.29
26 mu_0       0.8      0.987        0.977 0.573          1.31
27 mu_0       0.9      0.991        0.988 0.408          1.60
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.39      2.17e-11  7.45e-44     87.3 
 2 mu         0.2      1.33      1.91e- 6  9.32e-30     41.8 
 3 mu         0.3      1.44      2.15e- 3  1.54e-21     25.9 
 4 mu         0.4      1.41      1.07e- 1  9.84e-16     10.7 
 5 mu         0.5      1.41      5.15e- 1  2.94e-11      9.80
 6 mu         0.6      1.13      5.48e- 1  5.33e- 8      6.30
 7 mu         0.7      0.952     4.57e- 1  4.19e-12      5.52
 8 mu         0.8      1.07      1.13e- 1  4.91e-18      6.67
 9 mu         0.9      0.916     6.04e- 4  2.29e-28      7.77
10 mu_1       0.1      1.53      1.31e-10  7.30e-43     89.5 
11 mu_1       0.2      1.40      5.87e- 6  4.57e-29     47.9 
12 mu_1       0.3      1.43      4.24e- 3  5.03e-21     22.8 
13 mu_1       0.4      1.42      1.69e- 1  2.41e-15      8.52
14 mu_1       0.5      1.39      6.92e- 1  5.76e-11      9.80
15 mu_1       0.6      1.09      4.97e- 1  9.12e- 9      6.12
16 mu_1       0.7      0.953     4.63e- 1  6.14e-13      5.64
17 mu_1       0.8      1.07      8.52e- 2  6.29e-19      7.07
18 mu_1       0.9      0.907     4.32e- 4  2.61e-29      7.68
19 mu_0       0.1      1.37      9.53e-12  1.73e-45     87.0 
20 mu_0       0.2      1.32      8.40e- 7  2.43e-31     40.3 
21 mu_0       0.3      1.44      1.26e- 3  4.59e-23     28.5 
22 mu_0       0.4      1.40      6.86e- 2  3.42e-17     12.3 
23 mu_0       0.5      1.43      4.51e- 1  1.23e-12      9.80
24 mu_0       0.6      1.19      4.73e- 1  6.46e- 9      6.64
25 mu_0       0.7      0.949     5.35e- 1  1.25e-11      5.26
26 mu_0       0.8      1.04      1.89e- 1  2.20e-17      6.88
27 mu_0       0.9      0.995     2.22e- 3  2.05e-27      8.64
[1] "Total run time was 195.404 seconds"
