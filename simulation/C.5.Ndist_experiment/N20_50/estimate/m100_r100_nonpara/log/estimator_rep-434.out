
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3392"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 1  5  4  2  4  4  3  6  5  3  3  6  6  2  2  3  2  2  4  1  5  1  5  2  5  2 
46 48 49 50 
 3  2  5  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03055 0.33910 0.60746 1.00000 7.00000 
[1] "event indicator table: "

   0    1 
2050 1342 
[1] "treatment indicator table: "

   0    1 
1191 2201 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1686
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1706
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 22"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 187.561 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.784 0.199 
 2 mu         0.1   0.2 0.930 0.240 
 3 mu         0.1   0.3 1.01  0.267 
 4 mu         0.1   0.4 1.08  0.291 
 5 mu         0.1   0.5 1.13  0.311 
 6 mu         0.2   0.1 0.466 0.0688
 7 mu         0.2   0.2 0.563 0.0771
 8 mu         0.2   0.3 0.608 0.0726
 9 mu         0.2   0.4 0.647 0.0754
10 mu         0.2   0.5 0.674 0.0738
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.76         0.120 0.0000717     31.0 
 2 mu         0.2      1.06         0.847 0.0371         6.56
 3 mu         0.3      1.02         0.990 0.151          2.06
 4 mu         0.4      1.02         1.01  0.176          2.04
 5 mu         0.5      1.02         1.01  0.544          1.47
 6 mu         0.6      1.01         1.01  0.733          1.37
 7 mu         0.7      1.01         0.997 0.799          1.47
 8 mu         0.8      1.00         1.00  0.744          1.32
 9 mu         0.9      0.995        0.972 0.381          1.71
10 mu_1       0.1      1.38         0.254 0.000247      19.7 
11 mu_1       0.2      1.02         0.930 0.0656         3.85
12 mu_1       0.3      1.02         1.01  0.133          2.20
13 mu_1       0.4      1.02         1.01  0.207          1.95
14 mu_1       0.5      1.02         1.01  0.540          1.41
15 mu_1       0.6      1.01         1.00  0.728          1.40
16 mu_1       0.7      1.01         0.991 0.802          1.46
17 mu_1       0.8      1.00         1.00  0.738          1.34
18 mu_1       0.9      0.995        0.970 0.365          1.74
19 mu_0       0.1      1.80         0.106 0.0000522     33.6 
20 mu_0       0.2      1.07         0.857 0.0300         7.24
21 mu_0       0.3      1.02         0.983 0.158          2.05
22 mu_0       0.4      1.01         1.02  0.156          2.10
23 mu_0       0.5      1.02         1.01  0.523          1.53
24 mu_0       0.6      1.01         1.01  0.711          1.33
25 mu_0       0.7      1.01         0.992 0.766          1.49
26 mu_0       0.8      1.01         1.01  0.741          1.34
27 mu_0       0.9      0.996        0.993 0.469          1.55
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1    0.00849     6.50e-13  7.56e-40     0.616
 2 mu         0.2    0.223       2.93e- 7  5.91e-27     7.31 
 3 mu         0.3    0.880       3.78e- 4  1.93e-19    10.7  
 4 mu         0.4    1.52        2.92e- 2  3.90e-14    10.7  
 5 mu         0.5    1.39        4.13e- 1  4.77e-10    14.4  
 6 mu         0.6    1.27        3.67e- 1  9.70e- 7    14.6  
 7 mu         0.7    1.18        6.36e- 1  1.50e- 8     6.60 
 8 mu         0.8    1.20        6.31e- 1  2.60e-14     7.90 
 9 mu         0.9    1.43        1.10e- 2  8.73e-25    19.0  
10 mu_1       0.1    0.0247      4.03e-12  7.39e-39     1.76 
11 mu_1       0.2    0.335       9.99e- 7  2.89e-26     9.62 
12 mu_1       0.3    1.05        8.27e- 4  6.29e-19    12.2  
13 mu_1       0.4    1.56        5.02e- 2  9.53e-14    10.7  
14 mu_1       0.5    1.36        5.39e- 1  9.33e-10    15.9  
15 mu_1       0.6    1.27        3.07e- 1  1.58e- 6    13.5  
16 mu_1       0.7    1.17        6.06e- 1  5.57e- 9     6.00 
17 mu_1       0.8    1.20        4.88e- 1  8.44e-15     8.04 
18 mu_1       0.9    1.44        7.90e- 3  2.52e-25    19.2  
19 mu_0       0.1    0.00669     2.66e-13  1.91e-41     0.489
20 mu_0       0.2    0.195       9.96e- 8  1.68e-28     6.76 
21 mu_0       0.3    0.808       1.85e- 4  6.27e-21    10.7  
22 mu_0       0.4    1.50        1.48e- 2  1.48e-15    10.8  
23 mu_0       0.5    1.42        3.09e- 1  2.17e-11    13.0  
24 mu_0       0.6    1.27        3.74e- 1  5.51e- 8    16.4  
25 mu_0       0.7    1.20        5.87e- 1  3.70e- 8     8.00 
26 mu_0       0.8    1.18        5.95e- 1  9.60e-14     7.90 
27 mu_0       0.9    1.34        3.93e- 2  6.46e-24    17.3  
[1] "Total run time was 190.865 seconds"
