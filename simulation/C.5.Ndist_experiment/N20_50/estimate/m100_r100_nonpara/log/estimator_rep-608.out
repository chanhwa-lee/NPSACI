
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3500"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 1  6  3  5  5  3  2  4  3  2  2  3  5  1  5  3  2  1  2  6  3  1  5  2  2  4 
46 47 48 49 50 
 4  5  3  2  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02299 0.32073 0.60065 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
2108 1392 
[1] "treatment indicator table: "

   0    1 
1369 2131 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1639
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 16"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1861
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 57"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 241.76 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.256 0.0581
 2 mu         0.1   0.2 0.307 0.0688
 3 mu         0.1   0.3 0.367 0.0590
 4 mu         0.1   0.4 0.401 0.0698
 5 mu         0.1   0.5 0.405 0.0737
 6 mu         0.2   0.1 0.370 0.0374
 7 mu         0.2   0.2 0.445 0.0479
 8 mu         0.2   0.3 0.496 0.0448
 9 mu         0.2   0.4 0.541 0.0447
10 mu         0.2   0.5 0.569 0.0452
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      0.659        0.196 0.00000164      5.00
 2 mu         0.2      0.968        0.878 0.00233         3.47
 3 mu         0.3      1.01         0.975 0.0657          2.18
 4 mu         0.4      1.00         1.01  0.338           1.54
 5 mu         0.5      1.01         0.996 0.631           1.76
 6 mu         0.6      0.990        0.995 0.727           1.51
 7 mu         0.7      0.994        0.980 0.641           1.32
 8 mu         0.8      0.983        0.991 0.450           1.57
 9 mu         0.9      1.04         0.954 0.0277          3.36
10 mu_1       0.1      0.779        0.376 0.00000741      4.96
11 mu_1       0.2      0.997        0.948 0.00531         3.57
12 mu_1       0.3      1.00         1.00  0.102           2.17
13 mu_1       0.4      0.999        0.997 0.413           1.65
14 mu_1       0.5      1.01         0.992 0.617           1.71
15 mu_1       0.6      0.990        0.990 0.740           1.51
16 mu_1       0.7      0.994        0.972 0.642           1.34
17 mu_1       0.8      0.982        0.990 0.417           1.61
18 mu_1       0.9      1.04         0.948 0.0234          3.43
19 mu_0       0.1      0.646        0.175 0.00000100      5.00
20 mu_0       0.2      0.961        0.840 0.00158         3.45
21 mu_0       0.3      1.01         0.974 0.0500          2.18
22 mu_0       0.4      1.00         1.01  0.288           1.59
23 mu_0       0.5      1.01         0.996 0.629           1.81
24 mu_0       0.6      0.990        0.996 0.669           1.50
25 mu_0       0.7      0.993        0.988 0.640           1.32
26 mu_0       0.8      0.987        0.984 0.539           1.43
27 mu_0       0.9      1.02         0.990 0.0665          3.00
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.389     1.35e-12  1.15e-33     34.2 
 2 mu         0.2      0.628     8.77e- 7  1.41e-21     16.2 
 3 mu         0.3      1.29      1.04e- 3  1.20e-14     35.4 
 4 mu         0.4      1.88      7.16e- 2  3.49e-10     71.9 
 5 mu         0.5      1.38      5.38e- 1  7.16e- 7     20.2 
 6 mu         0.6      1.22      7.89e- 1  2.60e- 5      8.90
 7 mu         0.7      1.37      7.16e- 1  4.15e- 8      8.55
 8 mu         0.8      1.99      1.45e- 1  3.68e-12     16.2 
 9 mu         0.9      5.49      2.19e- 4  5.81e-20    130.  
10 mu_1       0.1      0.491     9.88e-12  1.03e-32     38.0 
11 mu_1       0.2      0.696     2.70e- 6  6.27e-21     16.9 
12 mu_1       0.3      1.43      2.19e- 3  3.56e-14     45.2 
13 mu_1       0.4      1.86      1.07e- 1  8.47e-10     68.8 
14 mu_1       0.5      1.33      6.34e- 1  1.39e- 6     15.5 
15 mu_1       0.6      1.24      7.64e- 1  4.82e- 6      8.90
16 mu_1       0.7      1.41      6.55e- 1  6.58e- 9      9.02
17 mu_1       0.8      2.07      1.20e- 1  5.11e-13     17.4 
18 mu_1       0.9      5.81      1.58e- 4  1.80e-20    145.  
19 mu_0       0.1      0.378     4.45e-13  0            33.7 
20 mu_0       0.2      0.611     4.20e- 7  0            18.0 
21 mu_0       0.3      1.23      5.44e- 4  0            31.2 
22 mu_0       0.4      1.89      4.49e- 2  0            73.9 
23 mu_0       0.5      1.43      3.73e- 1  0            24.9 
24 mu_0       0.6      1.20      6.19e- 1  0             8.90
25 mu_0       0.7      1.27      8.85e- 1  0             7.47
26 mu_0       0.8      1.68      1.98e- 1  0            11.6 
27 mu_0       0.9      2.63      6.65e- 4  0            36.3 
[1] "Total run time was 245.699 seconds"
