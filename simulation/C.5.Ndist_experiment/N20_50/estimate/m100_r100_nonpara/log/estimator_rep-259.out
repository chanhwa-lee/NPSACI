
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3511"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 32 33 34 35 36 37 38 39 40 42 43 44 45 46 47 
 2  4  4  3  2  6  1  4  4  4  4  2  5  3  5  1  2  6  5  3  5  2  1  1  6  4 
48 49 50 
 3  2  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03524 0.34072 0.62176 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
2065 1446 
[1] "treatment indicator table: "

   0    1 
1378 2133 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1829
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 33"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 86"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1682
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 24"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 239.251 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.277 0.0598
 2 mu         0.1   0.2 0.364 0.0605
 3 mu         0.1   0.3 0.439 0.0639
 4 mu         0.1   0.4 0.456 0.0640
 5 mu         0.1   0.5 0.471 0.0696
 6 mu         0.2   0.1 0.356 0.0453
 7 mu         0.2   0.2 0.443 0.0412
 8 mu         0.2   0.3 0.519 0.0396
 9 mu         0.2   0.4 0.557 0.0368
10 mu         0.2   0.5 0.579 0.0444
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.739        0.383  0.000227      7.83
 2 mu         0.2      0.996        0.907  0.0476        2.57
 3 mu         0.3      1.01         0.991  0.357         1.62
 4 mu         0.4      1.01         0.976  0.578         1.82
 5 mu         0.5      1.01         1.00   0.762         1.48
 6 mu         0.6      1.01         0.992  0.774         1.45
 7 mu         0.7      1.00         0.994  0.761         1.32
 8 mu         0.8      1.01         0.999  0.728         1.48
 9 mu         0.9      1.00         1.02   0.0526        2.09
10 mu_1       0.1      0.857        0.623  0.000702      4.05
11 mu_1       0.2      1.01         0.963  0.0774        2.34
12 mu_1       0.3      1.01         0.994  0.438         1.69
13 mu_1       0.4      1.00         0.995  0.602         1.81
14 mu_1       0.5      1.01         1.00   0.740         1.38
15 mu_1       0.6      1.01         0.994  0.776         1.47
16 mu_1       0.7      1.00         1.00   0.764         1.34
17 mu_1       0.8      1.01         0.999  0.707         1.51
18 mu_1       0.9      1.01         1.02   0.0468        2.11
19 mu_0       0.1      0.726        0.355  0.000174      8.25
20 mu_0       0.2      0.992        0.902  0.0402        2.63
21 mu_0       0.3      1.01         0.998  0.322         1.65
22 mu_0       0.4      1.01         0.977  0.562         1.83
23 mu_0       0.5      1.01         0.998  0.784         1.57
24 mu_0       0.6      1.01         1.00   0.770         1.42
25 mu_0       0.7      1.00         0.996  0.755         1.31
26 mu_0       0.8      1.01         0.985  0.744         1.40
27 mu_0       0.9      1.00         1.02   0.106         1.95
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.104      2.29e-13  9.86e-36      3.78
 2 mu         0.2     1.32       3.24e- 7  2.71e-23     34.8 
 3 mu         0.3     1.60       5.34e- 4  3.95e-16     41.0 
 4 mu         0.4     1.10       3.16e- 2  3.77e-11     14.8 
 5 mu         0.5     0.923      3.82e- 1  2.14e- 7      7.05
 6 mu         0.6     1.03       9.18e- 1  1.87e- 6      3.99
 7 mu         0.7     1.16       1.03e+ 0  8.77e-11      3.54
 8 mu         0.8     1.17       2.34e- 1  3.02e-17      6.73
 9 mu         0.9     1.25       4.69e- 4  8.91e-29     28.2 
10 mu_1       0.1     0.232      1.48e-12  9.00e-35      7.55
11 mu_1       0.2     1.59       1.03e- 6  1.24e-22     43.8 
12 mu_1       0.3     1.54       1.14e- 3  1.20e-15     35.1 
13 mu_1       0.4     1.04       5.21e- 2  8.60e-11     12.3 
14 mu_1       0.5     0.920      4.07e- 1  3.90e- 7      7.05
15 mu_1       0.6     1.06       8.74e- 1  6.22e- 7      3.85
16 mu_1       0.7     1.17       9.88e- 1  2.51e-11      3.83
17 mu_1       0.8     1.18       1.94e- 1  7.54e-18      7.32
18 mu_1       0.9     1.24       3.38e- 4  1.98e-29     28.9 
19 mu_0       0.1     0.0893     9.51e-14  9.53e-37      3.36
20 mu_0       0.2     1.26       1.49e- 7  2.94e-24     34.8 
21 mu_0       0.3     1.63       2.66e- 4  4.91e-17     43.6 
22 mu_0       0.4     1.14       1.82e- 2  5.46e-12     16.4 
23 mu_0       0.5     0.926      2.66e- 1  3.72e- 8      7.05
24 mu_0       0.6     1.00       6.71e- 1  3.73e- 6      4.20
25 mu_0       0.7     1.13       7.65e- 1  2.34e-10      3.32
26 mu_0       0.8     1.15       4.00e- 1  1.21e-16      5.55
27 mu_0       0.9     1.38       1.65e- 3  7.12e-28     22.3 
[1] "Total run time was 244.133 seconds"
