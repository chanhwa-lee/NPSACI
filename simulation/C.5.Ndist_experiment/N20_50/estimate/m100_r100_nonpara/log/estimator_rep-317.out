
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3603"
[1] "cluster size dist'n: "

20 21 22 23 24 25 27 28 29 30 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 
 4  2  2  3  4  4  3  5  4  6  3  2  5  3  3  2  3  1  3  7  1  7  2  5  2  9 
49 50 
 3  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.01789 0.28775 0.54711 0.96361 5.00000 
[1] "event indicator table: "

   0    1 
2152 1451 
[1] "treatment indicator table: "

   0    1 
1432 2171 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1799
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1804
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 213.415 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.400 0.0483
 2 mu         0.1   0.2 0.474 0.0437
 3 mu         0.1   0.3 0.514 0.0440
 4 mu         0.1   0.4 0.614 0.0577
 5 mu         0.1   0.5 0.663 0.0591
 6 mu         0.2   0.1 0.363 0.0349
 7 mu         0.2   0.2 0.437 0.0321
 8 mu         0.2   0.3 0.479 0.0317
 9 mu         0.2   0.4 0.579 0.0482
10 mu         0.2   0.5 0.630 0.0393
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.982        0.900   0.00642      2.88
 2 mu         0.2      1.00         0.947   0.293        2.08
 3 mu         0.3      0.975        0.967   0.538        1.39
 4 mu         0.4      0.987        0.996   0.572        1.36
 5 mu         0.5      1.01         1.01    0.739        1.35
 6 mu         0.6      1.01         1.00    0.668        1.29
 7 mu         0.7      0.997        0.995   0.627        1.50
 8 mu         0.8      0.997        0.998   0.538        1.39
 9 mu         0.9      0.991        0.999   0.302        1.73
10 mu_1       0.1      0.996        0.952   0.0162       2.94
11 mu_1       0.2      0.999        0.951   0.399        1.96
12 mu_1       0.3      0.974        0.975   0.509        1.35
13 mu_1       0.4      0.990        1.01    0.619        1.36
14 mu_1       0.5      1.01         1.01    0.731        1.36
15 mu_1       0.6      1.01         0.998   0.660        1.27
16 mu_1       0.7      0.996        0.989   0.606        1.50
17 mu_1       0.8      0.996        1.00    0.544        1.39
18 mu_1       0.9      0.990        0.984   0.286        1.75
19 mu_0       0.1      0.980        0.895   0.00533      2.87
20 mu_0       0.2      1.00         0.938   0.267        2.12
21 mu_0       0.3      0.976        0.965   0.550        1.45
22 mu_0       0.4      0.984        0.991   0.541        1.36
23 mu_0       0.5      1.01         1.01    0.714        1.33
24 mu_0       0.6      1.01         1.01    0.680        1.32
25 mu_0       0.7      0.999        0.996   0.668        1.51
26 mu_0       0.8      0.998        0.997   0.516        1.42
27 mu_0       0.9      0.997        1.00    0.441        1.72
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.567     7.91e-12  4.83e-42     21.8 
 2 mu         0.2      1.06      4.79e- 6  1.51e-28     20.0 
 3 mu         0.3      0.938     4.34e- 3  1.11e-20      9.18
 4 mu         0.4      1.11      1.08e- 1  3.98e-15      7.48
 5 mu         0.5      1.15      5.89e- 1  7.62e-11     10.0 
 6 mu         0.6      1.07      2.94e- 1  4.38e- 9      5.27
 7 mu         0.7      1.12      7.50e- 1  5.46e-14      4.72
 8 mu         0.8      1.64      1.96e- 1  3.73e-21      9.39
 9 mu         0.9      1.43      6.20e- 4  9.66e-34     29.4 
10 mu_1       0.1      0.848     4.94e-11  4.72e-41     30.5 
11 mu_1       0.2      1.04      1.37e- 5  7.39e-28     18.4 
12 mu_1       0.3      0.947     8.62e- 3  3.62e-20      9.31
13 mu_1       0.4      1.12      1.48e- 1  9.74e-15      7.44
14 mu_1       0.5      1.15      5.30e- 1  1.49e-10     10.0 
15 mu_1       0.6      1.06      2.98e- 1  1.02e- 9      5.02
16 mu_1       0.7      1.14      6.83e- 1  1.09e-14      4.49
17 mu_1       0.8      1.67      1.51e- 1  6.52e-22      9.78
18 mu_1       0.9      1.40      4.35e- 4  1.50e-34     29.3 
19 mu_0       0.1      0.536     3.29e-12  1.17e-43     20.8 
20 mu_0       0.2      1.07      2.55e- 6  4.10e-30     20.4 
21 mu_0       0.3      0.934     2.48e- 3  3.45e-22      9.12
22 mu_0       0.4      1.10      8.20e- 2  1.44e-16      7.80
23 mu_0       0.5      1.14      4.20e- 1  3.31e-12     10.0 
24 mu_0       0.6      1.07      3.17e- 1  9.41e- 9      5.99
25 mu_0       0.7      1.08      6.48e- 1  1.57e-13      5.24
26 mu_0       0.8      1.55      3.12e- 1  1.60e-20      8.04
27 mu_0       0.9      1.64      2.28e- 3  8.31e-33     30.7 
[1] "Total run time was 216.622 seconds"
