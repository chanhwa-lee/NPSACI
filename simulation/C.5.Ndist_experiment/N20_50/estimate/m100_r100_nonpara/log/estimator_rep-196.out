
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3677"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 2  2  1  2  3  1  1  3  5  4  4  3  3  5  4  3  3  1  2  1  6  6  6  5  1  2 
46 47 48 49 50 
 3  6  4  7  1 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0272  0.3221  0.5978  1.0000  5.0000 
[1] "event indicator table: "

   0    1 
2166 1511 
[1] "treatment indicator table: "

   0    1 
1454 2223 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1766
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 44"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1911
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 241.728 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.514 0.118 
 2 mu         0.1   0.2 0.552 0.0940
 3 mu         0.1   0.3 0.597 0.0794
 4 mu         0.1   0.4 0.619 0.0793
 5 mu         0.1   0.5 0.661 0.0807
 6 mu         0.2   0.1 0.439 0.0898
 7 mu         0.2   0.2 0.484 0.0685
 8 mu         0.2   0.3 0.531 0.0528
 9 mu         0.2   0.4 0.552 0.0492
10 mu         0.2   0.5 0.598 0.0462
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.01         0.720   0.00312      4.10
 2 mu         0.2      1.02         0.953   0.259        2.08
 3 mu         0.3      1.02         1.00    0.553        1.91
 4 mu         0.4      1.01         1.01    0.675        1.45
 5 mu         0.5      1.01         1.01    0.723        1.36
 6 mu         0.6      1.02         1.02    0.823        1.27
 7 mu         0.7      1.01         1.00    0.754        1.30
 8 mu         0.8      0.988        0.976   0.499        1.47
 9 mu         0.9      0.938        0.913   0.276        1.71
10 mu_1       0.1      0.969        0.865   0.00779      3.34
11 mu_1       0.2      1.02         0.958   0.322        2.09
12 mu_1       0.3      1.02         1.00    0.574        1.88
13 mu_1       0.4      1.00         1.01    0.702        1.41
14 mu_1       0.5      1.01         1.01    0.725        1.35
15 mu_1       0.6      1.02         1.02    0.818        1.25
16 mu_1       0.7      1.01         1.01    0.733        1.30
17 mu_1       0.8      0.987        0.975   0.494        1.48
18 mu_1       0.9      0.935        0.908   0.263        1.72
19 mu_0       0.1      1.01         0.681   0.00260      4.26
20 mu_0       0.2      1.02         0.959   0.237        2.14
21 mu_0       0.3      1.02         1.01    0.544        1.92
22 mu_0       0.4      1.01         1.02    0.656        1.48
23 mu_0       0.5      1.01         1.01    0.721        1.36
24 mu_0       0.6      1.02         1.01    0.830        1.29
25 mu_0       0.7      1.01         1.00    0.749        1.30
26 mu_0       0.8      0.995        0.986   0.521        1.46
27 mu_0       0.9      0.968        0.945   0.397        1.69
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.0685     1.21e-12  1.37e-36      3.37
 2 mu         0.2     0.650      2.63e- 6  7.55e-24     19.9 
 3 mu         0.3     0.996      2.29e- 3  1.65e-16     12.0 
 4 mu         0.4     1.18       1.04e- 1  2.10e-11      6.61
 5 mu         0.5     0.987      5.43e- 1  1.49e- 7      5.70
 6 mu         0.6     0.852      4.66e- 1  3.04e- 5      3.47
 7 mu         0.7     1.03       5.98e- 1  1.05e- 8      3.57
 8 mu         0.8     1.29       8.96e- 2  7.08e-14      8.88
 9 mu         0.9     1.05       2.24e- 4  4.23e-23     22.6 
10 mu_1       0.1     0.146      6.93e-12  1.26e-35      6.75
11 mu_1       0.2     0.777      8.56e- 6  3.45e-23     19.9 
12 mu_1       0.3     1.06       4.46e- 3  5.03e-16     10.9 
13 mu_1       0.4     1.17       1.54e- 1  4.80e-11      6.30
14 mu_1       0.5     0.952      4.75e- 1  2.72e- 7      5.53
15 mu_1       0.6     0.852      4.89e- 1  1.01e- 5      3.47
16 mu_1       0.7     1.05       5.42e- 1  3.00e- 9      3.73
17 mu_1       0.8     1.30       6.80e- 2  1.77e-14      9.30
18 mu_1       0.9     1.03       1.49e- 4  9.40e-24     22.9 
19 mu_0       0.1     0.0599     5.79e-13  1.30e-37      3.00
20 mu_0       0.2     0.618      1.15e- 6  8.03e-25     19.9 
21 mu_0       0.3     0.970      1.36e- 3  2.01e-17     13.2 
22 mu_0       0.4     1.18       7.00e- 2  2.98e-12      7.44
23 mu_0       0.5     1.02       4.23e- 1  2.53e- 8      5.87
24 mu_0       0.6     0.851      4.96e- 1  3.29e- 5      3.47
25 mu_0       0.7     0.977      7.33e- 1  2.80e- 8      3.83
26 mu_0       0.8     1.28       1.76e- 1  2.83e-13      8.17
27 mu_0       0.9     1.19       9.00e- 4  3.38e-22     19.2 
[1] "Total run time was 246.622 seconds"
