
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3465"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 5  2  3  3  4  4  4  3  3  2  4  3  5  1  3  3  5  4  3  2  3  2  2  3  5  4 
46 48 49 50 
 7  1  3  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03848 0.34497 0.61062 1.00000 5.00000 
[1] "event indicator table: "

   0    1 
1978 1487 
[1] "treatment indicator table: "

   0    1 
1316 2149 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1671
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1794
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 30"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 189.332 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.271 0.0536
 2 mu         0.1   0.2 0.317 0.0501
 3 mu         0.1   0.3 0.361 0.0580
 4 mu         0.1   0.4 0.431 0.0744
 5 mu         0.1   0.5 0.530 0.0955
 6 mu         0.2   0.1 0.313 0.0347
 7 mu         0.2   0.2 0.388 0.0241
 8 mu         0.2   0.3 0.445 0.0285
 9 mu         0.2   0.4 0.539 0.0464
10 mu         0.2   0.5 0.636 0.0693
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      0.717        0.342 0.00000373      6.90
 2 mu         0.2      0.956        0.877 0.0128          3.30
 3 mu         0.3      0.977        0.967 0.252           1.75
 4 mu         0.4      0.981        0.999 0.592           1.44
 5 mu         0.5      0.982        0.986 0.660           1.29
 6 mu         0.6      1.00         0.995 0.757           1.32
 7 mu         0.7      1.02         1.02  0.744           1.35
 8 mu         0.8      1.01         1.01  0.704           1.62
 9 mu         0.9      0.978        0.953 0.413           1.99
10 mu_1       0.1      0.828        0.591 0.0000138       7.29
11 mu_1       0.2      0.969        0.941 0.0242          2.50
12 mu_1       0.3      0.975        0.961 0.303           1.64
13 mu_1       0.4      0.980        0.993 0.626           1.43
14 mu_1       0.5      0.984        0.987 0.661           1.27
15 mu_1       0.6      1.00         0.997 0.755           1.32
16 mu_1       0.7      1.02         1.02  0.734           1.36
17 mu_1       0.8      1.01         1.02  0.701           1.66
18 mu_1       0.9      0.976        0.946 0.384           1.99
19 mu_0       0.1      0.704        0.308 0.00000261      6.85
20 mu_0       0.2      0.953        0.875 0.00998         3.56
21 mu_0       0.3      0.978        0.965 0.230           1.80
22 mu_0       0.4      0.981        1.00  0.569           1.44
23 mu_0       0.5      0.981        0.968 0.658           1.31
24 mu_0       0.6      0.995        0.987 0.740           1.33
25 mu_0       0.7      1.02         1.01  0.768           1.33
26 mu_0       0.8      1.01         1.02  0.717           1.49
27 mu_0       0.9      0.996        0.974 0.631           2.02
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.71      6.58e-13  9.25e-39    124.  
 2 mu         0.2      2.34      8.62e- 7  6.43e-26    102.  
 3 mu         0.3      1.23      9.34e- 4  1.84e-18     23.1 
 4 mu         0.4      0.951     5.00e- 2  3.18e-13      7.11
 5 mu         0.5      1.03      4.21e- 1  3.25e- 9      6.26
 6 mu         0.6      1.09      6.91e- 1  5.40e- 7      5.18
 7 mu         0.7      0.999     6.55e- 1  3.24e-11      4.31
 8 mu         0.8      1.18      1.78e- 1  2.21e-17      7.71
 9 mu         0.9      1.08      4.95e- 4  3.25e-28     12.5 
10 mu_1       0.1      2.55      4.64e-12  8.84e-38    173.  
11 mu_1       0.2      2.06      2.58e- 6  3.07e-25     71.0 
12 mu_1       0.3      1.12      2.03e- 3  5.85e-18     18.0 
13 mu_1       0.4      0.939     7.79e- 2  7.60e-13      6.91
14 mu_1       0.5      1.05      4.83e- 1  6.21e- 9      6.76
15 mu_1       0.6      1.08      7.85e- 1  1.25e- 7      5.00
16 mu_1       0.7      1.01      6.26e- 1  6.46e-12      4.45
17 mu_1       0.8      1.19      1.41e- 1  3.85e-18      7.76
18 mu_1       0.9      1.06      3.40e- 4  5.04e-29     13.1 
19 mu_0       0.1      1.61      2.24e-13  4.57e-40    119.  
20 mu_0       0.2      2.41      4.24e- 7  3.57e-27    109.  
21 mu_0       0.3      1.28      4.62e- 4  1.17e-19     25.3 
22 mu_0       0.4      0.959     2.91e- 2  2.36e-14      7.24
23 mu_0       0.5      1.01      3.32e- 1  2.89e-10      5.76
24 mu_0       0.6      1.10      7.12e- 1  5.86e- 7      5.83
25 mu_0       0.7      0.985     6.84e- 1  9.30e-11      4.78
26 mu_0       0.8      1.14      2.76e- 1  9.49e-17      7.55
27 mu_0       0.9      1.21      1.89e- 3  2.80e-27      9.61
[1] "Total run time was 192.872 seconds"
