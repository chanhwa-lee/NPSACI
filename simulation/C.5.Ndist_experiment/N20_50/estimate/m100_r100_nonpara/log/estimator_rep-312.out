
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3471"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 41 42 43 45 46 47 
 3  1  5  1  3  4  3 11  6  4  3  2  1  4  1  2  2  5  2  4  6  2  1  4  4  4 
48 49 50 
 2  4  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04158 0.36553 0.62985 1.00000 5.00000 
[1] "event indicator table: "

   0    1 
2079 1392 
[1] "treatment indicator table: "

   0    1 
1130 2341 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1739
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1732
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 72"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 232.885 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.302 0.213 
 2 mu         0.1   0.2 0.343 0.278 
 3 mu         0.1   0.3 0.485 0.300 
 4 mu         0.1   0.4 0.555 0.335 
 5 mu         0.1   0.5 0.583 0.365 
 6 mu         0.2   0.1 0.243 0.0704
 7 mu         0.2   0.2 0.300 0.102 
 8 mu         0.2   0.3 0.406 0.0892
 9 mu         0.2   0.4 0.462 0.114 
10 mu         0.2   0.5 0.478 0.129 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      1.17         0.156 0.000000276     61.7 
 2 mu         0.2      0.968        0.743 0.00472         10.7 
 3 mu         0.3      0.998        0.912 0.249            2.77
 4 mu         0.4      1.01         0.987 0.440            1.93
 5 mu         0.5      1.02         1.02  0.527            1.51
 6 mu         0.6      1.02         1.02  0.724            1.36
 7 mu         0.7      1.01         1.00  0.699            1.35
 8 mu         0.8      1.01         1.01  0.669            1.32
 9 mu         0.9      0.980        0.963 0.605            1.57
10 mu_1       0.1      1.07         0.277 0.00000106      42.6 
11 mu_1       0.2      0.971        0.841 0.00920          5.48
12 mu_1       0.3      0.997        0.960 0.334            2.69
13 mu_1       0.4      1.01         1.01  0.451            1.77
14 mu_1       0.5      1.02         1.02  0.563            1.53
15 mu_1       0.6      1.01         1.00  0.737            1.35
16 mu_1       0.7      1.01         0.998 0.705            1.36
17 mu_1       0.8      1.01         1.02  0.654            1.34
18 mu_1       0.9      0.980        0.966 0.580            1.61
19 mu_0       0.1      1.18         0.136 0.000000189     63.9 
20 mu_0       0.2      0.967        0.705 0.00360         12.4 
21 mu_0       0.3      0.999        0.912 0.213            2.80
22 mu_0       0.4      1.01         0.994 0.431            2.04
23 mu_0       0.5      1.02         1.02  0.491            1.49
24 mu_0       0.6      1.02         1.01  0.704            1.36
25 mu_0       0.7      1.01         0.992 0.684            1.33
26 mu_0       0.8      1.01         1.01  0.727            1.32
27 mu_0       0.9      0.979        0.977 0.547            1.36
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.0976     8.98e-15  6.43e-39      8.07
 2 mu         0.2     0.889      7.06e- 8  1.41e-25     34.9 
 3 mu         0.3     1.53       1.10e- 4  6.95e-18     34.9 
 4 mu         0.4     1.14       1.08e- 2  1.57e-12      9.47
 5 mu         0.5     0.855      2.64e- 1  1.74e- 8      4.32
 6 mu         0.6     0.980      4.83e- 1  2.61e- 5      4.78
 7 mu         0.7     1.03       6.47e- 1  1.42e- 6      6.87
 8 mu         0.8     1.12       5.31e- 1  1.25e-11      6.49
 9 mu         0.9     1.04       9.69e- 3  6.71e-21      8.56
10 mu_1       0.1     0.229      5.48e-14  5.91e-38     18.3 
11 mu_1       0.2     1.15       2.25e- 7  6.49e-25     39.6 
12 mu_1       0.3     1.51       2.53e- 4  2.13e-17     30.7 
13 mu_1       0.4     1.06       1.84e- 2  3.61e-12      9.27
14 mu_1       0.5     0.853      2.71e- 1  3.20e- 8      4.01
15 mu_1       0.6     0.988      4.51e- 1  3.99e- 5      5.16
16 mu_1       0.7     1.03       6.51e- 1  5.74e- 7      7.01
17 mu_1       0.8     1.12       4.84e- 1  4.41e-12      6.33
18 mu_1       0.9     1.03       7.67e- 3  2.11e-21      8.73
19 mu_0       0.1     0.0830     3.88e-15  0             6.93
20 mu_0       0.2     0.825      2.94e- 8  0            33.7 
21 mu_0       0.3     1.54       5.30e- 5  0            37.1 
22 mu_0       0.4     1.19       5.15e- 3  0            10.8 
23 mu_0       0.5     0.858      1.64e- 1  0             5.12
24 mu_0       0.6     0.967      3.52e- 1  0             4.94
25 mu_0       0.7     1.04       4.95e- 1  0             6.55
26 mu_0       0.8     1.10       4.60e- 1  0             7.14
27 mu_0       0.9     1.11       2.00e- 2  0             7.31
[1] "Total run time was 237.137 seconds"
