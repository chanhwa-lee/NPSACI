
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3586"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 1  6  2  3  1  2  3  4  2  5  2  3  2  2  5  4  4  3  3  6  5  3  2  2  5  4 
46 47 48 49 50 
 3  1  2  4  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03482 0.36145 0.61328 1.00000 5.84121 
[1] "event indicator table: "

   0    1 
2188 1398 
[1] "treatment indicator table: "

   0    1 
1284 2302 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1748
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1838
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 34"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 58"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 257.653 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.507 0.0844
 2 mu         0.1   0.2 0.668 0.116 
 3 mu         0.1   0.3 0.733 0.122 
 4 mu         0.1   0.4 0.745 0.118 
 5 mu         0.1   0.5 0.800 0.121 
 6 mu         0.2   0.1 0.376 0.0481
 7 mu         0.2   0.2 0.503 0.0703
 8 mu         0.2   0.3 0.557 0.0733
 9 mu         0.2   0.4 0.566 0.0631
10 mu         0.2   0.5 0.615 0.0637
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.22         0.524 0.000123      10.6 
 2 mu         0.2      1.01         0.952 0.0614         3.29
 3 mu         0.3      1.01         0.981 0.477          2.00
 4 mu         0.4      1.02         0.982 0.562          1.72
 5 mu         0.5      1.02         1.01  0.643          1.43
 6 mu         0.6      0.999        1.01  0.669          1.27
 7 mu         0.7      1.00         1.01  0.686          1.26
 8 mu         0.8      0.999        1.01  0.753          1.28
 9 mu         0.9      0.971        0.964 0.565          1.67
10 mu_1       0.1      1.20         0.763 0.000391       8.05
11 mu_1       0.2      0.997        0.949 0.0991         3.10
12 mu_1       0.3      1.02         1.02  0.462          1.88
13 mu_1       0.4      1.02         0.988 0.599          1.63
14 mu_1       0.5      1.01         1.01  0.651          1.38
15 mu_1       0.6      0.998        1.01  0.694          1.26
16 mu_1       0.7      1.01         1.00  0.683          1.27
17 mu_1       0.8      0.997        1.01  0.741          1.27
18 mu_1       0.9      0.971        0.960 0.541          1.66
19 mu_0       0.1      1.22         0.499 0.0000930     10.9 
20 mu_0       0.2      1.02         0.939 0.0520         3.48
21 mu_0       0.3      1.01         0.980 0.454          2.12
22 mu_0       0.4      1.02         0.990 0.537          1.78
23 mu_0       0.5      1.02         1.02  0.635          1.48
24 mu_0       0.6      1.00         1.00  0.631          1.31
25 mu_0       0.7      1.00         1.00  0.691          1.29
26 mu_0       0.8      1.01         1.00  0.756          1.35
27 mu_0       0.9      0.967        0.940 0.531          1.83
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.0197     1.12e-13  6.67e-37      1.32
 2 mu         0.2     0.559      1.43e- 7  1.16e-24     27.5 
 3 mu         0.3     0.936      2.84e- 4  1.47e-17     16.0 
 4 mu         0.4     1.01       3.78e- 2  1.43e-12      8.81
 5 mu         0.5     1.26       6.42e- 1  9.35e- 9     10.3 
 6 mu         0.6     1.26       8.51e- 1  8.85e- 6      7.10
 7 mu         0.7     1.03       5.69e- 1  6.46e-10      5.54
 8 mu         0.8     0.919      1.85e- 1  3.81e-16      6.42
 9 mu         0.9     1.26       2.82e- 4  2.53e-27     12.2 
10 mu_1       0.1     0.0487     6.67e-13  6.36e-36      2.91
11 mu_1       0.2     0.732      4.39e- 7  5.52e-24     30.2 
12 mu_1       0.3     0.978      5.87e- 4  4.67e-17     15.8 
13 mu_1       0.4     1.04       5.91e- 2  3.41e-12      6.88
14 mu_1       0.5     1.27       6.66e- 1  1.78e- 8     10.8 
15 mu_1       0.6     1.23       8.78e- 1  3.24e- 6      6.59
16 mu_1       0.7     1.01       5.84e- 1  2.03e-10      5.69
17 mu_1       0.8     0.924      1.43e- 1  1.05e-16      6.26
18 mu_1       0.9     1.28       1.98e- 4  6.19e-28     12.7 
19 mu_0       0.1     0.0165     4.06e-14  3.44e-38      1.15
20 mu_0       0.2     0.516      6.56e- 8  6.73e-26     26.8 
21 mu_0       0.3     0.918      1.41e- 4  9.77e-19     16.0 
22 mu_0       0.4     0.993      2.36e- 2  1.11e-13     10.1 
23 mu_0       0.5     1.24       4.80e- 1  8.70e-10      9.74
24 mu_0       0.6     1.30       7.62e- 1  1.23e- 6      8.41
25 mu_0       0.7     1.07       5.96e- 1  1.68e- 9      5.17
26 mu_0       0.8     0.901      2.05e- 1  1.49e-15      7.06
27 mu_0       0.9     1.07       1.04e- 3  1.97e-26     11.6 
[1] "Total run time was 262.03 seconds"
