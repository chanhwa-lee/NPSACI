
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3674"
[1] "cluster size dist'n: "

20 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 
 3  1  4  2  4  3  5  5  2  5  2  5  1  1  3  6  3  4  4  2  3  3  5  3  3  6 
48 49 50 
 4  2  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03401 0.33656 0.59481 1.00000 5.75498 
[1] "event indicator table: "

   0    1 
2209 1465 
[1] "treatment indicator table: "

   0    1 
1289 2385 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1815
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 46"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 63"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1859
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 32"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 211.61 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.628 0.305 
 2 mu         0.1   0.2 0.763 0.373 
 3 mu         0.1   0.3 0.860 0.400 
 4 mu         0.1   0.4 0.892 0.436 
 5 mu         0.1   0.5 0.940 0.472 
 6 mu         0.2   0.1 0.463 0.155 
 7 mu         0.2   0.2 0.539 0.139 
 8 mu         0.2   0.3 0.601 0.114 
 9 mu         0.2   0.4 0.609 0.103 
10 mu         0.2   0.5 0.630 0.0969
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      1.49        0.0826 0.0000000513     76.3 
 2 mu         0.2      1.02        0.831  0.00110           9.77
 3 mu         0.3      1.00        0.962  0.0742            3.21
 4 mu         0.4      0.999       0.986  0.401             1.70
 5 mu         0.5      1.00        0.988  0.614             1.44
 6 mu         0.6      0.996       0.996  0.674             1.28
 7 mu         0.7      0.990       0.978  0.760             1.22
 8 mu         0.8      1.02        1.02   0.631             1.47
 9 mu         0.9      1.05        1.00   0.127             2.11
10 mu_1       0.1      1.12        0.179  0.000000202      30.7 
11 mu_1       0.2      0.989       0.910  0.00220           4.85
12 mu_1       0.3      1.00        0.992  0.103             2.95
13 mu_1       0.4      0.997       0.974  0.454             1.65
14 mu_1       0.5      1.00        0.984  0.620             1.44
15 mu_1       0.6      0.994       0.998  0.689             1.27
16 mu_1       0.7      0.991       0.978  0.751             1.22
17 mu_1       0.8      1.02        1.03   0.600             1.50
18 mu_1       0.9      1.05        1.01   0.117             2.18
19 mu_0       0.1      1.53        0.0719 0.0000000346     81.4 
20 mu_0       0.2      1.03        0.790  0.000821         11.3 
21 mu_0       0.3      1.01        0.974  0.0619            3.32
22 mu_0       0.4      1.00        0.981  0.365             1.86
23 mu_0       0.5      1.00        0.988  0.608             1.44
24 mu_0       0.6      0.999       0.992  0.653             1.29
25 mu_0       0.7      0.988       0.974  0.781             1.25
26 mu_0       0.8      1.01        1.00   0.707             1.43
27 mu_0       0.9      1.04        1.01   0.212             1.72
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.04      1.37e-13  5.14e-41     84.8 
 2 mu         0.2      1.58      2.62e- 7  5.08e-27     75.4 
 3 mu         0.3      1.24      2.64e- 4  6.43e-19     39.8 
 4 mu         0.4      1.49      2.25e- 2  3.02e-13     29.9 
 5 mu         0.5      1.28      3.69e- 1  6.26e- 9     12.3 
 6 mu         0.6      1.16      8.99e- 1  1.64e- 7      6.43
 7 mu         0.7      1.05      8.68e- 1  7.38e-12      4.26
 8 mu         0.8      1.13      3.60e- 1  3.35e-18     10.8 
 9 mu         0.9      2.37      2.36e- 3  2.47e-29     49.8 
10 mu_1       0.1      1.56      8.22e-13  4.83e-40    116.  
11 mu_1       0.2      1.49      8.67e- 7  2.39e-26     78.0 
12 mu_1       0.3      1.25      5.81e- 4  2.01e-18     27.5 
13 mu_1       0.4      1.49      3.27e- 2  7.09e-13     29.1 
14 mu_1       0.5      1.25      4.10e- 1  1.18e- 8      9.58
15 mu_1       0.6      1.15      9.33e- 1  3.72e- 8      6.29
16 mu_1       0.7      1.04      8.40e- 1  1.44e-12      4.05
17 mu_1       0.8      1.15      2.92e- 1  5.71e-19     11.8 
18 mu_1       0.9      2.43      1.78e- 3  3.74e-30     52.0 
19 mu_0       0.1      0.981     6.10e-14  3.43e-42     81.4 
20 mu_0       0.2      1.60      1.11e- 7  3.81e-28     74.7 
21 mu_0       0.3      1.24      1.28e- 4  5.51e-20     45.1 
22 mu_0       0.4      1.50      1.27e- 2  3.02e-14     30.5 
23 mu_0       0.5      1.31      2.52e- 1  7.51e-10     15.1 
24 mu_0       0.6      1.16      7.39e- 1  3.54e- 7      6.64
25 mu_0       0.7      1.08      7.51e- 1  2.13e-11      4.73
26 mu_0       0.8      1.04      4.51e- 1  1.45e-17      7.37
27 mu_0       0.9      1.82      7.41e- 3  2.13e-28     29.9 
[1] "Total run time was 214.739 seconds"
