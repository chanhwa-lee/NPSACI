
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3446"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 4  4  4  2  6  5  1  6  4  4  4  2  4  1  3  1  1  3  2  1  1  5  2  7  1  3 
46 47 48 49 50 
 2  6  5  2  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02858 0.32576 0.59851 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
2032 1414 
[1] "treatment indicator table: "

   0    1 
1389 2057 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1776
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1670
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 35"
[1] "     Cluster: 39"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 196.613 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.503 0.101 
 2 mu         0.1   0.2 0.600 0.154 
 3 mu         0.1   0.3 0.626 0.144 
 4 mu         0.1   0.4 0.680 0.132 
 5 mu         0.1   0.5 0.691 0.124 
 6 mu         0.2   0.1 0.419 0.0454
 7 mu         0.2   0.2 0.485 0.0712
 8 mu         0.2   0.3 0.540 0.0676
 9 mu         0.2   0.4 0.593 0.0574
10 mu         0.2   0.5 0.607 0.0522
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.05         0.657  0.000469     11.6 
 2 mu         0.2      0.965        0.939  0.103         2.18
 3 mu         0.3      0.939        0.944  0.404         1.38
 4 mu         0.4      0.988        0.956  0.619         1.51
 5 mu         0.5      0.998        0.984  0.711         1.34
 6 mu         0.6      0.987        0.993  0.739         1.28
 7 mu         0.7      1.00         0.988  0.746         1.40
 8 mu         0.8      1.01         1.02   0.665         1.31
 9 mu         0.9      0.984        0.974  0.225         1.81
10 mu_1       0.1      1.02         0.849  0.00141       4.98
11 mu_1       0.2      0.949        0.974  0.166         1.83
12 mu_1       0.3      0.945        0.938  0.417         1.43
13 mu_1       0.4      0.995        0.974  0.647         1.53
14 mu_1       0.5      0.997        0.991  0.707         1.30
15 mu_1       0.6      0.987        0.989  0.732         1.31
16 mu_1       0.7      1.00         0.987  0.757         1.38
17 mu_1       0.8      1.01         1.03   0.652         1.32
18 mu_1       0.9      0.981        0.954  0.211         1.86
19 mu_0       0.1      1.05         0.621  0.000365     12.4 
20 mu_0       0.2      0.969        0.965  0.0876        2.38
21 mu_0       0.3      0.936        0.949  0.398         1.35
22 mu_0       0.4      0.983        0.960  0.600         1.49
23 mu_0       0.5      1.00         0.980  0.715         1.37
24 mu_0       0.6      0.987        1.00   0.731         1.23
25 mu_0       0.7      1.00         0.991  0.720         1.43
26 mu_0       0.8      1.01         1.01   0.665         1.35
27 mu_0       0.9      1.02         1.02   0.353         1.65
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.334     7.19e-12  8.86e-40     16.2 
 2 mu         0.2      1.57      3.93e- 6  2.19e-26     71.8 
 3 mu         0.3      1.23      3.41e- 3  1.23e-18     29.5 
 4 mu         0.4      0.971     1.16e- 1  3.25e-13      8.77
 5 mu         0.5      1.08      5.43e- 1  4.32e- 9     11.5 
 6 mu         0.6      1.27      4.88e- 1  8.09e- 6     26.7 
 7 mu         0.7      1.08      3.46e- 1  1.29e- 8     12.4 
 8 mu         0.8      1.03      9.17e- 2  6.38e-14      6.48
 9 mu         0.9      1.07      5.22e- 5  1.07e-23     12.7 
10 mu_1       0.1      0.616     4.07e-11  8.31e-39     25.0 
11 mu_1       0.2      1.69      1.08e- 5  1.03e-25     75.1 
12 mu_1       0.3      1.13      6.44e- 3  3.85e-18     20.6 
13 mu_1       0.4      0.963     1.74e- 1  7.62e-13      9.90
14 mu_1       0.5      1.09      6.08e- 1  8.10e- 9     13.9 
15 mu_1       0.6      1.27      5.20e- 1  1.26e- 5     26.9 
16 mu_1       0.7      1.07      3.93e- 1  4.28e- 9     10.7 
17 mu_1       0.8      1.05      7.08e- 2  1.67e-14      6.75
18 mu_1       0.9      1.06      3.55e- 5  2.49e-24     13.4 
19 mu_0       0.1      0.303     3.18e-12  6.15e-41     15.3 
20 mu_0       0.2      1.54      2.21e- 6  1.71e-27     71.0 
21 mu_0       0.3      1.27      1.86e- 3  1.10e-19     33.3 
22 mu_0       0.4      0.976     7.17e- 2  3.39e-14      8.01
23 mu_0       0.5      1.06      4.25e- 1  5.40e-10      9.85
24 mu_0       0.6      1.25      4.52e- 1  1.26e- 6     26.4 
25 mu_0       0.7      1.12      2.98e- 1  3.30e- 8     16.3 
26 mu_0       0.8      0.975     1.69e- 1  2.52e-13      5.85
27 mu_0       0.9      1.18      2.02e- 4  8.47e-23     11.9 
[1] "Total run time was 199.736 seconds"
