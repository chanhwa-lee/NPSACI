
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3613"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 3  3  6  1  1  4  2  1  3  4  5  3  3  4  2  3  2  2  5  2  3  6  3  1  1  2 
47 48 49 50 
 8 10  1  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03744 0.33633 0.62062 1.00000 5.00000 
[1] "event indicator table: "

   0    1 
2157 1456 
[1] "treatment indicator table: "

   0    1 
1347 2266 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1766
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 10"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 56"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1847
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 240.548 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.241 0.0733
 2 mu         0.1   0.2 0.293 0.111 
 3 mu         0.1   0.3 0.388 0.0967
 4 mu         0.1   0.4 0.397 0.120 
 5 mu         0.1   0.5 0.456 0.0927
 6 mu         0.2   0.1 0.291 0.0415
 7 mu         0.2   0.2 0.346 0.0677
 8 mu         0.2   0.3 0.424 0.0583
 9 mu         0.2   0.4 0.452 0.0745
10 mu         0.2   0.5 0.496 0.0491
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.939        0.510  0.000226      6.86
 2 mu         0.2      0.981        0.974  0.0740        3.32
 3 mu         0.3      1.02         0.981  0.438         1.67
 4 mu         0.4      1.00         0.991  0.593         1.52
 5 mu         0.5      1.01         1.01   0.576         1.38
 6 mu         0.6      1.01         0.996  0.636         1.42
 7 mu         0.7      0.993        0.995  0.516         1.37
 8 mu         0.8      0.974        0.980  0.442         1.47
 9 mu         0.9      0.950        0.961  0.0838        1.97
10 mu_1       0.1      1.00         0.697  0.000690      6.61
11 mu_1       0.2      0.984        0.967  0.117         2.47
12 mu_1       0.3      1.02         0.985  0.485         1.60
13 mu_1       0.4      1.00         0.995  0.612         1.53
14 mu_1       0.5      1.01         1.00   0.578         1.38
15 mu_1       0.6      1.01         0.992  0.645         1.40
16 mu_1       0.7      0.993        0.987  0.518         1.37
17 mu_1       0.8      0.972        0.990  0.417         1.47
18 mu_1       0.9      0.950        0.965  0.0763        1.98
19 mu_0       0.1      0.932        0.492  0.000174      7.14
20 mu_0       0.2      0.981        0.958  0.0632        3.54
21 mu_0       0.3      1.02         0.973  0.407         1.74
22 mu_0       0.4      1.01         0.989  0.580         1.51
23 mu_0       0.5      1.00         0.995  0.574         1.38
24 mu_0       0.6      1.01         0.998  0.623         1.45
25 mu_0       0.7      0.995        0.997  0.510         1.38
26 mu_0       0.8      0.980        0.982  0.539         1.46
27 mu_0       0.9      0.953        0.955  0.151         1.87
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.73      1.42e-12  4.40e-39    157.  
 2 mu         0.2      0.815     8.52e- 7  1.93e-25     29.8 
 3 mu         0.3      0.850     3.27e- 4  9.52e-18      9.37
 4 mu         0.4      1.10      3.84e- 2  1.88e-12      6.80
 5 mu         0.5      1.13      2.92e- 1  2.00e- 8      6.64
 6 mu         0.6      1.03      5.94e- 1  3.12e- 5      9.82
 7 mu         0.7      1.15      3.92e- 1  2.50e- 7     15.0 
 8 mu         0.8      1.34      1.81e- 1  1.27e-12      9.85
 9 mu         0.9      2.02      1.06e- 3  2.17e-22     52.7 
10 mu_1       0.1      1.00      8.53e-12  4.05e-38     74.7 
11 mu_1       0.2      0.673     2.84e- 6  8.90e-25     11.3 
12 mu_1       0.3      0.881     7.93e- 4  2.97e-17      8.33
13 mu_1       0.4      1.14      4.90e- 2  4.41e-12      6.11
14 mu_1       0.5      1.10      3.50e- 1  3.75e- 8      7.06
15 mu_1       0.6      1.03      4.88e- 1  6.76e- 6     11.1 
16 mu_1       0.7      1.16      3.84e- 1  2.14e- 8     14.4 
17 mu_1       0.8      1.36      1.38e- 1  4.77e-13     10.5 
18 mu_1       0.9      2.02      7.16e- 4  7.22e-23     53.9 
19 mu_0       0.1      1.81      6.08e-13  3.92e-40    166.  
20 mu_0       0.2      0.851     3.55e- 7  1.93e-26     35.4 
21 mu_0       0.3      0.837     1.27e- 4  8.68e-19      9.81
22 mu_0       0.4      1.07      2.26e- 2  2.00e-13      7.27
23 mu_0       0.5      1.16      1.97e- 1  2.56e- 9      6.23
24 mu_0       0.6      1.03      6.29e- 1  4.98e- 6      7.98
25 mu_0       0.7      1.14      3.27e- 1  5.83e- 7     16.2 
26 mu_0       0.8      1.24      3.51e- 1  4.45e-12      7.18
27 mu_0       0.9      2.09      3.97e- 3  1.52e-21     42.2 
[1] "Total run time was 245.202 seconds"
