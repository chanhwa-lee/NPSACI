
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3487"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 3  4  3  2  2  4  4  3  5  1  1  7  1  5  3  5  2  4  2  2  2  7  7  3  3  2 
46 47 48 49 50 
 1  6  1  4  1 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04029 0.37441 0.63746 1.00000 5.95804 
[1] "event indicator table: "

   0    1 
2113 1374 
[1] "treatment indicator table: "

   0    1 
1245 2242 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1694
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 31"
[1] "     Cluster: 35"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1793
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 12"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 282.304 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.474 0.0847
 2 mu         0.1   0.2 0.579 0.0874
 3 mu         0.1   0.3 0.723 0.113 
 4 mu         0.1   0.4 0.731 0.0909
 5 mu         0.1   0.5 0.861 0.122 
 6 mu         0.2   0.1 0.383 0.0553
 7 mu         0.2   0.2 0.474 0.0529
 8 mu         0.2   0.3 0.576 0.0681
 9 mu         0.2   0.4 0.595 0.0510
10 mu         0.2   0.5 0.681 0.0686
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.25         1.02  0.000125       5.26
 2 mu         0.2      1.14         1.06  0.0440         2.57
 3 mu         0.3      1.05         1.02  0.348          2.40
 4 mu         0.4      0.986        0.941 0.517          1.86
 5 mu         0.5      0.972        0.952 0.626          1.35
 6 mu         0.6      0.989        0.971 0.697          1.30
 7 mu         0.7      1.01         0.988 0.799          1.46
 8 mu         0.8      1.02         1.00  0.685          1.32
 9 mu         0.9      1.01         1.00  0.550          1.55
10 mu_1       0.1      1.26         1.05  0.000399       3.96
11 mu_1       0.2      1.11         1.07  0.0721         2.70
12 mu_1       0.3      1.03         0.993 0.420          2.23
13 mu_1       0.4      0.980        0.951 0.539          1.84
14 mu_1       0.5      0.973        0.962 0.639          1.38
15 mu_1       0.6      0.991        0.982 0.703          1.33
16 mu_1       0.7      1.01         0.994 0.806          1.48
17 mu_1       0.8      1.02         1.01  0.671          1.33
18 mu_1       0.9      1.01         1.01  0.538          1.56
19 mu_0       0.1      1.25         1.01  0.0000950      5.50
20 mu_0       0.2      1.15         1.08  0.0369         2.54
21 mu_0       0.3      1.06         1.03  0.318          2.47
22 mu_0       0.4      0.990        0.954 0.503          1.88
23 mu_0       0.5      0.972        0.949 0.612          1.38
24 mu_0       0.6      0.986        0.981 0.687          1.34
25 mu_0       0.7      1.00         0.977 0.781          1.42
26 mu_0       0.8      1.02         1.01  0.738          1.40
27 mu_0       0.9      1.02         1.01  0.586          1.44
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.836     1.73e-13  4.50e-41     43.7 
 2 mu         0.2      1.09      2.13e- 7  2.23e-27     40.3 
 3 mu         0.3      1.24      3.86e- 4  1.88e-19     21.0 
 4 mu         0.4      1.24      2.40e- 2  6.61e-14     13.7 
 5 mu         0.5      1.25      1.65e- 1  1.10e- 9     13.2 
 6 mu         0.6      1.22      3.80e- 1  7.55e- 8      6.92
 7 mu         0.7      1.11      5.06e- 1  3.40e-12      5.63
 8 mu         0.8      1.18      3.49e- 1  1.54e-18      8.06
 9 mu         0.9      1.12      4.77e- 3  1.14e-29      8.39
10 mu_1       0.1      1.18      1.15e-12  4.23e-40     62.4 
11 mu_1       0.2      1.07      6.76e- 7  1.04e-26     28.8 
12 mu_1       0.3      1.30      9.06e- 4  5.88e-19     19.3 
13 mu_1       0.4      1.24      2.95e- 2  1.55e-13     14.9 
14 mu_1       0.5      1.25      1.85e- 1  2.06e- 9     13.5 
15 mu_1       0.6      1.22      4.29e- 1  1.72e- 8      6.70
16 mu_1       0.7      1.10      5.56e- 1  6.63e-13      5.24
17 mu_1       0.8      1.19      2.68e- 1  2.63e-19      8.60
18 mu_1       0.9      1.11      3.48e- 3  1.73e-30      8.39
19 mu_0       0.1      0.797     6.45e-14  0            41.6 
20 mu_0       0.2      1.09      9.68e- 8  0            43.1 
21 mu_0       0.3      1.22      1.63e- 4  0            21.7 
22 mu_0       0.4      1.24      1.39e- 2  0            12.8 
23 mu_0       0.5      1.24      1.89e- 1  0            12.9 
24 mu_0       0.6      1.23      3.65e- 1  0             7.89
25 mu_0       0.7      1.13      4.20e- 1  0             6.55
26 mu_0       0.8      1.14      4.55e- 1  0             5.90
27 mu_0       0.9      1.26      7.92e- 3  0            11.4 
[1] "Total run time was 286.623 seconds"
