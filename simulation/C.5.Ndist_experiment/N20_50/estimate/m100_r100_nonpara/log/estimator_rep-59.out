
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3513"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 38 39 40 41 42 43 44 45 46 
 4  3  4  4  5  4  1  5  1  1  4  4  1  2  5  3  2  2  4  3  8  3  1  4  7  3 
47 48 49 50 
 3  2  2  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03634 0.36925 0.63799 1.00000 6.27749 
[1] "event indicator table: "

   0    1 
2025 1488 
[1] "treatment indicator table: "

   0    1 
1322 2191 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1716
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1797
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 77"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 88"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 222.323 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.356 0.0568
 2 mu         0.1   0.2 0.433 0.0643
 3 mu         0.1   0.3 0.471 0.0693
 4 mu         0.1   0.4 0.469 0.0662
 5 mu         0.1   0.5 0.485 0.0672
 6 mu         0.2   0.1 0.370 0.0413
 7 mu         0.2   0.2 0.456 0.0449
 8 mu         0.2   0.3 0.512 0.0473
 9 mu         0.2   0.4 0.524 0.0411
10 mu         0.2   0.5 0.543 0.0415
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.840        0.481  0.000796      4.85
 2 mu         0.2      1.00         0.985  0.0934        2.82
 3 mu         0.3      1.00         1.00   0.335         1.58
 4 mu         0.4      1.02         1.02   0.704         1.51
 5 mu         0.5      1.00         1.00   0.622         1.33
 6 mu         0.6      0.987        0.985  0.728         1.44
 7 mu         0.7      0.974        0.978  0.622         1.24
 8 mu         0.8      0.992        0.987  0.611         1.52
 9 mu         0.9      1.01         1.03   0.127         1.80
10 mu_1       0.1      0.913        0.739  0.00250       3.22
11 mu_1       0.2      1.01         0.993  0.126         2.62
12 mu_1       0.3      1.01         1.01   0.407         1.58
13 mu_1       0.4      1.02         1.02   0.687         1.53
14 mu_1       0.5      1.00         1.00   0.624         1.38
15 mu_1       0.6      0.985        0.978  0.726         1.42
16 mu_1       0.7      0.973        0.980  0.625         1.26
17 mu_1       0.8      0.995        0.987  0.608         1.55
18 mu_1       0.9      1.01         1.03   0.116         1.86
19 mu_0       0.1      0.832        0.451  0.000606      5.08
20 mu_0       0.2      0.998        0.978  0.0852        2.87
21 mu_0       0.3      0.998        0.988  0.304         1.61
22 mu_0       0.4      1.02         1.02   0.686         1.53
23 mu_0       0.5      1.01         1.01   0.620         1.36
24 mu_0       0.6      0.990        0.990  0.702         1.46
25 mu_0       0.7      0.976        0.978  0.617         1.23
26 mu_0       0.8      0.984        0.991  0.601         1.39
27 mu_0       0.9      1.02         1.01   0.231         1.85
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.133     1.01e-12  1.58e-45      8.56
 2 mu         0.2      0.671     2.72e- 6  2.22e-31     28.8 
 3 mu         0.3      0.769     4.74e- 3  4.20e-23     11.7 
 4 mu         0.4      1.03      2.08e- 1  3.13e-17      9.02
 5 mu         0.5      1.56      5.86e- 1  1.12e-12     18.6 
 6 mu         0.6      1.54      9.13e- 1  5.91e- 9     23.6 
 7 mu         0.7      1.22      5.89e- 1  2.19e- 8      7.83
 8 mu         0.8      1.44      4.82e- 2  1.69e-13      9.34
 9 mu         0.9      3.04      9.40e- 5  1.13e-22     54.5 
10 mu_1       0.1      0.273     5.80e-12  1.58e-44     16.6 
11 mu_1       0.2      0.766     7.74e- 6  1.11e-30     27.9 
12 mu_1       0.3      0.778     9.00e- 3  1.40e-22      9.43
13 mu_1       0.4      1.09      2.94e- 1  7.83e-17      9.92
14 mu_1       0.5      1.60      7.48e- 1  2.25e-12     20.9 
15 mu_1       0.6      1.50      1.00e+ 0  9.86e- 9     22.1 
16 mu_1       0.7      1.22      4.92e- 1  6.87e- 9      7.54
17 mu_1       0.8      1.49      3.37e- 2  4.63e-14      9.77
18 mu_1       0.9      3.10      6.37e- 5  2.77e-23     56.5 
19 mu_0       0.1      0.118     4.83e-13  0             7.67
20 mu_0       0.2      0.647     1.46e- 6  0            29.1 
21 mu_0       0.3      0.764     2.92e- 3  0            13.4 
22 mu_0       0.4      0.984     1.51e- 1  0             8.42
23 mu_0       0.5      1.52      6.40e- 1  0            16.3 
24 mu_0       0.6      1.60      1.06e+ 0  0            25.8 
25 mu_0       0.7      1.21      7.06e- 1  0             8.51
26 mu_0       0.8      1.26      1.06e- 1  0             7.60
27 mu_0       0.9      2.45      1.19e- 4  0            36.3 
[1] "Total run time was 225.698 seconds"
