
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3454"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 
 9  3  4  4  3  3  4  2  1  3  2  4  3  3  1  8  1  2  4  2  6  2  4  2  1  3 
47 48 49 50 
 5  3  4  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.01475 0.32571 0.58545 0.99971 5.00000 
[1] "event indicator table: "

   0    1 
2027 1427 
[1] "treatment indicator table: "

   0    1 
1378 2076 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1725
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 27"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1729
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 83"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 287.484 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.486 0.101 
 2 mu         0.1   0.2 0.528 0.102 
 3 mu         0.1   0.3 0.538 0.0935
 4 mu         0.1   0.4 0.579 0.104 
 5 mu         0.1   0.5 0.625 0.0929
 6 mu         0.2   0.1 0.467 0.0639
 7 mu         0.2   0.2 0.524 0.0631
 8 mu         0.2   0.3 0.540 0.0549
 9 mu         0.2   0.4 0.585 0.0625
10 mu         0.2   0.5 0.644 0.0487
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.902        0.673 0.000112       9.85
 2 mu         0.2      0.999        0.910 0.0459         3.21
 3 mu         0.3      1.00         0.988 0.395          1.89
 4 mu         0.4      1.03         1.00  0.635          1.63
 5 mu         0.5      1.03         1.01  0.719          1.38
 6 mu         0.6      1.01         1.01  0.629          1.30
 7 mu         0.7      0.988        0.986 0.700          1.33
 8 mu         0.8      0.983        0.981 0.568          1.45
 9 mu         0.9      0.949        0.957 0.166          1.61
10 mu_1       0.1      0.953        0.791 0.000325       8.93
11 mu_1       0.2      1.00         0.949 0.0709         2.44
12 mu_1       0.3      1.00         0.983 0.466          1.88
13 mu_1       0.4      1.03         1.03  0.647          1.53
14 mu_1       0.5      1.03         1.02  0.729          1.39
15 mu_1       0.6      1.00         1.01  0.623          1.32
16 mu_1       0.7      0.988        0.984 0.701          1.33
17 mu_1       0.8      0.983        0.974 0.564          1.46
18 mu_1       0.9      0.947        0.962 0.158          1.65
19 mu_0       0.1      0.896        0.674 0.0000884      9.96
20 mu_0       0.2      0.997        0.911 0.0397         3.40
21 mu_0       0.3      0.999        0.975 0.362          1.91
22 mu_0       0.4      1.02         0.996 0.628          1.70
23 mu_0       0.5      1.04         1.02  0.705          1.36
24 mu_0       0.6      1.01         1.01  0.638          1.33
25 mu_0       0.7      0.989        0.995 0.698          1.38
26 mu_0       0.8      0.987        1.00  0.586          1.40
27 mu_0       0.9      0.969        0.970 0.241          1.55
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      6.19      2.40e-10  2.49e-36    604.  
 2 mu         0.2      1.83      9.05e- 6  2.44e-24     97.7 
 3 mu         0.3      1.22      2.55e- 3  2.36e-17     16.2 
 4 mu         0.4      1.38      1.08e- 1  2.01e-12     22.0 
 5 mu         0.5      1.20      5.99e- 1  1.26e- 8      9.52
 6 mu         0.6      1.08      7.28e- 1  1.44e- 8      5.62
 7 mu         0.7      0.960     3.93e- 1  3.58e-13      4.19
 8 mu         0.8      0.838     7.61e- 2  8.28e-20      5.63
 9 mu         0.9      1.60      8.87e- 5  2.41e-31     41.0 
10 mu_1       0.1      5.91      1.26e- 9  2.43e-35    562.  
11 mu_1       0.2      1.42      2.87e- 5  1.19e-23     45.5 
12 mu_1       0.3      1.28      5.33e- 3  7.67e-17     19.7 
13 mu_1       0.4      1.37      1.39e- 1  4.90e-12     20.1 
14 mu_1       0.5      1.17      7.20e- 1  2.46e- 8      8.86
15 mu_1       0.6      1.08      7.40e- 1  2.23e- 9      5.70
16 mu_1       0.7      0.939     3.13e- 1  4.75e-14      4.32
17 mu_1       0.8      0.839     5.61e- 2  9.63e-21      5.89
18 mu_1       0.9      1.68      5.75e- 5  2.49e-32     44.4 
19 mu_0       0.1      6.22      1.19e-10  0           608.  
20 mu_0       0.2      1.93      4.39e- 6  0           111.  
21 mu_0       0.3      1.20      1.48e- 3  0            14.6 
22 mu_0       0.4      1.38      7.27e- 2  0            23.2 
23 mu_0       0.5      1.22      4.92e- 1  0            10.2 
24 mu_0       0.6      1.09      6.44e- 1  0             5.50
25 mu_0       0.7      1.01      4.27e- 1  0             4.29
26 mu_0       0.8      0.835     1.26e- 1  0             5.34
27 mu_0       0.9      0.963     3.19e- 4  0            11.1 
[1] "Total run time was 292.848 seconds"
