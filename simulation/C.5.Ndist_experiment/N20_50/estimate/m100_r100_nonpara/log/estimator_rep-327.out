
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3473"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 35 36 37 38 39 40 41 42 43 44 45 46 
 5  3  3  5  1  4  3  4  1  3  1  6  5  3  2  2  4  4  3  4  8  3  4  5  2  4 
47 48 49 50 
 1  1  5  1 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02752 0.33599 0.59975 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
2032 1441 
[1] "treatment indicator table: "

   0    1 
1365 2108 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1773
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1700
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 207.143 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.381 0.109 
 2 mu         0.1   0.2 0.418 0.104 
 3 mu         0.1   0.3 0.406 0.0945
 4 mu         0.1   0.4 0.424 0.0779
 5 mu         0.1   0.5 0.449 0.0666
 6 mu         0.2   0.1 0.322 0.0539
 7 mu         0.2   0.2 0.387 0.0528
 8 mu         0.2   0.3 0.404 0.0538
 9 mu         0.2   0.4 0.443 0.0453
10 mu         0.2   0.5 0.489 0.0405
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      0.791        0.483 0.00000264      4.66
 2 mu         0.2      0.940        0.899 0.0129          2.68
 3 mu         0.3      1.01         0.996 0.360           1.83
 4 mu         0.4      1.00         0.985 0.633           1.43
 5 mu         0.5      0.990        0.982 0.753           1.31
 6 mu         0.6      0.984        0.975 0.679           1.26
 7 mu         0.7      1.01         1.00  0.802           1.24
 8 mu         0.8      1.03         1.02  0.601           1.46
 9 mu         0.9      1.03         1.02  0.437           1.62
10 mu_1       0.1      0.868        0.693 0.00000934      3.20
11 mu_1       0.2      0.965        0.920 0.0241          2.79
12 mu_1       0.3      1.01         1.00  0.454           1.67
13 mu_1       0.4      1.00         0.984 0.673           1.41
14 mu_1       0.5      0.989        0.975 0.732           1.29
15 mu_1       0.6      0.986        0.972 0.681           1.24
16 mu_1       0.7      1.01         0.997 0.787           1.28
17 mu_1       0.8      1.03         1.02  0.597           1.47
18 mu_1       0.9      1.03         1.02  0.427           1.65
19 mu_0       0.1      0.783        0.457 0.00000190      4.92
20 mu_0       0.2      0.934        0.885 0.0100          2.65
21 mu_0       0.3      1.01         1.00  0.310           1.95
22 mu_0       0.4      1.01         0.996 0.606           1.45
23 mu_0       0.5      0.992        0.986 0.756           1.34
24 mu_0       0.6      0.982        0.980 0.674           1.29
25 mu_0       0.7      0.999        0.982 0.774           1.21
26 mu_0       0.8      1.03         1.02  0.615           1.40
27 mu_0       0.9      1.02         1.02  0.475           1.61
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      6.04      5.05e-12  5.63e-35    594.  
 2 mu         0.2      0.939     3.43e- 6  1.37e-23     34.7 
 3 mu         0.3      1.19      2.46e- 3  5.91e-17     25.7 
 4 mu         0.4      1.32      8.62e- 2  2.83e-12     11.8 
 5 mu         0.5      1.17      5.98e- 1  1.14e- 8      6.63
 6 mu         0.6      1.20      6.74e- 1  9.69e- 8      5.36
 7 mu         0.7      1.19      7.85e- 1  2.02e-11      8.18
 8 mu         0.8      1.21      1.11e- 1  1.20e-16      8.30
 9 mu         0.9      1.22      1.61e- 4  1.26e-25     32.4 
10 mu_1       0.1      2.11      3.00e-11  5.48e-34    191.  
11 mu_1       0.2      0.817     9.72e- 6  6.70e-23     24.6 
12 mu_1       0.3      1.27      5.20e- 3  1.92e-16     22.5 
13 mu_1       0.4      1.29      1.24e- 1  6.90e-12     10.2 
14 mu_1       0.5      1.16      7.29e- 1  2.22e- 8      5.82
15 mu_1       0.6      1.21      7.07e- 1  5.21e- 9      5.56
16 mu_1       0.7      1.19      7.60e- 1  9.30e-13      8.11
17 mu_1       0.8      1.22      8.36e- 2  4.85e-18      8.84
18 mu_1       0.9      1.21      1.05e- 4  4.52e-27     33.3 
19 mu_0       0.1      6.48      1.68e-12  1.60e-36    638.  
20 mu_0       0.2      0.970     1.82e- 6  4.41e-25     41.9 
21 mu_0       0.3      1.16      1.25e- 3  2.16e-18     27.0 
22 mu_0       0.4      1.33      5.19e- 2  1.21e-13     12.8 
23 mu_0       0.5      1.18      5.20e- 1  5.83e-10      7.44
24 mu_0       0.6      1.20      6.30e- 1  2.34e- 7      5.32
25 mu_0       0.7      1.20      7.54e- 1  6.51e-11      8.35
26 mu_0       0.8      1.19      2.08e- 1  5.82e-16      6.15
27 mu_0       0.9      1.32      7.33e- 4  1.22e-24     24.3 
[1] "Total run time was 210.211 seconds"
