
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3567"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 3  2  3  1  2  2  6  2  3  5  3  2  4  4  1  5  5  4  2  5  4  4  1  2  5  4 
46 47 48 49 50 
 3  3  5  2  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03208 0.34185 0.60389 1.00000 5.00000 
[1] "event indicator table: "

   0    1 
2105 1462 
[1] "treatment indicator table: "

   0    1 
1311 2256 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1785
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1782
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 222.51 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.359 0.0989
 2 mu         0.1   0.2 0.445 0.0959
 3 mu         0.1   0.3 0.462 0.0865
 4 mu         0.1   0.4 0.495 0.0895
 5 mu         0.1   0.5 0.541 0.0918
 6 mu         0.2   0.1 0.369 0.0703
 7 mu         0.2   0.2 0.465 0.0703
 8 mu         0.2   0.3 0.497 0.0638
 9 mu         0.2   0.4 0.540 0.0699
10 mu         0.2   0.5 0.592 0.0781
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.805        0.460  0.000237      4.18
 2 mu         0.2      1.00         0.975  0.0544        2.25
 3 mu         0.3      1.04         1.06   0.304         1.65
 4 mu         0.4      1.01         1.00   0.523         1.51
 5 mu         0.5      0.997        0.994  0.725         1.32
 6 mu         0.6      0.998        0.993  0.732         1.35
 7 mu         0.7      0.991        0.986  0.752         1.29
 8 mu         0.8      0.995        0.988  0.686         1.35
 9 mu         0.9      1.00         1.02   0.316         1.83
10 mu_1       0.1      0.857        0.662  0.000712      3.20
11 mu_1       0.2      1.03         1.04   0.0876        2.07
12 mu_1       0.3      1.04         1.04   0.388         1.62
13 mu_1       0.4      1.01         1.00   0.546         1.51
14 mu_1       0.5      0.997        1.00   0.727         1.29
15 mu_1       0.6      0.997        0.994  0.731         1.35
16 mu_1       0.7      0.991        0.991  0.742         1.30
17 mu_1       0.8      0.996        0.992  0.664         1.36
18 mu_1       0.9      1.00         1.01   0.308         1.85
19 mu_0       0.1      0.799        0.428  0.000185      4.28
20 mu_0       0.2      0.996        0.963  0.0461        2.29
21 mu_0       0.3      1.05         1.07   0.268         1.72
22 mu_0       0.4      1.02         0.993  0.507         1.52
23 mu_0       0.5      0.996        0.995  0.671         1.37
24 mu_0       0.6      1.00         0.993  0.724         1.37
25 mu_0       0.7      0.991        0.988  0.734         1.28
26 mu_0       0.8      0.993        0.994  0.764         1.30
27 mu_0       0.9      1.01         0.991  0.385         1.66
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.728     4.85e-13  1.17e-41     44.5 
 2 mu         0.2      1.32      3.96e- 7  1.16e-27     52.6 
 3 mu         0.3      1.27      9.53e- 4  1.18e-19     12.2 
 4 mu         0.4      1.10      5.90e- 2  3.17e-14     11.2 
 5 mu         0.5      1.02      4.42e- 1  4.85e-10      6.47
 6 mu         0.6      1.17      6.80e- 1  1.18e- 6      4.70
 7 mu         0.7      1.04      7.89e- 1  3.27e- 8      4.91
 8 mu         0.8      0.933     1.80e- 1  7.48e-13      6.62
 9 mu         0.9      1.52      3.22e- 4  1.42e-21     16.6 
10 mu_1       0.1      1.15      2.83e-12  1.10e-40     67.4 
11 mu_1       0.2      1.30      1.28e- 6  5.44e-27     39.9 
12 mu_1       0.3      1.24      1.92e- 3  3.84e-19     12.9 
13 mu_1       0.4      1.07      9.29e- 2  7.75e-14     10.4 
14 mu_1       0.5      1.03      5.27e- 1  9.49e-10      5.62
15 mu_1       0.6      1.17      6.25e- 1  1.93e- 6      4.47
16 mu_1       0.7      1.01      7.16e- 1  7.08e- 9      5.11
17 mu_1       0.8      0.943     1.54e- 1  1.42e-13      6.97
18 mu_1       0.9      1.55      2.31e- 4  3.84e-22     18.0 
19 mu_0       0.1      0.681     2.15e-13  0            42.0 
20 mu_0       0.2      1.32      1.92e- 7  0            55.8 
21 mu_0       0.3      1.28      5.39e- 4  0            13.1 
22 mu_0       0.4      1.13      3.63e- 2  0            11.7 
23 mu_0       0.5      1.01      3.32e- 1  0             7.31
24 mu_0       0.6      1.18      5.46e- 1  0             5.03
25 mu_0       0.7      1.09      8.14e- 1  0             4.48
26 mu_0       0.8      0.896     2.47e- 1  0             5.82
27 mu_0       0.9      1.26      8.03e- 4  0            13.9 
[1] "Total run time was 225.741 seconds"
