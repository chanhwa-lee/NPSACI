
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3456"
[1] "cluster size dist'n: "

20 21 22 23 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 
 4  2  1  3  2  5  5  2  7  4  3  5  4  4  4  6  2  4  2  3  4  4  3  3  5  3 
47 48 49 50 
 1  2  1  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0211  0.2971  0.5749  0.9932  5.0000 
[1] "event indicator table: "

   0    1 
2057 1399 
[1] "treatment indicator table: "

   0    1 
1348 2108 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1698
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 36"
[1] "     Cluster: 40"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1758
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 80"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 280.707 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.474 0.0668
 2 mu         0.1   0.2 0.546 0.0857
 3 mu         0.1   0.3 0.626 0.0881
 4 mu         0.1   0.4 0.670 0.0973
 5 mu         0.1   0.5 0.691 0.104 
 6 mu         0.2   0.1 0.387 0.0290
 7 mu         0.2   0.2 0.440 0.0352
 8 mu         0.2   0.3 0.508 0.0295
 9 mu         0.2   0.4 0.561 0.0370
10 mu         0.2   0.5 0.595 0.0392
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      1.18         0.638 0.00000169     10.9 
 2 mu         0.2      0.998        0.915 0.00529         3.25
 3 mu         0.3      0.987        0.963 0.158           1.83
 4 mu         0.4      0.998        1.00  0.613           1.50
 5 mu         0.5      0.992        0.995 0.695           1.26
 6 mu         0.6      0.994        0.990 0.749           1.27
 7 mu         0.7      1.01         1.01  0.720           1.32
 8 mu         0.8      0.995        0.976 0.560           1.76
 9 mu         0.9      0.988        0.937 0.225           2.02
10 mu_1       0.1      1.12         0.779 0.00000607      9.70
11 mu_1       0.2      0.980        0.969 0.00995         2.38
12 mu_1       0.3      0.988        0.984 0.212           1.77
13 mu_1       0.4      0.998        1.01  0.614           1.45
14 mu_1       0.5      0.991        1.00  0.720           1.27
15 mu_1       0.6      0.996        0.994 0.754           1.27
16 mu_1       0.7      1.01         1.00  0.724           1.32
17 mu_1       0.8      0.993        0.975 0.536           1.79
18 mu_1       0.9      0.990        0.942 0.219           2.07
19 mu_0       0.1      1.19         0.611 0.00000120     11.5 
20 mu_0       0.2      1.00         0.933 0.00413         3.46
21 mu_0       0.3      0.987        0.955 0.135           1.87
22 mu_0       0.4      0.998        0.986 0.586           1.54
23 mu_0       0.5      0.993        0.977 0.669           1.27
24 mu_0       0.6      0.992        0.988 0.741           1.27
25 mu_0       0.7      1.01         1.01  0.712           1.32
26 mu_0       0.8      1.01         0.992 0.657           1.65
27 mu_0       0.9      0.970        0.944 0.276           1.94
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.37      1.41e-11  3.84e-43     91.8 
 2 mu         0.2      1.67      3.16e- 6  8.54e-29     48.9 
 3 mu         0.3      1.02      1.74e- 3  1.85e-20     18.4 
 4 mu         0.4      0.934     8.74e- 2  1.35e-14      8.03
 5 mu         0.5      1.16      4.19e- 1  4.21e-10      6.23
 6 mu         0.6      1.19      8.72e- 1  1.70e- 6      5.38
 7 mu         0.7      1.23      5.89e- 1  2.18e- 9      9.77
 8 mu         0.8      1.17      1.69e- 1  6.59e-15      8.56
 9 mu         0.9      1.70      1.37e- 4  1.75e-25     35.9 
10 mu_1       0.1      1.75      8.18e-11  3.69e-42    106.  
11 mu_1       0.2      1.52      9.94e- 6  4.10e-28     34.0 
12 mu_1       0.3      0.913     3.81e- 3  5.93e-20     14.0 
13 mu_1       0.4      0.983     1.01e- 1  3.25e-14      7.17
14 mu_1       0.5      1.17      5.43e- 1  8.09e-10      5.63
15 mu_1       0.6      1.19      7.24e- 1  1.34e- 6      5.42
16 mu_1       0.7      1.23      4.84e- 1  4.44e-10      9.64
17 mu_1       0.8      1.16      1.33e- 1  1.89e-15      8.62
18 mu_1       0.9      1.76      9.42e- 5  4.46e-26     39.9 
19 mu_0       0.1      1.32      6.53e-12  0            90.2 
20 mu_0       0.2      1.71      1.47e- 6  0            54.1 
21 mu_0       0.3      1.06      9.16e- 4  0            20.2 
22 mu_0       0.4      0.901     5.42e- 2  0             8.61
23 mu_0       0.5      1.15      2.95e- 1  0             6.82
24 mu_0       0.6      1.19      1.00e+ 0  0             5.76
25 mu_0       0.7      1.23      6.07e- 1  0            10.1 
26 mu_0       0.8      1.18      1.45e- 1  0             8.32
27 mu_0       0.9      1.15      2.66e- 4  0            21.9 
[1] "Total run time was 285.397 seconds"
