
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3442"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 2  5  5  4  2  2  2  3  2  2  3  6  5  2  5  3  8  5  3  1  2  2  3  3  4  2 
46 47 48 49 50 
 6  2  1  4  1 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03893 0.35896 0.62204 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
2049 1393 
[1] "treatment indicator table: "

   0    1 
1251 2191 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1647
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1795
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 80"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 445.05 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.447 0.104 
 2 mu         0.1   0.2 0.508 0.123 
 3 mu         0.1   0.3 0.586 0.130 
 4 mu         0.1   0.4 0.680 0.139 
 5 mu         0.1   0.5 0.712 0.147 
 6 mu         0.2   0.1 0.379 0.0593
 7 mu         0.2   0.2 0.424 0.0570
 8 mu         0.2   0.3 0.501 0.0424
 9 mu         0.2   0.4 0.585 0.0397
10 mu         0.2   0.5 0.619 0.0405
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.16         0.336 0.0000345     18.8 
 2 mu         0.2      1.09         1.07  0.0469         3.61
 3 mu         0.3      1.05         1.04  0.444          2.27
 4 mu         0.4      1.02         1.01  0.541          1.60
 5 mu         0.5      0.995        0.996 0.697          1.35
 6 mu         0.6      0.977        0.978 0.632          1.27
 7 mu         0.7      0.984        0.978 0.657          1.24
 8 mu         0.8      1.00         1.01  0.690          1.36
 9 mu         0.9      1.00         0.994 0.345          1.89
10 mu_1       0.1      1.10         0.593 0.000113       8.56
11 mu_1       0.2      1.09         1.06  0.0810         3.45
12 mu_1       0.3      1.04         1.04  0.442          2.11
13 mu_1       0.4      1.02         1.02  0.592          1.56
14 mu_1       0.5      0.992        0.990 0.678          1.36
15 mu_1       0.6      0.977        0.972 0.634          1.26
16 mu_1       0.7      0.986        0.984 0.647          1.26
17 mu_1       0.8      1.00         1.01  0.679          1.36
18 mu_1       0.9      1.00         0.992 0.322          1.94
19 mu_0       0.1      1.17         0.306 0.0000258     19.9 
20 mu_0       0.2      1.09         1.03  0.0384         3.65
21 mu_0       0.3      1.05         1.06  0.445          2.34
22 mu_0       0.4      1.03         1.02  0.502          1.62
23 mu_0       0.5      0.998        0.993 0.705          1.37
24 mu_0       0.6      0.978        0.983 0.630          1.31
25 mu_0       0.7      0.981        0.985 0.655          1.21
26 mu_0       0.8      0.999        0.992 0.716          1.33
27 mu_0       0.9      1.00         0.993 0.496          1.53
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.169     2.78e-11  2.11e-39      6.96
 2 mu         0.2      0.673     3.94e- 6  8.24e-27     25.8 
 3 mu         0.3      0.647     1.42e- 3  1.79e-19     17.9 
 4 mu         0.4      1.10      6.25e- 2  2.72e-14     10.0 
 5 mu         0.5      1.42      3.99e- 1  2.66e-10     13.9 
 6 mu         0.6      1.03      6.91e- 1  4.51e- 7      5.68
 7 mu         0.7      0.961     5.34e- 1  9.04e- 7      7.09
 8 mu         0.8      1.09      2.44e- 1  7.98e-11     10.8 
 9 mu         0.9      1.43      1.22e- 3  4.82e-18     24.4 
10 mu_1       0.1      0.332     1.69e-10  2.06e-38     12.9 
11 mu_1       0.2      0.711     1.25e- 5  4.02e-26     29.2 
12 mu_1       0.3      0.654     3.17e- 3  5.84e-19     13.5 
13 mu_1       0.4      1.20      9.85e- 2  6.64e-14     11.8 
14 mu_1       0.5      1.41      5.17e- 1  5.20e-10     13.2 
15 mu_1       0.6      1.01      5.87e- 1  7.34e- 7      5.75
16 mu_1       0.7      0.969     5.68e- 1  2.50e- 7      7.11
17 mu_1       0.8      1.10      1.90e- 1  1.93e-11     11.1 
18 mu_1       0.9      1.45      8.40e- 4  1.04e-18     25.3 
19 mu_0       0.1      0.151     1.22e-11  0             6.30
20 mu_0       0.2      0.663     1.59e- 6  0            25.0 
21 mu_0       0.3      0.644     6.73e- 4  0            19.8 
22 mu_0       0.4      1.03      3.85e- 2  0             8.82
23 mu_0       0.5      1.43      2.75e- 1  0            14.7 
24 mu_0       0.6      1.08      6.62e- 1  0             5.88
25 mu_0       0.7      0.941     4.51e- 1  0             7.04
26 mu_0       0.8      1.05      2.19e- 1  0             9.49
27 mu_0       0.9      1.21      2.53e- 3  0            16.6 
[1] "Total run time was 451.479 seconds"
