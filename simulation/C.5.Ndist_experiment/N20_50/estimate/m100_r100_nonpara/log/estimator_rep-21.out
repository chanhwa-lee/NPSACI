
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3340"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 42 44 45 46 47 
 5  8  3  1  4  3  3  5  1  2  6  5  3  6  2  2  3  4  4  1  3  8  3  2  4  2 
48 49 50 
 2  3  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03625 0.34842 0.58927 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
1980 1360 
[1] "treatment indicator table: "

   0    1 
1218 2122 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1696
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1644
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 6"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 216.872 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.278 0.0514
 2 mu         0.1   0.2 0.362 0.0613
 3 mu         0.1   0.3 0.450 0.0797
 4 mu         0.1   0.4 0.522 0.0962
 5 mu         0.1   0.5 0.546 0.0993
 6 mu         0.2   0.1 0.295 0.0282
 7 mu         0.2   0.2 0.375 0.0347
 8 mu         0.2   0.3 0.438 0.0440
 9 mu         0.2   0.4 0.514 0.0523
10 mu         0.2   0.5 0.550 0.0518
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.848        0.330 0.0000150      7.80
 2 mu         0.2      0.978        0.853 0.0181         2.77
 3 mu         0.3      0.997        0.969 0.323          1.89
 4 mu         0.4      0.991        1.02  0.473          1.46
 5 mu         0.5      1.00         1.01  0.647          1.28
 6 mu         0.6      1.00         1.01  0.717          1.38
 7 mu         0.7      0.986        0.989 0.665          1.21
 8 mu         0.8      1.00         0.987 0.615          1.41
 9 mu         0.9      1.00         1.01  0.560          1.94
10 mu_1       0.1      0.920        0.554 0.0000536      7.33
11 mu_1       0.2      0.996        0.930 0.0338         2.34
12 mu_1       0.3      0.999        0.986 0.422          1.80
13 mu_1       0.4      0.991        1.03  0.471          1.38
14 mu_1       0.5      1.00         1.02  0.692          1.32
15 mu_1       0.6      0.999        1.00  0.724          1.37
16 mu_1       0.7      0.986        0.990 0.657          1.22
17 mu_1       0.8      1.00         0.990 0.602          1.42
18 mu_1       0.9      1.00         1.01  0.550          1.97
19 mu_0       0.1      0.839        0.303 0.0000107      7.85
20 mu_0       0.2      0.974        0.843 0.0142         2.92
21 mu_0       0.3      0.997        0.949 0.280          1.96
22 mu_0       0.4      0.991        1.01  0.466          1.50
23 mu_0       0.5      0.999        1.03  0.603          1.29
24 mu_0       0.6      1.00         1.01  0.707          1.41
25 mu_0       0.7      0.987        0.994 0.681          1.25
26 mu_0       0.8      0.995        0.973 0.668          1.41
27 mu_0       0.9      1.01         1.00  0.495          1.62
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.900     7.81e-13  5.99e-44     85.3 
 2 mu         0.2      0.913     8.62e- 7  4.22e-30     28.4 
 3 mu         0.3      1.32      1.07e- 3  5.31e-22     22.7 
 4 mu         0.4      1.12      6.92e- 2  2.97e-16     11.1 
 5 mu         0.5      1.12      4.70e- 1  8.51e-12      6.71
 6 mu         0.6      1.13      7.19e- 1  3.74e- 8      5.20
 7 mu         0.7      1.02      6.47e- 1  3.84e- 9      4.18
 8 mu         0.8      0.925     2.93e- 1  4.82e-14      4.78
 9 mu         0.9      1.12      2.72e- 3  5.12e-24     14.9 
10 mu_1       0.1      0.971     4.98e-12  5.99e-43     85.3 
11 mu_1       0.2      0.983     2.53e- 6  2.11e-29     26.2 
12 mu_1       0.3      1.32      2.28e- 3  1.77e-21     20.5 
13 mu_1       0.4      1.10      8.95e- 2  7.42e-16     10.5 
14 mu_1       0.5      1.14      4.31e- 1  1.70e-11      6.92
15 mu_1       0.6      1.12      7.26e- 1  6.23e- 8      5.52
16 mu_1       0.7      1.01      6.94e- 1  5.48e-10      4.16
17 mu_1       0.8      0.918     2.30e- 1  1.26e-14      4.92
18 mu_1       0.9      1.16      1.97e- 3  1.36e-24     15.7 
19 mu_0       0.1      0.892     3.14e-13  0            85.3 
20 mu_0       0.2      0.896     4.68e- 7  0            31.9 
21 mu_0       0.3      1.31      5.66e- 4  0            23.7 
22 mu_0       0.4      1.14      3.84e- 2  0            11.4 
23 mu_0       0.5      1.10      4.02e- 1  0             6.51
24 mu_0       0.6      1.14      5.10e- 1  0             5.35
25 mu_0       0.7      1.04      6.75e- 1  0             4.73
26 mu_0       0.8      0.949     3.53e- 1  0             4.73
27 mu_0       0.9      0.808     7.38e- 3  0             7.65
[1] "Total run time was 220.083 seconds"
