
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3561"
[1] "cluster size dist'n: "

20 21 22 23 24 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 
 3  4  5  3  2  1  3  7  1  4  1  6  3  4  3  4  1  2  3  3  6  4  4  5  1  1 
47 48 49 50 
 3  1  5  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02529 0.31177 0.58279 0.99726 5.00000 
[1] "event indicator table: "

   0    1 
2107 1454 
[1] "treatment indicator table: "

   0    1 
1370 2191 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1795
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 13"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1766
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 76"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 178.252 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.471 0.0723
 2 mu         0.1   0.2 0.525 0.0662
 3 mu         0.1   0.3 0.559 0.0506
 4 mu         0.1   0.4 0.604 0.0650
 5 mu         0.1   0.5 0.681 0.0761
 6 mu         0.2   0.1 0.406 0.0476
 7 mu         0.2   0.2 0.481 0.0418
 8 mu         0.2   0.3 0.534 0.0308
 9 mu         0.2   0.4 0.566 0.0402
10 mu         0.2   0.5 0.629 0.0466
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.955        0.762   0.00284      3.27
 2 mu         0.2      0.984        0.936   0.184        2.26
 3 mu         0.3      1.02         0.996   0.580        1.58
 4 mu         0.4      1.03         1.00    0.690        1.44
 5 mu         0.5      1.01         1.01    0.678        1.34
 6 mu         0.6      0.996        1.00    0.678        1.23
 7 mu         0.7      0.995        1.00    0.645        1.26
 8 mu         0.8      0.996        1.01    0.632        1.48
 9 mu         0.9      0.981        0.970   0.408        1.54
10 mu_1       0.1      0.966        0.837   0.00770      3.07
11 mu_1       0.2      0.991        0.976   0.264        1.90
12 mu_1       0.3      1.02         0.998   0.584        1.61
13 mu_1       0.4      1.03         1.01    0.660        1.40
14 mu_1       0.5      1.01         1.01    0.707        1.36
15 mu_1       0.6      0.995        1.01    0.690        1.22
16 mu_1       0.7      0.996        1.00    0.622        1.28
17 mu_1       0.8      0.995        1.00    0.637        1.51
18 mu_1       0.9      0.981        0.967   0.403        1.56
19 mu_0       0.1      0.954        0.732   0.00230      3.29
20 mu_0       0.2      0.982        0.921   0.165        2.36
21 mu_0       0.3      1.01         1.00    0.556        1.59
22 mu_0       0.4      1.03         1.01    0.683        1.46
23 mu_0       0.5      1.01         1.03    0.648        1.32
24 mu_0       0.6      0.998        1.01    0.661        1.26
25 mu_0       0.7      0.994        1.00    0.697        1.26
26 mu_0       0.8      0.999        1.01    0.613        1.40
27 mu_0       0.9      0.978        0.977   0.340        1.41
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.122     1.09e-11  6.08e-43      6.75
 2 mu         0.2      0.720     6.25e- 6  6.76e-29     17.7 
 3 mu         0.3      1.01      3.12e- 3  9.78e-21      8.63
 4 mu         0.4      0.829     9.59e- 2  5.35e-15      5.15
 5 mu         0.5      1.00      5.28e- 1  1.33e-10      5.27
 6 mu         0.6      1.24      1.23e+ 0  4.49e- 7      4.91
 7 mu         0.7      1.09      6.47e- 1  9.99e-10      3.51
 8 mu         0.8      0.876     1.80e- 1  3.93e-15      6.06
 9 mu         0.9      1.12      5.22e- 4  1.04e-24     12.9 
10 mu_1       0.1      0.237     6.97e-11  5.83e-42     11.8 
11 mu_1       0.2      0.848     2.23e- 5  3.24e-28     15.5 
12 mu_1       0.3      1.00      6.20e- 3  3.13e-20      8.80
13 mu_1       0.4      0.810     1.44e- 1  1.28e-14      4.68
14 mu_1       0.5      1.06      6.14e- 1  2.56e-10      5.16
15 mu_1       0.6      1.26      1.31e+ 0  7.18e- 7      4.91
16 mu_1       0.7      1.07      5.84e- 1  2.50e-10      3.67
17 mu_1       0.8      0.865     1.46e- 1  8.60e-16      6.21
18 mu_1       0.9      1.14      3.52e- 4  2.03e-25     13.4 
19 mu_0       0.1      0.109     4.35e-12  2.76e-44      6.18
20 mu_0       0.2      0.688     2.23e- 6  3.45e-30     18.3 
21 mu_0       0.3      1.01      1.73e- 3  5.70e-22      8.55
22 mu_0       0.4      0.841     6.13e- 2  3.64e-16      5.82
23 mu_0       0.5      0.947     3.72e- 1  1.09e-11      5.39
24 mu_0       0.6      1.23      9.63e- 1  4.58e- 8      4.91
25 mu_0       0.7      1.15      6.97e- 1  2.75e- 9      3.57
26 mu_0       0.8      0.922     2.43e- 1  1.62e-14      5.59
27 mu_0       0.9      0.989     2.05e- 3  8.61e-24      9.42
[1] "Total run time was 181.61 seconds"
