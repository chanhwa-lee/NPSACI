
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3434"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 30 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 
 9  4  2  9  3  3  3  1  2  8  2  3  2  2  2  3  2  2  3  1  3  4  2  8  1  2 
48 49 50 
 5  4  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.01111 0.29268 0.55757 0.96353 6.00000 
[1] "event indicator table: "

   0    1 
2133 1301 
[1] "treatment indicator table: "

   0    1 
1309 2125 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1803
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1631
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 190.672 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.356 0.0345
 2 mu         0.1   0.2 0.486 0.0372
 3 mu         0.1   0.3 0.500 0.0382
 4 mu         0.1   0.4 0.537 0.0447
 5 mu         0.1   0.5 0.529 0.0575
 6 mu         0.2   0.1 0.366 0.0348
 7 mu         0.2   0.2 0.451 0.0284
 8 mu         0.2   0.3 0.483 0.0239
 9 mu         0.2   0.4 0.530 0.0305
10 mu         0.2   0.5 0.537 0.0309
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.03         0.912    0.0689      4.57
 2 mu         0.2      1.03         0.991    0.152       2.33
 3 mu         0.3      0.989        0.969    0.365       1.57
 4 mu         0.4      0.989        0.968    0.557       1.67
 5 mu         0.5      0.998        0.985    0.631       1.42
 6 mu         0.6      1.00         1.00     0.646       1.37
 7 mu         0.7      1.00         0.983    0.724       1.35
 8 mu         0.8      0.997        1.00     0.626       1.52
 9 mu         0.9      0.970        0.971    0.335       1.66
10 mu_1       0.1      1.02         0.876    0.136       4.19
11 mu_1       0.2      1.03         0.984    0.189       2.05
12 mu_1       0.3      0.983        0.964    0.412       1.59
13 mu_1       0.4      0.989        0.979    0.584       1.67
14 mu_1       0.5      0.999        0.998    0.620       1.40
15 mu_1       0.6      1.00         1.00     0.657       1.36
16 mu_1       0.7      1.00         0.982    0.712       1.38
17 mu_1       0.8      0.996        1.00     0.618       1.54
18 mu_1       0.9      0.969        0.969    0.322       1.66
19 mu_0       0.1      1.03         0.883    0.0614      4.61
20 mu_0       0.2      1.03         0.993    0.142       2.40
21 mu_0       0.3      0.991        0.991    0.344       1.58
22 mu_0       0.4      0.989        0.976    0.538       1.67
23 mu_0       0.5      0.997        0.988    0.634       1.46
24 mu_0       0.6      1.00         0.993    0.630       1.37
25 mu_0       0.7      1.00         0.980    0.728       1.29
26 mu_0       0.8      1.00         0.994    0.624       1.52
27 mu_0       0.9      0.977        0.951    0.448       1.67
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.452     1.73e-11  1.62e-44     32.1 
 2 mu         0.2      1.16      5.49e- 6  1.14e-30     54.9 
 3 mu         0.3      1.38      4.72e- 3  1.44e-22     29.6 
 4 mu         0.4      1.48      1.20e- 1  8.04e-17     16.4 
 5 mu         0.5      1.39      4.93e- 1  2.31e-12     14.3 
 6 mu         0.6      1.37      6.39e- 1  1.01e- 8      7.68
 7 mu         0.7      1.43      5.87e- 1  1.67e- 8     18.8 
 8 mu         0.8      1.24      1.75e- 1  4.88e-14     13.7 
 9 mu         0.9      1.18      8.66e- 4  4.61e-24     20.5 
10 mu_1       0.1      0.540     1.07e-10  1.62e-43     25.7 
11 mu_1       0.2      1.31      1.57e- 5  5.71e-30     61.0 
12 mu_1       0.3      1.38      9.04e- 3  4.80e-22     21.9 
13 mu_1       0.4      1.49      1.94e- 1  2.01e-16     17.2 
14 mu_1       0.5      1.39      5.26e- 1  4.61e-12     13.9 
15 mu_1       0.6      1.37      7.64e- 1  1.69e- 8      7.74
16 mu_1       0.7      1.42      4.93e- 1  1.91e- 9     19.8 
17 mu_1       0.8      1.22      1.38e- 1  1.35e-14     12.6 
18 mu_1       0.9      1.18      5.59e- 4  1.14e-24     20.7 
19 mu_0       0.1      0.442     7.31e-12  0            32.8 
20 mu_0       0.2      1.13      2.93e- 6  0            53.4 
21 mu_0       0.3      1.37      2.60e- 3  0            32.9 
22 mu_0       0.4      1.48      7.22e- 2  0            15.8 
23 mu_0       0.5      1.40      3.44e- 1  0            14.6 
24 mu_0       0.6      1.37      6.97e- 1  0             7.60
25 mu_0       0.7      1.44      8.01e- 1  0            16.4 
26 mu_0       0.8      1.31      2.05e- 1  0            17.9 
27 mu_0       0.9      1.17      2.93e- 3  0            18.7 
[1] "Total run time was 193.906 seconds"
