
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3391"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 34 35 36 37 38 39 40 41 42 43 44 45 46 
 6  4  2  4  2  2  9  5  5  1  4  6  1  3  1  4  2  1  3  5  4  3  3  3  3  2 
47 48 49 50 
 1  3  2  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03551 0.34364 0.60732 1.00000 4.60967 
[1] "event indicator table: "

   0    1 
2060 1331 
[1] "treatment indicator table: "

   0    1 
1238 2153 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1658
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1733
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 89"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 162.187 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.339 0.0538
 2 mu         0.1   0.2 0.408 0.0623
 3 mu         0.1   0.3 0.464 0.0701
 4 mu         0.1   0.4 0.544 0.0724
 5 mu         0.1   0.5 0.576 0.0813
 6 mu         0.2   0.1 0.341 0.0360
 7 mu         0.2   0.2 0.413 0.0388
 8 mu         0.2   0.3 0.479 0.0446
 9 mu         0.2   0.4 0.558 0.0433
10 mu         0.2   0.5 0.594 0.0525
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      0.899        0.280 0.000000892      7.30
 2 mu         0.2      0.983        0.852 0.00436          5.54
 3 mu         0.3      0.995        0.922 0.161            2.18
 4 mu         0.4      1.01         1.00  0.499            1.82
 5 mu         0.5      1.01         0.977 0.646            1.48
 6 mu         0.6      1.00         1.00  0.810            1.27
 7 mu         0.7      1.00         0.999 0.720            1.26
 8 mu         0.8      1.01         0.984 0.633            1.72
 9 mu         0.9      0.985        0.973 0.200            2.05
10 mu_1       0.1      0.967        0.442 0.00000355       6.95
11 mu_1       0.2      0.986        0.928 0.00884          4.38
12 mu_1       0.3      0.997        0.969 0.225            2.27
13 mu_1       0.4      1.01         1.01  0.520            1.72
14 mu_1       0.5      1.01         0.990 0.649            1.47
15 mu_1       0.6      1.00         0.993 0.813            1.23
16 mu_1       0.7      1.00         1.00  0.712            1.28
17 mu_1       0.8      1.01         0.984 0.624            1.72
18 mu_1       0.9      0.984        0.969 0.188            2.06
19 mu_0       0.1      0.891        0.254 0.000000597      7.48
20 mu_0       0.2      0.983        0.818 0.00324          5.83
21 mu_0       0.3      0.994        0.931 0.134            2.29
22 mu_0       0.4      1.01         1.01  0.486            1.89
23 mu_0       0.5      1.01         0.983 0.643            1.48
24 mu_0       0.6      1.00         1.00  0.780            1.32
25 mu_0       0.7      0.999        0.998 0.738            1.26
26 mu_0       0.8      1.00         0.987 0.655            1.71
27 mu_0       0.9      0.998        0.979 0.309            1.93
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.473     2.34e-11  8.64e-41     29.9 
 2 mu         0.2      1.20      5.36e- 6  1.35e-27     55.9 
 3 mu         0.3      0.833     2.90e- 3  6.62e-20     13.4 
 4 mu         0.4      1.21      1.12e- 1  1.78e-14     11.0 
 5 mu         0.5      1.50      7.02e- 1  2.73e-10      8.03
 6 mu         0.6      1.50      1.02e+ 0  6.66e- 7      7.46
 7 mu         0.7      1.28      8.04e- 1  1.02e- 9     12.5 
 8 mu         0.8      1.28      2.28e- 1  2.05e-15     14.8 
 9 mu         0.9      1.68      6.18e- 4  1.53e-25     25.0 
10 mu_1       0.1      0.829     1.27e-10  8.45e-40     49.8 
11 mu_1       0.2      1.14      1.61e- 5  6.61e-27     46.6 
12 mu_1       0.3      0.844     6.28e- 3  2.16e-19     13.3 
13 mu_1       0.4      1.29      1.76e- 1  4.36e-14     11.3 
14 mu_1       0.5      1.52      8.68e- 1  5.34e-10      8.25
15 mu_1       0.6      1.49      9.71e- 1  1.08e- 6      7.96
16 mu_1       0.7      1.26      6.87e- 1  2.72e-10     12.2 
17 mu_1       0.8      1.30      1.76e- 1  4.76e-16     15.9 
18 mu_1       0.9      1.69      4.07e- 4  3.16e-26     27.2 
19 mu_0       0.1      0.433     1.13e-11  0            27.7 
20 mu_0       0.2      1.22      2.36e- 6  0            58.2 
21 mu_0       0.3      0.828     1.50e- 3  0            13.8 
22 mu_0       0.4      1.15      6.65e- 2  0            10.9 
23 mu_0       0.5      1.49      5.07e- 1  0             7.82
24 mu_0       0.6      1.52      1.04e+ 0  0             6.71
25 mu_0       0.7      1.33      6.40e- 1  0            13.3 
26 mu_0       0.8      1.19      2.72e- 1  0            10.4 
27 mu_0       0.9      1.58      2.03e- 3  0            25.7 
[1] "Total run time was 165.15 seconds"
