
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3509"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 41 42 43 44 45 46 
 2  4  3  6  2  2  2  5  6  3  3  4  3  3  1  4  3  2  2  3  5  2  5  4  3  2 
47 48 49 50 
 4  4  4  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02647 0.34648 0.61024 1.00000 6.22331 
[1] "event indicator table: "

   0    1 
2128 1381 
[1] "treatment indicator table: "

   0    1 
1316 2193 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1736
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 46"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1773
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 251.367 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.524 0.160
 2 mu         0.1   0.2 0.635 0.180
 3 mu         0.1   0.3 0.692 0.184
 4 mu         0.1   0.4 0.716 0.184
 5 mu         0.1   0.5 0.740 0.184
 6 mu         0.2   0.1 0.425 0.118
 7 mu         0.2   0.2 0.479 0.130
 8 mu         0.2   0.3 0.530 0.123
 9 mu         0.2   0.4 0.560 0.108
10 mu         0.2   0.5 0.587 0.101
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.14         0.414 0.000103      29.8 
 2 mu         0.2      0.997        0.868 0.0468         5.52
 3 mu         0.3      0.985        0.984 0.401          1.62
 4 mu         0.4      0.990        0.998 0.492          1.62
 5 mu         0.5      0.984        0.979 0.533          1.50
 6 mu         0.6      0.986        0.984 0.690          1.34
 7 mu         0.7      0.999        1.00  0.719          1.43
 8 mu         0.8      1.01         1.01  0.610          1.63
 9 mu         0.9      1.03         0.997 0.0577         3.47
10 mu_1       0.1      1.00         0.568 0.000323      13.7 
11 mu_1       0.2      0.974        0.937 0.0770         2.23
12 mu_1       0.3      0.987        0.996 0.477          1.53
13 mu_1       0.4      0.990        1.00  0.487          1.61
14 mu_1       0.5      0.982        0.970 0.551          1.51
15 mu_1       0.6      0.987        0.980 0.663          1.35
16 mu_1       0.7      1.00         0.995 0.743          1.47
17 mu_1       0.8      1.01         1.02  0.579          1.63
18 mu_1       0.9      1.03         0.997 0.0507         3.51
19 mu_0       0.1      1.15         0.380 0.0000782     31.6 
20 mu_0       0.2      1.00         0.867 0.0393         6.44
21 mu_0       0.3      0.985        0.986 0.368          1.68
22 mu_0       0.4      0.990        0.992 0.495          1.62
23 mu_0       0.5      0.985        0.994 0.514          1.50
24 mu_0       0.6      0.984        0.987 0.659          1.33
25 mu_0       0.7      0.997        0.994 0.664          1.42
26 mu_0       0.8      1.00         0.984 0.609          1.73
27 mu_0       0.9      1.04         0.994 0.121          3.12
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.167     8.95e-12  1.02e-39     11.8 
 2 mu         0.2      0.601     2.46e- 6  9.02e-27     19.0 
 3 mu         0.3      0.728     2.35e- 3  3.36e-19     13.1 
 4 mu         0.4      0.990     5.31e- 2  7.93e-14     10.1 
 5 mu         0.5      1.15      3.70e- 1  1.17e- 9      7.28
 6 mu         0.6      1.11      4.42e- 1  1.07e- 7      6.74
 7 mu         0.7      1.04      4.42e- 1  3.23e-12     12.6 
 8 mu         0.8      1.45      8.36e- 2  6.48e-19     13.9 
 9 mu         0.9      4.17      3.99e- 4  8.50e-31    110.  
10 mu_1       0.1      0.274     5.79e-11  1.02e-38     17.4 
11 mu_1       0.2      0.648     7.48e- 6  4.51e-26     19.8 
12 mu_1       0.3      0.787     4.72e- 3  1.12e-18     11.6 
13 mu_1       0.4      1.03      8.37e- 2  1.98e-13      9.66
14 mu_1       0.5      1.16      3.68e- 1  2.33e- 9      7.80
15 mu_1       0.6      1.08      4.64e- 1  3.21e- 8      7.49
16 mu_1       0.7      1.05      4.24e- 1  8.31e-13     12.9 
17 mu_1       0.8      1.52      6.18e- 2  1.46e-19     15.2 
18 mu_1       0.9      4.32      2.70e- 4  1.70e-31    123.  
19 mu_0       0.1      0.156     3.51e-12  0            11.1 
20 mu_0       0.2      0.589     1.21e- 6  0            18.8 
21 mu_0       0.3      0.703     1.34e- 3  0            13.7 
22 mu_0       0.4      0.962     4.82e- 2  0            10.4 
23 mu_0       0.5      1.14      2.35e- 1  0             6.76
24 mu_0       0.6      1.14      5.08e- 1  0             7.15
25 mu_0       0.7      1.04      3.52e- 1  0            11.8 
26 mu_0       0.8      1.19      1.10e- 1  0             8.31
27 mu_0       0.9      2.78      1.00e- 3  0            68.0 
[1] "Total run time was 255.043 seconds"
