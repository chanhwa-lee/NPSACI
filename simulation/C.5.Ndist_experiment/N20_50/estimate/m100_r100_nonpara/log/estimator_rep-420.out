
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3601"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 1  2  3  3  5  5  2  1  3  2  3  2  5  5  3  1  3  4  4  4  1  6  4  3  3  4 
46 47 48 49 50 
 3  4  3  5  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02334 0.34082 0.60218 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
2135 1466 
[1] "treatment indicator table: "

   0    1 
1329 2272 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1790
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1811
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 90"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 193.106 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.595 0.0931
 2 mu         0.1   0.2 0.687 0.100 
 3 mu         0.1   0.3 0.734 0.0987
 4 mu         0.1   0.4 0.845 0.119 
 5 mu         0.1   0.5 0.876 0.115 
 6 mu         0.2   0.1 0.422 0.0575
 7 mu         0.2   0.2 0.478 0.0539
 8 mu         0.2   0.3 0.525 0.0488
 9 mu         0.2   0.4 0.610 0.0633
10 mu         0.2   0.5 0.647 0.0615
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.26         0.781  0.000222      6.37
 2 mu         0.2      0.978        0.908  0.0621        3.06
 3 mu         0.3      0.993        0.949  0.284         1.52
 4 mu         0.4      1.01         1.01   0.556         1.57
 5 mu         0.5      1.01         0.989  0.707         1.45
 6 mu         0.6      1.01         1.01   0.816         1.44
 7 mu         0.7      1.01         1.02   0.758         1.24
 8 mu         0.8      0.982        0.999  0.608         1.29
 9 mu         0.9      0.971        0.983  0.583         1.58
10 mu_1       0.1      1.14         0.928  0.000634      5.06
11 mu_1       0.2      0.968        0.909  0.0903        2.69
12 mu_1       0.3      0.998        0.972  0.316         1.56
13 mu_1       0.4      1.01         1.01   0.578         1.61
14 mu_1       0.5      1.01         0.993  0.703         1.39
15 mu_1       0.6      1.02         1.01   0.803         1.43
16 mu_1       0.7      1.01         1.01   0.760         1.25
17 mu_1       0.8      0.981        0.991  0.602         1.31
18 mu_1       0.9      0.971        0.995  0.564         1.58
19 mu_0       0.1      1.27         0.761  0.000176      6.52
20 mu_0       0.2      0.980        0.935  0.0551        3.15
21 mu_0       0.3      0.991        0.956  0.271         1.53
22 mu_0       0.4      1.01         1.01   0.529         1.54
23 mu_0       0.5      1.01         0.993  0.687         1.50
24 mu_0       0.6      1.01         0.995  0.798         1.45
25 mu_0       0.7      1.01         1.01   0.750         1.26
26 mu_0       0.8      0.986        0.996  0.633         1.27
27 mu_0       0.9      0.977        0.990  0.527         1.62
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.890     2.17e-14  1.59e-40     82.4 
 2 mu         0.2      0.939     6.27e- 8  7.86e-27     37.6 
 3 mu         0.3      1.01      1.76e- 4  6.63e-19     15.4 
 4 mu         0.4      1.12      2.91e- 2  2.33e-13      9.05
 5 mu         0.5      1.15      2.62e- 1  3.87e- 9      6.10
 6 mu         0.6      0.955     3.80e- 1  1.09e- 6      4.60
 7 mu         0.7      0.958     3.65e- 1  4.12e-10      4.73
 8 mu         0.8      1.19      3.40e- 1  4.81e-15      6.85
 9 mu         0.9      1.34      1.27e- 3  3.33e-24     17.1 
10 mu_1       0.1      0.916     1.52e-13  1.49e-39     77.2 
11 mu_1       0.2      0.969     2.00e- 7  3.69e-26     38.6 
12 mu_1       0.3      1.03      4.13e- 4  2.07e-18     13.3 
13 mu_1       0.4      1.14      3.85e- 2  5.47e-13      7.24
14 mu_1       0.5      1.13      2.42e- 1  7.27e- 9      6.49
15 mu_1       0.6      0.939     4.19e- 1  1.70e- 7      4.23
16 mu_1       0.7      0.974     3.83e- 1  5.51e-11      4.81
17 mu_1       0.8      1.21      2.83e- 1  5.63e-16      6.68
18 mu_1       0.9      1.33      9.16e- 4  8.85e-25     17.9 
19 mu_0       0.1      0.887     7.40e-15  1.08e-41     82.9 
20 mu_0       0.2      0.932     2.83e- 8  6.01e-28     37.4 
21 mu_0       0.3      1.01      8.38e- 5  5.80e-20     17.4 
22 mu_0       0.4      1.10      1.42e- 2  2.38e-14     10.3 
23 mu_0       0.5      1.17      1.70e- 1  4.74e-10      5.92
24 mu_0       0.6      0.980     4.27e- 1  7.40e- 7      5.16
25 mu_0       0.7      0.923     3.84e- 1  1.24e- 9      4.56
26 mu_0       0.8      1.13      2.44e- 1  2.18e-14      7.52
27 mu_0       0.9      1.36      4.42e- 3  2.53e-23     10.5 
[1] "Total run time was 196.297 seconds"
