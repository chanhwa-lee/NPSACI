
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3489"
[1] "cluster size dist'n: "

20 21 22 23 25 26 27 28 29 30 31 32 33 34 36 37 38 39 40 41 42 43 44 45 46 47 
 4  5  4  3  1  7  5  3  1  3  5  3  1  3  3  2  2  6  4  6  6  5  1  5  2  1 
48 49 50 
 2  3  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02531 0.31664 0.57223 0.97202 5.00000 
[1] "event indicator table: "

   0    1 
1967 1522 
[1] "treatment indicator table: "

   0    1 
1401 2088 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1787
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 20"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 41"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1702
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 70"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 230.899 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.472 0.0808
 2 mu         0.1   0.2 0.496 0.0625
 3 mu         0.1   0.3 0.559 0.0681
 4 mu         0.1   0.4 0.590 0.0797
 5 mu         0.1   0.5 0.582 0.0742
 6 mu         0.2   0.1 0.386 0.0416
 7 mu         0.2   0.2 0.501 0.0314
 8 mu         0.2   0.3 0.576 0.0350
 9 mu         0.2   0.4 0.603 0.0313
10 mu         0.2   0.5 0.610 0.0307
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.981        0.795    0.0329      5.24
 2 mu         0.2      1.07         1.03     0.395       2.46
 3 mu         0.3      1.02         0.968    0.665       1.82
 4 mu         0.4      1.00         0.993    0.554       1.52
 5 mu         0.5      1.02         1.01     0.666       1.26
 6 mu         0.6      1.02         1.02     0.758       1.27
 7 mu         0.7      1.00         0.998    0.743       1.25
 8 mu         0.8      0.964        0.972    0.527       1.35
 9 mu         0.9      0.977        0.963    0.312       1.83
10 mu_1       0.1      1.00         0.836    0.0719      2.90
11 mu_1       0.2      1.06         1.01     0.485       2.34
12 mu_1       0.3      1.02         0.965    0.660       1.81
13 mu_1       0.4      1.00         0.982    0.525       1.41
14 mu_1       0.5      1.02         1.01     0.700       1.28
15 mu_1       0.6      1.02         1.01     0.779       1.26
16 mu_1       0.7      0.997        0.996    0.732       1.24
17 mu_1       0.8      0.963        0.960    0.532       1.37
18 mu_1       0.9      0.979        0.969    0.300       1.85
19 mu_0       0.1      0.979        0.760    0.0274      5.50
20 mu_0       0.2      1.07         1.02     0.359       2.49
21 mu_0       0.3      1.02         0.951    0.647       1.82
22 mu_0       0.4      1.00         0.993    0.573       1.59
23 mu_0       0.5      1.01         1.02     0.633       1.28
24 mu_0       0.6      1.02         1.02     0.726       1.31
25 mu_0       0.7      1.01         1.00     0.770       1.26
26 mu_0       0.8      0.971        0.984    0.508       1.30
27 mu_0       0.9      0.956        0.937    0.305       1.71
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.81      8.14e-12  1.58e-45    179.  
 2 mu         0.2      0.415     2.03e- 6  7.92e-31      7.84
 3 mu         0.3      0.793     1.59e- 3  2.94e-22      9.27
 4 mu         0.4      0.916     8.14e- 2  3.34e-16     12.1 
 5 mu         0.5      0.963     4.36e- 1  1.56e-11      5.62
 6 mu         0.6      1.11      7.50e- 1  1.19e-10      5.86
 7 mu         0.7      1.03      5.30e- 1  2.17e-15      5.16
 8 mu         0.8      1.03      7.04e- 2  3.84e-22      9.65
 9 mu         0.9      1.36      1.26e- 4  8.85e-34     17.1 
10 mu_1       0.1      0.925     5.02e-11  1.55e-44     87.5 
11 mu_1       0.2      0.483     7.16e- 6  3.88e-30     10.2 
12 mu_1       0.3      0.846     3.21e- 3  9.62e-22      8.02
13 mu_1       0.4      0.926     1.20e- 1  8.19e-16     12.2 
14 mu_1       0.5      0.982     5.19e- 1  3.06e-11      4.55
15 mu_1       0.6      1.12      8.04e- 1  9.66e-12      6.27
16 mu_1       0.7      1.03      4.41e- 1  1.51e-16      5.16
17 mu_1       0.8      1.05      6.24e- 2  2.34e-23     10.2 
18 mu_1       0.9      1.35      8.88e- 5  4.79e-35     17.4 
19 mu_0       0.1      1.91      3.47e-12  3.52e-47    190.  
20 mu_0       0.2      0.397     1.07e- 6  1.98e-32      8.63
21 mu_0       0.3      0.770     9.79e- 4  8.41e-24      9.81
22 mu_0       0.4      0.909     5.57e- 2  1.11e-17     12.0 
23 mu_0       0.5      0.945     3.97e- 1  6.24e-13      6.69
24 mu_0       0.6      1.09      7.82e- 1  2.83e-10      6.12
25 mu_0       0.7      1.04      5.09e- 1  6.88e-15      5.90
26 mu_0       0.8      0.978     1.33e- 1  1.83e-21      7.42
27 mu_0       0.9      1.46      4.63e- 4  8.41e-33     18.5 
[1] "Total run time was 235.568 seconds"
