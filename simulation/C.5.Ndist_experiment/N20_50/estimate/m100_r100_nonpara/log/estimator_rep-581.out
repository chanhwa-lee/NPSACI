
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3432"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 2  7  3  2  6  3  2  4  2  2  3  5  1  4  3  3  5  4  2  1  5  6  4  4  4  2 
46 48 49 50 
 4  1  3  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.01846 0.30621 0.56056 0.94574 5.00000 
[1] "event indicator table: "

   0    1 
1991 1441 
[1] "treatment indicator table: "

   0    1 
1431 2001 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1745
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1687
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 86"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 207.58 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.325 0.0497
 2 mu         0.1   0.2 0.451 0.0713
 3 mu         0.1   0.3 0.583 0.102 
 4 mu         0.1   0.4 0.598 0.0911
 5 mu         0.1   0.5 0.719 0.129 
 6 mu         0.2   0.1 0.359 0.0195
 7 mu         0.2   0.2 0.474 0.0284
 8 mu         0.2   0.3 0.546 0.0397
 9 mu         0.2   0.4 0.584 0.0368
10 mu         0.2   0.5 0.657 0.0483
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.851        0.571   0.00656      7.28
 2 mu         0.2      0.996        0.974   0.309        2.13
 3 mu         0.3      1.05         1.03    0.596        1.91
 4 mu         0.4      1.03         1.02    0.640        1.45
 5 mu         0.5      1.00         0.994   0.745        1.39
 6 mu         0.6      1.00         0.997   0.731        1.34
 7 mu         0.7      0.997        1.01    0.650        1.32
 8 mu         0.8      0.998        1.03    0.433        1.34
 9 mu         0.9      0.995        1.03    0.241        1.86
10 mu_1       0.1      0.898        0.839   0.0166       3.03
11 mu_1       0.2      1.02         1.00    0.368        1.98
12 mu_1       0.3      1.05         1.03    0.619        1.84
13 mu_1       0.4      1.02         1.01    0.627        1.42
14 mu_1       0.5      1.00         0.993   0.755        1.41
15 mu_1       0.6      1.00         0.994   0.719        1.34
16 mu_1       0.7      0.997        0.993   0.638        1.30
17 mu_1       0.8      0.998        1.02    0.428        1.35
18 mu_1       0.9      0.994        1.02    0.220        1.88
19 mu_0       0.1      0.846        0.544   0.00545      7.84
20 mu_0       0.2      0.991        0.971   0.276        2.20
21 mu_0       0.3      1.05         1.03    0.580        1.94
22 mu_0       0.4      1.03         1.02    0.649        1.48
23 mu_0       0.5      1.01         1.00    0.736        1.37
24 mu_0       0.6      1.00         0.995   0.748        1.38
25 mu_0       0.7      0.998        1.01    0.666        1.34
26 mu_0       0.8      0.998        1.02    0.450        1.34
27 mu_0       0.9      1.00         1.03    0.430        1.92
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.224     2.71e-11  4.60e-34     10.6 
 2 mu         0.2      1.40      5.13e- 6  1.78e-21     27.6 
 3 mu         0.3      1.62      2.66e- 3  2.60e-14     29.0 
 4 mu         0.4      1.20      1.03e- 1  2.08e- 9     14.4 
 5 mu         0.5      0.953     2.86e- 1  8.55e- 6      8.89
 6 mu         0.6      0.901     4.34e- 1  1.65e- 5      5.48
 7 mu         0.7      1.28      7.65e- 1  3.73e- 9     12.0 
 8 mu         0.8      1.89      1.41e- 1  1.28e-14     20.6 
 9 mu         0.9      1.37      1.56e- 4  2.15e-24     30.6 
10 mu_1       0.1      0.440     1.55e-10  3.96e-33     18.1 
11 mu_1       0.2      1.64      1.68e- 5  7.63e-21     34.5 
12 mu_1       0.3      1.54      5.20e- 3  7.46e-14     24.1 
13 mu_1       0.4      1.15      1.49e- 1  4.48e- 9     15.0 
14 mu_1       0.5      0.925     2.90e- 1  1.47e- 5      7.41
15 mu_1       0.6      0.920     3.83e- 1  5.75e- 6      5.90
16 mu_1       0.7      1.34      7.14e- 1  1.12e- 9     13.0 
17 mu_1       0.8      1.92      1.14e- 1  3.35e-15     20.4 
18 mu_1       0.9      1.32      9.93e- 5  5.00e-25     31.3 
19 mu_0       0.1      0.200     1.30e-11  7.16e-35      9.73
20 mu_0       0.2      1.34      2.20e- 6  3.11e-22     25.9 
21 mu_0       0.3      1.66      1.50e- 3  5.20e-15     31.0 
22 mu_0       0.4      1.24      6.84e- 2  4.86e-10     14.0 
23 mu_0       0.5      0.981     2.73e- 1  2.39e- 6     10.4 
24 mu_0       0.6      0.871     4.59e- 1  3.26e- 5      4.83
25 mu_0       0.7      1.16      6.62e- 1  9.84e- 9      9.81
26 mu_0       0.8      1.76      2.52e- 1  5.06e-14     21.3 
27 mu_0       0.9      1.79      6.68e- 4  1.70e-23     24.5 
[1] "Total run time was 210.96 seconds"
