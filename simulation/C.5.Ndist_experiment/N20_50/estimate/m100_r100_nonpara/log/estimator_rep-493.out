
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3473"
[1] "cluster size dist'n: "

21 22 23 24 25 26 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 
 3  3  2  9  2  4  7  3  3  4  3  4  1  5  4  6  2  2  4  5  1  4  2  2  2  5 
48 49 
 2  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0330  0.3735  0.6163  1.0000  5.0713 
[1] "event indicator table: "

   0    1 
2062 1411 
[1] "treatment indicator table: "

   0    1 
1236 2237 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1731
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1742
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 249.134 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.628 0.179 
 2 mu         0.1   0.2 0.763 0.213 
 3 mu         0.1   0.3 0.803 0.211 
 4 mu         0.1   0.4 0.852 0.209 
 5 mu         0.1   0.5 0.942 0.214 
 6 mu         0.2   0.1 0.383 0.0573
 7 mu         0.2   0.2 0.442 0.0592
 8 mu         0.2   0.3 0.477 0.0609
 9 mu         0.2   0.4 0.502 0.0631
10 mu         0.2   0.5 0.565 0.0651
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.51         0.696  0.000870     27.4 
 2 mu         0.2      1.09         1.06   0.113         3.59
 3 mu         0.3      1.04         1.06   0.295         1.83
 4 mu         0.4      1.02         1.01   0.605         1.67
 5 mu         0.5      0.994        0.992  0.708         1.31
 6 mu         0.6      0.992        1.00   0.708         1.29
 7 mu         0.7      0.990        0.975  0.757         1.34
 8 mu         0.8      0.991        1.01   0.603         1.43
 9 mu         0.9      1.01         0.985  0.411         1.76
10 mu_1       0.1      1.36         0.904  0.00270      23.9 
11 mu_1       0.2      1.05         1.08   0.164         2.50
12 mu_1       0.3      1.04         1.04   0.348         1.83
13 mu_1       0.4      1.01         1.01   0.621         1.62
14 mu_1       0.5      0.993        0.987  0.716         1.28
15 mu_1       0.6      0.993        0.998  0.699         1.31
16 mu_1       0.7      0.990        0.974  0.749         1.34
17 mu_1       0.8      0.990        1.01   0.600         1.46
18 mu_1       0.9      1.01         0.990  0.391         1.76
19 mu_0       0.1      1.52         0.668  0.000667     27.8 
20 mu_0       0.2      1.10         1.05   0.0951        4.00
21 mu_0       0.3      1.04         1.06   0.272         1.83
22 mu_0       0.4      1.02         1.02   0.595         1.70
23 mu_0       0.5      0.996        0.995  0.701         1.34
24 mu_0       0.6      0.992        0.996  0.721         1.26
25 mu_0       0.7      0.991        0.981  0.777         1.34
26 mu_0       0.8      0.992        1.02   0.613         1.35
27 mu_0       0.9      0.998        0.992  0.423         1.79
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      2.30      2.09e-14  5.10e-37    221.  
 2 mu         0.2      0.844     5.04e- 8  4.09e-25     24.4 
 3 mu         0.3      1.22      1.21e- 4  2.01e-18     22.7 
 4 mu         0.4      1.10      1.50e- 2  1.12e-13     14.3 
 5 mu         0.5      0.997     2.58e- 1  5.41e-10     11.4 
 6 mu         0.6      1.07      6.22e- 1  3.61e- 8      4.03
 7 mu         0.7      1.14      6.70e- 1  7.51e-12      6.69
 8 mu         0.8      1.26      3.74e- 1  4.48e-17      8.50
 9 mu         0.9      1.20      1.42e- 3  4.69e-26     11.5 
10 mu_1       0.1      0.921     1.35e-13  4.58e-36     71.3 
11 mu_1       0.2      0.939     1.57e- 7  2.04e-24     27.8 
12 mu_1       0.3      1.24      2.77e- 4  6.69e-18     24.7 
13 mu_1       0.4      1.04      2.62e- 2  2.81e-13     11.7 
14 mu_1       0.5      0.994     3.21e- 1  1.08e- 9     11.1 
15 mu_1       0.6      1.08      6.86e- 1  1.94e- 9      4.20
16 mu_1       0.7      1.15      6.56e- 1  3.46e-13      6.66
17 mu_1       0.8      1.27      3.09e- 1  1.81e-18      9.10
18 mu_1       0.9      1.18      1.08e- 3  1.68e-27     11.4 
19 mu_0       0.1      2.45      8.13e-15  0           238.  
20 mu_0       0.2      0.820     2.38e- 8  0            23.6 
21 mu_0       0.3      1.22      5.33e- 5  0            21.9 
22 mu_0       0.4      1.14      7.86e- 3  0            16.1 
23 mu_0       0.5      1.00      1.70e- 1  0            11.7 
24 mu_0       0.6      1.05      5.33e- 1  0             5.16
25 mu_0       0.7      1.13      5.43e- 1  0             6.76
26 mu_0       0.8      1.20      5.10e- 1  0             6.07
27 mu_0       0.9      1.36      3.82e- 3  0            13.2 
[1] "Total run time was 253.757 seconds"
