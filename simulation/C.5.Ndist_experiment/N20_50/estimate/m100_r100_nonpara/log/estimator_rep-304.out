
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3588"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 31 32 33 34 35 36 37 38 40 41 42 43 44 45 46 47 
 7  5  1  3  1  2  2  4  5  5  1  4  4  1  3  2  1  3  4  4  5  2  3  4  7  3 
48 49 50 
 5  5  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04335 0.38352 0.63416 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
2103 1485 
[1] "treatment indicator table: "

   0    1 
1297 2291 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1823
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 46"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1765
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 19"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 82"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 331.575 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.283 0.0475
 2 mu         0.1   0.2 0.343 0.0880
 3 mu         0.1   0.3 0.401 0.0774
 4 mu         0.1   0.4 0.416 0.100 
 5 mu         0.1   0.5 0.510 0.0654
 6 mu         0.2   0.1 0.336 0.0355
 7 mu         0.2   0.2 0.411 0.0633
 8 mu         0.2   0.3 0.461 0.0549
 9 mu         0.2   0.4 0.497 0.0613
10 mu         0.2   0.5 0.562 0.0479
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.912        0.555  0.000206      5.31
 2 mu         0.2      1.05         0.979  0.0682        3.10
 3 mu         0.3      0.985        0.981  0.414         1.89
 4 mu         0.4      0.955        0.980  0.405         1.38
 5 mu         0.5      0.972        0.962  0.512         1.27
 6 mu         0.6      1.00         0.994  0.705         1.50
 7 mu         0.7      1.01         0.986  0.791         1.28
 8 mu         0.8      1.02         1.01   0.684         1.30
 9 mu         0.9      1.00         0.963  0.399         1.69
10 mu_1       0.1      1.02         0.799  0.000581      4.15
11 mu_1       0.2      1.04         0.992  0.103         2.87
12 mu_1       0.3      0.974        0.974  0.416         1.71
13 mu_1       0.4      0.954        0.971  0.375         1.39
14 mu_1       0.5      0.975        0.954  0.552         1.31
15 mu_1       0.6      1.00         1.00   0.707         1.50
16 mu_1       0.7      1.01         0.986  0.801         1.29
17 mu_1       0.8      1.02         1.02   0.663         1.32
18 mu_1       0.9      1.00         0.968  0.395         1.71
19 mu_0       0.1      0.900        0.517  0.000164      5.51
20 mu_0       0.2      1.06         0.987  0.0596        3.15
21 mu_0       0.3      0.991        0.972  0.413         1.97
22 mu_0       0.4      0.956        0.978  0.424         1.41
23 mu_0       0.5      0.968        0.964  0.471         1.25
24 mu_0       0.6      0.996        0.991  0.703         1.50
25 mu_0       0.7      1.01         0.994  0.767         1.27
26 mu_0       0.8      1.02         1.01   0.715         1.29
27 mu_0       0.9      1.00         0.973  0.406         1.54
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.356     2.31e-13  6.72e-38     11.0 
 2 mu         0.2      1.37      1.45e- 7  4.15e-25     38.1 
 3 mu         0.3      1.07      1.69e- 4  1.04e-17     12.5 
 4 mu         0.4      0.916     2.65e- 2  1.54e-12     12.2 
 5 mu         0.5      0.868     2.76e- 1  1.31e- 8      5.51
 6 mu         0.6      0.979     7.09e- 1  1.45e- 5      3.64
 7 mu         0.7      1.03      5.66e- 1  2.82e- 9      5.48
 8 mu         0.8      1.04      3.04e- 1  5.27e-15      9.09
 9 mu         0.9      1.17      1.50e- 3  2.49e-25     15.9 
10 mu_1       0.1      0.697     1.45e-12  6.28e-37     21.0 
11 mu_1       0.2      1.41      4.78e- 7  1.94e-24     36.2 
12 mu_1       0.3      0.969     4.00e- 4  3.23e-17      9.60
13 mu_1       0.4      0.896     4.24e- 2  3.60e-12     12.3 
14 mu_1       0.5      0.878     2.90e- 1  2.45e- 8      5.27
15 mu_1       0.6      0.993     7.64e- 1  4.61e- 6      3.74
16 mu_1       0.7      1.03      5.73e- 1  7.67e-10      5.48
17 mu_1       0.8      1.05      2.66e- 1  1.43e-15      8.93
18 mu_1       0.9      1.17      1.07e- 3  6.01e-26     16.4 
19 mu_0       0.1      0.318     9.04e-14  4.87e-39      9.94
20 mu_0       0.2      1.35      6.71e- 8  3.38e-26     38.5 
21 mu_0       0.3      1.12      7.45e- 5  9.66e-19     14.4 
22 mu_0       0.4      0.929     1.45e- 2  1.67e-13     12.1 
23 mu_0       0.5      0.858     1.85e- 1  1.51e- 9      6.13
24 mu_0       0.6      0.956     6.25e- 1  1.07e- 6      4.23
25 mu_0       0.7      1.04      5.92e- 1  7.61e- 9      5.48
26 mu_0       0.8      1.03      3.94e- 1  2.06e-14      9.74
27 mu_0       0.9      1.22      5.42e- 3  1.95e-24     13.6 
[1] "Total run time was 336.049 seconds"
