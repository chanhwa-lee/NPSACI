
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3472"
[1] "cluster size dist'n: "

20 21 22 23 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 
 3  5  3  2  5  2  5  3  7  4  1  5  1  1  7  2  6  4  1  1  4  3  3  5  1  5 
47 48 49 50 
 4  1  2  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03788 0.35372 0.62134 1.00000 6.15809 
[1] "event indicator table: "

   0    1 
2042 1430 
[1] "treatment indicator table: "

   0    1 
1297 2175 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1766
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 22"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1706
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 96"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 184.623 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.317 0.0692
 2 mu         0.1   0.2 0.426 0.0713
 3 mu         0.1   0.3 0.525 0.101 
 4 mu         0.1   0.4 0.562 0.0979
 5 mu         0.1   0.5 0.577 0.106 
 6 mu         0.2   0.1 0.285 0.0408
 7 mu         0.2   0.2 0.385 0.0334
 8 mu         0.2   0.3 0.480 0.0563
 9 mu         0.2   0.4 0.517 0.0480
10 mu         0.2   0.5 0.541 0.0522
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.05         0.418 0.000113       7.91
 2 mu         0.2      1.06         0.947 0.0188         3.25
 3 mu         0.3      1.09         1.02  0.205          2.44
 4 mu         0.4      1.04         1.02  0.635          1.56
 5 mu         0.5      1.00         0.985 0.757          1.36
 6 mu         0.6      1.00         0.996 0.735          1.28
 7 mu         0.7      1.00         1.01  0.712          1.28
 8 mu         0.8      0.982        0.967 0.657          1.44
 9 mu         0.9      0.960        0.939 0.421          1.66
10 mu_1       0.1      1.02         0.633 0.000398       6.37
11 mu_1       0.2      1.08         0.986 0.0359         3.33
12 mu_1       0.3      1.09         1.01  0.287          2.26
13 mu_1       0.4      1.03         1.01  0.676          1.47
14 mu_1       0.5      1.00         0.984 0.764          1.34
15 mu_1       0.6      1.00         1.01  0.742          1.29
16 mu_1       0.7      0.999        1.01  0.700          1.28
17 mu_1       0.8      0.981        0.971 0.640          1.44
18 mu_1       0.9      0.960        0.937 0.396          1.70
19 mu_0       0.1      1.05         0.375 0.0000816      8.09
20 mu_0       0.2      1.05         0.982 0.0146         3.22
21 mu_0       0.3      1.10         1.04  0.170          2.52
22 mu_0       0.4      1.04         1.02  0.577          1.62
23 mu_0       0.5      1.00         0.988 0.750          1.38
24 mu_0       0.6      1.00         0.999 0.724          1.29
25 mu_0       0.7      1.00         1.00  0.740          1.31
26 mu_0       0.8      0.989        0.982 0.679          1.44
27 mu_0       0.9      0.961        0.957 0.570          1.40
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.154     3.42e-12  8.33e-36      9.24
 2 mu         0.2      0.944     2.78e- 6  2.29e-23     39.4 
 3 mu         0.3      1.37      1.84e- 3  1.67e-16     20.8 
 4 mu         0.4      1.35      9.89e- 2  3.93e-12     12.8 
 5 mu         0.5      1.27      5.37e- 1  9.70e- 9      9.06
 6 mu         0.6      1.24      9.12e- 1  5.73e- 6      7.48
 7 mu         0.7      1.04      7.98e- 1  8.78e- 6      5.03
 8 mu         0.8      1.02      1.52e- 1  8.81e-10      8.97
 9 mu         0.9      0.993     4.41e- 4  4.26e-17     15.2 
10 mu_1       0.1      0.341     1.92e-11  7.60e-35     19.1 
11 mu_1       0.2      1.13      8.89e- 6  1.04e-22     40.8 
12 mu_1       0.3      1.37      3.67e- 3  5.56e-16     14.4 
13 mu_1       0.4      1.32      1.57e- 1  9.83e-12     11.4 
14 mu_1       0.5      1.27      5.87e- 1  1.94e- 8      8.58
15 mu_1       0.6      1.23      8.35e- 1  9.55e- 6      7.61
16 mu_1       0.7      1.02      7.51e- 1  3.41e- 6      5.06
17 mu_1       0.8      1.03      1.31e- 1  3.06e-10      9.20
18 mu_1       0.9      0.985     3.15e- 4  1.32e-17     15.4 
19 mu_0       0.1      0.133     1.67e-12  0             8.15
20 mu_0       0.2      0.896     1.23e- 6  0            39.1 
21 mu_0       0.3      1.36      1.05e- 3  0            23.6 
22 mu_0       0.4      1.37      6.45e- 2  0            13.7 
23 mu_0       0.5      1.27      3.62e- 1  0             9.54
24 mu_0       0.6      1.26      7.60e- 1  0             7.30
25 mu_0       0.7      1.08      7.35e- 1  0             4.95
26 mu_0       0.8      0.993     2.77e- 1  0             8.07
27 mu_0       0.9      1.06      8.13e- 4  0            13.2 
[1] "Total run time was 187.68 seconds"
