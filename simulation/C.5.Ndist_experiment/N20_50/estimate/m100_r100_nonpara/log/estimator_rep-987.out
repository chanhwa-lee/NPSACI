
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3449"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 29 31 32 33 34 35 36 37 38 39 40 42 43 44 45 46 48 49 
 4  3  4  5  4  5  1  7  3  3  1  2  6  6  2  6  2  4  5  3  2  5  2  3  4  3 
50 
 5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.06153 0.43760 0.67715 1.00000 7.00000 
[1] "event indicator table: "

   0    1 
2107 1342 
[1] "treatment indicator table: "

   0    1 
1106 2343 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1719
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1730
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 91"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 218.649 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.581 0.143 
 2 mu         0.1   0.2 0.678 0.160 
 3 mu         0.1   0.3 0.767 0.176 
 4 mu         0.1   0.4 0.801 0.186 
 5 mu         0.1   0.5 0.841 0.198 
 6 mu         0.2   0.1 0.431 0.0810
 7 mu         0.2   0.2 0.520 0.0771
 8 mu         0.2   0.3 0.590 0.0750
 9 mu         0.2   0.4 0.617 0.0748
10 mu         0.2   0.5 0.655 0.0718
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.32         0.145 0.0000965     18.1 
 2 mu         0.2      1.10         0.829 0.0534         4.93
 3 mu         0.3      1.01         0.960 0.310          2.27
 4 mu         0.4      0.998        0.985 0.533          1.74
 5 mu         0.5      1.00         0.980 0.631          1.53
 6 mu         0.6      0.996        0.971 0.723          1.35
 7 mu         0.7      0.999        1.00  0.736          1.21
 8 mu         0.8      0.998        1.01  0.562          1.33
 9 mu         0.9      0.987        0.999 0.542          1.40
10 mu_1       0.1      1.37         0.277 0.000315      17.1 
11 mu_1       0.2      1.06         0.899 0.0947         3.41
12 mu_1       0.3      1.01         0.971 0.346          1.97
13 mu_1       0.4      1.00         0.971 0.566          1.70
14 mu_1       0.5      1.00         0.985 0.634          1.50
15 mu_1       0.6      0.997        0.970 0.740          1.35
16 mu_1       0.7      1.00         1.01  0.725          1.21
17 mu_1       0.8      0.998        1.00  0.566          1.35
18 mu_1       0.9      0.986        0.997 0.541          1.43
19 mu_0       0.1      1.32         0.128 0.0000721     18.3 
20 mu_0       0.2      1.10         0.784 0.0422         5.44
21 mu_0       0.3      1.01         0.957 0.294          2.40
22 mu_0       0.4      0.997        0.986 0.511          1.78
23 mu_0       0.5      1.00         0.989 0.628          1.57
24 mu_0       0.6      0.995        0.965 0.697          1.35
25 mu_0       0.7      0.998        0.993 0.762          1.23
26 mu_0       0.8      0.999        1.01  0.546          1.26
27 mu_0       0.9      0.994        1.02  0.551          1.42
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       1.55     1.07e-15  1.02e-39    153.  
 2 mu         0.2       1.60     4.13e- 9  1.41e-26    103.  
 3 mu         0.3       1.51     1.81e- 5  6.05e-19     38.6 
 4 mu         0.4       1.27     2.61e- 3  1.40e-13     18.8 
 5 mu         0.5       1.20     8.35e- 2  1.78e- 9     11.4 
 6 mu         0.6       1.17     4.45e- 1  3.48e- 6      9.28
 7 mu         0.7       1.19     8.90e- 1  1.37e- 6      6.71
 8 mu         0.8       1.12     8.19e- 1  5.35e-11      3.83
 9 mu         0.9       1.23     1.78e- 2  1.30e-19     12.6 
10 mu_1       0.1       1.96     7.48e-15  9.72e-39    192.  
11 mu_1       0.2       1.44     1.34e- 8  6.75e-26     64.7 
12 mu_1       0.3       1.44     4.25e- 5  1.93e-18     35.9 
13 mu_1       0.4       1.24     4.79e- 3  3.34e-13     13.9 
14 mu_1       0.5       1.19     1.13e- 1  3.41e- 9     12.4 
15 mu_1       0.6       1.17     5.35e- 1  5.54e- 6      8.35
16 mu_1       0.7       1.19     8.74e- 1  4.76e- 7      6.49
17 mu_1       0.8       1.12     9.15e- 1  1.63e-11      4.03
18 mu_1       0.9       1.24     1.42e- 2  4.03e-20     13.6 
19 mu_0       0.1       1.50     3.61e-16  4.91e-41    149.  
20 mu_0       0.2       1.64     1.76e- 9  7.68e-28    113.  
21 mu_0       0.3       1.54     7.67e- 6  3.76e-20     39.7 
22 mu_0       0.4       1.30     1.16e- 3  1.01e-14     22.1 
23 mu_0       0.5       1.21     4.75e- 2  1.55e-10     10.5 
24 mu_0       0.6       1.16     3.99e- 1  3.78e- 7     10.7 
25 mu_0       0.7       1.20     7.21e- 1  3.46e- 6      7.24
26 mu_0       0.8       1.13     8.74e- 1  2.02e-10      3.68
27 mu_0       0.9       1.18     5.52e- 2  9.37e-19     11.3 
[1] "Total run time was 222.333 seconds"
