
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3467"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 36 37 38 39 40 41 42 43 44 45 46 
 2  4  3  5  2  2  3  2  5  7  1  3  3  1  6  6  5  6  4  3  6  3  1  1  2  2 
47 48 49 50 
 2  2  3  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03622 0.34900 0.60620 1.00000 7.00000 
[1] "event indicator table: "

   0    1 
2099 1368 
[1] "treatment indicator table: "

   0    1 
1273 2194 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1706
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1761
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 84"
[1] "     Cluster: 88"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 191.761 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.282 0.0665
 2 mu         0.1   0.2 0.362 0.0832
 3 mu         0.1   0.3 0.457 0.120 
 4 mu         0.1   0.4 0.457 0.111 
 5 mu         0.1   0.5 0.453 0.103 
 6 mu         0.2   0.1 0.326 0.0480
 7 mu         0.2   0.2 0.428 0.0563
 8 mu         0.2   0.3 0.534 0.0962
 9 mu         0.2   0.4 0.553 0.0879
10 mu         0.2   0.5 0.567 0.0807
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.636       0.0596 0.0000000175      7.86
 2 mu         0.2      0.955       0.687  0.000743          4.61
 3 mu         0.3      1.02        0.984  0.0775            2.31
 4 mu         0.4      1.03        1.02   0.395             1.93
 5 mu         0.5      1.01        0.998  0.526             1.65
 6 mu         0.6      0.996       0.997  0.787             1.22
 7 mu         0.7      0.989       0.991  0.740             1.20
 8 mu         0.8      0.992       0.992  0.598             1.42
 9 mu         0.9      0.983       0.959  0.189             2.45
10 mu_1       0.1      0.750       0.141  0.0000000707      5.97
11 mu_1       0.2      0.985       0.855  0.00154           4.48
12 mu_1       0.3      1.03        1.01   0.111             2.47
13 mu_1       0.4      1.03        1.00   0.376             1.89
14 mu_1       0.5      1.01        1.01   0.566             1.57
15 mu_1       0.6      0.994       0.986  0.795             1.20
16 mu_1       0.7      0.989       0.990  0.737             1.20
17 mu_1       0.8      0.992       0.993  0.572             1.42
18 mu_1       0.9      0.983       0.962  0.174             2.51
19 mu_0       0.1      0.623       0.0510 0.0000000115      8.19
20 mu_0       0.2      0.947       0.662  0.000545          4.65
21 mu_0       0.3      1.02        0.971  0.0631            2.28
22 mu_0       0.4      1.03        1.03   0.407             1.96
23 mu_0       0.5      1.02        0.998  0.485             1.72
24 mu_0       0.6      0.999       0.990  0.775             1.25
25 mu_0       0.7      0.989       0.998  0.747             1.21
26 mu_0       0.8      0.992       0.985  0.701             1.43
27 mu_0       0.9      0.983       0.972  0.282             1.83
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.0307     1.10e-12  2.46e-37      3.02
 2 mu         0.2     0.992      9.41e- 7  2.71e-24     90.3 
 3 mu         0.3     1.70       1.11e- 3  8.88e-17     94.8 
 4 mu         0.4     1.37       6.68e- 2  1.51e-11     18.0 
 5 mu         0.5     1.25       6.68e- 1  1.33e- 7      6.49
 6 mu         0.6     1.29       1.17e+ 0  1.67e- 4      5.38
 7 mu         0.7     1.04       7.78e- 1  4.14e- 6      5.11
 8 mu         0.8     0.917      1.49e- 1  8.21e-11      5.02
 9 mu         0.9     1.53       4.28e- 4  2.48e-19     36.4 
10 mu_1       0.1     0.0772     6.09e-12  2.26e-36      7.55
11 mu_1       0.2     1.29       3.35e- 6  1.24e-23    113.  
12 mu_1       0.3     1.71       2.16e- 3  2.71e-16     79.0 
13 mu_1       0.4     1.32       1.06e- 1  3.45e-11     16.2 
14 mu_1       0.5     1.27       8.36e- 1  2.45e- 7      6.99
15 mu_1       0.6     1.27       1.19e+ 0  2.55e- 4      4.83
16 mu_1       0.7     1.01       6.93e- 1  1.48e- 6      5.39
17 mu_1       0.8     0.927      1.19e- 1  2.57e-11      5.51
18 mu_1       0.9     1.55       2.87e- 4  6.90e-20     37.1 
19 mu_0       0.1     0.0255     5.40e-13  2.28e-38      2.52
20 mu_0       0.2     0.917      3.40e- 7  2.82e-25     84.7 
21 mu_0       0.3     1.69       6.24e- 4  1.06e-17    102.  
22 mu_0       0.4     1.39       4.03e- 2  2.09e-12     20.6 
23 mu_0       0.5     1.24       5.20e- 1  2.22e- 8      5.99
24 mu_0       0.6     1.33       1.09e+ 0  3.47e- 5      6.21
25 mu_0       0.7     1.09       8.63e- 1  1.04e- 5      4.44
26 mu_0       0.8     0.877      2.77e- 1  3.08e-10      4.81
27 mu_0       0.9     1.35       1.66e- 3  1.86e-18     30.4 
[1] "Total run time was 196.58 seconds"
