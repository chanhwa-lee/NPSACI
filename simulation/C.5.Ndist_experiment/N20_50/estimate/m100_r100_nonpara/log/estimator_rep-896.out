
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3448"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 3  5  2  3  6  5  2  4  6  3  2  2  3  4  1  1  6  3  3  3  3  2  2  3  2  4 
46 47 48 49 50 
 3  1  3  3  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03809 0.34999 0.63089 1.00000 7.00000 
[1] "event indicator table: "

   0    1 
2012 1436 
[1] "treatment indicator table: "

   0    1 
1307 2141 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1663
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 36"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1785
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 192.53 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.416 0.0648
 2 mu         0.1   0.2 0.459 0.0658
 3 mu         0.1   0.3 0.492 0.0621
 4 mu         0.1   0.4 0.507 0.0610
 5 mu         0.1   0.5 0.563 0.0668
 6 mu         0.2   0.1 0.421 0.0467
 7 mu         0.2   0.2 0.472 0.0465
 8 mu         0.2   0.3 0.523 0.0449
 9 mu         0.2   0.4 0.548 0.0410
10 mu         0.2   0.5 0.607 0.0437
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.848        0.563 0.0000165      5.68
 2 mu         0.2      1.00         0.934 0.0172         3.10
 3 mu         0.3      1.05         1.02  0.263          2.49
 4 mu         0.4      1.01         0.995 0.477          1.52
 5 mu         0.5      0.987        0.991 0.669          1.57
 6 mu         0.6      0.980        0.973 0.698          1.31
 7 mu         0.7      0.983        0.991 0.571          1.32
 8 mu         0.8      1.01         0.994 0.764          1.38
 9 mu         0.9      1.06         1.03  0.412          1.95
10 mu_1       0.1      0.874        0.765 0.0000587      4.10
11 mu_1       0.2      1.03         0.938 0.0313         3.30
12 mu_1       0.3      1.04         1.02  0.342          2.17
13 mu_1       0.4      1.00         1.01  0.487          1.56
14 mu_1       0.5      0.985        0.974 0.667          1.59
15 mu_1       0.6      0.980        0.974 0.674          1.30
16 mu_1       0.7      0.985        0.991 0.568          1.32
17 mu_1       0.8      1.01         0.995 0.742          1.40
18 mu_1       0.9      1.06         1.02  0.390          1.98
19 mu_0       0.1      0.845        0.533 0.0000118      5.98
20 mu_0       0.2      0.995        0.912 0.0136         3.15
21 mu_0       0.3      1.05         1.03  0.229          2.62
22 mu_0       0.4      1.01         1.00  0.471          1.54
23 mu_0       0.5      0.988        0.994 0.655          1.55
24 mu_0       0.6      0.981        0.974 0.710          1.33
25 mu_0       0.7      0.979        0.989 0.578          1.33
26 mu_0       0.8      1.00         0.998 0.678          1.32
27 mu_0       0.9      1.04         1.02  0.562          1.62
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.406     8.17e-13  5.66e-35     23.5 
 2 mu         0.2      1.30      4.00e- 7  1.38e-22     51.3 
 3 mu         0.3      1.18      3.52e- 4  1.76e-15     14.7 
 4 mu         0.4      1.17      2.63e- 2  1.44e-10     17.1 
 5 mu         0.5      1.23      2.41e- 1  6.81e- 7     11.8 
 6 mu         0.6      1.36      7.42e- 1  9.19e- 7     11.0 
 7 mu         0.7      1.42      1.02e+ 0  3.70e-11      5.58
 8 mu         0.8      1.46      4.50e- 1  1.11e-17      7.78
 9 mu         0.9      1.26      2.25e- 3  2.92e-29     15.0 
10 mu_1       0.1      0.681     5.60e-12  5.06e-34     35.3 
11 mu_1       0.2      1.34      1.44e- 6  6.17e-22     47.1 
12 mu_1       0.3      1.19      7.21e- 4  5.25e-15     13.0 
13 mu_1       0.4      1.19      4.16e- 2  3.22e-10     18.0 
14 mu_1       0.5      1.24      2.46e- 1  1.22e- 6     11.8 
15 mu_1       0.6      1.38      7.39e- 1  2.81e- 7     10.9 
16 mu_1       0.7      1.42      1.11e+ 0  9.71e-12      5.37
17 mu_1       0.8      1.47      3.73e- 1  2.55e-18      8.36
18 mu_1       0.9      1.24      1.59e- 3  5.96e-30     15.4 
19 mu_0       0.1      0.375     2.86e-13  0            22.2 
20 mu_0       0.2      1.29      1.40e- 7  0            52.4 
21 mu_0       0.3      1.17      1.68e- 4  0            15.5 
22 mu_0       0.4      1.16      1.51e- 2  0            16.5 
23 mu_0       0.5      1.22      1.65e- 1  0            12.7 
24 mu_0       0.6      1.33      5.91e- 1  0            11.2 
25 mu_0       0.7      1.42      7.26e- 1  0             6.63
26 mu_0       0.8      1.43      7.05e- 1  0             7.46
27 mu_0       0.9      1.45      6.36e- 3  0            14.3 
[1] "Total run time was 195.466 seconds"
