
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3517"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 46 
 1  1  6  1  3  6  6  3  3  4  4  4  2  2  5  2  1  1  4  3  4  4  6  3  2  2 
47 48 49 50 
 4  6  5  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.05006 0.39214 0.64254 1.00000 7.00000 
[1] "event indicator table: "

   0    1 
2073 1444 
[1] "treatment indicator table: "

   0    1 
1283 2234 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1694
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1823
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 78"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 190.872 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.434 0.0901
 2 mu         0.1   0.2 0.523 0.0964
 3 mu         0.1   0.3 0.661 0.122 
 4 mu         0.1   0.4 0.701 0.117 
 5 mu         0.1   0.5 0.716 0.114 
 6 mu         0.2   0.1 0.390 0.0726
 7 mu         0.2   0.2 0.470 0.0702
 8 mu         0.2   0.3 0.573 0.0888
 9 mu         0.2   0.4 0.609 0.0848
10 mu         0.2   0.5 0.633 0.0824
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.959        0.714   0.00191      3.64
 2 mu         0.2      0.940        0.905   0.139        2.04
 3 mu         0.3      0.986        0.972   0.385        2.05
 4 mu         0.4      1.01         1.01    0.610        1.88
 5 mu         0.5      0.996        1.00    0.573        1.37
 6 mu         0.6      1.01         0.997   0.707        1.42
 7 mu         0.7      1.03         1.03    0.765        1.47
 8 mu         0.8      1.01         1.01    0.701        1.38
 9 mu         0.9      0.983        0.959   0.495        1.69
10 mu_1       0.1      0.986        0.852   0.00550      3.14
11 mu_1       0.2      0.943        0.924   0.199        1.93
12 mu_1       0.3      1.00         0.992   0.452        2.03
13 mu_1       0.4      1.01         1.00    0.603        1.82
14 mu_1       0.5      0.995        0.993   0.584        1.39
15 mu_1       0.6      1.01         1.00    0.711        1.46
16 mu_1       0.7      1.03         1.03    0.764        1.46
17 mu_1       0.8      1.00         1.01    0.696        1.38
18 mu_1       0.9      0.983        0.965   0.485        1.70
19 mu_0       0.1      0.956        0.679   0.00151      3.69
20 mu_0       0.2      0.940        0.911   0.125        2.09
21 mu_0       0.3      0.980        0.968   0.356        2.06
22 mu_0       0.4      1.01         1.01    0.614        1.92
23 mu_0       0.5      0.997        1.00    0.562        1.39
24 mu_0       0.6      1.00         0.997   0.692        1.38
25 mu_0       0.7      1.03         1.02    0.753        1.50
26 mu_0       0.8      1.02         1.01    0.682        1.41
27 mu_0       0.9      0.979        0.959   0.586        1.58
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.742     1.24e-13  1.96e-37     36.7 
 2 mu         0.2      1.37      1.89e- 7  2.16e-24     75.1 
 3 mu         0.3      1.10      7.81e- 4  7.07e-17     10.6 
 4 mu         0.4      1.36      5.77e- 2  1.20e-11     13.0 
 5 mu         0.5      1.19      5.35e- 1  5.55e- 8      8.77
 6 mu         0.6      1.16      3.06e- 1  2.24e- 7     11.8 
 7 mu         0.7      1.08      6.04e- 1  5.80e-12     13.2 
 8 mu         0.8      1.24      3.81e- 1  1.02e-18      6.40
 9 mu         0.9      1.70      1.78e- 3  1.19e-30     29.0 
10 mu_1       0.1      1.15      8.33e-13  1.80e-36     59.9 
11 mu_1       0.2      1.27      5.65e- 7  9.88e-24     61.3 
12 mu_1       0.3      1.15      1.56e- 3  2.16e-16      9.35
13 mu_1       0.4      1.36      6.68e- 2  2.75e-11     13.8 
14 mu_1       0.5      1.16      4.67e- 1  1.11e- 7      8.15
15 mu_1       0.6      1.16      2.82e- 1  6.10e- 8     12.0 
16 mu_1       0.7      1.07      6.10e- 1  1.35e-12     13.1 
17 mu_1       0.8      1.26      3.12e- 1  2.08e-19      6.66
18 mu_1       0.9      1.71      1.26e- 3  2.15e-31     29.5 
19 mu_0       0.1      0.697     3.44e-14  0            34.6 
20 mu_0       0.2      1.40      9.50e- 8  0            78.6 
21 mu_0       0.3      1.08      4.46e- 4  0            13.0 
22 mu_0       0.4      1.37      3.27e- 2  0            12.4 
23 mu_0       0.5      1.23      3.68e- 1  0             9.43
24 mu_0       0.6      1.17      2.57e- 1  0            11.4 
25 mu_0       0.7      1.09      3.71e- 1  0            13.4 
26 mu_0       0.8      1.16      3.25e- 1  0             6.55
27 mu_0       0.9      1.55      4.33e- 3  0            24.2 
[1] "Total run time was 194.095 seconds"
