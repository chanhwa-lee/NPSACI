
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3572"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 38 39 40 41 42 43 44 45 46 
 1  3  3  5  3  4  4  4  5  2  5  1  2  5  3  4  1  4  1  2  4  2  1  1  4  2 
47 48 49 50 
 7  7  5  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03169 0.36785 0.62314 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
2203 1369 
[1] "treatment indicator table: "

   0    1 
1205 2367 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1791
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 48"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1781
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 203.908 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.325 0.0777
 2 mu         0.1   0.2 0.449 0.113 
 3 mu         0.1   0.3 0.456 0.107 
 4 mu         0.1   0.4 0.452 0.101 
 5 mu         0.1   0.5 0.445 0.0978
 6 mu         0.2   0.1 0.407 0.0711
 7 mu         0.2   0.2 0.544 0.106 
 8 mu         0.2   0.3 0.570 0.105 
 9 mu         0.2   0.4 0.583 0.0996
10 mu         0.2   0.5 0.590 0.0977
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.773        0.140  1.19e-10     17.8 
 2 mu         0.2      1.12         0.756  2.57e- 5     13.3 
 3 mu         0.3      1.12         1.02   8.60e- 3      7.01
 4 mu         0.4      1.03         0.995  1.57e- 1      2.27
 5 mu         0.5      1.00         1.01   5.04e- 1      1.53
 6 mu         0.6      0.995        0.996  6.69e- 1      1.26
 7 mu         0.7      1.01         1.01   7.12e- 1      1.41
 8 mu         0.8      1.02         1.01   7.38e- 1      1.46
 9 mu         0.9      1.01         0.979  4.03e- 1      1.79
10 mu_1       0.1      0.918        0.287  5.68e-10     22.4 
11 mu_1       0.2      1.15         0.781  6.24e- 5     14.2 
12 mu_1       0.3      1.09         0.997  1.41e- 2      5.66
13 mu_1       0.4      1.02         1.01   1.96e- 1      1.85
14 mu_1       0.5      1.00         0.997  5.36e- 1      1.51
15 mu_1       0.6      0.995        0.993  6.82e- 1      1.27
16 mu_1       0.7      1.01         1.01   7.24e- 1      1.41
17 mu_1       0.8      1.02         1.01   7.26e- 1      1.47
18 mu_1       0.9      1.01         0.979  3.96e- 1      1.81
19 mu_0       0.1      0.757        0.120  6.86e-11     17.3 
20 mu_0       0.2      1.11         0.750  1.66e- 5     13.8 
21 mu_0       0.3      1.13         0.968  6.26e- 3      7.59
22 mu_0       0.4      1.04         1.01   1.30e- 1      2.57
23 mu_0       0.5      1.01         1.01   4.72e- 1      1.55
24 mu_0       0.6      0.995        0.993  6.38e- 1      1.31
25 mu_0       0.7      1.01         1.01   6.82e- 1      1.42
26 mu_0       0.8      1.02         1.01   7.03e- 1      1.44
27 mu_0       0.9      1.00         0.993  4.48e- 1      1.59
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      49.2      1.17e-14  1.02e-39   4914.  
 2 mu         0.2      19.1      6.01e- 8  4.47e-26   1766.  
 3 mu         0.3       3.06     6.61e- 5  1.23e-18    136.  
 4 mu         0.4       2.13     6.41e- 3  1.40e-13     31.7 
 5 mu         0.5       1.72     1.07e- 1  1.10e- 9     23.5 
 6 mu         0.6       1.03     6.25e- 1  7.32e- 8      5.96
 7 mu         0.7       1.12     7.72e- 1  5.87e-13      5.23
 8 mu         0.8       1.25     7.49e- 1  2.34e-20     13.2 
 9 mu         0.9       1.24     1.73e- 2  2.69e-33     20.7 
10 mu_1       0.1      59.1      8.36e-14  9.37e-39   5897.  
11 mu_1       0.2      12.5      2.12e- 7  2.06e-25   1059.  
12 mu_1       0.3       2.66     1.55e- 4  4.01e-18    122.  
13 mu_1       0.4       2.10     1.21e- 2  3.42e-13     26.7 
14 mu_1       0.5       1.63     1.51e- 1  2.14e- 9     21.1 
15 mu_1       0.6       1.01     5.96e- 1  1.46e- 8      5.32
16 mu_1       0.7       1.15     7.64e- 1  1.01e-13      5.34
17 mu_1       0.8       1.24     6.89e- 1  3.51e-21     13.4 
18 mu_1       0.9       1.25     1.31e- 2  3.59e-34     22.2 
19 mu_0       0.1      48.1      4.96e-15  9.05e-41   4805.  
20 mu_0       0.2      20.7      2.02e- 8  2.53e-27   1942.  
21 mu_0       0.3       3.24     2.58e- 5  4.19e-20    143.  
22 mu_0       0.4       2.14     2.62e- 3  5.56e-15     38.6 
23 mu_0       0.5       1.81     6.66e- 2  5.23e-11     25.9 
24 mu_0       0.6       1.06     4.48e- 1  9.22e- 8      6.91
25 mu_0       0.7       1.08     7.67e- 1  1.72e-12      4.98
26 mu_0       0.8       1.29     7.71e- 1  1.03e-19     12.4 
27 mu_0       0.9       1.12     5.80e- 2  2.37e-32      9.75
[1] "Total run time was 207.216 seconds"
