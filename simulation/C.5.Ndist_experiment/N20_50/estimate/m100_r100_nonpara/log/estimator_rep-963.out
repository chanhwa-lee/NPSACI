
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3395"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 2  4  4  6  8  2  5  2  2  2  5  5  2  2  1  3  4  4  3  2  3  1  4  4  2  2 
46 47 48 49 50 
 2  4  5  2  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03694 0.35235 0.61113 1.00000 5.24198 
[1] "event indicator table: "

   0    1 
2004 1391 
[1] "treatment indicator table: "

   0    1 
1255 2140 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1706
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1689
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 40"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 240.07 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.523 0.148 
 2 mu         0.1   0.2 0.641 0.178 
 3 mu         0.1   0.3 0.723 0.200 
 4 mu         0.1   0.4 0.784 0.220 
 5 mu         0.1   0.5 0.802 0.228 
 6 mu         0.2   0.1 0.378 0.0422
 7 mu         0.2   0.2 0.454 0.0489
 8 mu         0.2   0.3 0.492 0.0579
 9 mu         0.2   0.4 0.539 0.0582
10 mu         0.2   0.5 0.570 0.0422
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      1.23         0.385 0.00000318     38.9 
 2 mu         0.2      0.935        0.876 0.00494         2.94
 3 mu         0.3      0.953        0.969 0.115           1.89
 4 mu         0.4      0.979        0.961 0.495           1.84
 5 mu         0.5      0.998        0.978 0.691           1.50
 6 mu         0.6      1.00         1.01  0.778           1.33
 7 mu         0.7      0.994        0.992 0.730           1.36
 8 mu         0.8      0.995        0.989 0.633           1.34
 9 mu         0.9      0.981        1.00  0.187           1.51
10 mu_1       0.1      1.04         0.586 0.0000125      15.9 
11 mu_1       0.2      0.938        0.910 0.00994         2.75
12 mu_1       0.3      0.959        0.929 0.161           1.87
13 mu_1       0.4      0.982        0.975 0.570           1.78
14 mu_1       0.5      1.00         0.990 0.695           1.50
15 mu_1       0.6      1.00         1.02  0.748           1.33
16 mu_1       0.7      0.994        0.989 0.744           1.36
17 mu_1       0.8      0.996        0.990 0.605           1.36
18 mu_1       0.9      0.979        1.01  0.172           1.53
19 mu_0       0.1      1.25         0.364 0.00000214     41.4 
20 mu_0       0.2      0.935        0.873 0.00369         2.98
21 mu_0       0.3      0.951        0.969 0.0948          1.92
22 mu_0       0.4      0.976        0.957 0.439           1.87
23 mu_0       0.5      0.997        0.974 0.687           1.49
24 mu_0       0.6      1.01         1.00  0.772           1.34
25 mu_0       0.7      0.994        0.994 0.696           1.36
26 mu_0       0.8      0.991        0.996 0.740           1.28
27 mu_0       0.9      1.00         1.03  0.321           1.56
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1    203.        1.31e-13  5.33e-35  20152.  
 2 mu         0.2      7.25      1.55e- 7  4.11e-23    322.  
 3 mu         0.3      2.00      3.35e- 4  3.05e-16     66.8 
 4 mu         0.4      1.21      1.67e- 2  1.91e-11     22.7 
 5 mu         0.5      0.998     2.13e- 1  8.31e- 8     10.3 
 6 mu         0.6      0.907     3.90e- 1  4.40e-10      5.77
 7 mu         0.7      1.10      9.85e- 1  3.87e-15      4.06
 8 mu         0.8      1.49      6.63e- 1  2.66e-22     13.1 
 9 mu         0.9      1.50      6.08e- 3  1.36e-34     69.2 
10 mu_1       0.1     50.3       8.53e-13  4.96e-34   4798.  
11 mu_1       0.2      4.22      5.49e- 7  1.91e-22    202.  
12 mu_1       0.3      1.73      7.73e- 4  9.45e-16     50.0 
13 mu_1       0.4      1.18      2.90e- 2  4.44e-11     20.5 
14 mu_1       0.5      0.980     2.17e- 1  1.55e- 7     10.7 
15 mu_1       0.6      0.909     3.91e- 1  1.74e-11      5.01
16 mu_1       0.7      1.13      1.03e+ 0  1.32e-16      4.26
17 mu_1       0.8      1.52      5.53e- 1  7.93e-24     15.6 
18 mu_1       0.9      1.52      4.48e- 3  3.61e-36     73.2 
19 mu_0       0.1    220.        5.04e-14  4.13e-36  21858.  
20 mu_0       0.2      8.01      6.20e- 8  3.59e-24    393.  
21 mu_0       0.3      2.12      1.47e- 4  3.04e-17     74.0 
22 mu_0       0.4      1.24      8.51e- 3  2.22e-12     24.2 
23 mu_0       0.5      1.02      1.30e- 1  1.16e- 8      9.82
24 mu_0       0.6      0.904     2.64e- 1  1.07e- 9      6.92
25 mu_0       0.7      1.03      8.04e- 1  1.26e-14      3.81
26 mu_0       0.8      1.39      7.99e- 1  1.30e-21      5.78
27 mu_0       0.9      1.32      1.90e- 2  1.33e-33     33.0 
[1] "Total run time was 245.116 seconds"
