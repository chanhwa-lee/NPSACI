
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3536"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 4  2  4  3  3  6  3  2  1  4  1  5  4  4  3  1  4  1  2  1  7  5  1  2  5  1 
46 47 48 49 50 
 7  3  4  2  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.01393 0.27503 0.55984 0.93908 5.28940 
[1] "event indicator table: "

   0    1 
2027 1509 
[1] "treatment indicator table: "

   0    1 
1438 2098 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1696
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1840
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 196.523 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.450 0.0529
 2 mu         0.1   0.2 0.496 0.0569
 3 mu         0.1   0.3 0.575 0.0719
 4 mu         0.1   0.4 0.632 0.0999
 5 mu         0.1   0.5 0.678 0.0808
 6 mu         0.2   0.1 0.407 0.0520
 7 mu         0.2   0.2 0.468 0.0509
 8 mu         0.2   0.3 0.524 0.0509
 9 mu         0.2   0.4 0.584 0.0543
10 mu         0.2   0.5 0.625 0.0471
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.973        0.844   0.00290      3.55
 2 mu         0.2      0.998        0.954   0.199        1.95
 3 mu         0.3      1.02         1.03    0.501        1.55
 4 mu         0.4      1.00         0.999   0.666        1.45
 5 mu         0.5      1.00         0.992   0.669        1.27
 6 mu         0.6      0.998        0.989   0.703        1.25
 7 mu         0.7      0.998        1.00    0.696        1.27
 8 mu         0.8      1.00         0.991   0.673        1.37
 9 mu         0.9      1.03         0.987   0.363        1.74
10 mu_1       0.1      0.959        0.972   0.00739      2.60
11 mu_1       0.2      1.01         0.963   0.238        1.92
12 mu_1       0.3      1.02         1.03    0.512        1.53
13 mu_1       0.4      1.00         0.984   0.696        1.40
14 mu_1       0.5      1.00         1.00    0.680        1.27
15 mu_1       0.6      0.998        0.992   0.708        1.27
16 mu_1       0.7      0.999        0.996   0.693        1.28
17 mu_1       0.8      1.01         0.988   0.662        1.40
18 mu_1       0.9      1.03         0.988   0.355        1.76
19 mu_0       0.1      0.975        0.835   0.00240      3.73
20 mu_0       0.2      0.996        0.952   0.175        1.95
21 mu_0       0.3      1.02         1.03    0.497        1.59
22 mu_0       0.4      1.00         0.997   0.647        1.47
23 mu_0       0.5      0.999        0.993   0.658        1.27
24 mu_0       0.6      0.997        1.01    0.696        1.26
25 mu_0       0.7      0.997        0.996   0.704        1.28
26 mu_0       0.8      1.00         1.00    0.696        1.32
27 mu_0       0.9      1.01         0.973   0.441        1.62
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.603     1.21e-11  2.65e-34     33.8 
 2 mu         0.2      1.01      3.02e- 6  3.23e-22     20.6 
 3 mu         0.3      0.876     1.73e- 3  2.75e-15      7.06
 4 mu         0.4      0.844     7.94e- 2  1.68e-10      5.35
 5 mu         0.5      0.925     2.70e- 1  4.83e- 7      6.37
 6 mu         0.6      1.04      6.54e- 1  1.95e- 7      5.66
 7 mu         0.7      1.10      7.69e- 1  1.37e-11      4.33
 8 mu         0.8      0.975     2.32e- 1  1.06e-17      5.21
 9 mu         0.9      1.15      6.95e- 4  9.36e-29     12.5 
10 mu_1       0.1      0.843     7.11e-11  2.36e-33     37.5 
11 mu_1       0.2      0.993     9.69e- 6  1.44e-21     19.3 
12 mu_1       0.3      0.867     3.74e- 3  8.16e-15      7.17
13 mu_1       0.4      0.833     8.49e- 2  3.75e-10      5.61
14 mu_1       0.5      0.941     3.35e- 1  9.13e- 7      6.37
15 mu_1       0.6      1.07      7.26e- 1  4.35e- 8      5.79
16 mu_1       0.7      1.09      7.06e- 1  3.11e-12      4.04
17 mu_1       0.8      0.975     1.86e- 1  2.12e-18      5.69
18 mu_1       0.9      1.15      5.16e- 4  1.95e-29     13.4 
19 mu_0       0.1      0.577     5.68e-12  3.20e-35     33.3 
20 mu_0       0.2      1.01      1.32e- 6  4.39e-23     20.9 
21 mu_0       0.3      0.880     8.68e- 4  4.27e-16      7.15
22 mu_0       0.4      0.852     5.33e- 2  3.05e-11      5.57
23 mu_0       0.5      0.909     2.33e- 1  5.37e- 8      6.37
24 mu_0       0.6      1.01      5.31e- 1  4.11e- 7      5.47
25 mu_0       0.7      1.11      6.33e- 1  3.84e-11      5.01
26 mu_0       0.8      0.976     3.92e- 1  4.48e-17      4.68
27 mu_0       0.9      1.14      2.56e- 3  7.61e-28     12.5 
[1] "Total run time was 199.772 seconds"
