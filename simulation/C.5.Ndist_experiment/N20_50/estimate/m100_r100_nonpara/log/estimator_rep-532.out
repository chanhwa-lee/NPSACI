
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3475"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 43 44 45 46 
 5  5  3  2  4  2  2  3  5  1  4  4  5  6  2  3  3  1  1  3  3  3  2  5  6  2 
47 48 49 50 
 3  7  3  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03896 0.36702 0.61576 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
2072 1403 
[1] "treatment indicator table: "

   0    1 
1228 2247 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1790
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1685
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 176.876 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.388 0.134
 2 mu         0.1   0.2 0.474 0.157
 3 mu         0.1   0.3 0.565 0.176
 4 mu         0.1   0.4 0.580 0.187
 5 mu         0.1   0.5 0.620 0.197
 6 mu         0.2   0.1 0.372 0.125
 7 mu         0.2   0.2 0.475 0.142
 8 mu         0.2   0.3 0.563 0.158
 9 mu         0.2   0.4 0.601 0.169
10 mu         0.2   0.5 0.636 0.177
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1      0.943        0.203 0.0000000131      31.6 
 2 mu         0.2      1.09         0.798 0.000382          29.1 
 3 mu         0.3      1.10         0.979 0.0377             7.79
 4 mu         0.4      1.11         1.02  0.358              3.49
 5 mu         0.5      1.04         1.02  0.664              1.52
 6 mu         0.6      0.991        0.976 0.650              1.36
 7 mu         0.7      0.977        0.977 0.720              1.18
 8 mu         0.8      0.997        1.00  0.642              1.39
 9 mu         0.9      1.00         1.02  0.385              1.91
10 mu_1       0.1      1.14         0.393 0.0000000557      45.2 
11 mu_1       0.2      1.07         0.939 0.000822          21.1 
12 mu_1       0.3      1.13         1.01  0.0562             7.36
13 mu_1       0.4      1.10         1.01  0.431              2.90
14 mu_1       0.5      1.03         1.02  0.635              1.53
15 mu_1       0.6      0.985        0.972 0.659              1.32
16 mu_1       0.7      0.978        0.976 0.730              1.19
17 mu_1       0.8      0.999        1.00  0.631              1.42
18 mu_1       0.9      1.00         1.01  0.366              1.95
19 mu_0       0.1      0.921        0.182 0.00000000838     30.1 
20 mu_0       0.2      1.10         0.795 0.000272          31.2 
21 mu_0       0.3      1.09         0.971 0.0298             7.97
22 mu_0       0.4      1.11         1.01  0.309              3.88
23 mu_0       0.5      1.05         1.02  0.674              1.57
24 mu_0       0.6      0.999        0.992 0.637              1.42
25 mu_0       0.7      0.974        0.977 0.695              1.19
26 mu_0       0.8      0.991        0.993 0.675              1.35
27 mu_0       0.9      1.00         1.03  0.479              1.65
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      5.02      2.13e-13  8.60e-37    248.  
 2 mu         0.2     15.7       1.41e- 7  9.45e-24    526.  
 3 mu         0.3     13.7       1.21e- 4  3.10e-16    523.  
 4 mu         0.4      4.31      1.15e- 2  5.26e-11    107.  
 5 mu         0.5      1.56      2.36e- 1  2.82e- 7     14.9 
 6 mu         0.6      0.998     5.72e- 1  8.20e- 5      4.64
 7 mu         0.7      1.08      6.99e- 1  1.01e- 6      5.10
 8 mu         0.8      1.35      4.57e- 1  5.92e-12     15.8 
 9 mu         0.9      2.63      4.57e- 3  1.59e-21    127.  
10 mu_1       0.1      9.16      1.47e-12  7.89e-36    431.  
11 mu_1       0.2     16.9       4.93e- 7  4.33e-23    607.  
12 mu_1       0.3     11.2       2.76e- 4  9.48e-16    472.  
13 mu_1       0.4      3.25      1.87e- 2  1.21e-10     67.7 
14 mu_1       0.5      1.39      2.66e- 1  5.23e- 7     11.3 
15 mu_1       0.6      0.973     5.00e- 1  1.37e- 4      4.52
16 mu_1       0.7      1.10      6.33e- 1  4.00e- 7      4.86
17 mu_1       0.8      1.37      5.06e- 1  2.05e-12     16.4 
18 mu_1       0.9      2.69      3.61e- 3  4.90e-22    130.  
19 mu_0       0.1      4.56      7.38e-14  0           228.  
20 mu_0       0.2     15.4       5.52e- 8  0           506.  
21 mu_0       0.3     14.8       4.96e- 5  0           545.  
22 mu_0       0.4      5.02      6.33e- 3  0           137.  
23 mu_0       0.5      1.72      1.63e- 1  0            18.6 
24 mu_0       0.6      1.04      5.27e- 1  0             4.93
25 mu_0       0.7      1.04      5.70e- 1  0             5.67
26 mu_0       0.8      1.28      5.31e- 1  0            13.1 
27 mu_0       0.9      2.14      1.28e- 2  0           106.  
[1] "Total run time was 180.007 seconds"
