
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3405"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 3  4  3  3  6  1  2  3  5  2  8  6  4  2  3  2  2  2  3  2  4  4  6  5  1  2 
46 47 48 49 50 
 3  3  3  2  1 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03127 0.33088 0.62127 1.00000 5.86134 
[1] "event indicator table: "

   0    1 
2008 1397 
[1] "treatment indicator table: "

   0    1 
1308 2097 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1677
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1728
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 67"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 253.68 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.399 0.0617
 2 mu         0.1   0.2 0.483 0.0799
 3 mu         0.1   0.3 0.579 0.0931
 4 mu         0.1   0.4 0.622 0.101 
 5 mu         0.1   0.5 0.634 0.0955
 6 mu         0.2   0.1 0.369 0.0271
 7 mu         0.2   0.2 0.447 0.0414
 8 mu         0.2   0.3 0.527 0.0508
 9 mu         0.2   0.4 0.567 0.0588
10 mu         0.2   0.5 0.597 0.0533
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.01         0.436  0.000451      7.07
 2 mu         0.2      1.02         0.967  0.0559        2.70
 3 mu         0.3      1.03         1.05   0.370         2.05
 4 mu         0.4      1.03         1.01   0.578         1.72
 5 mu         0.5      1.01         0.991  0.509         1.45
 6 mu         0.6      1.02         1.02   0.611         1.36
 7 mu         0.7      1.02         1.01   0.757         1.44
 8 mu         0.8      0.990        0.965  0.549         1.55
 9 mu         0.9      0.958        0.936  0.0729        1.78
10 mu_1       0.1      1.05         0.626  0.00145       6.14
11 mu_1       0.2      1.02         1.00   0.0955        2.31
12 mu_1       0.3      1.03         1.05   0.467         2.08
13 mu_1       0.4      1.02         0.980  0.608         1.62
14 mu_1       0.5      1.01         0.995  0.480         1.42
15 mu_1       0.6      1.02         1.01   0.648         1.34
16 mu_1       0.7      1.02         1.01   0.746         1.46
17 mu_1       0.8      0.988        0.962  0.529         1.58
18 mu_1       0.9      0.957        0.944  0.0656        1.78
19 mu_0       0.1      1.01         0.401  0.000338      7.20
20 mu_0       0.2      1.02         0.956  0.0460        2.88
21 mu_0       0.3      1.03         1.02   0.328         2.04
22 mu_0       0.4      1.03         1.03   0.558         1.79
23 mu_0       0.5      1.01         0.988  0.538         1.47
24 mu_0       0.6      1.02         1.01   0.556         1.38
25 mu_0       0.7      1.02         1.02   0.777         1.38
26 mu_0       0.8      0.998        0.994  0.625         1.44
27 mu_0       0.9      0.969        0.947  0.139         1.98
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      2.10      3.74e-12  3.30e-38     99.6 
 2 mu         0.2      2.65      4.87e- 6  6.44e-26    103.  
 3 mu         0.3      1.65      2.42e- 3  9.35e-19     21.2 
 4 mu         0.4      1.50      1.13e- 1  1.06e-13     16.0 
 5 mu         0.5      1.30      5.10e- 1  8.32e-10      8.97
 6 mu         0.6      1.04      7.09e- 1  1.17e- 6      4.90
 7 mu         0.7      0.863     5.06e- 1  2.34e-10      7.87
 8 mu         0.8      1.10      8.15e- 2  3.59e-16      7.10
 9 mu         0.9      2.11      2.72e- 4  2.12e-26     34.2 
10 mu_1       0.1      3.01      2.02e-11  3.22e-37    146.  
11 mu_1       0.2      2.34      1.38e- 5  3.14e-25     75.6 
12 mu_1       0.3      1.56      5.33e- 3  3.04e-18     19.8 
13 mu_1       0.4      1.47      1.40e- 1  2.59e-13     13.9 
14 mu_1       0.5      1.27      5.09e- 1  1.63e- 9      8.97
15 mu_1       0.6      1.01      5.59e- 1  5.35e- 7      4.49
16 mu_1       0.7      0.859     4.00e- 1  4.90e-11      8.25
17 mu_1       0.8      1.14      7.05e- 2  6.56e-17      7.48
18 mu_1       0.9      2.14      1.81e- 4  3.44e-27     35.6 
19 mu_0       0.1      2.00      1.91e-12  8.72e-40     94.5 
20 mu_0       0.2      2.72      2.64e- 6  1.92e-27    110.  
21 mu_0       0.3      1.68      1.18e- 3  3.18e-20     23.5 
22 mu_0       0.4      1.52      7.04e- 2  4.22e-15     17.4 
23 mu_0       0.5      1.33      4.82e- 1  3.96e-11      8.97
24 mu_0       0.6      1.09      6.86e- 1  6.99e- 8      5.84
25 mu_0       0.7      0.873     4.41e- 1  6.67e-10      7.00
26 mu_0       0.8      0.956     1.75e- 1  1.53e-15      7.73
27 mu_0       0.9      1.86      1.09e- 3  1.81e-25     25.1 
[1] "Total run time was 258.444 seconds"
