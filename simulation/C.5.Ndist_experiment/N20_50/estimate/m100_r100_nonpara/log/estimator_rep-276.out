
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3460"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 2  5  9  3  3  4  1  1  2  4  3  5  3  1  3  4  4  3  4  2  2  2  5  2  3  2 
46 47 48 49 50 
 1  5  3  5  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03636 0.35657 0.59476 1.00000 5.52600 
[1] "event indicator table: "

   0    1 
2059 1401 
[1] "treatment indicator table: "

   0    1 
1297 2163 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1735
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1725
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 47"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 194.07 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.397 0.0793
 2 mu         0.1   0.2 0.505 0.105 
 3 mu         0.1   0.3 0.544 0.113 
 4 mu         0.1   0.4 0.575 0.127 
 5 mu         0.1   0.5 0.588 0.130 
 6 mu         0.2   0.1 0.389 0.0638
 7 mu         0.2   0.2 0.482 0.0845
 8 mu         0.2   0.3 0.548 0.0845
 9 mu         0.2   0.4 0.587 0.0921
10 mu         0.2   0.5 0.630 0.0782
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      1.03         0.505 0.0000000206     10.3 
 2 mu         0.2      1.13         0.994 0.000786          3.56
 3 mu         0.3      1.01         0.975 0.0770            1.97
 4 mu         0.4      0.965        0.954 0.413             1.85
 5 mu         0.5      0.977        0.989 0.556             1.40
 6 mu         0.6      1.01         1.03  0.774             1.27
 7 mu         0.7      1.04         1.02  0.778             1.36
 8 mu         0.8      1.03         1.02  0.717             1.40
 9 mu         0.9      1.01         1.01  0.273             1.84
10 mu_1       0.1      1.12         0.785 0.0000000827     11.2 
11 mu_1       0.2      1.12         0.980 0.00161           3.39
12 mu_1       0.3      0.993        0.953 0.109             1.87
13 mu_1       0.4      0.965        0.952 0.456             1.79
14 mu_1       0.5      0.980        0.993 0.572             1.36
15 mu_1       0.6      1.01         1.03  0.790             1.25
16 mu_1       0.7      1.04         1.02  0.783             1.34
17 mu_1       0.8      1.03         1.02  0.706             1.40
18 mu_1       0.9      1.01         1.02  0.258             1.92
19 mu_0       0.1      1.02         0.448 0.0000000137     10.9 
20 mu_0       0.2      1.13         0.988 0.000579          3.78
21 mu_0       0.3      1.02         0.967 0.0631            2.01
22 mu_0       0.4      0.965        0.947 0.383             1.89
23 mu_0       0.5      0.973        0.983 0.541             1.45
24 mu_0       0.6      1.00         1.01  0.750             1.29
25 mu_0       0.7      1.04         1.02  0.767             1.40
26 mu_0       0.8      1.03         1.03  0.711             1.39
27 mu_0       0.9      1.01         1.02  0.408             1.73
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.0922     4.56e-12  7.29e-37      4.23
 2 mu         0.2     1.24       2.35e- 6  7.12e-24     31.0 
 3 mu         0.3     1.81       1.52e- 3  2.04e-16     37.2 
 4 mu         0.4     1.39       6.10e- 2  2.97e-11     11.0 
 5 mu         0.5     1.23       2.42e- 1  2.19e- 7     10.4 
 6 mu         0.6     0.914      4.21e- 1  1.03e- 4      6.26
 7 mu         0.7     0.880      6.15e- 1  3.36e- 8      4.80
 8 mu         0.8     1.45       3.21e- 1  5.82e-14     10.5 
 9 mu         0.9     1.82       3.21e- 3  1.96e-24     24.6 
10 mu_1       0.1     0.221      2.80e-11  6.54e-36     10.1 
11 mu_1       0.2     1.57       7.56e- 6  3.19e-23     35.4 
12 mu_1       0.3     1.75       3.15e- 3  6.11e-16     32.3 
13 mu_1       0.4     1.36       9.87e- 2  6.67e-11     12.3 
14 mu_1       0.5     1.20       2.68e- 1  3.94e- 7      9.32
15 mu_1       0.6     0.878      4.40e- 1  4.11e- 5      5.76
16 mu_1       0.7     0.898      6.66e- 1  1.25e- 8      5.04
17 mu_1       0.8     1.50       2.60e- 1  1.89e-14     10.9 
18 mu_1       0.9     1.81       2.42e- 3  5.66e-25     25.6 
19 mu_0       0.1     0.0779     2.18e-12  0             3.58
20 mu_0       0.2     1.16       1.05e- 6  0            29.9 
21 mu_0       0.3     1.84       7.84e- 4  0            39.2 
22 mu_0       0.4     1.41       3.59e- 2  0            12.1 
23 mu_0       0.5     1.26       2.68e- 1  0            11.5 
24 mu_0       0.6     0.969      2.88e- 1  0             7.00
25 mu_0       0.7     0.839      4.86e- 1  0             4.25
26 mu_0       0.8     1.25       4.87e- 1  0             8.76
27 mu_0       0.9     1.88       6.64e- 3  0            16.4 
[1] "Total run time was 198.315 seconds"
