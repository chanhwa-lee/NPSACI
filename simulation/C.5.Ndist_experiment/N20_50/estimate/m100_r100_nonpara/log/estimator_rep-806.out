
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3629"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 41 42 43 44 45 46 
 4  1  5  1  5  4  1  1  3  2  5  5  2  3  3  1  3  7  3  3  2  3  3  1  2  4 
47 48 49 50 
 5  2  9  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0358  0.3597  0.6273  1.0000  6.5287 
[1] "event indicator table: "

   0    1 
2180 1449 
[1] "treatment indicator table: "

   0    1 
1249 2380 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1798
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1831
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 44"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 77"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 240.189 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.374 0.0813
 2 mu         0.1   0.2 0.418 0.0825
 3 mu         0.1   0.3 0.419 0.0792
 4 mu         0.1   0.4 0.469 0.0879
 5 mu         0.1   0.5 0.477 0.0931
 6 mu         0.2   0.1 0.369 0.0596
 7 mu         0.2   0.2 0.422 0.0544
 8 mu         0.2   0.3 0.432 0.0430
 9 mu         0.2   0.4 0.488 0.0487
10 mu         0.2   0.5 0.502 0.0489
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      0.785        0.134 0.000000670      8.56
 2 mu         0.2      0.876        0.717 0.00373          5.82
 3 mu         0.3      0.955        0.971 0.151            2.34
 4 mu         0.4      0.978        0.947 0.415            1.68
 5 mu         0.5      0.986        0.975 0.539            1.47
 6 mu         0.6      1.01         0.995 0.675            1.33
 7 mu         0.7      1.01         0.996 0.654            1.34
 8 mu         0.8      1.01         0.995 0.735            1.58
 9 mu         0.9      1.02         1.02  0.555            1.70
10 mu_1       0.1      0.890        0.271 0.00000278      10.7 
11 mu_1       0.2      0.885        0.802 0.00786          3.71
12 mu_1       0.3      0.966        0.954 0.184            2.28
13 mu_1       0.4      0.978        0.949 0.462            1.63
14 mu_1       0.5      0.988        0.985 0.553            1.49
15 mu_1       0.6      1.01         1.00  0.675            1.33
16 mu_1       0.7      1.01         0.997 0.671            1.35
17 mu_1       0.8      1.01         0.992 0.731            1.60
18 mu_1       0.9      1.02         1.01  0.539            1.71
19 mu_0       0.1      0.773        0.120 0.000000435      8.32
20 mu_0       0.2      0.874        0.704 0.00270          6.35
21 mu_0       0.3      0.950        0.969 0.127            2.37
22 mu_0       0.4      0.979        0.935 0.384            1.71
23 mu_0       0.5      0.984        0.971 0.525            1.46
24 mu_0       0.6      1.00         0.996 0.628            1.32
25 mu_0       0.7      1.01         0.999 0.613            1.32
26 mu_0       0.8      1.01         0.997 0.749            1.52
27 mu_0       0.9      1.02         1.01  0.614            1.63
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       1.31     7.65e-15  1.05e-40    129.  
 2 mu         0.2       2.13     3.16e- 8  5.18e-27    175.  
 3 mu         0.3       2.04     1.42e- 4  4.37e-19     53.5 
 4 mu         0.4       2.49     1.64e- 2  1.54e-13     35.4 
 5 mu         0.5       1.66     2.73e- 1  2.55e- 9     12.1 
 6 mu         0.6       1.27     6.07e- 1  5.74e- 6     12.2 
 7 mu         0.7       1.23     8.54e- 1  1.43e- 6      8.04
 8 mu         0.8       1.20     4.93e- 1  5.59e-11      6.06
 9 mu         0.9       1.09     4.44e- 3  6.01e-19     16.8 
10 mu_1       0.1       2.10     5.16e-14  9.84e-40    207.  
11 mu_1       0.2       1.97     1.07e- 7  2.43e-26    140.  
12 mu_1       0.3       2.06     3.07e- 4  1.37e-18     39.8 
13 mu_1       0.4       2.42     2.86e- 2  3.61e-13     33.6 
14 mu_1       0.5       1.56     3.43e- 1  4.79e- 9     13.3 
15 mu_1       0.6       1.27     6.64e- 1  8.98e- 6     11.2 
16 mu_1       0.7       1.23     8.36e- 1  4.98e- 7      8.24
17 mu_1       0.8       1.20     4.74e- 1  1.70e-11      6.27
18 mu_1       0.9       1.08     3.31e- 3  1.63e-19     17.2 
19 mu_0       0.1       1.22     2.53e-15  7.13e-42    121.  
20 mu_0       0.2       2.17     1.38e- 8  3.96e-28    183.  
21 mu_0       0.3       2.03     7.05e- 5  3.82e-20     64.2 
22 mu_0       0.4       2.54     8.27e- 3  1.57e-14     36.6 
23 mu_0       0.5       1.77     2.09e- 1  3.13e-10     13.0 
24 mu_0       0.6       1.28     5.25e- 1  8.78e- 7     13.7 
25 mu_0       0.7       1.24     6.97e- 1  3.61e- 6      7.57
26 mu_0       0.8       1.21     5.91e- 1  2.12e-10      6.58
27 mu_0       0.9       1.17     1.49e- 2  4.55e-18     13.8 
[1] "Total run time was 245.002 seconds"
