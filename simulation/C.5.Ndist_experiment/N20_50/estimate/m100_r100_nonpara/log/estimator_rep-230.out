
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3611"
[1] "cluster size dist'n: "

20 21 22 23 24 26 27 28 29 30 31 32 33 34 35 36 37 38 40 41 42 43 44 45 46 47 
 4  3  3  5  3  3  2  2  4  2  2  2  1  4  3  4  4  4  7  2  6  7  2  2  2  5 
48 49 50 
 6  1  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02991 0.32153 0.60402 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
2198 1413 
[1] "treatment indicator table: "

   0    1 
1307 2304 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1797
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1814
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 36"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 231.189 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.345 0.0849
 2 mu         0.1   0.2 0.460 0.115 
 3 mu         0.1   0.3 0.525 0.127 
 4 mu         0.1   0.4 0.562 0.127 
 5 mu         0.1   0.5 0.588 0.128 
 6 mu         0.2   0.1 0.398 0.0566
 7 mu         0.2   0.2 0.487 0.0566
 8 mu         0.2   0.3 0.544 0.0549
 9 mu         0.2   0.4 0.593 0.0510
10 mu         0.2   0.5 0.638 0.0518
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      0.884        0.205 0.00000155     13.2 
 2 mu         0.2      1.02         0.928 0.00544         3.05
 3 mu         0.3      1.02         0.999 0.150           1.84
 4 mu         0.4      1.00         0.995 0.433           1.68
 5 mu         0.5      1.01         0.991 0.647           1.47
 6 mu         0.6      1.01         1.02  0.772           1.31
 7 mu         0.7      1.01         1.00  0.742           1.25
 8 mu         0.8      1.01         0.994 0.703           1.52
 9 mu         0.9      0.994        1.00  0.281           1.57
10 mu_1       0.1      0.942        0.385 0.00000585      8.27
11 mu_1       0.2      1.03         0.894 0.0104          2.74
12 mu_1       0.3      1.01         1.01  0.202           1.82
13 mu_1       0.4      1.00         0.987 0.433           1.70
14 mu_1       0.5      1.01         0.998 0.690           1.41
15 mu_1       0.6      1.01         1.02  0.780           1.31
16 mu_1       0.7      1.01         1.00  0.722           1.26
17 mu_1       0.8      1.01         0.996 0.694           1.52
18 mu_1       0.9      0.993        0.996 0.270           1.58
19 mu_0       0.1      0.878        0.183 0.00000108     13.7 
20 mu_0       0.2      1.01         0.945 0.00419         3.24
21 mu_0       0.3      1.02         1.01  0.128           1.93
22 mu_0       0.4      1.00         1.00  0.432           1.70
23 mu_0       0.5      1.00         0.987 0.604           1.53
24 mu_0       0.6      1.01         1.01  0.750           1.33
25 mu_0       0.7      1.01         1.01  0.786           1.26
26 mu_0       0.8      1.00         1.01  0.705           1.54
27 mu_0       0.9      0.998        1.02  0.376           1.49
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.0292     2.79e-13  9.77e-43      1.26
 2 mu         0.2     0.566      5.53e- 7  6.11e-29     25.7 
 3 mu         0.3     0.921      4.15e- 4  6.73e-21     18.1 
 4 mu         0.4     0.985      5.16e- 2  3.23e-15      6.25
 5 mu         0.5     1.10       5.59e- 1  7.71e-11      7.42
 6 mu         0.6     1.06       7.36e- 1  2.71e- 7      4.20
 7 mu         0.7     0.928      7.54e- 1  6.23e- 8      4.57
 8 mu         0.8     1.02       1.62e- 1  3.66e-13      9.49
 9 mu         0.9     0.886      3.91e- 4  1.38e-22      9.95
10 mu_1       0.1     0.0732     1.59e-12  9.56e-42      3.06
11 mu_1       0.2     0.734      1.91e- 6  2.99e-28     29.9 
12 mu_1       0.3     0.948      9.00e- 4  2.20e-20     14.0 
13 mu_1       0.4     0.994      7.96e- 2  7.89e-15      6.09
14 mu_1       0.5     1.10       6.99e- 1  1.51e-10      7.42
15 mu_1       0.6     1.06       7.89e- 1  4.42e- 7      4.48
16 mu_1       0.7     0.916      7.37e- 1  2.07e- 8      4.30
17 mu_1       0.8     1.03       1.25e- 1  1.06e-13      9.49
18 mu_1       0.9     0.874      2.59e- 4  3.57e-23      9.74
19 mu_0       0.1     0.0244     1.33e-13  2.31e-44      1.06
20 mu_0       0.2     0.524      2.13e- 7  1.63e-30     24.7 
21 mu_0       0.3     0.910      2.15e- 4  2.05e-22     19.8 
22 mu_0       0.4     0.979      3.20e- 2  1.14e-16      6.73
23 mu_0       0.5     1.09       4.55e- 1  3.28e-12      7.42
24 mu_0       0.6     1.07       6.46e- 1  1.44e- 8      4.40
25 mu_0       0.7     0.957      7.16e- 1  1.59e- 7      5.22
26 mu_0       0.8     0.978      2.97e- 1  1.40e-12      9.49
27 mu_0       0.9     0.994      1.59e- 3  1.06e-21     11.8 
[1] "Total run time was 234.73 seconds"
