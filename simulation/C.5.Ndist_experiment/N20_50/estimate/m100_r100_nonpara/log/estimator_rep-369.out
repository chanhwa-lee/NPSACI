
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3319"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 3  3  6  3  4  7  2  7  1  4  4  6  3  1  2  5  4  4  1  4  2  3  3  1  2  2 
46 47 48 49 50 
 1  3  5  2  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.01984 0.29025 0.56507 0.92810 5.31434 
[1] "event indicator table: "

   0    1 
1926 1393 
[1] "treatment indicator table: "

   0    1 
1342 1977 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1614
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 6"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1705
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 22"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 188.56 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.458 0.138 
 2 mu         0.1   0.2 0.564 0.172 
 3 mu         0.1   0.3 0.591 0.188 
 4 mu         0.1   0.4 0.626 0.204 
 5 mu         0.1   0.5 0.665 0.215 
 6 mu         0.2   0.1 0.424 0.0542
 7 mu         0.2   0.2 0.529 0.0616
 8 mu         0.2   0.3 0.565 0.0706
 9 mu         0.2   0.4 0.606 0.0739
10 mu         0.2   0.5 0.640 0.0784
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      1.12         0.600 0.0000114      33.1 
 2 mu         0.2      1.14         0.889 0.0121          9.96
 3 mu         0.3      1.02         0.976 0.199           2.62
 4 mu         0.4      1.01         0.978 0.517           1.65
 5 mu         0.5      1.01         1.01  0.753           1.43
 6 mu         0.6      1.00         0.995 0.826           1.24
 7 mu         0.7      0.996        1.00  0.704           1.22
 8 mu         0.8      0.999        0.988 0.656           1.42
 9 mu         0.9      1.02         0.915 0.265           3.04
10 mu_1       0.1      1.19         0.722 0.0000392      24.3 
11 mu_1       0.2      1.12         0.923 0.0225          7.69
12 mu_1       0.3      1.01         0.957 0.246           2.35
13 mu_1       0.4      1.01         0.993 0.558           1.53
14 mu_1       0.5      1.01         1.01  0.771           1.42
15 mu_1       0.6      1.00         0.989 0.829           1.24
16 mu_1       0.7      0.996        0.996 0.696           1.23
17 mu_1       0.8      0.999        0.989 0.664           1.45
18 mu_1       0.9      1.02         0.908 0.247           3.11
19 mu_0       0.1      1.11         0.567 0.00000833     34.1 
20 mu_0       0.2      1.15         0.878 0.00951        10.5 
21 mu_0       0.3      1.02         0.976 0.168           2.80
22 mu_0       0.4      1.01         0.969 0.490           1.73
23 mu_0       0.5      1.01         1.01  0.735           1.43
24 mu_0       0.6      1.01         1.00  0.816           1.25
25 mu_0       0.7      0.996        1.00  0.723           1.22
26 mu_0       0.8      0.997        0.995 0.626           1.34
27 mu_0       0.9      1.02         0.971 0.428           2.44
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       6.25     4.22e-11  1.37e-32    339.  
 2 mu         0.2       8.72     5.39e- 6  4.39e-21    361.  
 3 mu         0.3       3.45     3.55e- 3  1.45e-14     84.8 
 4 mu         0.4       1.38     1.25e- 1  5.10e-10     17.8 
 5 mu         0.5       1.12     6.33e- 1  1.42e- 6      6.30
 6 mu         0.6       1.04     8.36e- 1  1.09e- 6      4.34
 7 mu         0.7       1.04     8.17e- 1  3.30e-11      4.04
 8 mu         0.8       1.27     1.01e- 1  6.62e-18     17.5 
 9 mu         0.9       1.60     2.44e- 4  8.70e-30     57.0 
10 mu_1       0.1       9.51     2.98e-10  1.19e-31    502.  
11 mu_1       0.2       7.31     1.81e- 5  2.04e-20    268.  
12 mu_1       0.3       2.53     7.34e- 3  4.47e-14     62.3 
13 mu_1       0.4       1.22     1.59e- 1  1.18e- 9     13.2 
14 mu_1       0.5       1.10     5.77e- 1  2.63e- 6      6.10
15 mu_1       0.6       1.03     7.97e- 1  3.28e- 7      4.40
16 mu_1       0.7       1.04     7.17e- 1  8.49e-12      4.13
17 mu_1       0.8       1.29     7.32e- 2  1.49e-18     19.1 
18 mu_1       0.9       1.60     1.63e- 4  1.74e-30     58.7 
19 mu_0       0.1       5.88     1.70e-11  0           321.  
20 mu_0       0.2       9.07     2.20e- 6  0           385.  
21 mu_0       0.3       3.85     1.97e- 3  0           103.  
22 mu_0       0.4       1.49     1.01e- 1  0            20.8 
23 mu_0       0.5       1.14     5.74e- 1  0             6.54
24 mu_0       0.6       1.05     7.34e- 1  0             4.24
25 mu_0       0.7       1.02     7.20e- 1  0             4.19
26 mu_0       0.8       1.22     2.05e- 1  0            11.2 
27 mu_0       0.9       1.55     9.90e- 4  0            43.6 
[1] "Total run time was 191.635 seconds"
