
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3563"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 29 30 31 32 33 34 35 36 37 39 40 41 42 43 44 45 46 47 
 4  5  5  1  3  3  1  4  2  2  5  3  1  6  7  3  3  3  5  3  2  2  3  2  3  3 
48 49 50 
 6  5  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03541 0.35502 0.60840 1.00000 4.92328 
[1] "event indicator table: "

   0    1 
2083 1480 
[1] "treatment indicator table: "

   0    1 
1362 2201 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1779
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1784
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 233.035 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.501 0.0723
 2 mu         0.1   0.2 0.704 0.132 
 3 mu         0.1   0.3 0.800 0.147 
 4 mu         0.1   0.4 0.832 0.137 
 5 mu         0.1   0.5 0.835 0.129 
 6 mu         0.2   0.1 0.400 0.0424
 7 mu         0.2   0.2 0.563 0.101 
 8 mu         0.2   0.3 0.638 0.106 
 9 mu         0.2   0.4 0.674 0.0944
10 mu         0.2   0.5 0.675 0.0831
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.15         0.536   0.00306      7.54
 2 mu         0.2      0.993        0.936   0.165        2.50
 3 mu         0.3      1.01         0.976   0.358        1.88
 4 mu         0.4      0.993        0.982   0.498        1.48
 5 mu         0.5      0.996        0.986   0.643        1.61
 6 mu         0.6      1.00         1.01    0.750        1.33
 7 mu         0.7      0.985        0.979   0.743        1.39
 8 mu         0.8      0.989        0.984   0.658        1.39
 9 mu         0.9      0.975        0.980   0.325        1.73
10 mu_1       0.1      1.06         0.779   0.00740      5.86
11 mu_1       0.2      0.989        0.929   0.226        2.53
12 mu_1       0.3      1.01         0.980   0.424        1.88
13 mu_1       0.4      0.991        0.986   0.506        1.48
14 mu_1       0.5      0.998        0.984   0.669        1.63
15 mu_1       0.6      1.00         1.00    0.742        1.28
16 mu_1       0.7      0.984        0.982   0.731        1.38
17 mu_1       0.8      0.988        0.976   0.636        1.41
18 mu_1       0.9      0.975        0.968   0.319        1.73
19 mu_0       0.1      1.16         0.514   0.00258      7.73
20 mu_0       0.2      0.994        0.942   0.149        2.49
21 mu_0       0.3      1.01         0.976   0.330        1.88
22 mu_0       0.4      0.995        0.983   0.493        1.48
23 mu_0       0.5      0.994        0.976   0.617        1.59
24 mu_0       0.6      1.01         1.00    0.760        1.41
25 mu_0       0.7      0.988        0.991   0.745        1.41
26 mu_0       0.8      0.990        0.981   0.681        1.42
27 mu_0       0.9      0.971        0.958   0.377        1.67
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.694     2.04e-13  7.94e-41     62.7 
 2 mu         0.2      1.83      8.55e- 7  2.21e-27    114.  
 3 mu         0.3      1.54      1.52e- 3  1.42e-19     18.2 
 4 mu         0.4      1.78      8.99e- 2  4.37e-14     20.1 
 5 mu         0.5      1.54      5.13e- 1  6.97e-10     10.7 
 6 mu         0.6      1.25      8.62e- 1  1.70e- 7      6.99
 7 mu         0.7      1.21      5.53e- 1  3.30e-12      9.97
 8 mu         0.8      1.11      1.16e- 1  3.86e-19     10.3 
 9 mu         0.9      1.24      5.88e- 4  2.25e-31     16.0 
10 mu_1       0.1      1.16      1.29e-12  7.60e-40    100.  
11 mu_1       0.2      1.82      2.48e- 6  1.06e-26     91.2 
12 mu_1       0.3      1.61      2.88e- 3  4.53e-19     16.6 
13 mu_1       0.4      1.77      1.10e- 1  1.05e-13     20.1 
14 mu_1       0.5      1.48      6.83e- 1  1.33e- 9     10.3 
15 mu_1       0.6      1.24      8.60e- 1  4.54e- 8      6.83
16 mu_1       0.7      1.21      4.78e- 1  7.55e-13      9.79
17 mu_1       0.8      1.11      8.44e- 2  7.73e-20     10.5 
18 mu_1       0.9      1.27      3.81e- 4  4.01e-32     16.9 
19 mu_0       0.1      0.642     8.34e-14  0            58.5 
20 mu_0       0.2      1.83      3.26e- 7  0           120.  
21 mu_0       0.3      1.51      9.20e- 4  0            20.2 
22 mu_0       0.4      1.79      5.89e- 2  0            20.1 
23 mu_0       0.5      1.60      4.90e- 1  0            11.9 
24 mu_0       0.6      1.28      8.38e- 1  0             7.68
25 mu_0       0.7      1.21      4.71e- 1  0            10.4 
26 mu_0       0.8      1.15      1.27e- 1  0             9.48
27 mu_0       0.9      0.952     1.61e- 3  0             9.11
[1] "Total run time was 236.741 seconds"
