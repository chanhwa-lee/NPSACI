
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3489"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 30 31 33 34 35 36 37 38 39 40 41 42 44 45 47 48 49 
 1  3  7  5  3  3  2  3  4  4  4  5  3  4  2  6  4  1  6  2  5  4  4  4  7  3 
50 
 1 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03097 0.34847 0.61260 1.00000 5.44689 
[1] "event indicator table: "

   0    1 
2045 1444 
[1] "treatment indicator table: "

   0    1 
1377 2112 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1698
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 23"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 50"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 73"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1791
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 83"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 222.829 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.525 0.135 
 2 mu         0.1   0.2 0.555 0.102 
 3 mu         0.1   0.3 0.557 0.0896
 4 mu         0.1   0.4 0.577 0.0841
 5 mu         0.1   0.5 0.592 0.0863
 6 mu         0.2   0.1 0.450 0.0772
 7 mu         0.2   0.2 0.504 0.0529
 8 mu         0.2   0.3 0.521 0.0432
 9 mu         0.2   0.4 0.562 0.0418
10 mu         0.2   0.5 0.585 0.0391
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.01         0.716 0.0000248     11.2 
 2 mu         0.2      1.05         1.02  0.0109         2.90
 3 mu         0.3      1.03         1.01  0.146          2.26
 4 mu         0.4      1.01         0.992 0.402          1.67
 5 mu         0.5      0.982        0.973 0.647          1.43
 6 mu         0.6      0.971        0.970 0.731          1.36
 7 mu         0.7      0.975        0.970 0.657          1.36
 8 mu         0.8      1.01         1.01  0.516          1.54
 9 mu         0.9      1.03         1.01  0.147          2.36
10 mu_1       0.1      1.05         0.855 0.0000910      7.23
11 mu_1       0.2      1.05         1.05  0.0207         3.18
12 mu_1       0.3      1.03         1.03  0.200          1.96
13 mu_1       0.4      1.01         0.995 0.438          1.63
14 mu_1       0.5      0.980        0.979 0.609          1.45
15 mu_1       0.6      0.970        0.975 0.726          1.34
16 mu_1       0.7      0.977        0.971 0.644          1.36
17 mu_1       0.8      1.02         1.02  0.515          1.57
18 mu_1       0.9      1.03         1.01  0.132          2.43
19 mu_0       0.1      1.00         0.678 0.0000174     11.6 
20 mu_0       0.2      1.05         1.01  0.00841        2.93
21 mu_0       0.3      1.03         1.03  0.123          2.39
22 mu_0       0.4      1.01         1.00  0.379          1.69
23 mu_0       0.5      0.984        0.976 0.644          1.41
24 mu_0       0.6      0.972        0.969 0.690          1.41
25 mu_0       0.7      0.971        0.964 0.687          1.34
26 mu_0       0.8      1.00         1.00  0.521          1.46
27 mu_0       0.9      1.03         1.01  0.280          1.77
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      5.16      1.54e-11  1.02e-32    459.  
 2 mu         0.2      2.04      1.70e- 6  9.84e-21     54.3 
 3 mu         0.3      1.45      1.13e- 3  6.41e-14     27.6 
 4 mu         0.4      1.20      8.82e- 2  1.99e- 9     11.1 
 5 mu         0.5      0.971     2.25e- 1  3.70e- 6      5.26
 6 mu         0.6      1.10      4.33e- 1  9.72e- 6      8.41
 7 mu         0.7      1.29      7.56e- 1  1.14e- 8     10.7 
 8 mu         0.8      1.42      2.34e- 1  2.11e-13      9.60
 9 mu         0.9      1.03      5.25e- 4  4.48e-22     16.5 
10 mu_1       0.1      2.85      1.17e-10  8.72e-32    184.  
11 mu_1       0.2      1.66      5.28e- 6  4.20e-20     40.0 
12 mu_1       0.3      1.32      2.28e- 3  1.82e-13     20.9 
13 mu_1       0.4      1.14      8.74e- 2  4.50e- 9     10.4 
14 mu_1       0.5      0.976     2.73e- 1  6.68e- 6      5.26
15 mu_1       0.6      1.12      4.27e- 1  6.48e- 7      8.49
16 mu_1       0.7      1.30      7.54e- 1  6.50e-10     10.8 
17 mu_1       0.8      1.43      1.88e- 1  3.86e-14      9.80
18 mu_1       0.9      1.01      3.90e- 4  9.41e-23     16.5 
19 mu_0       0.1      5.42      4.18e-12  0           489.  
20 mu_0       0.2      2.13      7.96e- 7  0            65.2 
21 mu_0       0.3      1.51      5.37e- 4  0            30.5 
22 mu_0       0.4      1.25      6.31e- 2  0            11.5 
23 mu_0       0.5      0.966     1.69e- 1  0             5.26
24 mu_0       0.6      1.06      4.12e- 1  0             8.28
25 mu_0       0.7      1.26      6.97e- 1  0            10.4 
26 mu_0       0.8      1.41      3.71e- 1  0             9.85
27 mu_0       0.9      1.15      1.63e- 3  0            16.1 
[1] "Total run time was 226.401 seconds"
