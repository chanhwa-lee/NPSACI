
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3405"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 40 41 42 43 44 45 47 
 3  2  4  4  2  5  4  9  1  4  6  2  3  3  2  3  2  2  6  4  1  4  8  2  3  1 
48 49 50 
 2  4  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02665 0.33295 0.59740 1.00000 5.00000 
[1] "event indicator table: "

   0    1 
2064 1341 
[1] "treatment indicator table: "

   0    1 
1300 2105 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1742
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1663
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 15"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 42"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 96"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 274.525 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.468 0.0881
 2 mu         0.1   0.2 0.572 0.100 
 3 mu         0.1   0.3 0.663 0.129 
 4 mu         0.1   0.4 0.680 0.125 
 5 mu         0.1   0.5 0.704 0.119 
 6 mu         0.2   0.1 0.352 0.0392
 7 mu         0.2   0.2 0.447 0.0436
 8 mu         0.2   0.3 0.499 0.0483
 9 mu         0.2   0.4 0.522 0.0472
10 mu         0.2   0.5 0.545 0.0411
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.15         0.692 0.0000312     12.1 
 2 mu         0.2      0.990        0.878 0.0309         3.86
 3 mu         0.3      0.972        0.957 0.389          2.12
 4 mu         0.4      0.992        1.01  0.509          1.37
 5 mu         0.5      1.00         0.997 0.656          1.64
 6 mu         0.6      0.998        1.00  0.725          1.35
 7 mu         0.7      1.01         0.994 0.655          1.51
 8 mu         0.8      1.00         0.980 0.523          1.45
 9 mu         0.9      0.952        0.917 0.138          2.23
10 mu_1       0.1      1.09         0.835 0.000106       9.90
11 mu_1       0.2      0.981        0.910 0.0556         2.86
12 mu_1       0.3      0.975        0.952 0.376          2.08
13 mu_1       0.4      0.996        1.01  0.504          1.38
14 mu_1       0.5      1.00         0.995 0.669          1.63
15 mu_1       0.6      0.999        1.01  0.727          1.32
16 mu_1       0.7      1.01         1.00  0.635          1.52
17 mu_1       0.8      1.00         0.986 0.523          1.46
18 mu_1       0.9      0.949        0.915 0.121          2.30
19 mu_0       0.1      1.16         0.658 0.0000229     12.8 
20 mu_0       0.2      0.993        0.852 0.0247         4.24
21 mu_0       0.3      0.971        0.958 0.395          2.14
22 mu_0       0.4      0.989        1.01  0.500          1.43
23 mu_0       0.5      1.00         0.989 0.603          1.65
24 mu_0       0.6      0.997        0.989 0.708          1.39
25 mu_0       0.7      1.01         0.992 0.680          1.48
26 mu_0       0.8      1.01         0.991 0.524          1.40
27 mu_0       0.9      0.977        0.967 0.282          1.62
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.479     2.13e-12  7.35e-41     28.2 
 2 mu         0.2      1.06      2.84e- 7  3.63e-27     29.6 
 3 mu         0.3      1.50      4.51e- 4  3.07e-19     57.6 
 4 mu         0.4      1.34      4.41e- 2  6.70e-14     16.4 
 5 mu         0.5      1.11      3.78e- 1  6.57e-10      8.99
 6 mu         0.6      0.996     4.17e- 1  1.11e- 6      9.18
 7 mu         0.7      1.02      7.98e- 1  6.90e- 9      6.22
 8 mu         0.8      1.18      2.01e- 1  1.05e-13      8.92
 9 mu         0.9      1.28      1.24e- 3  3.53e-22     41.1 
10 mu_1       0.1      0.735     1.29e-11  6.90e-40     41.4 
11 mu_1       0.2      1.13      9.93e- 7  1.71e-26     30.2 
12 mu_1       0.3      1.52      9.98e- 4  9.59e-19     54.9 
13 mu_1       0.4      1.32      6.95e- 2  1.64e-13     17.2 
14 mu_1       0.5      1.09      3.73e- 1  1.28e- 9      7.55
15 mu_1       0.6      0.991     4.61e- 1  1.81e- 6      9.12
16 mu_1       0.7      1.03      7.01e- 1  1.45e- 9      5.92
17 mu_1       0.8      1.18      1.58e- 1  1.93e-14      9.20
18 mu_1       0.9      1.31      8.19e- 4  5.77e-23     45.7 
19 mu_0       0.1      0.451     8.51e-13  0            26.7 
20 mu_0       0.2      1.04      1.11e- 7  0            31.6 
21 mu_0       0.3      1.49      2.08e- 4  0            58.8 
22 mu_0       0.4      1.35      2.68e- 2  0            17.5 
23 mu_0       0.5      1.13      2.66e- 1  0            10.4 
24 mu_0       0.6      1.00      3.92e- 1  0             9.28
25 mu_0       0.7      0.986     7.31e- 1  0             6.91
26 mu_0       0.8      1.18      3.20e- 1  0             7.81
27 mu_0       0.9      0.988     3.18e- 3  0            11.9 
[1] "Total run time was 278.533 seconds"
