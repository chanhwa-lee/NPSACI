
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3508"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 3  4  1  4  1  3  1  5  2  3  7  4  1  4  4  3  4  3  4  6  2  4  7  2  1  2 
46 47 48 49 50 
 6  3  3  2  1 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02147 0.32712 0.60393 1.00000 5.00000 
[1] "event indicator table: "

   0    1 
2127 1381 
[1] "treatment indicator table: "

   0    1 
1362 2146 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1744
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1764
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 6"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 17"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 247.852 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.455 0.0705
 2 mu         0.1   0.2 0.524 0.0752
 3 mu         0.1   0.3 0.584 0.0808
 4 mu         0.1   0.4 0.612 0.0865
 5 mu         0.1   0.5 0.653 0.0773
 6 mu         0.2   0.1 0.408 0.0458
 7 mu         0.2   0.2 0.479 0.0484
 8 mu         0.2   0.3 0.536 0.0507
 9 mu         0.2   0.4 0.568 0.0539
10 mu         0.2   0.5 0.611 0.0455
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.996        0.767   0.00372      6.74
 2 mu         0.2      1.02         0.989   0.199        2.42
 3 mu         0.3      1.01         1.00    0.580        1.48
 4 mu         0.4      1.01         1.01    0.600        1.45
 5 mu         0.5      1.01         0.989   0.707        1.34
 6 mu         0.6      1.01         1.00    0.791        1.24
 7 mu         0.7      1.01         1.02    0.786        1.30
 8 mu         0.8      0.997        0.987   0.677        1.40
 9 mu         0.9      0.989        0.960   0.432        1.65
10 mu_1       0.1      1.01         0.932   0.0106       4.37
11 mu_1       0.2      1.01         0.976   0.320        2.18
12 mu_1       0.3      1.01         1.02    0.576        1.48
13 mu_1       0.4      1.01         1.01    0.628        1.43
14 mu_1       0.5      1.01         0.992   0.698        1.34
15 mu_1       0.6      1.01         1.00    0.776        1.22
16 mu_1       0.7      1.01         1.02    0.788        1.31
17 mu_1       0.8      0.996        0.990   0.665        1.41
18 mu_1       0.9      0.989        0.962   0.417        1.66
19 mu_0       0.1      0.994        0.766   0.00295      7.00
20 mu_0       0.2      1.02         0.980   0.169        2.48
21 mu_0       0.3      1.01         0.983   0.556        1.48
22 mu_0       0.4      1.01         1.00    0.581        1.47
23 mu_0       0.5      1.01         0.996   0.699        1.37
24 mu_0       0.6      1.00         0.994   0.786        1.28
25 mu_0       0.7      1.01         1.03    0.775        1.28
26 mu_0       0.8      0.999        0.992   0.725        1.34
27 mu_0       0.9      0.987        0.957   0.566        1.52
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.0616     4.87e-12  6.09e-40      2.70
 2 mu         0.2     0.821      1.37e- 6  8.46e-27     28.3 
 3 mu         0.3     0.978      1.03e- 3  3.63e-19     13.3 
 4 mu         0.4     0.970      7.58e- 2  8.37e-14      7.81
 5 mu         0.5     1.06       3.95e- 1  1.07e- 9      7.67
 6 mu         0.6     1.06       6.74e- 1  2.08e- 6      6.05
 7 mu         0.7     1.02       7.16e- 1  1.45e- 9      5.04
 8 mu         0.8     0.964      2.57e- 1  3.31e-15      4.98
 9 mu         0.9     0.999      9.42e- 4  2.78e-25     13.4 
10 mu_1       0.1     0.135      3.20e-11  5.82e-39      5.79
11 mu_1       0.2     0.974      4.35e- 6  4.05e-26     30.4 
12 mu_1       0.3     0.976      2.32e- 3  1.16e-18      9.97
13 mu_1       0.4     0.991      1.22e- 1  2.00e-13      8.46
14 mu_1       0.5     1.06       4.15e- 1  2.04e- 9      8.14
15 mu_1       0.6     1.07       6.44e- 1  2.91e- 6      5.85
16 mu_1       0.7     1.01       7.11e- 1  4.24e-10      5.16
17 mu_1       0.8     0.967      2.03e- 1  8.47e-16      5.34
18 mu_1       0.9     0.987      7.12e- 4  6.33e-26     13.9 
19 mu_0       0.1     0.0534     1.85e-12  2.94e-41      2.36
20 mu_0       0.2     0.783      6.24e- 7  4.60e-28     27.8 
21 mu_0       0.3     0.979      4.86e- 4  2.25e-20     14.9 
22 mu_0       0.4     0.956      4.49e- 2  6.07e-15      7.37
23 mu_0       0.5     1.05       2.61e- 1  9.29e-11      7.25
24 mu_0       0.6     1.06       6.54e- 1  2.26e- 7      6.36
25 mu_0       0.7     1.04       4.84e- 1  3.85e- 9      4.75
26 mu_0       0.8     0.950      4.44e- 1  1.32e-14      4.39
27 mu_0       0.9     1.11       3.00e- 3  2.21e-24     13.4 
[1] "Total run time was 252.001 seconds"
