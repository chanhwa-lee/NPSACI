
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3438"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 5  4  2  1  2  3  5  4  5  3  4  1  3  4  5  2  3  4  2  7  3  4  2  5  4  3 
46 47 48 49 50 
 1  2  3  3  1 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04193 0.37598 0.62344 1.00000 5.00000 
[1] "event indicator table: "

   0    1 
2005 1433 
[1] "treatment indicator table: "

   0    1 
1241 2197 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1661
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1777
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 260.96 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.769 0.245 
 2 mu         0.1   0.2 0.929 0.302 
 3 mu         0.1   0.3 0.941 0.309 
 4 mu         0.1   0.4 1.00  0.337 
 5 mu         0.1   0.5 1.03  0.355 
 6 mu         0.2   0.1 0.517 0.106 
 7 mu         0.2   0.2 0.621 0.127 
 8 mu         0.2   0.3 0.627 0.108 
 9 mu         0.2   0.4 0.668 0.106 
10 mu         0.2   0.5 0.683 0.0973
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      1.57        0.0714 0.000000107      49.0 
 2 mu         0.2      1.06        0.656  0.00103          14.1 
 3 mu         0.3      1.00        0.914  0.0587            3.10
 4 mu         0.4      0.974       0.924  0.400             1.84
 5 mu         0.5      0.980       0.963  0.530             1.62
 6 mu         0.6      1.00        0.989  0.668             1.37
 7 mu         0.7      1.03        1.02   0.704             1.43
 8 mu         0.8      1.01        0.997  0.639             1.58
 9 mu         0.9      0.999       0.966  0.275             2.29
10 mu_1       0.1      1.58        0.166  0.000000457      54.5 
11 mu_1       0.2      1.02        0.772  0.00221           7.84
12 mu_1       0.3      0.999       0.921  0.0867            2.95
13 mu_1       0.4      0.973       0.934  0.451             1.85
14 mu_1       0.5      0.982       0.980  0.554             1.63
15 mu_1       0.6      1.01        0.998  0.666             1.37
16 mu_1       0.7      1.03        1.03   0.700             1.43
17 mu_1       0.8      1.01        0.994  0.618             1.62
18 mu_1       0.9      1.00        0.963  0.254             2.29
19 mu_0       0.1      1.57        0.0625 0.0000000683     48.4 
20 mu_0       0.2      1.07        0.637  0.000731         15.7 
21 mu_0       0.3      1.00        0.911  0.0467            3.17
22 mu_0       0.4      0.974       0.925  0.348             1.87
23 mu_0       0.5      0.977       0.955  0.507             1.65
24 mu_0       0.6      0.999       0.989  0.671             1.38
25 mu_0       0.7      1.03        1.02   0.714             1.41
26 mu_0       0.8      1.02        1.00   0.717             1.43
27 mu_0       0.9      0.990       0.957  0.456             2.33
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.219     2.24e-13  2.34e-35     14.1 
 2 mu         0.2      1.33      1.55e- 7  1.14e-23     59.1 
 3 mu         0.3      1.28      3.38e- 4  7.37e-17     23.8 
 4 mu         0.4      1.08      3.14e- 2  4.71e-12     21.1 
 5 mu         0.5      1.12      2.43e- 1  2.36e- 8     10.3 
 6 mu         0.6      1.23      8.04e- 1  2.31e- 5     16.5 
 7 mu         0.7      1.31      7.09e- 1  1.69e- 7     10.2 
 8 mu         0.8      1.18      5.20e- 1  3.36e-12     10.3 
 9 mu         0.9      1.20      3.94e- 3  1.43e-20     42.7 
10 mu_1       0.1      0.456     1.54e-12  2.28e-34     27.3 
11 mu_1       0.2      1.51      5.38e- 7  5.57e-23     57.4 
12 mu_1       0.3      1.21      7.83e- 4  2.39e-16     22.7 
13 mu_1       0.4      1.06      5.14e- 2  1.15e-11     18.8 
14 mu_1       0.5      1.13      3.18e- 1  4.61e- 8     10.3 
15 mu_1       0.6      1.24      7.92e- 1  3.76e- 5     17.1 
16 mu_1       0.7      1.31      7.28e- 1  4.68e- 8      9.05
17 mu_1       0.8      1.17      4.50e- 1  8.16e-13     10.5 
18 mu_1       0.9      1.22      2.85e- 3  3.08e-21     46.2 
19 mu_0       0.1      0.193     7.83e-14  6.49e-37     12.6 
20 mu_0       0.2      1.29      5.98e- 8  3.57e-25     59.5 
21 mu_0       0.3      1.31      1.74e- 4  2.63e-18     25.1 
22 mu_0       0.4      1.09      1.81e- 2  1.96e-13     22.6 
23 mu_0       0.5      1.11      2.22e- 1  1.18e- 9     10.3 
24 mu_0       0.6      1.20      7.02e- 1  1.45e- 6     15.6 
25 mu_0       0.7      1.31      8.06e- 1  4.53e- 7     12.9 
26 mu_0       0.8      1.23      6.49e- 1  1.35e-11      9.36
27 mu_0       0.9      1.01      1.26e- 2  1.15e-19     18.9 
[1] "Total run time was 265.366 seconds"
