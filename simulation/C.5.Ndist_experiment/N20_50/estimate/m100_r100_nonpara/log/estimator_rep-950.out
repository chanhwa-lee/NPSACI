
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3546"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 40 41 42 43 44 45 46 
 4  1  2  3  2  3  2  3  6  2  2  8  3  4  2  3  4  1  8  5  3  4  4  4  1  2 
47 48 49 50 
 3  4  3  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.01727 0.28588 0.56823 0.96569 5.27247 
[1] "event indicator table: "

   0    1 
2114 1432 
[1] "treatment indicator table: "

   0    1 
1360 2186 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1744
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1802
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 408.439 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.391 0.0509
 2 mu         0.1   0.2 0.495 0.0633
 3 mu         0.1   0.3 0.585 0.0943
 4 mu         0.1   0.4 0.621 0.0811
 5 mu         0.1   0.5 0.646 0.0874
 6 mu         0.2   0.1 0.322 0.0252
 7 mu         0.2   0.2 0.420 0.0284
 8 mu         0.2   0.3 0.508 0.0438
 9 mu         0.2   0.4 0.545 0.0370
10 mu         0.2   0.5 0.566 0.0392
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.06         0.695   0.00401      6.44
 2 mu         0.2      0.996        0.970   0.174        2.33
 3 mu         0.3      0.983        0.972   0.460        1.75
 4 mu         0.4      0.999        0.977   0.617        1.39
 5 mu         0.5      0.997        0.997   0.748        1.25
 6 mu         0.6      1.00         1.01    0.737        1.21
 7 mu         0.7      1.00         0.993   0.727        1.27
 8 mu         0.8      1.01         0.990   0.663        1.37
 9 mu         0.9      0.995        0.963   0.384        1.66
10 mu_1       0.1      1.05         0.853   0.0116       4.23
11 mu_1       0.2      0.988        0.964   0.267        2.18
12 mu_1       0.3      0.984        0.969   0.516        1.66
13 mu_1       0.4      0.999        0.973   0.623        1.34
14 mu_1       0.5      0.998        1.01    0.742        1.25
15 mu_1       0.6      1.00         1.00    0.728        1.21
16 mu_1       0.7      1.00         0.997   0.737        1.27
17 mu_1       0.8      1.01         0.994   0.648        1.36
18 mu_1       0.9      0.994        0.965   0.377        1.67
19 mu_0       0.1      1.06         0.669   0.00317      6.68
20 mu_0       0.2      0.999        0.953   0.151        2.41
21 mu_0       0.3      0.982        0.961   0.436        1.85
22 mu_0       0.4      0.998        0.979   0.613        1.42
23 mu_0       0.5      0.997        0.991   0.749        1.24
24 mu_0       0.6      1.00         1.01    0.750        1.23
25 mu_0       0.7      1.00         0.997   0.702        1.27
26 mu_0       0.8      1.01         1.00    0.691        1.43
27 mu_0       0.9      0.997        0.968   0.451        1.56
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.553     2.25e-12  6.03e-41     47.3 
 2 mu         0.2      1.25      3.53e- 6  9.43e-28     54.4 
 3 mu         0.3      1.04      2.60e- 3  4.62e-20     10.8 
 4 mu         0.4      1.21      9.24e- 2  1.24e-14      7.89
 5 mu         0.5      1.18      4.89e- 1  1.90e-10      4.69
 6 mu         0.6      1.07      7.64e- 1  1.08e- 7      4.57
 7 mu         0.7      1.07      8.39e- 1  3.20e-12      4.30
 8 mu         0.8      0.901     1.14e- 1  7.37e-19      5.77
 9 mu         0.9      1.01      3.06e- 4  1.53e-30     14.5 
10 mu_1       0.1      0.875     1.37e-11  5.90e-40     70.4 
11 mu_1       0.2      1.23      1.01e- 5  4.61e-27     40.5 
12 mu_1       0.3      1.09      5.79e- 3  1.51e-19      9.91
13 mu_1       0.4      1.22      1.45e- 1  3.04e-14      7.55
14 mu_1       0.5      1.17      4.78e- 1  3.72e-10      4.69
15 mu_1       0.6      1.06      7.23e- 1  2.69e- 8      4.61
16 mu_1       0.7      1.06      6.93e- 1  6.81e-13      4.30
17 mu_1       0.8      0.879     9.10e- 2  1.37e-19      6.01
18 mu_1       0.9      1.04      2.02e- 4  2.53e-31     15.1 
19 mu_0       0.1      0.518     1.06e-12  0            44.7 
20 mu_0       0.2      1.25      1.89e- 6  0            57.9 
21 mu_0       0.3      1.02      1.36e- 3  0            12.5 
22 mu_0       0.4      1.20      7.60e- 2  0             8.13
23 mu_0       0.5      1.20      3.63e- 1  0             4.69
24 mu_0       0.6      1.09      6.44e- 1  0             4.51
25 mu_0       0.7      1.07      8.95e- 1  0             4.30
26 mu_0       0.8      0.988     2.11e- 1  0             4.86
27 mu_0       0.9      0.831     1.03e- 3  0             9.50
[1] "Total run time was 413.283 seconds"
