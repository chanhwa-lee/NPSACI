
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3516"
[1] "cluster size dist'n: "

20 21 22 23 24 25 27 28 29 30 31 32 33 35 36 37 38 39 40 41 42 43 44 45 46 47 
 2  4  3  3  5  5  1  1  8  5  2  3  6  5  3  1  4  1  3  1  6  2  6  6  2  3 
48 49 50 
 3  2  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03257 0.34365 0.60981 1.00000 5.00000 
[1] "event indicator table: "

   0    1 
2010 1506 
[1] "treatment indicator table: "

   0    1 
1297 2219 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1841
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1675
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 187.977 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.457 0.118 
 2 mu         0.1   0.2 0.587 0.120 
 3 mu         0.1   0.3 0.678 0.141 
 4 mu         0.1   0.4 0.699 0.154 
 5 mu         0.1   0.5 0.702 0.162 
 6 mu         0.2   0.1 0.347 0.0645
 7 mu         0.2   0.2 0.454 0.0456
 8 mu         0.2   0.3 0.534 0.0572
 9 mu         0.2   0.4 0.566 0.0588
10 mu         0.2   0.5 0.575 0.0625
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      1.23         0.549 0.0000000509     20.9 
 2 mu         0.2      1.08         0.917 0.00107           6.96
 3 mu         0.3      1.09         1.05  0.0591            2.62
 4 mu         0.4      1.04         1.01  0.468             2.43
 5 mu         0.5      1.02         1.01  0.559             1.48
 6 mu         0.6      1.00         0.989 0.561             1.46
 7 mu         0.7      0.996        0.978 0.644             1.29
 8 mu         0.8      1.00         1.00  0.643             1.47
 9 mu         0.9      1.03         0.991 0.0234            2.48
10 mu_1       0.1      1.17         0.632 0.000000207      11.7 
11 mu_1       0.2      1.07         0.968 0.00222           5.70
12 mu_1       0.3      1.08         1.06  0.0878            2.85
13 mu_1       0.4      1.04         0.987 0.541             2.26
14 mu_1       0.5      1.02         1.00  0.544             1.48
15 mu_1       0.6      0.999        0.996 0.569             1.46
16 mu_1       0.7      0.997        0.978 0.649             1.30
17 mu_1       0.8      1.00         1.00  0.641             1.50
18 mu_1       0.9      1.03         0.989 0.0199            2.62
19 mu_0       0.1      1.24         0.533 0.0000000336     22.1 
20 mu_0       0.2      1.08         0.904 0.000780          7.27
21 mu_0       0.3      1.09         1.05  0.0468            2.87
22 mu_0       0.4      1.05         1.02  0.404             2.54
23 mu_0       0.5      1.02         1.02  0.575             1.49
24 mu_0       0.6      1.00         0.999 0.548             1.44
25 mu_0       0.7      0.996        0.986 0.633             1.32
26 mu_0       0.8      0.997        0.986 0.652             1.46
27 mu_0       0.9      1.00         0.981 0.0552            1.93
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.359     4.81e-13  5.33e-40     35.2 
 2 mu         0.2      1.70      2.84e- 7  1.30e-26    133.  
 3 mu         0.3      2.13      4.75e- 4  3.22e-19     61.6 
 4 mu         0.4      1.89      5.02e- 2  5.70e-14     51.1 
 5 mu         0.5      1.11      4.44e- 1  6.70e-10      8.81
 6 mu         0.6      0.986     6.56e- 1  1.42e- 6      4.98
 7 mu         0.7      1.11      6.45e- 1  1.47e- 5      4.58
 8 mu         0.8      1.07      2.26e- 1  1.94e- 9     16.2 
 9 mu         0.9      2.99      1.52e- 3  2.99e-17    164.  
10 mu_1       0.1      0.724     2.84e-12  4.91e-39     70.4 
11 mu_1       0.2      1.89      9.78e- 7  6.48e-26    133.  
12 mu_1       0.3      2.12      9.94e- 4  1.07e-18     59.5 
13 mu_1       0.4      1.77      7.97e- 2  1.43e-13     44.6 
14 mu_1       0.5      1.05      4.85e- 1  1.34e- 9      6.15
15 mu_1       0.6      1.00      6.87e- 1  2.36e- 6      5.09
16 mu_1       0.7      1.11      6.23e- 1  4.19e- 6      4.65
17 mu_1       0.8      1.07      1.85e- 1  4.85e-10     16.6 
18 mu_1       0.9      3.26      1.16e- 3  1.20e-17    182.  
19 mu_0       0.1      0.318     2.19e-13  0            31.3 
20 mu_0       0.2      1.66      1.10e- 7  0           133.  
21 mu_0       0.3      2.14      2.33e- 4  0            70.4 
22 mu_0       0.4      1.97      2.98e- 2  0            55.5 
23 mu_0       0.5      1.17      3.82e- 1  0            11.5 
24 mu_0       0.6      0.965     5.41e- 1  0             4.83
25 mu_0       0.7      1.11      6.28e- 1  0             4.68
26 mu_0       0.8      1.04      2.44e- 1  0            14.6 
27 mu_0       0.9      0.632     7.58e- 4  0            11.5 
[1] "Total run time was 190.842 seconds"
