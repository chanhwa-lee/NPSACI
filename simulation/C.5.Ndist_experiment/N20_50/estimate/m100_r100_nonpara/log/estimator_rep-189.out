
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3348"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 4  3  9  6  6  5  2  3  4  1  3  1  2  2  2  3  3  3  2  3  1  3  2  5  6  4 
46 47 48 49 50 
 1  2  2  2  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03813 0.33515 0.59098 0.99972 5.00000 
[1] "event indicator table: "

   0    1 
1960 1388 
[1] "treatment indicator table: "

   0    1 
1351 1997 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1686
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 41"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1662
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 359 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.340 0.0793
 2 mu         0.1   0.2 0.443 0.0935
 3 mu         0.1   0.3 0.553 0.100 
 4 mu         0.1   0.4 0.573 0.106 
 5 mu         0.1   0.5 0.608 0.118 
 6 mu         0.2   0.1 0.305 0.0380
 7 mu         0.2   0.2 0.426 0.0359
 8 mu         0.2   0.3 0.522 0.0444
 9 mu         0.2   0.4 0.542 0.0408
10 mu         0.2   0.5 0.575 0.0509
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.00         0.407  0.00107      13.5 
 2 mu         0.2      1.02         0.902  0.0489        2.74
 3 mu         0.3      0.993        0.982  0.303         1.74
 4 mu         0.4      0.991        0.993  0.630         1.39
 5 mu         0.5      1.02         1.03   0.553         1.28
 6 mu         0.6      1.01         1.01   0.774         1.34
 7 mu         0.7      0.995        0.985  0.735         1.25
 8 mu         0.8      0.989        0.980  0.525         1.37
 9 mu         0.9      1.03         1.02   0.287         1.72
10 mu_1       0.1      1.02         0.629  0.00324       5.40
11 mu_1       0.2      1.03         0.944  0.0844        2.60
12 mu_1       0.3      0.987        0.978  0.406         1.65
13 mu_1       0.4      0.996        1.00   0.644         1.37
14 mu_1       0.5      1.02         1.02   0.554         1.29
15 mu_1       0.6      1.01         1.00   0.784         1.34
16 mu_1       0.7      0.993        0.981  0.727         1.25
17 mu_1       0.8      0.989        0.981  0.515         1.40
18 mu_1       0.9      1.03         1.03   0.273         1.74
19 mu_0       0.1      1.00         0.377  0.000823     14.6 
20 mu_0       0.2      1.02         0.889  0.0400        2.88
21 mu_0       0.3      0.995        0.979  0.258         1.80
22 mu_0       0.4      0.987        0.982  0.609         1.41
23 mu_0       0.5      1.02         1.03   0.552         1.29
24 mu_0       0.6      1.02         1.02   0.732         1.35
25 mu_0       0.7      1.00         0.998  0.750         1.27
26 mu_0       0.8      0.985        0.972  0.562         1.43
27 mu_0       0.9      1.02         1.04   0.411         1.66
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.136     2.39e-10  1.14e-39      8.58
 2 mu         0.2      0.920     1.43e- 5  4.99e-26     35.6 
 3 mu         0.3      1.33      2.97e- 3  3.69e-18     15.8 
 4 mu         0.4      1.29      9.12e- 2  1.11e-12      8.78
 5 mu         0.5      0.981     4.82e- 1  1.54e- 8      5.10
 6 mu         0.6      0.900     8.33e- 1  6.80e- 6      4.57
 7 mu         0.7      1.03      5.90e- 1  9.89e-10      4.41
 8 mu         0.8      1.07      8.15e- 2  1.98e-15      7.28
 9 mu         0.9      1.14      2.96e- 4  1.48e-25     35.9 
10 mu_1       0.1      0.284     1.35e- 9  1.05e-38     16.0 
11 mu_1       0.2      1.10      4.07e- 5  2.30e-25     33.1 
12 mu_1       0.3      1.37      6.33e- 3  1.13e-17     14.4 
13 mu_1       0.4      1.24      1.49e- 1  2.56e-12      8.41
14 mu_1       0.5      0.943     6.04e- 1  2.83e- 8      4.74
15 mu_1       0.6      0.909     6.90e- 1  2.11e- 6      4.65
16 mu_1       0.7      1.04      4.84e- 1  2.63e-10      4.58
17 mu_1       0.8      1.06      5.95e- 2  4.60e-16      7.45
18 mu_1       0.9      1.15      2.00e- 4  3.05e-26     38.8 
19 mu_0       0.1      0.120     8.88e-11  1.01e-40      7.76
20 mu_0       0.2      0.875     6.66e- 6  4.99e-27     36.2 
21 mu_0       0.3      1.32      1.53e- 3  4.21e-19     16.5 
22 mu_0       0.4      1.32      5.36e- 2  1.48e-13      9.15
23 mu_0       0.5      1.02      4.49e- 1  2.46e- 9      5.45
24 mu_0       0.6      0.885     6.98e- 1  5.53e- 6      4.76
25 mu_0       0.7      0.993     7.30e- 1  2.68e- 9      4.05
26 mu_0       0.8      1.12      1.70e- 1  8.04e-15      6.62
27 mu_0       0.9      1.00      1.15e- 3  1.20e-24     20.3 
[1] "Total run time was 363.46 seconds"
