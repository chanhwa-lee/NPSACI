
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3452"
[1] "cluster size dist'n: "

20 21 22 24 25 26 27 28 29 30 31 32 33 34 35 36 37 39 40 41 42 43 44 45 46 47 
 4  5  3  3  6  4  7  2  5  2  4  4  2  3  3  2  3  2  3  4  2  3  4  2  1  3 
48 49 50 
 2  7  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02616 0.33339 0.61511 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
2045 1407 
[1] "treatment indicator table: "

   0    1 
1323 2129 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1781
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 86"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1671
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 71"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 227.365 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.384 0.0511
 2 mu         0.1   0.2 0.481 0.0570
 3 mu         0.1   0.3 0.507 0.0571
 4 mu         0.1   0.4 0.530 0.0572
 5 mu         0.1   0.5 0.534 0.0555
 6 mu         0.2   0.1 0.408 0.0424
 7 mu         0.2   0.2 0.504 0.0388
 8 mu         0.2   0.3 0.545 0.0346
 9 mu         0.2   0.4 0.578 0.0337
10 mu         0.2   0.5 0.588 0.0317
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.849        0.601  0.000617      3.64
 2 mu         0.2      1.02         1.02   0.112         2.37
 3 mu         0.3      1.02         1.00   0.413         1.91
 4 mu         0.4      1.00         0.991  0.512         1.49
 5 mu         0.5      0.992        0.982  0.599         1.31
 6 mu         0.6      0.979        0.978  0.766         1.24
 7 mu         0.7      0.993        0.988  0.726         1.28
 8 mu         0.8      1.04         1.04   0.592         1.37
 9 mu         0.9      1.02         1.01   0.451         1.80
10 mu_1       0.1      0.888        0.753  0.00183       2.90
11 mu_1       0.2      1.03         1.04   0.173         2.11
12 mu_1       0.3      1.01         1.00   0.458         1.83
13 mu_1       0.4      1.00         0.992  0.547         1.45
14 mu_1       0.5      0.990        0.986  0.591         1.30
15 mu_1       0.6      0.978        0.978  0.751         1.23
16 mu_1       0.7      0.997        0.997  0.716         1.30
17 mu_1       0.8      1.05         1.04   0.579         1.40
18 mu_1       0.9      1.02         1.01   0.428         1.80
19 mu_0       0.1      0.845        0.565  0.000482      3.73
20 mu_0       0.2      1.02         1.01   0.0962        2.43
21 mu_0       0.3      1.02         1.00   0.394         1.94
22 mu_0       0.4      1.01         0.992  0.489         1.51
23 mu_0       0.5      0.994        0.988  0.607         1.33
24 mu_0       0.6      0.980        0.980  0.750         1.25
25 mu_0       0.7      0.984        0.978  0.738         1.24
26 mu_0       0.8      1.03         1.04   0.640         1.37
27 mu_0       0.9      1.04         1.05   0.535         1.75
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.410     3.29e-12  1.03e-40     21.6 
 2 mu         0.2      1.10      8.38e- 7  5.07e-27     35.5 
 3 mu         0.3      0.943     8.74e- 4  4.27e-19     11.1 
 4 mu         0.4      1.10      7.11e- 2  1.50e-13     14.5 
 5 mu         0.5      1.06      4.78e- 1  2.50e- 9      6.34
 6 mu         0.6      1.08      7.52e- 1  5.64e- 7      5.53
 7 mu         0.7      1.05      5.14e- 1  3.96e-11      4.10
 8 mu         0.8      1.01      1.93e- 1  3.07e-17      4.96
 9 mu         0.9      1.45      5.92e- 4  5.10e-28     11.5 
10 mu_1       0.1      0.708     2.16e-11  9.62e-40     34.4 
11 mu_1       0.2      1.09      2.75e- 6  2.38e-26     28.2 
12 mu_1       0.3      0.954     1.81e- 3  1.34e-18     12.4 
13 mu_1       0.4      1.12      1.11e- 1  3.53e-13     14.8 
14 mu_1       0.5      1.06      6.07e- 1  4.69e- 9      5.18
15 mu_1       0.6      1.08      7.28e- 1  1.50e- 7      5.46
16 mu_1       0.7      1.04      5.28e- 1  8.99e-12      4.10
17 mu_1       0.8      1.03      1.48e- 1  6.11e-18      5.36
18 mu_1       0.9      1.46      4.19e- 4  9.02e-29     12.3 
19 mu_0       0.1      0.377     1.16e-12  6.97e-42     20.2 
20 mu_0       0.2      1.11      3.59e- 7  3.88e-28     37.3 
21 mu_0       0.3      0.938     4.52e- 4  3.74e-20     11.0 
22 mu_0       0.4      1.08      4.35e- 2  1.53e-14     14.3 
23 mu_0       0.5      1.07      3.57e- 1  3.06e-10      7.51
24 mu_0       0.6      1.08      6.71e- 1  8.59e- 7      5.65
25 mu_0       0.7      1.07      4.05e- 1  1.11e-10      4.10
26 mu_0       0.8      0.919     2.66e- 1  1.29e-16      4.36
27 mu_0       0.9      1.36      2.06e- 3  4.29e-27     10.2 
[1] "Total run time was 231.716 seconds"
