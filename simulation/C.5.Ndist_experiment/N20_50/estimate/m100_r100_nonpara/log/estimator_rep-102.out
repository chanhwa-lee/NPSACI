
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3535"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 
 1  3  3  3  2  1  5  6  4  2  4  6  3  3  4  3  4  2  4  2  7  5  3  2  5  3 
47 48 49 50 
 3  3  1  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02945 0.34057 0.60457 1.00000 6.19674 
[1] "event indicator table: "

   0    1 
2098 1437 
[1] "treatment indicator table: "

   0    1 
1319 2216 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1760
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1775
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 9"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 255.927 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.306 0.100 
 2 mu         0.1   0.2 0.345 0.138 
 3 mu         0.1   0.3 0.436 0.116 
 4 mu         0.1   0.4 0.472 0.116 
 5 mu         0.1   0.5 0.470 0.123 
 6 mu         0.2   0.1 0.287 0.0626
 7 mu         0.2   0.2 0.355 0.0867
 8 mu         0.2   0.3 0.461 0.0562
 9 mu         0.2   0.4 0.506 0.0506
10 mu         0.2   0.5 0.508 0.0477
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.769        0.133 0.0000364     15.9 
 2 mu         0.2      0.878        0.766 0.0242         3.85
 3 mu         0.3      0.944        0.942 0.298          2.11
 4 mu         0.4      0.985        0.991 0.484          1.70
 5 mu         0.5      0.996        0.991 0.640          1.39
 6 mu         0.6      1.00         0.999 0.810          1.20
 7 mu         0.7      1.01         1.01  0.709          1.28
 8 mu         0.8      0.994        0.973 0.642          1.41
 9 mu         0.9      0.970        0.953 0.0858         2.44
10 mu_1       0.1      0.839        0.293 0.000117      10.8 
11 mu_1       0.2      0.902        0.843 0.0410         3.19
12 mu_1       0.3      0.953        0.968 0.368          1.78
13 mu_1       0.4      0.990        0.997 0.502          1.70
14 mu_1       0.5      0.995        0.989 0.639          1.32
15 mu_1       0.6      1.00         0.994 0.838          1.22
16 mu_1       0.7      1.00         1.01  0.704          1.30
17 mu_1       0.8      0.993        0.972 0.619          1.43
18 mu_1       0.9      0.970        0.949 0.0768         2.55
19 mu_0       0.1      0.761        0.120 0.0000274     16.4 
20 mu_0       0.2      0.872        0.744 0.0200         4.02
21 mu_0       0.3      0.940        0.939 0.268          2.25
22 mu_0       0.4      0.982        0.986 0.473          1.69
23 mu_0       0.5      0.997        0.994 0.641          1.45
24 mu_0       0.6      0.998        1.00  0.770          1.20
25 mu_0       0.7      1.01         1.01  0.722          1.25
26 mu_0       0.8      0.996        0.980 0.674          1.36
27 mu_0       0.9      0.971        0.986 0.167          1.69
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      3.17      3.03e-13  3.63e-31    314.  
 2 mu         0.2      1.13      1.94e- 7  3.11e-20     58.8 
 3 mu         0.3      0.914     5.53e- 4  5.98e-14     23.0 
 4 mu         0.4      0.771     4.44e- 2  1.35e- 9      7.01
 5 mu         0.5      0.899     3.92e- 1  2.52e- 6      5.73
 6 mu         0.6      1.06      8.09e- 1  7.88e- 6      5.42
 7 mu         0.7      1.08      7.55e- 1  6.06e- 9      5.19
 8 mu         0.8      1.01      2.16e- 1  2.09e-13      5.15
 9 mu         0.9      1.15      7.27e- 4  5.27e-22     24.4 
10 mu_1       0.1      2.31      1.83e-12  3.28e-30    224.  
11 mu_1       0.2      0.931     5.73e- 7  1.41e-19     27.3 
12 mu_1       0.3      0.871     1.10e- 3  1.80e-13     19.2 
13 mu_1       0.4      0.771     6.60e- 2  3.06e- 9      6.57
14 mu_1       0.5      0.919     4.38e- 1  4.54e- 6      5.41
15 mu_1       0.6      1.07      8.97e- 1  9.39e- 7      5.42
16 mu_1       0.7      1.08      8.43e- 1  6.18e-10      4.97
17 mu_1       0.8      1.01      1.68e- 1  1.86e-14      5.93
18 mu_1       0.9      1.14      5.03e- 4  1.46e-22     25.1 
19 mu_0       0.1      3.26      1.02e-13  3.93e-32    324.  
20 mu_0       0.2      1.19      9.99e- 8  3.80e-21     68.2 
21 mu_0       0.3      0.932     3.20e- 4  8.34e-15     24.6 
22 mu_0       0.4      0.770     2.36e- 2  2.20e-10      7.33
23 mu_0       0.5      0.879     2.70e- 1  4.04e- 7      6.05
24 mu_0       0.6      1.05      7.08e- 1  1.83e- 5      5.42
25 mu_0       0.7      1.09      7.48e- 1  1.87e- 8      5.77
26 mu_0       0.8      0.997     3.80e- 1  9.70e-13      4.31
27 mu_0       0.9      1.20      2.55e- 3  3.95e-21     19.8 
[1] "Total run time was 260.726 seconds"
