
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3440"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 38 39 40 41 42 43 44 45 46 
 4  3  6  5  1  2  4  4  3  2  3  4  5  2  7  6  1  1  2  2  4  2  4  1  6  3 
47 48 49 50 
 3  4  3  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04607 0.37522 0.62648 1.00000 7.27501 
[1] "event indicator table: "

   0    1 
2048 1392 
[1] "treatment indicator table: "

   0    1 
1297 2143 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1675
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 62"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1765
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 206.186 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.261 0.0951
 2 mu         0.1   0.2 0.435 0.0800
 3 mu         0.1   0.3 0.504 0.0593
 4 mu         0.1   0.4 0.519 0.0612
 5 mu         0.1   0.5 0.577 0.0510
 6 mu         0.2   0.1 0.240 0.0576
 7 mu         0.2   0.2 0.391 0.0582
 8 mu         0.2   0.3 0.455 0.0391
 9 mu         0.2   0.4 0.474 0.0345
10 mu         0.2   0.5 0.514 0.0253
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.00         0.779   0.00568      4.45
 2 mu         0.2      0.982        0.985   0.302        2.10
 3 mu         0.3      1.01         1.01    0.549        1.71
 4 mu         0.4      1.01         1.01    0.649        1.85
 5 mu         0.5      0.993        0.998   0.623        1.39
 6 mu         0.6      0.989        0.999   0.694        1.21
 7 mu         0.7      0.993        1.01    0.694        1.24
 8 mu         0.8      0.989        0.978   0.680        1.30
 9 mu         0.9      1.02         0.998   0.469        1.74
10 mu_1       0.1      0.968        0.891   0.0127       3.95
11 mu_1       0.2      0.984        0.949   0.381        1.90
12 mu_1       0.3      1.01         1.02    0.591        1.77
13 mu_1       0.4      1.01         1.00    0.652        1.81
14 mu_1       0.5      0.992        0.993   0.618        1.35
15 mu_1       0.6      0.989        0.999   0.696        1.23
16 mu_1       0.7      0.993        1.01    0.691        1.25
17 mu_1       0.8      0.990        0.983   0.661        1.32
18 mu_1       0.9      1.02         0.996   0.457        1.76
19 mu_0       0.1      1.01         0.751   0.00490      4.50
20 mu_0       0.2      0.982        0.983   0.274        2.15
21 mu_0       0.3      1.01         1.00    0.531        1.76
22 mu_0       0.4      1.01         1.01    0.647        1.87
23 mu_0       0.5      0.994        1.00    0.628        1.43
24 mu_0       0.6      0.988        0.995   0.687        1.21
25 mu_0       0.7      0.992        0.996   0.703        1.26
26 mu_0       0.8      0.985        0.975   0.708        1.31
27 mu_0       0.9      1.00         1.01    0.579        1.54
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.350     8.08e-12  1.17e-36     19.9 
 2 mu         0.2      0.808     6.70e- 6  3.60e-24     41.8 
 3 mu         0.3      0.839     5.89e- 3  6.00e-17     10.3 
 4 mu         0.4      1.17      2.13e- 1  6.68e-12     14.4 
 5 mu         0.5      1.50      1.04e+ 0  4.55e- 8      7.42
 6 mu         0.6      1.35      1.26e+ 0  4.93e- 5      6.33
 7 mu         0.7      0.977     2.73e- 1  3.41e- 8      5.64
 8 mu         0.8      0.907     4.38e- 2  2.46e-13      7.98
 9 mu         0.9      1.83      9.56e- 5  1.86e-23     19.2 
10 mu_1       0.1      0.580     5.09e-11  1.09e-35     34.1 
11 mu_1       0.2      0.814     1.82e- 5  1.68e-23     35.8 
12 mu_1       0.3      0.879     1.18e- 2  1.87e-16     10.2 
13 mu_1       0.4      1.25      2.93e- 1  1.56e-11     13.6 
14 mu_1       0.5      1.51      9.41e- 1  8.49e- 8      7.19
15 mu_1       0.6      1.30      1.00e+ 0  1.62e- 5      6.24
16 mu_1       0.7      0.948     2.50e- 1  8.35e- 9      5.66
17 mu_1       0.8      0.925     3.01e- 2  8.60e-14      8.45
18 mu_1       0.9      1.85      5.31e- 5  5.78e-24     19.9 
19 mu_0       0.1      0.324     3.32e-12  0            18.3 
20 mu_0       0.2      0.806     3.82e- 6  0            43.3 
21 mu_0       0.3      0.822     3.19e- 3  0            11.7 
22 mu_0       0.4      1.12      1.68e- 1  0            14.9 
23 mu_0       0.5      1.49      9.34e- 1  0             7.64
24 mu_0       0.6      1.42      1.01e+ 0  0             6.77
25 mu_0       0.7      1.04      3.84e- 1  0             5.81
26 mu_0       0.8      0.835     7.77e- 2  0             6.07
27 mu_0       0.9      1.62      4.06e- 4  0            16.6 
[1] "Total run time was 209.422 seconds"
