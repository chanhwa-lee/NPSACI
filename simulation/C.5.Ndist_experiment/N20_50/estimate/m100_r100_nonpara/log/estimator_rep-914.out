
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3404"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 46 
 4  4  4  4  5  7  3  1  1  6  5  3  3  2  3  3  1  2  4  1  3  1  3  3  2  8 
47 48 49 50 
 5  4  4  1 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04599 0.37733 0.63855 1.00000 7.00000 
[1] "event indicator table: "

   0    1 
2008 1396 
[1] "treatment indicator table: "

   0    1 
1222 2182 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1576
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 92"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1828
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 163.161 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.429 0.0763
 2 mu         0.1   0.2 0.564 0.111 
 3 mu         0.1   0.3 0.643 0.106 
 4 mu         0.1   0.4 0.692 0.108 
 5 mu         0.1   0.5 0.732 0.119 
 6 mu         0.2   0.1 0.340 0.0437
 7 mu         0.2   0.2 0.424 0.0622
 8 mu         0.2   0.3 0.490 0.0471
 9 mu         0.2   0.4 0.532 0.0372
10 mu         0.2   0.5 0.553 0.0482
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.33         0.576  0.000231      9.16
 2 mu         0.2      1.06         1.01   0.0697        2.97
 3 mu         0.3      1.00         1.00   0.291         1.92
 4 mu         0.4      1.00         0.999  0.500         1.64
 5 mu         0.5      0.996        0.987  0.605         1.65
 6 mu         0.6      0.996        0.994  0.716         1.82
 7 mu         0.7      0.980        0.970  0.694         1.32
 8 mu         0.8      0.996        0.989  0.692         1.27
 9 mu         0.9      1.03         1.02   0.455         1.79
10 mu_1       0.1      1.25         0.806  0.000688      7.40
11 mu_1       0.2      1.02         0.970  0.104         2.59
12 mu_1       0.3      1.01         1.00   0.352         1.87
13 mu_1       0.4      0.999        0.988  0.511         1.55
14 mu_1       0.5      0.996        0.988  0.610         1.70
15 mu_1       0.6      0.995        0.984  0.711         1.80
16 mu_1       0.7      0.980        0.974  0.708         1.28
17 mu_1       0.8      0.999        0.988  0.696         1.30
18 mu_1       0.9      1.03         1.02   0.453         1.82
19 mu_0       0.1      1.34         0.543  0.000180      9.52
20 mu_0       0.2      1.07         1.02   0.0611        3.23
21 mu_0       0.3      1.00         0.993  0.265         1.97
22 mu_0       0.4      1.00         1.00   0.492         1.70
23 mu_0       0.5      0.995        0.979  0.599         1.61
24 mu_0       0.6      0.999        0.994  0.692         1.85
25 mu_0       0.7      0.981        0.974  0.663         1.41
26 mu_0       0.8      0.985        0.986  0.676         1.25
27 mu_0       0.9      1.04         1.04   0.469         1.60
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.68      8.69e-14  1.43e-41    164.  
 2 mu         0.2      1.07      8.70e- 8  7.97e-28     42.0 
 3 mu         0.3      1.44      1.58e- 4  7.69e-20     62.0 
 4 mu         0.4      1.11      1.60e- 2  3.15e-14     13.5 
 5 mu         0.5      1.10      3.39e- 1  6.29e-10     16.0 
 6 mu         0.6      1.29      7.53e- 1  4.64e- 9      6.86
 7 mu         0.7      1.22      8.97e- 1  7.56e-14      6.01
 8 mu         0.8      1.06      3.12e- 1  8.89e-21      7.19
 9 mu         0.9      0.883     1.82e- 3  7.28e-33     13.9 
10 mu_1       0.1      1.89      5.71e-13  1.37e-40    178.  
11 mu_1       0.2      1.12      3.28e- 7  3.82e-27     36.4 
12 mu_1       0.3      1.44      3.46e- 4  2.45e-19     57.8 
13 mu_1       0.4      1.08      2.68e- 2  7.56e-14     12.1 
14 mu_1       0.5      1.12      3.03e- 1  1.20e- 9     15.2 
15 mu_1       0.6      1.31      8.74e- 1  8.40e-10      7.01
16 mu_1       0.7      1.21      9.04e- 1  1.17e-14      5.54
17 mu_1       0.8      1.05      2.86e- 1  1.21e-21      7.64
18 mu_1       0.9      0.891     1.32e- 3  8.80e-34     14.8 
19 mu_0       0.1      1.66      3.30e-14  0           163.  
20 mu_0       0.2      1.06      3.22e- 8  0            46.8 
21 mu_0       0.3      1.44      6.84e- 5  0            63.7 
22 mu_0       0.4      1.13      1.18e- 2  0            16.2 
23 mu_0       0.5      1.09      2.73e- 1  0            16.8 
24 mu_0       0.6      1.27      5.29e- 1  0             7.35
25 mu_0       0.7      1.24      8.00e- 1  0             7.11
26 mu_0       0.8      1.10      3.99e- 1  0             5.47
27 mu_0       0.9      0.807     2.86e- 3  0             9.24
[1] "Total run time was 166.311 seconds"
