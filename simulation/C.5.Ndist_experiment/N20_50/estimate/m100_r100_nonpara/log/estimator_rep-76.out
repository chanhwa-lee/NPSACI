
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3410"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 41 42 43 44 45 47 
 1  4  6  6  4  4  2  6  2  2  4  1  4  4  2  5  3  1  4  3  5  1  3  7  4  4 
48 49 50 
 3  2  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04054 0.34799 0.60509 1.00000 5.27883 
[1] "event indicator table: "

   0    1 
2084 1326 
[1] "treatment indicator table: "

   0    1 
1158 2252 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1772
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1638
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 239.42 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.287 0.0860
 2 mu         0.1   0.2 0.371 0.0892
 3 mu         0.1   0.3 0.502 0.109 
 4 mu         0.1   0.4 0.531 0.116 
 5 mu         0.1   0.5 0.582 0.128 
 6 mu         0.2   0.1 0.320 0.0621
 7 mu         0.2   0.2 0.419 0.0628
 8 mu         0.2   0.3 0.562 0.0803
 9 mu         0.2   0.4 0.602 0.0927
10 mu         0.2   0.5 0.665 0.102 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.722        0.316 0.0000837      6.30
 2 mu         0.2      0.994        0.882 0.0256         3.42
 3 mu         0.3      0.940        0.930 0.235          2.58
 4 mu         0.4      0.942        0.926 0.426          1.52
 5 mu         0.5      0.976        0.955 0.606          1.95
 6 mu         0.6      0.998        0.994 0.663          1.56
 7 mu         0.7      0.995        0.982 0.682          1.31
 8 mu         0.8      0.991        1.00  0.688          1.41
 9 mu         0.9      0.981        0.993 0.598          1.37
10 mu_1       0.1      0.838        0.548 0.000288       5.48
11 mu_1       0.2      1.00         0.963 0.0451         3.47
12 mu_1       0.3      0.932        0.914 0.301          2.32
13 mu_1       0.4      0.949        0.926 0.449          1.61
14 mu_1       0.5      0.979        0.961 0.604          1.94
15 mu_1       0.6      0.999        0.983 0.685          1.52
16 mu_1       0.7      0.994        0.977 0.687          1.31
17 mu_1       0.8      0.991        0.991 0.678          1.41
18 mu_1       0.9      0.981        0.991 0.591          1.39
19 mu_0       0.1      0.709        0.291 0.0000610      6.49
20 mu_0       0.2      0.992        0.864 0.0207         3.40
21 mu_0       0.3      0.943        0.929 0.206          2.69
22 mu_0       0.4      0.937        0.918 0.410          1.60
23 mu_0       0.5      0.972        0.963 0.578          1.97
24 mu_0       0.6      0.995        0.983 0.629          1.62
25 mu_0       0.7      0.998        0.995 0.669          1.32
26 mu_0       0.8      0.993        1.01  0.712          1.40
27 mu_0       0.9      0.989        0.978 0.597          1.42
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.174     5.12e-14  2.54e-37     14.2 
 2 mu         0.2      1.33      3.83e- 8  2.49e-25     73.3 
 3 mu         0.3      1.11      5.80e- 5  2.41e-18     21.7 
 4 mu         0.4      1.08      6.47e- 3  2.05e-13     15.6 
 5 mu         0.5      1.38      1.66e- 1  1.29e- 9     17.1 
 6 mu         0.6      1.16      5.30e- 1  1.51e- 6      7.53
 7 mu         0.7      1.06      5.78e- 1  1.41e-10      5.95
 8 mu         0.8      1.09      5.06e- 1  6.36e-17      8.97
 9 mu         0.9      1.12      1.69e- 2  3.34e-28      9.57
10 mu_1       0.1      0.346     3.19e-13  2.48e-36     26.5 
11 mu_1       0.2      1.47      1.47e- 7  1.21e-24     68.7 
12 mu_1       0.3      1.06      1.38e- 4  7.83e-18     17.1 
13 mu_1       0.4      1.12      1.16e- 2  5.00e-13     17.8 
14 mu_1       0.5      1.38      2.29e- 1  2.51e- 9     15.5 
15 mu_1       0.6      1.15      5.69e- 1  8.20e- 7      6.79
16 mu_1       0.7      1.07      5.81e- 1  3.78e-11      6.18
17 mu_1       0.8      1.09      4.84e- 1  1.49e-17      8.76
18 mu_1       0.9      1.13      1.28e- 2  6.96e-29      9.57
19 mu_0       0.1      0.155     2.01e-14  0            12.8 
20 mu_0       0.2      1.30      1.27e- 8  0            74.5 
21 mu_0       0.3      1.13      2.20e- 5  0            23.8 
22 mu_0       0.4      1.05      3.28e- 3  0            14.2 
23 mu_0       0.5      1.37      1.07e- 1  0            18.6 
24 mu_0       0.6      1.19      4.29e- 1  0             8.65
25 mu_0       0.7      1.05      5.35e- 1  0             5.41
26 mu_0       0.8      1.12      4.32e- 1  0             9.81
27 mu_0       0.9      1.06      3.94e- 2  0             9.57
[1] "Total run time was 244.016 seconds"
