
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3525"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 4  2  1  3  5  8  4  1  3  3  2  2  1  2  3  8  2  2  4  3  3  5  2  2  2  4 
46 47 48 49 50 
 4  5  3  3  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02006 0.32069 0.58413 1.00000 5.35641 
[1] "event indicator table: "

   0    1 
2037 1488 
[1] "treatment indicator table: "

   0    1 
1403 2122 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1728
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1797
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 217.752 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.458 0.0910
 2 mu         0.1   0.2 0.496 0.0674
 3 mu         0.1   0.3 0.502 0.0472
 4 mu         0.1   0.4 0.527 0.0567
 5 mu         0.1   0.5 0.545 0.0611
 6 mu         0.2   0.1 0.389 0.0463
 7 mu         0.2   0.2 0.450 0.0426
 8 mu         0.2   0.3 0.483 0.0381
 9 mu         0.2   0.4 0.508 0.0428
10 mu         0.2   0.5 0.541 0.0508
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.897        0.830   0.00876      3.39
 2 mu         0.2      0.983        0.943   0.309        1.99
 3 mu         0.3      0.982        0.946   0.424        1.56
 4 mu         0.4      1.01         0.993   0.553        1.52
 5 mu         0.5      1.03         1.03    0.713        1.40
 6 mu         0.6      1.01         1.01    0.737        1.35
 7 mu         0.7      1.00         1.01    0.744        1.25
 8 mu         0.8      1.01         1.00    0.615        1.30
 9 mu         0.9      1.01         1.01    0.532        1.70
10 mu_1       0.1      0.927        0.906   0.0202       2.83
11 mu_1       0.2      0.986        0.940   0.274        1.97
12 mu_1       0.3      0.984        0.950   0.478        1.47
13 mu_1       0.4      1.01         0.998   0.551        1.55
14 mu_1       0.5      1.03         1.03    0.745        1.35
15 mu_1       0.6      1.01         1.01    0.744        1.33
16 mu_1       0.7      1.00         1.00    0.744        1.26
17 mu_1       0.8      1.01         0.994   0.613        1.32
18 mu_1       0.9      1.01         1.01    0.533        1.74
19 mu_0       0.1      0.894        0.808   0.00748      3.61
20 mu_0       0.2      0.982        0.928   0.318        2.04
21 mu_0       0.3      0.982        0.948   0.400        1.62
22 mu_0       0.4      1.00         0.979   0.553        1.51
23 mu_0       0.5      1.03         1.04    0.682        1.46
24 mu_0       0.6      1.01         1.01    0.728        1.37
25 mu_0       0.7      1.00         1.01    0.743        1.25
26 mu_0       0.8      1.01         1.02    0.627        1.31
27 mu_0       0.9      1.01         0.992   0.523        1.63
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.750     8.05e-13  6.64e-35     31.5 
 2 mu         0.2      1.17      1.48e- 6  2.88e-22     29.4 
 3 mu         0.3      1.04      1.38e- 3  4.82e-15     15.6 
 4 mu         0.4      0.884     4.97e- 2  4.51e-10     10.5 
 5 mu         0.5      0.928     2.87e- 1  1.29e- 6      5.33
 6 mu         0.6      1.14      4.95e- 1  8.55e- 9      6.62
 7 mu         0.7      1.08      7.12e- 1  5.03e-13      5.78
 8 mu         0.8      1.15      2.65e- 1  9.96e-20      6.34
 9 mu         0.9      1.16      6.48e- 4  5.81e-32     13.5 
10 mu_1       0.1      0.962     5.41e-12  5.82e-34     31.5 
11 mu_1       0.2      1.16      4.56e- 6  1.26e-21     26.7 
12 mu_1       0.3      1.02      2.73e- 3  1.41e-14     15.3 
13 mu_1       0.4      0.874     7.43e- 2  9.89e-10     10.9 
14 mu_1       0.5      0.962     2.62e- 1  2.42e- 6      5.80
15 mu_1       0.6      1.15      4.93e- 1  1.42e- 9      6.26
16 mu_1       0.7      1.08      6.10e- 1  7.19e-14      6.15
17 mu_1       0.8      1.16      2.13e- 1  1.99e-20      6.39
18 mu_1       0.9      1.16      4.30e- 4  1.03e-32     13.1 
19 mu_0       0.1      0.727     2.93e-13  0            31.5 
20 mu_0       0.2      1.18      7.15e- 7  0            30.9 
21 mu_0       0.3      1.05      8.01e- 4  0            15.8 
22 mu_0       0.4      0.890     4.13e- 2  0            10.3 
23 mu_0       0.5      0.894     2.85e- 1  0             6.26
24 mu_0       0.6      1.12      3.78e- 1  0             7.15
25 mu_0       0.7      1.09      6.43e- 1  0             5.11
26 mu_0       0.8      1.11      2.63e- 1  0             6.13
27 mu_0       0.9      1.17      1.46e- 3  0            16.5 
[1] "Total run time was 220.785 seconds"
