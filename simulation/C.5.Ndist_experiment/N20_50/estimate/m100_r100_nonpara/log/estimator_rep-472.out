
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3588"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 38 39 40 41 42 43 44 45 46 
 2  4  4  2  4  5  1  1  4  2  3  5  4  1  5  3  6  2  2  1  2  4  3  2  3  4 
47 48 49 50 
 8  7  3  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03778 0.36197 0.62583 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
2202 1386 
[1] "treatment indicator table: "

   0    1 
1268 2320 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1735
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 26"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 73"
[1] "     Cluster: 77"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1853
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 9"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 184.304 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.414 0.119 
 2 mu         0.1   0.2 0.496 0.136 
 3 mu         0.1   0.3 0.604 0.168 
 4 mu         0.1   0.4 0.680 0.171 
 5 mu         0.1   0.5 0.676 0.160 
 6 mu         0.2   0.1 0.351 0.0844
 7 mu         0.2   0.2 0.445 0.0974
 8 mu         0.2   0.3 0.543 0.121 
 9 mu         0.2   0.4 0.619 0.122 
10 mu         0.2   0.5 0.618 0.112 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.918        0.303 0.0000000512      6.39
 2 mu         0.2      0.914        0.861 0.000445          2.65
 3 mu         0.3      0.951        0.952 0.0320            2.13
 4 mu         0.4      0.973        0.965 0.292             1.99
 5 mu         0.5      0.977        0.971 0.627             1.45
 6 mu         0.6      0.980        0.970 0.748             1.31
 7 mu         0.7      0.980        0.977 0.769             1.28
 8 mu         0.8      1.01         1.02  0.684             1.46
 9 mu         0.9      1.05         1.01  0.470             2.44
10 mu_1       0.1      0.853        0.509 0.000000242       5.82
11 mu_1       0.2      0.904        0.920 0.00106           2.34
12 mu_1       0.3      0.959        0.959 0.0519            2.14
13 mu_1       0.4      0.975        0.972 0.371             1.90
14 mu_1       0.5      0.979        0.981 0.630             1.35
15 mu_1       0.6      0.979        0.961 0.733             1.33
16 mu_1       0.7      0.981        0.979 0.775             1.27
17 mu_1       0.8      1.01         1.02  0.686             1.50
18 mu_1       0.9      1.05         1.01  0.456             2.46
19 mu_0       0.1      0.925        0.280 0.0000000300      6.45
20 mu_0       0.2      0.916        0.839 0.000291          2.88
21 mu_0       0.3      0.948        0.963 0.0234            2.13
22 mu_0       0.4      0.972        0.966 0.239             2.04
23 mu_0       0.5      0.976        0.955 0.624             1.54
24 mu_0       0.6      0.981        0.963 0.739             1.29
25 mu_0       0.7      0.978        0.963 0.749             1.32
26 mu_0       0.8      0.999        0.997 0.678             1.34
27 mu_0       0.9      1.03         0.973 0.519             2.24
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.187     2.79e-13  1.40e-42     16.3 
 2 mu         0.2      0.583     2.76e- 7  8.74e-29     27.4 
 3 mu         0.3      0.932     3.31e- 4  9.64e-21     14.1 
 4 mu         0.4      1.23      3.63e- 2  4.61e-15     14.4 
 5 mu         0.5      1.15      3.61e- 1  1.10e-10      7.49
 6 mu         0.6      1.07      6.27e- 1  3.88e- 7      6.92
 7 mu         0.7      1.11      6.33e- 1  3.22e- 7      7.38
 8 mu         0.8      1.28      2.16e- 1  2.49e-11      8.64
 9 mu         0.9      1.42      1.49e- 3  1.34e-18     24.4 
10 mu_1       0.1      0.332     1.87e-12  1.37e-41     27.1 
11 mu_1       0.2      0.663     8.61e- 7  4.28e-28     22.8 
12 mu_1       0.3      1.01      7.40e- 4  3.14e-20     16.4 
13 mu_1       0.4      1.24      6.43e- 2  1.13e-14     12.6 
14 mu_1       0.5      1.12      4.23e- 1  2.16e-10      6.92
15 mu_1       0.6      1.07      5.96e- 1  6.32e- 7      7.15
16 mu_1       0.7      1.12      5.47e- 1  7.68e- 8      7.19
17 mu_1       0.8      1.27      1.74e- 1  5.19e-12      8.69
18 mu_1       0.9      1.42      9.81e- 4  2.48e-19     24.6 
19 mu_0       0.1      0.170     1.03e-13  3.30e-44     15.1 
20 mu_0       0.2      0.563     1.30e- 7  2.33e-30     28.5 
21 mu_0       0.3      0.898     1.55e- 4  2.93e-22     13.1 
22 mu_0       0.4      1.22      1.70e- 2  1.64e-16     15.6 
23 mu_0       0.5      1.18      2.35e- 1  4.70e-12      8.07
24 mu_0       0.6      1.06      5.50e- 1  2.06e- 8      6.58
25 mu_0       0.7      1.08      5.07e- 1  8.96e- 7      7.82
26 mu_0       0.8      1.30      3.65e- 1  1.04e-10      8.45
27 mu_0       0.9      1.36      5.56e- 3  1.11e-17     22.7 
[1] "Total run time was 187.388 seconds"
