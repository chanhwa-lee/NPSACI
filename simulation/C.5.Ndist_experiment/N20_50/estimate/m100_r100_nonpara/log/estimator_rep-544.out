
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3530"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 2  4  2  2  5  4  4  2  3  6  3  3  2  3  3  1  2  4  6  2  5  4  2  1  3  3 
46 47 48 49 50 
 6  1  4  2  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.01835 0.30219 0.57614 0.97657 5.31533 
[1] "event indicator table: "

   0    1 
2067 1463 
[1] "treatment indicator table: "

   0    1 
1329 2201 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1717
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 17"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1813
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 28"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 95"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 210.045 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.496 0.146 
 2 mu         0.1   0.2 0.610 0.193 
 3 mu         0.1   0.3 0.631 0.182 
 4 mu         0.1   0.4 0.641 0.166 
 5 mu         0.1   0.5 0.656 0.160 
 6 mu         0.2   0.1 0.447 0.0922
 7 mu         0.2   0.2 0.541 0.121 
 8 mu         0.2   0.3 0.570 0.112 
 9 mu         0.2   0.4 0.617 0.0999
10 mu         0.2   0.5 0.639 0.0926
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.853        0.200  0.000197      7.74
 2 mu         0.2      0.895        0.794  0.0413        3.40
 3 mu         0.3      0.963        0.997  0.336         2.63
 4 mu         0.4      0.993        0.991  0.397         2.48
 5 mu         0.5      1.02         1.03   0.595         1.48
 6 mu         0.6      1.04         1.04   0.727         1.40
 7 mu         0.7      1.02         1.00   0.715         1.40
 8 mu         0.8      0.985        0.985  0.688         1.31
 9 mu         0.9      0.971        0.966  0.364         1.56
10 mu_1       0.1      0.859        0.363  0.000584      6.24
11 mu_1       0.2      0.909        0.849  0.0666        3.59
12 mu_1       0.3      0.972        0.994  0.356         2.56
13 mu_1       0.4      0.998        0.993  0.409         2.41
14 mu_1       0.5      1.03         1.04   0.646         1.45
15 mu_1       0.6      1.04         1.04   0.726         1.42
16 mu_1       0.7      1.01         1.00   0.695         1.39
17 mu_1       0.8      0.984        0.986  0.680         1.30
18 mu_1       0.9      0.971        0.967  0.351         1.59
19 mu_0       0.1      0.852        0.183  0.000154      7.91
20 mu_0       0.2      0.891        0.811  0.0350        3.36
21 mu_0       0.3      0.959        0.978  0.304         2.66
22 mu_0       0.4      0.990        0.994  0.389         2.53
23 mu_0       0.5      1.02         1.03   0.543         1.53
24 mu_0       0.6      1.04         1.03   0.730         1.38
25 mu_0       0.7      1.02         1.00   0.734         1.43
26 mu_0       0.8      0.989        0.990  0.682         1.35
27 mu_0       0.9      0.975        0.961  0.402         1.66
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      2.69      5.15e-12  1.61e-37    256.  
 2 mu         0.2      1.35      1.20e- 6  3.14e-24     76.9 
 3 mu         0.3      1.45      1.40e- 3  1.35e-16     24.3 
 4 mu         0.4      1.37      8.98e- 2  2.62e-11     15.5 
 5 mu         0.5      1.22      4.48e- 1  2.42e- 7      7.91
 6 mu         0.6      1.04      5.58e- 1  9.01e- 5      6.96
 7 mu         0.7      1.02      5.30e- 1  1.59e- 8      7.62
 8 mu         0.8      1.19      1.84e- 1  2.76e-14      6.70
 9 mu         0.9      1.19      4.87e- 4  9.28e-25     23.7 
10 mu_1       0.1      2.38      2.95e-11  1.45e-36    214.  
11 mu_1       0.2      1.06      3.91e- 6  1.41e-23     32.0 
12 mu_1       0.3      1.45      2.89e- 3  4.05e-16     26.0 
13 mu_1       0.4      1.33      1.22e- 1  5.89e-11     14.0 
14 mu_1       0.5      1.21      4.90e- 1  4.35e- 7      8.60
15 mu_1       0.6      1.01      6.05e- 1  2.29e- 5      6.31
16 mu_1       0.7      1.03      5.87e- 1  5.92e- 9      8.04
17 mu_1       0.8      1.20      1.47e- 1  8.97e-15      7.36
18 mu_1       0.9      1.17      3.48e- 4  2.68e-25     23.7 
19 mu_0       0.1      2.72      2.06e-12  1.78e-38    261.  
20 mu_0       0.2      1.42      5.12e- 7  3.92e-25     88.1 
21 mu_0       0.3      1.45      7.48e- 4  1.93e-17     23.7 
22 mu_0       0.4      1.40      5.76e- 2  4.36e-12     16.6 
23 mu_0       0.5      1.23      3.77e- 1  4.83e- 8      8.02
24 mu_0       0.6      1.08      4.18e- 1  2.61e- 5      7.95
25 mu_0       0.7      0.986     5.36e- 1  3.93e- 8      7.00
26 mu_0       0.8      1.16      2.42e- 1  1.02e-13      7.18
27 mu_0       0.9      1.36      1.58e- 3  6.87e-24     23.7 
[1] "Total run time was 213.324 seconds"
