
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3350"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 42 43 45 46 47 
 5  3  4  4  4  2  4  4  2  4  9  4  2  3  4  2  1  3  5  5  3  4  2  2  5  1 
48 49 50 
 3  3  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02928 0.33371 0.59032 0.99618 6.00000 
[1] "event indicator table: "

   0    1 
1978 1372 
[1] "treatment indicator table: "

   0    1 
1328 2022 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1675
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1675
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 234.718 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.305 0.0417
 2 mu         0.1   0.2 0.400 0.0489
 3 mu         0.1   0.3 0.507 0.0697
 4 mu         0.1   0.4 0.526 0.0710
 5 mu         0.1   0.5 0.545 0.0704
 6 mu         0.2   0.1 0.299 0.0258
 7 mu         0.2   0.2 0.385 0.0297
 8 mu         0.2   0.3 0.469 0.0374
 9 mu         0.2   0.4 0.499 0.0368
10 mu         0.2   0.5 0.542 0.0363
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.875        0.605  0.000212      6.89
 2 mu         0.2      0.926        0.868  0.0820        3.07
 3 mu         0.3      0.962        0.939  0.417         1.79
 4 mu         0.4      0.998        1.01   0.597         1.87
 5 mu         0.5      1.00         0.990  0.756         1.57
 6 mu         0.6      1.01         1.01   0.680         1.35
 7 mu         0.7      0.992        0.978  0.698         1.40
 8 mu         0.8      0.991        0.979  0.687         1.45
 9 mu         0.9      1.02         0.972  0.334         1.94
10 mu_1       0.1      0.872        0.722  0.000640      4.73
11 mu_1       0.2      0.935        0.853  0.140         2.68
12 mu_1       0.3      0.971        0.969  0.521         1.80
13 mu_1       0.4      1.00         1.00   0.585         1.81
14 mu_1       0.5      1.00         0.998  0.744         1.55
15 mu_1       0.6      1.01         1.01   0.674         1.37
16 mu_1       0.7      0.990        0.974  0.705         1.41
17 mu_1       0.8      0.992        0.986  0.686         1.44
18 mu_1       0.9      1.02         0.975  0.321         1.99
19 mu_0       0.1      0.875        0.575  0.000165      7.13
20 mu_0       0.2      0.924        0.863  0.0674        3.16
21 mu_0       0.3      0.959        0.929  0.372         1.84
22 mu_0       0.4      0.995        1.00   0.606         1.92
23 mu_0       0.5      0.999        0.994  0.727         1.59
24 mu_0       0.6      1.00         1.02   0.689         1.41
25 mu_0       0.7      0.999        0.993  0.683         1.39
26 mu_0       0.8      0.985        0.988  0.674         1.47
27 mu_0       0.9      1.01         1.00   0.438         1.66
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.331     1.55e-12  1.79e-30     25.0 
 2 mu         0.2      1.10      7.96e- 7  2.25e-19     37.4 
 3 mu         0.3      1.47      9.39e- 4  1.12e-13     15.0 
 4 mu         0.4      1.29      4.58e- 2  1.09e- 9     13.1 
 5 mu         0.5      1.05      2.17e- 1  1.19e- 6     10.2 
 6 mu         0.6      1.08      5.26e- 1  8.55e- 7     12.7 
 7 mu         0.7      1.16      5.89e- 1  4.02e-11      7.19
 8 mu         0.8      1.40      2.03e- 1  1.38e-17     12.0 
 9 mu         0.9      1.28      9.06e- 4  4.08e-29     12.7 
10 mu_1       0.1      0.573     8.50e-12  1.47e-29     40.3 
11 mu_1       0.2      1.21      2.56e- 6  1.06e-18     30.1 
12 mu_1       0.3      1.50      1.90e- 3  3.51e-13     15.9 
13 mu_1       0.4      1.25      7.60e- 2  2.56e- 9     13.3 
14 mu_1       0.5      1.04      2.43e- 1  2.25e- 6     11.5 
15 mu_1       0.6      1.09      4.56e- 1  2.85e- 7     11.9 
16 mu_1       0.7      1.17      6.02e- 1  1.15e-11      6.75
17 mu_1       0.8      1.42      1.63e- 1  3.45e-18     12.4 
18 mu_1       0.9      1.26      6.28e- 4  9.06e-30     13.3 
19 mu_0       0.1      0.304     7.73e-13  3.66e-31     23.3 
20 mu_0       0.2      1.07      3.61e- 7  1.61e-20     39.2 
21 mu_0       0.3      1.46      5.28e- 4  9.11e-15     15.7 
22 mu_0       0.4      1.33      2.65e- 2  1.04e-10     12.9 
23 mu_0       0.5      1.06      2.02e- 1  1.36e- 7      9.74
24 mu_0       0.6      1.07      4.36e- 1  1.71e- 6     13.8 
25 mu_0       0.7      1.13      6.02e- 1  1.07e-10      8.19
26 mu_0       0.8      1.32      2.94e- 1  5.52e-17     10.4 
27 mu_0       0.9      1.47      3.43e- 3  3.26e-28     10.7 
[1] "Total run time was 238.275 seconds"
