
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3502"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 3  6  5  3  2  3  1  2  4  1  3  3  3  3  5  2  6  2  2  3  4  5  3  2  3  6 
46 47 48 49 50 
 4  5  2  2  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03282 0.36262 0.62207 1.00000 5.00000 
[1] "event indicator table: "

   0    1 
2034 1468 
[1] "treatment indicator table: "

   0    1 
1360 2142 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1735
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 27"
[1] "     Cluster: 31"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1767
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 7"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 58"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 254.379 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.392 0.0363
 2 mu         0.1   0.2 0.455 0.0566
 3 mu         0.1   0.3 0.541 0.0601
 4 mu         0.1   0.4 0.606 0.0662
 5 mu         0.1   0.5 0.661 0.104 
 6 mu         0.2   0.1 0.376 0.0255
 7 mu         0.2   0.2 0.485 0.0586
 8 mu         0.2   0.3 0.561 0.0538
 9 mu         0.2   0.4 0.625 0.0509
10 mu         0.2   0.5 0.676 0.0575
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.04         0.778  0.000141      3.95
 2 mu         0.2      1.01         0.946  0.0295        2.66
 3 mu         0.3      0.999        0.996  0.263         1.77
 4 mu         0.4      1.00         1.00   0.539         1.44
 5 mu         0.5      1.01         1.01   0.694         1.39
 6 mu         0.6      1.01         1.00   0.702         1.39
 7 mu         0.7      0.996        0.990  0.615         1.42
 8 mu         0.8      0.981        0.973  0.481         1.56
 9 mu         0.9      1.01         1.03   0.390         2.11
10 mu_1       0.1      1.02         0.861  0.000488      3.92
11 mu_1       0.2      1.01         0.964  0.0532        2.24
12 mu_1       0.3      0.998        0.993  0.346         1.68
13 mu_1       0.4      1.01         1.00   0.548         1.40
14 mu_1       0.5      1.01         1.02   0.678         1.37
15 mu_1       0.6      1.00         1.00   0.690         1.38
16 mu_1       0.7      0.995        0.997  0.599         1.41
17 mu_1       0.8      0.981        0.981  0.482         1.59
18 mu_1       0.9      1.01         1.03   0.375         2.12
19 mu_0       0.1      1.04         0.768  0.000102      4.13
20 mu_0       0.2      1.01         0.948  0.0236        2.82
21 mu_0       0.3      0.999        0.981  0.228         1.82
22 mu_0       0.4      1.00         1.01   0.533         1.46
23 mu_0       0.5      1.01         1.01   0.687         1.41
24 mu_0       0.6      1.01         1.01   0.709         1.41
25 mu_0       0.7      0.997        0.992  0.653         1.43
26 mu_0       0.8      0.982        0.987  0.475         1.44
27 mu_0       0.9      0.998        0.991  0.472         2.05
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      3.49      6.64e-12  3.55e-36    242.  
 2 mu         0.2      0.897     2.30e- 6  5.48e-24     20.3 
 3 mu         0.3      0.988     1.47e- 3  6.09e-17     29.0 
 4 mu         0.4      0.815     5.98e- 2  5.09e-12      7.37
 5 mu         0.5      0.925     3.18e- 1  6.76e-10      6.72
 6 mu         0.6      1.11      6.63e- 1  1.81e-14     10.0 
 7 mu         0.7      1.08      5.47e- 1  2.13e-20      5.20
 8 mu         0.8      1.16      1.77e- 1  8.57e-29      9.88
 9 mu         0.9      1.29      2.47e- 4  3.43e-43     24.1 
10 mu_1       0.1      1.41      4.31e-11  3.31e-35     71.3 
11 mu_1       0.2      0.895     7.57e- 6  2.55e-23     18.3 
12 mu_1       0.3      0.972     2.41e- 3  1.89e-16     27.6 
13 mu_1       0.4      0.818     9.06e- 2  1.18e-11      5.50
14 mu_1       0.5      0.952     3.49e- 1  2.76e-11      7.73
15 mu_1       0.6      1.12      5.69e- 1  6.15e-16      9.61
16 mu_1       0.7      1.07      5.63e- 1  6.20e-22      5.63
17 mu_1       0.8      1.17      1.34e- 1  2.19e-30      9.88
18 mu_1       0.9      1.29      1.75e- 4  7.77e-45     25.8 
19 mu_0       0.1      3.72      2.59e-12  2.69e-37    264.  
20 mu_0       0.2      0.898     9.11e- 7  4.67e-25     23.4 
21 mu_0       0.3      0.994     7.72e- 4  5.93e-18     29.5 
22 mu_0       0.4      0.813     3.69e- 2  5.78e-13      8.78
23 mu_0       0.5      0.899     2.77e- 1  1.32e- 9      5.95
24 mu_0       0.6      1.10      6.25e- 1  4.43e-14     10.7 
25 mu_0       0.7      1.10      5.30e- 1  6.94e-20      4.42
26 mu_0       0.8      1.12      2.12e- 1  4.20e-28      9.88
27 mu_0       0.9      1.29      9.57e- 4  3.36e-42     25.9 
[1] "Total run time was 258.846 seconds"
