
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3655"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 29 30 31 32 33 34 35 36 37 38 40 41 42 43 44 45 46 47 
 1  4  3  1  2  6  3  2  3  4  3  5  3  3  3  4  4  1  3  3  7  3  3  5  3  2 
48 49 50 
 8  3  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03353 0.34176 0.60255 1.00000 6.13572 
[1] "event indicator table: "

   0    1 
2192 1463 
[1] "treatment indicator table: "

   0    1 
1510 2145 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1799
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1856
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 205.531 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.458 0.101 
 2 mu         0.1   0.2 0.519 0.113 
 3 mu         0.1   0.3 0.559 0.117 
 4 mu         0.1   0.4 0.625 0.127 
 5 mu         0.1   0.5 0.636 0.127 
 6 mu         0.2   0.1 0.369 0.0455
 7 mu         0.2   0.2 0.420 0.0481
 8 mu         0.2   0.3 0.457 0.0484
 9 mu         0.2   0.4 0.497 0.0493
10 mu         0.2   0.5 0.514 0.0496
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.989        0.673 0.0000840     18.8 
 2 mu         0.2      0.933        0.900 0.0603         2.56
 3 mu         0.3      0.916        0.913 0.375          1.41
 4 mu         0.4      0.964        0.966 0.444          1.33
 5 mu         0.5      0.999        0.978 0.657          1.34
 6 mu         0.6      1.02         1.01  0.752          1.43
 7 mu         0.7      1.03         1.03  0.808          1.30
 8 mu         0.8      1.02         1.03  0.597          1.38
 9 mu         0.9      0.985        0.967 0.306          1.78
10 mu_1       0.1      1.00         0.769 0.000269      12.1 
11 mu_1       0.2      0.914        0.907 0.100          2.11
12 mu_1       0.3      0.923        0.917 0.400          1.44
13 mu_1       0.4      0.971        0.981 0.464          1.29
14 mu_1       0.5      1.00         0.979 0.666          1.36
15 mu_1       0.6      1.02         1.02  0.758          1.42
16 mu_1       0.7      1.03         1.02  0.792          1.29
17 mu_1       0.8      1.02         1.02  0.578          1.41
18 mu_1       0.9      0.984        0.967 0.296          1.82
19 mu_0       0.1      0.987        0.666 0.0000634     19.5 
20 mu_0       0.2      0.937        0.899 0.0503         2.83
21 mu_0       0.3      0.913        0.904 0.364          1.49
22 mu_0       0.4      0.960        0.966 0.431          1.36
23 mu_0       0.5      0.995        0.979 0.648          1.33
24 mu_0       0.6      1.02         1.01  0.731          1.45
25 mu_0       0.7      1.03         1.03  0.844          1.32
26 mu_0       0.8      1.02         1.04  0.671          1.29
27 mu_0       0.9      0.995        0.980 0.383          1.69
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.57      3.16e-12  1.94e-41     77.2 
 2 mu         0.2      3.37      7.85e- 7  1.08e-27     70.4 
 3 mu         0.3      1.42      9.10e- 4  1.04e-19     23.7 
 4 mu         0.4      1.03      7.58e- 2  4.27e-14     14.4 
 5 mu         0.5      0.966     3.15e- 1  8.50e-10     11.1 
 6 mu         0.6      1.11      4.25e- 1  5.57e- 8      5.92
 7 mu         0.7      1.25      7.88e- 1  1.92e-12      7.71
 8 mu         0.8      1.16      1.49e- 1  5.06e-19      8.06
 9 mu         0.9      1.42      4.57e- 4  1.18e-30     48.3 
10 mu_1       0.1      2.44      2.27e-11  1.86e-40    102.  
11 mu_1       0.2      3.07      2.41e- 6  5.17e-27     64.6 
12 mu_1       0.3      1.25      1.81e- 3  3.32e-19     25.1 
13 mu_1       0.4      1.01      9.82e- 2  1.02e-13     15.5 
14 mu_1       0.5      0.970     2.75e- 1  1.63e- 9      9.59
15 mu_1       0.6      1.14      5.03e- 1  1.55e- 8      6.00
16 mu_1       0.7      1.25      7.97e- 1  4.57e-13      8.21
17 mu_1       0.8      1.15      1.26e- 1  1.05e-19      8.51
18 mu_1       0.9      1.45      3.31e- 4  2.19e-31     52.2 
19 mu_0       0.1      1.47      1.03e-12  8.98e-43     74.5 
20 mu_0       0.2      3.44      3.80e- 7  5.61e-29     71.8 
21 mu_0       0.3      1.50      5.26e- 4  6.19e-21     23.1 
22 mu_0       0.4      1.04      4.82e- 2  2.96e-15     14.8 
23 mu_0       0.5      0.962     2.11e- 1  7.09e-11     12.6 
24 mu_0       0.6      1.08      4.20e- 1  1.09e- 7      5.79
25 mu_0       0.7      1.24      5.40e- 1  5.34e-12      7.24
26 mu_0       0.8      1.17      2.06e- 1  2.11e-18      8.61
27 mu_0       0.9      1.15      1.59e- 3  9.83e-30     13.8 
[1] "Total run time was 210.354 seconds"
