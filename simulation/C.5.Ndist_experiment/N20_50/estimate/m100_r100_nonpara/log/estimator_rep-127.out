
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3412"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 1  3  4  4  3  6  6  4  2  4  4  3  2  4  3  3  6  3  4  3  1  2  1  4  2  4 
46 48 49 50 
 3  6  1  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02294 0.30796 0.57016 0.93463 5.00000 
[1] "event indicator table: "

   0    1 
2016 1396 
[1] "treatment indicator table: "

   0    1 
1312 2100 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1716
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1696
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 68"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 192.697 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.456 0.0693
 2 mu         0.1   0.2 0.509 0.0775
 3 mu         0.1   0.3 0.636 0.111 
 4 mu         0.1   0.4 0.645 0.104 
 5 mu         0.1   0.5 0.671 0.0986
 6 mu         0.2   0.1 0.382 0.0365
 7 mu         0.2   0.2 0.438 0.0382
 8 mu         0.2   0.3 0.532 0.0538
 9 mu         0.2   0.4 0.554 0.0543
10 mu         0.2   0.5 0.587 0.0544
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.960        0.591   0.00368      4.04
 2 mu         0.2      0.961        0.934   0.121        2.03
 3 mu         0.3      0.994        0.981   0.528        1.50
 4 mu         0.4      1.02         1.02    0.704        1.42
 5 mu         0.5      1.01         1.01    0.755        1.31
 6 mu         0.6      0.994        0.999   0.762        1.20
 7 mu         0.7      0.990        0.989   0.711        1.26
 8 mu         0.8      0.989        0.998   0.682        1.37
 9 mu         0.9      0.988        0.982   0.392        1.84
10 mu_1       0.1      0.944        0.788   0.00910      3.39
11 mu_1       0.2      0.967        0.933   0.175        1.88
12 mu_1       0.3      1.00         1.00    0.563        1.50
13 mu_1       0.4      1.02         1.01    0.738        1.41
14 mu_1       0.5      1.01         1.01    0.737        1.31
15 mu_1       0.6      0.991        0.993   0.743        1.19
16 mu_1       0.7      0.991        0.986   0.693        1.27
17 mu_1       0.8      0.990        0.995   0.668        1.38
18 mu_1       0.9      0.987        0.972   0.385        1.85
19 mu_0       0.1      0.962        0.568   0.00308      4.11
20 mu_0       0.2      0.960        0.925   0.107        2.13
21 mu_0       0.3      0.991        0.985   0.487        1.57
22 mu_0       0.4      1.02         1.02    0.676        1.44
23 mu_0       0.5      1.02         1.01    0.739        1.32
24 mu_0       0.6      0.997        1.01    0.768        1.23
25 mu_0       0.7      0.990        0.973   0.708        1.24
26 mu_0       0.8      0.988        0.992   0.671        1.34
27 mu_0       0.9      0.999        0.994   0.454        1.76
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.358     7.75e-12  1.35e-39     22.3 
 2 mu         0.2      1.16      2.34e- 6  3.34e-26     32.5 
 3 mu         0.3      1.14      1.16e- 3  1.88e-18     15.4 
 4 mu         0.4      1.06      5.54e- 2  4.96e-13      5.46
 5 mu         0.5      1.04      2.36e- 1  6.59e- 9      4.20
 6 mu         0.6      0.883     7.05e- 1  2.58e- 7      4.08
 7 mu         0.7      0.992     5.53e- 1  1.36e-11      5.44
 8 mu         0.8      1.19      2.46e- 1  7.04e-18      4.98
 9 mu         0.9      1.17      5.16e- 4  5.84e-29     16.2 
10 mu_1       0.1      0.620     4.98e-11  1.27e-38     34.7 
11 mu_1       0.2      1.22      7.74e- 6  1.57e-25     26.2 
12 mu_1       0.3      1.13      2.50e- 3  5.87e-18     14.9 
13 mu_1       0.4      1.06      5.91e- 2  1.16e-12      5.23
14 mu_1       0.5      1.01      3.07e- 1  1.24e- 8      4.03
15 mu_1       0.6      0.870     7.30e- 1  6.70e- 8      3.80
16 mu_1       0.7      1.01      5.16e- 1  3.02e-12      5.66
17 mu_1       0.8      1.20      2.03e- 1  1.37e-18      5.35
18 mu_1       0.9      1.15      3.50e- 4  1.01e-29     16.9 
19 mu_0       0.1      0.329     2.66e-12  9.39e-41     20.9 
20 mu_0       0.2      1.15      9.88e- 7  2.61e-27     34.3 
21 mu_0       0.3      1.14      5.81e- 4  1.68e-19     15.6 
22 mu_0       0.4      1.05      3.30e- 2  5.16e-14      5.75
23 mu_0       0.5      1.06      2.15e- 1  8.23e-10      4.38
24 mu_0       0.6      0.902     5.87e- 1  5.45e- 7      4.51
25 mu_0       0.7      0.944     3.87e- 1  3.82e-11      4.95
26 mu_0       0.8      1.15      3.09e- 1  2.97e-17      5.21
27 mu_0       0.9      1.43      2.06e- 3  4.93e-28     13.0 
[1] "Total run time was 195.957 seconds"
