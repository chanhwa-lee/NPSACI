
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3569"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 4  6  4  4  3  3  2  1  1  4  3  3  3  3  4  2  2  2  3  1  3  2  3  2  3  3 
46 47 48 49 50 
 5  7  3  4  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02001 0.30432 0.58368 1.00000 5.00000 
[1] "event indicator table: "

   0    1 
2101 1468 
[1] "treatment indicator table: "

   0    1 
1365 2204 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1887
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1682
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 54"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 232.362 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.428 0.0676
 2 mu         0.1   0.2 0.543 0.0881
 3 mu         0.1   0.3 0.552 0.0741
 4 mu         0.1   0.4 0.565 0.0736
 5 mu         0.1   0.5 0.575 0.0758
 6 mu         0.2   0.1 0.388 0.0430
 7 mu         0.2   0.2 0.481 0.0561
 8 mu         0.2   0.3 0.504 0.0430
 9 mu         0.2   0.4 0.522 0.0436
10 mu         0.2   0.5 0.552 0.0454
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      0.944        0.605 0.00000123       4.71
 2 mu         0.2      0.971        0.918 0.00628          2.68
 3 mu         0.3      1.02         1.00  0.234            2.47
 4 mu         0.4      1.00         0.984 0.605            1.30
 5 mu         0.5      0.990        0.995 0.624            1.36
 6 mu         0.6      0.973        0.994 0.661            1.43
 7 mu         0.7      0.997        0.984 0.769            1.35
 8 mu         0.8      1.02         1.03  0.600            1.64
 9 mu         0.9      1.05         1.02  0.143            2.09
10 mu_1       0.1      0.930        0.789 0.00000519       3.85
11 mu_1       0.2      0.995        0.956 0.0133           3.24
12 mu_1       0.3      1.02         1.00  0.332            2.07
13 mu_1       0.4      1.00         0.989 0.541            1.30
14 mu_1       0.5      0.986        0.991 0.615            1.39
15 mu_1       0.6      0.973        0.988 0.659            1.41
16 mu_1       0.7      1.00         0.988 0.748            1.37
17 mu_1       0.8      1.02         1.03  0.570            1.65
18 mu_1       0.9      1.06         1.02  0.130            2.13
19 mu_0       0.1      0.945        0.579 0.000000790      5.01
20 mu_0       0.2      0.965        0.887 0.00453          2.54
21 mu_0       0.3      1.02         1.00  0.192            2.64
22 mu_0       0.4      1.00         0.973 0.647            1.33
23 mu_0       0.5      0.994        1.01  0.634            1.33
24 mu_0       0.6      0.973        0.987 0.665            1.45
25 mu_0       0.7      0.991        0.975 0.736            1.32
26 mu_0       0.8      1.02         1.02  0.652            1.61
27 mu_0       0.9      1.04         1.03  0.257            1.69
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      8.40      1.79e-12  9.46e-42    727.  
 2 mu         0.2      1.58      4.26e- 7  2.96e-28     46.5 
 3 mu         0.3      1.04      6.02e- 4  2.17e-20     14.0 
 4 mu         0.4      1.01      5.13e- 2  7.81e-15     15.6 
 5 mu         0.5      1.06      3.99e- 1  1.49e-10     12.4 
 6 mu         0.6      1.35      5.60e- 1  5.71e-10     10.5 
 7 mu         0.7      1.55      6.13e- 1  6.83e-15      9.18
 8 mu         0.8      1.38      2.33e- 1  6.15e-22     17.2 
 9 mu         0.9      1.38      6.19e- 4  3.98e-34     15.5 
10 mu_1       0.1      6.30      9.82e-12  9.25e-41    495.  
11 mu_1       0.2      1.15      1.46e- 6  1.45e-27     23.7 
12 mu_1       0.3      1.03      1.31e- 3  7.09e-20     16.5 
13 mu_1       0.4      0.997     7.68e- 2  1.91e-14     13.8 
14 mu_1       0.5      1.08      3.92e- 1  2.92e-10     12.4 
15 mu_1       0.6      1.39      6.64e- 1  6.48e-11     11.3 
16 mu_1       0.7      1.54      7.22e- 1  6.66e-16      9.30
17 mu_1       0.8      1.38      1.75e- 1  5.24e-23     18.3 
18 mu_1       0.9      1.37      4.49e- 4  3.02e-35     16.0 
19 mu_0       0.1      8.64      8.72e-13  2.28e-43    752.  
20 mu_0       0.2      1.68      1.83e- 7  8.04e-30     54.1 
21 mu_0       0.3      1.05      2.99e- 4  6.75e-22     12.9 
22 mu_0       0.4      1.02      3.09e- 2  2.83e-16     16.8 
23 mu_0       0.5      1.04      2.71e- 1  6.49e-12     12.4 
24 mu_0       0.6      1.30      6.74e- 1  1.33e- 9      9.31
25 mu_0       0.7      1.56      7.03e- 1  2.12e-14     10.9 
26 mu_0       0.8      1.38      3.21e- 1  2.87e-21     12.8 
27 mu_0       0.9      1.41      2.24e- 3  3.71e-33     22.3 
[1] "Total run time was 236.679 seconds"
