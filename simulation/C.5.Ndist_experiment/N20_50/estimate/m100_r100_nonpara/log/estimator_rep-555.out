
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3577"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 2  3  2  5  1  7  2  2  3  2  2  2  2  2  5  6  4  4  3  8  2  2  3  1  2  2 
46 47 48 49 50 
 3  4  7  3  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03728 0.34021 0.60698 1.00000 5.00000 
[1] "event indicator table: "

   0    1 
2111 1466 
[1] "treatment indicator table: "

   0    1 
1329 2248 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1767
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 41"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 83"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1810
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 34"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 63"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 73"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 95"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 192.269 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.438 0.170 
 2 mu         0.1   0.2 0.547 0.211 
 3 mu         0.1   0.3 0.621 0.244 
 4 mu         0.1   0.4 0.703 0.269 
 5 mu         0.1   0.5 0.733 0.285 
 6 mu         0.2   0.1 0.377 0.0536
 7 mu         0.2   0.2 0.470 0.0668
 8 mu         0.2   0.3 0.531 0.0749
 9 mu         0.2   0.4 0.611 0.0924
10 mu         0.2   0.5 0.639 0.0892
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      1.04        0.0762 0.0000000160     44.9 
 2 mu         0.2      0.958       0.679  0.000698          7.16
 3 mu         0.3      0.940       0.934  0.0649            2.85
 4 mu         0.4      0.955       0.959  0.390             1.65
 5 mu         0.5      0.997       0.985  0.639             1.52
 6 mu         0.6      1.02        1.01   0.655             1.33
 7 mu         0.7      1.01        1.01   0.769             1.35
 8 mu         0.8      1.01        1.01   0.636             1.45
 9 mu         0.9      1.00        1.01   0.295             1.87
10 mu_1       0.1      0.962       0.151  0.0000000680     23.2 
11 mu_1       0.2      0.962       0.810  0.00149           4.99
12 mu_1       0.3      0.938       0.942  0.0927            2.64
13 mu_1       0.4      0.961       0.961  0.437             1.59
14 mu_1       0.5      1.00        0.984  0.677             1.50
15 mu_1       0.6      1.02        1.01   0.659             1.33
16 mu_1       0.7      1.01        1.01   0.749             1.36
17 mu_1       0.8      1.01        1.01   0.623             1.46
18 mu_1       0.9      1.00        1.01   0.279             1.94
19 mu_0       0.1      1.05        0.0673 0.0000000102     47.4 
20 mu_0       0.2      0.957       0.636  0.000501          7.70
21 mu_0       0.3      0.941       0.934  0.0530            2.95
22 mu_0       0.4      0.951       0.946  0.359             1.69
23 mu_0       0.5      0.991       0.989  0.600             1.54
24 mu_0       0.6      1.02        1.01   0.648             1.38
25 mu_0       0.7      1.01        1.01   0.788             1.32
26 mu_0       0.8      1.01        1.00   0.689             1.43
27 mu_0       0.9      1.02        1.01   0.440             1.74
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.0435     2.94e-13  8.61e-43      3.42
 2 mu         0.2     1.00       3.18e- 7  5.39e-29     51.1 
 3 mu         0.3     1.84       6.05e- 4  5.94e-21     46.4 
 4 mu         0.4     1.75       6.05e- 2  2.84e-15     51.9 
 5 mu         0.5     1.37       4.25e- 1  6.80e-11      8.08
 6 mu         0.6     1.24       8.64e- 1  2.39e- 7      6.71
 7 mu         0.7     1.18       7.13e- 1  3.69e- 9     12.6 
 8 mu         0.8     1.07       1.91e- 1  3.73e-15     13.7 
 9 mu         0.9     0.971      6.38e- 4  5.57e-26     15.8 
10 mu_1       0.1     0.104      1.99e-12  8.43e-42      7.88
11 mu_1       0.2     1.28       1.05e- 6  2.64e-28     58.9 
12 mu_1       0.3     1.90       1.22e- 3  1.94e-20     54.7 
13 mu_1       0.4     1.70       9.22e- 2  6.95e-15     45.9 
14 mu_1       0.5     1.35       5.03e- 1  1.33e-10      7.92
15 mu_1       0.6     1.23       7.97e- 1  3.89e- 7      6.44
16 mu_1       0.7     1.17       6.40e- 1  1.27e- 9     12.9 
17 mu_1       0.8     1.06       1.55e- 1  1.12e-15     14.5 
18 mu_1       0.9     0.967      4.30e- 4  1.49e-26     16.1 
19 mu_0       0.1     0.0367     1.09e-13  2.04e-44      2.92
20 mu_0       0.2     0.930      1.44e- 7  1.43e-30     49.1 
21 mu_0       0.3     1.81       3.40e- 4  1.80e-22     42.8 
22 mu_0       0.4     1.79       3.93e- 2  1.01e-16     55.8 
23 mu_0       0.5     1.39       3.19e- 1  2.89e-12     10.4 
24 mu_0       0.6     1.25       9.61e- 1  1.27e- 8      7.12
25 mu_0       0.7     1.21       8.62e- 1  9.35e- 9     12.0 
26 mu_0       0.8     1.10       3.04e- 1  1.42e-14     10.2 
27 mu_0       0.9     1.01       2.22e- 3  4.24e-25     17.6 
[1] "Total run time was 195.473 seconds"
