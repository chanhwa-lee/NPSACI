
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3470"
[1] "cluster size dist'n: "

20 21 22 24 25 26 27 29 31 32 33 34 35 36 37 38 40 42 43 44 45 46 47 48 49 50 
 5  2  3  4  7  5  3  5  4  5  5  4  4  3  3  2  2  7  6  2  5  4  3  1  3  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03296 0.36060 0.62125 1.00000 6.31854 
[1] "event indicator table: "

   0    1 
1999 1471 
[1] "treatment indicator table: "

   0    1 
1268 2202 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1743
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 22"
[1] "     Cluster: 28"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1727
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 37"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 77"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 255.907 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.457 0.119 
 2 mu         0.1   0.2 0.471 0.0974
 3 mu         0.1   0.3 0.535 0.120 
 4 mu         0.1   0.4 0.542 0.105 
 5 mu         0.1   0.5 0.540 0.0900
 6 mu         0.2   0.1 0.410 0.0597
 7 mu         0.2   0.2 0.478 0.0559
 8 mu         0.2   0.3 0.534 0.0614
 9 mu         0.2   0.4 0.576 0.0573
10 mu         0.2   0.5 0.613 0.0549
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.770        0.363 0.0000000875      7.38
 2 mu         0.2      0.950        0.895 0.000628          2.96
 3 mu         0.3      0.983        0.980 0.0373            1.96
 4 mu         0.4      0.980        0.981 0.299             1.43
 5 mu         0.5      0.998        0.991 0.649             1.34
 6 mu         0.6      1.00         1.00  0.770             1.35
 7 mu         0.7      1.00         1.02  0.796             1.25
 8 mu         0.8      1.02         1.04  0.618             1.47
 9 mu         0.9      1.01         1.02  0.161             2.06
10 mu_1       0.1      0.881        0.623 0.000000391       7.25
11 mu_1       0.2      0.972        0.925 0.00142           2.87
12 mu_1       0.3      0.985        0.991 0.0580            1.94
13 mu_1       0.4      0.983        0.977 0.371             1.44
14 mu_1       0.5      1.00         0.996 0.652             1.30
15 mu_1       0.6      1.00         1.01  0.767             1.35
16 mu_1       0.7      1.00         1.02  0.788             1.26
17 mu_1       0.8      1.02         1.04  0.600             1.47
18 mu_1       0.9      1.01         1.02  0.150             2.13
19 mu_0       0.1      0.758        0.331 0.0000000538      7.39
20 mu_0       0.2      0.944        0.887 0.000430          3.13
21 mu_0       0.3      0.983        0.978 0.0285            1.96
22 mu_0       0.4      0.978        0.978 0.250             1.44
23 mu_0       0.5      0.996        0.993 0.647             1.39
24 mu_0       0.6      1.00         1.00  0.774             1.36
25 mu_0       0.7      1.00         1.01  0.795             1.27
26 mu_0       0.8      1.02         1.02  0.688             1.44
27 mu_0       0.9      1.02         1.02  0.243             1.57
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.56      2.23e-13  7.51e-39     77.3 
 2 mu         0.2      1.22      1.69e- 7  1.65e-25     28.1 
 3 mu         0.3      1.21      2.37e- 4  8.12e-18     12.6 
 4 mu         0.4      0.931     1.81e- 2  1.84e-12     12.3 
 5 mu         0.5      0.703     1.78e- 1  2.03e- 8      6.10
 6 mu         0.6      0.874     5.61e- 1  2.02e- 7      3.53
 7 mu         0.7      1.25      1.12e+ 0  4.29e-11      5.44
 8 mu         0.8      1.30      5.78e- 1  2.23e-16      8.57
 9 mu         0.9      1.07      4.87e- 3  1.48e-25     14.1 
10 mu_1       0.1      1.76      1.28e-12  6.90e-38     68.2 
11 mu_1       0.2      1.11      6.47e- 7  7.58e-25     16.9 
12 mu_1       0.3      1.20      5.26e- 4  2.49e-17     14.3 
13 mu_1       0.4      0.865     2.94e- 2  4.22e-12     11.6 
14 mu_1       0.5      0.696     2.21e- 1  3.74e- 8      5.85
15 mu_1       0.6      0.916     6.33e- 1  2.97e- 8      3.33
16 mu_1       0.7      1.27      1.06e+ 0  5.41e-12      5.70
17 mu_1       0.8      1.29      4.73e- 1  2.46e-17      8.50
18 mu_1       0.9      1.05      3.53e- 3  1.45e-26     14.0 
19 mu_0       0.1      1.54      1.06e-13  6.82e-40     78.3 
20 mu_0       0.2      1.25      5.56e- 8  1.68e-26     30.9 
21 mu_0       0.3      1.22      9.92e- 5  9.47e-19     11.8 
22 mu_0       0.4      0.975     1.17e- 2  2.50e-13     12.9 
23 mu_0       0.5      0.710     1.26e- 1  3.32e- 9      7.46
24 mu_0       0.6      0.811     4.56e- 1  4.60e- 7      3.84
25 mu_0       0.7      1.20      8.86e- 1  1.30e-10      4.83
26 mu_0       0.8      1.35      6.59e- 1  1.02e-15      8.87
27 mu_0       0.9      1.24      1.42e- 2  1.35e-24     17.1 
[1] "Total run time was 259.703 seconds"
