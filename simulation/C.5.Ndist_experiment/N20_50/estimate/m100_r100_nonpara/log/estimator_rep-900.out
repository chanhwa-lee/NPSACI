
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3547"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 3  4  3  3  2  4  5  1  2  3  4  3  2  1  1  4  3  3  4  5  4  8  3  2  5  2 
46 47 48 49 50 
 5  4  2  4  1 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02715 0.33398 0.58192 1.00000 4.39494 
[1] "event indicator table: "

   0    1 
2082 1465 
[1] "treatment indicator table: "

   0    1 
1329 2218 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1797
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 38"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1750
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 78"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 382.354 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.428 0.0607
 2 mu         0.1   0.2 0.502 0.0502
 3 mu         0.1   0.3 0.542 0.0517
 4 mu         0.1   0.4 0.580 0.0635
 5 mu         0.1   0.5 0.601 0.0672
 6 mu         0.2   0.1 0.360 0.0368
 7 mu         0.2   0.2 0.443 0.0266
 8 mu         0.2   0.3 0.497 0.0271
 9 mu         0.2   0.4 0.531 0.0293
10 mu         0.2   0.5 0.560 0.0301
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.02         0.851   0.0111       5.63
 2 mu         0.2      0.957        0.955   0.370        2.38
 3 mu         0.3      1.02         1.01    0.380        1.77
 4 mu         0.4      1.03         1.02    0.665        1.54
 5 mu         0.5      1.01         1.01    0.708        1.41
 6 mu         0.6      1.02         1.01    0.795        1.40
 7 mu         0.7      0.999        1.01    0.758        1.28
 8 mu         0.8      0.973        0.970   0.706        1.34
 9 mu         0.9      0.986        1.00    0.511        1.82
10 mu_1       0.1      0.955        0.846   0.0276       2.80
11 mu_1       0.2      0.979        0.936   0.219        2.33
12 mu_1       0.3      1.03         1.01    0.451        1.63
13 mu_1       0.4      1.02         1.02    0.664        1.56
14 mu_1       0.5      1.01         1.02    0.722        1.38
15 mu_1       0.6      1.02         1.01    0.785        1.39
16 mu_1       0.7      0.996        0.998   0.757        1.28
17 mu_1       0.8      0.972        0.965   0.704        1.36
18 mu_1       0.9      0.987        1.01    0.493        1.86
19 mu_0       0.1      1.02         0.838   0.00924      6.00
20 mu_0       0.2      0.952        0.949   0.339        2.39
21 mu_0       0.3      1.02         1.00    0.350        1.83
22 mu_0       0.4      1.03         1.02    0.666        1.52
23 mu_0       0.5      1.01         1.02    0.694        1.45
24 mu_0       0.6      1.02         1.01    0.779        1.41
25 mu_0       0.7      1.01         1.00    0.737        1.27
26 mu_0       0.8      0.976        0.985   0.711        1.29
27 mu_0       0.9      0.974        0.953   0.616        1.48
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.845     2.53e-12  2.39e-39     76.9 
 2 mu         0.2      0.540     9.68e- 7  5.26e-27     18.3 
 3 mu         0.3      1.12      1.11e- 3  8.73e-20      8.83
 4 mu         0.4      1.31      6.41e- 2  1.16e-14     10.3 
 5 mu         0.5      1.08      4.33e- 1  1.09e-10      7.14
 6 mu         0.6      0.956     4.63e- 1  7.15e-11      5.29
 7 mu         0.7      0.960     5.62e- 1  5.62e-16      3.65
 8 mu         0.8      1.11      1.70e- 1  2.57e-23      6.44
 9 mu         0.9      1.13      1.09e- 3  4.68e-36     12.3 
10 mu_1       0.1      0.809     1.49e-11  2.39e-38     65.4 
11 mu_1       0.2      0.637     3.03e- 6  2.63e-26     17.6 
12 mu_1       0.3      1.22      2.38e- 3  2.91e-19      8.99
13 mu_1       0.4      1.29      9.76e- 2  2.89e-14      9.77
14 mu_1       0.5      1.05      3.66e- 1  2.18e-10      6.69
15 mu_1       0.6      0.952     4.27e- 1  1.01e-11      5.51
16 mu_1       0.7      0.964     4.89e- 1  6.84e-17      3.87
17 mu_1       0.8      1.12      1.27e- 1  2.73e-24      6.77
18 mu_1       0.9      1.12      7.96e- 4  4.43e-37     12.1 
19 mu_0       0.1      0.849     1.16e-12  0            78.1 
20 mu_0       0.2      0.515     4.77e- 7  0            18.5 
21 mu_0       0.3      1.07      5.66e- 4  0             9.72
22 mu_0       0.4      1.33      4.17e- 2  0            10.7 
23 mu_0       0.5      1.12      5.03e- 1  0             7.59
24 mu_0       0.6      0.961     4.37e- 1  0             4.96
25 mu_0       0.7      0.950     4.17e- 1  0             4.57
26 mu_0       0.8      1.06      2.85e- 1  0             5.15
27 mu_0       0.9      1.21      3.20e- 3  0            13.3 
[1] "Total run time was 388.652 seconds"
