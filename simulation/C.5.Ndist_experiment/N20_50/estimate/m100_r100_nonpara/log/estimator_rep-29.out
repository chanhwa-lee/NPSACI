
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3460"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 38 39 40 41 43 44 45 46 47 
 1  3  5  2  7  4  2  5  6  3  4  4  3  5  2  2  5  1  1  2  2  5  2  1  5  5 
48 49 50 
 5  4  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03461 0.33263 0.60720 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
2074 1386 
[1] "treatment indicator table: "

   0    1 
1235 2225 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1762
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1698
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 202.886 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.368 0.0597
 2 mu         0.1   0.2 0.451 0.0697
 3 mu         0.1   0.3 0.533 0.0880
 4 mu         0.1   0.4 0.560 0.0821
 5 mu         0.1   0.5 0.587 0.0824
 6 mu         0.2   0.1 0.324 0.0357
 7 mu         0.2   0.2 0.408 0.0387
 8 mu         0.2   0.3 0.475 0.0563
 9 mu         0.2   0.4 0.512 0.0462
10 mu         0.2   0.5 0.534 0.0466
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      1.00         0.745 0.000000652      7.14
 2 mu         0.2      0.983        0.919 0.00485          2.78
 3 mu         0.3      1.01         0.975 0.194            2.96
 4 mu         0.4      0.993        1.01  0.392            1.50
 5 mu         0.5      0.982        0.965 0.592            1.38
 6 mu         0.6      0.996        0.993 0.662            1.34
 7 mu         0.7      1.00         1.00  0.697            1.45
 8 mu         0.8      0.998        0.976 0.590            1.43
 9 mu         0.9      0.994        0.975 0.380            1.77
10 mu_1       0.1      0.976        0.832 0.00000260       4.52
11 mu_1       0.2      0.985        0.944 0.00978          2.73
12 mu_1       0.3      1.01         0.986 0.200            2.75
13 mu_1       0.4      0.992        1.01  0.411            1.47
14 mu_1       0.5      0.982        0.968 0.618            1.37
15 mu_1       0.6      0.997        0.996 0.650            1.34
16 mu_1       0.7      1.00         1.00  0.711            1.43
17 mu_1       0.8      0.998        0.980 0.590            1.43
18 mu_1       0.9      0.996        0.969 0.385            1.81
19 mu_0       0.1      1.01         0.734 0.000000435      7.59
20 mu_0       0.2      0.982        0.940 0.00361          2.80
21 mu_0       0.3      1.01         0.986 0.163            3.04
22 mu_0       0.4      0.995        1.01  0.380            1.60
23 mu_0       0.5      0.983        0.977 0.566            1.41
24 mu_0       0.6      0.994        0.987 0.680            1.35
25 mu_0       0.7      1.00         0.997 0.665            1.49
26 mu_0       0.8      0.999        0.986 0.593            1.44
27 mu_0       0.9      0.980        0.948 0.337            1.52
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.654     7.90e-14  4.80e-39     33.9 
 2 mu         0.2      3.68      9.62e- 8  1.05e-25    175.  
 3 mu         0.3      2.03      3.25e- 4  5.19e-18     39.7 
 4 mu         0.4      1.12      3.01e- 2  1.17e-12     20.1 
 5 mu         0.5      1.06      2.07e- 1  1.30e- 8     10.1 
 6 mu         0.6      1.15      3.99e- 1  6.28e- 6      9.86
 7 mu         0.7      0.999     5.61e- 1  3.37e-10      5.09
 8 mu         0.8      1.18      4.25e- 1  1.52e-16      6.91
 9 mu         0.9      1.13      2.38e- 3  7.99e-28     15.9 
10 mu_1       0.1      1.26      5.80e-13  4.41e-38     63.5 
11 mu_1       0.2      3.76      3.07e- 7  4.84e-25    164.  
12 mu_1       0.3      1.74      6.95e- 4  1.59e-17     29.4 
13 mu_1       0.4      1.09      5.07e- 2  2.69e-12     17.1 
14 mu_1       0.5      1.07      2.08e- 1  2.39e- 8      8.88
15 mu_1       0.6      1.14      4.57e- 1  1.96e- 6      9.47
16 mu_1       0.7      0.997     5.75e- 1  9.03e-11      5.05
17 mu_1       0.8      1.20      3.50e- 1  3.57e-17      6.95
18 mu_1       0.9      1.10      1.72e- 3  1.66e-28     15.8 
19 mu_0       0.1      0.587     2.39e-14  4.35e-40     30.6 
20 mu_0       0.2      3.67      4.35e- 8  1.08e-26    178.  
21 mu_0       0.3      2.15      1.66e- 4  6.05e-19     44.1 
22 mu_0       0.4      1.15      1.46e- 2  1.60e-13     22.0 
23 mu_0       0.5      1.04      1.64e- 1  2.12e- 9     11.2 
24 mu_0       0.6      1.16      3.84e- 1  3.97e- 6     10.5 
25 mu_0       0.7      1.00      4.68e- 1  9.13e-10      5.20
26 mu_0       0.8      1.10      4.88e- 1  6.18e-16      6.76
27 mu_0       0.9      1.36      8.26e- 3  6.49e-27     16.5 
[1] "Total run time was 206.429 seconds"
