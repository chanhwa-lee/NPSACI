
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3552"
[1] "cluster size dist'n: "

20 21 22 23 24 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 
 3  3  1  2  3  5  7  5  4  4  2  2  2  4  2  4  6  4  2  3  3  2  3  1  6  1 
47 48 49 50 
 2  3  4  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04024 0.36102 0.61640 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
2083 1469 
[1] "treatment indicator table: "

   0    1 
1378 2174 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1787
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1765
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 257.018 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.506 0.213 
 2 mu         0.1   0.2 0.582 0.273 
 3 mu         0.1   0.3 0.712 0.315 
 4 mu         0.1   0.4 0.763 0.341 
 5 mu         0.1   0.5 0.854 0.382 
 6 mu         0.2   0.1 0.341 0.0548
 7 mu         0.2   0.2 0.379 0.0678
 8 mu         0.2   0.3 0.484 0.0724
 9 mu         0.2   0.4 0.530 0.0754
10 mu         0.2   0.5 0.609 0.0822
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      1.34         0.495 0.000000849     67.2 
 2 mu         0.2      1.07         0.906 0.00648         12.7 
 3 mu         0.3      0.991        0.974 0.208            1.94
 4 mu         0.4      0.969        0.973 0.511            1.59
 5 mu         0.5      0.981        0.967 0.617            1.49
 6 mu         0.6      1.01         1.01  0.712            1.50
 7 mu         0.7      1.01         1.02  0.648            1.31
 8 mu         0.8      1.02         1.02  0.199            1.45
 9 mu         0.9      1.04         1.04  0.00364          3.23
10 mu_1       0.1      1.44         0.689 0.00000308      68.6 
11 mu_1       0.2      1.04         0.954 0.0120           6.97
12 mu_1       0.3      0.988        0.987 0.269            1.80
13 mu_1       0.4      0.967        0.971 0.521            1.63
14 mu_1       0.5      0.985        0.977 0.653            1.45
15 mu_1       0.6      1.01         1.01  0.720            1.51
16 mu_1       0.7      1.01         1.02  0.619            1.31
17 mu_1       0.8      1.02         1.01  0.178            1.47
18 mu_1       0.9      1.04         1.02  0.00299          3.39
19 mu_0       0.1      1.33         0.464 0.000000600     67.0 
20 mu_0       0.2      1.08         0.906 0.00511         14.1 
21 mu_0       0.3      0.993        0.984 0.182            2.00
22 mu_0       0.4      0.970        0.974 0.505            1.57
23 mu_0       0.5      0.977        0.959 0.580            1.52
24 mu_0       0.6      1.00         0.999 0.699            1.49
25 mu_0       0.7      1.01         1.01  0.716            1.31
26 mu_0       0.8      1.02         1.02  0.280            1.40
27 mu_0       0.9      1.04         1.04  0.00946          1.84
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      7.79      5.60e-12  1.42e-37    631.  
 2 mu         0.2      5.26      1.81e- 6  1.56e-24    146.  
 3 mu         0.3      2.35      2.34e- 3  5.13e-17    119.  
 4 mu         0.4      1.26      9.15e- 2  8.70e-12     40.9 
 5 mu         0.5      1.12      6.25e- 1  7.70e- 8     10.5 
 6 mu         0.6      1.12      7.53e- 1  1.72e- 7      7.58
 7 mu         0.7      0.945     6.22e- 1  1.01e-11      3.52
 8 mu         0.8      1.17      1.76e- 1  7.89e-18      8.27
 9 mu         0.9      1.02      4.43e- 4  1.84e-28     21.0 
10 mu_1       0.1      8.69      3.36e-11  1.30e-36    631.  
11 mu_1       0.2      4.53      5.97e- 6  7.16e-24    137.  
12 mu_1       0.3      2.00      4.77e- 3  1.57e-16    103.  
13 mu_1       0.4      1.15      1.46e- 1  1.99e-11     26.5 
14 mu_1       0.5      1.13      6.56e- 1  1.41e- 7     11.1 
15 mu_1       0.6      1.11      8.15e- 1  2.86e- 8      6.66
16 mu_1       0.7      0.936     5.85e- 1  1.44e-12      3.40
17 mu_1       0.8      1.19      1.36e- 1  9.86e-19      8.78
18 mu_1       0.9      0.992     2.88e- 4  2.04e-29     21.4 
19 mu_0       0.1      7.69      2.51e-12  1.32e-38    631.  
20 mu_0       0.2      5.44      8.44e- 7  1.63e-25    164.  
21 mu_0       0.3      2.49      1.30e- 3  6.10e-18    126.  
22 mu_0       0.4      1.34      6.12e- 2  1.21e-12     50.5 
23 mu_0       0.5      1.11      5.11e- 1  1.28e- 8      9.95
24 mu_0       0.6      1.14      8.53e- 1  3.86e- 7      8.94
25 mu_0       0.7      0.967     5.44e- 1  3.03e-11      3.79
26 mu_0       0.8      1.09      3.50e- 1  3.55e-17      6.55
27 mu_0       0.9      1.31      1.90e- 3  1.65e-27     17.5 
[1] "Total run time was 261.279 seconds"
