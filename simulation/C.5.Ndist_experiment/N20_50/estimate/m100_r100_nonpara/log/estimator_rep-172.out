
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3364"
[1] "cluster size dist'n: "

20 21 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 47 
 3  6  4  2 10  4  5  3  3  6  1  2  2  4  2  3  4  5  1  1  4  3  2  6  4  2 
48 49 50 
 2  4  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02095 0.31477 0.60162 1.00000 5.87694 
[1] "event indicator table: "

   0    1 
1960 1404 
[1] "treatment indicator table: "

   0    1 
1330 2034 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1685
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1679
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 17"
[1] "     Cluster: 22"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 293.733 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.782 0.354 
 2 mu         0.1   0.2 0.980 0.424 
 3 mu         0.1   0.3 1.06  0.450 
 4 mu         0.1   0.4 1.08  0.468 
 5 mu         0.1   0.5 1.19  0.499 
 6 mu         0.2   0.1 0.372 0.0401
 7 mu         0.2   0.2 0.465 0.0502
 8 mu         0.2   0.3 0.525 0.0513
 9 mu         0.2   0.4 0.551 0.0470
10 mu         0.2   0.5 0.602 0.0549
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      1.65         0.521 0.0000120      68.9 
 2 mu         0.2      0.991        0.973 0.0267          3.62
 3 mu         0.3      1.02         1.01  0.382           2.08
 4 mu         0.4      0.999        0.986 0.644           1.57
 5 mu         0.5      0.990        1.00  0.644           1.50
 6 mu         0.6      1.01         1.01  0.776           1.34
 7 mu         0.7      1.03         1.01  0.704           1.49
 8 mu         0.8      1.01         1.01  0.571           1.59
 9 mu         0.9      0.976        0.956 0.0981          1.89
10 mu_1       0.1      1.18         0.736 0.0000403      29.3 
11 mu_1       0.2      0.983        0.987 0.0457          2.16
12 mu_1       0.3      1.02         1.01  0.456           2.00
13 mu_1       0.4      0.996        0.975 0.645           1.55
14 mu_1       0.5      0.991        1.00  0.644           1.51
15 mu_1       0.6      1.01         0.997 0.780           1.34
16 mu_1       0.7      1.03         1.01  0.681           1.52
17 mu_1       0.8      1.01         1.01  0.564           1.60
18 mu_1       0.9      0.979        0.952 0.0896          1.92
19 mu_0       0.1      1.70         0.494 0.00000882     73.3 
20 mu_0       0.2      0.993        0.976 0.0219          4.11
21 mu_0       0.3      1.02         1.00  0.349           2.11
22 mu_0       0.4      1.00         0.994 0.641           1.63
23 mu_0       0.5      0.989        0.997 0.643           1.49
24 mu_0       0.6      1.00         1.01  0.759           1.40
25 mu_0       0.7      1.02         1.00  0.757           1.42
26 mu_0       0.8      1.02         1.02  0.573           1.52
27 mu_0       0.9      0.948        0.954 0.174           1.61
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.91      1.11e-11  1.14e-36    176.  
 2 mu         0.2      1.96      3.17e- 6  1.12e-23     82.2 
 3 mu         0.3      1.28      2.21e- 3  3.20e-16     19.4 
 4 mu         0.4      1.11      1.07e- 1  4.66e-11      9.58
 5 mu         0.5      1.07      4.62e- 1  2.05e- 7      6.94
 6 mu         0.6      0.904     5.91e- 1  6.20e- 6      3.58
 7 mu         0.7      0.953     4.70e- 1  2.05e- 9      4.82
 8 mu         0.8      1.23      2.06e- 1  1.43e-14      7.57
 9 mu         0.9      1.47      8.08e- 4  4.27e-25     30.3 
10 mu_1       0.1      2.39      8.12e-11  1.03e-35    207.  
11 mu_1       0.2      1.80      9.64e- 6  5.01e-23     48.3 
12 mu_1       0.3      1.18      4.83e- 3  9.59e-16     15.3 
13 mu_1       0.4      1.12      1.42e- 1  1.05e-10      8.66
14 mu_1       0.5      1.06      4.31e- 1  4.10e- 7      6.62
15 mu_1       0.6      0.894     6.07e- 1  1.22e- 6      3.77
16 mu_1       0.7      0.970     4.74e- 1  3.45e-10      5.03
17 mu_1       0.8      1.25      1.61e- 1  2.68e-15      7.62
18 mu_1       0.9      1.49      5.78e- 4  1.16e-25     33.6 
19 mu_0       0.1      1.85      3.41e-12  0           172.  
20 mu_0       0.2      2.00      1.55e- 6  0            90.6 
21 mu_0       0.3      1.33      1.10e- 3  0            21.1 
22 mu_0       0.4      1.10      7.56e- 2  0            10.2 
23 mu_0       0.5      1.09      5.51e- 1  0             7.25
24 mu_0       0.6      0.919     4.85e- 1  0             3.65
25 mu_0       0.7      0.913     4.82e- 1  0             4.33
26 mu_0       0.8      1.15      3.27e- 1  0             7.36
27 mu_0       0.9      1.28      2.87e- 3  0            19.1 
[1] "Total run time was 298.004 seconds"
