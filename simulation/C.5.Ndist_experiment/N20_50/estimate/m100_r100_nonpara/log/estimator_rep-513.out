
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3535"
[1] "cluster size dist'n: "

20 21 22 24 25 26 27 28 29 30 31 32 34 35 36 37 38 39 40 41 42 43 44 45 46 47 
 3  3  2  5  4  2  4  2  4  5  2  6  5  2  4  4  5  4  3  3  2  1  5  3  5  4 
48 49 50 
 3  3  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03624 0.33328 0.61230 1.00000 7.00000 
[1] "event indicator table: "

   0    1 
2065 1470 
[1] "treatment indicator table: "

   0    1 
1273 2262 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1812
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1723
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 263.734 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.373 0.0965
 2 mu         0.1   0.2 0.475 0.109 
 3 mu         0.1   0.3 0.588 0.106 
 4 mu         0.1   0.4 0.639 0.106 
 5 mu         0.1   0.5 0.698 0.131 
 6 mu         0.2   0.1 0.370 0.0626
 7 mu         0.2   0.2 0.452 0.0522
 8 mu         0.2   0.3 0.561 0.0467
 9 mu         0.2   0.4 0.641 0.0565
10 mu         0.2   0.5 0.696 0.0786
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.975        0.342 0.0000441      8.26
 2 mu         0.2      1.05         1.06  0.0420         2.42
 3 mu         0.3      1.02         1.02  0.247          2.50
 4 mu         0.4      1.00         0.995 0.600          1.53
 5 mu         0.5      0.995        0.981 0.695          1.41
 6 mu         0.6      0.990        0.980 0.745          1.31
 7 mu         0.7      1.00         1.01  0.785          1.25
 8 mu         0.8      1.02         1.01  0.712          1.44
 9 mu         0.9      0.989        0.961 0.297          1.66
10 mu_1       0.1      0.958        0.588 0.000145       5.82
11 mu_1       0.2      1.06         1.07  0.0696         2.28
12 mu_1       0.3      1.01         0.986 0.245          2.40
13 mu_1       0.4      1.00         0.991 0.657          1.49
14 mu_1       0.5      0.994        0.972 0.674          1.40
15 mu_1       0.6      0.991        0.980 0.760          1.31
16 mu_1       0.7      1.00         1.00  0.788          1.26
17 mu_1       0.8      1.02         1.01  0.703          1.46
18 mu_1       0.9      0.987        0.963 0.285          1.67
19 mu_0       0.1      0.977        0.313 0.0000330      8.80
20 mu_0       0.2      1.04         1.05  0.0350         2.45
21 mu_0       0.3      1.02         1.01  0.248          2.54
22 mu_0       0.4      1.00         0.998 0.558          1.56
23 mu_0       0.5      0.997        0.991 0.716          1.41
24 mu_0       0.6      0.989        0.973 0.721          1.31
25 mu_0       0.7      0.998        1.00  0.768          1.24
26 mu_0       0.8      1.01         1.00  0.748          1.36
27 mu_0       0.9      1.01         0.987 0.405          1.62
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.660     2.05e-13  6.19e-42     50.1 
 2 mu         0.2      1.33      3.59e- 7  1.94e-28     81.6 
 3 mu         0.3      1.05      3.50e- 4  1.42e-20     25.5 
 4 mu         0.4      1.33      3.84e- 2  5.11e-15     18.1 
 5 mu         0.5      1.29      4.85e- 1  9.77e-11      7.30
 6 mu         0.6      1.23      1.03e+ 0  2.86e- 7      8.02
 7 mu         0.7      1.08      6.02e- 1  1.61e- 8     13.6 
 8 mu         0.8      0.897     2.30e- 1  7.25e-14      4.11
 9 mu         0.9      1.29      1.26e- 3  2.16e-23     19.0 
10 mu_1       0.1      0.982     1.22e-12  6.06e-41     66.8 
11 mu_1       0.2      1.28      1.33e- 6  9.47e-28     79.6 
12 mu_1       0.3      1.09      7.59e- 4  4.64e-20     19.2 
13 mu_1       0.4      1.35      6.12e- 2  1.25e-14     16.3 
14 mu_1       0.5      1.27      6.06e- 1  1.91e-10      8.10
15 mu_1       0.6      1.22      8.28e- 1  4.66e- 7      8.34
16 mu_1       0.7      1.06      5.65e- 1  4.49e- 9     13.3 
17 mu_1       0.8      0.904     1.85e- 1  1.77e-14      4.25
18 mu_1       0.9      1.29      9.21e- 4  4.69e-24     19.8 
19 mu_0       0.1      0.624     9.24e-14  1.50e-43     48.2 
20 mu_0       0.2      1.34      1.16e- 7  5.26e-30     82.1 
21 mu_0       0.3      1.03      1.75e- 4  4.42e-22     29.3 
22 mu_0       0.4      1.31      2.31e- 2  1.85e-16     19.3 
23 mu_0       0.5      1.32      3.34e- 1  4.25e-12      9.35
24 mu_0       0.6      1.25      8.81e- 1  1.55e- 8      8.91
25 mu_0       0.7      1.12      6.00e- 1  4.32e- 8     14.5 
26 mu_0       0.8      0.871     3.26e- 1  2.92e-13      4.40
27 mu_0       0.9      1.29      4.34e- 3  1.74e-22     11.9 
[1] "Total run time was 268.133 seconds"
