
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3614"
[1] "cluster size dist'n: "

20 21 22 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 46 47 
 4  2  2  7  3  2  7  2  2  3  1  3  1  1  4  4  5  5  3  1  4  2  6  2  2  5 
48 49 50 
 9  3  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02048 0.31141 0.57879 1.00000 5.00000 
[1] "event indicator table: "

   0    1 
2134 1480 
[1] "treatment indicator table: "

   0    1 
1419 2195 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1899
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 58"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1715
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 198.586 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.451 0.0790
 2 mu         0.1   0.2 0.602 0.108 
 3 mu         0.1   0.3 0.602 0.0817
 4 mu         0.1   0.4 0.702 0.100 
 5 mu         0.1   0.5 0.699 0.0717
 6 mu         0.2   0.1 0.373 0.0263
 7 mu         0.2   0.2 0.484 0.0375
 8 mu         0.2   0.3 0.513 0.0279
 9 mu         0.2   0.4 0.586 0.0425
10 mu         0.2   0.5 0.614 0.0326
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.02         0.840    0.0176      3.60
 2 mu         0.2      1.02         0.989    0.406       1.76
 3 mu         0.3      1.02         0.988    0.595       1.78
 4 mu         0.4      1.02         1.02     0.665       1.52
 5 mu         0.5      1.01         0.995    0.558       1.51
 6 mu         0.6      0.975        0.966    0.695       1.37
 7 mu         0.7      0.973        0.974    0.671       1.24
 8 mu         0.8      1.01         1.02     0.691       1.37
 9 mu         0.9      1.02         1.03     0.233       1.51
10 mu_1       0.1      0.996        0.896    0.0406      2.76
11 mu_1       0.2      1.02         0.973    0.397       1.77
12 mu_1       0.3      1.02         1.01     0.673       1.74
13 mu_1       0.4      1.02         1.02     0.667       1.51
14 mu_1       0.5      1.01         0.992    0.549       1.51
15 mu_1       0.6      0.971        0.954    0.703       1.37
16 mu_1       0.7      0.975        0.976    0.676       1.24
17 mu_1       0.8      1.01         1.02     0.676       1.37
18 mu_1       0.9      1.02         1.02     0.216       1.52
19 mu_0       0.1      1.02         0.852    0.0151      3.72
20 mu_0       0.2      1.02         0.995    0.388       1.76
21 mu_0       0.3      1.02         0.984    0.561       1.79
22 mu_0       0.4      1.02         1.01     0.665       1.53
23 mu_0       0.5      1.02         0.997    0.568       1.51
24 mu_0       0.6      0.980        0.976    0.635       1.39
25 mu_0       0.7      0.968        0.973    0.659       1.25
26 mu_0       0.8      1.00         1.01     0.687       1.37
27 mu_0       0.9      1.02         1.04     0.379       1.56
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.55      2.36e-12  5.04e-37     94.5 
 2 mu         0.2      0.542     1.65e- 6  8.75e-25     11.2 
 3 mu         0.3      0.971     1.63e- 3  1.11e-17     14.3 
 4 mu         0.4      1.30      5.57e- 2  1.08e-12     24.8 
 5 mu         0.5      1.25      4.30e- 1  7.07e- 9      6.49
 6 mu         0.6      1.16      4.44e- 1  6.54e-10     10.3 
 7 mu         0.7      1.00      4.01e- 1  1.07e-14      5.04
 8 mu         0.8      1.06      1.61e- 1  1.25e-21      6.23
 9 mu         0.9      1.36      2.42e- 4  1.03e-33     20.0 
10 mu_1       0.1      1.01      1.68e-11  4.80e-36     37.8 
11 mu_1       0.2      0.508     5.37e- 6  4.17e-24      7.86
12 mu_1       0.3      1.09      3.62e- 3  3.53e-17     17.8 
13 mu_1       0.4      1.32      9.29e- 2  2.58e-12     23.3 
14 mu_1       0.5      1.24      4.17e- 1  1.35e- 8      7.45
15 mu_1       0.6      1.14      5.35e- 1  1.18e-10      9.84
16 mu_1       0.7      0.997     3.10e- 1  1.66e-15      5.19
17 mu_1       0.8      1.06      1.24e- 1  1.70e-22      6.60
18 mu_1       0.9      1.37      1.58e- 4  1.24e-34     20.7 
19 mu_0       0.1      1.61      8.49e-13  2.60e-38    101.  
20 mu_0       0.2      0.550     7.56e- 7  5.09e-26     13.4 
21 mu_0       0.3      0.922     7.75e- 4  7.38e-19     12.7 
22 mu_0       0.4      1.28      3.20e- 2  8.39e-14     25.9 
23 mu_0       0.5      1.26      3.36e- 1  6.58e-10      7.26
24 mu_0       0.6      1.19      4.89e- 1  1.46e- 9     10.9 
25 mu_0       0.7      1.02      4.63e- 1  3.17e-14      4.69
26 mu_0       0.8      1.04      2.21e- 1  5.58e-21      6.30
27 mu_0       0.9      1.25      9.97e- 4  9.15e-33     14.3 
[1] "Total run time was 201.955 seconds"
