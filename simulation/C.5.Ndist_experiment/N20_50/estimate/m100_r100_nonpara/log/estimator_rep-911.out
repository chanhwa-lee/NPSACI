
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3575"
[1] "cluster size dist'n: "

20 21 22 23 24 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 
 4  4  3  2  3  4  2  2  4  1  3  3  4  3  3  2  1  9  3  6  2  3  4  7  9  1 
47 49 50 
 1  5  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03345 0.34095 0.60239 1.00000 5.00000 
[1] "event indicator table: "

   0    1 
2073 1502 
[1] "treatment indicator table: "

   0    1 
1316 2259 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1753
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 39"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1822
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 14"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 230.991 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.538 0.0891
 2 mu         0.1   0.2 0.593 0.0915
 3 mu         0.1   0.3 0.670 0.104 
 4 mu         0.1   0.4 0.714 0.109 
 5 mu         0.1   0.5 0.796 0.111 
 6 mu         0.2   0.1 0.429 0.0613
 7 mu         0.2   0.2 0.525 0.0613
 8 mu         0.2   0.3 0.551 0.0556
 9 mu         0.2   0.4 0.586 0.0576
10 mu         0.2   0.5 0.643 0.0562
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.09         0.720  0.000147      8.54
 2 mu         0.2      1.00         0.925  0.0364        2.42
 3 mu         0.3      0.993        0.964  0.206         1.82
 4 mu         0.4      0.975        0.970  0.489         1.45
 5 mu         0.5      0.987        0.998  0.628         1.28
 6 mu         0.6      0.991        0.991  0.700         1.28
 7 mu         0.7      1.01         1.01   0.799         1.35
 8 mu         0.8      1.02         1.01   0.571         1.33
 9 mu         0.9      1.00         1.02   0.533         1.73
10 mu_1       0.1      1.05         0.821  0.000446      7.80
11 mu_1       0.2      1.00         0.952  0.0558        2.19
12 mu_1       0.3      0.988        0.980  0.244         1.81
13 mu_1       0.4      0.975        0.973  0.504         1.38
14 mu_1       0.5      0.988        1.02   0.645         1.29
15 mu_1       0.6      0.992        0.986  0.715         1.29
16 mu_1       0.7      1.01         1.01   0.801         1.37
17 mu_1       0.8      1.01         1.00   0.565         1.33
18 mu_1       0.9      1.00         1.03   0.521         1.78
19 mu_0       0.1      1.09         0.700  0.000114      8.62
20 mu_0       0.2      1.00         0.919  0.0316        2.53
21 mu_0       0.3      0.995        0.958  0.189         1.86
22 mu_0       0.4      0.974        0.972  0.479         1.49
23 mu_0       0.5      0.986        0.995  0.612         1.28
24 mu_0       0.6      0.988        0.995  0.676         1.26
25 mu_0       0.7      1.01         1.00   0.785         1.32
26 mu_0       0.8      1.02         1.02   0.593         1.36
27 mu_0       0.9      1.00         0.992  0.556         1.56
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.89      5.67e-13  1.93e-42    171.  
 2 mu         0.2      0.725     3.90e- 7  2.14e-28     26.1 
 3 mu         0.3      0.794     6.00e- 4  3.10e-20      9.58
 4 mu         0.4      1.03      3.68e- 2  1.70e-14      7.32
 5 mu         0.5      1.13      3.65e- 1  4.23e-10      7.46
 6 mu         0.6      1.33      9.47e- 1  2.54e-10      8.54
 7 mu         0.7      1.28      9.27e- 1  6.19e-15      5.92
 8 mu         0.8      1.07      2.60e- 1  1.64e-21      5.82
 9 mu         0.9      1.61      4.75e- 4  7.57e-33     20.4 
10 mu_1       0.1      1.19      4.00e-12  1.85e-41     85.3 
11 mu_1       0.2      0.729     1.25e- 6  1.03e-27     21.7 
12 mu_1       0.3      0.849     1.20e- 3  9.92e-20     10.6 
13 mu_1       0.4      1.05      6.37e- 2  4.07e-14      6.19
14 mu_1       0.5      1.14      4.60e- 1  8.11e-10      8.32
15 mu_1       0.6      1.34      9.26e- 1  2.12e-11      7.95
16 mu_1       0.7      1.25      7.91e- 1  4.42e-16      5.76
17 mu_1       0.8      1.07      2.32e- 1  1.03e-22      5.96
18 mu_1       0.9      1.65      3.50e- 4  4.21e-34     22.0 
19 mu_0       0.1      1.97      1.85e-13  8.74e-44    180.  
20 mu_0       0.2      0.724     1.35e- 7  1.09e-29     27.2 
21 mu_0       0.3      0.771     3.43e- 4  1.81e-21      9.45
22 mu_0       0.4      1.01      1.88e- 2  1.15e-15      8.14
23 mu_0       0.5      1.11      2.37e- 1  3.45e-11      7.43
24 mu_0       0.6      1.31      8.20e- 1  6.04e-10      9.44
25 mu_0       0.7      1.34      8.81e- 1  1.96e-14      6.28
26 mu_0       0.8      1.10      3.49e- 1  7.81e-21      6.28
27 mu_0       0.9      1.31      1.68e- 3  7.19e-32     20.1 
[1] "Total run time was 235.119 seconds"
