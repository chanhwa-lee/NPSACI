
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3535"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 33 34 35 36 37 38 39 40 41 42 44 45 46 47 
 4  3  4  5  2  3  3  4  4  4  1  3  3  1  1  4  5  4  3  3  4  5  3  5  5  4 
48 49 50 
 2  2  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04061 0.35915 0.62908 1.00000 5.00000 
[1] "event indicator table: "

   0    1 
2131 1404 
[1] "treatment indicator table: "

   0    1 
1218 2317 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1827
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1708
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 201.266 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.377 0.0691
 2 mu         0.1   0.2 0.528 0.0795
 3 mu         0.1   0.3 0.585 0.0843
 4 mu         0.1   0.4 0.659 0.0948
 5 mu         0.1   0.5 0.694 0.100 
 6 mu         0.2   0.1 0.368 0.0634
 7 mu         0.2   0.2 0.480 0.0610
 8 mu         0.2   0.3 0.538 0.0652
 9 mu         0.2   0.4 0.587 0.0636
10 mu         0.2   0.5 0.622 0.0632
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.00         0.690   0.00160      5.30
 2 mu         0.2      0.995        0.975   0.142        2.85
 3 mu         0.3      0.999        0.959   0.406        1.79
 4 mu         0.4      1.01         0.986   0.571        1.83
 5 mu         0.5      1.01         1.00    0.628        1.46
 6 mu         0.6      1.00         0.996   0.644        1.42
 7 mu         0.7      0.998        1.00    0.659        1.42
 8 mu         0.8      0.982        0.979   0.646        1.42
 9 mu         0.9      1.01         1.01    0.637        1.58
10 mu_1       0.1      0.995        0.889   0.00407      3.75
11 mu_1       0.2      1.00         0.945   0.164        2.48
12 mu_1       0.3      0.996        0.939   0.469        1.81
13 mu_1       0.4      1.01         0.982   0.597        1.79
14 mu_1       0.5      1.01         0.981   0.604        1.48
15 mu_1       0.6      1.00         1.00    0.668        1.43
16 mu_1       0.7      0.998        1.01    0.668        1.45
17 mu_1       0.8      0.982        0.982   0.638        1.40
18 mu_1       0.9      1.02         1.01    0.641        1.60
19 mu_0       0.1      1.00         0.656   0.00132      5.55
20 mu_0       0.2      0.994        0.950   0.137        2.95
21 mu_0       0.3      1.00         0.951   0.379        1.80
22 mu_0       0.4      1.01         0.974   0.553        1.86
23 mu_0       0.5      1.01         1.01    0.652        1.47
24 mu_0       0.6      1.00         0.980   0.606        1.41
25 mu_0       0.7      0.999        0.998   0.639        1.35
26 mu_0       0.8      0.983        0.976   0.632        1.48
27 mu_0       0.9      1.00         0.994   0.596        1.47
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.0270     3.37e-15  5.42e-38      2.40
 2 mu         0.2     0.555      1.52e- 8  1.06e-24     31.4 
 3 mu         0.3     1.07       7.18e- 5  4.56e-17     13.7 
 4 mu         0.4     0.968      1.41e- 2  8.83e-12     10.7 
 5 mu         0.5     0.822      2.49e- 1  2.49e- 8      5.89
 6 mu         0.6     1.14       3.82e- 1  1.18e- 5     10.0 
 7 mu         0.7     1.28       6.57e- 1  1.50e- 9      7.30
 8 mu         0.8     1.48       5.77e- 1  1.74e-15     11.2 
 9 mu         0.9     1.25       6.14e- 3  4.12e-26     13.4 
10 mu_1       0.1     0.0599     2.33e-14  4.88e-37      5.10
11 mu_1       0.2     0.696      5.41e- 8  4.76e-24     33.4 
12 mu_1       0.3     1.13       1.62e- 4  1.37e-16     14.4 
13 mu_1       0.4     0.932      2.38e- 2  1.99e-11     10.2 
14 mu_1       0.5     0.838      2.47e- 1  4.84e- 8      4.85
15 mu_1       0.6     1.18       4.60e- 1  4.79e- 6     10.5 
16 mu_1       0.7     1.29       7.28e- 1  4.57e-10      6.98
17 mu_1       0.8     1.49       4.89e- 1  4.64e-16     10.9 
18 mu_1       0.9     1.23       4.65e- 3  9.75e-27     13.6 
19 mu_0       0.1     0.0234     1.15e-15  6.02e-39      2.10
20 mu_0       0.2     0.519      6.46e- 9  1.32e-25     30.9 
21 mu_0       0.3     1.04       3.39e- 5  6.51e-18     14.6 
22 mu_0       0.4     0.992      7.45e- 3  5.61e-13     11.1 
23 mu_0       0.5     0.807      1.96e- 1  1.38e- 9      6.93
24 mu_0       0.6     1.08       3.08e- 1  8.17e- 7      9.23
25 mu_0       0.7     1.25       5.16e- 1  3.95e- 9      8.86
26 mu_0       0.8     1.42       6.18e- 1  6.87e-15     12.5 
27 mu_0       0.9     1.38       1.96e- 2  3.25e-25     12.2 
[1] "Total run time was 204.596 seconds"
