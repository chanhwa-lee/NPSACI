
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3479"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 42 43 45 46 47 
 4  2  2  4  4  7  1  2  5  3  2  4  2  4  2  5  4  5  2  3  5  1  5  2  6  3 
48 49 50 
 6  4  1 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03916 0.35900 0.61512 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
2091 1388 
[1] "treatment indicator table: "

   0    1 
1260 2219 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1731
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1748
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 42"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 86"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 244.624 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.552 0.227 
 2 mu         0.1   0.2 0.583 0.269 
 3 mu         0.1   0.3 0.650 0.301 
 4 mu         0.1   0.4 0.743 0.332 
 5 mu         0.1   0.5 0.748 0.347 
 6 mu         0.2   0.1 0.368 0.0551
 7 mu         0.2   0.2 0.390 0.0453
 8 mu         0.2   0.3 0.435 0.0514
 9 mu         0.2   0.4 0.481 0.0602
10 mu         0.2   0.5 0.480 0.0617
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      1.24         0.290 0.000000197     57.4 
 2 mu         0.2      0.891        0.758 0.00140          6.66
 3 mu         0.3      0.963        0.992 0.0577           2.69
 4 mu         0.4      0.985        0.963 0.333            1.66
 5 mu         0.5      0.985        0.972 0.645            1.48
 6 mu         0.6      0.989        1.01  0.708            1.26
 7 mu         0.7      1.01         1.01  0.496            1.38
 8 mu         0.8      1.02         0.998 0.717            1.45
 9 mu         0.9      1.00         0.996 0.205            2.03
10 mu_1       0.1      1.20         0.481 0.000000785     49.9 
11 mu_1       0.2      0.895        0.827 0.00281          5.24
12 mu_1       0.3      0.975        0.992 0.0806           2.57
13 mu_1       0.4      0.986        0.958 0.393            1.57
14 mu_1       0.5      0.985        0.979 0.629            1.47
15 mu_1       0.6      0.991        0.996 0.703            1.28
16 mu_1       0.7      1.01         1.01  0.502            1.38
17 mu_1       0.8      1.02         0.991 0.692            1.47
18 mu_1       0.9      1.00         1.00  0.194            2.09
19 mu_0       0.1      1.24         0.272 0.000000132     58.2 
20 mu_0       0.2      0.890        0.742 0.00104          7.56
21 mu_0       0.3      0.958        0.977 0.0479           2.75
22 mu_0       0.4      0.984        0.963 0.294            1.72
23 mu_0       0.5      0.985        0.980 0.662            1.49
24 mu_0       0.6      0.987        1.00  0.698            1.27
25 mu_0       0.7      1.00         1.01  0.481            1.40
26 mu_0       0.8      1.02         1.00  0.744            1.36
27 mu_0       0.9      1.01         0.988 0.296            1.72
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      36.5      2.08e-13  5.47e-39   3648.  
 2 mu         0.2       5.91     3.78e- 7  1.85e-26    532.  
 3 mu         0.3       1.58     3.16e- 4  2.04e-19     24.6 
 4 mu         0.4       1.41     2.73e- 2  2.03e-14     21.0 
 5 mu         0.5       1.08     4.05e- 1  1.53e-10      8.18
 6 mu         0.6       1.25     7.85e- 1  2.24e- 7      6.20
 7 mu         0.7       1.25     1.15e+ 0  7.50e-11      5.92
 8 mu         0.8       1.04     2.85e- 1  1.15e-16      9.50
 9 mu         0.9       1.56     1.15e- 3  9.56e-27     49.1 
10 mu_1       0.1      29.7      1.29e-12  5.12e-38   2958.  
11 mu_1       0.2       2.98     1.21e- 6  9.23e-26    216.  
12 mu_1       0.3       1.52     6.89e- 4  6.81e-19     23.1 
13 mu_1       0.4       1.33     4.25e- 2  5.08e-14     19.6 
14 mu_1       0.5       1.08     4.84e- 1  3.05e-10      6.64
15 mu_1       0.6       1.27     9.07e- 1  1.13e- 7      6.21
16 mu_1       0.7       1.24     1.02e+ 0  8.69e-12      6.11
17 mu_1       0.8       1.02     2.40e- 1  1.17e-17      9.31
18 mu_1       0.9       1.60     7.83e- 4  8.61e-28     51.9 
19 mu_0       0.1      37.3      8.86e-14  0          3725.  
20 mu_0       0.2       6.65     1.76e- 7  0           611.  
21 mu_0       0.3       1.60     1.39e- 4  0            26.3 
22 mu_0       0.4       1.47     1.60e- 2  0            21.8 
23 mu_0       0.5       1.09     3.08e- 1  0             9.71
24 mu_0       0.6       1.22     5.59e- 1  0             6.55
25 mu_0       0.7       1.27     1.06e+ 0  0             5.48
26 mu_0       0.8       1.11     4.22e- 1  0            10.3 
27 mu_0       0.9       1.16     3.55e- 3  0            23.8 
[1] "Total run time was 249.216 seconds"
