
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3553"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 45 46 
 5  4  3  2  3  2  2  4  3  4  3  2  1  4  2  7  1  3  4  2  1  4  4  4  5  7 
47 48 49 50 
 4  2  6  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02382 0.31166 0.58553 0.99403 7.00000 
[1] "event indicator table: "

   0    1 
2114 1439 
[1] "treatment indicator table: "

   0    1 
1330 2223 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1776
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1777
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 54"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 75"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 534.741 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.299 0.0793
 2 mu         0.1   0.2 0.353 0.0959
 3 mu         0.1   0.3 0.487 0.0779
 4 mu         0.1   0.4 0.609 0.129 
 5 mu         0.1   0.5 0.664 0.152 
 6 mu         0.2   0.1 0.310 0.0603
 7 mu         0.2   0.2 0.394 0.0566
 8 mu         0.2   0.3 0.493 0.0448
 9 mu         0.2   0.4 0.575 0.0762
10 mu         0.2   0.5 0.634 0.0922
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.02         0.620  0.00136      10.6 
 2 mu         0.2      1.08         0.957  0.148         4.15
 3 mu         0.3      1.06         1.06   0.373         2.13
 4 mu         0.4      1.02         1.02   0.455         1.70
 5 mu         0.5      1.01         0.989  0.489         1.52
 6 mu         0.6      1.02         1.02   0.580         1.56
 7 mu         0.7      1.02         1.02   0.737         1.44
 8 mu         0.8      1.02         1.02   0.589         1.57
 9 mu         0.9      0.967        0.937  0.223         1.89
10 mu_1       0.1      1.07         0.744  0.00475       9.10
11 mu_1       0.2      1.09         1.00   0.263         3.82
12 mu_1       0.3      1.06         1.06   0.392         1.90
13 mu_1       0.4      1.01         0.990  0.461         1.70
14 mu_1       0.5      1.01         0.983  0.482         1.48
15 mu_1       0.6      1.02         1.02   0.602         1.55
16 mu_1       0.7      1.02         1.03   0.749         1.44
17 mu_1       0.8      1.02         1.02   0.589         1.58
18 mu_1       0.9      0.966        0.935  0.199         1.89
19 mu_0       0.1      1.01         0.585  0.000985     10.8 
20 mu_0       0.2      1.08         0.950  0.120         4.24
21 mu_0       0.3      1.07         1.04   0.365         2.23
22 mu_0       0.4      1.02         1.02   0.452         1.73
23 mu_0       0.5      1.01         0.998  0.497         1.56
24 mu_0       0.6      1.01         1.01   0.547         1.58
25 mu_0       0.7      1.02         1.01   0.684         1.45
26 mu_0       0.8      1.03         1.03   0.590         1.61
27 mu_0       0.9      0.974        0.946  0.414         1.87
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.181     1.50e-12  5.27e-39      14.4
 2 mu         0.2      0.997     1.32e- 6  1.16e-25      34.9
 3 mu         0.3      1.75      1.44e- 3  5.70e-18      28.2
 4 mu         0.4      1.56      7.10e- 2  1.29e-12      28.3
 5 mu         0.5      1.41      3.67e- 1  1.43e- 8      11.4
 6 mu         0.6      1.47      5.01e- 1  2.14e- 5      19.1
 7 mu         0.7      1.37      6.00e- 1  2.33e- 8      13.7
 8 mu         0.8      1.32      2.47e- 1  7.93e-14      12.7
 9 mu         0.9      1.56      7.51e- 4  9.48e-24      19.7
10 mu_1       0.1      0.382     9.35e-12  4.84e-38      28.7
11 mu_1       0.2      1.24      4.01e- 6  5.32e-25      34.9
12 mu_1       0.3      1.73      2.89e- 3  1.74e-17      26.6
13 mu_1       0.4      1.50      1.14e- 1  2.96e-12      27.4
14 mu_1       0.5      1.42      3.48e- 1  2.62e- 8      12.7
15 mu_1       0.6      1.47      4.96e- 1  3.27e- 5      19.4
16 mu_1       0.7      1.36      5.93e- 1  8.48e- 9      13.6
17 mu_1       0.8      1.33      2.12e- 1  2.53e-14      13.2
18 mu_1       0.9      1.57      5.31e- 4  2.69e-24      19.6
19 mu_0       0.1      0.159     4.87e-13  0             12.8
20 mu_0       0.2      0.935     6.30e- 7  0             34.9
21 mu_0       0.3      1.76      8.21e- 4  0             28.9
22 mu_0       0.4      1.59      4.39e- 2  0             28.9
23 mu_0       0.5      1.40      3.11e- 1  0             10.1
24 mu_0       0.6      1.47      5.30e- 1  0             18.7
25 mu_0       0.7      1.40      5.13e- 1  0             13.9
26 mu_0       0.8      1.28      3.18e- 1  0             13.4
27 mu_0       0.9      1.51      2.09e- 3  0             25.6
[1] "Total run time was 539.468 seconds"
