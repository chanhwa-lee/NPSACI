
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3591"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 41 42 43 44 45 46 
 4  1  2  4  3  2  4  4  3  2  2  4  2  4  1  7  4  1  4  3  3  7  2  3  6  6 
48 49 50 
 4  4  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0343  0.3533  0.6140  1.0000  7.0000 
[1] "event indicator table: "

   0    1 
2150 1441 
[1] "treatment indicator table: "

   0    1 
1290 2301 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1840
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 63"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1751
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 211.67 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.282 0.0499
 2 mu         0.1   0.2 0.349 0.0642
 3 mu         0.1   0.3 0.418 0.0683
 4 mu         0.1   0.4 0.554 0.105 
 5 mu         0.1   0.5 0.588 0.102 
 6 mu         0.2   0.1 0.321 0.0271
 7 mu         0.2   0.2 0.398 0.0397
 8 mu         0.2   0.3 0.489 0.0445
 9 mu         0.2   0.4 0.585 0.0614
10 mu         0.2   0.5 0.627 0.0558
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      0.879        0.364 0.000000212      8.98
 2 mu         0.2      1.02         1.05  0.00116          2.69
 3 mu         0.3      1.02         1.01  0.0446           2.65
 4 mu         0.4      1.01         0.979 0.248            2.25
 5 mu         0.5      1.01         0.996 0.649            1.72
 6 mu         0.6      0.998        0.977 0.708            1.35
 7 mu         0.7      0.989        0.975 0.669            1.53
 8 mu         0.8      1.01         1.00  0.616            1.57
 9 mu         0.9      1.01         0.985 0.318            1.86
10 mu_1       0.1      0.944        0.583 0.000000788      6.62
11 mu_1       0.2      1.03         1.03  0.00222          2.73
12 mu_1       0.3      1.01         0.988 0.0611           2.50
13 mu_1       0.4      1.01         0.997 0.286            2.25
14 mu_1       0.5      1.01         0.984 0.694            1.63
15 mu_1       0.6      0.997        0.973 0.704            1.36
16 mu_1       0.7      0.990        0.984 0.664            1.54
17 mu_1       0.8      1.01         0.996 0.613            1.58
18 mu_1       0.9      1.01         0.984 0.307            1.86
19 mu_0       0.1      0.872        0.345 0.000000148      9.37
20 mu_0       0.2      1.02         1.05  0.000894         2.75
21 mu_0       0.3      1.02         1.01  0.0376           2.71
22 mu_0       0.4      1.01         0.990 0.222            2.26
23 mu_0       0.5      1.01         0.995 0.594            1.81
24 mu_0       0.6      0.999        0.976 0.713            1.37
25 mu_0       0.7      0.988        0.971 0.678            1.51
26 mu_0       0.8      1.00         1.01  0.629            1.52
27 mu_0       0.9      1.02         1.00  0.417            1.86
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.0141     1.01e-13  2.45e-39      1.26
 2 mu         0.2     0.423      1.26e- 7  1.71e-26     19.0 
 3 mu         0.3     1.54       1.89e- 4  4.87e-19     50.6 
 4 mu         0.4     1.72       1.82e- 2  8.44e-14     24.4 
 5 mu         0.5     1.36       2.90e- 1  8.61e-10     10.5 
 6 mu         0.6     1.20       5.64e- 1  1.40e- 6      9.24
 7 mu         0.7     1.13       4.51e- 1  2.22e- 6      9.07
 8 mu         0.8     1.03       2.12e- 1  2.55e-11     11.6 
 9 mu         0.9     1.25       1.08e- 3  1.73e-20     11.3 
10 mu_1       0.1     0.0367     6.16e-13  2.35e-38      3.14
11 mu_1       0.2     0.622      3.93e- 7  8.15e-26     23.8 
12 mu_1       0.3     1.72       4.13e- 4  1.55e-18     52.2 
13 mu_1       0.4     1.67       3.12e- 2  2.02e-13     20.7 
14 mu_1       0.5     1.30       3.24e- 1  1.65e- 9     11.4 
15 mu_1       0.6     1.19       5.48e- 1  2.23e- 6      8.37
16 mu_1       0.7     1.12       5.05e- 1  9.92e- 7      8.73
17 mu_1       0.8     1.04       1.88e- 1  9.94e-12     11.5 
18 mu_1       0.9     1.27       7.98e- 4  6.02e-21     11.6 
19 mu_0       0.1     0.0116     3.47e-14  0             1.05
20 mu_0       0.2     0.374      4.88e- 8  0            17.8 
21 mu_0       0.3     1.46       9.28e- 5  0            49.9 
22 mu_0       0.4     1.75       1.00e- 2  0            28.1 
23 mu_0       0.5     1.41       2.00e- 1  0            11.3 
24 mu_0       0.6     1.22       5.37e- 1  0            10.5 
25 mu_0       0.7     1.14       5.00e- 1  0             9.87
26 mu_0       0.8     1.01       2.85e- 1  0            11.9 
27 mu_0       0.9     1.06       2.95e- 3  0            14.9 
[1] "Total run time was 215.152 seconds"
