
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3464"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 36 37 38 39 40 41 42 43 44 45 47 
 6  3  5  4  5  2  3  1  2  3  5  4  1  5  3  1  1  5  7  2  4  1  3  5  1  6 
48 49 50 
 3  4  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02692 0.32081 0.58024 0.99072 6.00000 
[1] "event indicator table: "

   0    1 
2058 1406 
[1] "treatment indicator table: "

   0    1 
1331 2133 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1707
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1757
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 193.464 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.375 0.0307
 2 mu         0.1   0.2 0.457 0.0682
 3 mu         0.1   0.3 0.553 0.0460
 4 mu         0.1   0.4 0.580 0.0619
 5 mu         0.1   0.5 0.670 0.0736
 6 mu         0.2   0.1 0.370 0.0213
 7 mu         0.2   0.2 0.461 0.0387
 8 mu         0.2   0.3 0.549 0.0283
 9 mu         0.2   0.4 0.596 0.0358
10 mu         0.2   0.5 0.658 0.0410
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.972        0.986    0.0314      2.87
 2 mu         0.2      1.06         1.00     0.215       2.39
 3 mu         0.3      1.02         0.997    0.441       1.59
 4 mu         0.4      1.01         1.00     0.589       1.40
 5 mu         0.5      1.01         0.997    0.720       1.35
 6 mu         0.6      0.991        0.990    0.677       1.28
 7 mu         0.7      0.992        0.985    0.667       1.37
 8 mu         0.8      1.01         1.00     0.671       1.48
 9 mu         0.9      1.02         0.981    0.640       1.59
10 mu_1       0.1      1.01         0.953    0.0637      2.53
11 mu_1       0.2      1.06         1.01     0.197       2.19
12 mu_1       0.3      1.01         0.989    0.465       1.57
13 mu_1       0.4      1.01         1.01     0.601       1.41
14 mu_1       0.5      1.00         0.994    0.713       1.35
15 mu_1       0.6      0.989        0.986    0.678       1.26
16 mu_1       0.7      0.993        0.989    0.654       1.37
17 mu_1       0.8      1.01         0.996    0.658       1.51
18 mu_1       0.9      1.01         0.983    0.634       1.61
19 mu_0       0.1      0.969        0.983    0.0278      2.94
20 mu_0       0.2      1.06         1.02     0.219       2.44
21 mu_0       0.3      1.02         1.00     0.431       1.64
22 mu_0       0.4      1.01         0.999    0.581       1.39
23 mu_0       0.5      1.01         0.999    0.713       1.35
24 mu_0       0.6      0.993        0.991    0.674       1.31
25 mu_0       0.7      0.991        0.980    0.691       1.36
26 mu_0       0.8      1.00         0.980    0.684       1.36
27 mu_0       0.9      1.03         1.02     0.649       1.54
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.427     1.05e-11  6.14e-42     15.9 
 2 mu         0.2      1.05      1.58e- 6  6.07e-28     20.9 
 3 mu         0.3      1.19      9.90e- 4  7.69e-20     12.6 
 4 mu         0.4      1.11      7.57e- 2  2.64e-14     10.1 
 5 mu         0.5      0.970     2.38e- 1  4.21e-10      9.61
 6 mu         0.6      1.08      3.06e- 1  2.49e- 7      5.48
 7 mu         0.7      1.09      3.45e- 1  1.15e-11      5.24
 8 mu         0.8      0.972     2.16e- 1  4.53e-18      8.04
 9 mu         0.9      1.35      1.42e- 3  2.11e-29      9.44
10 mu_1       0.1      0.687     7.21e-11  5.78e-41     24.5 
11 mu_1       0.2      1.08      5.38e- 6  2.85e-27     18.6 
12 mu_1       0.3      1.20      2.07e- 3  2.41e-19     10.1 
13 mu_1       0.4      1.08      8.91e- 2  6.31e-14     11.3 
14 mu_1       0.5      0.984     3.08e- 1  8.05e-10      8.62
15 mu_1       0.6      1.10      3.14e- 1  7.07e- 8      5.89
16 mu_1       0.7      1.08      3.35e- 1  2.79e-12      5.44
17 mu_1       0.8      0.977     1.96e- 1  9.64e-19      8.41
18 mu_1       0.9      1.37      1.04e- 3  4.00e-30      9.68
19 mu_0       0.1      0.398     3.62e-12  0            15.0 
20 mu_0       0.2      1.04      6.35e- 7  0            22.1 
21 mu_0       0.3      1.19      5.63e- 4  0            13.7 
22 mu_0       0.4      1.13      4.89e- 2  0             9.36
23 mu_0       0.5      0.956     2.56e- 1  0            10.6 
24 mu_0       0.6      1.06      3.65e- 1  0             6.33
25 mu_0       0.7      1.11      3.09e- 1  0             5.97
26 mu_0       0.8      0.954     1.72e- 1  0             6.56
27 mu_0       0.9      1.18      3.76e- 3  0             8.43
[1] "Total run time was 196.634 seconds"
