
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3607"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 3  3  3  3  2  4  4  2  1  3  3  4  4  2  1  3  5  4  5  4  2  1  2  2  4  3 
46 47 48 49 50 
 5  4  6  1  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03417 0.31518 0.58286 1.00000 5.00000 
[1] "event indicator table: "

   0    1 
2146 1461 
[1] "treatment indicator table: "

   0    1 
1334 2273 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1833
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 70"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1774
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 93"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 198.002 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.226 0.118 
 2 mu         0.1   0.2 0.333 0.148 
 3 mu         0.1   0.3 0.344 0.191 
 4 mu         0.1   0.4 0.432 0.183 
 5 mu         0.1   0.5 0.424 0.207 
 6 mu         0.2   0.1 0.276 0.0747
 7 mu         0.2   0.2 0.395 0.0950
 8 mu         0.2   0.3 0.413 0.112 
 9 mu         0.2   0.4 0.481 0.109 
10 mu         0.2   0.5 0.491 0.118 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.07         0.768  0.000979      5.71
 2 mu         0.2      1.01         1.00   0.0537        3.81
 3 mu         0.3      0.993        0.984  0.295         1.99
 4 mu         0.4      0.983        0.986  0.486         1.59
 5 mu         0.5      1.00         0.994  0.637         1.54
 6 mu         0.6      1.01         1.01   0.769         1.36
 7 mu         0.7      0.996        0.991  0.691         1.23
 8 mu         0.8      0.996        0.996  0.689         1.41
 9 mu         0.9      1.04         1.05   0.419         1.59
10 mu_1       0.1      1.09         0.837  0.00266       6.28
11 mu_1       0.2      1.01         1.01   0.0797        3.31
12 mu_1       0.3      0.989        0.972  0.371         1.72
13 mu_1       0.4      0.985        0.979  0.493         1.65
14 mu_1       0.5      1.00         1.01   0.657         1.53
15 mu_1       0.6      1.01         1.01   0.771         1.35
16 mu_1       0.7      0.994        0.990  0.674         1.23
17 mu_1       0.8      0.998        0.993  0.674         1.42
18 mu_1       0.9      1.04         1.05   0.402         1.60
19 mu_0       0.1      1.07         0.754  0.000781      5.78
20 mu_0       0.2      1.02         0.996  0.0472        3.94
21 mu_0       0.3      0.995        0.982  0.263         2.10
22 mu_0       0.4      0.981        0.983  0.482         1.55
23 mu_0       0.5      0.999        0.992  0.617         1.58
24 mu_0       0.6      1.01         1.01   0.756         1.37
25 mu_0       0.7      0.999        0.990  0.718         1.27
26 mu_0       0.8      0.990        0.971  0.664         1.34
27 mu_0       0.9      1.03         1.03   0.495         1.57
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.44      2.38e-14  2.05e-38     93.0 
 2 mu         0.2      1.10      4.35e- 8  2.26e-26     44.7 
 3 mu         0.3      1.08      1.08e- 4  2.50e-19     24.4 
 4 mu         0.4      0.906     1.99e- 2  2.48e-14     13.2 
 5 mu         0.5      1.05      1.85e- 1  1.87e-10      5.66
 6 mu         0.6      1.16      5.83e- 1  2.75e- 7      6.83
 7 mu         0.7      1.10      6.32e- 1  7.10e- 9      7.37
 8 mu         0.8      1.18      1.57e- 1  2.12e-14      6.30
 9 mu         0.9      0.971     3.30e- 4  2.25e-24     13.3 
10 mu_1       0.1      1.37      1.43e-13  2.05e-37     93.0 
11 mu_1       0.2      0.948     1.69e- 7  1.13e-25     22.3 
12 mu_1       0.3      1.01      2.39e- 4  8.32e-19     26.0 
13 mu_1       0.4      0.890     2.53e- 2  6.21e-14     10.5 
14 mu_1       0.5      1.07      2.49e- 1  3.74e-10      5.66
15 mu_1       0.6      1.15      5.38e- 1  2.62e- 7      6.62
16 mu_1       0.7      1.10      7.06e- 1  4.68e-10      7.58
17 mu_1       0.8      1.19      1.56e- 1  6.34e-15      6.53
18 mu_1       0.9      0.968     2.45e- 4  5.99e-25     13.6 
19 mu_0       0.1      1.45      1.04e-14  0            93.0 
20 mu_0       0.2      1.14      1.31e- 8  0            50.2 
21 mu_0       0.3      1.11      5.23e- 5  0            23.8 
22 mu_0       0.4      0.917     1.65e- 2  0            15.0 
23 mu_0       0.5      1.03      1.21e- 1  0             5.78
24 mu_0       0.6      1.17      5.51e- 1  0             7.15
25 mu_0       0.7      1.08      5.77e- 1  0             6.88
26 mu_0       0.8      1.14      2.27e- 1  0             5.90
27 mu_0       0.9      0.995     5.98e- 4  0            11.1 
[1] "Total run time was 201.407 seconds"
