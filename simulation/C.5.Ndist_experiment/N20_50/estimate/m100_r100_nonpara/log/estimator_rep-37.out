
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3442"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 42 43 44 45 46 
 3  4  2  5  5  2  5  3  5  4  3  2  4  5  2  4  2  1  3  1  2  4  1  4  8  4 
47 48 49 50 
 5  3  3  1 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02856 0.33091 0.59645 1.00000 4.87950 
[1] "event indicator table: "

   0    1 
2054 1388 
[1] "treatment indicator table: "

   0    1 
1318 2124 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1703
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1739
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 185.602 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.306 0.0403
 2 mu         0.1   0.2 0.354 0.0549
 3 mu         0.1   0.3 0.410 0.0643
 4 mu         0.1   0.4 0.441 0.0547
 5 mu         0.1   0.5 0.465 0.0776
 6 mu         0.2   0.1 0.308 0.0275
 7 mu         0.2   0.2 0.365 0.0331
 8 mu         0.2   0.3 0.422 0.0350
 9 mu         0.2   0.4 0.449 0.0288
10 mu         0.2   0.5 0.487 0.0398
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      0.903        0.449 0.000000697      4.72
 2 mu         0.2      0.964        0.916 0.00672          2.59
 3 mu         0.3      0.979        0.960 0.233            1.63
 4 mu         0.4      1.02         1.03  0.510            1.53
 5 mu         0.5      1.02         1.03  0.567            1.36
 6 mu         0.6      1.01         1.00  0.771            1.34
 7 mu         0.7      1.00         1.01  0.730            1.53
 8 mu         0.8      0.988        0.993 0.521            1.51
 9 mu         0.9      1.00         0.934 0.172            2.97
10 mu_1       0.1      0.940        0.684 0.00000257       3.72
11 mu_1       0.2      0.967        0.949 0.0126           2.32
12 mu_1       0.3      0.983        0.978 0.299            1.66
13 mu_1       0.4      1.02         1.04  0.495            1.52
14 mu_1       0.5      1.02         1.02  0.594            1.34
15 mu_1       0.6      1.00         1.00  0.761            1.38
16 mu_1       0.7      1.00         1.01  0.718            1.56
17 mu_1       0.8      0.987        0.987 0.507            1.52
18 mu_1       0.9      1.01         0.932 0.158            3.12
19 mu_0       0.1      0.899        0.415 0.000000489      4.94
20 mu_0       0.2      0.964        0.902 0.00525          2.65
21 mu_0       0.3      0.977        0.959 0.204            1.64
22 mu_0       0.4      1.01         1.02  0.520            1.54
23 mu_0       0.5      1.03         1.04  0.540            1.38
24 mu_0       0.6      1.01         1.01  0.767            1.30
25 mu_0       0.7      1.00         1.01  0.755            1.47
26 mu_0       0.8      0.995        0.996 0.548            1.55
27 mu_0       0.9      0.961        0.958 0.303            1.85
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1    0.00865     1.91e-10  5.96e-40     0.263
 2 mu         0.2    0.421       9.62e- 6  1.47e-26    12.0  
 3 mu         0.3    1.30        3.31e- 3  8.28e-19    28.3  
 4 mu         0.4    1.48        1.42e- 1  2.19e-13    16.6  
 5 mu         0.5    1.33        6.57e- 1  2.90e- 9     6.36 
 6 mu         0.6    1.27        8.84e- 1  5.44e- 6     6.94 
 7 mu         0.7    1.43        4.76e- 1  6.74e- 6    16.0  
 8 mu         0.8    1.80        1.42e- 1  1.75e-10    38.8  
 9 mu         0.9    3.19        1.42e- 4  6.68e-19    63.9  
10 mu_1       0.1    0.0257      1.13e- 9  5.59e-39     0.752
11 mu_1       0.2    0.643       3.20e- 5  6.90e-26    17.1  
12 mu_1       0.3    1.43        6.97e- 3  2.59e-18    27.0  
13 mu_1       0.4    1.47        2.11e- 1  5.12e-13    14.4  
14 mu_1       0.5    1.30        7.12e- 1  5.45e- 9     5.95 
15 mu_1       0.6    1.28        8.10e- 1  8.50e- 6     7.18 
16 mu_1       0.7    1.43        4.43e- 1  2.75e- 6    18.0  
17 mu_1       0.8    1.82        1.12e- 1  6.23e-11    38.2  
18 mu_1       0.9    3.28        9.07e- 5  2.12e-19    67.5  
19 mu_0       0.1    0.00675     7.79e-11  4.14e-41     0.209
20 mu_0       0.2    0.365       4.08e- 6  1.15e-27    10.7  
21 mu_0       0.3    1.24        1.57e- 3  7.40e-20    28.9  
22 mu_0       0.4    1.49        9.43e- 2  2.28e-14    18.1  
23 mu_0       0.5    1.35        6.27e- 1  3.63e-10     7.31 
24 mu_0       0.6    1.27        9.02e- 1  8.50e- 7     6.58 
25 mu_0       0.7    1.41        4.64e- 1  1.60e- 5    11.4  
26 mu_0       0.8    1.72        1.64e- 1  6.23e-10    41.3  
27 mu_0       0.9    2.43        6.04e- 4  4.77e-18    42.8  
[1] "Total run time was 188.864 seconds"
