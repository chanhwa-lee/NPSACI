
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3436"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 3  4  4  4  4  4  3  4  4  3  2  2  2  3  1  2  4  4  6  3  5  4  3  3  2  5 
46 47 48 49 50 
 3  2  3  3  1 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04366 0.39415 0.64345 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
2063 1373 
[1] "treatment indicator table: "

   0    1 
1212 2224 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1760
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1676
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 92"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 140.569 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.305 0.0699
 2 mu         0.1   0.2 0.417 0.107 
 3 mu         0.1   0.3 0.437 0.103 
 4 mu         0.1   0.4 0.440 0.0979
 5 mu         0.1   0.5 0.524 0.0767
 6 mu         0.2   0.1 0.315 0.0469
 7 mu         0.2   0.2 0.425 0.0750
 8 mu         0.2   0.3 0.457 0.0688
 9 mu         0.2   0.4 0.487 0.0607
10 mu         0.2   0.5 0.561 0.0399
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.817        0.322 0.000116       5.50
 2 mu         0.2      0.948        0.873 0.0960         2.60
 3 mu         0.3      0.956        0.917 0.338          1.76
 4 mu         0.4      0.970        0.942 0.529          1.47
 5 mu         0.5      0.987        0.988 0.662          1.43
 6 mu         0.6      1.01         1.00  0.773          1.30
 7 mu         0.7      1.02         1.01  0.706          1.44
 8 mu         0.8      1.03         1.02  0.516          1.55
 9 mu         0.9      1.02         0.973 0.211          2.20
10 mu_1       0.1      0.936        0.556 0.000360       5.79
11 mu_1       0.2      0.943        0.913 0.154          2.06
12 mu_1       0.3      0.959        0.923 0.402          1.71
13 mu_1       0.4      0.972        0.951 0.581          1.48
14 mu_1       0.5      0.991        0.984 0.672          1.43
15 mu_1       0.6      1.01         0.993 0.784          1.30
16 mu_1       0.7      1.02         1.01  0.686          1.46
17 mu_1       0.8      1.03         1.02  0.491          1.56
18 mu_1       0.9      1.02         0.977 0.197          2.22
19 mu_0       0.1      0.803        0.292 0.0000887      5.46
20 mu_0       0.2      0.949        0.865 0.0815         2.77
21 mu_0       0.3      0.955        0.916 0.311          1.78
22 mu_0       0.4      0.969        0.938 0.495          1.46
23 mu_0       0.5      0.983        0.973 0.652          1.44
24 mu_0       0.6      1.00         0.993 0.757          1.34
25 mu_0       0.7      1.02         1.01  0.752          1.41
26 mu_0       0.8      1.02         1.02  0.617          1.49
27 mu_0       0.9      1.04         1.01  0.324          1.96
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.485     1.22e-13  5.28e-34     36.5 
 2 mu         0.2      1.87      1.98e- 7  1.15e-22    106.  
 3 mu         0.3      1.11      3.28e- 4  4.32e-16     21.6 
 4 mu         0.4      0.887     2.20e- 2  1.77e-11      8.12
 5 mu         0.5      0.968     2.21e- 1  5.93e- 8      6.91
 6 mu         0.6      1.01      7.02e- 1  2.54e- 6      3.78
 7 mu         0.7      1.17      7.53e- 1  1.56e-10      5.95
 8 mu         0.8      1.22      5.35e- 1  9.23e-17      5.40
 9 mu         0.9      1.28      4.36e- 3  8.61e-28     18.7 
10 mu_1       0.1      0.887     8.89e-13  5.02e-33     63.5 
11 mu_1       0.2      1.87      6.15e- 7  5.45e-22     92.5 
12 mu_1       0.3      0.993     7.14e- 4  1.37e-15     20.0 
13 mu_1       0.4      0.909     4.05e- 2  4.21e-11      8.03
14 mu_1       0.5      0.981     2.74e- 1  1.13e- 7      6.73
15 mu_1       0.6      1.02      7.77e- 1  7.36e- 7      3.83
16 mu_1       0.7      1.18      7.22e- 1  3.87e-11      5.97
17 mu_1       0.8      1.21      5.37e- 1  2.01e-17      5.69
18 mu_1       0.9      1.29      3.28e- 3  1.66e-28     19.2 
19 mu_0       0.1      0.440     3.70e-14  0            33.5 
20 mu_0       0.2      1.86      9.42e- 8  0           110.  
21 mu_0       0.3      1.16      1.51e- 4  0            23.3 
22 mu_0       0.4      0.873     9.92e- 3  0             8.40
23 mu_0       0.5      0.956     1.66e- 1  0             7.09
24 mu_0       0.6      0.994     5.66e- 1  0             4.50
25 mu_0       0.7      1.14      6.92e- 1  0             5.91
26 mu_0       0.8      1.23      4.75e- 1  0             5.60
27 mu_0       0.9      1.22      1.27e- 2  0            14.8 
[1] "Total run time was 143.13 seconds"
