
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3527"
[1] "cluster size dist'n: "

21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 
 3  5  1  3  2  1  5  7  6  5  2  2  1  3  2  2  6  5  4  2  7  2  6  3  2  3 
48 49 50 
 4  4  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02824 0.32172 0.59902 1.00000 6.27370 
[1] "event indicator table: "

   0    1 
2120 1407 
[1] "treatment indicator table: "

   0    1 
1302 2225 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1782
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1745
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 43"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 96"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 223.234 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.425 0.0839
 2 mu         0.1   0.2 0.472 0.0865
 3 mu         0.1   0.3 0.530 0.0965
 4 mu         0.1   0.4 0.532 0.0972
 5 mu         0.1   0.5 0.532 0.0979
 6 mu         0.2   0.1 0.427 0.0587
 7 mu         0.2   0.2 0.492 0.0649
 8 mu         0.2   0.3 0.562 0.0801
 9 mu         0.2   0.4 0.578 0.0675
10 mu         0.2   0.5 0.590 0.0517
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.847        0.181 0.0000632      9.61
 2 mu         0.2      0.990        0.847 0.0304         3.36
 3 mu         0.3      1.03         1.00  0.219          2.45
 4 mu         0.4      1.02         1.01  0.564          1.84
 5 mu         0.5      1.01         0.998 0.727          1.35
 6 mu         0.6      1.00         0.988 0.734          1.32
 7 mu         0.7      0.993        0.994 0.783          1.33
 8 mu         0.8      0.996        0.991 0.679          1.44
 9 mu         0.9      0.948        0.930 0.187          1.51
10 mu_1       0.1      0.979        0.373 0.000205       8.23
11 mu_1       0.2      1.00         0.960 0.0536         3.05
12 mu_1       0.3      1.03         0.987 0.288          2.53
13 mu_1       0.4      1.02         1.01  0.552          1.69
14 mu_1       0.5      1.01         1.01  0.736          1.37
15 mu_1       0.6      1.00         0.993 0.722          1.30
16 mu_1       0.7      0.994        0.996 0.791          1.32
17 mu_1       0.8      0.995        0.990 0.669          1.46
18 mu_1       0.9      0.947        0.923 0.169          1.52
19 mu_0       0.1      0.832        0.162 0.0000474     10.0 
20 mu_0       0.2      0.987        0.794 0.0246         3.44
21 mu_0       0.3      1.02         1.00  0.189          2.42
22 mu_0       0.4      1.03         1.00  0.547          1.94
23 mu_0       0.5      1.01         0.990 0.711          1.37
24 mu_0       0.6      1.00         0.985 0.753          1.34
25 mu_0       0.7      0.992        0.998 0.766          1.34
26 mu_0       0.8      1.00         0.980 0.717          1.40
27 mu_0       0.9      0.962        0.951 0.349          1.71
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.0660     4.03e-13  4.68e-37      6.12
 2 mu         0.2     0.650      3.37e- 7  9.89e-25     25.4 
 3 mu         0.3     1.17       4.82e- 4  9.56e-18     30.4 
 4 mu         0.4     0.903      3.41e- 2  8.15e-13      9.18
 5 mu         0.5     0.918      4.35e- 1  5.11e- 9      4.73
 6 mu         0.6     1.13       7.43e- 1  4.85e- 6      5.69
 7 mu         0.7     1.07       1.01e+ 0  7.06e-10      4.49
 8 mu         0.8     1.03       1.98e- 1  1.41e-15      6.40
 9 mu         0.9     1.06       8.05e- 4  1.05e-25     16.6 
10 mu_1       0.1     0.128      2.52e-12  4.20e-36     11.4 
11 mu_1       0.2     0.820      1.16e- 6  4.82e-24     23.6 
12 mu_1       0.3     1.19       1.05e- 3  3.11e-17     27.5 
13 mu_1       0.4     0.865      5.65e- 2  1.99e-12      9.31
14 mu_1       0.5     0.953      4.05e- 1  9.97e- 9      4.06
15 mu_1       0.6     1.14       8.02e- 1  1.50e- 6      5.88
16 mu_1       0.7     1.06       8.95e- 1  1.88e-10      4.70
17 mu_1       0.8     1.02       1.52e- 1  3.28e-16      6.33
18 mu_1       0.9     1.07       5.70e- 4  2.18e-26     18.0 
19 mu_0       0.1     0.0591     1.73e-13  2.74e-38      5.54
20 mu_0       0.2     0.608      1.55e- 7  3.01e-26     25.8 
21 mu_0       0.3     1.16       2.30e- 4  3.33e-19     31.7 
22 mu_0       0.4     0.928      1.92e- 2  3.31e-14      9.10
23 mu_0       0.5     0.883      3.23e- 1  2.49e-10      5.62
24 mu_0       0.6     1.12       6.48e- 1  3.66e- 7      5.39
25 mu_0       0.7     1.10       9.82e- 1  1.91e- 9      4.87
26 mu_0       0.8     1.04       3.31e- 1  5.74e-15      6.70
27 mu_0       0.9     0.925      2.92e- 3  8.57e-25     10.6 
[1] "Total run time was 226.973 seconds"
