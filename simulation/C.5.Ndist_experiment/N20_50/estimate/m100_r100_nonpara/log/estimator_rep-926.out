
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3263"
[1] "cluster size dist'n: "

20 21 22 23 24 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 42 43 44 46 47 48 
 6  5  2  3  4  4  4  7  2  9  3  3  3  4  5  1  7  2  3  5  5  2  4  1  2  3 
50 
 1 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02898 0.31343 0.58957 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
1899 1364 
[1] "treatment indicator table: "

   0    1 
1321 1942 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1641
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1622
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 74"
[1] "     Cluster: 78"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 225.329 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.421 0.108 
 2 mu         0.1   0.2 0.537 0.149 
 3 mu         0.1   0.3 0.607 0.165 
 4 mu         0.1   0.4 0.614 0.171 
 5 mu         0.1   0.5 0.702 0.187 
 6 mu         0.2   0.1 0.379 0.0422
 7 mu         0.2   0.2 0.477 0.0671
 8 mu         0.2   0.3 0.545 0.0712
 9 mu         0.2   0.4 0.557 0.0659
10 mu         0.2   0.5 0.630 0.0740
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.03         0.140  0.000477     25.6 
 2 mu         0.2      1.01         0.845  0.0583        6.31
 3 mu         0.3      1.03         0.999  0.366         2.39
 4 mu         0.4      0.991        0.992  0.643         1.51
 5 mu         0.5      0.993        0.971  0.810         1.31
 6 mu         0.6      1.01         1.01   0.809         1.20
 7 mu         0.7      1.00         0.997  0.742         1.29
 8 mu         0.8      0.991        1.00   0.437         1.47
 9 mu         0.9      0.963        0.908  0.0328        2.57
10 mu_1       0.1      1.07         0.300  0.00143      20.3 
11 mu_1       0.2      1.01         0.944  0.0928        3.24
12 mu_1       0.3      1.02         0.987  0.447         2.29
13 mu_1       0.4      0.989        0.986  0.659         1.45
14 mu_1       0.5      0.996        0.978  0.813         1.30
15 mu_1       0.6      1.01         1.02   0.806         1.18
16 mu_1       0.7      1.00         0.991  0.732         1.28
17 mu_1       0.8      0.990        1.00   0.406         1.51
18 mu_1       0.9      0.964        0.900  0.0293        2.61
19 mu_0       0.1      1.03         0.121  0.000359     26.2 
20 mu_0       0.2      1.01         0.809  0.0470        7.07
21 mu_0       0.3      1.03         1.01   0.331         2.43
22 mu_0       0.4      0.993        0.989  0.633         1.57
23 mu_0       0.5      0.989        0.975  0.797         1.32
24 mu_0       0.6      1.01         1.01   0.814         1.22
25 mu_0       0.7      1.00         1.00   0.766         1.30
26 mu_0       0.8      0.993        1.00   0.559         1.33
27 mu_0       0.9      0.961        0.961  0.0649        2.30
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.200     2.34e-11  1.62e-27     17.1 
 2 mu         0.2      0.920     3.51e- 6  8.71e-18     45.6 
 3 mu         0.3      1.04      2.46e- 3  3.31e-12     14.1 
 4 mu         0.4      1.05      8.16e- 2  2.37e- 8     11.5 
 5 mu         0.5      0.960     5.88e- 1  1.80e- 5      4.59
 6 mu         0.6      0.960     6.40e- 1  2.47e- 4      5.76
 7 mu         0.7      1.03      8.91e- 1  2.15e- 7      5.21
 8 mu         0.8      1.09      1.24e- 1  3.73e-12      8.27
 9 mu         0.9      1.02      2.82e- 4  1.00e-20     39.8 
10 mu_1       0.1      0.384     1.35e-10  1.45e-26     31.1 
11 mu_1       0.2      1.04      1.11e- 5  3.89e-17     41.4 
12 mu_1       0.3      1.05      5.46e- 3  9.83e-12     12.6 
13 mu_1       0.4      1.03      1.27e- 1  5.28e- 8     10.2 
14 mu_1       0.5      0.942     6.20e- 1  3.21e- 5      5.12
15 mu_1       0.6      0.967     5.78e- 1  7.50e- 5      5.40
16 mu_1       0.7      1.04      9.24e- 1  6.86e- 8      5.49
17 mu_1       0.8      1.09      9.76e- 2  1.08e-12      9.43
18 mu_1       0.9      1.00      1.88e- 4  2.57e-21     40.4 
19 mu_0       0.1      0.180     1.16e-11  1.95e-28     15.6 
20 mu_0       0.2      0.891     1.61e- 6  1.18e-18     46.6 
21 mu_0       0.3      1.03      1.27e- 3  5.11e-13     16.5 
22 mu_0       0.4      1.06      5.23e- 2  4.27e- 9     12.4 
23 mu_0       0.5      0.979     5.04e- 1  3.90e- 6      4.83
24 mu_0       0.6      0.948     6.92e- 1  5.06e- 4      6.30
25 mu_0       0.7      1.01      9.36e- 1  5.51e- 7      4.55
26 mu_0       0.8      1.09      2.31e- 1  1.43e-11      6.78
27 mu_0       0.9      1.16      1.13e- 3  7.71e-20     35.1 
[1] "Total run time was 229.534 seconds"
