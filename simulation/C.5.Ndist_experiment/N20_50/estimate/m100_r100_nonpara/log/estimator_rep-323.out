
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3527"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 36 37 39 40 41 42 43 44 45 46 47 
 1  4  2  4  3  2  4  2  3  8  6  1  2  4  3  2  7  2  5  5  4  4  3  3  4  5 
48 49 50 
 3  2  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03741 0.38229 0.63018 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
2105 1422 
[1] "treatment indicator table: "

   0    1 
1229 2298 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1784
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1743
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 5"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 271.034 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.413 0.145 
 2 mu         0.1   0.2 0.463 0.167 
 3 mu         0.1   0.3 0.556 0.211 
 4 mu         0.1   0.4 0.658 0.197 
 5 mu         0.1   0.5 0.712 0.188 
 6 mu         0.2   0.1 0.286 0.0836
 7 mu         0.2   0.2 0.343 0.0971
 8 mu         0.2   0.3 0.393 0.126 
 9 mu         0.2   0.4 0.485 0.0889
10 mu         0.2   0.5 0.533 0.0682
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.27         0.400  0.000697     28.9 
 2 mu         0.2      1.03         1.03   0.0503        3.97
 3 mu         0.3      1.01         0.971  0.317         1.93
 4 mu         0.4      0.989        0.973  0.678         1.61
 5 mu         0.5      0.988        0.971  0.670         1.50
 6 mu         0.6      0.993        1.00   0.684         1.34
 7 mu         0.7      1.00         0.987  0.750         1.34
 8 mu         0.8      1.01         1.03   0.737         1.44
 9 mu         0.9      0.994        0.999  0.499         1.58
10 mu_1       0.1      1.20         0.653  0.00222      14.6 
11 mu_1       0.2      1.01         1.04   0.0861        2.43
12 mu_1       0.3      1.00         0.965  0.416         1.92
13 mu_1       0.4      0.987        0.960  0.677         1.54
14 mu_1       0.5      0.990        0.990  0.651         1.51
15 mu_1       0.6      0.994        0.995  0.686         1.29
16 mu_1       0.7      1.00         0.992  0.749         1.34
17 mu_1       0.8      1.01         1.02   0.749         1.45
18 mu_1       0.9      0.994        0.993  0.485         1.61
19 mu_0       0.1      1.28         0.372  0.000528     30.5 
20 mu_0       0.2      1.03         1.00   0.0413        4.36
21 mu_0       0.3      1.01         0.984  0.274         1.95
22 mu_0       0.4      0.990        0.962  0.679         1.66
23 mu_0       0.5      0.987        0.973  0.690         1.48
24 mu_0       0.6      0.991        0.998  0.652         1.40
25 mu_0       0.7      0.997        0.981  0.746         1.32
26 mu_0       0.8      1.01         1.01   0.692         1.41
27 mu_0       0.9      0.991        1.00   0.563         1.49
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.08      1.07e-13  6.64e-37    104.  
 2 mu         0.2      2.48      7.11e- 8  3.65e-24    216.  
 3 mu         0.3      1.20      1.77e- 4  7.98e-17     34.5 
 4 mu         0.4      1.11      1.47e- 2  9.34e-12     16.3 
 5 mu         0.5      1.02      2.02e- 1  3.12e- 8      7.90
 6 mu         0.6      1.06      6.17e- 1  1.12e- 6      5.96
 7 mu         0.7      1.04      5.90e- 1  1.22e-10      3.31
 8 mu         0.8      1.11      3.78e- 1  1.63e-16      5.51
 9 mu         0.9      1.48      4.06e- 3  6.09e-27     13.0 
10 mu_1       0.1      1.80      7.31e-13  6.08e-36    174.  
11 mu_1       0.2      2.22      2.39e- 7  1.67e-23    180.  
12 mu_1       0.3      1.15      4.21e- 4  2.43e-16     19.2 
13 mu_1       0.4      1.11      2.47e- 2  2.22e-11     16.7 
14 mu_1       0.5      1.02      2.02e- 1  5.94e- 8      6.46
15 mu_1       0.6      1.07      7.07e- 1  3.40e- 7      6.01
16 mu_1       0.7      1.04      6.05e- 1  3.18e-11      3.26
17 mu_1       0.8      1.13      3.49e- 1  3.71e-17      5.60
18 mu_1       0.9      1.48      2.83e- 3  1.23e-27     13.2 
19 mu_0       0.1      0.997     3.43e-14  6.28e-38     96.6 
20 mu_0       0.2      2.55      2.91e- 8  3.88e-25    225.  
21 mu_0       0.3      1.22      7.23e- 5  9.70e-18     41.1 
22 mu_0       0.4      1.11      8.12e- 3  7.79e-13     16.0 
23 mu_0       0.5      1.02      1.19e- 1  3.12e- 9      9.34
24 mu_0       0.6      1.05      4.26e- 1  2.29e- 6      5.89
25 mu_0       0.7      1.04      6.38e- 1  3.34e-10      3.55
26 mu_0       0.8      1.06      4.83e- 1  6.67e-16      5.17
27 mu_0       0.9      1.55      1.38e- 2  4.98e-26     11.3 
[1] "Total run time was 275.084 seconds"
