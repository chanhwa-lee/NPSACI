
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3459"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 45 46 
 4  4  6  6  2  2  2  1  2  4  2  2  1  3  2  7  4  6  4  5  4  4  4  3  2  1 
48 49 50 
 2  6  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04344 0.36351 0.63362 1.00000 5.00000 
[1] "event indicator table: "

   0    1 
2032 1427 
[1] "treatment indicator table: "

   0    1 
1215 2244 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1756
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 90"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1703
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 46"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 217.228 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.460 0.103 
 2 mu         0.1   0.2 0.549 0.136 
 3 mu         0.1   0.3 0.593 0.143 
 4 mu         0.1   0.4 0.626 0.153 
 5 mu         0.1   0.5 0.647 0.162 
 6 mu         0.2   0.1 0.391 0.0344
 7 mu         0.2   0.2 0.452 0.0379
 8 mu         0.2   0.3 0.498 0.0360
 9 mu         0.2   0.4 0.518 0.0408
10 mu         0.2   0.5 0.548 0.0440
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.18         0.491 0.0000699     22.0 
 2 mu         0.2      1.10         1.03  0.0342         4.10
 3 mu         0.3      1.03         1.02  0.371          2.02
 4 mu         0.4      1.02         0.995 0.611          1.80
 5 mu         0.5      1.03         1.01  0.652          1.58
 6 mu         0.6      1.01         1.00  0.736          1.30
 7 mu         0.7      0.986        0.977 0.685          1.45
 8 mu         0.8      0.981        0.972 0.644          1.41
 9 mu         0.9      0.987        1.01  0.167          2.06
10 mu_1       0.1      1.19         0.705 0.000219      13.4 
11 mu_1       0.2      1.08         1.02  0.0628         2.95
12 mu_1       0.3      1.02         0.999 0.414          1.90
13 mu_1       0.4      1.02         0.996 0.634          1.80
14 mu_1       0.5      1.03         1.01  0.641          1.51
15 mu_1       0.6      1.01         0.990 0.758          1.30
16 mu_1       0.7      0.985        0.976 0.671          1.47
17 mu_1       0.8      0.980        0.973 0.639          1.42
18 mu_1       0.9      0.989        1.01  0.155          2.13
19 mu_0       0.1      1.18         0.466 0.0000533     22.9 
20 mu_0       0.2      1.10         1.02  0.0270         4.38
21 mu_0       0.3      1.04         1.04  0.340          2.09
22 mu_0       0.4      1.02         0.995 0.596          1.81
23 mu_0       0.5      1.03         1.01  0.662          1.64
24 mu_0       0.6      1.01         0.997 0.704          1.37
25 mu_0       0.7      0.988        0.966 0.719          1.39
26 mu_0       0.8      0.982        0.977 0.622          1.51
27 mu_0       0.9      0.972        0.958 0.278          1.57
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.195     4.12e-14  6.24e-37      8.27
 2 mu         0.2      1.33      9.11e- 8  1.93e-24     31.5 
 3 mu         0.3      1.89      1.51e- 4  3.21e-17     75.2 
 4 mu         0.4      1.07      1.56e- 2  3.57e-12     16.4 
 5 mu         0.5      1.02      2.07e- 1  2.43e- 8      7.33
 6 mu         0.6      1.22      6.91e- 1  2.64e- 5      6.95
 7 mu         0.7      1.36      9.58e- 1  2.05e- 7     11.8 
 8 mu         0.8      1.24      4.59e- 1  1.79e-12     11.4 
 9 mu         0.9      1.14      2.41e- 3  1.36e-22     24.8 
10 mu_1       0.1      0.394     3.11e-13  5.82e-36     14.4 
11 mu_1       0.2      1.64      2.74e- 7  8.99e-24     44.1 
12 mu_1       0.3      1.77      3.67e- 4  9.99e-17     70.2 
13 mu_1       0.4      0.999     2.65e- 2  8.34e-12     11.5 
14 mu_1       0.5      1.04      2.73e- 1  4.54e- 8      6.98
15 mu_1       0.6      1.24      7.73e- 1  4.10e- 5      7.16
16 mu_1       0.7      1.35      9.49e- 1  7.14e- 8     12.1 
17 mu_1       0.8      1.23      3.68e- 1  6.27e-13     11.8 
18 mu_1       0.9      1.15      1.80e- 3  4.22e-23     26.8 
19 mu_0       0.1      0.173     1.12e-14  4.62e-38      7.60
20 mu_0       0.2      1.25      3.59e- 8  1.61e-25     28.4 
21 mu_0       0.3      1.94      6.80e- 5  3.06e-18     77.4 
22 mu_0       0.4      1.12      8.40e- 3  3.97e-13     19.7 
23 mu_0       0.5      1.00      1.34e- 1  3.24e- 9      8.17
24 mu_0       0.6      1.19      6.16e- 1  4.39e- 6      6.65
25 mu_0       0.7      1.37      9.42e- 1  5.16e- 7     11.0 
26 mu_0       0.8      1.26      6.61e- 1  6.45e-12      9.72
27 mu_0       0.9      1.12      7.93e- 3  9.77e-22      9.81
[1] "Total run time was 220.762 seconds"
