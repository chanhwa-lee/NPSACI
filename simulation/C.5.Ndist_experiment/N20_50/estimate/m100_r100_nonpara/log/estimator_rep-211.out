
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3553"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 2  5  3  1  3  2  4  4  4  2  4  4  3  2  4  3  6  4  1  3  3  3  4  3  2  1 
46 47 48 49 50 
 1  2  4  6  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03745 0.37621 0.63789 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
2149 1404 
[1] "treatment indicator table: "

   0    1 
1288 2265 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1731
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1822
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 263.885 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.317 0.0840
 2 mu         0.1   0.2 0.394 0.0801
 3 mu         0.1   0.3 0.451 0.106 
 4 mu         0.1   0.4 0.453 0.0917
 5 mu         0.1   0.5 0.511 0.125 
 6 mu         0.2   0.1 0.366 0.0661
 7 mu         0.2   0.2 0.472 0.0629
 8 mu         0.2   0.3 0.534 0.0809
 9 mu         0.2   0.4 0.548 0.0652
10 mu         0.2   0.5 0.602 0.0934
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      0.767        0.258 0.00000294      7.67
 2 mu         0.2      0.974        0.934 0.0117          2.80
 3 mu         0.3      0.973        0.949 0.304           2.03
 4 mu         0.4      1.01         0.999 0.604           1.94
 5 mu         0.5      1.02         1.01  0.731           1.48
 6 mu         0.6      1.01         0.998 0.694           1.32
 7 mu         0.7      1.00         0.996 0.697           1.44
 8 mu         0.8      0.978        0.968 0.648           1.53
 9 mu         0.9      0.987        0.998 0.296           1.96
10 mu_1       0.1      0.850        0.445 0.0000103       5.37
11 mu_1       0.2      0.978        0.896 0.0211          2.53
12 mu_1       0.3      0.979        0.950 0.388           2.06
13 mu_1       0.4      1.02         0.994 0.630           1.88
14 mu_1       0.5      1.02         1.01  0.724           1.45
15 mu_1       0.6      1.00         0.997 0.699           1.29
16 mu_1       0.7      0.999        0.989 0.687           1.46
17 mu_1       0.8      0.977        0.967 0.646           1.54
18 mu_1       0.9      0.988        0.993 0.276           2.00
19 mu_0       0.1      0.758        0.233 0.00000213      8.51
20 mu_0       0.2      0.973        0.935 0.00935         2.92
21 mu_0       0.3      0.971        0.942 0.267           2.05
22 mu_0       0.4      1.01         0.987 0.587           1.98
23 mu_0       0.5      1.02         1.00  0.719           1.51
24 mu_0       0.6      1.01         1.01  0.688           1.37
25 mu_0       0.7      1.00         1.00  0.721           1.40
26 mu_0       0.8      0.983        0.973 0.640           1.48
27 mu_0       0.9      0.976        0.976 0.469           1.84
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.0347     3.24e-13  2.10e-36      2.66
 2 mu         0.2     0.711      3.30e- 7  1.03e-23     26.4 
 3 mu         0.3     1.27       4.65e- 4  1.97e-16     24.5 
 4 mu         0.4     1.16       5.66e- 2  1.43e-11     10.7 
 5 mu         0.5     1.05       3.96e- 1  4.78e- 8      9.88
 6 mu         0.6     1.13       6.50e- 1  3.12e- 5      5.33
 7 mu         0.7     1.02       8.81e- 1  1.55e- 8      5.33
 8 mu         0.8     1.02       1.81e- 1  2.34e-14      9.16
 9 mu         0.9     1.30       6.22e- 4  7.01e-25     16.7 
10 mu_1       0.1     0.0799     2.53e-12  1.89e-35      5.83
11 mu_1       0.2     0.927      1.08e- 6  4.60e-23     32.3 
12 mu_1       0.3     1.31       9.94e- 4  5.87e-16     20.0 
13 mu_1       0.4     1.14       8.77e- 2  3.40e-11     11.9 
14 mu_1       0.5     1.04       5.16e- 1  9.08e- 8      8.79
15 mu_1       0.6     1.13       5.48e- 1  4.17e- 5      5.20
16 mu_1       0.7     1.01       8.49e- 1  5.41e- 9      5.14
17 mu_1       0.8     1.04       1.42e- 1  7.18e-15      9.98
18 mu_1       0.9     1.31       4.48e- 4  1.91e-25     17.8 
19 mu_0       0.1     0.0296     9.09e-14  0             2.31
20 mu_0       0.2     0.657      1.55e- 7  0            24.9 
21 mu_0       0.3     1.25       2.31e- 4  0            26.4 
22 mu_0       0.4     1.17       3.48e- 2  0            12.0 
23 mu_0       0.5     1.06       2.74e- 1  0            11.0 
24 mu_0       0.6     1.13       6.00e- 1  0             5.52
25 mu_0       0.7     1.07       7.98e- 1  0             5.79
26 mu_0       0.8     0.960      2.92e- 1  0             6.27
27 mu_0       0.9     1.22       2.08e- 3  0            17.8 
[1] "Total run time was 268.11 seconds"
