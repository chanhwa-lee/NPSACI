
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3454"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 3  4  4  1  5  4  6  5  3  1  1  3  3  3  3  3  4  1  2  4  5  3  7  2  1  5 
46 47 48 49 50 
 6  1  3  2  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04076 0.36019 0.61284 1.00000 5.69447 
[1] "event indicator table: "

   0    1 
2057 1397 
[1] "treatment indicator table: "

   0    1 
1255 2199 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1687
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 14"
[1] "     Cluster: 20"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 72"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1767
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 97"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 234.339 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.232 0.0822
 2 mu         0.1   0.2 0.316 0.129 
 3 mu         0.1   0.3 0.347 0.123 
 4 mu         0.1   0.4 0.364 0.121 
 5 mu         0.1   0.5 0.390 0.122 
 6 mu         0.2   0.1 0.248 0.0380
 7 mu         0.2   0.2 0.346 0.0586
 8 mu         0.2   0.3 0.400 0.0548
 9 mu         0.2   0.4 0.447 0.0517
10 mu         0.2   0.5 0.501 0.0566
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.681       0.0989 0.0000150     13.0 
 2 mu         0.2      0.889       0.711  0.0127         3.97
 3 mu         0.3      0.946       0.928  0.209          2.12
 4 mu         0.4      0.988       0.957  0.549          1.61
 5 mu         0.5      1.01        1.00   0.776          1.29
 6 mu         0.6      1.01        1.01   0.794          1.21
 7 mu         0.7      1.01        1.00   0.745          1.28
 8 mu         0.8      1.00        1.02   0.665          1.44
 9 mu         0.9      1.02        1.00   0.317          2.21
10 mu_1       0.1      0.759       0.214  0.0000506      8.08
11 mu_1       0.2      0.918       0.821  0.0226         3.15
12 mu_1       0.3      0.953       0.936  0.273          2.06
13 mu_1       0.4      0.993       0.968  0.590          1.60
14 mu_1       0.5      1.01        1.01   0.788          1.26
15 mu_1       0.6      1.01        1.01   0.800          1.21
16 mu_1       0.7      1.01        1.01   0.740          1.28
17 mu_1       0.8      1.00        1.01   0.640          1.47
18 mu_1       0.9      1.02        1.01   0.299          2.29
19 mu_0       0.1      0.672       0.0864 0.0000111     14.0 
20 mu_0       0.2      0.882       0.671  0.0103         4.17
21 mu_0       0.3      0.943       0.938  0.181          2.14
22 mu_0       0.4      0.985       0.945  0.522          1.61
23 mu_0       0.5      1.01        1.00   0.760          1.32
24 mu_0       0.6      1.01        1.01   0.776          1.21
25 mu_0       0.7      1.01        1.00   0.755          1.28
26 mu_0       0.8      1.01        1.02   0.677          1.32
27 mu_0       0.9      0.997       0.981  0.397          1.74
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.0802     2.74e-12  4.90e-36      5.74
 2 mu         0.2     1.01       1.11e- 6  1.34e-23     42.8 
 3 mu         0.3     1.31       7.28e- 4  1.96e-16     34.5 
 4 mu         0.4     1.00       3.64e- 2  1.87e-11     15.4 
 5 mu         0.5     1.02       3.34e- 1  1.06e- 7      6.30
 6 mu         0.6     1.05       7.26e- 1  9.19e- 5      7.11
 7 mu         0.7     1.20       9.66e- 1  5.09e- 8      9.32
 8 mu         0.8     1.28       3.58e- 1  1.52e-13     12.1 
 9 mu         0.9     0.895      3.45e- 3  1.62e-23     17.2 
10 mu_1       0.1     0.185      1.71e-11  4.47e-35     12.7 
11 mu_1       0.2     1.24       3.69e- 6  6.14e-23     51.1 
12 mu_1       0.3     1.26       1.65e- 3  5.97e-16     27.5 
13 mu_1       0.4     0.985      5.88e- 2  4.27e-11     12.8 
14 mu_1       0.5     1.03       3.76e- 1  1.94e- 7      6.31
15 mu_1       0.6     1.07       7.88e- 1  8.79e- 5      6.66
16 mu_1       0.7     1.21       9.06e- 1  1.74e- 8      9.17
17 mu_1       0.8     1.28       3.00e- 1  4.54e-14     12.5 
18 mu_1       0.9     0.878      2.53e- 3  4.29e-24     16.8 
19 mu_0       0.1     0.0686     1.16e-12  4.73e-37      4.96
20 mu_0       0.2     0.955      4.38e- 7  1.46e-24     40.7 
21 mu_0       0.3     1.34       3.20e- 4  2.44e-17     37.5 
22 mu_0       0.4     1.02       2.06e- 2  2.71e-12     17.1 
23 mu_0       0.5     1.01       2.18e- 1  1.84e- 8      6.60
24 mu_0       0.6     1.03       6.85e- 1  1.21e- 5      7.77
25 mu_0       0.7     1.17       8.83e- 1  1.29e- 7      9.66
26 mu_0       0.8     1.29       5.13e- 1  5.78e-13     10.8 
27 mu_0       0.9     1.05       1.19e- 2  1.23e-22     20.2 
[1] "Total run time was 238.473 seconds"
