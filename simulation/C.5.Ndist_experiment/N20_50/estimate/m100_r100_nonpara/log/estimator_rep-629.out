
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 3511"
[1] "cluster size dist'n: "

20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
 2  2  3  3  5  4  2  1  2  3  2  5  5  5  6  6  1  3  4  2  5  4  1  1  5  2 
46 47 48 49 50 
 5  3  2  5  1 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0413  0.3782  0.6225  1.0000  5.0000 
[1] "event indicator table: "

   0    1 
2057 1454 
[1] "treatment indicator table: "

   0    1 
1340 2171 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1748
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1763
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 234.984 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.300 0.0579
 2 mu         0.1   0.2 0.309 0.0893
 3 mu         0.1   0.3 0.318 0.102 
 4 mu         0.1   0.4 0.410 0.0733
 5 mu         0.1   0.5 0.473 0.0712
 6 mu         0.2   0.1 0.348 0.0472
 7 mu         0.2   0.2 0.384 0.0521
 8 mu         0.2   0.3 0.405 0.0611
 9 mu         0.2   0.4 0.464 0.0503
10 mu         0.2   0.5 0.512 0.0573
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.995        0.702   0.00703      8.12
 2 mu         0.2      1.08         1.03    0.360        2.91
 3 mu         0.3      1.05         1.06    0.611        1.76
 4 mu         0.4      1.01         0.985   0.668        1.36
 5 mu         0.5      1.01         0.999   0.698        1.26
 6 mu         0.6      1.01         1.01    0.772        1.28
 7 mu         0.7      0.981        0.983   0.741        1.28
 8 mu         0.8      0.949        0.949   0.582        1.32
 9 mu         0.9      0.984        1.00    0.299        1.54
10 mu_1       0.1      1.02         0.859   0.0165       7.64
11 mu_1       0.2      1.09         1.05    0.479        2.56
12 mu_1       0.3      1.04         1.04    0.629        1.68
13 mu_1       0.4      1.01         0.997   0.621        1.34
14 mu_1       0.5      1.01         1.01    0.735        1.29
15 mu_1       0.6      1.01         1.01    0.767        1.29
16 mu_1       0.7      0.978        0.978   0.734        1.26
17 mu_1       0.8      0.949        0.943   0.589        1.31
18 mu_1       0.9      0.987        1.00    0.282        1.57
19 mu_0       0.1      0.992        0.681   0.00598      8.17
20 mu_0       0.2      1.08         1.04    0.330        3.00
21 mu_0       0.3      1.06         1.06    0.604        1.79
22 mu_0       0.4      1.02         0.986   0.699        1.40
23 mu_0       0.5      1.01         1.01    0.661        1.24
24 mu_0       0.6      1.02         1.01    0.760        1.31
25 mu_0       0.7      0.990        0.986   0.730        1.32
26 mu_0       0.8      0.950        0.941   0.556        1.34
27 mu_0       0.9      0.955        0.975   0.449        1.44
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.959     5.90e-13  7.66e-38     58.8 
 2 mu         0.2      1.39      6.07e- 7  4.73e-25     35.2 
 3 mu         0.3      0.950     6.95e- 4  1.18e-17     15.0 
 4 mu         0.4      0.826     5.14e- 2  1.76e-12      5.55
 5 mu         0.5      0.905     2.14e- 1  1.49e- 8      5.20
 6 mu         0.6      1.03      5.25e- 1  3.84e- 8      4.93
 7 mu         0.7      1.12      8.63e- 1  1.73e-12      4.19
 8 mu         0.8      1.14      2.77e- 1  7.85e-19      4.51
 9 mu         0.9      0.887     1.07e- 3  5.79e-30     11.3 
10 mu_1       0.1      1.30      3.67e-12  7.16e-37     70.6 
11 mu_1       0.2      1.28      1.79e- 6  2.21e-24     33.3 
12 mu_1       0.3      0.874     1.53e- 3  3.68e-17     11.1 
13 mu_1       0.4      0.836     8.13e- 2  4.10e-12      5.55
14 mu_1       0.5      0.924     2.55e- 1  2.79e- 8      5.05
15 mu_1       0.6      1.04      5.28e- 1  8.73e- 9      4.70
16 mu_1       0.7      1.13      8.75e- 1  3.37e-13      4.22
17 mu_1       0.8      1.14      2.20e- 1  1.34e-19      4.52
18 mu_1       0.9      0.873     7.68e- 4  8.78e-31     11.8 
19 mu_0       0.1      0.922     1.97e-13  5.55e-39     57.5 
20 mu_0       0.2      1.41      3.12e- 7  3.86e-26     38.8 
21 mu_0       0.3      0.982     3.35e- 4  1.10e-18     17.0 
22 mu_0       0.4      0.820     3.15e- 2  1.91e-13      5.55
23 mu_0       0.5      0.887     1.86e- 1  1.95e- 9      5.36
24 mu_0       0.6      1.01      4.56e- 1  8.30e- 8      5.29
25 mu_0       0.7      1.11      8.52e- 1  4.99e-12      4.13
26 mu_0       0.8      1.16      3.86e- 1  3.39e-18      4.64
27 mu_0       0.9      1.02      3.87e- 3  5.00e-29      9.71
[1] "Total run time was 238.573 seconds"
