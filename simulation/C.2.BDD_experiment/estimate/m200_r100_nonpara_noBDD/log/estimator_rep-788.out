
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 200"
[1] "N_total: 2532"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 7 15 12 11 11 17 12  9 11 20 10 17 11 19  8 10 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02705 0.35260 0.60960 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
1522 1010 
[1] "treatment indicator table: "

   0    1 
 962 1570 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1276
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 46"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "     Cluster: 104"
[1] "     Cluster: 105"
[1] "     Cluster: 107"
[1] "     Cluster: 108"
[1] "     Cluster: 109"
[1] "     Cluster: 111"
[1] "     Cluster: 112"
[1] "     Cluster: 113"
[1] "     Cluster: 116"
[1] "     Cluster: 117"
[1] "     Cluster: 119"
[1] "     Cluster: 121"
[1] "     Cluster: 122"
[1] "     Cluster: 124"
[1] "     Cluster: 125"
[1] "     Cluster: 126"
[1] "     Cluster: 129"
[1] "     Cluster: 130"
[1] "     Cluster: 131"
[1] "     Cluster: 137"
[1] "     Cluster: 138"
[1] "     Cluster: 139"
[1] "     Cluster: 140"
[1] "     Cluster: 141"
[1] "     Cluster: 144"
[1] "     Cluster: 145"
[1] "     Cluster: 149"
[1] "     Cluster: 152"
[1] "     Cluster: 153"
[1] "     Cluster: 154"
[1] "     Cluster: 156"
[1] "     Cluster: 159"
[1] "     Cluster: 160"
[1] "     Cluster: 163"
[1] "     Cluster: 165"
[1] "     Cluster: 166"
[1] "     Cluster: 169"
[1] "     Cluster: 171"
[1] "     Cluster: 177"
[1] "     Cluster: 178"
[1] "     Cluster: 179"
[1] "     Cluster: 180"
[1] "     Cluster: 182"
[1] "     Cluster: 183"
[1] "     Cluster: 184"
[1] "     Cluster: 185"
[1] "     Cluster: 186"
[1] "     Cluster: 188"
[1] "     Cluster: 190"
[1] "     Cluster: 191"
[1] "     Cluster: 194"
[1] "     Cluster: 199"
[1] "     Cluster: 200"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1256
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 101"
[1] "     Cluster: 102"
[1] "     Cluster: 103"
[1] "     Cluster: 106"
[1] "     Cluster: 110"
[1] "     Cluster: 114"
[1] "     Cluster: 115"
[1] "     Cluster: 118"
[1] "     Cluster: 120"
[1] "     Cluster: 123"
[1] "     Cluster: 127"
[1] "     Cluster: 128"
[1] "     Cluster: 132"
[1] "     Cluster: 133"
[1] "     Cluster: 134"
[1] "     Cluster: 135"
[1] "     Cluster: 136"
[1] "     Cluster: 142"
[1] "     Cluster: 143"
[1] "     Cluster: 146"
[1] "     Cluster: 147"
[1] "     Cluster: 148"
[1] "     Cluster: 150"
[1] "     Cluster: 151"
[1] "     Cluster: 155"
[1] "     Cluster: 157"
[1] "     Cluster: 158"
[1] "     Cluster: 161"
[1] "     Cluster: 162"
[1] "     Cluster: 164"
[1] "     Cluster: 167"
[1] "     Cluster: 168"
[1] "     Cluster: 170"
[1] "     Cluster: 172"
[1] "     Cluster: 173"
[1] "     Cluster: 174"
[1] "     Cluster: 175"
[1] "     Cluster: 176"
[1] "     Cluster: 181"
[1] "     Cluster: 187"
[1] "     Cluster: 189"
[1] "     Cluster: 192"
[1] "     Cluster: 193"
[1] "     Cluster: 195"
[1] "     Cluster: 196"
[1] "     Cluster: 197"
[1] "     Cluster: 198"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 387.228 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.342 0.0711
 2 mu         0.1   0.2 0.359 0.0780
 3 mu         0.1   0.3 0.508 0.0940
 4 mu         0.1   0.4 0.535 0.0854
 5 mu         0.1   0.5 0.572 0.0666
 6 mu         0.2   0.1 0.309 0.0574
 7 mu         0.2   0.2 0.333 0.0661
 8 mu         0.2   0.3 0.456 0.0711
 9 mu         0.2   0.4 0.478 0.0683
10 mu         0.2   0.5 0.521 0.0552
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.952        0.922   0.00576      4.64
 2 mu         0.2      0.984        1       0.122        2.57
 3 mu         0.3      0.996        1       0.413        1.49
 4 mu         0.4      0.997        1       0.634        1.38
 5 mu         0.5      0.998        1       0.762        1.25
 6 mu         0.6      1.00         1       0.840        1.20
 7 mu         0.7      1.00         1       0.827        1.19
 8 mu         0.8      1.00         1       0.703        1.30
 9 mu         0.9      1.00         1       0.590        1.68
10 mu_1       0.1      0.972        1       0.0199       3.44
11 mu_1       0.2      0.994        1       0.223        2.08
12 mu_1       0.3      0.998        1       0.559        1.47
13 mu_1       0.4      0.997        1       0.727        1.35
14 mu_1       0.5      0.998        1       0.790        1.20
15 mu_1       0.6      1.00         1       0.845        1.20
16 mu_1       0.7      1.00         1       0.784        1.19
17 mu_1       0.8      1.00         1       0.702        1.34
18 mu_1       0.9      1.00         1       0.560        1.70
19 mu_0       0.1      0.950        0.899   0.00418      5.11
20 mu_0       0.2      0.981        1       0.0965       2.70
21 mu_0       0.3      0.995        1       0.351        1.59
22 mu_0       0.4      0.997        1       0.558        1.44
23 mu_0       0.5      0.997        1       0.731        1.33
24 mu_0       0.6      1.00         1       0.797        1.20
25 mu_0       0.7      1.00         1       0.846        1.20
26 mu_0       0.8      1.01         1       0.707        1.25
27 mu_0       0.9      1.01         1       0.673        1.55
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.989    0.0000575  9.83e-17     67.2 
 2 mu         0.2      1.24     0.00816    2.58e-11     48.9 
 3 mu         0.3      1.13     0.119      3.81e- 8     19.4 
 4 mu         0.4      1.05     0.530      6.75e- 6      5.66
 5 mu         0.5      1.02     1.01       3.50e- 4      4.26
 6 mu         0.6      1.01     1.01       7.76e- 3      2.73
 7 mu         0.7      0.977    1.03       4.63e- 4      3.36
 8 mu         0.8      0.991    0.636      3.11e- 6      3.39
 9 mu         0.9      1.14     0.0886     3.94e-10     14.7 
10 mu_1       0.1      1.42     0.000341   9.83e-16     75.4 
11 mu_1       0.2      1.23     0.0253     1.29e-10     32.6 
12 mu_1       0.3      1.09     0.239      1.27e- 7      8.62
13 mu_1       0.4      1.04     0.771      1.69e- 5      4.92
14 mu_1       0.5      1.03     1.06       7.00e- 4      3.79
15 mu_1       0.6      1.01     1.04       3.18e- 3      2.56
16 mu_1       0.7      0.977    1.04       8.82e- 5      3.36
17 mu_1       0.8      1.01     0.469      5.18e- 7      3.93
18 mu_1       0.9      1.16     0.0664     7.11e-11     16.4 
19 mu_0       0.1      0.941    0.0000262  0            67.9 
20 mu_0       0.2      1.24     0.00419    0            53.0 
21 mu_0       0.3      1.15     0.0618     0            24.0 
22 mu_0       0.4      1.05     0.328      0             7.54
23 mu_0       0.5      1.01     0.922      0             4.74
24 mu_0       0.6      1.01     1.05       0             3.03
25 mu_0       0.7      0.975    0.968      0             3.36
26 mu_0       0.8      0.930    0.913      0             3.47
27 mu_0       0.9      0.971    0.180      0             5.84
[1] "Total run time was 393.116 seconds"
