
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 200"
[1] "N_total: 2588"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 9 15 12  7 10 12 15  9 11 21 10 13 17  9 16 14 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02866 0.31710 0.59513 1.00000 5.00000 
[1] "event indicator table: "

   0    1 
1538 1050 
[1] "treatment indicator table: "

   0    1 
 996 1592 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1314
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 26"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 49"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 88"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 101"
[1] "     Cluster: 103"
[1] "     Cluster: 104"
[1] "     Cluster: 105"
[1] "     Cluster: 106"
[1] "     Cluster: 107"
[1] "     Cluster: 108"
[1] "     Cluster: 109"
[1] "     Cluster: 110"
[1] "     Cluster: 112"
[1] "     Cluster: 113"
[1] "     Cluster: 114"
[1] "     Cluster: 116"
[1] "     Cluster: 117"
[1] "     Cluster: 118"
[1] "     Cluster: 121"
[1] "     Cluster: 123"
[1] "     Cluster: 124"
[1] "     Cluster: 125"
[1] "     Cluster: 126"
[1] "     Cluster: 128"
[1] "     Cluster: 129"
[1] "     Cluster: 130"
[1] "     Cluster: 131"
[1] "     Cluster: 135"
[1] "     Cluster: 139"
[1] "     Cluster: 140"
[1] "     Cluster: 144"
[1] "     Cluster: 146"
[1] "     Cluster: 147"
[1] "     Cluster: 149"
[1] "     Cluster: 150"
[1] "     Cluster: 152"
[1] "     Cluster: 154"
[1] "     Cluster: 156"
[1] "     Cluster: 157"
[1] "     Cluster: 158"
[1] "     Cluster: 160"
[1] "     Cluster: 161"
[1] "     Cluster: 163"
[1] "     Cluster: 164"
[1] "     Cluster: 165"
[1] "     Cluster: 168"
[1] "     Cluster: 169"
[1] "     Cluster: 171"
[1] "     Cluster: 173"
[1] "     Cluster: 181"
[1] "     Cluster: 182"
[1] "     Cluster: 183"
[1] "     Cluster: 185"
[1] "     Cluster: 186"
[1] "     Cluster: 195"
[1] "     Cluster: 196"
[1] "     Cluster: 197"
[1] "     Cluster: 199"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1274
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "     Cluster: 102"
[1] "     Cluster: 111"
[1] "     Cluster: 115"
[1] "     Cluster: 119"
[1] "     Cluster: 120"
[1] "     Cluster: 122"
[1] "     Cluster: 127"
[1] "     Cluster: 132"
[1] "     Cluster: 133"
[1] "     Cluster: 134"
[1] "     Cluster: 136"
[1] "     Cluster: 137"
[1] "     Cluster: 138"
[1] "     Cluster: 141"
[1] "     Cluster: 142"
[1] "     Cluster: 143"
[1] "     Cluster: 145"
[1] "     Cluster: 148"
[1] "     Cluster: 151"
[1] "     Cluster: 153"
[1] "     Cluster: 155"
[1] "     Cluster: 159"
[1] "     Cluster: 162"
[1] "     Cluster: 166"
[1] "     Cluster: 167"
[1] "     Cluster: 170"
[1] "     Cluster: 172"
[1] "     Cluster: 174"
[1] "     Cluster: 175"
[1] "     Cluster: 176"
[1] "     Cluster: 177"
[1] "     Cluster: 178"
[1] "     Cluster: 179"
[1] "     Cluster: 180"
[1] "     Cluster: 184"
[1] "     Cluster: 187"
[1] "     Cluster: 188"
[1] "     Cluster: 189"
[1] "     Cluster: 190"
[1] "     Cluster: 191"
[1] "     Cluster: 192"
[1] "     Cluster: 193"
[1] "     Cluster: 194"
[1] "     Cluster: 198"
[1] "     Cluster: 200"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 443.502 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.701 0.269 
 2 mu         0.1   0.2 0.799 0.277 
 3 mu         0.1   0.3 0.733 0.184 
 4 mu         0.1   0.4 0.768 0.174 
 5 mu         0.1   0.5 0.742 0.145 
 6 mu         0.2   0.1 0.514 0.130 
 7 mu         0.2   0.2 0.584 0.121 
 8 mu         0.2   0.3 0.599 0.0920
 9 mu         0.2   0.4 0.660 0.106 
10 mu         0.2   0.5 0.676 0.105 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.869        0.621  0.000892     10.8 
 2 mu         0.2      0.963        0.958  0.0332        3.20
 3 mu         0.3      0.986        1      0.176         1.73
 4 mu         0.4      0.995        1      0.448         1.53
 5 mu         0.5      1.00         1      0.655         1.24
 6 mu         0.6      1.01         1      0.826         1.18
 7 mu         0.7      1.00         1      0.769         1.25
 8 mu         0.8      0.992        0.999  0.703         1.47
 9 mu         0.9      0.992        1      0.496         3.16
10 mu_1       0.1      0.959        0.884  0.00338       5.03
11 mu_1       0.2      0.986        1      0.0701        2.05
12 mu_1       0.3      0.990        1      0.272         1.64
13 mu_1       0.4      0.998        1      0.544         1.45
14 mu_1       0.5      1.00         1      0.685         1.25
15 mu_1       0.6      1.01         1      0.836         1.17
16 mu_1       0.7      1.00         1      0.750         1.28
17 mu_1       0.8      0.990        1      0.672         1.52
18 mu_1       0.9      0.993        1      0.490         3.33
19 mu_0       0.1      0.859        0.565  0.000616     11.8 
20 mu_0       0.2      0.958        0.918  0.0240        3.64
21 mu_0       0.3      0.984        1      0.135         1.94
22 mu_0       0.4      0.993        1      0.379         1.59
23 mu_0       0.5      1.00         1      0.591         1.30
24 mu_0       0.6      1.01         1      0.752         1.21
25 mu_0       0.7      1.01         1.00   0.812         1.22
26 mu_0       0.8      1.00         1      0.687         1.39
27 mu_0       0.9      0.982        0.987  0.551         1.62
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      2.37     0.000107   2.31e-18    232.  
 2 mu         0.2      1.89     0.0147     2.42e-12     79.2 
 3 mu         0.3      1.43     0.114      8.04e- 9     22.0 
 4 mu         0.4      1.19     0.527      2.54e- 6     12.8 
 5 mu         0.5      1.08     0.922      2.20e- 4      5.56
 6 mu         0.6      1.01     1.01       7.25e- 3      3.40
 7 mu         0.7      1.01     1.00       1.13e- 4      4.31
 8 mu         0.8      1.13     0.592      2.95e- 7      6.66
 9 mu         0.9      1.60     0.0659     1.01e-11     29.5 
10 mu_1       0.1      2.15     0.000611   0           145.  
11 mu_1       0.2      1.57     0.0361     0            42.7 
12 mu_1       0.3      1.26     0.268      0            15.6 
13 mu_1       0.4      1.13     0.673      0             7.08
14 mu_1       0.5      1.04     0.989      0             4.45
15 mu_1       0.6      0.991    0.995      0             2.75
16 mu_1       0.7      1.03     0.990      0             4.93
17 mu_1       0.8      1.17     0.456      0             8.32
18 mu_1       0.9      1.66     0.0428     0            32.8 
19 mu_0       0.1      2.40     0.0000468  0           241.  
20 mu_0       0.2      1.97     0.00654    0            92.8 
21 mu_0       0.3      1.50     0.0577     0            27.8 
22 mu_0       0.4      1.24     0.299      0            16.5 
23 mu_0       0.5      1.12     0.690      0             8.65
24 mu_0       0.6      1.03     0.998      0             4.72
25 mu_0       0.7      0.976    0.937      0             2.96
26 mu_0       0.8      0.994    0.867      0             6.34
27 mu_0       0.9      1.00     0.158      0             8.67
[1] "Total run time was 449.593 seconds"
