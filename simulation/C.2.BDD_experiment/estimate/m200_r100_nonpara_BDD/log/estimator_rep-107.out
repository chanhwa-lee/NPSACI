
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 200"
[1] "N_total: 2398"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
17 16  8 14 20  7 14 12 15 13 12  7 12  9 14 10 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02639 0.34719 0.60160 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
1418  980 
[1] "treatment indicator table: "

   0    1 
 879 1519 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1250
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 34"
[1] "     Cluster: 41"
[1] "     Cluster: 47"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] "     Cluster: 101"
[1] "     Cluster: 102"
[1] "     Cluster: 103"
[1] "     Cluster: 105"
[1] "     Cluster: 106"
[1] "     Cluster: 107"
[1] "     Cluster: 108"
[1] "     Cluster: 113"
[1] "     Cluster: 117"
[1] "     Cluster: 119"
[1] "     Cluster: 120"
[1] "     Cluster: 121"
[1] "     Cluster: 122"
[1] "     Cluster: 123"
[1] "     Cluster: 124"
[1] "     Cluster: 126"
[1] "     Cluster: 128"
[1] "     Cluster: 129"
[1] "     Cluster: 130"
[1] "     Cluster: 131"
[1] "     Cluster: 132"
[1] "     Cluster: 134"
[1] "     Cluster: 135"
[1] "     Cluster: 136"
[1] "     Cluster: 137"
[1] "     Cluster: 139"
[1] "     Cluster: 140"
[1] "     Cluster: 143"
[1] "     Cluster: 145"
[1] "     Cluster: 146"
[1] "     Cluster: 149"
[1] "     Cluster: 150"
[1] "     Cluster: 151"
[1] "     Cluster: 152"
[1] "     Cluster: 153"
[1] "     Cluster: 154"
[1] "     Cluster: 156"
[1] "     Cluster: 158"
[1] "     Cluster: 159"
[1] "     Cluster: 160"
[1] "     Cluster: 163"
[1] "     Cluster: 166"
[1] "     Cluster: 169"
[1] "     Cluster: 170"
[1] "     Cluster: 172"
[1] "     Cluster: 173"
[1] "     Cluster: 177"
[1] "     Cluster: 178"
[1] "     Cluster: 179"
[1] "     Cluster: 184"
[1] "     Cluster: 188"
[1] "     Cluster: 189"
[1] "     Cluster: 194"
[1] "     Cluster: 195"
[1] "     Cluster: 196"
[1] "     Cluster: 198"
[1] "     Cluster: 200"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1148
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 62"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 104"
[1] "     Cluster: 109"
[1] "     Cluster: 110"
[1] "     Cluster: 111"
[1] "     Cluster: 112"
[1] "     Cluster: 114"
[1] "     Cluster: 115"
[1] "     Cluster: 116"
[1] "     Cluster: 118"
[1] "     Cluster: 125"
[1] "     Cluster: 127"
[1] "     Cluster: 133"
[1] "     Cluster: 138"
[1] "     Cluster: 141"
[1] "     Cluster: 142"
[1] "     Cluster: 144"
[1] "     Cluster: 147"
[1] "     Cluster: 148"
[1] "     Cluster: 155"
[1] "     Cluster: 157"
[1] "     Cluster: 161"
[1] "     Cluster: 162"
[1] "     Cluster: 164"
[1] "     Cluster: 165"
[1] "     Cluster: 167"
[1] "     Cluster: 168"
[1] "     Cluster: 171"
[1] "     Cluster: 174"
[1] "     Cluster: 175"
[1] "     Cluster: 176"
[1] "     Cluster: 180"
[1] "     Cluster: 181"
[1] "     Cluster: 182"
[1] "     Cluster: 183"
[1] "     Cluster: 185"
[1] "     Cluster: 186"
[1] "     Cluster: 187"
[1] "     Cluster: 190"
[1] "     Cluster: 191"
[1] "     Cluster: 192"
[1] "     Cluster: 193"
[1] "     Cluster: 197"
[1] "     Cluster: 199"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 307.658 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.414 0.0550
 2 mu         0.1   0.2 0.555 0.0650
 3 mu         0.1   0.3 0.576 0.0679
 4 mu         0.1   0.4 0.622 0.0643
 5 mu         0.1   0.5 0.669 0.0714
 6 mu         0.2   0.1 0.369 0.0345
 7 mu         0.2   0.2 0.487 0.0404
 8 mu         0.2   0.3 0.514 0.0424
 9 mu         0.2   0.4 0.567 0.0342
10 mu         0.2   0.5 0.618 0.0361
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.846        0.703   0.00161      6.97
 2 mu         0.2      0.926        0.969   0.0645       2.49
 3 mu         0.3      0.975        1       0.319        1.98
 4 mu         0.4      0.994        1       0.637        1.73
 5 mu         0.5      1.00         1       0.840        1.26
 6 mu         0.6      1.00         1       0.886        1.17
 7 mu         0.7      1.00         1       0.861        1.20
 8 mu         0.8      1.01         1       0.786        1.29
 9 mu         0.9      1.02         1       0.400        1.69
10 mu_1       0.1      0.892        0.904   0.00587      4.18
11 mu_1       0.2      0.962        0.992   0.124        1.84
12 mu_1       0.3      0.987        1       0.438        2.03
13 mu_1       0.4      0.998        1       0.748        1.56
14 mu_1       0.5      1.00         1       0.862        1.22
15 mu_1       0.6      1.00         1       0.862        1.15
16 mu_1       0.7      1.00         1       0.869        1.24
17 mu_1       0.8      1.01         1       0.742        1.33
18 mu_1       0.9      1.02         1       0.359        1.76
19 mu_0       0.1      0.841        0.648   0.00113      7.28
20 mu_0       0.2      0.917        0.970   0.0497       2.82
21 mu_0       0.3      0.969        0.997   0.268        1.95
22 mu_0       0.4      0.992        1       0.562        1.85
23 mu_0       0.5      1.00         1       0.773        1.35
24 mu_0       0.6      1.00         1       0.872        1.22
25 mu_0       0.7      1.00         1       0.831        1.14
26 mu_0       0.8      1.00         1       0.833        1.31
27 mu_0       0.9      1.01         1       0.503        1.57
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.843    0.000247   8.73e-17     39.1 
 2 mu         0.2      1.39     0.0181     4.07e-11     42.8 
 3 mu         0.3      1.35     0.109      7.89e- 8     22.2 
 4 mu         0.4      1.16     0.456      1.60e- 5     10.6 
 5 mu         0.5      1.03     0.891      5.98e- 4      4.28
 6 mu         0.6      0.967    0.937      1.11e- 2      2.69
 7 mu         0.7      0.972    0.952      2.74e- 4      3.26
 8 mu         0.8      1.05     0.737      9.33e- 7      5.39
 9 mu         0.9      1.18     0.112      4.05e-11     16.6 
10 mu_1       0.1      1.48     0.00139    8.30e-16     60.2 
11 mu_1       0.2      1.53     0.0557     1.93e-10     32.9 
12 mu_1       0.3      1.27     0.260      2.50e- 7     16.1 
13 mu_1       0.4      1.09     0.653      3.80e- 5      6.13
14 mu_1       0.5      0.998    0.906      1.20e- 3      3.90
15 mu_1       0.6      0.956    0.967      3.58e- 3      2.61
16 mu_1       0.7      0.977    0.925      6.52e- 5      3.37
17 mu_1       0.8      1.06     0.637      1.94e- 7      6.06
18 mu_1       0.9      1.17     0.0812     7.51e-12     18.5 
19 mu_0       0.1      0.773    0.0000895  0            36.8 
20 mu_0       0.2      1.35     0.00568    0            45.3 
21 mu_0       0.3      1.39     0.0536     0            26.8 
22 mu_0       0.4      1.21     0.259      0            13.6 
23 mu_0       0.5      1.07     0.629      0             5.25
24 mu_0       0.6      0.984    0.950      0             3.35
25 mu_0       0.7      0.961    0.928      0             3.13
26 mu_0       0.8      1.01     1.01       0             3.81
27 mu_0       0.9      1.20     0.334      0            11.2 
[1] "Total run time was 311.625 seconds"
