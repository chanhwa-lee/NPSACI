
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1254"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5 10  3  5  5  8  5  9  7  5  8  4 10  5  5  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.05039 0.39106 0.63567 1.00000 5.58967 
[1] "event indicator table: "

  0   1 
724 530 
[1] "treatment indicator table: "

  0   1 
452 802 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 647
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 607
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 9"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 62"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 69.286 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.269 0.205
 2 mu         0.1   0.2 0.356 0.247
 3 mu         0.1   0.3 0.409 0.281
 4 mu         0.1   0.4 0.510 0.292
 5 mu         0.1   0.5 0.526 0.312
 6 mu         0.2   0.1 0.279 0.165
 7 mu         0.2   0.2 0.341 0.198
 8 mu         0.2   0.3 0.413 0.226
 9 mu         0.2   0.4 0.507 0.238
10 mu         0.2   0.5 0.528 0.254
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      3.52         0.156 0.000000241    291.  
 2 mu         0.2      2.32         0.588 0.000239       141.  
 3 mu         0.3      1.41         0.885 0.00911         43.0 
 4 mu         0.4      1.08         1     0.0842           9.50
 5 mu         0.5      1.00         1     0.332            2.04
 6 mu         0.6      0.999        1     0.712            1.21
 7 mu         0.7      0.999        1     0.820            1.37
 8 mu         0.8      0.993        1     0.557            1.55
 9 mu         0.9      0.985        0.979 0.153            2.87
10 mu_1       0.1      3.12         0.411 0.00000136     224.  
11 mu_1       0.2      1.55         0.794 0.000692        54.5 
12 mu_1       0.3      1.11         0.993 0.0180          11.4 
13 mu_1       0.4      1.01         1     0.128            2.39
14 mu_1       0.5      0.996        0.999 0.419            1.31
15 mu_1       0.6      0.999        1     0.785            1.18
16 mu_1       0.7      1.00         1     0.815            1.43
17 mu_1       0.8      0.993        1     0.507            1.55
18 mu_1       0.9      0.986        0.981 0.133            3.10
19 mu_0       0.1      3.56         0.127 0.000000117    298.  
20 mu_0       0.2      2.51         0.525 0.000126       163.  
21 mu_0       0.3      1.54         0.823 0.00530         56.6 
22 mu_0       0.4      1.13         1     0.0549          14.2 
23 mu_0       0.5      1.01         1     0.246            3.02
24 mu_0       0.6      0.998        1     0.603            1.27
25 mu_0       0.7      0.999        1     0.796            1.22
26 mu_0       0.8      0.996        1     0.757            1.54
27 mu_0       0.9      0.978        1     0.326            1.80
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.695    0.000116   1.12e-13     44.6 
 2 mu         0.2      1.48     0.00847    8.02e- 9     44.9 
 3 mu         0.3      2.51     0.0922     4.61e- 6     78.4 
 4 mu         0.4      2.62     0.337      3.94e- 4     75.6 
 5 mu         0.5      1.91     0.664      1.17e- 2     40.4 
 6 mu         0.6      1.31     0.992      1.67e- 1      9.95
 7 mu         0.7      1.25     1.08       1.59e- 2      5.62
 8 mu         0.8      1.79     0.437      4.72e- 4     13.0 
 9 mu         0.9      2.84     0.0374     1.04e- 6     52.0 
10 mu_1       0.1      1.14     0.000700   9.53e-13     44.6 
11 mu_1       0.2      2.04     0.0269     3.77e- 8     70.1 
12 mu_1       0.3      2.79     0.177      1.45e- 5     81.7 
13 mu_1       0.4      2.43     0.532      9.27e- 4     69.6 
14 mu_1       0.5      1.66     0.874      2.20e- 2     29.8 
15 mu_1       0.6      1.24     1.06       3.02e- 2      6.11
16 mu_1       0.7      1.33     0.999      2.27e- 3      6.80
17 mu_1       0.8      1.93     0.330      5.90e- 5     14.4 
18 mu_1       0.9      2.95     0.0229     1.15e- 7     57.8 
19 mu_0       0.1      0.646    0.0000321  0            44.6 
20 mu_0       0.2      1.34     0.00414    0            38.6 
21 mu_0       0.3      2.39     0.0393     0            77.0 
22 mu_0       0.4      2.75     0.184      0            79.5 
23 mu_0       0.5      2.15     0.509      0            51.0 
24 mu_0       0.6      1.43     0.825      0            15.7 
25 mu_0       0.7      1.08     0.968      0             3.82
26 mu_0       0.8      1.21     0.581      0             8.35
27 mu_0       0.9      1.90     0.102      0            23.7 
[1] "Total run time was 71.223 seconds"
