
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1216"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 7  5  8  9  7 12  7  2  3  4  5  4  6  7  3 11 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04492 0.37027 0.62278 1.00000 8.00000 
[1] "event indicator table: "

  0   1 
721 495 
[1] "treatment indicator table: "

  0   1 
439 777 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 657
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 37"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 96"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 559
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 7"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 205.098 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.239 0.167
 2 mu         0.1   0.2 0.393 0.181
 3 mu         0.1   0.3 0.447 0.218
 4 mu         0.1   0.4 0.532 0.212
 5 mu         0.1   0.5 0.516 0.238
 6 mu         0.2   0.1 0.224 0.167
 7 mu         0.2   0.2 0.366 0.178
 8 mu         0.2   0.3 0.412 0.215
 9 mu         0.2   0.4 0.493 0.208
10 mu         0.2   0.5 0.482 0.236
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1      1.06         0.152 0.0000000260      41.7 
 2 mu         0.2      1.51         0.480 0.0000344         66.8 
 3 mu         0.3      1.39         0.755 0.00178           53.4 
 4 mu         0.4      1.16         0.918 0.0229            29.0 
 5 mu         0.5      1.03         0.972 0.130             11.5 
 6 mu         0.6      0.992        0.998 0.406              3.57
 7 mu         0.7      0.997        0.999 0.749              1.43
 8 mu         0.8      0.990        0.994 0.485              1.72
 9 mu         0.9      0.957        0.940 0.0852             4.31
10 mu_1       0.1      1.71         0.414 0.000000172       84.3 
11 mu_1       0.2      1.57         0.696 0.000116          68.3 
12 mu_1       0.3      1.24         0.853 0.00405           37.1 
13 mu_1       0.4      1.04         0.953 0.0398            15.6 
14 mu_1       0.5      0.983        0.992 0.183              5.35
15 mu_1       0.6      0.987        1     0.491              1.84
16 mu_1       0.7      0.999        1     0.799              1.41
17 mu_1       0.8      0.989        0.997 0.423              1.93
18 mu_1       0.9      0.956        0.931 0.0683             4.62
19 mu_0       0.1      0.987        0.122 0.00000000979     37.0 
20 mu_0       0.2      1.50         0.434 0.0000141         66.4 
21 mu_0       0.3      1.46         0.687 0.000802          60.4 
22 mu_0       0.4      1.24         0.879 0.0116            38.0 
23 mu_0       0.5      1.07         0.956 0.0757            17.7 
24 mu_0       0.6      0.999        0.991 0.278              6.17
25 mu_0       0.7      0.992        1     0.549              1.91
26 mu_0       0.8      0.997        1     0.735              1.27
27 mu_0       0.9      0.972        1     0.237              2.02
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     373.      0.0000443  1.69e-14   25943. 
 2 mu         0.2     985.      0.00692    3.49e- 9   91001. 
 3 mu         0.3    1262.      0.0926     3.95e- 6  120609. 
 4 mu         0.4    1021.      0.348      4.82e- 4   97178. 
 5 mu         0.5     565.      0.753      4.49e- 3   52970. 
 6 mu         0.6     207.      0.986      2.78e- 2   19196. 
 7 mu         0.7      44.9     1.30       4.35e- 3    4069. 
 8 mu         0.8       6.04    0.825      1.13e- 5     355. 
 9 mu         0.9       3.91    0.124      3.90e-10      99.5
10 mu_1       0.1     887.      0.000343   1.52e-13   77830. 
11 mu_1       0.2    1427.      0.0203     1.57e- 8  136502. 
12 mu_1       0.3    1254.      0.197      1.19e- 5  120609. 
13 mu_1       0.4     770.      0.649      1.14e- 3   72883. 
14 mu_1       0.5     345.      0.943      8.98e- 3   31782. 
15 mu_1       0.6     107.      1.02       2.90e- 2    9598. 
16 mu_1       0.7      20.6     1.16       3.88e- 4    1744. 
17 mu_1       0.8       3.90    0.667      8.86e- 7     133. 
18 mu_1       0.9       4.03    0.0824     2.70e-11     111. 
19 mu_0       0.1     316.      0.0000174  0          20178. 
20 mu_0       0.2     875.      0.00341    0          79626. 
21 mu_0       0.3    1266.      0.0357     0         120609. 
22 mu_0       0.4    1188.      0.203      0         113374. 
23 mu_0       0.5     785.      0.557      0          74158. 
24 mu_0       0.6     358.      0.970      0          33592. 
25 mu_0       0.7     102.      1.00       0           9494. 
26 mu_0       0.8      14.6     1.27       0           1244. 
27 mu_0       0.9       2.79    0.307      0             31.3
[1] "Total run time was 209.647 seconds"
