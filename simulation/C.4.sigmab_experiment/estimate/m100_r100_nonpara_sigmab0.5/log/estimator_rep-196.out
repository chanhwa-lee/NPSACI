
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1215"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
10  7  7  3 11  8  4  5  5  4  4  3  6  9  6  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04061 0.33949 0.56885 0.91545 5.00000 
[1] "event indicator table: "

  0   1 
719 496 
[1] "treatment indicator table: "

  0   1 
422 793 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 594
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 68"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 621
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 77"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 239.66 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.276 0.0599
 2 mu         0.1   0.2 0.346 0.0920
 3 mu         0.1   0.3 0.456 0.0974
 4 mu         0.1   0.4 0.523 0.0929
 5 mu         0.1   0.5 0.552 0.0928
 6 mu         0.2   0.1 0.285 0.0411
 7 mu         0.2   0.2 0.369 0.0549
 8 mu         0.2   0.3 0.467 0.0583
 9 mu         0.2   0.4 0.520 0.0602
10 mu         0.2   0.5 0.543 0.0572
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.887        0.561 0.0000417      7.89
 2 mu         0.2      0.901        0.878 0.00711        4.01
 3 mu         0.3      0.942        0.973 0.0818         2.76
 4 mu         0.4      0.970        0.993 0.295          1.79
 5 mu         0.5      0.989        1     0.569          1.28
 6 mu         0.6      1.00         1     0.815          1.15
 7 mu         0.7      1.00         1     0.839          1.14
 8 mu         0.8      0.995        1     0.564          1.35
 9 mu         0.9      1.01         1     0.212          3.58
10 mu_1       0.1      0.843        0.807 0.000191       5.26
11 mu_1       0.2      0.908        0.953 0.0166         3.87
12 mu_1       0.3      0.952        0.963 0.132          2.09
13 mu_1       0.4      0.977        1     0.375          1.40
14 mu_1       0.5      0.994        1.00  0.635          1.22
15 mu_1       0.6      1.00         1     0.862          1.12
16 mu_1       0.7      0.999        1     0.797          1.16
17 mu_1       0.8      0.995        1     0.526          1.44
18 mu_1       0.9      1.01         1     0.193          3.83
19 mu_0       0.1      0.892        0.509 0.0000251      8.72
20 mu_0       0.2      0.899        0.865 0.00473        4.58
21 mu_0       0.3      0.938        0.964 0.0604         3.11
22 mu_0       0.4      0.965        0.976 0.242          2.09
23 mu_0       0.5      0.985        1     0.503          1.43
24 mu_0       0.6      0.999        1     0.745          1.19
25 mu_0       0.7      1.00         1     0.900          1.11
26 mu_0       0.8      0.994        1     0.718          1.20
27 mu_0       0.9      0.984        1     0.391          1.44
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.486    0.0000512  6.98e-18     18.5 
 2 mu         0.2      1.40     0.00662    6.41e-12     63.8 
 3 mu         0.3      1.88     0.0753     1.42e- 8     57.0 
 4 mu         0.4      1.70     0.288      3.36e- 6     36.3 
 5 mu         0.5      1.31     0.761      2.33e- 4     16.2 
 6 mu         0.6      1.08     1.03       7.45e- 3      3.21
 7 mu         0.7      1.06     1.06       2.78e- 2      2.32
 8 mu         0.8      1.26     0.708      2.44e- 4      8.04
 9 mu         0.9      2.34     0.156      4.76e- 8     84.8 
10 mu_1       0.1      1.12     0.000353   6.98e-17     43.4 
11 mu_1       0.2      1.88     0.0208     3.20e-11     75.1 
12 mu_1       0.3      1.94     0.152      4.73e- 8     44.7 
13 mu_1       0.4      1.55     0.479      8.40e- 6     31.7 
14 mu_1       0.5      1.19     0.950      4.66e- 4     11.3 
15 mu_1       0.6      1.04     1.06       1.24e- 2      2.50
16 mu_1       0.7      1.07     1.03       9.34e- 3      2.58
17 mu_1       0.8      1.32     0.568      7.16e- 5     10.1 
18 mu_1       0.9      2.48     0.115      1.24e- 8     94.2 
19 mu_0       0.1      0.416    0.0000194  0            17.1 
20 mu_0       0.2      1.28     0.00183    0            61.0 
21 mu_0       0.3      1.85     0.0314     0            62.2 
22 mu_0       0.4      1.79     0.160      0            39.3 
23 mu_0       0.5      1.43     0.559      0            21.0 
24 mu_0       0.6      1.14     1.02       0             5.17
25 mu_0       0.7      1.03     1.10       0             1.95
26 mu_0       0.8      1.02     0.923      0             4.25
27 mu_0       0.9      1.06     0.220      0            14.0 
[1] "Total run time was 246.647 seconds"
