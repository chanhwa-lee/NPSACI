
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1272"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 3  4  8  6  2 10  7  9  5  7  9 10  7  3  5  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0160  0.2611  0.5406  0.9029  5.4092 
[1] "event indicator table: "

  0   1 
752 520 
[1] "treatment indicator table: "

  0   1 
487 785 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 614
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 658
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 52"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 101.469 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.454 0.150 
 2 mu         0.1   0.2 0.484 0.172 
 3 mu         0.1   0.3 0.584 0.199 
 4 mu         0.1   0.4 0.626 0.207 
 5 mu         0.1   0.5 0.664 0.218 
 6 mu         0.2   0.1 0.429 0.0970
 7 mu         0.2   0.2 0.465 0.107 
 8 mu         0.2   0.3 0.556 0.127 
 9 mu         0.2   0.4 0.604 0.133 
10 mu         0.2   0.5 0.653 0.143 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      2.47         0.593  0.000353    155.  
 2 mu         0.2      1.42         0.974  0.0263       43.9 
 3 mu         0.3      1.06         0.996  0.185         7.71
 4 mu         0.4      0.999        0.993  0.491         1.46
 5 mu         0.5      0.991        0.998  0.767         1.16
 6 mu         0.6      0.988        0.988  0.879         1.14
 7 mu         0.7      0.993        1      0.820         1.19
 8 mu         0.8      1.01         1.02   0.671         1.41
 9 mu         0.9      1.05         1.01   0.337         1.97
10 mu_1       0.1      1.98         0.942  0.00143      92.6 
11 mu_1       0.2      1.15         1      0.0551       15.0 
12 mu_1       0.3      1.01         0.989  0.273         2.45
13 mu_1       0.4      0.995        1.00   0.588         1.34
14 mu_1       0.5      0.989        0.992  0.803         1.18
15 mu_1       0.6      0.987        0.998  0.865         1.12
16 mu_1       0.7      0.995        1      0.791         1.20
17 mu_1       0.8      1.02         1.01   0.655         1.46
18 mu_1       0.9      1.06         1.02   0.314         2.01
19 mu_0       0.1      2.52         0.541  0.000233    162.  
20 mu_0       0.2      1.49         0.942  0.0191       51.1 
21 mu_0       0.3      1.08         1      0.148         9.96
22 mu_0       0.4      1.00         0.992  0.426         1.82
23 mu_0       0.5      0.992        1      0.689         1.24
24 mu_0       0.6      0.988        0.985  0.864         1.17
25 mu_0       0.7      0.986        0.986  0.853         1.15
26 mu_0       0.8      0.996        1      0.734         1.25
27 mu_0       0.9      1.02         1.03   0.539         1.59
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       2.53    0.0000948  1.62e-14     95.4 
 2 mu         0.2       4.03    0.00907    1.89e- 9    192.  
 3 mu         0.3       3.08    0.102      1.63e- 6    115.  
 4 mu         0.4       1.89    0.365      1.86e- 4     30.8 
 5 mu         0.5       1.28    0.834      6.87e- 3     19.8 
 6 mu         0.6       1.07    1.02       4.17e- 2      7.93
 7 mu         0.7       1.15    1.12       1.57e- 3      2.84
 8 mu         0.8       1.39    0.668      1.15e- 5      8.25
 9 mu         0.9       1.75    0.0770     2.80e-10     30.0 
10 mu_1       0.1       4.05    0.000679   1.53e-13    158.  
11 mu_1       0.2       4.00    0.0279     8.92e- 9    192.  
12 mu_1       0.3       2.48    0.233      5.13e- 6     76.7 
13 mu_1       0.4       1.54    0.611      4.38e- 4     26.8 
14 mu_1       0.5       1.14    0.907      1.30e- 2     15.8 
15 mu_1       0.6       1.05    1.03       1.30e- 2      5.29
16 mu_1       0.7       1.17    0.992      4.21e- 4      3.13
17 mu_1       0.8       1.42    0.527      2.83e- 6      9.67
18 mu_1       0.9       1.77    0.0570     6.23e-11     31.5 
19 mu_0       0.1       2.36    0.0000299  0            96.4 
20 mu_0       0.2       4.04    0.00459    0           192.  
21 mu_0       0.3       3.33    0.0469     0           131.  
22 mu_0       0.4       2.12    0.215      0            41.1 
23 mu_0       0.5       1.42    0.695      0            23.8 
24 mu_0       0.6       1.11    0.850      0            11.9 
25 mu_0       0.7       1.09    1.11       0             3.65
26 mu_0       0.8       1.26    1.15       0             4.01
27 mu_0       0.9       1.59    0.269      0            16.7 
[1] "Total run time was 104.581 seconds"
