
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1267"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  5  1  7  7  6 11  9  8  7  6  6  6  4  5  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03894 0.35066 0.59237 0.96814 5.00000 
[1] "event indicator table: "

  0   1 
783 484 
[1] "treatment indicator table: "

  0   1 
446 821 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 666
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 9"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 601
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 74"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 112.213 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.460 0.0822
 2 mu         0.1   0.2 0.525 0.0780
 3 mu         0.1   0.3 0.568 0.0712
 4 mu         0.1   0.4 0.600 0.0809
 5 mu         0.1   0.5 0.660 0.0775
 6 mu         0.2   0.1 0.416 0.0629
 7 mu         0.2   0.2 0.479 0.0596
 8 mu         0.2   0.3 0.521 0.0504
 9 mu         0.2   0.4 0.562 0.0620
10 mu         0.2   0.5 0.627 0.0536
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.803        0.580  0.00137       3.67
 2 mu         0.2      0.938        0.950  0.0594        3.38
 3 mu         0.3      0.985        1      0.290         2.47
 4 mu         0.4      0.995        1      0.554         1.63
 5 mu         0.5      1.00         0.995  0.819         1.29
 6 mu         0.6      1.01         1      0.853         1.25
 7 mu         0.7      1.00         1      0.734         1.25
 8 mu         0.8      0.983        1.00   0.547         1.42
 9 mu         0.9      0.958        1      0.209         2.38
10 mu_1       0.1      0.921        0.893  0.00540       4.17
11 mu_1       0.2      0.978        1      0.118         3.05
12 mu_1       0.3      0.995        1      0.379         2.02
13 mu_1       0.4      0.998        0.996  0.635         1.46
14 mu_1       0.5      1.00         0.999  0.843         1.23
15 mu_1       0.6      1.01         1      0.835         1.26
16 mu_1       0.7      0.999        1      0.717         1.26
17 mu_1       0.8      0.979        0.998  0.468         1.48
18 mu_1       0.9      0.956        1      0.167         2.51
19 mu_0       0.1      0.790        0.534  0.000856      3.95
20 mu_0       0.2      0.928        0.931  0.0432        3.46
21 mu_0       0.3      0.981        1      0.252         2.67
22 mu_0       0.4      0.994        1      0.500         1.81
23 mu_0       0.5      0.997        0.996  0.757         1.39
24 mu_0       0.6      1.01         1      0.844         1.26
25 mu_0       0.7      1.01         1.00   0.774         1.27
26 mu_0       0.8      0.998        1      0.685         1.31
27 mu_0       0.9      0.976        0.987  0.544         1.76
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.941   0.0000183   3.72e-18     48.5 
 2 mu         0.2      1.32    0.00340     1.95e-12     42.5 
 3 mu         0.3      1.19    0.0472      4.32e- 9     25.0 
 4 mu         0.4      1.05    0.254       1.02e- 6     11.3 
 5 mu         0.5      1.04    0.704       7.09e- 5      5.13
 6 mu         0.6      1.18    1.03        2.26e- 3      5.95
 7 mu         0.7      1.81    1.03        5.42e- 4     51.5 
 8 mu         0.8      4.90    0.747       1.85e- 6    334.  
 9 mu         0.9     19.1     0.0838      8.03e-11   1736.  
10 mu_1       0.1      1.54    0.000120    3.72e-17     60.6 
11 mu_1       0.2      1.34    0.0110      9.74e-12     26.6 
12 mu_1       0.3      1.07    0.105       1.44e- 8     10.4 
13 mu_1       0.4      0.974   0.434       2.55e- 6      6.19
14 mu_1       0.5      1.03    0.863       1.42e- 4      4.67
15 mu_1       0.6      1.25    0.964       3.77e- 3      9.91
16 mu_1       0.7      2.08    0.999       1.29e- 4     73.5 
17 mu_1       0.8      5.79    0.626       3.85e- 7    417.  
18 mu_1       0.9     21.0     0.0631      1.49e-11   1929.  
19 mu_0       0.1      0.874   0.00000651  0            47.1 
20 mu_0       0.2      1.32    0.00131     0            46.5 
21 mu_0       0.3      1.25    0.0217      0            31.3 
22 mu_0       0.4      1.10    0.127       0            16.6 
23 mu_0       0.5      1.05    0.488       0             6.93
24 mu_0       0.6      1.09    0.933       0             4.27
25 mu_0       0.7      1.18    1.00        0             4.59
26 mu_0       0.8      1.37    0.942       0            11.6 
27 mu_0       0.9      1.89    0.195       0            18.9 
[1] "Total run time was 114.768 seconds"
