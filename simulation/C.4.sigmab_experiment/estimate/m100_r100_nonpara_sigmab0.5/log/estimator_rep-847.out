
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1167"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 19 20 
 8  7 10  9  5  7  4  8  3  6  9  7  6  4  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02414 0.32590 0.59503 1.00000 6.00000 
[1] "event indicator table: "

  0   1 
720 447 
[1] "treatment indicator table: "

  0   1 
407 760 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 617
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 31"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 550
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 617.221 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.447 0.118 
 2 mu         0.1   0.2 0.473 0.107 
 3 mu         0.1   0.3 0.510 0.104 
 4 mu         0.1   0.4 0.532 0.0979
 5 mu         0.1   0.5 0.572 0.105 
 6 mu         0.2   0.1 0.396 0.0901
 7 mu         0.2   0.2 0.444 0.0799
 8 mu         0.2   0.3 0.471 0.0745
 9 mu         0.2   0.4 0.514 0.0653
10 mu         0.2   0.5 0.552 0.0708
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.444        0.141 0.0000627      8.86
 2 mu         0.2      0.687        0.496 0.0108         5.63
 3 mu         0.3      0.849        0.792 0.125          3.36
 4 mu         0.4      0.941        0.947 0.397          2.14
 5 mu         0.5      0.985        0.995 0.629          1.65
 6 mu         0.6      1.00         1     0.812          1.17
 7 mu         0.7      1.00         1     0.870          1.17
 8 mu         0.8      0.996        1     0.585          1.34
 9 mu         0.9      0.935        0.949 0.148          2.12
10 mu_1       0.1      0.657        0.410 0.000287       7.90
11 mu_1       0.2      0.824        0.790 0.0252         4.76
12 mu_1       0.3      0.921        0.937 0.203          2.83
13 mu_1       0.4      0.974        1.00  0.495          2.02
14 mu_1       0.5      0.997        1     0.699          1.47
15 mu_1       0.6      1.00         1     0.855          1.10
16 mu_1       0.7      1.01         1     0.808          1.20
17 mu_1       0.8      0.992        1     0.515          1.40
18 mu_1       0.9      0.928        0.938 0.129          2.22
19 mu_0       0.1      0.420        0.110 0.0000378      8.97
20 mu_0       0.2      0.653        0.419 0.00714        6.22
21 mu_0       0.3      0.818        0.714 0.0924         3.77
22 mu_0       0.4      0.919        0.920 0.331          2.33
23 mu_0       0.5      0.973        0.985 0.560          1.82
24 mu_0       0.6      0.995        1     0.747          1.30
25 mu_0       0.7      1.00         1.00  0.901          1.12
26 mu_0       0.8      1.01         1     0.817          1.29
27 mu_0       0.9      0.998        1     0.321          1.72
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      2.97     0.0000496  7.93e-15    247.  
 2 mu         0.2      2.94     0.00597    1.64e- 9    171.  
 3 mu         0.3      2.58     0.0523     1.86e- 6     77.0 
 4 mu         0.4      1.98     0.220      2.42e- 4     27.9 
 5 mu         0.5      1.35     0.607      9.34e- 3     11.0 
 6 mu         0.6      1.01     0.931      1.56e- 1      3.52
 7 mu         0.7      1.03     0.967      8.77e- 2      4.61
 8 mu         0.8      1.32     0.639      1.73e- 3      9.11
 9 mu         0.9      1.70     0.108      4.82e- 7     22.3 
10 mu_1       0.1      3.56     0.000324   7.14e-14    247.  
11 mu_1       0.2      2.57     0.0181     7.39e- 9     85.4 
12 mu_1       0.3      2.16     0.129      5.58e- 6     39.3 
13 mu_1       0.4      1.60     0.389      5.45e- 4     19.9 
14 mu_1       0.5      1.13     0.825      1.68e- 2      6.73
15 mu_1       0.6      0.961    0.951      1.67e- 1      1.92
16 mu_1       0.7      1.07     0.936      1.25e- 2      5.42
17 mu_1       0.8      1.39     0.512      3.26e- 4     10.2 
18 mu_1       0.9      1.74     0.0805     1.88e- 7     24.8 
19 mu_0       0.1      2.90     0.0000147  0           247.  
20 mu_0       0.2      3.03     0.00164    0           192.  
21 mu_0       0.3      2.76     0.0209     0            99.0 
22 mu_0       0.4      2.24     0.130      0            38.5 
23 mu_0       0.5      1.57     0.388      0            15.7 
24 mu_0       0.6      1.10     0.766      0             7.34
25 mu_0       0.7      0.935    0.883      0             2.71
26 mu_0       0.8      1.03     0.889      0             7.81
27 mu_0       0.9      1.35     0.246      0            17.8 
[1] "Total run time was 622.883 seconds"
