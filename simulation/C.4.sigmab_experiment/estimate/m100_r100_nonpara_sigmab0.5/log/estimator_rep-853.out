
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1333"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  7  4  4  6  6  3  5  4  7  7 10  6  9  5 11 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03522 0.34331 0.63127 1.00000 6.00000 
[1] "event indicator table: "

  0   1 
822 511 
[1] "treatment indicator table: "

  0   1 
516 817 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 671
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 662
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 24"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 150.226 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.220 0.113 
 2 mu         0.1   0.2 0.384 0.0701
 3 mu         0.1   0.3 0.411 0.0811
 4 mu         0.1   0.4 0.454 0.0878
 5 mu         0.1   0.5 0.464 0.0928
 6 mu         0.2   0.1 0.208 0.0550
 7 mu         0.2   0.2 0.322 0.0405
 8 mu         0.2   0.3 0.375 0.0378
 9 mu         0.2   0.4 0.402 0.0425
10 mu         0.2   0.5 0.413 0.0466
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.790        0.493 0.0000463     11.6 
 2 mu         0.2      0.915        0.940 0.00690        4.02
 3 mu         0.3      0.983        1     0.0681         2.89
 4 mu         0.4      1.00         1     0.214          2.11
 5 mu         0.5      0.991        1     0.401          1.43
 6 mu         0.6      0.980        0.985 0.640          1.19
 7 mu         0.7      0.979        0.991 0.777          1.17
 8 mu         0.8      0.987        0.999 0.612          1.32
 9 mu         0.9      1.01         1     0.317          2.76
10 mu_1       0.1      0.912        0.842 0.000210       7.34
11 mu_1       0.2      0.971        1     0.0157         3.15
12 mu_1       0.3      1.00         1     0.106          2.73
13 mu_1       0.4      0.999        1     0.266          1.76
14 mu_1       0.5      0.984        1     0.452          1.21
15 mu_1       0.6      0.976        0.986 0.695          1.20
16 mu_1       0.7      0.979        0.992 0.745          1.15
17 mu_1       0.8      0.989        1     0.584          1.44
18 mu_1       0.9      1.01         1     0.282          2.99
19 mu_0       0.1      0.776        0.440 0.0000282     12.0 
20 mu_0       0.2      0.901        0.898 0.00469        4.56
21 mu_0       0.3      0.975        1     0.0519         2.95
22 mu_0       0.4      1.00         1     0.180          2.34
23 mu_0       0.5      0.999        1     0.350          1.65
24 mu_0       0.6      0.985        1     0.558          1.35
25 mu_0       0.7      0.979        0.984 0.810          1.20
26 mu_0       0.8      0.980        0.991 0.726          1.25
27 mu_0       0.9      0.980        1     0.526          1.46
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.799    0.000163   1.19e-17     57.1 
 2 mu         0.2      2.06     0.0118     6.26e-12     87.8 
 3 mu         0.3      2.71     0.0907     1.39e- 8     58.4 
 4 mu         0.4      2.55     0.359      3.28e- 6     71.7 
 5 mu         0.5      1.81     0.886      2.28e- 4     47.9 
 6 mu         0.6      1.20     0.965      7.28e- 3     14.2 
 7 mu         0.7      1.06     0.929      4.09e- 3      5.88
 8 mu         0.8      1.41     0.508      2.09e- 5     22.1 
 9 mu         0.9      2.69     0.0626     1.82e- 9     89.2 
10 mu_1       0.1      1.61     0.000953   1.19e-16    101.  
11 mu_1       0.2      2.58     0.0382     3.13e-11     77.4 
12 mu_1       0.3      2.83     0.214      4.63e- 8     60.8 
13 mu_1       0.4      2.38     0.582      8.21e- 6     71.7 
14 mu_1       0.5      1.61     0.867      4.56e- 4     38.3 
15 mu_1       0.6      1.12     1.08       1.21e- 2      9.44
16 mu_1       0.7      1.07     0.837      1.03e- 3      7.47
17 mu_1       0.8      1.50     0.367      4.62e- 6     27.1 
18 mu_1       0.9      2.84     0.0385     3.57e-10     99.1 
19 mu_0       0.1      0.709    0.0000681  0            52.2 
20 mu_0       0.2      1.93     0.00489    0            90.3 
21 mu_0       0.3      2.65     0.0368     0            60.3 
22 mu_0       0.4      2.66     0.230      0            71.7 
23 mu_0       0.5      2.01     0.725      0            57.5 
24 mu_0       0.6      1.31     0.919      0            21.2 
25 mu_0       0.7      1.02     0.972      0             3.75
26 mu_0       0.8      1.04     0.704      0            12.3 
27 mu_0       0.9      1.37     0.177      0            40.5 
[1] "Total run time was 153.84 seconds"
