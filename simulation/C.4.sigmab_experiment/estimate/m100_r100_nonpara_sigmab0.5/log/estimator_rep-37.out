
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1321"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  7  4  4  6  5  6  6  6  4  4 10  8  7  9  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.05284 0.35072 0.61877 1.00000 4.42353 
[1] "event indicator table: "

  0   1 
760 561 
[1] "treatment indicator table: "

  0   1 
478 843 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 672
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 649
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 221.748 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.315 0.0716
 2 mu         0.1   0.2 0.389 0.0826
 3 mu         0.1   0.3 0.468 0.0846
 4 mu         0.1   0.4 0.554 0.0907
 5 mu         0.1   0.5 0.668 0.120 
 6 mu         0.2   0.1 0.266 0.0471
 7 mu         0.2   0.2 0.346 0.0597
 8 mu         0.2   0.3 0.420 0.0576
 9 mu         0.2   0.4 0.497 0.0585
10 mu         0.2   0.5 0.599 0.0911
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.773        0.600  0.00133       6.59
 2 mu         0.2      0.927        0.844  0.0484        3.11
 3 mu         0.3      0.964        0.943  0.212         2.25
 4 mu         0.4      0.972        1      0.434         1.54
 5 mu         0.5      0.986        0.999  0.680         1.21
 6 mu         0.6      0.999        1      0.851         1.21
 7 mu         0.7      1.00         1      0.863         1.16
 8 mu         0.8      0.993        1      0.702         1.23
 9 mu         0.9      0.972        1      0.358         1.91
10 mu_1       0.1      0.921        0.930  0.00479       3.99
11 mu_1       0.2      0.975        0.936  0.0912        2.76
12 mu_1       0.3      0.975        1      0.310         1.77
13 mu_1       0.4      0.979        0.998  0.567         1.40
14 mu_1       0.5      0.993        1      0.788         1.20
15 mu_1       0.6      1.00         1      0.866         1.20
16 mu_1       0.7      0.999        1      0.841         1.16
17 mu_1       0.8      0.992        1      0.687         1.25
18 mu_1       0.9      0.968        1      0.327         2.01
19 mu_0       0.1      0.756        0.554  0.000946      7.18
20 mu_0       0.2      0.914        0.860  0.0377        3.23
21 mu_0       0.3      0.959        0.925  0.160         2.46
22 mu_0       0.4      0.968        1      0.345         1.72
23 mu_0       0.5      0.980        1      0.572         1.26
24 mu_0       0.6      0.996        1      0.794         1.24
25 mu_0       0.7      1.00         1      0.896         1.16
26 mu_0       0.8      0.997        1      0.753         1.16
27 mu_0       0.9      1.00         1      0.629         1.38
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       1.18   0.0000152   1.93e-16     64.2 
 2 mu         0.2       2.03   0.00207     9.01e-11     88.9 
 3 mu         0.3       2.01   0.0320      1.75e- 7     60.1 
 4 mu         0.4       1.58   0.192       3.54e- 5     26.7 
 5 mu         0.5       1.22   0.641       2.05e- 3      8.09
 6 mu         0.6       1.09   0.954       4.29e- 2      4.01
 7 mu         0.7       1.17   1.08        9.09e- 3      4.21
 8 mu         0.8       1.71   0.795       1.34e- 4     33.2 
 9 mu         0.9       4.84   0.0979      1.66e- 8    277.  
10 mu_1       0.1       2.31   0.0000941   1.84e-15    117.  
11 mu_1       0.2       2.26   0.00777     4.28e-10     80.8 
12 mu_1       0.3       1.76   0.0730      5.53e- 7     36.4 
13 mu_1       0.4       1.31   0.327       8.41e- 5     12.1 
14 mu_1       0.5       1.09   0.805       3.89e- 3      4.59
15 mu_1       0.6       1.07   1.01        4.84e- 2      3.59
16 mu_1       0.7       1.20   1.02        2.78e- 3      5.38
17 mu_1       0.8       1.85   0.606       4.20e- 5     41.6 
18 mu_1       0.9       5.22   0.0743      5.55e- 9    308.  
19 mu_0       0.1       1.05   0.00000376  0            58.3 
20 mu_0       0.2       1.98   0.000774    0            90.9 
21 mu_0       0.3       2.12   0.0130      0            70.3 
22 mu_0       0.4       1.75   0.104       0            36.4 
23 mu_0       0.5       1.35   0.453       0            13.2 
24 mu_0       0.6       1.13   0.801       0             4.62
25 mu_0       0.7       1.10   1.04        0             3.23
26 mu_0       0.8       1.17   0.988       0             9.53
27 mu_0       0.9       1.47   0.178       0            35.3 
[1] "Total run time was 225.642 seconds"
