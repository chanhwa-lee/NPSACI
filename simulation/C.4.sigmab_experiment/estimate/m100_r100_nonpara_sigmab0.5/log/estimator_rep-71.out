
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1311"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 2  9  7  2  4  6  4 11  6 12  4  2  5 10 13  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03877 0.36516 0.61650 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
799 512 
[1] "treatment indicator table: "

  0   1 
439 872 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 642
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 61"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 669
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 127.661 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.445 0.0938
 2 mu         0.1   0.2 0.491 0.118 
 3 mu         0.1   0.3 0.551 0.138 
 4 mu         0.1   0.4 0.577 0.141 
 5 mu         0.1   0.5 0.598 0.150 
 6 mu         0.2   0.1 0.351 0.0431
 7 mu         0.2   0.2 0.400 0.0555
 8 mu         0.2   0.3 0.438 0.0716
 9 mu         0.2   0.4 0.487 0.0580
10 mu         0.2   0.5 0.517 0.0695
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      0.757        0.441 0.000000817     13.9 
 2 mu         0.2      0.772        0.790 0.000358         5.06
 3 mu         0.3      0.880        0.926 0.00885          3.01
 4 mu         0.4      0.970        0.993 0.0668           2.25
 5 mu         0.5      1.01         1     0.253            1.57
 6 mu         0.6      1.01         1     0.582            1.25
 7 mu         0.7      0.991        1     0.761            1.17
 8 mu         0.8      0.985        1     0.714            1.17
 9 mu         0.9      0.990        1     0.387            1.57
10 mu_1       0.1      0.680        0.657 0.00000436       3.85
11 mu_1       0.2      0.815        0.886 0.000984         3.61
12 mu_1       0.3      0.929        0.988 0.0170           2.55
13 mu_1       0.4      0.993        1     0.101            1.72
14 mu_1       0.5      1.01         1.01  0.324            1.33
15 mu_1       0.6      1.00         1     0.638            1.20
16 mu_1       0.7      0.988        0.997 0.758            1.17
17 mu_1       0.8      0.985        1     0.689            1.17
18 mu_1       0.9      0.990        1     0.361            1.63
19 mu_0       0.1      0.765        0.429 0.000000423     15.4 
20 mu_0       0.2      0.761        0.786 0.000202         6.20
21 mu_0       0.3      0.859        0.915 0.00538          3.21
22 mu_0       0.4      0.954        0.976 0.0439           2.60
23 mu_0       0.5      1.01         1     0.182            1.87
24 mu_0       0.6      1.01         1.01  0.469            1.41
25 mu_0       0.7      0.998        1     0.751            1.22
26 mu_0       0.8      0.985        0.992 0.772            1.19
27 mu_0       0.9      0.985        0.998 0.616            1.28
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       3.27   0.00000710  6.68e-15    109.  
 2 mu         0.2      14.2    0.00146     7.78e-10    852.  
 3 mu         0.3      17.9    0.0270      6.71e- 7   1303.  
 4 mu         0.4      11.4    0.160       7.65e- 5    864.  
 5 mu         0.5       4.58   0.560       2.83e- 3    296.  
 6 mu         0.6       1.80   1.10        5.44e- 3     50.5 
 7 mu         0.7       1.32   1.13        8.65e- 5      4.07
 8 mu         0.8       1.34   1.17        1.97e- 7      7.53
 9 mu         0.9       1.25   0.356       4.27e-12     13.8 
10 mu_1       0.1       7.93   0.0000497   6.30e-14    322.  
11 mu_1       0.2      18.9    0.00542     3.67e- 9   1253.  
12 mu_1       0.3      16.7    0.0660      2.11e- 6   1278.  
13 mu_1       0.4       8.45   0.289       1.81e- 4    635.  
14 mu_1       0.5       3.17   0.785       5.34e- 3    174.  
15 mu_1       0.6       1.51   1.14        1.43e- 3     24.8 
16 mu_1       0.7       1.31   1.21        1.95e- 5      4.28
17 mu_1       0.8       1.35   1.10        3.88e- 8      8.63
18 mu_1       0.9       1.24   0.257       7.49e-13     14.0 
19 mu_0       0.1       2.75   0.00000121  0            85.8 
20 mu_0       0.2      13.0    0.000495    0           752.  
21 mu_0       0.3      18.4    0.00905     0          1314.  
22 mu_0       0.4      13.3    0.0796      0          1016.  
23 mu_0       0.5       6.00   0.330       0           417.  
24 mu_0       0.6       2.24   0.974       0            89.2 
25 mu_0       0.7       1.33   1.17        0             8.14
26 mu_0       0.8       1.30   1.16        0             4.57
27 mu_0       0.9       1.37   0.573       0            11.5 
[1] "Total run time was 131.158 seconds"
