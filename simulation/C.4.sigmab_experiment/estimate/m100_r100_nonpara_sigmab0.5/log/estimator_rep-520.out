
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1322"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 1  7  3  6  7  4  7  7  6 10  9  7  8  6  7  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04026 0.37727 0.61573 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
752 570 
[1] "treatment indicator table: "

  0   1 
473 849 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 659
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 663
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 136.766 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.535 0.144 
 2 mu         0.1   0.2 0.579 0.126 
 3 mu         0.1   0.3 0.635 0.121 
 4 mu         0.1   0.4 0.702 0.137 
 5 mu         0.1   0.5 0.743 0.129 
 6 mu         0.2   0.1 0.389 0.0877
 7 mu         0.2   0.2 0.457 0.0748
 8 mu         0.2   0.3 0.510 0.0744
 9 mu         0.2   0.4 0.565 0.0907
10 mu         0.2   0.5 0.622 0.0874
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.25         0.631   0.00873     13.4 
 2 mu         0.2      1.13         0.961   0.113        7.59
 3 mu         0.3      1.05         0.998   0.348        3.11
 4 mu         0.4      1.01         1       0.612        1.57
 5 mu         0.5      0.999        1       0.756        1.22
 6 mu         0.6      1.00         1.00    0.817        1.14
 7 mu         0.7      1.01         1       0.899        1.28
 8 mu         0.8      1.01         1       0.747        1.44
 9 mu         0.9      1.00         0.998   0.437        2.24
10 mu_1       0.1      1.10         0.905   0.0302      12.2 
11 mu_1       0.2      1.06         0.978   0.208        5.03
12 mu_1       0.3      1.01         1       0.474        1.87
13 mu_1       0.4      0.998        0.999   0.710        1.38
14 mu_1       0.5      0.998        1       0.772        1.18
15 mu_1       0.6      1.01         1.01    0.851        1.15
16 mu_1       0.7      1.01         1       0.879        1.32
17 mu_1       0.8      1.01         1       0.704        1.49
18 mu_1       0.9      1.00         0.997   0.407        2.34
19 mu_0       0.1      1.27         0.596   0.00634     14.6 
20 mu_0       0.2      1.15         0.944   0.0888       8.23
21 mu_0       0.3      1.06         0.996   0.294        3.64
22 mu_0       0.4      1.02         1       0.548        1.69
23 mu_0       0.5      1.00         1       0.740        1.30
24 mu_0       0.6      0.999        1.00    0.754        1.18
25 mu_0       0.7      1.01         1.00    0.826        1.21
26 mu_0       0.8      1.01         1       0.849        1.41
27 mu_0       0.9      1.02         1       0.710        1.41
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.308   0.0000177   1.48e-14     11.2 
 2 mu         0.2      0.868   0.00347     7.85e-10     16.2 
 3 mu         0.3      1.17    0.0449      3.44e- 7     13.1 
 4 mu         0.4      1.14    0.209       2.57e- 5     11.5 
 5 mu         0.5      1.06    0.679       7.31e- 4      7.81
 6 mu         0.6      1.04    1.00        1.13e- 2      3.40
 7 mu         0.7      1.09    1.04        3.10e- 3      2.98
 8 mu         0.8      1.31    0.778       4.68e- 5     17.6 
 9 mu         0.9      2.51    0.124       1.34e- 8    116.  
10 mu_1       0.1      0.688   0.000118    1.40e-13     17.2 
11 mu_1       0.2      1.18    0.0110      3.93e- 9     17.4 
12 mu_1       0.3      1.25    0.102       1.15e- 6     12.9 
13 mu_1       0.4      1.12    0.384       6.43e- 5     10.4 
14 mu_1       0.5      1.04    0.829       1.46e- 3      5.68
15 mu_1       0.6      1.04    1.02        1.38e- 2      2.51
16 mu_1       0.7      1.10    0.970       6.81e- 4      3.01
17 mu_1       0.8      1.38    0.648       8.99e- 6     22.0 
18 mu_1       0.9      2.67    0.0957      4.47e- 9    129.  
19 mu_0       0.1      0.266   0.00000654  0            10.5 
20 mu_0       0.2      0.790   0.00130     0            15.9 
21 mu_0       0.3      1.13    0.0165      0            14.1 
22 mu_0       0.4      1.15    0.112       0            12.2 
23 mu_0       0.5      1.08    0.436       0             9.94
24 mu_0       0.6      1.05    0.819       0             5.40
25 mu_0       0.7      1.05    1.07        0             2.93
26 mu_0       0.8      1.04    0.972       0             3.69
27 mu_0       0.9      1.07    0.255       0            15.3 
[1] "Total run time was 139.282 seconds"
