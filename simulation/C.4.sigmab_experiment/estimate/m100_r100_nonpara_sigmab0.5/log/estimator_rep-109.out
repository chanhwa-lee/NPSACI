
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1343"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  7  5  2  4  3  3 12  7  7  6  7  9  6 10  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02376 0.32994 0.60706 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
801 542 
[1] "treatment indicator table: "

  0   1 
503 840 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 684
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 79"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 95"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 659
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 64"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 202.524 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.432 0.0776
 2 mu         0.1   0.2 0.494 0.0702
 3 mu         0.1   0.3 0.509 0.0705
 4 mu         0.1   0.4 0.529 0.0698
 5 mu         0.1   0.5 0.567 0.0799
 6 mu         0.2   0.1 0.372 0.0416
 7 mu         0.2   0.2 0.450 0.0427
 8 mu         0.2   0.3 0.481 0.0445
 9 mu         0.2   0.4 0.510 0.0399
10 mu         0.2   0.5 0.562 0.0486
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.959        0.713   0.00179      7.41
 2 mu         0.2      1.02         1       0.0733       4.65
 3 mu         0.3      1.02         1       0.366        2.00
 4 mu         0.4      1.01         1       0.738        1.36
 5 mu         0.5      1.01         1       0.855        1.17
 6 mu         0.6      1.01         1       0.915        1.12
 7 mu         0.7      1.00         1       0.835        1.17
 8 mu         0.8      0.990        1       0.706        1.50
 9 mu         0.9      0.989        1       0.389        2.25
10 mu_1       0.1      1.07         1       0.00679      7.91
11 mu_1       0.2      1.04         1       0.145        3.12
12 mu_1       0.3      1.02         1       0.510        1.64
13 mu_1       0.4      1.01         1       0.801        1.25
14 mu_1       0.5      1.01         1.00    0.886        1.14
15 mu_1       0.6      1.01         1       0.893        1.12
16 mu_1       0.7      0.999        1       0.828        1.20
17 mu_1       0.8      0.988        1       0.673        1.56
18 mu_1       0.9      0.989        1       0.373        2.31
19 mu_0       0.1      0.946        0.663   0.00123      7.36
20 mu_0       0.2      1.02         0.996   0.0554       5.04
21 mu_0       0.3      1.02         1       0.305        2.21
22 mu_0       0.4      1.01         1       0.681        1.45
23 mu_0       0.5      1.01         1       0.815        1.20
24 mu_0       0.6      1.01         1.00    0.900        1.13
25 mu_0       0.7      1.01         1.00    0.849        1.14
26 mu_0       0.8      0.997        1       0.762        1.24
27 mu_0       0.9      0.989        1       0.531        1.71
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.965   0.0000337   2.55e-18     56.5 
 2 mu         0.2      1.53    0.00466     2.67e-12     55.0 
 3 mu         0.3      1.42    0.0629      8.89e- 9     25.4 
 4 mu         0.4      1.22    0.336       2.80e- 6     10.8 
 5 mu         0.5      1.07    0.927       2.43e- 4      4.12
 6 mu         0.6      0.949   1.03        9.33e- 3      2.40
 7 mu         0.7      0.959   0.915       5.21e- 3      2.38
 8 mu         0.8      1.10    0.780       5.24e- 5      5.78
 9 mu         0.9      1.57    0.0686      1.62e- 8     31.0 
10 mu_1       0.1      1.67    0.000288    2.55e-17     80.7 
11 mu_1       0.2      1.60    0.0142      1.34e-11     39.3 
12 mu_1       0.3      1.31    0.143       2.96e- 8     19.9 
13 mu_1       0.4      1.15    0.565       7.01e- 6      6.37
14 mu_1       0.5      1.02    0.862       4.87e- 4      3.47
15 mu_1       0.6      0.939   0.955       1.55e- 2      2.40
16 mu_1       0.7      0.982   0.992       1.06e- 3      2.42
17 mu_1       0.8      1.14    0.650       9.36e- 6      7.23
18 mu_1       0.9      1.64    0.0497      2.57e- 9     34.5 
19 mu_0       0.1      0.886   0.00000986  0            53.8 
20 mu_0       0.2      1.51    0.00176     0            58.9 
21 mu_0       0.3      1.46    0.0301      0            30.5 
22 mu_0       0.4      1.27    0.204       0            13.8 
23 mu_0       0.5      1.11    0.626       0             4.93
24 mu_0       0.6      0.964   0.928       0             2.48
25 mu_0       0.7      0.904   0.881       0             2.33
26 mu_0       0.8      0.949   0.762       0             3.08
27 mu_0       0.9      0.983   0.119       0             5.90
[1] "Total run time was 207.001 seconds"
