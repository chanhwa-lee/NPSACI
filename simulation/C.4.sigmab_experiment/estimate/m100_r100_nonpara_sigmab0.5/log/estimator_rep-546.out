
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1258"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 9  5  6  4  8  6  4  3  8  7  8  5  8  5 11  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04061 0.36037 0.63321 1.00000 4.61250 
[1] "event indicator table: "

  0   1 
741 517 
[1] "treatment indicator table: "

  0   1 
456 802 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 646
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 612
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 164.539 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.392 0.0983
 2 mu         0.1   0.2 0.404 0.113 
 3 mu         0.1   0.3 0.570 0.100 
 4 mu         0.1   0.4 0.583 0.0979
 5 mu         0.1   0.5 0.596 0.0908
 6 mu         0.2   0.1 0.332 0.0760
 7 mu         0.2   0.2 0.374 0.0779
 8 mu         0.2   0.3 0.476 0.0659
 9 mu         0.2   0.4 0.496 0.0651
10 mu         0.2   0.5 0.519 0.0630
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.881        0.733    0.0207      3.38
 2 mu         0.2      0.973        0.981    0.245       2.23
 3 mu         0.3      1.00         1        0.568       1.50
 4 mu         0.4      1.01         1        0.665       1.32
 5 mu         0.5      1.01         1        0.798       1.22
 6 mu         0.6      1.01         1        0.879       1.14
 7 mu         0.7      0.999        1        0.840       1.16
 8 mu         0.8      0.991        1        0.775       1.23
 9 mu         0.9      0.995        1        0.514       1.49
10 mu_1       0.1      0.938        0.965    0.0604      2.89
11 mu_1       0.2      0.998        1        0.396       1.80
12 mu_1       0.3      1.01         1        0.581       1.43
13 mu_1       0.4      1.01         1        0.728       1.27
14 mu_1       0.5      1.01         1        0.826       1.20
15 mu_1       0.6      1.01         1        0.873       1.14
16 mu_1       0.7      0.998        1        0.831       1.17
17 mu_1       0.8      0.991        1        0.734       1.26
18 mu_1       0.9      0.996        1        0.477       1.56
19 mu_0       0.1      0.874        0.693    0.0163      3.52
20 mu_0       0.2      0.967        0.964    0.207       2.33
21 mu_0       0.3      1.00         1        0.562       1.61
22 mu_0       0.4      1.01         1        0.623       1.35
23 mu_0       0.5      1.01         1        0.754       1.28
24 mu_0       0.6      1.01         1        0.840       1.19
25 mu_0       0.7      1.00         1        0.861       1.14
26 mu_0       0.8      0.992        1        0.808       1.21
27 mu_0       0.9      0.982        1        0.680       1.30
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      3.80     0.0000540  5.33e-16    353.  
 2 mu         0.2      0.753    0.00555    1.24e-10     37.7 
 3 mu         0.3      0.678    0.0837     1.60e- 7      5.70
 4 mu         0.4      0.897    0.333      2.44e- 5      8.03
 5 mu         0.5      0.975    0.842      1.13e- 3      6.44
 6 mu         0.6      0.958    0.966      7.19e- 5      2.65
 7 mu         0.7      0.996    0.986      3.04e- 7      2.77
 8 mu         0.8      1.12     0.792      1.37e-10      4.71
 9 mu         0.9      1.26     0.184      2.62e-16     10.9 
10 mu_1       0.1      0.175    0.000290   0             6.41
11 mu_1       0.2      0.447    0.0135     0             5.68
12 mu_1       0.3      0.771    0.131      0             6.15
13 mu_1       0.4      0.969    0.496      0             8.45
14 mu_1       0.5      0.993    0.919      0             5.42
15 mu_1       0.6      0.972    1.02       0             2.70
16 mu_1       0.7      1.02     1.03       0             2.96
17 mu_1       0.8      1.15     0.640      0             5.26
18 mu_1       0.9      1.27     0.135      0            11.3 
19 mu_0       0.1      4.20     0.0000101  0           393.  
20 mu_0       0.2      0.830    0.00261    0            47.1 
21 mu_0       0.3      0.638    0.0368     0             8.15
22 mu_0       0.4      0.849    0.185      0             7.75
23 mu_0       0.5      0.956    0.555      0             7.46
24 mu_0       0.6      0.937    0.882      0             3.44
25 mu_0       0.7      0.930    0.960      0             2.50
26 mu_0       0.8      1.01     0.955      0             3.80
27 mu_0       0.9      1.18     0.260      0             9.17
[1] "Total run time was 168.311 seconds"
