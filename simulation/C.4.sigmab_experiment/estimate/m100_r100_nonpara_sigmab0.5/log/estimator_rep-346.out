
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1318"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  5  6  5  6  3  5  5  8  5  8  9  7  6  8  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03251 0.30750 0.58727 0.97818 7.00000 
[1] "event indicator table: "

  0   1 
784 534 
[1] "treatment indicator table: "

  0   1 
467 851 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 655
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 17"
[1] "     Cluster: 21"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 663
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 97"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 86.875 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.413 0.0864
 2 mu         0.1   0.2 0.426 0.104 
 3 mu         0.1   0.3 0.463 0.117 
 4 mu         0.1   0.4 0.515 0.140 
 5 mu         0.1   0.5 0.619 0.163 
 6 mu         0.2   0.1 0.373 0.0571
 7 mu         0.2   0.2 0.395 0.0683
 8 mu         0.2   0.3 0.443 0.0749
 9 mu         0.2   0.4 0.519 0.0854
10 mu         0.2   0.5 0.611 0.106 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.03         0.322 0.0000593     14.2 
 2 mu         0.2      1.02         0.793 0.00941        9.13
 3 mu         0.3      0.971        0.924 0.104          4.15
 4 mu         0.4      0.966        0.966 0.369          2.22
 5 mu         0.5      0.984        0.998 0.708          1.37
 6 mu         0.6      0.997        1     0.875          1.12
 7 mu         0.7      0.999        1     0.857          1.18
 8 mu         0.8      0.989        1     0.505          1.69
 9 mu         0.9      0.952        0.938 0.0969         3.69
10 mu_1       0.1      1.05         0.662 0.000270      13.2 
11 mu_1       0.2      0.955        0.894 0.0218         5.96
12 mu_1       0.3      0.943        0.960 0.166          3.09
13 mu_1       0.4      0.966        0.975 0.470          1.79
14 mu_1       0.5      0.988        0.996 0.785          1.23
15 mu_1       0.6      0.999        1     0.902          1.11
16 mu_1       0.7      0.998        1     0.820          1.24
17 mu_1       0.8      0.987        1     0.455          1.79
18 mu_1       0.9      0.948        0.931 0.0814         4.00
19 mu_0       0.1      1.03         0.281 0.0000360     14.3 
20 mu_0       0.2      1.03         0.744 0.00632       10.3 
21 mu_0       0.3      0.982        0.931 0.0770         5.12
22 mu_0       0.4      0.966        0.948 0.302          2.50
23 mu_0       0.5      0.979        0.996 0.631          1.52
24 mu_0       0.6      0.995        0.993 0.822          1.16
25 mu_0       0.7      1.00         1     0.879          1.14
26 mu_0       0.8      0.996        0.999 0.705          1.30
27 mu_0       0.9      0.986        1     0.236          2.23
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.12    0.0000113   3.72e-14     46.9 
 2 mu         0.2      2.60    0.00267     4.34e- 9    113.  
 3 mu         0.3      3.51    0.0297      3.74e- 6    199.  
 4 mu         0.4      2.59    0.181       4.26e- 4    129.  
 5 mu         0.5      1.41    0.654       1.53e- 2     38.5 
 6 mu         0.6      1.02    0.964       1.04e- 1      5.05
 7 mu         0.7      1.20    1.01        7.32e- 3      5.57
 8 mu         0.8      1.86    0.697       1.11e- 4     19.0 
 9 mu         0.9      2.95    0.0842      6.83e- 8     69.0 
10 mu_1       0.1      1.92    0.0000695   3.52e-13     52.1 
11 mu_1       0.2      3.27    0.00915     2.05e- 8    170.  
12 mu_1       0.3      3.39    0.0778      1.18e- 5    199.  
13 mu_1       0.4      2.09    0.309       1.01e- 3     97.1 
14 mu_1       0.5      1.17    0.829       2.59e- 2     23.1 
15 mu_1       0.6      0.994   0.997       3.27e- 2      2.52
16 mu_1       0.7      1.28    1.04        1.61e- 3      7.96
17 mu_1       0.8      1.99    0.548       2.13e- 5     23.2 
18 mu_1       0.9      3.03    0.0633      1.17e- 8     72.4 
19 mu_0       0.1      1.03    0.00000379  0            46.3 
20 mu_0       0.2      2.43    0.000654    0            99.3 
21 mu_0       0.3      3.56    0.0117      0           199.  
22 mu_0       0.4      2.92    0.0991      0           151.  
23 mu_0       0.5      1.66    0.439       0            53.8 
24 mu_0       0.6      1.05    0.878       0             8.84
25 mu_0       0.7      1.02    1.09        0             2.32
26 mu_0       0.8      1.35    0.994       0             8.71
27 mu_0       0.9      2.23    0.224       0            38.3 
[1] "Total run time was 89.467 seconds"
