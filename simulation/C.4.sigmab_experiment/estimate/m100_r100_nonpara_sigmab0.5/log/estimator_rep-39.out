
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1272"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  5  3  8  6  7  7 10  7  4  9  5  6  4  5  9 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03601 0.35180 0.61206 1.00000 4.69942 
[1] "event indicator table: "

  0   1 
771 501 
[1] "treatment indicator table: "

  0   1 
463 809 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 645
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 85"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 627
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 349.164 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.393 0.0616
 2 mu         0.1   0.2 0.486 0.0619
 3 mu         0.1   0.3 0.543 0.0786
 4 mu         0.1   0.4 0.601 0.0825
 5 mu         0.1   0.5 0.614 0.0835
 6 mu         0.2   0.1 0.355 0.0464
 7 mu         0.2   0.2 0.434 0.0436
 8 mu         0.2   0.3 0.503 0.0577
 9 mu         0.2   0.4 0.557 0.0593
10 mu         0.2   0.5 0.571 0.0587
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.776        0.653   0.00889      5.03
 2 mu         0.2      0.925        0.907   0.111        2.63
 3 mu         0.3      0.982        0.996   0.346        1.73
 4 mu         0.4      0.993        0.991   0.633        1.42
 5 mu         0.5      0.995        0.998   0.740        1.17
 6 mu         0.6      0.999        1       0.855        1.17
 7 mu         0.7      1.00         1       0.844        1.20
 8 mu         0.8      1.01         1.01    0.746        1.28
 9 mu         0.9      1.02         1       0.560        1.68
10 mu_1       0.1      0.922        0.915   0.0306       3.65
11 mu_1       0.2      0.981        0.981   0.204        1.87
12 mu_1       0.3      0.996        1       0.478        1.51
13 mu_1       0.4      0.995        0.999   0.728        1.25
14 mu_1       0.5      0.996        1       0.747        1.16
15 mu_1       0.6      1.00         1       0.861        1.17
16 mu_1       0.7      1.01         1       0.814        1.20
17 mu_1       0.8      1.01         1.01    0.727        1.35
18 mu_1       0.9      1.02         1.00    0.532        1.73
19 mu_0       0.1      0.760        0.616   0.00648      5.19
20 mu_0       0.2      0.912        0.889   0.0880       2.86
21 mu_0       0.3      0.975        0.998   0.289        1.82
22 mu_0       0.4      0.992        0.989   0.570        1.53
23 mu_0       0.5      0.994        1.00    0.732        1.27
24 mu_0       0.6      0.997        1       0.792        1.18
25 mu_0       0.7      1.00         1       0.841        1.20
26 mu_0       0.8      1.00         1       0.787        1.22
27 mu_0       0.9      1.01         1       0.706        1.44
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       3.73   0.0000267   3.54e-17    306.  
 2 mu         0.2       2.29   0.00361     1.65e-11    132.  
 3 mu         0.3       1.32   0.0623      3.20e- 8     35.0 
 4 mu         0.4       1.05   0.348       6.49e- 6      8.72
 5 mu         0.5       1.06   0.849       3.75e- 4      5.38
 6 mu         0.6       1.10   1.06        9.60e- 3      3.84
 7 mu         0.7       1.09   1.02        1.34e- 3      2.91
 8 mu         0.8       1.16   0.771       7.88e- 6      4.49
 9 mu         0.9       1.54   0.117       1.08e- 9     19.0 
10 mu_1       0.1       3.36   0.000229    3.37e-16    218.  
11 mu_1       0.2       1.49   0.0121      7.84e-11     47.2 
12 mu_1       0.3       1.03   0.122       1.01e- 7     11.4 
13 mu_1       0.4       1.00   0.525       1.54e- 5      8.18
14 mu_1       0.5       1.06   0.982       7.13e- 4      4.03
15 mu_1       0.6       1.10   1.09        5.77e- 3      3.84
16 mu_1       0.7       1.10   1.11        1.37e- 4      3.20
17 mu_1       0.8       1.19   0.630       7.04e- 7      5.62
18 mu_1       0.9       1.57   0.0863      8.59e-11     20.5 
19 mu_0       0.1       3.77   0.00000669  0           315.  
20 mu_0       0.2       2.49   0.00142     0           154.  
21 mu_0       0.3       1.44   0.0333      0            46.4 
22 mu_0       0.4       1.09   0.201       0            11.4 
23 mu_0       0.5       1.05   0.644       0             6.72
24 mu_0       0.6       1.09   1.15        0             3.84
25 mu_0       0.7       1.08   1.06        0             3.26
26 mu_0       0.8       1.05   0.942       0             3.78
27 mu_0       0.9       1.26   0.131       0             9.51
[1] "Total run time was 353.801 seconds"
