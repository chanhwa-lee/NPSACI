
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1217"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5 11  4  7  3  8 11  7  5  5  6  1  9  9  6  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02581 0.32190 0.57974 1.00000 6.21428 
[1] "event indicator table: "

  0   1 
747 470 
[1] "treatment indicator table: "

  0   1 
433 784 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 591
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 626
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 87.021 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.417 0.0734
 2 mu         0.1   0.2 0.508 0.0781
 3 mu         0.1   0.3 0.555 0.0804
 4 mu         0.1   0.4 0.566 0.0758
 5 mu         0.1   0.5 0.727 0.153 
 6 mu         0.2   0.1 0.363 0.0468
 7 mu         0.2   0.2 0.457 0.0606
 8 mu         0.2   0.3 0.511 0.0640
 9 mu         0.2   0.4 0.529 0.0545
10 mu         0.2   0.5 0.699 0.141 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.661        0.501  1.76e-10      3.12
 2 mu         0.2      0.716        0.825  1.63e- 6      3.00
 3 mu         0.3      0.783        0.955  2.51e- 4      2.19
 4 mu         0.4      0.851        0.976  6.67e- 3      1.57
 5 mu         0.5      0.909        0.996  5.68e- 2      1.24
 6 mu         0.6      0.957        1      2.49e- 1      1.22
 7 mu         0.7      0.993        1      6.32e- 1      1.31
 8 mu         0.8      1.01         1      5.20e- 1      1.61
 9 mu         0.9      1.00         1      1.27e- 1      2.37
10 mu_1       0.1      0.718        0.840  1.30e- 9      4.11
11 mu_1       0.2      0.760        0.927  6.02e- 6      2.29
12 mu_1       0.3      0.824        0.952  6.18e- 4      1.51
13 mu_1       0.4      0.881        0.995  1.23e- 2      1.33
14 mu_1       0.5      0.930        1      8.49e- 2      1.19
15 mu_1       0.6      0.969        1      3.15e- 1      1.25
16 mu_1       0.7      0.999        1      7.04e- 1      1.36
17 mu_1       0.8      1.01         1      4.64e- 1      1.65
18 mu_1       0.9      1.00         1      1.07e- 1      2.47
19 mu_0       0.1      0.655        0.463  5.13e-11      3.01
20 mu_0       0.2      0.705        0.773  5.32e- 7      3.18
21 mu_0       0.3      0.766        0.933  9.30e- 5      2.48
22 mu_0       0.4      0.831        0.958  2.90e- 3      1.80
23 mu_0       0.5      0.889        0.996  2.87e- 2      1.38
24 mu_0       0.6      0.938        1      1.50e- 1      1.19
25 mu_0       0.7      0.978        1      4.66e- 1      1.27
26 mu_0       0.8      1.01         1      7.02e- 1      1.48
27 mu_0       0.9      1.02         1      3.08e- 1      2.01
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1    9284.      0.0000656  4.71e-15   916058.
 2 mu         0.2   14285.      0.00475    5.48e-10  1408892.
 3 mu         0.3    7501.      0.0420     4.73e- 7   733271.
 4 mu         0.4    2126.      0.225      5.39e- 5   200829.
 5 mu         0.5     383.      0.594      2.00e- 3    30550.
 6 mu         0.6      64.2     1.04       3.54e- 2     2475.
 7 mu         0.7      13.7     1.20       2.88e- 3      868.
 8 mu         0.8       3.62    1.30       3.31e- 5      104.
 9 mu         0.9       6.14    0.372      1.15e- 8      431.
10 mu_1       0.1   16412.      0.000474   4.45e-14  1616574.
11 mu_1       0.2   12633.      0.0189     2.59e- 9  1243140.
12 mu_1       0.3    4441.      0.109      1.49e- 6   431336.
13 mu_1       0.4     971.      0.395      1.27e- 4    88601.
14 mu_1       0.5     167.      0.797      3.77e- 3    10783.
15 mu_1       0.6      37.9     1.19       1.19e- 2     2171.
16 mu_1       0.7       9.79    1.31       8.23e- 4      653.
17 mu_1       0.8       3.46    1.17       8.28e- 6      123.
18 mu_1       0.9       6.43    0.278      2.56e- 9      454.
19 mu_0       0.1    8492.      0.0000224  0          838223.
20 mu_0       0.2   14698.      0.00140    0         1450330.
21 mu_0       0.3    8813.      0.0133     0          862671.
22 mu_0       0.4    2896.      0.0947     0          275647.
23 mu_0       0.5     599.      0.460      0           50318.
24 mu_0       0.6     104.      0.858      0            4780.
25 mu_0       0.7      22.8     1.17       0            1371.
26 mu_0       0.8       4.25    1.25       0             203.
27 mu_0       0.9       3.59    0.573      0             227.
[1] "Total run time was 89.589 seconds"
