
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1313"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  3  3  3 11  8  7  7  6  4 12  4 11  4  7  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02917 0.34191 0.59950 0.98833 6.42748 
[1] "event indicator table: "

  0   1 
765 548 
[1] "treatment indicator table: "

  0   1 
478 835 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 626
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 74"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 687
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 20"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 90.076 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.375 0.0961
 2 mu         0.1   0.2 0.403 0.0943
 3 mu         0.1   0.3 0.469 0.103 
 4 mu         0.1   0.4 0.548 0.127 
 5 mu         0.1   0.5 0.569 0.142 
 6 mu         0.2   0.1 0.344 0.0654
 7 mu         0.2   0.2 0.384 0.0535
 8 mu         0.2   0.3 0.457 0.0488
 9 mu         0.2   0.4 0.532 0.0708
10 mu         0.2   0.5 0.558 0.0769
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.07         0.565   0.00196     21.9 
 2 mu         0.2      1.07         0.873   0.0443       7.31
 3 mu         0.3      1.03         0.967   0.203        2.78
 4 mu         0.4      1.00         1       0.501        1.66
 5 mu         0.5      0.999        1       0.702        1.34
 6 mu         0.6      1.00         1       0.836        1.17
 7 mu         0.7      1.00         1       0.863        1.18
 8 mu         0.8      0.992        0.994   0.752        1.48
 9 mu         0.9      1.01         0.991   0.321        1.91
10 mu_1       0.1      1.01         0.798   0.00705     11.1 
11 mu_1       0.2      1.02         0.966   0.0865       3.99
12 mu_1       0.3      1.00         1.00    0.300        2.32
13 mu_1       0.4      0.997        1       0.599        1.54
14 mu_1       0.5      1.00         1       0.756        1.27
15 mu_1       0.6      1.00         1.00    0.844        1.16
16 mu_1       0.7      0.999        1       0.847        1.22
17 mu_1       0.8      0.992        0.985   0.719        1.51
18 mu_1       0.9      1.01         0.995   0.298        2.00
19 mu_0       0.1      1.08         0.498   0.00139     24.3 
20 mu_0       0.2      1.08         0.855   0.0338       8.89
21 mu_0       0.3      1.04         0.958   0.162        3.45
22 mu_0       0.4      1.01         1.00    0.421        1.84
23 mu_0       0.5      0.998        1       0.648        1.41
24 mu_0       0.6      1.00         1.00    0.762        1.19
25 mu_0       0.7      1.00         1       0.847        1.15
26 mu_0       0.8      0.995        1       0.811        1.36
27 mu_0       0.9      0.979        0.979   0.526        1.60
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.407    0.0000459  1.28e-15     26.8 
 2 mu         0.2      1.10     0.00390    2.97e-10     52.2 
 3 mu         0.3      1.45     0.0432     3.84e- 7     35.5 
 4 mu         0.4      1.49     0.203      5.84e- 5     15.0 
 5 mu         0.5      1.29     0.657      1.99e- 3     14.4 
 6 mu         0.6      1.05     0.923      2.95e- 2      6.66
 7 mu         0.7      0.994    0.982      1.26e- 2      3.84
 8 mu         0.8      1.12     0.750      1.44e- 4      5.11
 9 mu         0.9      1.27     0.0931     3.57e- 8     21.3 
10 mu_1       0.1      0.921    0.000298   1.21e-14     53.6 
11 mu_1       0.2      1.44     0.0145     1.41e- 9     52.2 
12 mu_1       0.3      1.55     0.102      1.21e- 6     23.6 
13 mu_1       0.4      1.46     0.347      1.38e- 4     16.6 
14 mu_1       0.5      1.21     0.777      3.75e- 3     12.8 
15 mu_1       0.6      1.01     1.01       4.63e- 2      5.19
16 mu_1       0.7      1.00     0.998      4.94e- 3      4.12
17 mu_1       0.8      1.13     0.570      4.98e- 5      6.05
18 mu_1       0.9      1.27     0.0636     1.25e- 8     22.4 
19 mu_0       0.1      0.350    0.0000142  0            23.8 
20 mu_0       0.2      1.02     0.00138    0            52.2 
21 mu_0       0.3      1.40     0.0161     0            40.5 
22 mu_0       0.4      1.51     0.112      0            17.6 
23 mu_0       0.5      1.37     0.480      0            16.0 
24 mu_0       0.6      1.11     0.760      0             9.25
25 mu_0       0.7      0.974    0.913      0             4.08
26 mu_0       0.8      1.04     1.07       0             4.69
27 mu_0       0.9      1.36     0.308      0            11.2 
[1] "Total run time was 92.24 seconds"
