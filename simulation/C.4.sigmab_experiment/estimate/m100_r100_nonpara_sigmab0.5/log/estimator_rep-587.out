
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1218"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 7  5  6  5  8  7 10  9  6  7  4  5  2  5  9  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02097 0.29894 0.60811 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
720 498 
[1] "treatment indicator table: "

  0   1 
471 747 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 605
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 8"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 613
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 101.968 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.480 0.0810
 2 mu         0.1   0.2 0.645 0.132 
 3 mu         0.1   0.3 0.709 0.156 
 4 mu         0.1   0.4 0.747 0.154 
 5 mu         0.1   0.5 0.754 0.149 
 6 mu         0.2   0.1 0.418 0.0415
 7 mu         0.2   0.2 0.502 0.0678
 8 mu         0.2   0.3 0.576 0.0861
 9 mu         0.2   0.4 0.645 0.0867
10 mu         0.2   0.5 0.660 0.0816
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.856        0.471   0.00203      9.75
 2 mu         0.2      0.979        0.928   0.0562       4.43
 3 mu         0.3      0.983        1       0.264        2.09
 4 mu         0.4      0.977        0.982   0.588        1.46
 5 mu         0.5      0.985        0.992   0.773        1.19
 6 mu         0.6      1.00         1       0.864        1.15
 7 mu         0.7      1.01         1.00    0.770        1.27
 8 mu         0.8      1.01         1       0.710        1.53
 9 mu         0.9      0.984        0.998   0.284        2.36
10 mu_1       0.1      0.980        0.887   0.00836      6.28
11 mu_1       0.2      1.01         1       0.120        3.38
12 mu_1       0.3      0.985        0.991   0.399        1.86
13 mu_1       0.4      0.980        1.00    0.688        1.29
14 mu_1       0.5      0.991        1       0.784        1.15
15 mu_1       0.6      1.00         1       0.879        1.15
16 mu_1       0.7      1.01         1.00    0.746        1.33
17 mu_1       0.8      1.01         1       0.673        1.56
18 mu_1       0.9      0.982        0.990   0.255        2.47
19 mu_0       0.1      0.842        0.423   0.00133     10.1 
20 mu_0       0.2      0.972        0.873   0.0402       4.69
21 mu_0       0.3      0.983        1       0.206        2.19
22 mu_0       0.4      0.974        0.996   0.500        1.57
23 mu_0       0.5      0.979        0.995   0.761        1.23
24 mu_0       0.6      0.993        1       0.794        1.15
25 mu_0       0.7      1.01         1.00    0.824        1.18
26 mu_0       0.8      1.02         1.00    0.736        1.41
27 mu_0       0.9      1.00         1.00    0.539        1.78
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.219    0.000142   2.55e-16      8.33
 2 mu         0.2      0.543    0.0121     1.19e-10      8.22
 3 mu         0.3      1.02     0.122      2.31e- 7     10.7 
 4 mu         0.4      1.32     0.463      4.68e- 5     14.5 
 5 mu         0.5      1.28     0.944      2.68e- 3     10.7 
 6 mu         0.6      1.14     1.01       3.44e- 2      4.30
 7 mu         0.7      1.14     1.02       8.00e- 2      5.10
 8 mu         0.8      1.38     0.575      2.56e- 3     13.7 
 9 mu         0.9      2.07     0.0504     1.60e- 6     44.6 
10 mu_1       0.1      0.460    0.000921   2.43e-15     11.9 
11 mu_1       0.2      0.827    0.0337     5.65e-10      8.91
12 mu_1       0.3      1.24     0.260      7.31e- 7     13.8 
13 mu_1       0.4      1.36     0.712      1.11e- 4     14.5 
14 mu_1       0.5      1.24     1.03       5.14e- 3      8.59
15 mu_1       0.6      1.13     1.06       5.73e- 2      2.87
16 mu_1       0.7      1.18     0.974      1.63e- 2      6.00
17 mu_1       0.8      1.46     0.454      1.28e- 3     17.2 
18 mu_1       0.9      2.16     0.0372     7.13e- 7     49.6 
19 mu_0       0.1      0.192    0.0000532  0             7.93
20 mu_0       0.2      0.472    0.00645    0             8.80
21 mu_0       0.3      0.923    0.0684     0            10.2 
22 mu_0       0.4      1.29     0.313      0            14.5 
23 mu_0       0.5      1.33     0.790      0            12.9 
24 mu_0       0.6      1.17     1.05       0             6.45
25 mu_0       0.7      1.05     0.923      0             3.20
26 mu_0       0.8      1.06     0.673      0             8.64
27 mu_0       0.9      1.26     0.0747     0            19.2 
[1] "Total run time was 104.723 seconds"
