
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1241"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  7  5 11  9 10  3  4  3  7  5  4  7  7  7  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0254  0.3234  0.5788  0.9766  4.7267 
[1] "event indicator table: "

  0   1 
737 504 
[1] "treatment indicator table: "

  0   1 
482 759 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 606
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 635
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 80"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 164.416 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.460 0.0853
 2 mu         0.1   0.2 0.506 0.0860
 3 mu         0.1   0.3 0.550 0.0879
 4 mu         0.1   0.4 0.612 0.0916
 5 mu         0.1   0.5 0.638 0.0952
 6 mu         0.2   0.1 0.373 0.0452
 7 mu         0.2   0.2 0.419 0.0458
 8 mu         0.2   0.3 0.468 0.0451
 9 mu         0.2   0.4 0.541 0.0476
10 mu         0.2   0.5 0.579 0.0524
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.945        0.671   0.00803      7.50
 2 mu         0.2      0.999        0.951   0.136        4.35
 3 mu         0.3      1.01         1       0.387        1.98
 4 mu         0.4      1.00         1       0.530        1.41
 5 mu         0.5      0.992        0.999   0.561        1.34
 6 mu         0.6      0.986        0.995   0.722        1.40
 7 mu         0.7      0.983        0.999   0.751        1.17
 8 mu         0.8      0.983        0.983   0.574        1.41
 9 mu         0.9      0.991        0.966   0.203        2.63
10 mu_1       0.1      0.980        0.986   0.0260       7.76
11 mu_1       0.2      1.00         1       0.228        2.80
12 mu_1       0.3      0.999        1.00    0.499        1.73
13 mu_1       0.4      0.992        1       0.513        1.32
14 mu_1       0.5      0.985        1.00    0.596        1.40
15 mu_1       0.6      0.982        0.988   0.778        1.37
16 mu_1       0.7      0.982        1       0.740        1.15
17 mu_1       0.8      0.985        0.984   0.541        1.49
18 mu_1       0.9      0.992        0.971   0.185        2.80
19 mu_0       0.1      0.942        0.620   0.00603      7.47
20 mu_0       0.2      0.999        0.966   0.109        4.74
21 mu_0       0.3      1.01         1       0.339        2.09
22 mu_0       0.4      1.01         1       0.541        1.50
23 mu_0       0.5      0.999        1       0.527        1.32
24 mu_0       0.6      0.992        1       0.639        1.43
25 mu_0       0.7      0.984        0.993   0.777        1.28
26 mu_0       0.8      0.977        0.998   0.704        1.16
27 mu_0       0.9      0.982        0.996   0.369        1.53
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.359     0.000590  9.19e-15     11.9 
 2 mu         0.2      0.929     0.0306    1.90e- 9     13.1 
 3 mu         0.3      1.59      0.193     2.15e- 6     27.9 
 4 mu         0.4      1.82      0.541     2.81e- 4     28.8 
 5 mu         0.5      1.52      1.00      1.08e- 2     14.8 
 6 mu         0.6      1.20      0.982     1.00e- 1      3.98
 7 mu         0.7      1.27      0.994     8.09e- 3      4.79
 8 mu         0.8      1.73      0.596     6.17e- 5     14.4 
 9 mu         0.9      2.05      0.0821    7.64e- 9     33.2 
10 mu_1       0.1      0.730     0.00368   8.27e-14     17.0 
11 mu_1       0.2      1.33      0.0889    8.57e- 9     19.7 
12 mu_1       0.3      1.82      0.401     6.46e- 6     32.9 
13 mu_1       0.4      1.79      0.823     6.32e- 4     25.4 
14 mu_1       0.5      1.40      0.959     1.95e- 2     10.4 
15 mu_1       0.6      1.17      1.09      6.48e- 2      3.98
16 mu_1       0.7      1.33      0.899     3.26e- 3      5.56
17 mu_1       0.8      1.81      0.473     2.31e- 5     16.7 
18 mu_1       0.9      2.06      0.0659    2.55e- 9     34.3 
19 mu_0       0.1      0.317     0.000281  0            11.3 
20 mu_0       0.2      0.830     0.0167    0            12.6 
21 mu_0       0.3      1.49      0.107     0            25.8 
22 mu_0       0.4      1.84      0.319     0            31.1 
23 mu_0       0.5      1.65      0.734     0            19.1 
24 mu_0       0.6      1.26      0.961     0             6.14
25 mu_0       0.7      1.13      0.928     0             4.26
26 mu_0       0.8      1.42      0.808     0             8.25
27 mu_0       0.9      2.02      0.176     0            23.7 
[1] "Total run time was 168.778 seconds"
