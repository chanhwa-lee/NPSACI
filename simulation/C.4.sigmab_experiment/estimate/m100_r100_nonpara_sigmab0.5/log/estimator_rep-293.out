
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1337"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  2  7  7  3  4  3  6  6 13  5 11  4  7  7  9 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03605 0.35024 0.62401 1.00000 6.00000 
[1] "event indicator table: "

  0   1 
776 561 
[1] "treatment indicator table: "

  0   1 
472 865 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 637
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 700
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 103.358 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.588 0.169 
 2 mu         0.1   0.2 0.721 0.135 
 3 mu         0.1   0.3 0.768 0.120 
 4 mu         0.1   0.4 0.771 0.108 
 5 mu         0.1   0.5 0.809 0.112 
 6 mu         0.2   0.1 0.474 0.0958
 7 mu         0.2   0.2 0.595 0.0784
 8 mu         0.2   0.3 0.659 0.0693
 9 mu         0.2   0.4 0.668 0.0619
10 mu         0.2   0.5 0.705 0.0724
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.915        0.801   0.00721      3.13
 2 mu         0.2      0.966        1       0.158        1.86
 3 mu         0.3      0.986        1       0.468        1.47
 4 mu         0.4      1.00         1       0.690        1.57
 5 mu         0.5      1.01         1       0.706        1.45
 6 mu         0.6      1.00         1       0.789        1.31
 7 mu         0.7      0.990        0.994   0.789        1.16
 8 mu         0.8      0.992        0.990   0.809        1.47
 9 mu         0.9      1.03         1       0.614        1.77
10 mu_1       0.1      0.942        1       0.0243       1.82
11 mu_1       0.2      0.971        1       0.284        1.52
12 mu_1       0.3      0.993        1       0.594        1.57
13 mu_1       0.4      1.01         1       0.680        1.56
14 mu_1       0.5      1.01         1       0.730        1.43
15 mu_1       0.6      0.997        1       0.778        1.25
16 mu_1       0.7      0.988        0.997   0.768        1.19
17 mu_1       0.8      0.994        0.985   0.776        1.52
18 mu_1       0.9      1.04         1.00    0.603        1.78
19 mu_0       0.1      0.911        0.784   0.00530      3.40
20 mu_0       0.2      0.964        1       0.127        2.07
21 mu_0       0.3      0.984        1       0.408        1.42
22 mu_0       0.4      0.998        1       0.697        1.58
23 mu_0       0.5      1.01         1       0.682        1.49
24 mu_0       0.6      1.00         1       0.753        1.40
25 mu_0       0.7      0.994        1       0.788        1.19
26 mu_0       0.8      0.984        0.987   0.700        1.26
27 mu_0       0.9      0.996        0.991   0.681        1.67
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.727   0.0000161   3.60e-16     16.2 
 2 mu         0.2      1.12    0.00314     8.39e-11     22.4 
 3 mu         0.3      1.23    0.0630      1.09e- 7     15.1 
 4 mu         0.4      1.23    0.335       1.65e- 5      8.05
 5 mu         0.5      1.16    0.823       7.63e- 4      5.15
 6 mu         0.6      1.11    0.868       1.34e- 2      4.59
 7 mu         0.7      1.10    0.916       2.60e- 3      4.71
 8 mu         0.8      1.08    0.966       1.99e- 5      4.27
 9 mu         0.9      1.06    0.267       3.46e- 9      6.66
10 mu_1       0.1      1.22    0.000117    3.41e-15     29.4 
11 mu_1       0.2      1.23    0.00981     3.98e-10     20.4 
12 mu_1       0.3      1.21    0.135       3.43e- 7     10.5 
13 mu_1       0.4      1.18    0.544       3.91e- 5      6.57
14 mu_1       0.5      1.13    0.838       1.45e- 3      4.66
15 mu_1       0.6      1.10    0.934       2.15e- 2      4.77
16 mu_1       0.7      1.09    0.925       6.96e- 4      4.81
17 mu_1       0.8      1.07    0.896       4.67e- 6      4.45
18 mu_1       0.9      1.06    0.206       7.21e-10      6.97
19 mu_0       0.1      0.672   0.00000426  0            14.7 
20 mu_0       0.2      1.10    0.00130     0            22.9 
21 mu_0       0.3      1.24    0.0261      0            17.7 
22 mu_0       0.4      1.26    0.183       0             9.29
23 mu_0       0.5      1.19    0.698       0             5.80
24 mu_0       0.6      1.13    0.767       0             4.92
25 mu_0       0.7      1.12    0.804       0             4.81
26 mu_0       0.8      1.11    1.07        0             5.06
27 mu_0       0.9      1.07    0.313       0             5.59
[1] "Total run time was 106.025 seconds"
