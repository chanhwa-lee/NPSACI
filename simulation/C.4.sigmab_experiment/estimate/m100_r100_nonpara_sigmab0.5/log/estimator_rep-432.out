
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1214"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 8  6  6  4  7 12  6  8  6  5  2  5  9  3  6  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04893 0.39392 0.66088 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
726 488 
[1] "treatment indicator table: "

  0   1 
457 757 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 600
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 614
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 78.369 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.407 0.0714
 2 mu         0.1   0.2 0.476 0.0601
 3 mu         0.1   0.3 0.517 0.0646
 4 mu         0.1   0.4 0.521 0.0651
 5 mu         0.1   0.5 0.529 0.0714
 6 mu         0.2   0.1 0.361 0.0534
 7 mu         0.2   0.2 0.441 0.0532
 8 mu         0.2   0.3 0.473 0.0520
 9 mu         0.2   0.4 0.482 0.0484
10 mu         0.2   0.5 0.505 0.0448
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.996        0.901    0.0487      9.14
 2 mu         0.2      0.985        1        0.233       2.44
 3 mu         0.3      1.01         1        0.498       1.54
 4 mu         0.4      1.02         1.00     0.766       1.41
 5 mu         0.5      1.02         1.00     0.891       1.21
 6 mu         0.6      1.01         1        0.886       1.16
 7 mu         0.7      0.995        1        0.819       1.19
 8 mu         0.8      0.984        1        0.729       1.31
 9 mu         0.9      0.970        0.992    0.509       1.84
10 mu_1       0.1      0.999        1        0.147       4.85
11 mu_1       0.2      0.998        1        0.406       1.60
12 mu_1       0.3      1.01         1        0.676       1.50
13 mu_1       0.4      1.02         1.01     0.835       1.32
14 mu_1       0.5      1.01         1.00     0.889       1.16
15 mu_1       0.6      1.00         1        0.868       1.15
16 mu_1       0.7      0.992        1        0.793       1.19
17 mu_1       0.8      0.984        1        0.699       1.37
18 mu_1       0.9      0.969        0.991    0.488       1.88
19 mu_0       0.1      0.995        0.867    0.0378      9.62
20 mu_0       0.2      0.982        1        0.190       2.80
21 mu_0       0.3      1.00         1        0.422       1.56
22 mu_0       0.4      1.02         1        0.677       1.47
23 mu_0       0.5      1.02         1        0.866       1.29
24 mu_0       0.6      1.01         1.01     0.871       1.18
25 mu_0       0.7      1.00         1        0.852       1.17
26 mu_0       0.8      0.987        1        0.747       1.20
27 mu_0       0.9      0.980        0.994    0.607       1.42
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.59     0.0000936  6.55e-16     98.3 
 2 mu         0.2      1.86     0.00819    1.53e-10     75.6 
 3 mu         0.3      1.30     0.0771     1.97e- 7     26.2 
 4 mu         0.4      0.981    0.318      3.00e- 5      7.60
 5 mu         0.5      0.948    0.759      1.39e- 3      3.47
 6 mu         0.6      0.975    1.00       2.21e- 2      2.42
 7 mu         0.7      1.06     1.24       4.10e- 4      2.35
 8 mu         0.8      1.22     0.862      1.06e- 6      3.85
 9 mu         0.9      1.24     0.196      2.60e-11     10.9 
10 mu_1       0.1      2.27     0.000613   6.20e-15    123.  
11 mu_1       0.2      1.68     0.0341     7.23e-10     47.2 
12 mu_1       0.3      1.10     0.178      6.23e- 7     17.0 
13 mu_1       0.4      0.946    0.504      7.11e- 5      4.00
14 mu_1       0.5      0.966    0.864      2.63e- 3      3.47
15 mu_1       0.6      1.01     1.03       7.36e- 3      2.55
16 mu_1       0.7      1.11     1.23       1.17e- 4      2.69
17 mu_1       0.8      1.26     0.709      2.66e- 7      4.19
18 mu_1       0.9      1.24     0.143      5.78e-12     11.5 
19 mu_0       0.1      1.52     0.0000379  0            95.5 
20 mu_0       0.2      1.90     0.00267    0            82.7 
21 mu_0       0.3      1.39     0.0290     0            32.8 
22 mu_0       0.4      1.00     0.181      0            10.0 
23 mu_0       0.5      0.930    0.567      0             3.47
24 mu_0       0.6      0.927    0.853      0             2.88
25 mu_0       0.7      0.950    0.936      0             2.69
26 mu_0       0.8      1.09     1.06       0             3.05
27 mu_0       0.9      1.29     0.273      0             6.35
[1] "Total run time was 80.544 seconds"
