
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1269"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5 11  2  3  3  7 10  8  4 10  7  5  6  8  6  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04722 0.38449 0.63197 1.00000 4.00000 
[1] "event indicator table: "

  0   1 
760 509 
[1] "treatment indicator table: "

  0   1 
457 812 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 615
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 74"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 654
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 19"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 152.067 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.487 0.216
 2 mu         0.1   0.2 0.547 0.218
 3 mu         0.1   0.3 0.561 0.223
 4 mu         0.1   0.4 0.558 0.228
 5 mu         0.1   0.5 0.559 0.232
 6 mu         0.2   0.1 0.409 0.167
 7 mu         0.2   0.2 0.464 0.176
 8 mu         0.2   0.3 0.479 0.185
 9 mu         0.2   0.4 0.480 0.194
10 mu         0.2   0.5 0.489 0.200
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.16         0.449 0.0000397     33.8 
 2 mu         0.2      1.11         0.805 0.00664       23.7 
 3 mu         0.3      1.05         0.970 0.0744        11.2 
 4 mu         0.4      1.01         0.990 0.262          4.39
 5 mu         0.5      0.998        1     0.494          2.04
 6 mu         0.6      0.997        1     0.689          1.20
 7 mu         0.7      0.991        1     0.854          1.11
 8 mu         0.8      0.988        1     0.490          1.35
 9 mu         0.9      1.01         1     0.108          2.93
10 mu_1       0.1      1.17         0.812 0.000189      34.0 
11 mu_1       0.2      1.04         0.925 0.0159        12.3 
12 mu_1       0.3      0.996        0.976 0.121          5.90
13 mu_1       0.4      0.988        0.998 0.335          3.14
14 mu_1       0.5      0.995        1     0.552          1.55
15 mu_1       0.6      0.996        1     0.725          1.16
16 mu_1       0.7      0.990        0.999 0.824          1.13
17 mu_1       0.8      0.989        1     0.444          1.40
18 mu_1       0.9      1.02         1     0.0942         3.16
19 mu_0       0.1      1.16         0.397 0.0000231     33.8 
20 mu_0       0.2      1.12         0.806 0.00431       26.6 
21 mu_0       0.3      1.07         0.958 0.0543        14.1 
22 mu_0       0.4      1.02         0.997 0.213          6.09
23 mu_0       0.5      1.00         1     0.437          2.54
24 mu_0       0.6      0.998        1     0.633          1.34
25 mu_0       0.7      0.993        1     0.794          1.11
26 mu_0       0.8      0.985        1     0.676          1.15
27 mu_0       0.9      0.977        1     0.232          1.72
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       1.24   0.0000209   1.78e-14     48.9 
 2 mu         0.2       5.12   0.00404     1.84e- 9    236.  
 3 mu         0.3       6.19   0.0458      1.39e- 6    316.  
 4 mu         0.4       3.94   0.214       1.36e- 4    179.  
 5 mu         0.5       1.91   0.638       4.18e- 3     51.2 
 6 mu         0.6       1.17   1.04        5.94e- 2      7.00
 7 mu         0.7       1.13   1.13        6.71e- 3      3.46
 8 mu         0.8       1.21   0.876       1.16e- 4     10.4 
 9 mu         0.9       1.26   0.157       8.05e- 8     33.8 
10 mu_1       0.1       3.08   0.000143    1.59e-13    115.  
11 mu_1       0.2       6.74   0.0121      8.23e- 9    328.  
12 mu_1       0.3       5.72   0.112       4.14e- 6    293.  
13 mu_1       0.4       3.02   0.376       3.03e- 4    125.  
14 mu_1       0.5       1.49   0.794       7.48e- 3     28.4 
15 mu_1       0.6       1.10   0.980       3.57e- 2      3.24
16 mu_1       0.7       1.14   1.23        2.05e- 3      3.91
17 mu_1       0.8       1.23   0.778       3.10e- 5     13.0 
18 mu_1       0.9       1.29   0.118       1.92e- 8     37.6 
19 mu_0       0.1       1.04   0.00000926  0            41.5 
20 mu_0       0.2       4.71   0.00142     0           213.  
21 mu_0       0.3       6.39   0.0203      0           326.  
22 mu_0       0.4       4.56   0.106       0           216.  
23 mu_0       0.5       2.32   0.419       0            73.9 
24 mu_0       0.6       1.28   0.864       0            12.6 
25 mu_0       0.7       1.09   1.11        0             3.30
26 mu_0       0.8       1.14   1.10        0             3.71
27 mu_0       0.9       1.06   0.363       0             7.47
[1] "Total run time was 155.536 seconds"
