
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1282"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 7  7  4  4  4  7  3  4 10 11  9  7  5  6  6  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0417  0.3437  0.6043  1.0000  6.0000 
[1] "event indicator table: "

  0   1 
744 538 
[1] "treatment indicator table: "

  0   1 
453 829 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 669
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 6"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 613
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 83"
[1] "     Cluster: 87"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 84.342 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.485 0.125 
 2 mu         0.1   0.2 0.509 0.157 
 3 mu         0.1   0.3 0.567 0.119 
 4 mu         0.1   0.4 0.583 0.156 
 5 mu         0.1   0.5 0.566 0.185 
 6 mu         0.2   0.1 0.406 0.0824
 7 mu         0.2   0.2 0.441 0.133 
 8 mu         0.2   0.3 0.504 0.0934
 9 mu         0.2   0.4 0.525 0.134 
10 mu         0.2   0.5 0.514 0.165 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.712        0.600  0.000287      4.58
 2 mu         0.2      0.884        0.868  0.0247        4.93
 3 mu         0.3      0.962        0.961  0.148         3.43
 4 mu         0.4      0.991        1      0.406         1.83
 5 mu         0.5      1.00         1      0.707         1.32
 6 mu         0.6      1.00         1      0.805         1.14
 7 mu         0.7      0.995        1      0.804         1.13
 8 mu         0.8      0.999        1      0.752         1.39
 9 mu         0.9      1.02         1      0.285         2.75
10 mu_1       0.1      0.851        0.812  0.00120       6.69
11 mu_1       0.2      0.954        0.932  0.0562        4.97
12 mu_1       0.3      0.988        0.994  0.239         2.64
13 mu_1       0.4      1.00         1      0.528         1.60
14 mu_1       0.5      1.00         1      0.798         1.22
15 mu_1       0.6      0.997        1      0.809         1.13
16 mu_1       0.7      0.994        1      0.811         1.18
17 mu_1       0.8      1.00         1      0.723         1.45
18 mu_1       0.9      1.02         1      0.254         2.96
19 mu_0       0.1      0.697        0.587  0.000185      4.35
20 mu_0       0.2      0.867        0.851  0.0169        5.16
21 mu_0       0.3      0.951        0.942  0.109         3.76
22 mu_0       0.4      0.985        1      0.325         1.98
23 mu_0       0.5      1.00         1      0.616         1.42
24 mu_0       0.6      1.00         1      0.799         1.18
25 mu_0       0.7      0.998        1      0.787         1.14
26 mu_0       0.8      0.996        1      0.768         1.20
27 mu_0       0.9      0.999        1      0.523         1.56
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      55.1     0.0000560  2.44e-15   5494.  
 2 mu         0.2      27.3     0.00691    5.06e-10   2674.  
 3 mu         0.3       9.12    0.0716     5.72e- 7    808.  
 4 mu         0.4       2.95    0.291      7.45e- 5    169.  
 5 mu         0.5       1.47    0.922      2.87e- 3     23.7 
 6 mu         0.6       1.15    1.07       4.90e- 2      4.36
 7 mu         0.7       1.21    1.08       8.45e- 3      4.96
 8 mu         0.8       1.55    0.661      1.11e- 4     12.4 
 9 mu         0.9       1.72    0.0983     4.34e- 8     22.5 
10 mu_1       0.1      42.8     0.000411   2.20e-14   4227.  
11 mu_1       0.2      11.2     0.0235     2.28e- 9   1028.  
12 mu_1       0.3       3.29    0.166      1.72e- 6    207.  
13 mu_1       0.4       1.60    0.534      1.68e- 4     32.6 
14 mu_1       0.5       1.22    1.01       5.17e- 3      9.32
15 mu_1       0.6       1.11    1.13       6.00e- 2      2.59
16 mu_1       0.7       1.25    1.06       3.02e- 3      5.97
17 mu_1       0.8       1.61    0.505      3.47e- 5     13.1 
18 mu_1       0.9       1.71    0.0644     1.21e- 8     25.0 
19 mu_0       0.1      56.5     0.0000228  0          5635.  
20 mu_0       0.2      31.4     0.00220    0          3085.  
21 mu_0       0.3      11.6     0.0280     0          1065.  
22 mu_0       0.4       3.85    0.151      0           261.  
23 mu_0       0.5       1.72    0.630      0            43.8 
24 mu_0       0.6       1.20    0.974      0             7.00
25 mu_0       0.7       1.10    1.15       0             2.62
26 mu_0       0.8       1.30    0.883      0             9.83
27 mu_0       0.9       1.74    0.246      0            16.2 
[1] "Total run time was 86.813 seconds"
