
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1303"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  4  6  6  8  5  4  7  5  8  7  7  6  7  8  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02195 0.28656 0.56656 0.96516 4.00000 
[1] "event indicator table: "

  0   1 
749 554 
[1] "treatment indicator table: "

  0   1 
504 799 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 651
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 27"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 76"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 652
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 113.662 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.423 0.0725
 2 mu         0.1   0.2 0.458 0.0828
 3 mu         0.1   0.3 0.558 0.0757
 4 mu         0.1   0.4 0.590 0.0826
 5 mu         0.1   0.5 0.631 0.0931
 6 mu         0.2   0.1 0.398 0.0560
 7 mu         0.2   0.2 0.455 0.0613
 8 mu         0.2   0.3 0.531 0.0559
 9 mu         0.2   0.4 0.566 0.0592
10 mu         0.2   0.5 0.622 0.0629
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.966        0.774   0.00150      4.59
 2 mu         0.2      1.01         0.954   0.0586       3.45
 3 mu         0.3      0.999        1       0.274        1.91
 4 mu         0.4      0.990        1       0.549        1.54
 5 mu         0.5      0.990        0.996   0.729        1.25
 6 mu         0.6      0.998        1.00    0.767        1.16
 7 mu         0.7      1.01         1       0.838        1.18
 8 mu         0.8      1.01         1       0.729        1.31
 9 mu         0.9      0.964        0.966   0.460        1.61
10 mu_1       0.1      1.05         0.875   0.00548      5.20
11 mu_1       0.2      1.02         0.987   0.111        2.59
12 mu_1       0.3      0.996        1       0.371        1.62
13 mu_1       0.4      0.990        1       0.624        1.47
14 mu_1       0.5      0.992        1       0.743        1.16
15 mu_1       0.6      1.00         1       0.784        1.16
16 mu_1       0.7      1.01         1       0.819        1.19
17 mu_1       0.8      1.01         1       0.691        1.36
18 mu_1       0.9      0.959        0.956   0.433        1.66
19 mu_0       0.1      0.957        0.748   0.00106      4.97
20 mu_0       0.2      1.01         0.892   0.0454       3.67
21 mu_0       0.3      1.00         1       0.233        2.12
22 mu_0       0.4      0.990        1       0.498        1.58
23 mu_0       0.5      0.988        1       0.714        1.34
24 mu_0       0.6      0.993        1       0.740        1.15
25 mu_0       0.7      1.00         1       0.787        1.16
26 mu_0       0.8      1.01         1       0.764        1.23
27 mu_0       0.9      1.01         1       0.666        1.40
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.235    0.000127   7.81e-17      4.77
 2 mu         0.2      0.901    0.0125     3.64e-11     19.0 
 3 mu         0.3      1.41     0.123      7.06e- 8     33.2 
 4 mu         0.4      1.43     0.431      1.43e- 5     25.6 
 5 mu         0.5      1.16     0.805      8.28e- 4     10.5 
 6 mu         0.6      0.939    0.918      2.12e- 2      2.51
 7 mu         0.7      0.937    0.896      1.99e- 3      2.73
 8 mu         0.8      1.15     0.605      8.87e- 6      5.95
 9 mu         0.9      1.38     0.0551     4.88e-10     19.6 
10 mu_1       0.1      0.600    0.000821   7.42e-16     10.6 
11 mu_1       0.2      1.32     0.0372     1.73e-10     29.6 
12 mu_1       0.3      1.56     0.264      2.24e- 7     34.6 
13 mu_1       0.4      1.36     0.709      3.40e- 5     20.0 
14 mu_1       0.5      1.07     0.939      1.57e- 3      6.58
15 mu_1       0.6      0.913    0.903      2.68e- 2      2.36
16 mu_1       0.7      0.963    0.912      7.11e- 4      2.93
17 mu_1       0.8      1.18     0.479      2.77e- 6      7.00
18 mu_1       0.9      1.37     0.0378     1.35e-10     20.5 
19 mu_0       0.1      0.194    0.0000461  0             4.41
20 mu_0       0.2      0.797    0.00558    0            16.3 
21 mu_0       0.3      1.35     0.0561     0            32.6 
22 mu_0       0.4      1.47     0.231      0            29.4 
23 mu_0       0.5      1.25     0.618      0            14.5 
24 mu_0       0.6      0.978    1.02       0             3.87
25 mu_0       0.7      0.876    0.871      0             2.65
26 mu_0       0.8      1.01     0.765      0             3.58
27 mu_0       0.9      1.41     0.189      0            11.5 
[1] "Total run time was 116.521 seconds"
