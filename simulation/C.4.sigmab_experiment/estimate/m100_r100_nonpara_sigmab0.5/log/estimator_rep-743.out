
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1286"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 8  6  7  2  6  7  5  7  5  3  7  7  8  6  6 10 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.05482 0.38558 0.64794 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
761 525 
[1] "treatment indicator table: "

  0   1 
448 838 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 627
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 44"
[1] "     Cluster: 48"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 659
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 8"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 73"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 167.818 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.401 0.0754
 2 mu         0.1   0.2 0.489 0.104 
 3 mu         0.1   0.3 0.578 0.0942
 4 mu         0.1   0.4 0.611 0.0876
 5 mu         0.1   0.5 0.616 0.0816
 6 mu         0.2   0.1 0.346 0.0499
 7 mu         0.2   0.2 0.416 0.0712
 8 mu         0.2   0.3 0.509 0.0645
 9 mu         0.2   0.4 0.550 0.0628
10 mu         0.2   0.5 0.576 0.0520
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.860        0.730   0.00173      4.38
 2 mu         0.2      0.991        0.970   0.0580       5.86
 3 mu         0.3      0.993        1       0.253        2.99
 4 mu         0.4      0.989        1       0.516        1.58
 5 mu         0.5      0.996        1       0.655        1.40
 6 mu         0.6      0.999        1       0.776        1.26
 7 mu         0.7      0.993        1       0.871        1.12
 8 mu         0.8      0.989        1       0.803        1.20
 9 mu         0.9      0.992        1       0.489        1.72
10 mu_1       0.1      1.02         0.948   0.00616      6.94
11 mu_1       0.2      1.02         1       0.108        5.00
12 mu_1       0.3      0.990        1       0.340        2.09
13 mu_1       0.4      0.990        1       0.596        1.45
14 mu_1       0.5      0.998        1       0.682        1.38
15 mu_1       0.6      0.999        1       0.802        1.22
16 mu_1       0.7      0.992        1       0.853        1.13
17 mu_1       0.8      0.989        1       0.801        1.20
18 mu_1       0.9      0.992        1       0.458        1.77
19 mu_0       0.1      0.843        0.668   0.00124      4.10
20 mu_0       0.2      0.984        0.943   0.0456       6.08
21 mu_0       0.3      0.994        1       0.216        3.37
22 mu_0       0.4      0.989        1       0.463        1.76
23 mu_0       0.5      0.995        1       0.629        1.44
24 mu_0       0.6      0.999        1       0.738        1.31
25 mu_0       0.7      0.996        1       0.847        1.16
26 mu_0       0.8      0.990        1       0.810        1.21
27 mu_0       0.9      0.990        1       0.745        1.22
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.454   0.0000497   3.61e-17     26.4 
 2 mu         0.2      1.25    0.00572     1.68e-11     72.1 
 3 mu         0.3      1.46    0.0737      3.26e- 8     49.3 
 4 mu         0.4      1.36    0.379       6.61e- 6     15.4 
 5 mu         0.5      1.29    0.930       3.82e- 4      6.38
 6 mu         0.6      1.33    1.13        9.77e- 3      5.68
 7 mu         0.7      1.31    1.11        4.41e- 3      7.00
 8 mu         0.8      1.24    0.880       1.72e- 5      5.90
 9 mu         0.9      1.34    0.133       8.40e-10     21.9 
10 mu_1       0.1      0.983   0.000413    3.43e-16     55.5 
11 mu_1       0.2      1.55    0.0164      7.99e-11     75.9 
12 mu_1       0.3      1.49    0.159       1.03e- 7     34.6 
13 mu_1       0.4      1.35    0.612       1.57e- 5     10.9 
14 mu_1       0.5      1.31    1.01        7.26e- 4      5.90
15 mu_1       0.6      1.34    1.06        1.55e- 2      6.20
16 mu_1       0.7      1.30    1.08        1.33e- 3      6.87
17 mu_1       0.8      1.24    0.763       4.52e- 6      6.97
18 mu_1       0.9      1.35    0.100       1.97e-10     22.9 
19 mu_0       0.1      0.396   0.00000884  0            23.1 
20 mu_0       0.2      1.18    0.00212     0            71.2 
21 mu_0       0.3      1.44    0.0331      0            55.6 
22 mu_0       0.4      1.36    0.228       0            20.3 
23 mu_0       0.5      1.28    0.620       0             7.51
24 mu_0       0.6      1.31    1.16        0             6.21
25 mu_0       0.7      1.34    1.09        0             7.29
26 mu_0       0.8      1.24    1.13        0             6.60
27 mu_0       0.9      1.23    0.308       0            12.1 
[1] "Total run time was 172.612 seconds"
