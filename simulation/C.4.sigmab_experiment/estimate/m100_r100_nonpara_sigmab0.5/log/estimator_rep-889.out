
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1324"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 9  4  5  3  5  8  3  8  2 10  2  7  6  9 10  9 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03748 0.37173 0.62216 1.00000 4.65351 
[1] "event indicator table: "

  0   1 
776 548 
[1] "treatment indicator table: "

  0   1 
495 829 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 648
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 676
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 129.114 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.398 0.0526
 2 mu         0.1   0.2 0.382 0.0768
 3 mu         0.1   0.3 0.526 0.0477
 4 mu         0.1   0.4 0.526 0.0482
 5 mu         0.1   0.5 0.515 0.0608
 6 mu         0.2   0.1 0.349 0.0358
 7 mu         0.2   0.2 0.363 0.0499
 8 mu         0.2   0.3 0.466 0.0371
 9 mu         0.2   0.4 0.476 0.0454
10 mu         0.2   0.5 0.492 0.0502
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.04         0.952    0.0370      4.23
 2 mu         0.2      1.00         1        0.281       2.04
 3 mu         0.3      1.00         1        0.550       1.63
 4 mu         0.4      1.01         1        0.546       1.57
 5 mu         0.5      1.01         1        0.563       1.48
 6 mu         0.6      1.00         1        0.693       1.40
 7 mu         0.7      1.00         1        0.820       1.41
 8 mu         0.8      1.01         1        0.757       1.31
 9 mu         0.9      0.985        0.997    0.424       1.51
10 mu_1       0.1      0.982        0.971    0.110       2.70
11 mu_1       0.2      0.989        1        0.407       1.86
12 mu_1       0.3      1.00         1        0.518       1.62
13 mu_1       0.4      1.01         1        0.578       1.53
14 mu_1       0.5      1.01         1        0.571       1.48
15 mu_1       0.6      1.00         1        0.736       1.37
16 mu_1       0.7      1.00         1        0.818       1.42
17 mu_1       0.8      1.01         1        0.710       1.31
18 mu_1       0.9      0.982        1.00     0.422       1.52
19 mu_0       0.1      1.05         0.950    0.0277      4.40
20 mu_0       0.2      1.00         1        0.228       2.17
21 mu_0       0.3      1.00         1        0.540       1.70
22 mu_0       0.4      1.01         1        0.526       1.60
23 mu_0       0.5      1.01         1        0.554       1.47
24 mu_0       0.6      1.01         1        0.627       1.45
25 mu_0       0.7      1.00         1        0.799       1.40
26 mu_0       0.8      1.01         1        0.743       1.41
27 mu_0       0.9      1.01         1        0.436       1.53
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       2.65   0.0000289   2.90e-15    161.  
 2 mu         0.2       1.74   0.00520     3.38e-10     97.9 
 3 mu         0.3       1.23   0.0753      2.92e- 7     35.0 
 4 mu         0.4       1.11   0.363       3.33e- 5     26.5 
 5 mu         0.5       1.08   0.737       1.23e- 3      9.46
 6 mu         0.6       1.12   1.03        2.09e- 4      6.97
 7 mu         0.7       1.17   0.976       1.83e- 6      5.80
 8 mu         0.8       1.27   0.785       2.13e- 9      7.86
 9 mu         0.9       1.43   0.111       1.83e-14     22.5 
10 mu_1       0.1       2.66   0.000226    2.74e-14    179.  
11 mu_1       0.2       1.38   0.0160      1.60e- 9     54.4 
12 mu_1       0.3       1.17   0.154       9.18e- 7     36.9 
13 mu_1       0.4       1.11   0.615       7.86e- 5     21.0 
14 mu_1       0.5       1.10   0.937       8.60e- 4      5.98
15 mu_1       0.6       1.14   1.12        1.94e- 5      7.26
16 mu_1       0.7       1.19   1.02        1.46e- 7      6.06
17 mu_1       0.8       1.29   0.664       1.48e-10      7.76
18 mu_1       0.9       1.43   0.0801      1.13e-15     23.6 
19 mu_0       0.1       2.65   0.00000892  0           159.  
20 mu_0       0.2       1.83   0.00205     0           109.  
21 mu_0       0.3       1.26   0.0395      0            34.3 
22 mu_0       0.4       1.11   0.223       0            30.3 
23 mu_0       0.5       1.06   0.596       0            13.0 
24 mu_0       0.6       1.08   0.996       0             6.54
25 mu_0       0.7       1.13   1.04        0             7.25
26 mu_0       0.8       1.19   0.868       0             8.28
27 mu_0       0.9       1.38   0.285       0            12.5 
[1] "Total run time was 132.167 seconds"
