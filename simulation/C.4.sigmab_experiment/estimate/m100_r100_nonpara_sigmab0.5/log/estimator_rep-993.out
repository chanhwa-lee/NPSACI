
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1282"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  4  8  8  7  6  4  6  5  9  6  6  6  7  6  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03878 0.34476 0.60216 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
752 530 
[1] "treatment indicator table: "

  0   1 
489 793 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 606
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 676
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 75"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 198.08 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.369 0.198
 2 mu         0.1   0.2 0.418 0.203
 3 mu         0.1   0.3 0.431 0.231
 4 mu         0.1   0.4 0.442 0.257
 5 mu         0.1   0.5 0.487 0.250
 6 mu         0.2   0.1 0.340 0.168
 7 mu         0.2   0.2 0.392 0.168
 8 mu         0.2   0.3 0.407 0.193
 9 mu         0.2   0.4 0.419 0.215
10 mu         0.2   0.5 0.468 0.203
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      2.18         0.415 0.00000162     156.  
 2 mu         0.2      1.70         0.826 0.000743        85.2 
 3 mu         0.3      1.19         0.963 0.0176          20.9 
 4 mu         0.4      1.04         1     0.116            3.80
 5 mu         0.5      1.01         1.00  0.358            1.57
 6 mu         0.6      1.00         1.00  0.664            1.15
 7 mu         0.7      0.995        1.00  0.816            1.27
 8 mu         0.8      0.987        0.984 0.628            1.96
 9 mu         0.9      0.990        0.934 0.232            3.10
10 mu_1       0.1      2.43         0.765 0.00000870     165.  
11 mu_1       0.2      1.41         0.983 0.00204         45.6 
12 mu_1       0.3      1.09         0.998 0.0331           8.24
13 mu_1       0.4      1.02         1     0.169            2.38
14 mu_1       0.5      1.01         1.01  0.437            1.32
15 mu_1       0.6      1.00         1.00  0.724            1.11
16 mu_1       0.7      0.993        0.995 0.785            1.35
17 mu_1       0.8      0.986        0.978 0.576            2.08
18 mu_1       0.9      0.990        0.919 0.208            3.15
19 mu_0       0.1      2.15         0.373 0.000000832    155.  
20 mu_0       0.2      1.77         0.796 0.000418        95.0 
21 mu_0       0.3      1.23         0.966 0.0109          26.4 
22 mu_0       0.4      1.06         1     0.0804           5.07
23 mu_0       0.5      1.02         1     0.279            1.82
24 mu_0       0.6      1.01         1.01  0.574            1.22
25 mu_0       0.7      1.00         1.00  0.828            1.14
26 mu_0       0.8      0.990        0.991 0.709            1.49
27 mu_0       0.9      0.990        0.964 0.444            2.66
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1    4615.      0.0000563  2.29e-15 459655.  
 2 mu         0.2    5620.      0.00703    1.07e- 9 558575.  
 3 mu         0.3    2251.      0.0865     2.07e- 6 222579.  
 4 mu         0.4     459.      0.418      4.20e- 4  44787.  
 5 mu         0.5      50.9     0.815      1.21e- 2   4731.  
 6 mu         0.6       3.67    1.14       1.52e- 2    230.  
 7 mu         0.7       1.19    1.07       4.22e- 4      8.72
 8 mu         0.8       1.83    0.609      2.48e- 6     73.5 
 9 mu         0.9       4.69    0.0945     3.40e-10    344.  
10 mu_1       0.1    7290.      0.000338   2.18e-14 725771.  
11 mu_1       0.2    4444.      0.0222     5.08e- 9 440980.  
12 mu_1       0.3    1191.      0.187      6.57e- 6 117147.  
13 mu_1       0.4     184.      0.562      9.98e- 4  17679.  
14 mu_1       0.5      17.3     0.939      2.42e- 2   1494.  
15 mu_1       0.6       1.81    1.14       1.81e- 3     60.6 
16 mu_1       0.7       1.19    1.03       4.30e- 5     11.8 
17 mu_1       0.8       1.99    0.501      2.21e- 7     87.2 
18 mu_1       0.9       4.91    0.0678     2.70e-11    363.  
19 mu_0       0.1    4317.      0.0000231  0        430086.  
20 mu_0       0.2    5914.      0.00365    0        587974.  
21 mu_0       0.3    2706.      0.0481     0        267764.  
22 mu_0       0.4     643.      0.239      0         62859.  
23 mu_0       0.5      84.4     0.589      0          7969.  
24 mu_0       0.6       6.46    0.981      0           484.  
25 mu_0       0.7       1.18    1.17       0            10.3 
26 mu_0       0.8       1.20    0.945      0            18.4 
27 mu_0       0.9       2.75    0.234      0           172.  
[1] "Total run time was 202.914 seconds"
