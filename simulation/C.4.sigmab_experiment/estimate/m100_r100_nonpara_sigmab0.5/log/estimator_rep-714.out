
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1262"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  5  8  6  3 10  9  5  5  5 11  7  5  3  9  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.01514 0.28893 0.55079 0.94193 5.06547 
[1] "event indicator table: "

  0   1 
766 496 
[1] "treatment indicator table: "

  0   1 
492 770 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 622
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 67"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 94"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 640
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 166.221 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.636 0.149 
 2 mu         0.1   0.2 0.701 0.169 
 3 mu         0.1   0.3 0.758 0.173 
 4 mu         0.1   0.4 0.762 0.156 
 5 mu         0.1   0.5 0.783 0.147 
 6 mu         0.2   0.1 0.507 0.0949
 7 mu         0.2   0.2 0.546 0.0983
 8 mu         0.2   0.3 0.601 0.107 
 9 mu         0.2   0.4 0.623 0.0964
10 mu         0.2   0.5 0.657 0.0894
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.772        0.845   0.00150      4.19
 2 mu         0.2      0.927        0.925   0.0579       3.37
 3 mu         0.3      0.982        0.975   0.302        2.40
 4 mu         0.4      0.990        0.999   0.603        1.77
 5 mu         0.5      0.993        1       0.720        1.27
 6 mu         0.6      0.995        0.999   0.720        1.22
 7 mu         0.7      0.996        1.00    0.707        1.17
 8 mu         0.8      0.999        1       0.707        1.30
 9 mu         0.9      1.02         1       0.634        1.69
10 mu_1       0.1      0.910        0.913   0.00542      4.74
11 mu_1       0.2      0.984        0.979   0.111        2.76
12 mu_1       0.3      0.998        0.992   0.423        2.17
13 mu_1       0.4      0.996        1       0.640        1.52
14 mu_1       0.5      0.996        0.999   0.757        1.24
15 mu_1       0.6      0.996        1       0.683        1.20
16 mu_1       0.7      0.996        1.00    0.713        1.23
17 mu_1       0.8      1.00         1       0.713        1.33
18 mu_1       0.9      1.02         1       0.598        1.73
19 mu_0       0.1      0.757        0.824   0.00106      4.26
20 mu_0       0.2      0.912        0.911   0.0446       3.56
21 mu_0       0.3      0.975        0.969   0.250        2.50
22 mu_0       0.4      0.986        0.991   0.504        1.94
23 mu_0       0.5      0.990        1       0.682        1.39
24 mu_0       0.6      0.995        1       0.775        1.25
25 mu_0       0.7      0.995        1       0.652        1.17
26 mu_0       0.8      0.992        1.00    0.682        1.21
27 mu_0       0.9      0.996        1       0.538        1.43
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      29.8     0.0000523  7.66e-16   2466.  
 2 mu         0.2      15.4     0.00573    1.00e-10    948.  
 3 mu         0.3       5.90    0.0710     9.89e- 8    219.  
 4 mu         0.4       2.52    0.298      1.32e- 5     33.8 
 5 mu         0.5       1.42    0.789      5.84e- 4      7.86
 6 mu         0.6       1.13    1.24       1.30e- 2      4.66
 7 mu         0.7       1.18    1.06       5.67e- 4      2.98
 8 mu         0.8       1.27    0.917      8.59e- 7      4.41
 9 mu         0.9       1.33    0.131      9.33e-12     12.8 
10 mu_1       0.1      24.0     0.000296   7.66e-15   1644.  
11 mu_1       0.2       8.23    0.0215     5.02e-10    316.  
12 mu_1       0.3       3.31    0.176      3.30e- 7     48.7 
13 mu_1       0.4       1.77    0.559      3.29e- 5     14.4 
14 mu_1       0.5       1.22    0.869      1.17e- 3      5.05
15 mu_1       0.6       1.13    1.09       1.19e- 2      4.66
16 mu_1       0.7       1.22    1.11       1.21e- 4      3.19
17 mu_1       0.8       1.30    0.730      1.61e- 7      4.93
18 mu_1       0.9       1.35    0.0912     1.56e-12     14.2 
19 mu_0       0.1      30.5     0.0000148  0          2557.  
20 mu_0       0.2      17.1     0.00240    0          1106.  
21 mu_0       0.3       7.01    0.0288     0           292.  
22 mu_0       0.4       3.02    0.169      0            52.6 
23 mu_0       0.5       1.62    0.567      0            12.1 
24 mu_0       0.6       1.14    0.929      0             4.66
25 mu_0       0.7       1.09    1.05       0             3.96
26 mu_0       0.8       1.18    0.966      0             3.90
27 mu_0       0.9       1.16    0.288      0             8.60
[1] "Total run time was 168.831 seconds"
