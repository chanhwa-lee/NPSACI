
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1270"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  6  5  9  4  6  8  8  5  5 10  4  9  4  7  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03023 0.37152 0.60274 0.98644 5.00000 
[1] "event indicator table: "

  0   1 
763 507 
[1] "treatment indicator table: "

  0   1 
495 775 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 658
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 612
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 91.558 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.420 0.100 
 2 mu         0.1   0.2 0.540 0.111 
 3 mu         0.1   0.3 0.581 0.104 
 4 mu         0.1   0.4 0.615 0.102 
 5 mu         0.1   0.5 0.638 0.0997
 6 mu         0.2   0.1 0.370 0.0881
 7 mu         0.2   0.2 0.462 0.0783
 8 mu         0.2   0.3 0.505 0.0736
 9 mu         0.2   0.4 0.539 0.0710
10 mu         0.2   0.5 0.567 0.0708
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.646        0.578 0.0000419      3.38
 2 mu         0.2      0.789        0.859 0.00696        3.31
 3 mu         0.3      0.908        0.964 0.0752         3.34
 4 mu         0.4      0.970        0.992 0.290          2.62
 5 mu         0.5      0.990        1     0.597          1.61
 6 mu         0.6      0.995        1     0.796          1.15
 7 mu         0.7      0.999        1     0.851          1.22
 8 mu         0.8      0.996        1     0.628          1.57
 9 mu         0.9      0.995        0.971 0.171          3.03
10 mu_1       0.1      0.747        0.745 0.000200       4.52
11 mu_1       0.2      0.866        0.944 0.0174         3.21
12 mu_1       0.3      0.952        0.983 0.130          3.36
13 mu_1       0.4      0.987        1     0.392          2.25
14 mu_1       0.5      0.994        1     0.692          1.40
15 mu_1       0.6      0.996        1     0.815          1.13
16 mu_1       0.7      0.999        1     0.832          1.28
17 mu_1       0.8      0.995        0.999 0.569          1.67
18 mu_1       0.9      0.996        0.977 0.146          3.13
19 mu_0       0.1      0.635        0.542 0.0000243      3.25
20 mu_0       0.2      0.770        0.818 0.00436        3.50
21 mu_0       0.3      0.888        0.945 0.0519         3.33
22 mu_0       0.4      0.959        0.992 0.221          2.88
23 mu_0       0.5      0.986        1     0.501          1.82
24 mu_0       0.6      0.993        0.999 0.762          1.21
25 mu_0       0.7      0.998        1     0.851          1.15
26 mu_0       0.8      1.00         1     0.755          1.37
27 mu_0       0.9      0.993        1     0.396          2.13
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value  max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>      <dbl>
 1 mu         0.1   38324.      0.000160   1.09e-15 3672581.  
 2 mu         0.2    6444.      0.00987    1.43e-10  557867.  
 3 mu         0.3     862.      0.115      1.41e- 7   65866.  
 4 mu         0.4      84.4     0.450      1.87e- 5    5591.  
 5 mu         0.5       6.76    0.920      8.31e- 4     302.  
 6 mu         0.6       1.51    1.09       1.84e- 2       8.51
 7 mu         0.7       1.22    1.18       1.41e- 3       3.18
 8 mu         0.8       1.39    0.587      3.22e- 6       9.16
 9 mu         0.9       1.48    0.0846     6.99e-11      18.2 
10 mu_1       0.1    1684.      0.000948   0         167862.  
11 mu_1       0.2     457.      0.0321     0          45330.  
12 mu_1       0.3      72.9     0.208      0           7025.  
13 mu_1       0.4       9.07    0.677      0            681.  
14 mu_1       0.5       2.07    0.965      0             38.4 
15 mu_1       0.6       1.29    1.15       0              6.01
16 mu_1       0.7       1.25    1.00       0              3.97
17 mu_1       0.8       1.44    0.468      0             10.0 
18 mu_1       0.9       1.49    0.0570     0             20.2 
19 mu_0       0.1   42395.      0.0000552  0        4080645.  
20 mu_0       0.2    7941.      0.00485    0         697334.  
21 mu_0       0.3    1200.      0.0629     0          94094.  
22 mu_0       0.4     135.      0.275      0           9319.  
23 mu_0       0.5      11.5     0.697      0            605.  
24 mu_0       0.6       1.84    1.06       0             21.3 
25 mu_0       0.7       1.15    1.17       0              3.08
26 mu_0       0.8       1.20    0.891      0              5.72
27 mu_0       0.9       1.40    0.165      0             14.9 
[1] "Total run time was 94.172 seconds"
