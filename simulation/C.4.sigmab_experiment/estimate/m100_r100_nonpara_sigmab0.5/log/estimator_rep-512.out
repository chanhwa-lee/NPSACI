
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1293"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 8  6  9  5  5  4  5  4  4  5  7  3  9  7  8 11 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03571 0.33170 0.61462 1.00000 5.17828 
[1] "event indicator table: "

  0   1 
730 563 
[1] "treatment indicator table: "

  0   1 
543 750 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 678
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 615
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 58.577 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.415 0.0886
 2 mu         0.1   0.2 0.522 0.103 
 3 mu         0.1   0.3 0.575 0.114 
 4 mu         0.1   0.4 0.578 0.116 
 5 mu         0.1   0.5 0.586 0.120 
 6 mu         0.2   0.1 0.375 0.0725
 7 mu         0.2   0.2 0.463 0.0770
 8 mu         0.2   0.3 0.535 0.0954
 9 mu         0.2   0.4 0.545 0.0951
10 mu         0.2   0.5 0.563 0.0912
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.792        0.492 0.000000194      10.2 
 2 mu         0.2      0.848        0.818 0.000182          7.42
 3 mu         0.3      0.870        0.949 0.00660           2.89
 4 mu         0.4      0.917        1     0.0593            1.53
 5 mu         0.5      0.966        1     0.233             1.31
 6 mu         0.6      0.991        1     0.498             1.22
 7 mu         0.7      0.979        1     0.422             1.42
 8 mu         0.8      0.923        0.991 0.0959            1.86
 9 mu         0.9      0.818        0.887 0.00278           2.41
10 mu_1       0.1      0.871        0.799 0.00000119       12.2 
11 mu_1       0.2      0.869        0.928 0.000559          4.76
12 mu_1       0.3      0.892        0.997 0.0137            1.68
13 mu_1       0.4      0.939        1     0.0934            1.46
14 mu_1       0.5      0.979        1     0.302             1.22
15 mu_1       0.6      0.993        1     0.537             1.25
16 mu_1       0.7      0.973        1     0.361             1.53
17 mu_1       0.8      0.912        0.980 0.0751            1.90
18 mu_1       0.9      0.808        0.885 0.00199           2.50
19 mu_0       0.1      0.783        0.441 0.0000000833     10.0 
20 mu_0       0.2      0.843        0.801 0.0000872         8.09
21 mu_0       0.3      0.861        0.932 0.00357           3.40
22 mu_0       0.4      0.902        0.995 0.0366            1.58
23 mu_0       0.5      0.952        1     0.165             1.42
24 mu_0       0.6      0.988        1     0.421             1.18
25 mu_0       0.7      0.995        1     0.564             1.28
26 mu_0       0.8      0.963        0.998 0.179             1.72
27 mu_0       0.9      0.902        0.960 0.00994           2.32
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      55.3      0.000580  2.41e-16    2853. 
 2 mu         0.2     264.       0.0356    1.12e-10   19748. 
 3 mu         0.3     312.       0.224     2.17e- 7   26430. 
 4 mu         0.4     168.       0.772     4.41e- 5   15013. 
 5 mu         0.5      47.7      1.09      2.55e- 3    4282. 
 6 mu         0.6       7.79     1.04      4.62e- 2     586. 
 7 mu         0.7       2.59     0.918     1.34e- 3      78.5
 8 mu         0.8       5.37     0.303     5.95e- 6     297. 
 9 mu         0.9      10.6      0.0140    3.27e-10     686. 
10 mu_1       0.1     132.       0.00380   2.28e-15    7926. 
11 mu_1       0.2     344.       0.101     5.32e-10   27428. 
12 mu_1       0.3     279.       0.445     6.88e- 7   24472. 
13 mu_1       0.4     115.       1.04      1.05e- 4   10426. 
14 mu_1       0.5      26.9      1.13      4.84e- 3    2379. 
15 mu_1       0.6       4.45     1.04      1.93e- 2     271. 
16 mu_1       0.7       2.75     0.800     4.77e- 4     104. 
17 mu_1       0.8       6.03     0.215     1.86e- 6     345. 
18 mu_1       0.9      10.8      0.00754   9.08e-11     708. 
19 mu_0       0.1      46.7      0.000233  0           2290. 
20 mu_0       0.2     244.       0.0194    0          17828. 
21 mu_0       0.3     326.       0.139     0          27269. 
22 mu_0       0.4     203.       0.503     0          18072. 
23 mu_0       0.5      68.5      0.935     0           6185. 
24 mu_0       0.6      12.8      1.08      0           1058. 
25 mu_0       0.7       2.22     0.977     0             72.4
26 mu_0       0.8       2.73     0.542     0            106. 
27 mu_0       0.9       8.25     0.0485    0            490. 
[1] "Total run time was 60.666 seconds"
