
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1278"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 14 15 16 17 18 19 20 
 1  9 10  4  6  9  7  4  8  9  4  6  8  9  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.05133 0.34669 0.63291 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
749 529 
[1] "treatment indicator table: "

  0   1 
477 801 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 603
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 9"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 70"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 675
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 45"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 186.733 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.254 0.0890
 2 mu         0.1   0.2 0.502 0.117 
 3 mu         0.1   0.3 0.553 0.0819
 4 mu         0.1   0.4 0.619 0.115 
 5 mu         0.1   0.5 0.603 0.109 
 6 mu         0.2   0.1 0.204 0.0723
 7 mu         0.2   0.2 0.427 0.0967
 8 mu         0.2   0.3 0.483 0.0460
 9 mu         0.2   0.4 0.545 0.0864
10 mu         0.2   0.5 0.529 0.0797
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      0.825        0.553 0.00000149       5.59
 2 mu         0.2      0.913        0.903 0.000701         4.27
 3 mu         0.3      1.06         1.00  0.0167          10.3 
 4 mu         0.4      1.08         1     0.110            9.50
 5 mu         0.5      1.03         1     0.342            4.56
 6 mu         0.6      0.986        0.993 0.653            1.73
 7 mu         0.7      0.970        0.979 0.693            1.22
 8 mu         0.8      0.967        0.996 0.382            1.77
 9 mu         0.9      0.967        0.953 0.0675           2.80
10 mu_1       0.1      0.846        0.806 0.00000802       5.78
11 mu_1       0.2      1.00         0.954 0.00193          6.94
12 mu_1       0.3      1.10         1     0.0315          11.5 
13 mu_1       0.4      1.07         1     0.161            8.22
14 mu_1       0.5      1.01         1     0.419            3.47
15 mu_1       0.6      0.981        0.987 0.718            1.44
16 mu_1       0.7      0.968        0.970 0.654            1.26
17 mu_1       0.8      0.967        0.987 0.347            1.88
18 mu_1       0.9      0.966        0.953 0.0573           2.83
19 mu_0       0.1      0.823        0.512 0.000000761      5.56
20 mu_0       0.2      0.892        0.902 0.000393         4.62
21 mu_0       0.3      1.04         0.965 0.0104           9.84
22 mu_0       0.4      1.09         1     0.0765          10.4 
23 mu_0       0.5      1.04         1     0.265            5.66
24 mu_0       0.6      0.993        0.996 0.556            2.16
25 mu_0       0.7      0.975        0.984 0.784            1.18
26 mu_0       0.8      0.969        0.973 0.525            1.32
27 mu_0       0.9      0.980        0.981 0.159            2.51
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      13.6     0.000119   2.15e-15   1167.  
 2 mu         0.2      74.1     0.0106     2.82e-10   7181.  
 3 mu         0.3      86.5     0.0884     2.78e- 7   8409.  
 4 mu         0.4      43.2     0.336      3.69e- 5   4095.  
 5 mu         0.5      11.5     0.865      1.64e- 3    973.  
 6 mu         0.6       2.40    0.969      5.28e- 3    107.  
 7 mu         0.7       1.28    1.10       1.10e- 4      4.10
 8 mu         0.8       1.44    0.578      4.30e- 7      6.98
 9 mu         0.9       1.88    0.0713     2.95e-11     36.5 
10 mu_1       0.1      33.4     0.000798   2.15e-14   3072.  
11 mu_1       0.2      97.0     0.0364     1.41e- 9   9449.  
12 mu_1       0.3      76.1     0.196      9.26e- 7   7377.  
13 mu_1       0.4      29.0     0.525      9.23e- 5   2694.  
14 mu_1       0.5       6.64    0.997      3.28e- 3    512.  
15 mu_1       0.6       1.68    1.12       5.87e- 4     46.7 
16 mu_1       0.7       1.25    1.04       1.05e- 5      3.90
17 mu_1       0.8       1.49    0.439      3.58e- 8      7.81
18 mu_1       0.9       1.94    0.0487     2.19e-12     40.6 
19 mu_0       0.1      11.4     0.0000526  0           956.  
20 mu_0       0.2      68.3     0.00439    0          6614.  
21 mu_0       0.3      91.0     0.0480     0          8852.  
22 mu_0       0.4      52.8     0.199      0          5028.  
23 mu_0       0.5      16.4     0.629      0          1434.  
24 mu_0       0.6       3.49    1.07       0           196.  
25 mu_0       0.7       1.34    1.15       0            10.1 
26 mu_0       0.8       1.27    0.953      0             5.82
27 mu_0       0.9       1.35    0.112      0            10.3 
[1] "Total run time was 191.513 seconds"
