
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1250"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  6  9  4  9  7  7  5  9  4  4  6  7  4  9  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.05175 0.37949 0.62516 1.00000 4.22982 
[1] "event indicator table: "

  0   1 
754 496 
[1] "treatment indicator table: "

  0   1 
437 813 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 687
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 95"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 563
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 80"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 212.365 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.325 0.0592
 2 mu         0.1   0.2 0.345 0.0847
 3 mu         0.1   0.3 0.474 0.0765
 4 mu         0.1   0.4 0.544 0.0784
 5 mu         0.1   0.5 0.630 0.111 
 6 mu         0.2   0.1 0.276 0.0440
 7 mu         0.2   0.2 0.288 0.0597
 8 mu         0.2   0.3 0.401 0.0510
 9 mu         0.2   0.4 0.484 0.0511
10 mu         0.2   0.5 0.572 0.0918
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.617        0.280 0.000142       4.13
 2 mu         0.2      0.800        0.803 0.0154         4.61
 3 mu         0.3      0.923        0.964 0.111          3.53
 4 mu         0.4      0.974        0.994 0.339          2.15
 5 mu         0.5      0.983        0.999 0.613          1.57
 6 mu         0.6      0.987        0.986 0.699          1.21
 7 mu         0.7      1.00         1     0.824          1.49
 8 mu         0.8      1.00         1     0.651          1.50
 9 mu         0.9      0.949        0.985 0.180          2.68
10 mu_1       0.1      0.721        0.622 0.000637       5.85
11 mu_1       0.2      0.880        0.937 0.0373         4.43
12 mu_1       0.3      0.957        0.978 0.186          2.57
13 mu_1       0.4      0.980        0.985 0.454          1.86
14 mu_1       0.5      0.983        0.995 0.704          1.43
15 mu_1       0.6      0.989        0.991 0.714          1.25
16 mu_1       0.7      1.00         1     0.805          1.53
17 mu_1       0.8      1.00         1     0.604          1.54
18 mu_1       0.9      0.946        0.986 0.160          2.85
19 mu_0       0.1      0.605        0.241 0.0000868      4.49
20 mu_0       0.2      0.781        0.745 0.00999        4.65
21 mu_0       0.3      0.909        0.980 0.0787         3.94
22 mu_0       0.4      0.970        0.984 0.263          2.56
23 mu_0       0.5      0.983        0.995 0.521          1.70
24 mu_0       0.6      0.984        0.991 0.676          1.31
25 mu_0       0.7      0.994        1     0.782          1.39
26 mu_0       0.8      1.01         1     0.722          1.66
27 mu_0       0.9      0.980        0.995 0.369          1.78
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1    475.      0.00000812  1.73e-15  47086.  
 2 mu         0.2    515.      0.00255     4.53e-10  50861.  
 3 mu         0.3    182.      0.0394      6.70e- 7  17734.  
 4 mu         0.4     32.8     0.213       5.85e- 5   3059.  
 5 mu         0.5      3.95    0.673       1.33e- 3    269.  
 6 mu         0.6      1.19    0.952       1.71e- 2     10.5 
 7 mu         0.7      1.72    1.04        4.59e- 2     56.8 
 8 mu         0.8      5.38    0.810       1.89e- 4    368.  
 9 mu         0.9     23.3     0.214       2.06e- 9   1915.  
10 mu_1       0.1    713.      0.0000504   1.73e-14  70629.  
11 mu_1       0.2    388.      0.00778     2.27e- 9  38146.  
12 mu_1       0.3     92.0     0.0922      2.23e- 6   8867.  
13 mu_1       0.4     13.1     0.370       1.46e- 4   1147.  
14 mu_1       0.5      1.93    0.886       2.66e- 3     80.8 
15 mu_1       0.6      1.16    0.976       2.84e- 2     10.9 
16 mu_1       0.7      2.03    0.991       1.31e- 2     81.1 
17 mu_1       0.8      6.44    0.733       3.55e- 5    460.  
18 mu_1       0.9     25.8     0.161       3.43e-10   2127.  
19 mu_0       0.1    448.      0.00000234  0         44470.  
20 mu_0       0.2    547.      0.000914    0         54040.  
21 mu_0       0.3    220.      0.0166      0         21534.  
22 mu_0       0.4     46.0     0.104       0          4333.  
23 mu_0       0.5      5.98    0.414       0           458.  
24 mu_0       0.6      1.23    0.831       0            22.3 
25 mu_0       0.7      0.984   0.874       0             2.91
26 mu_0       0.8      1.15    0.963       0             9.69
27 mu_0       0.9      1.51    0.346       0            28.0 
[1] "Total run time was 216.721 seconds"
