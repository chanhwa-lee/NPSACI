
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1284"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 8  3  2  6  6  6 11  3  7  8  8  7  7  8  5  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02478 0.32710 0.60466 1.00000 4.02311 
[1] "event indicator table: "

  0   1 
774 510 
[1] "treatment indicator table: "

  0   1 
447 837 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 664
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 620
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 11"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 440.618 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.429 0.0722
 2 mu         0.1   0.2 0.495 0.0996
 3 mu         0.1   0.3 0.637 0.122 
 4 mu         0.1   0.4 0.653 0.122 
 5 mu         0.1   0.5 0.673 0.124 
 6 mu         0.2   0.1 0.390 0.0465
 7 mu         0.2   0.2 0.440 0.0638
 8 mu         0.2   0.3 0.558 0.0819
 9 mu         0.2   0.4 0.579 0.0780
10 mu         0.2   0.5 0.604 0.0770
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      0.628        0.277 0.000000316     11.2 
 2 mu         0.2      0.802        0.745 0.000238         4.59
 3 mu         0.3      0.896        0.933 0.00715          3.13
 4 mu         0.4      0.949        0.976 0.0571           3.16
 5 mu         0.5      0.973        0.997 0.222            2.25
 6 mu         0.6      0.985        1     0.514            1.47
 7 mu         0.7      1.00         1.00  0.737            1.45
 8 mu         0.8      1.02         1.00  0.557            2.21
 9 mu         0.9      1.06         1     0.141            3.92
10 mu_1       0.1      0.782        0.627 0.00000174       7.31
11 mu_1       0.2      0.880        0.926 0.000662         3.00
12 mu_1       0.3      0.934        0.996 0.0136           3.50
13 mu_1       0.4      0.964        0.997 0.0855           2.92
14 mu_1       0.5      0.978        1     0.282            1.95
15 mu_1       0.6      0.988        1     0.573            1.34
16 mu_1       0.7      1.00         1     0.742            1.57
17 mu_1       0.8      1.03         1.00  0.520            2.39
18 mu_1       0.9      1.06         1     0.122            4.01
19 mu_0       0.1      0.611        0.234 0.000000158     11.6 
20 mu_0       0.2      0.783        0.690 0.000131         5.06
21 mu_0       0.3      0.880        0.914 0.00437          2.97
22 mu_0       0.4      0.938        0.971 0.0382           3.32
23 mu_0       0.5      0.968        1.00  0.161            2.56
24 mu_0       0.6      0.980        1     0.425            1.68
25 mu_0       0.7      0.991        1     0.647            1.22
26 mu_0       0.8      1.00         1     0.704            1.49
27 mu_0       0.9      1.01         1     0.315            3.16
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.849   0.0000126   3.80e-14     39.6 
 2 mu         0.2      1.67    0.00347     3.94e- 9     54.8 
 3 mu         0.3      1.69    0.0732      2.39e- 6     37.1 
 4 mu         0.4      1.66    0.311       1.48e- 4     16.5 
 5 mu         0.5      1.64    0.729       3.37e- 3     18.8 
 6 mu         0.6      1.43    0.958       3.65e- 2     10.9 
 7 mu         0.7      1.31    0.990       1.02e- 3      7.64
 8 mu         0.8      1.56    0.841       2.66e- 6     25.8 
 9 mu         0.9      1.94    0.195       6.50e-11     47.7 
10 mu_1       0.1      1.70    0.0000805   3.40e-13     71.9 
11 mu_1       0.2      1.85    0.0109      1.76e- 8     49.8 
12 mu_1       0.3      1.63    0.159       7.08e- 6     22.5 
13 mu_1       0.4      1.65    0.538       3.71e- 4     19.1 
14 mu_1       0.5      1.60    0.841       6.75e- 3     17.7 
15 mu_1       0.6      1.39    0.898       1.84e- 2     10.0 
16 mu_1       0.7      1.33    1.02        2.93e- 4      8.87
17 mu_1       0.8      1.62    0.682       6.65e- 7     28.8 
18 mu_1       0.9      1.95    0.148       1.44e-11     47.4 
19 mu_0       0.1      0.755   0.00000492  0            36.0 
20 mu_0       0.2      1.63    0.00162     0            56.1 
21 mu_0       0.3      1.71    0.0352      0            43.3 
22 mu_0       0.4      1.67    0.162       0            22.4 
23 mu_0       0.5      1.67    0.471       0            19.9 
24 mu_0       0.6      1.50    0.822       0            14.4 
25 mu_0       0.7      1.26    0.920       0             6.69
26 mu_0       0.8      1.33    0.972       0            13.6 
27 mu_0       0.9      1.78    0.290       0            50.2 
[1] "Total run time was 446.691 seconds"
