
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1284"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  5  5  5  4  7  6  9  6  8 10  5 10  5  6  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.05469 0.35167 0.63035 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
749 535 
[1] "treatment indicator table: "

  0   1 
477 807 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 655
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 5"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 629
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 71"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 172.057 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.471 0.123 
 2 mu         0.1   0.2 0.499 0.101 
 3 mu         0.1   0.3 0.666 0.105 
 4 mu         0.1   0.4 0.678 0.0936
 5 mu         0.1   0.5 0.677 0.0869
 6 mu         0.2   0.1 0.376 0.0763
 7 mu         0.2   0.2 0.425 0.0625
 8 mu         0.2   0.3 0.575 0.0663
 9 mu         0.2   0.4 0.604 0.0584
10 mu         0.2   0.5 0.608 0.0524
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.835        0.496  0.000620      4.36
 2 mu         0.2      0.975        0.934  0.0256        4.04
 3 mu         0.3      1.03         1      0.149         2.56
 4 mu         0.4      1.04         1.03   0.412         1.48
 5 mu         0.5      1.02         1.00   0.753         1.35
 6 mu         0.6      1.00         1      0.869         1.19
 7 mu         0.7      0.990        0.997  0.762         1.25
 8 mu         0.8      0.978        0.986  0.589         1.88
 9 mu         0.9      0.967        0.985  0.235         2.84
10 mu_1       0.1      0.951        0.866  0.00234       5.23
11 mu_1       0.2      1.02         1      0.0513        3.45
12 mu_1       0.3      1.04         1.01   0.219         1.81
13 mu_1       0.4      1.03         1.01   0.514         1.35
14 mu_1       0.5      1.01         1      0.829         1.33
15 mu_1       0.6      1.00         1      0.842         1.18
16 mu_1       0.7      0.987        0.999  0.750         1.33
17 mu_1       0.8      0.976        0.986  0.536         1.98
18 mu_1       0.9      0.965        0.985  0.205         2.90
19 mu_0       0.1      0.822        0.441  0.000429      4.70
20 mu_0       0.2      0.964        0.901  0.0192        4.19
21 mu_0       0.3      1.02         1      0.118         2.88
22 mu_0       0.4      1.04         1.03   0.343         1.66
23 mu_0       0.5      1.03         1.01   0.669         1.37
24 mu_0       0.6      1.01         1      0.857         1.26
25 mu_0       0.7      0.998        1      0.789         1.22
26 mu_0       0.8      0.986        1      0.711         1.49
27 mu_0       0.9      0.986        0.996  0.486         2.26
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.766    0.0000713  1.87e-16     35.8 
 2 mu         0.2      1.06     0.00573    8.71e-11     27.9 
 3 mu         0.3      1.18     0.0881     1.69e- 7     14.4 
 4 mu         0.4      1.19     0.479      3.42e- 5      7.75
 5 mu         0.5      1.13     0.811      1.98e- 3      6.88
 6 mu         0.6      1.11     1.03       3.23e- 2      4.96
 7 mu         0.7      1.25     1.11       5.52e- 3     11.1 
 8 mu         0.8      1.74     0.626      8.33e- 5     21.4 
 9 mu         0.9      3.51     0.0982     2.70e- 8    150.  
10 mu_1       0.1      1.18     0.000477   1.77e-15     39.8 
11 mu_1       0.2      1.13     0.0225     4.14e-10     16.8 
12 mu_1       0.3      1.17     0.192      5.35e- 7      7.61
13 mu_1       0.4      1.15     0.670      8.13e- 5      8.31
14 mu_1       0.5      1.11     0.889      3.76e- 3      5.90
15 mu_1       0.6      1.13     1.10       2.46e- 2      4.55
16 mu_1       0.7      1.31     1.07       1.21e- 3     13.1 
17 mu_1       0.8      1.84     0.485      1.60e- 5     22.5 
18 mu_1       0.9      3.69     0.0698     8.80e- 9    166.  
19 mu_0       0.1      0.720    0.0000105  0            35.3 
20 mu_0       0.2      1.04     0.00266    0            31.0 
21 mu_0       0.3      1.19     0.0502     0            18.3 
22 mu_0       0.4      1.22     0.293      0             8.27
23 mu_0       0.5      1.15     0.718      0             7.86
24 mu_0       0.6      1.08     0.983      0             5.58
25 mu_0       0.7      1.12     0.995      0             6.55
26 mu_0       0.8      1.34     0.954      0            18.9 
27 mu_0       0.9      1.92     0.206      0            31.3 
[1] "Total run time was 176.694 seconds"
