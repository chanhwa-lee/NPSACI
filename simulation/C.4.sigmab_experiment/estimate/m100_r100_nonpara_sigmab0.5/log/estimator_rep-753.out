
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1292"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 9  6  3  5  7  3  9  6 10  2  3  1  7 10 12  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0671  0.4278  0.6774  1.0000  5.0000 
[1] "event indicator table: "

  0   1 
802 490 
[1] "treatment indicator table: "

  0   1 
442 850 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 637
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 655
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 87.44 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.525 0.128 
 2 mu         0.1   0.2 0.557 0.111 
 3 mu         0.1   0.3 0.613 0.117 
 4 mu         0.1   0.4 0.638 0.126 
 5 mu         0.1   0.5 0.678 0.137 
 6 mu         0.2   0.1 0.426 0.0862
 7 mu         0.2   0.2 0.475 0.0691
 8 mu         0.2   0.3 0.510 0.0674
 9 mu         0.2   0.4 0.522 0.0693
10 mu         0.2   0.5 0.561 0.0808
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.976        0.715    0.0210     12.0 
 2 mu         0.2      1.00         0.990    0.201       4.82
 3 mu         0.3      1.01         1        0.389       2.45
 4 mu         0.4      0.998        1        0.701       1.56
 5 mu         0.5      0.996        1        0.792       1.21
 6 mu         0.6      1.00         1        0.847       1.18
 7 mu         0.7      1.00         1        0.884       1.14
 8 mu         0.8      1.00         1        0.737       1.24
 9 mu         0.9      0.998        1        0.587       1.47
10 mu_1       0.1      1.04         0.969    0.0578      7.56
11 mu_1       0.2      1.02         1        0.274       3.09
12 mu_1       0.3      1.01         1        0.486       1.98
13 mu_1       0.4      0.998        1        0.720       1.37
14 mu_1       0.5      0.998        1        0.803       1.21
15 mu_1       0.6      1.00         1        0.870       1.16
16 mu_1       0.7      1.00         1.00     0.857       1.16
17 mu_1       0.8      1.00         1        0.730       1.28
18 mu_1       0.9      0.997        1        0.575       1.51
19 mu_0       0.1      0.969        0.670    0.0169     12.4 
20 mu_0       0.2      0.995        0.969    0.171       5.25
21 mu_0       0.3      1.00         1        0.348       2.66
22 mu_0       0.4      0.998        1        0.621       1.69
23 mu_0       0.5      0.995        1        0.758       1.24
24 mu_0       0.6      0.999        1        0.802       1.21
25 mu_0       0.7      1.00         1        0.861       1.15
26 mu_0       0.8      1.00         1        0.768       1.18
27 mu_0       0.9      1.00         1        0.694       1.45
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      3.35    0.0000218   2.67e-15    210.  
 2 mu         0.2      2.07    0.00392     5.54e-10     80.8 
 3 mu         0.3      1.19    0.0488      6.27e- 7     18.7 
 4 mu         0.4      0.932   0.271       6.96e- 5      6.47
 5 mu         0.5      0.922   0.564       2.06e- 3      4.78
 6 mu         0.6      0.998   0.927       8.41e- 3      2.59
 7 mu         0.7      1.11    1.20        1.15e- 4      2.90
 8 mu         0.8      1.17    1.25        2.28e- 7      3.66
 9 mu         0.9      1.09    0.295       4.41e-12      5.74
10 mu_1       0.1      3.08    0.000140    2.41e-14    140.  
11 mu_1       0.2      1.49    0.0116      2.49e- 9     34.0 
12 mu_1       0.3      1.01    0.117       1.88e- 6      8.65
13 mu_1       0.4      0.912   0.497       1.64e- 4      6.47
14 mu_1       0.5      0.945   0.762       3.88e- 3      3.82
15 mu_1       0.6      1.03    1.11        1.56e- 3      2.62
16 mu_1       0.7      1.13    1.17        1.82e- 5      2.90
17 mu_1       0.8      1.18    1.19        3.17e- 8      3.89
18 mu_1       0.9      1.08    0.214       5.44e-13      6.38
19 mu_0       0.1      3.38    0.00000415  0           218.  
20 mu_0       0.2      2.21    0.00131     0            94.2 
21 mu_0       0.3      1.27    0.0249      0            24.9 
22 mu_0       0.4      0.946   0.0991      0             6.47
23 mu_0       0.5      0.900   0.352       0             5.74
24 mu_0       0.6      0.947   0.798       0             2.88
25 mu_0       0.7      1.04    0.962       0             2.90
26 mu_0       0.8      1.13    1.17        0             3.34
27 mu_0       0.9      1.18    0.665       0             5.08
[1] "Total run time was 90.748 seconds"
