
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1337"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  4  5  6  2  6 12  7  2  5  3 10  7 11  7  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02433 0.37656 0.63179 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
848 489 
[1] "treatment indicator table: "

  0   1 
452 885 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 683
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 57"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 654
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 27"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 68.953 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.315 0.129 
 2 mu         0.1   0.2 0.510 0.170 
 3 mu         0.1   0.3 0.511 0.178 
 4 mu         0.1   0.4 0.513 0.184 
 5 mu         0.1   0.5 0.584 0.222 
 6 mu         0.2   0.1 0.279 0.0983
 7 mu         0.2   0.2 0.466 0.132 
 8 mu         0.2   0.3 0.471 0.135 
 9 mu         0.2   0.4 0.477 0.139 
10 mu         0.2   0.5 0.543 0.170 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      0.637       0.0465 0.000000331     22.5 
 2 mu         0.2      0.875       0.361  0.000315        31.2 
 3 mu         0.3      0.994       0.697  0.0115          21.3 
 4 mu         0.4      1.02        0.935  0.101            9.97
 5 mu         0.5      1.00        1      0.311            3.76
 6 mu         0.6      0.995       0.998  0.600            1.65
 7 mu         0.7      0.994       1      0.668            1.29
 8 mu         0.8      0.981       1      0.425            1.51
 9 mu         0.9      0.941       0.970  0.0876           2.76
10 mu_1       0.1      0.825       0.145  0.00000194      40.9 
11 mu_1       0.2      0.937       0.567  0.000935        28.5 
12 mu_1       0.3      0.995       0.844  0.0231          13.2 
13 mu_1       0.4      1.01        0.975  0.156            5.06
14 mu_1       0.5      0.997       0.994  0.404            2.08
15 mu_1       0.6      0.995       0.999  0.685            1.36
16 mu_1       0.7      0.994       1      0.640            1.26
17 mu_1       0.8      0.979       1      0.382            1.61
18 mu_1       0.9      0.939       0.977  0.0722           2.83
19 mu_0       0.1      0.616       0.0349 0.000000152     20.4 
20 mu_0       0.2      0.859       0.291  0.000159        31.9 
21 mu_0       0.3      0.994       0.644  0.00649         24.8 
22 mu_0       0.4      1.03        0.892  0.0652          13.2 
23 mu_0       0.5      1.01        0.975  0.218            5.45
24 mu_0       0.6      0.993       0.993  0.473            2.18
25 mu_0       0.7      0.994       1      0.735            1.37
26 mu_0       0.8      0.988       1.00   0.578            1.16
27 mu_0       0.9      0.963       1      0.226            2.17
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       9.33   0.0000133   1.43e-15     477. 
 2 mu         0.2      19.7    0.00253     3.76e-10    1323. 
 3 mu         0.3      21.2    0.0313      3.32e- 7    1342. 
 4 mu         0.4      15.1    0.166       3.24e- 5     794. 
 5 mu         0.5       7.96   0.583       1.00e- 3     301. 
 6 mu         0.6       3.40   0.969       1.42e- 2      69.7
 7 mu         0.7       1.91   1.05        5.41e- 2      13.2
 8 mu         0.8       3.43   0.783       1.22e- 3     111. 
 9 mu         0.9      10.1    0.178       5.55e- 7     522. 
10 mu_1       0.1      18.2    0.0000810   1.43e-14    1193. 
11 mu_1       0.2      23.6    0.00808     1.88e- 9    1653. 
12 mu_1       0.3      18.9    0.0897      9.89e- 7    1118. 
13 mu_1       0.4      11.3    0.290       7.25e- 5     497. 
14 mu_1       0.5       5.48   0.766       1.79e- 3     150. 
15 mu_1       0.6       2.45   0.933       2.12e- 2      32.0
16 mu_1       0.7       1.83   1.10        2.18e- 2      17.9
17 mu_1       0.8       3.81   0.664       4.43e- 4     132. 
18 mu_1       0.9      10.6    0.107       1.54e- 7     551. 
19 mu_0       0.1       8.35   0.00000295  0            398. 
20 mu_0       0.2      18.7    0.000740    0           1240. 
21 mu_0       0.3      22.2    0.00934     0           1438. 
22 mu_0       0.4      17.7    0.0901      0            993. 
23 mu_0       0.5      10.4    0.376       0            451. 
24 mu_0       0.6       4.82   0.928       0            131. 
25 mu_0       0.7       2.09   0.973       0             20.8
26 mu_0       0.8       1.90   1.12        0             27.9
27 mu_0       0.9       5.17   0.235       0            261. 
[1] "Total run time was 70.789 seconds"
