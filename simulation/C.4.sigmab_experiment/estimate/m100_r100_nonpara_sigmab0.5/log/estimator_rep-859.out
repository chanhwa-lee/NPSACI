
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1307"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  1 10  3  8  9  9  2  5  5  9  5  8  8  8  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03953 0.31098 0.57952 1.00000 4.88622 
[1] "event indicator table: "

  0   1 
759 548 
[1] "treatment indicator table: "

  0   1 
472 835 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 642
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 10"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 665
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 105.568 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.415 0.105 
 2 mu         0.1   0.2 0.479 0.0940
 3 mu         0.1   0.3 0.567 0.103 
 4 mu         0.1   0.4 0.654 0.118 
 5 mu         0.1   0.5 0.694 0.140 
 6 mu         0.2   0.1 0.340 0.0616
 7 mu         0.2   0.2 0.408 0.0520
 8 mu         0.2   0.3 0.471 0.0641
 9 mu         0.2   0.4 0.570 0.0556
10 mu         0.2   0.5 0.594 0.0671
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.872        0.412   0.00471      7.61
 2 mu         0.2      0.935        0.793   0.102        3.13
 3 mu         0.3      0.963        0.931   0.309        1.75
 4 mu         0.4      0.975        0.963   0.540        1.31
 5 mu         0.5      0.983        0.988   0.780        1.25
 6 mu         0.6      0.990        1.00    0.846        1.14
 7 mu         0.7      1.01         1       0.906        1.18
 8 mu         0.8      1.04         1.01    0.774        1.50
 9 mu         0.9      1.07         1.04    0.488        2.35
10 mu_1       0.1      0.910        0.754   0.0171       4.62
11 mu_1       0.2      0.963        0.943   0.192        2.54
12 mu_1       0.3      0.972        0.962   0.392        1.49
13 mu_1       0.4      0.980        0.989   0.633        1.27
14 mu_1       0.5      0.986        0.990   0.811        1.24
15 mu_1       0.6      0.992        1.00    0.846        1.10
16 mu_1       0.7      1.01         0.998   0.898        1.23
17 mu_1       0.8      1.05         1.02    0.722        1.54
18 mu_1       0.9      1.07         1.04    0.448        2.47
19 mu_0       0.1      0.868        0.365   0.00334      8.17
20 mu_0       0.2      0.928        0.755   0.0794       3.48
21 mu_0       0.3      0.960        0.903   0.273        1.87
22 mu_0       0.4      0.971        0.959   0.478        1.35
23 mu_0       0.5      0.980        0.977   0.738        1.28
24 mu_0       0.6      0.986        0.989   0.825        1.19
25 mu_0       0.7      0.997        1       0.864        1.11
26 mu_0       0.8      1.03         1.00    0.873        1.35
27 mu_0       0.9      1.08         1.03    0.735        1.69
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.321   0.0000174   1.77e-15     12.2 
 2 mu         0.2      0.905   0.00273     3.28e-10     22.3 
 3 mu         0.3      1.24    0.0688      2.83e- 7     22.8 
 4 mu         0.4      1.20    0.327       3.23e- 5      9.66
 5 mu         0.5      1.04    0.813       1.19e- 3      3.30
 6 mu         0.6      0.964   0.953       2.12e- 2      2.15
 7 mu         0.7      1.01    1.05        4.77e- 3      2.09
 8 mu         0.8      1.23    0.670       2.12e- 5      7.08
 9 mu         0.9      1.93    0.105       1.17e- 9     30.5 
10 mu_1       0.1      0.733   0.0000965   1.68e-14     24.5 
11 mu_1       0.2      1.22    0.00954     1.55e- 9     27.8 
12 mu_1       0.3      1.30    0.134       8.91e- 7     19.0 
13 mu_1       0.4      1.14    0.518       7.62e- 5      7.10
14 mu_1       0.5      0.994   0.973       2.26e- 3      2.99
15 mu_1       0.6      0.959   1.00        3.34e- 2      1.94
16 mu_1       0.7      1.03    0.953       1.70e- 3      2.43
17 mu_1       0.8      1.29    0.502       6.64e- 6      8.38
18 mu_1       0.9      2.00    0.0727      3.24e-10     33.9 
19 mu_0       0.1      0.275   0.00000567  0            10.9 
20 mu_0       0.2      0.827   0.00140     0            20.9 
21 mu_0       0.3      1.21    0.0368      0            24.5 
22 mu_0       0.4      1.23    0.192       0            11.9 
23 mu_0       0.5      1.09    0.565       0             4.67
24 mu_0       0.6      0.973   1.01        0             2.93
25 mu_0       0.7      0.943   1.00        0             2.15
26 mu_0       0.8      0.976   0.949       0             3.04
27 mu_0       0.9      1.25    0.246       0            15.5 
[1] "Total run time was 107.679 seconds"
