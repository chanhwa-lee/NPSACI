
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1229"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 9  7  9  2  3  8  7  7  5 12  4  2  2  9  6  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03281 0.33872 0.61621 1.00000 4.68878 
[1] "event indicator table: "

  0   1 
750 479 
[1] "treatment indicator table: "

  0   1 
436 793 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 650
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 579
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 236.996 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.560 0.217
 2 mu         0.1   0.2 0.649 0.243
 3 mu         0.1   0.3 0.683 0.230
 4 mu         0.1   0.4 0.734 0.216
 5 mu         0.1   0.5 0.777 0.206
 6 mu         0.2   0.1 0.519 0.228
 7 mu         0.2   0.2 0.607 0.256
 8 mu         0.2   0.3 0.644 0.244
 9 mu         0.2   0.4 0.677 0.235
10 mu         0.2   0.5 0.727 0.225
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.816        0.750 0.000000102       9.19
 2 mu         0.2      0.991        0.989 0.000162         17.2 
 3 mu         0.3      1.08         0.997 0.00731          17.8 
 4 mu         0.4      1.09         1     0.0624           11.1 
 5 mu         0.5      1.06         1     0.214             4.79
 6 mu         0.6      1.03         1     0.406             2.24
 7 mu         0.7      1.00         1     0.620             1.53
 8 mu         0.8      0.983        1     0.269             2.35
 9 mu         0.9      0.954        0.964 0.0246            4.52
10 mu_1       0.1      0.967        0.969 0.000000609      15.3 
11 mu_1       0.2      1.09         1     0.000488         21.6 
12 mu_1       0.3      1.11         1     0.0147           15.2 
13 mu_1       0.4      1.08         1     0.105             7.33
14 mu_1       0.5      1.04         1     0.275             3.23
15 mu_1       0.6      1.02         1.00  0.465             1.78
16 mu_1       0.7      1.00         1     0.618             1.69
17 mu_1       0.8      0.981        0.992 0.231             2.63
18 mu_1       0.9      0.952        0.956 0.0198            4.89
19 mu_0       0.1      0.799        0.750 0.0000000451      9.44
20 mu_0       0.2      0.965        0.970 0.0000812        16.0 
21 mu_0       0.3      1.07         0.986 0.00416          18.9 
22 mu_0       0.4      1.10         1     0.0320           13.6 
23 mu_0       0.5      1.07         1     0.136             6.73
24 mu_0       0.6      1.04         1     0.317             2.99
25 mu_0       0.7      1.01         1.00  0.510             1.62
26 mu_0       0.8      0.990        1     0.421             1.42
27 mu_0       0.9      0.966        1     0.0680            1.79
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1    155.       0.0000692  3.11e-15   15232. 
 2 mu         0.2     87.9      0.00944    3.62e-10    8339. 
 3 mu         0.3     33.9      0.118      3.12e- 7    2879. 
 4 mu         0.4     12.7      0.590      3.56e- 5     704. 
 5 mu         0.5      6.85     1.20       1.32e- 3     197. 
 6 mu         0.6      4.78     1.07       1.92e- 2     197. 
 7 mu         0.7      4.25     0.915      1.65e- 3     162. 
 8 mu         0.8     12.4      0.711      3.75e- 6    1052. 
 9 mu         0.9     57.9      0.0836     8.14e-11    5470. 
10 mu_1       0.1    132.       0.000603   2.94e-14   12693. 
11 mu_1       0.2     40.1      0.0327     1.71e- 9    3475. 
12 mu_1       0.3     13.6      0.254      9.83e- 7     800. 
13 mu_1       0.4      7.15     0.927      8.41e- 5     147. 
14 mu_1       0.5      5.51     0.988      2.49e- 3     217. 
15 mu_1       0.6      4.27     0.897      2.72e- 2     180. 
16 mu_1       0.7      4.66     0.910      3.72e- 4     232. 
17 mu_1       0.8     15.1      0.550      7.39e- 7    1315. 
18 mu_1       0.9     64.2      0.0590     1.43e-11    6078. 
19 mu_0       0.1    158.       0.0000220  0          15514. 
20 mu_0       0.2     99.9      0.00443    0           9555. 
21 mu_0       0.3     42.6      0.0618     0           3770. 
22 mu_0       0.4     16.4      0.331      0           1076. 
23 mu_0       0.5      8.19     0.862      0            217. 
24 mu_0       0.6      5.54     1.06       0            221. 
25 mu_0       0.7      3.30     1.05       0            121. 
26 mu_0       0.8      1.55     0.759      0             29.6
27 mu_0       0.9      0.903    0.0892     0             11.6
[1] "Total run time was 242.602 seconds"
