
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1280"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 1  7  7  8  3  8  5 13  5  5  5  6  9  4  9  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0308  0.3451  0.6195  1.0000  6.0239 
[1] "event indicator table: "

  0   1 
749 531 
[1] "treatment indicator table: "

  0   1 
473 807 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 629
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 651
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 30"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 201.495 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.703 0.278
 2 mu         0.1   0.2 0.725 0.267
 3 mu         0.1   0.3 0.733 0.263
 4 mu         0.1   0.4 0.756 0.264
 5 mu         0.1   0.5 0.788 0.270
 6 mu         0.2   0.1 0.614 0.238
 7 mu         0.2   0.2 0.629 0.219
 8 mu         0.2   0.3 0.651 0.207
 9 mu         0.2   0.4 0.686 0.204
10 mu         0.2   0.5 0.739 0.202
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.46         0.148  0.000230     72.0 
 2 mu         0.2      1.21         0.515  0.0211       40.4 
 3 mu         0.3      1.04         0.809  0.177        15.1 
 4 mu         0.4      0.995        0.967  0.445         4.75
 5 mu         0.5      0.992        1      0.708         1.74
 6 mu         0.6      0.996        1      0.803         1.15
 7 mu         0.7      0.998        0.997  0.796         1.33
 8 mu         0.8      0.989        1      0.521         2.16
 9 mu         0.9      0.940        0.943  0.127         3.38
10 mu_1       0.1      1.35         0.413  0.000995     60.7 
11 mu_1       0.2      1.02         0.724  0.0472       18.0 
12 mu_1       0.3      0.975        0.926  0.275         5.36
13 mu_1       0.4      0.983        0.994  0.595         2.00
14 mu_1       0.5      0.993        1      0.756         1.21
15 mu_1       0.6      0.998        1      0.810         1.13
16 mu_1       0.7      0.998        1.00   0.747         1.39
17 mu_1       0.8      0.986        0.995  0.477         2.26
18 mu_1       0.9      0.934        0.935  0.111         3.60
19 mu_0       0.1      1.48         0.124  0.000145     73.2 
20 mu_0       0.2      1.25         0.455  0.0146       46.0 
21 mu_0       0.3      1.07         0.746  0.135        19.3 
22 mu_0       0.4      1.00         0.942  0.346         6.58
23 mu_0       0.5      0.991        0.999  0.601         2.29
24 mu_0       0.6      0.993        1.00   0.771         1.23
25 mu_0       0.7      0.998        1      0.815         1.17
26 mu_0       0.8      1.00         1      0.684         1.72
27 mu_0       0.9      0.996        0.998  0.276         3.01
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       9.89    0.0000393  1.22e-14    914.  
 2 mu         0.2       7.72    0.00479    1.26e- 9    633.  
 3 mu         0.3       4.62    0.0656     9.52e- 7    286.  
 4 mu         0.4       2.76    0.329      8.36e- 5     95.1 
 5 mu         0.5       1.76    0.755      1.98e- 3     23.0 
 6 mu         0.6       1.29    1.07       2.44e- 2      9.30
 7 mu         0.7       1.46    0.956      2.88e- 3     15.4 
 8 mu         0.8       2.84    0.491      1.12e- 5     66.0 
 9 mu         0.9       4.76    0.0856     5.48e-10    122.  
10 mu_1       0.1      10.3     0.000312   1.09e-13    914.  
11 mu_1       0.2       4.84    0.0162     5.64e- 9    317.  
12 mu_1       0.3       2.82    0.131      2.84e- 6     95.2 
13 mu_1       0.4       1.98    0.524      1.96e- 4     28.5 
14 mu_1       0.5       1.46    0.935      3.71e- 3     15.5 
15 mu_1       0.6       1.23    1.10       3.81e- 2      6.75
16 mu_1       0.7       1.59    0.876      8.66e- 4     19.6 
17 mu_1       0.8       3.09    0.396      2.95e- 6     73.9 
18 mu_1       0.9       4.81    0.0572     1.28e-10    122.  
19 mu_0       0.1       9.84    0.0000161  0           914.  
20 mu_0       0.2       8.45    0.00167    0           712.  
21 mu_0       0.3       5.39    0.0353     0           367.  
22 mu_0       0.4       3.28    0.183      0           143.  
23 mu_0       0.5       2.06    0.533      0            41.5 
24 mu_0       0.6       1.38    0.960      0            14.8 
25 mu_0       0.7       1.16    0.986      0             5.39
26 mu_0       0.8       1.80    0.768      0            34.8 
27 mu_0       0.9       4.34    0.220      0           129.  
[1] "Total run time was 206.099 seconds"
