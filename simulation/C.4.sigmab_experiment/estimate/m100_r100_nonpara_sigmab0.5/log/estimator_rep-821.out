
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1271"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 3  6  2  9  7  9  6  6  3 13  5  8  7  9  2  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04254 0.37513 0.63513 1.00000 4.59620 
[1] "event indicator table: "

  0   1 
756 515 
[1] "treatment indicator table: "

  0   1 
449 822 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 651
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 9"
[1] "     Cluster: 16"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 620
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 79.172 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.485 0.146 
 2 mu         0.1   0.2 0.509 0.139 
 3 mu         0.1   0.3 0.534 0.150 
 4 mu         0.1   0.4 0.721 0.212 
 5 mu         0.1   0.5 0.737 0.218 
 6 mu         0.2   0.1 0.419 0.0939
 7 mu         0.2   0.2 0.455 0.0914
 8 mu         0.2   0.3 0.493 0.105 
 9 mu         0.2   0.4 0.613 0.119 
10 mu         0.2   0.5 0.636 0.126 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.878        0.209  0.000272     18.5 
 2 mu         0.2      1.01         0.626  0.0177       16.3 
 3 mu         0.3      1.03         0.896  0.142         9.72
 4 mu         0.4      1.01         0.951  0.459         4.69
 5 mu         0.5      0.995        0.983  0.682         2.22
 6 mu         0.6      0.997        0.997  0.861         1.43
 7 mu         0.7      1.01         1      0.790         1.30
 8 mu         0.8      1.02         1.01   0.558         1.75
 9 mu         0.9      0.987        1      0.195         3.53
10 mu_1       0.1      1.09         0.481  0.00147      23.1 
11 mu_1       0.2      1.02         0.862  0.0480       10.3 
12 mu_1       0.3      1.00         0.950  0.260         5.48
13 mu_1       0.4      0.989        0.974  0.606         3.15
14 mu_1       0.5      0.990        0.990  0.778         1.79
15 mu_1       0.6      1.00         0.999  0.866         1.32
16 mu_1       0.7      1.01         1.00   0.756         1.37
17 mu_1       0.8      1.02         1.00   0.521         1.83
18 mu_1       0.9      0.984        1      0.171         3.78
19 mu_0       0.1      0.854        0.176  0.000139     18.0 
20 mu_0       0.2      1.01         0.562  0.0101       17.8 
21 mu_0       0.3      1.04         0.836  0.0917       12.0 
22 mu_0       0.4      1.02         0.937  0.338         6.56
23 mu_0       0.5      1.00         0.974  0.585         3.09
24 mu_0       0.6      0.994        0.991  0.761         1.59
25 mu_0       0.7      1.00         0.997  0.849         1.25
26 mu_0       0.8      1.01         1      0.708         1.44
27 mu_0       0.9      1.01         1      0.406         2.19
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       6.36   0.0000310   3.46e-16     519. 
 2 mu         0.2      31.5    0.00322     9.08e-11    2879. 
 3 mu         0.3      47.2    0.0384      1.34e- 7    4383. 
 4 mu         0.4      37.6    0.224       2.38e- 5    3459. 
 5 mu         0.5      18.5    0.671       1.32e- 3    1637. 
 6 mu         0.6       6.08   0.938       3.52e- 2     456. 
 7 mu         0.7       2.05   0.980       7.86e- 3      63.4
 8 mu         0.8       2.73   0.655       9.04e- 5      84.2
 9 mu         0.9       8.38   0.0680      3.14e- 8     555. 
10 mu_1       0.1      18.1    0.000168    0           1598. 
11 mu_1       0.2      47.7    0.0105      0           4430. 
12 mu_1       0.3      48.4    0.0942      0           4495. 
13 mu_1       0.4      29.3    0.373       0           2661. 
14 mu_1       0.5      11.9    0.852       0           1007. 
15 mu_1       0.6       3.68   0.951       0            234. 
16 mu_1       0.7       1.76   1.02        0             27.9
17 mu_1       0.8       3.05   0.551       0            105. 
18 mu_1       0.9       9.06   0.0510      0            616. 
19 mu_0       0.1       5.06   0.00000485  0            400. 
20 mu_0       0.2      27.4    0.000992    0           2492. 
21 mu_0       0.3      46.7    0.0165      0           4334. 
22 mu_0       0.4      43.1    0.103       0           3991. 
23 mu_0       0.5      25.2    0.387       0           2266. 
24 mu_0       0.6       9.67   0.802       0            788. 
25 mu_0       0.7       2.75   0.943       0            146. 
26 mu_0       0.8       1.46   0.710       0             17.7
27 mu_0       0.9       2.30   0.130       0             46.1
[1] "Total run time was 81.293 seconds"
