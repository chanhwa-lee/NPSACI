
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1286"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  4  5  8  3  8  6 10  6  7  7  5  5  8  5  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02233 0.32533 0.60974 1.00000 5.03119 
[1] "event indicator table: "

  0   1 
744 542 
[1] "treatment indicator table: "

  0   1 
475 811 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 669
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 70"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 84"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 617
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 158.571 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.429 0.108 
 2 mu         0.1   0.2 0.569 0.139 
 3 mu         0.1   0.3 0.694 0.160 
 4 mu         0.1   0.4 0.710 0.164 
 5 mu         0.1   0.5 0.731 0.163 
 6 mu         0.2   0.1 0.387 0.0603
 7 mu         0.2   0.2 0.502 0.0720
 8 mu         0.2   0.3 0.607 0.0805
 9 mu         0.2   0.4 0.631 0.0912
10 mu         0.2   0.5 0.657 0.0867
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.771        0.596 0.0000427     10.4 
 2 mu         0.2      0.821        0.795 0.00817        4.89
 3 mu         0.3      0.900        0.927 0.106          2.70
 4 mu         0.4      0.965        0.988 0.356          2.12
 5 mu         0.5      0.998        1     0.666          1.63
 6 mu         0.6      1.00         1     0.835          1.34
 7 mu         0.7      1.00         1.00  0.672          1.29
 8 mu         0.8      0.995        0.998 0.311          1.36
 9 mu         0.9      0.955        0.994 0.0334         1.55
10 mu_1       0.1      0.733        0.813 0.000206       2.79
11 mu_1       0.2      0.849        0.916 0.0201         3.16
12 mu_1       0.3      0.929        0.965 0.177          2.40
13 mu_1       0.4      0.981        1     0.476          2.01
14 mu_1       0.5      1.00         0.999 0.762          1.54
15 mu_1       0.6      1.00         1     0.801          1.23
16 mu_1       0.7      1.00         1     0.628          1.32
17 mu_1       0.8      0.993        1     0.272          1.39
18 mu_1       0.9      0.949        0.986 0.0270         1.57
19 mu_0       0.1      0.775        0.555 0.0000246     11.6 
20 mu_0       0.2      0.814        0.754 0.00519        5.95
21 mu_0       0.3      0.888        0.901 0.0747         3.05
22 mu_0       0.4      0.955        0.968 0.277          2.19
23 mu_0       0.5      0.994        1     0.569          1.82
24 mu_0       0.6      1.00         1     0.823          1.52
25 mu_0       0.7      1.00         1     0.738          1.24
26 mu_0       0.8      1.01         1.00  0.464          1.38
27 mu_0       0.9      1.00         1     0.0905         1.64
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.10     0.0000430  6.35e-19     49.9 
 2 mu         0.2      2.37     0.00577    6.66e-13     73.8 
 3 mu         0.3      2.53     0.0659     2.21e- 9     74.9 
 4 mu         0.4      1.92     0.310      6.98e- 7     44.3 
 5 mu         0.5      1.37     0.802      6.05e- 5     16.8 
 6 mu         0.6      1.24     1.07       2.32e- 3     13.5 
 7 mu         0.7      1.83     1.01       1.82e- 3     78.5 
 8 mu         0.8      3.32     0.725      8.12e- 6    225.  
 9 mu         0.9      3.41     0.0915     4.46e-10    208.  
10 mu_1       0.1      2.18     0.000264   6.35e-18     66.5 
11 mu_1       0.2      2.85     0.0182     3.33e-12     92.2 
12 mu_1       0.3      2.29     0.155      7.38e- 9     62.4 
13 mu_1       0.4      1.57     0.487      1.75e- 6     27.7 
14 mu_1       0.5      1.21     1.02       1.21e- 4      8.39
15 mu_1       0.6      1.26     1.11       3.87e- 3     19.2 
16 mu_1       0.7      1.99     1.10       6.51e- 4     95.3 
17 mu_1       0.8      3.47     0.623      2.54e- 6    239.  
18 mu_1       0.9      3.33     0.0652     1.24e-10    197.  
19 mu_0       0.1      0.977    0.0000112  0            48.5 
20 mu_0       0.2      2.25     0.00198    0            69.2 
21 mu_0       0.3      2.64     0.0302     0            80.2 
22 mu_0       0.4      2.15     0.167      0            55.4 
23 mu_0       0.5      1.54     0.513      0            25.2 
24 mu_0       0.6      1.22     0.996      0             7.29
25 mu_0       0.7      1.44     1.05       0            39.2 
26 mu_0       0.8      2.69     0.932      0           169.  
27 mu_0       0.9      4.12     0.159      0           313.  
[1] "Total run time was 160.871 seconds"
