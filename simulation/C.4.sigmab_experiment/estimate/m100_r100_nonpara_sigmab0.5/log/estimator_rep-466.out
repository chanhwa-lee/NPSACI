
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1301"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 2  6  6  6  4  6  7  6 11  7  5 10  6  6  6  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04685 0.33019 0.59133 0.96791 5.00000 
[1] "event indicator table: "

  0   1 
739 562 
[1] "treatment indicator table: "

  0   1 
502 799 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 651
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 5"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 76"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 650
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 50"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 285.836 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.275 0.106 
 2 mu         0.1   0.2 0.309 0.131 
 3 mu         0.1   0.3 0.321 0.164 
 4 mu         0.1   0.4 0.326 0.191 
 5 mu         0.1   0.5 0.334 0.202 
 6 mu         0.2   0.1 0.277 0.0611
 7 mu         0.2   0.2 0.320 0.0774
 8 mu         0.2   0.3 0.349 0.0996
 9 mu         0.2   0.4 0.364 0.120 
10 mu         0.2   0.5 0.378 0.128 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.23         0.578   0.00348     39.9 
 2 mu         0.2      1.19         0.950   0.0920      19.6 
 3 mu         0.3      1.08         1       0.386        6.54
 4 mu         0.4      1.03         1.01    0.624        2.12
 5 mu         0.5      1.01         1.01    0.724        1.28
 6 mu         0.6      0.995        1       0.812        1.15
 7 mu         0.7      0.983        0.982   0.766        1.38
 8 mu         0.8      0.971        0.969   0.498        1.73
 9 mu         0.9      0.918        0.959   0.106        2.51
10 mu_1       0.1      1.33         0.865   0.0125      31.2 
11 mu_1       0.2      1.12         1       0.176        8.81
12 mu_1       0.3      1.04         1.00    0.492        2.76
13 mu_1       0.4      1.01         1.01    0.646        1.46
14 mu_1       0.5      1.00         1.00    0.766        1.21
15 mu_1       0.6      0.990        0.995   0.821        1.20
16 mu_1       0.7      0.980        0.978   0.715        1.47
17 mu_1       0.8      0.968        0.960   0.452        1.75
18 mu_1       0.9      0.909        0.930   0.0900       2.67
19 mu_0       0.1      1.22         0.540   0.00248     40.8 
20 mu_0       0.2      1.21         0.952   0.0710      22.3 
21 mu_0       0.3      1.10         1       0.325        8.20
22 mu_0       0.4      1.04         1       0.595        2.70
23 mu_0       0.5      1.01         1.01    0.680        1.35
24 mu_0       0.6      1.00         1.01    0.783        1.17
25 mu_0       0.7      0.990        1       0.816        1.25
26 mu_0       0.8      0.982        0.988   0.682        1.66
27 mu_0       0.9      0.995        0.979   0.248        2.05
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.492    0.0000903  4.55e-13     20.7 
 2 mu         0.2      0.980    0.00748    3.46e- 8     22.4 
 3 mu         0.3      1.05     0.0797     1.99e- 5     13.5 
 4 mu         0.4      1.06     0.368      1.06e- 3      6.84
 5 mu         0.5      1.11     0.843      9.87e- 3      5.93
 6 mu         0.6      1.24     1.08       4.60e- 3      4.93
 7 mu         0.7      2.20     1.03       5.50e- 5     35.3 
 8 mu         0.8      7.98     0.448      8.33e- 8    285.  
 9 mu         0.9     33.0      0.0374     9.05e-13   1875.  
10 mu_1       0.1      0.994    0.000535   4.30e-12     31.0 
11 mu_1       0.2      1.17     0.0263     1.63e- 7     17.5 
12 mu_1       0.3      1.07     0.159      6.24e- 5     10.4 
13 mu_1       0.4      1.07     0.570      2.65e- 3      4.81
14 mu_1       0.5      1.12     0.927      1.97e- 2      6.24
15 mu_1       0.6      1.32     1.18       1.15e- 3      5.39
16 mu_1       0.7      2.62     0.968      1.18e- 5     48.0 
17 mu_1       0.8      9.41     0.313      1.56e- 8    356.  
18 mu_1       0.9     35.7      0.0247     1.51e-13   2083.  
19 mu_0       0.1      0.436    0.0000356  0            19.5 
20 mu_0       0.2      0.932    0.00212    0            23.8 
21 mu_0       0.3      1.04     0.0434     0            14.8 
22 mu_0       0.4      1.06     0.240      0             8.77
23 mu_0       0.5      1.09     0.652      0             5.62
24 mu_0       0.6      1.11     0.919      0             5.84
25 mu_0       0.7      1.22     0.928      0             6.54
26 mu_0       0.8      2.27     0.522      0            63.3 
27 mu_0       0.9      8.65     0.0552     0           469.  
[1] "Total run time was 296.462 seconds"
