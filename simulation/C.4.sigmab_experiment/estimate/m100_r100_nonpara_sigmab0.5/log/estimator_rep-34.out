
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1294"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  5  4  8  4  4  8  8  4  8  8  5  8  6  6  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04191 0.38652 0.63688 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
797 497 
[1] "treatment indicator table: "

  0   1 
467 827 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 617
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 677
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 85"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 172.724 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.424 0.0860
 2 mu         0.1   0.2 0.511 0.0915
 3 mu         0.1   0.3 0.579 0.118 
 4 mu         0.1   0.4 0.597 0.111 
 5 mu         0.1   0.5 0.615 0.110 
 6 mu         0.2   0.1 0.324 0.0439
 7 mu         0.2   0.2 0.423 0.0367
 8 mu         0.2   0.3 0.479 0.0661
 9 mu         0.2   0.4 0.515 0.0528
10 mu         0.2   0.5 0.532 0.0471
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.03         0.739  0.00104      18.9 
 2 mu         0.2      0.957        0.954  0.0543        2.83
 3 mu         0.3      0.988        0.974  0.327         2.32
 4 mu         0.4      1.00         1      0.596         1.90
 5 mu         0.5      1.00         1      0.766         1.31
 6 mu         0.6      1.00         1      0.836         1.16
 7 mu         0.7      1.00         1      0.820         1.16
 8 mu         0.8      1.00         1      0.730         1.28
 9 mu         0.9      1.00         1      0.286         1.68
10 mu_1       0.1      0.885        0.825  0.00427       2.90
11 mu_1       0.2      0.966        0.959  0.115         2.95
12 mu_1       0.3      0.996        1      0.482         2.24
13 mu_1       0.4      1.00         1      0.680         1.72
14 mu_1       0.5      1.00         1      0.793         1.21
15 mu_1       0.6      1.00         1.00   0.827         1.17
16 mu_1       0.7      1.00         1      0.820         1.18
17 mu_1       0.8      0.999        1.00   0.685         1.29
18 mu_1       0.9      1.00         1      0.264         1.76
19 mu_0       0.1      1.04         0.708  0.000685     20.9 
20 mu_0       0.2      0.954        0.966  0.0391        3.30
21 mu_0       0.3      0.984        0.969  0.260         2.49
22 mu_0       0.4      0.998        1      0.508         2.02
23 mu_0       0.5      1.00         1      0.696         1.42
24 mu_0       0.6      1.00         1      0.809         1.19
25 mu_0       0.7      1.01         1      0.800         1.16
26 mu_0       0.8      1.00         1      0.782         1.24
27 mu_0       0.9      0.995        1      0.482         1.45
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.09    0.0000370   4.09e-15     35.0 
 2 mu         0.2      2.00    0.00391     3.33e-10     66.2 
 3 mu         0.3      1.91    0.0521      2.19e- 7     59.1 
 4 mu         0.4      1.38    0.265       2.18e- 5     25.2 
 5 mu         0.5      1.06    0.632       7.76e- 4      5.74
 6 mu         0.6      0.983   0.926       1.44e- 2      2.89
 7 mu         0.7      1.03    0.934       1.30e- 3      3.19
 8 mu         0.8      1.16    0.983       6.64e- 6      7.18
 9 mu         0.9      1.42    0.117       5.77e-10     15.0 
10 mu_1       0.1      1.61    0.000202    0            45.0 
11 mu_1       0.2      2.17    0.0102      0            77.9 
12 mu_1       0.3      1.65    0.118       0            46.3 
13 mu_1       0.4      1.16    0.451       0            14.8 
14 mu_1       0.5      0.983   0.775       0             2.98
15 mu_1       0.6      0.985   0.929       0             3.13
16 mu_1       0.7      1.06    0.968       0             3.25
17 mu_1       0.8      1.20    0.851       0             8.23
18 mu_1       0.9      1.45    0.0894      0            16.7 
19 mu_0       0.1      1.03    0.00000469  0            38.9 
20 mu_0       0.2      1.95    0.00151     0            63.3 
21 mu_0       0.3      2.02    0.0219      0            64.5 
22 mu_0       0.4      1.53    0.122       0            32.1 
23 mu_0       0.5      1.14    0.424       0             8.78
24 mu_0       0.6      0.980   0.769       0             3.63
25 mu_0       0.7      0.958   0.801       0             3.35
26 mu_0       0.8      1.00    0.867       0             3.38
27 mu_0       0.9      1.17    0.152       0            10.9 
[1] "Total run time was 177.049 seconds"
