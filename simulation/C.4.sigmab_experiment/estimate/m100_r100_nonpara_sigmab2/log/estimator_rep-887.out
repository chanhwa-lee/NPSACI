
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1133"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 8  7  6 10  8  8 10  7  6  6  4  4  3  5  4  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.01708 0.27980 0.54041 0.87865 4.39576 
[1] "event indicator table: "

  0   1 
635 498 
[1] "treatment indicator table: "

  0   1 
515 618 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 602
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 47"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 94"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 531
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 149.027 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.398 0.0238
 2 mu         0.1   0.2 0.464 0.0264
 3 mu         0.1   0.3 0.521 0.0304
 4 mu         0.1   0.4 0.582 0.0319
 5 mu         0.1   0.5 0.626 0.0357
 6 mu         0.2   0.1 0.344 0.0199
 7 mu         0.2   0.2 0.419 0.0289
 8 mu         0.2   0.3 0.485 0.0319
 9 mu         0.2   0.4 0.534 0.0321
10 mu         0.2   0.5 0.580 0.0338
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.987        1         0.437      1.43
 2 mu         0.2      0.988        1         0.660      1.46
 3 mu         0.3      0.982        1         0.680      1.35
 4 mu         0.4      0.990        1         0.655      1.40
 5 mu         0.5      0.998        1         0.642      1.48
 6 mu         0.6      1.00         1         0.574      1.39
 7 mu         0.7      1.00         1         0.577      1.32
 8 mu         0.8      0.999        1         0.614      1.32
 9 mu         0.9      0.995        1         0.621      1.43
10 mu_1       0.1      0.999        1         0.558      1.46
11 mu_1       0.2      0.983        0.994     0.620      1.47
12 mu_1       0.3      0.982        0.998     0.707      1.36
13 mu_1       0.4      0.994        1         0.646      1.46
14 mu_1       0.5      1.00         1         0.580      1.46
15 mu_1       0.6      1.00         1         0.557      1.39
16 mu_1       0.7      1.00         1         0.593      1.30
17 mu_1       0.8      0.999        1         0.596      1.34
18 mu_1       0.9      0.996        1         0.603      1.43
19 mu_0       0.1      0.985        1         0.396      1.43
20 mu_0       0.2      0.990        1         0.660      1.46
21 mu_0       0.3      0.982        1.00      0.662      1.38
22 mu_0       0.4      0.988        1         0.662      1.36
23 mu_0       0.5      0.995        1         0.676      1.49
24 mu_0       0.6      0.998        1         0.600      1.39
25 mu_0       0.7      1.00         1         0.539      1.41
26 mu_0       0.8      1.00         1         0.510      1.31
27 mu_0       0.9      0.989        1         0.445      1.49
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.16     0.00250    1.39e-19      7.53
 2 mu         0.2      1.12     0.119      1.45e-13      7.46
 3 mu         0.3      1.10     0.251      4.84e-10     13.1 
 4 mu         0.4      1.07     0.335      1.53e- 7     10.5 
 5 mu         0.5      1.07     0.208      1.32e- 5     10.2 
 6 mu         0.6      1.06     0.211      2.05e- 5      8.55
 7 mu         0.7      1.03     0.217      3.66e- 7     11.1 
 8 mu         0.8      0.999    0.293      1.25e- 9      6.48
 9 mu         0.9      1.04     0.0368     7.64e-14      7.26
10 mu_1       0.1      0.946    0.0000465  0             8.27
11 mu_1       0.2      1.01     0.00606    0            11.2 
12 mu_1       0.3      1.04     0.0711     0            13.1 
13 mu_1       0.4      1.06     0.158      0            11.7 
14 mu_1       0.5      1.08     0.152      0             9.02
15 mu_1       0.6      1.07     0.201      0             9.80
16 mu_1       0.7      1.03     0.248      0            10.9 
17 mu_1       0.8      1.01     0.260      0             6.97
18 mu_1       0.9      1.05     0.0217     0             7.06
19 mu_0       0.1      1.19     0.000814   0             7.53
20 mu_0       0.2      1.15     0.0624     0             6.67
21 mu_0       0.3      1.13     0.267      0            13.1 
22 mu_0       0.4      1.08     0.238      0             9.93
23 mu_0       0.5      1.06     0.215      0            11.3 
24 mu_0       0.6      1.05     0.151      0             8.54
25 mu_0       0.7      1.01     0.0443     0            11.5 
26 mu_0       0.8      0.964    0.00446    0             9.89
27 mu_0       0.9      0.906    0.0000748  0             9.08
[1] "Total run time was 152.954 seconds"
