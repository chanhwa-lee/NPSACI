
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1285"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  2  6  6  9  3 10  8  8  8  3  6  4  8  8  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.01098 0.25250 0.54858 0.93521 5.00000 
[1] "event indicator table: "

  0   1 
736 549 
[1] "treatment indicator table: "

  0   1 
557 728 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 640
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 645
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 49"
[1] "     Cluster: 53"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 136.82 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.453 0.0329
 2 mu         0.1   0.2 0.533 0.0390
 3 mu         0.1   0.3 0.567 0.0384
 4 mu         0.1   0.4 0.592 0.0433
 5 mu         0.1   0.5 0.636 0.0488
 6 mu         0.2   0.1 0.407 0.0402
 7 mu         0.2   0.2 0.465 0.0474
 8 mu         0.2   0.3 0.510 0.0468
 9 mu         0.2   0.4 0.537 0.0576
10 mu         0.2   0.5 0.574 0.0585
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.973        0.959     0.537      1.47
 2 mu         0.2      0.987        0.997     0.472      1.60
 3 mu         0.3      0.995        0.999     0.552      1.42
 4 mu         0.4      1.01         1.00      0.519      1.35
 5 mu         0.5      1.02         1         0.413      1.48
 6 mu         0.6      1.02         1.01      0.569      1.45
 7 mu         0.7      1.02         1.01      0.656      1.43
 8 mu         0.8      1.01         1         0.724      1.44
 9 mu         0.9      1.00         1         0.684      1.34
10 mu_1       0.1      0.992        0.989     0.481      1.59
11 mu_1       0.2      0.996        1         0.469      1.65
12 mu_1       0.3      1.00         0.997     0.606      1.40
13 mu_1       0.4      1.02         1         0.447      1.44
14 mu_1       0.5      1.02         1.00      0.420      1.51
15 mu_1       0.6      1.02         1.01      0.624      1.41
16 mu_1       0.7      1.01         1.01      0.659      1.46
17 mu_1       0.8      1.00         1         0.733      1.45
18 mu_1       0.9      1.00         1         0.669      1.35
19 mu_0       0.1      0.970        0.958     0.510      1.49
20 mu_0       0.2      0.985        0.989     0.473      1.58
21 mu_0       0.3      0.992        1         0.529      1.49
22 mu_0       0.4      1.00         1         0.567      1.37
23 mu_0       0.5      1.01         1         0.405      1.46
24 mu_0       0.6      1.02         1         0.485      1.51
25 mu_0       0.7      1.02         1.01      0.648      1.39
26 mu_0       0.8      1.01         1.00      0.666      1.51
27 mu_0       0.9      1.00         1         0.641      1.52
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.58  0.0000477     4.20e-20     17.6 
 2 mu         0.2      1.23  0.00665       4.40e-14     18.2 
 3 mu         0.3      1.04  0.0173        1.46e-10     14.2 
 4 mu         0.4      0.802 0.0326        4.61e- 8      7.84
 5 mu         0.5      0.639 0.0266        4.00e- 6      5.73
 6 mu         0.6      0.609 0.0645        1.37e- 7      5.71
 7 mu         0.7      0.692 0.0929        4.33e-10      4.78
 8 mu         0.8      0.911 0.229         1.30e-13      9.80
 9 mu         0.9      1.22  0.622         1.24e-19      8.07
10 mu_1       0.1      1.25  0.000000339   0            13.6 
11 mu_1       0.2      1.09  0.0000603     0            20.2 
12 mu_1       0.3      0.928 0.00185       0            10.5 
13 mu_1       0.4      0.718 0.00731       0             6.53
14 mu_1       0.5      0.623 0.0253        0             6.30
15 mu_1       0.6      0.630 0.0563        0             5.23
16 mu_1       0.7      0.728 0.0915        0             5.26
17 mu_1       0.8      0.949 0.251         0            10.3 
18 mu_1       0.9      1.25  0.569         0             7.55
19 mu_0       0.1      1.61  0.00000855    0            18.0 
20 mu_0       0.2      1.26  0.00244       0            17.6 
21 mu_0       0.3      1.09  0.0167        0            15.7 
22 mu_0       0.4      0.857 0.0126        0             8.71
23 mu_0       0.5      0.655 0.00968       0             6.10
24 mu_0       0.6      0.577 0.0131        0             6.42
25 mu_0       0.7      0.608 0.00355       0             4.96
26 mu_0       0.8      0.759 0.0000811     0             7.74
27 mu_0       0.9      1.01  0.0000000760  0            12.7 
[1] "Total run time was 140.578 seconds"
