
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1275"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  9  2  8  5  7  5  3 12  8  6  5  7  6  8  5 
[1] "observed time summary: "
    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. 
0.000000 0.008499 0.246368 0.542171 0.926829 4.000000 
[1] "event indicator table: "

  0   1 
735 540 
[1] "treatment indicator table: "

  0   1 
603 672 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 600
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 48"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 675
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 145.932 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.407 0.0356
 2 mu         0.1   0.2 0.488 0.0314
 3 mu         0.1   0.3 0.576 0.0434
 4 mu         0.1   0.4 0.625 0.0439
 5 mu         0.1   0.5 0.644 0.0432
 6 mu         0.2   0.1 0.288 0.0342
 7 mu         0.2   0.2 0.364 0.0351
 8 mu         0.2   0.3 0.438 0.0428
 9 mu         0.2   0.4 0.488 0.0452
10 mu         0.2   0.5 0.546 0.0562
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.955        0.964     0.563      1.36
 2 mu         0.2      0.978        0.996     0.568      1.27
 3 mu         0.3      1.00         1         0.675      1.39
 4 mu         0.4      1.02         1         0.611      1.47
 5 mu         0.5      1.02         1         0.533      1.45
 6 mu         0.6      1.02         1         0.465      1.43
 7 mu         0.7      1.02         1         0.616      1.46
 8 mu         0.8      1.02         1         0.697      1.62
 9 mu         0.9      1.02         1         0.730      1.47
10 mu_1       0.1      0.969        1         0.514      1.39
11 mu_1       0.2      0.996        1         0.618      1.36
12 mu_1       0.3      1.01         1         0.673      1.45
13 mu_1       0.4      1.02         1         0.569      1.47
14 mu_1       0.5      1.01         1         0.512      1.47
15 mu_1       0.6      1.02         1         0.472      1.41
16 mu_1       0.7      1.03         1         0.621      1.50
17 mu_1       0.8      1.02         1         0.693      1.63
18 mu_1       0.9      1.01         1         0.742      1.48
19 mu_0       0.1      0.953        0.959     0.565      1.37
20 mu_0       0.2      0.974        0.999     0.556      1.29
21 mu_0       0.3      1.00         1         0.676      1.36
22 mu_0       0.4      1.02         1         0.640      1.46
23 mu_0       0.5      1.02         1         0.554      1.44
24 mu_0       0.6      1.01         1         0.454      1.46
25 mu_0       0.7      1.02         1         0.537      1.46
26 mu_0       0.8      1.03         1         0.649      1.57
27 mu_0       0.9      1.02         1         0.623      1.65
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value  median_value min_value max_value
   <fct>    <dbl>      <dbl>         <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.963 0.00223        5.77e-19      6.62
 2 mu         0.2      0.887 0.0778         3.02e-13      5.69
 3 mu         0.3      0.837 0.0164         6.70e-10      8.83
 4 mu         0.4      0.788 0.0238         1.59e- 7      7.96
 5 mu         0.5      0.766 0.0296         6.19e- 6      5.25
 6 mu         0.6      0.761 0.0336         7.13e- 8      8.05
 7 mu         0.7      0.753 0.0496         2.26e-10      8.75
 8 mu         0.8      0.786 0.213          6.80e-14      9.96
 9 mu         0.9      0.995 0.161          6.49e-20      5.73
10 mu_1       0.1      0.840 0.0000000440   0             7.79
11 mu_1       0.2      0.835 0.0000245      0             7.37
12 mu_1       0.3      0.816 0.00111        0             9.81
13 mu_1       0.4      0.788 0.00389        0             6.64
14 mu_1       0.5      0.774 0.0105         0             6.10
15 mu_1       0.6      0.761 0.0204         0             8.95
16 mu_1       0.7      0.757 0.0694         0             8.33
17 mu_1       0.8      0.808 0.213          0             9.96
18 mu_1       0.9      1.03  0.110          0             6.05
19 mu_0       0.1      0.976 0.000905       0             6.86
20 mu_0       0.2      0.900 0.0479         0             5.99
21 mu_0       0.3      0.846 0.0168         0             8.41
22 mu_0       0.4      0.787 0.00829        0             8.85
23 mu_0       0.5      0.759 0.00514        0             5.66
24 mu_0       0.6      0.759 0.00172        0             6.71
25 mu_0       0.7      0.745 0.0000992      0             9.72
26 mu_0       0.8      0.698 0.00000164     0             9.96
27 mu_0       0.9      0.700 0.00000000285  0             8.20
[1] "Total run time was 149.74 seconds"
