
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1307"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 7  5  6  4  8  7  5  6  5  2  7  5  7  5  8 13 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.01866 0.28185 0.54727 0.96303 4.96933 
[1] "event indicator table: "

  0   1 
752 555 
[1] "treatment indicator table: "

  0   1 
559 748 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 666
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 641
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 156.775 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.380 0.0224
 2 mu         0.1   0.2 0.472 0.0291
 3 mu         0.1   0.3 0.543 0.0350
 4 mu         0.1   0.4 0.592 0.0389
 5 mu         0.1   0.5 0.609 0.0406
 6 mu         0.2   0.1 0.338 0.0276
 7 mu         0.2   0.2 0.431 0.0367
 8 mu         0.2   0.3 0.510 0.0331
 9 mu         0.2   0.4 0.553 0.0336
10 mu         0.2   0.5 0.569 0.0358
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.03         1.01      0.456      1.49
 2 mu         0.2      1.02         1.00      0.602      1.47
 3 mu         0.3      1.00         1         0.492      1.47
 4 mu         0.4      0.997        1         0.642      1.41
 5 mu         0.5      0.996        1         0.667      1.36
 6 mu         0.6      0.996        1         0.663      1.30
 7 mu         0.7      0.996        1         0.586      1.35
 8 mu         0.8      0.996        0.994     0.690      1.32
 9 mu         0.9      1.00         1         0.699      1.33
10 mu_1       0.1      1.03         1         0.481      1.61
11 mu_1       0.2      1.01         1         0.499      1.51
12 mu_1       0.3      0.997        1         0.501      1.51
13 mu_1       0.4      0.996        1         0.688      1.36
14 mu_1       0.5      0.996        1         0.639      1.37
15 mu_1       0.6      0.996        1         0.686      1.29
16 mu_1       0.7      0.996        1         0.573      1.36
17 mu_1       0.8      0.996        1.00      0.722      1.30
18 mu_1       0.9      1.00         1         0.684      1.33
19 mu_0       0.1      1.03         1.02      0.426      1.49
20 mu_0       0.2      1.02         1.00      0.580      1.45
21 mu_0       0.3      1.00         1         0.488      1.45
22 mu_0       0.4      0.997        1         0.593      1.45
23 mu_0       0.5      0.996        1         0.680      1.36
24 mu_0       0.6      0.996        1         0.629      1.34
25 mu_0       0.7      0.996        0.997     0.618      1.32
26 mu_0       0.8      0.994        1         0.561      1.39
27 mu_0       0.9      0.995        0.987     0.689      1.38
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.03   0.0000399    7.38e-20      6.44
 2 mu         0.2      0.886  0.0117       7.74e-14      4.79
 3 mu         0.3      0.747  0.0578       2.57e-10      4.72
 4 mu         0.4      0.712  0.0807       8.12e- 8      5.31
 5 mu         0.5      0.811  0.0916       7.04e- 6      5.46
 6 mu         0.6      0.941  0.0867       2.06e- 7      5.72
 7 mu         0.7      1.01   0.192        6.90e-10      7.61
 8 mu         0.8      1.07   0.296        2.08e-13      6.90
 9 mu         0.9      1.10   0.106        1.98e-19      6.33
10 mu_1       0.1      0.893  0.000000468  0             6.48
11 mu_1       0.2      0.762  0.000168     0             4.57
12 mu_1       0.3      0.684  0.00503      0             5.72
13 mu_1       0.4      0.717  0.0368       0             5.80
14 mu_1       0.5      0.845  0.0813       0             5.46
15 mu_1       0.6      0.961  0.0868       0             6.17
16 mu_1       0.7      1.03   0.206        0             7.61
17 mu_1       0.8      1.08   0.241        0             7.01
18 mu_1       0.9      1.11   0.0689       0             6.21
19 mu_0       0.1      1.04   0.0000102    0             6.44
20 mu_0       0.2      0.917  0.00655      0             4.99
21 mu_0       0.3      0.774  0.0453       0             4.29
22 mu_0       0.4      0.709  0.0851       0             5.44
23 mu_0       0.5      0.776  0.0697       0             5.46
24 mu_0       0.6      0.912  0.0709       0             5.80
25 mu_0       0.7      0.983  0.0176       0             7.61
26 mu_0       0.8      1.00   0.000957     0             6.83
27 mu_0       0.9      1.00   0.00000485   0             8.06
[1] "Total run time was 160.593 seconds"
