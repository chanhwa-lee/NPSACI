
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1305"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 7  4  6  5  1  5 13  8  4  6  1  7 12  7  7  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.01532 0.23896 0.53987 0.88386 5.00000 
[1] "event indicator table: "

  0   1 
740 565 
[1] "treatment indicator table: "

  0   1 
632 673 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 632
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 673
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 70"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 145.849 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.418 0.0355
 2 mu         0.1   0.2 0.507 0.0370
 3 mu         0.1   0.3 0.583 0.0321
 4 mu         0.1   0.4 0.647 0.0328
 5 mu         0.1   0.5 0.673 0.0337
 6 mu         0.2   0.1 0.398 0.0423
 7 mu         0.2   0.2 0.485 0.0420
 8 mu         0.2   0.3 0.543 0.0371
 9 mu         0.2   0.4 0.577 0.0386
10 mu         0.2   0.5 0.599 0.0374
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.00         1         0.565      1.44
 2 mu         0.2      0.973        1         0.571      1.45
 3 mu         0.3      0.967        0.997     0.577      1.45
 4 mu         0.4      0.995        1         0.602      1.62
 5 mu         0.5      1.03         1.01      0.565      1.68
 6 mu         0.6      1.04         1.00      0.568      1.76
 7 mu         0.7      1.04         1.02      0.675      1.69
 8 mu         0.8      1.03         1.01      0.652      1.45
 9 mu         0.9      1.03         1         0.668      1.43
10 mu_1       0.1      0.992        1         0.549      1.55
11 mu_1       0.2      0.956        0.970     0.556      1.38
12 mu_1       0.3      0.973        0.977     0.573      1.59
13 mu_1       0.4      1.01         1         0.567      1.72
14 mu_1       0.5      1.03         1.01      0.563      1.66
15 mu_1       0.6      1.04         1.00      0.575      1.78
16 mu_1       0.7      1.04         1.01      0.664      1.66
17 mu_1       0.8      1.03         1.00      0.661      1.42
18 mu_1       0.9      1.02         1         0.668      1.46
19 mu_0       0.1      1.01         1         0.567      1.43
20 mu_0       0.2      0.977        1         0.568      1.47
21 mu_0       0.3      0.965        0.993     0.579      1.42
22 mu_0       0.4      0.987        0.998     0.594      1.56
23 mu_0       0.5      1.02         1         0.567      1.70
24 mu_0       0.6      1.04         1         0.559      1.73
25 mu_0       0.7      1.04         1.01      0.579      1.77
26 mu_0       0.8      1.03         1.01      0.618      1.57
27 mu_0       0.9      1.04         1.01      0.641      1.45
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.803     2.27e- 3  7.06e-20      5.50
 2 mu         0.2      0.951     8.34e- 2  7.40e-14      8.83
 3 mu         0.3      1.02      4.33e- 2  2.46e-10     10.3 
 4 mu         0.4      0.895     5.08e- 2  7.76e- 8      7.54
 5 mu         0.5      0.782     4.39e- 2  6.73e- 6      6.51
 6 mu         0.6      0.822     3.01e- 2  8.76e- 8      6.91
 7 mu         0.7      0.910     8.66e- 2  2.78e-10      6.94
 8 mu         0.8      0.879     2.23e- 1  8.35e-14      6.84
 9 mu         0.9      0.955     1.48e- 1  7.97e-20      5.39
10 mu_1       0.1      0.807     1.19e- 7  0             8.45
11 mu_1       0.2      1.04      6.25e- 5  0            11.6 
12 mu_1       0.3      1.02      3.92e- 3  0             9.77
13 mu_1       0.4      0.856     1.78e- 2  0             6.58
14 mu_1       0.5      0.786     2.85e- 2  0             7.44
15 mu_1       0.6      0.851     3.79e- 2  0             6.58
16 mu_1       0.7      0.914     7.75e- 2  0             7.44
17 mu_1       0.8      0.869     2.41e- 1  0             6.41
18 mu_1       0.9      0.987     1.06e- 1  0             5.45
19 mu_0       0.1      0.803     9.28e- 4  0             5.75
20 mu_0       0.2      0.927     4.45e- 2  0             8.13
21 mu_0       0.3      1.02      2.28e- 2  0            10.9 
22 mu_0       0.4      0.922     3.74e- 2  0             8.38
23 mu_0       0.5      0.778     2.11e- 2  0             6.10
24 mu_0       0.6      0.778     6.64e- 3  0             7.41
25 mu_0       0.7      0.900     5.59e- 4  0             7.72
26 mu_0       0.8      0.919     4.29e- 6  0             8.55
27 mu_0       0.9      0.669     7.46e-10  0             6.47
[1] "Total run time was 149.7 seconds"
