
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1270"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  7  6  2  7  4  6 11  6  6  8  7  2 11  7  4 
[1] "observed time summary: "
    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. 
0.000000 0.007886 0.270168 0.548524 0.882806 5.000000 
[1] "event indicator table: "

  0   1 
769 501 
[1] "treatment indicator table: "

  0   1 
510 760 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 653
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 617
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 148.229 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.364 0.0276
 2 mu         0.1   0.2 0.428 0.0318
 3 mu         0.1   0.3 0.489 0.0365
 4 mu         0.1   0.4 0.532 0.0383
 5 mu         0.1   0.5 0.599 0.0420
 6 mu         0.2   0.1 0.309 0.0280
 7 mu         0.2   0.2 0.360 0.0295
 8 mu         0.2   0.3 0.428 0.0331
 9 mu         0.2   0.4 0.475 0.0326
10 mu         0.2   0.5 0.541 0.0329
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.989        1         0.621      1.35
 2 mu         0.2      0.994        1         0.595      1.45
 3 mu         0.3      0.989        1         0.660      1.33
 4 mu         0.4      0.980        0.997     0.676      1.30
 5 mu         0.5      0.981        1         0.675      1.27
 6 mu         0.6      0.990        1         0.625      1.49
 7 mu         0.7      1.00         1         0.649      1.46
 8 mu         0.8      1.01         1         0.724      1.36
 9 mu         0.9      1.01         1         0.689      1.41
10 mu_1       0.1      0.988        1         0.502      1.52
11 mu_1       0.2      0.994        1         0.606      1.38
12 mu_1       0.3      0.984        0.996     0.648      1.34
13 mu_1       0.4      0.977        0.998     0.682      1.36
14 mu_1       0.5      0.983        0.999     0.643      1.33
15 mu_1       0.6      0.994        1         0.627      1.53
16 mu_1       0.7      1.00         1         0.659      1.43
17 mu_1       0.8      1.01         1         0.735      1.35
18 mu_1       0.9      1.01         1         0.691      1.41
19 mu_0       0.1      0.989        1         0.627      1.36
20 mu_0       0.2      0.994        1         0.592      1.47
21 mu_0       0.3      0.991        1         0.649      1.34
22 mu_0       0.4      0.982        1         0.655      1.31
23 mu_0       0.5      0.979        0.995     0.683      1.34
24 mu_0       0.6      0.986        1         0.622      1.45
25 mu_0       0.7      0.994        1         0.624      1.53
26 mu_0       0.8      1.00         1         0.682      1.36
27 mu_0       0.9      1.01         1         0.666      1.48
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value  median_value min_value max_value
   <fct>    <dbl>      <dbl>         <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.02  0.0000321      4.98e-20      5.47
 2 mu         0.2      0.787 0.00253        5.23e-14      6.20
 3 mu         0.3      0.648 0.0151         1.74e-10      6.26
 4 mu         0.4      0.681 0.0310         5.48e- 8      6.17
 5 mu         0.5      0.785 0.0407         4.75e- 6      6.32
 6 mu         0.6      0.840 0.0190         6.15e- 8      7.40
 7 mu         0.7      0.853 0.0531         1.95e-10      6.25
 8 mu         0.8      0.902 0.132          5.87e-14      6.08
 9 mu         0.9      1.02  0.511          5.60e-20      6.21
10 mu_1       0.1      0.852 0.0000000272   0             7.43
11 mu_1       0.2      0.619 0.0000155      0             7.17
12 mu_1       0.3      0.589 0.000819       0             6.44
13 mu_1       0.4      0.697 0.00427        0             6.42
14 mu_1       0.5      0.808 0.0148         0             7.02
15 mu_1       0.6      0.849 0.0154         0             7.54
16 mu_1       0.7      0.862 0.0700         0             6.14
17 mu_1       0.8      0.920 0.149          0             6.33
18 mu_1       0.9      1.04  0.432          0             6.21
19 mu_0       0.1      1.04  0.00000173     0             5.27
20 mu_0       0.2      0.828 0.000929       0             6.11
21 mu_0       0.3      0.673 0.0140         0             6.56
22 mu_0       0.4      0.669 0.00833        0             6.33
23 mu_0       0.5      0.762 0.0132         0             6.57
24 mu_0       0.6      0.825 0.00631        0             7.29
25 mu_0       0.7      0.832 0.000432       0             6.98
26 mu_0       0.8      0.829 0.0000102      0             6.80
27 mu_0       0.9      0.841 0.00000000715  0             7.41
[1] "Total run time was 152.082 seconds"
