
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1309"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 2  6  9  3  7  5  3  6  9  8 10  6  6  6  7  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.01538 0.31855 0.56363 0.95572 7.00000 
[1] "event indicator table: "

  0   1 
780 529 
[1] "treatment indicator table: "

  0   1 
559 750 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 622
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 687
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 149.32 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.401 0.0347
 2 mu         0.1   0.2 0.473 0.0415
 3 mu         0.1   0.3 0.511 0.0416
 4 mu         0.1   0.4 0.575 0.0365
 5 mu         0.1   0.5 0.581 0.0364
 6 mu         0.2   0.1 0.357 0.0364
 7 mu         0.2   0.2 0.423 0.0423
 8 mu         0.2   0.3 0.460 0.0382
 9 mu         0.2   0.4 0.532 0.0367
10 mu         0.2   0.5 0.553 0.0325
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.00         0.998     0.716      1.39
 2 mu         0.2      0.983        0.990     0.618      1.36
 3 mu         0.3      0.976        1         0.620      1.23
 4 mu         0.4      0.981        0.997     0.579      1.43
 5 mu         0.5      0.985        0.986     0.619      1.59
 6 mu         0.6      0.984        1         0.551      1.41
 7 mu         0.7      0.986        0.982     0.670      1.46
 8 mu         0.8      0.995        0.984     0.604      1.44
 9 mu         0.9      1.00         1         0.534      1.51
10 mu_1       0.1      0.994        1         0.581      1.45
11 mu_1       0.2      0.974        1         0.619      1.31
12 mu_1       0.3      0.973        1         0.576      1.24
13 mu_1       0.4      0.980        0.979     0.577      1.55
14 mu_1       0.5      0.984        0.985     0.578      1.57
15 mu_1       0.6      0.984        0.999     0.559      1.39
16 mu_1       0.7      0.988        0.976     0.646      1.48
17 mu_1       0.8      0.996        0.992     0.604      1.46
18 mu_1       0.9      1.00         1         0.538      1.50
19 mu_0       0.1      1.00         1         0.722      1.39
20 mu_0       0.2      0.986        1         0.618      1.37
21 mu_0       0.3      0.977        0.992     0.625      1.24
22 mu_0       0.4      0.981        1         0.580      1.35
23 mu_0       0.5      0.986        0.996     0.630      1.61
24 mu_0       0.6      0.985        0.992     0.539      1.46
25 mu_0       0.7      0.984        1.00      0.569      1.40
26 mu_0       0.8      0.990        0.994     0.604      1.50
27 mu_0       0.9      0.995        0.976     0.501      1.57
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.06      6.33e- 4  4.59e-19      7.69
 2 mu         0.2      0.893     5.44e- 2  2.41e-13      6.33
 3 mu         0.3      0.881     1.83e- 2  5.33e-10      8.70
 4 mu         0.4      0.874     1.36e- 2  1.26e- 7      7.85
 5 mu         0.5      0.789     8.86e- 3  6.36e- 6      7.01
 6 mu         0.6      0.674     2.11e- 2  7.33e- 8      6.27
 7 mu         0.7      0.599     3.72e- 2  2.32e-10      5.34
 8 mu         0.8      0.633     1.16e- 1  6.99e-14      4.62
 9 mu         0.9      0.961     5.55e- 1  6.67e-20      7.06
10 mu_1       0.1      0.882     6.56e- 9  0             8.22
11 mu_1       0.2      0.818     5.89e- 6  0             7.26
12 mu_1       0.3      0.871     1.64e- 4  0             9.67
13 mu_1       0.4      0.859     1.76e- 3  0             7.86
14 mu_1       0.5      0.768     4.50e- 3  0             6.36
15 mu_1       0.6      0.664     1.14e- 2  0             5.97
16 mu_1       0.7      0.602     3.78e- 2  0             5.44
17 mu_1       0.8      0.653     1.44e- 1  0             4.57
18 mu_1       0.9      0.998     5.45e- 1  0             7.35
19 mu_0       0.1      1.07      3.18e- 4  0             7.69
20 mu_0       0.2      0.912     1.65e- 2  0             6.66
21 mu_0       0.3      0.886     1.81e- 2  0             8.29
22 mu_0       0.4      0.884     8.80e- 3  0             8.72
23 mu_0       0.5      0.810     1.60e- 3  0             7.71
24 mu_0       0.6      0.689     9.03e- 4  0             6.72
25 mu_0       0.7      0.592     8.00e- 5  0             5.47
26 mu_0       0.8      0.553     5.91e- 7  0             6.60
27 mu_0       0.9      0.634     3.72e-10  0             6.26
[1] "Total run time was 153.303 seconds"
