
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1255"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  4  5 12  5  8 11  3  5  4  5 10  7  5  7  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02765 0.32017 0.57641 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
767 488 
[1] "treatment indicator table: "

  0   1 
522 733 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 630
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 625
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 50"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 147.727 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.402 0.0427
 2 mu         0.1   0.2 0.497 0.0416
 3 mu         0.1   0.3 0.590 0.0432
 4 mu         0.1   0.4 0.633 0.0440
 5 mu         0.1   0.5 0.649 0.0421
 6 mu         0.2   0.1 0.366 0.0461
 7 mu         0.2   0.2 0.450 0.0519
 8 mu         0.2   0.3 0.550 0.0392
 9 mu         0.2   0.4 0.577 0.0405
10 mu         0.2   0.5 0.604 0.0369
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.989        0.998     0.540      1.40
 2 mu         0.2      0.998        1         0.539      1.42
 3 mu         0.3      1.00         1         0.654      1.43
 4 mu         0.4      0.990        0.991     0.651      1.39
 5 mu         0.5      0.977        0.986     0.677      1.33
 6 mu         0.6      0.978        0.974     0.684      1.33
 7 mu         0.7      0.989        0.998     0.658      1.41
 8 mu         0.8      1.00         1.00      0.586      1.28
 9 mu         0.9      1.01         1         0.570      1.29
10 mu_1       0.1      0.991        0.982     0.505      1.52
11 mu_1       0.2      0.999        1         0.592      1.46
12 mu_1       0.3      0.995        1         0.613      1.40
13 mu_1       0.4      0.982        0.979     0.677      1.39
14 mu_1       0.5      0.975        0.993     0.667      1.32
15 mu_1       0.6      0.981        0.969     0.691      1.33
16 mu_1       0.7      0.994        1         0.638      1.42
17 mu_1       0.8      1.00         1         0.580      1.29
18 mu_1       0.9      1.01         1         0.572      1.29
19 mu_0       0.1      0.988        1.00      0.540      1.40
20 mu_0       0.2      0.997        1         0.524      1.43
21 mu_0       0.3      1.00         1         0.644      1.45
22 mu_0       0.4      0.995        0.998     0.633      1.39
23 mu_0       0.5      0.980        0.980     0.686      1.35
24 mu_0       0.6      0.973        0.981     0.674      1.32
25 mu_0       0.7      0.979        0.971     0.661      1.37
26 mu_0       0.8      0.991        1         0.610      1.43
27 mu_0       0.9      1.00         1         0.533      1.36
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.915   0.000164    6.42e-20      6.01
 2 mu         0.2      0.806   0.0114      6.73e-14      7.24
 3 mu         0.3      0.884   0.0489      2.24e-10      6.72
 4 mu         0.4      1.01    0.0998      7.06e- 8      7.21
 5 mu         0.5      1.06    0.0594      6.12e- 6      7.23
 6 mu         0.6      1.12    0.101       3.78e- 7      5.61
 7 mu         0.7      1.18    0.154       1.60e- 9      7.26
 8 mu         0.8      1.04    0.165       7.21e-13      6.48
 9 mu         0.9      0.911   0.456       1.38e-18      6.14
10 mu_1       0.1      0.660   0.00000439  0             9.02
11 mu_1       0.2      0.780   0.000870    0             7.62
12 mu_1       0.3      0.942   0.0113      0             7.29
13 mu_1       0.4      1.04    0.0316      0             8.11
14 mu_1       0.5      1.07    0.0615      0             6.51
15 mu_1       0.6      1.15    0.139       0             6.43
16 mu_1       0.7      1.18    0.190       0             7.13
17 mu_1       0.8      1.01    0.176       0             6.20
18 mu_1       0.9      0.921   0.333       0             6.10
19 mu_0       0.1      0.943   0.0000527   0             6.18
20 mu_0       0.2      0.813   0.00355     0             7.15
21 mu_0       0.3      0.859   0.0301      0             6.78
22 mu_0       0.4      0.983   0.0977      0             6.90
23 mu_0       0.5      1.04    0.0561      0             7.95
24 mu_0       0.6      1.07    0.0267      0             5.52
25 mu_0       0.7      1.18    0.00416     0             7.56
26 mu_0       0.8      1.14    0.000365    0             7.63
27 mu_0       0.9      0.823   0.00000471  0             6.81
[1] "Total run time was 151.61 seconds"
