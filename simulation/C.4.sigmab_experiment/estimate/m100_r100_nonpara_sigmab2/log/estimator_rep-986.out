
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1324"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  6  3  5  4  9  7  4  5  8  8  9  4  4 10  9 
[1] "observed time summary: "
    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. 
0.000000 0.005824 0.243219 0.557558 0.923744 5.000000 
[1] "event indicator table: "

  0   1 
740 584 
[1] "treatment indicator table: "

  0   1 
594 730 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 653
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 671
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 63"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 149.07 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.488 0.0309
 2 mu         0.1   0.2 0.569 0.0305
 3 mu         0.1   0.3 0.637 0.0346
 4 mu         0.1   0.4 0.691 0.0330
 5 mu         0.1   0.5 0.695 0.0352
 6 mu         0.2   0.1 0.411 0.0322
 7 mu         0.2   0.2 0.477 0.0362
 8 mu         0.2   0.3 0.538 0.0375
 9 mu         0.2   0.4 0.594 0.0401
10 mu         0.2   0.5 0.605 0.0415
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.979        1         0.496      1.31
 2 mu         0.2      0.999        1         0.592      1.43
 3 mu         0.3      1.02         1         0.613      1.42
 4 mu         0.4      1.03         1         0.713      1.44
 5 mu         0.5      1.02         1         0.713      1.62
 6 mu         0.6      0.992        1         0.594      1.49
 7 mu         0.7      0.972        0.977     0.547      1.30
 8 mu         0.8      0.977        1         0.650      1.31
 9 mu         0.9      0.997        1         0.700      1.27
10 mu_1       0.1      0.980        1         0.435      1.38
11 mu_1       0.2      1.01         1         0.587      1.49
12 mu_1       0.3      1.03         1         0.631      1.43
13 mu_1       0.4      1.03         1         0.728      1.55
14 mu_1       0.5      1.01         1         0.692      1.63
15 mu_1       0.6      0.985        0.990     0.565      1.43
16 mu_1       0.7      0.970        0.980     0.558      1.31
17 mu_1       0.8      0.979        1         0.657      1.32
18 mu_1       0.9      0.999        1         0.711      1.26
19 mu_0       0.1      0.979        1         0.503      1.31
20 mu_0       0.2      0.995        1         0.562      1.41
21 mu_0       0.3      1.02         1         0.605      1.42
22 mu_0       0.4      1.03         1         0.695      1.41
23 mu_0       0.5      1.02         1         0.726      1.62
24 mu_0       0.6      1.00         1         0.639      1.58
25 mu_0       0.7      0.977        0.990     0.522      1.34
26 mu_0       0.8      0.971        0.983     0.540      1.34
27 mu_0       0.9      0.987        0.999     0.604      1.35
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value  median_value min_value max_value
   <fct>    <dbl>      <dbl>         <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.960 0.00197        6.27e-20      6.36
 2 mu         0.2      0.835 0.0440         6.57e-14      6.55
 3 mu         0.3      0.820 0.0269         2.19e-10      6.76
 4 mu         0.4      0.870 0.0212         6.89e- 8      8.04
 5 mu         0.5      0.869 0.0210         5.52e- 6      9.67
 6 mu         0.6      0.812 0.0346         6.37e- 8      7.25
 7 mu         0.7      0.807 0.0958         2.02e-10      7.95
 8 mu         0.8      0.976 0.130          6.07e-14      6.05
 9 mu         0.9      1.26  0.0983         5.79e-20      5.93
10 mu_1       0.1      0.821 0.00000000467  0             8.48
11 mu_1       0.2      0.758 0.00000239     0             7.01
12 mu_1       0.3      0.809 0.0000934      0             6.34
13 mu_1       0.4      0.877 0.00277        0             9.52
14 mu_1       0.5      0.862 0.00927        0             9.16
15 mu_1       0.6      0.811 0.0329         0             6.51
16 mu_1       0.7      0.834 0.106          0             8.21
17 mu_1       0.8      1.02  0.162          0             6.43
18 mu_1       0.9      1.28  0.0640         0             5.93
19 mu_0       0.1      0.975 0.000670       0             6.12
20 mu_0       0.2      0.854 0.0196         0             6.55
21 mu_0       0.3      0.824 0.0188         0             6.97
22 mu_0       0.4      0.865 0.0104         0             7.05
23 mu_0       0.5      0.877 0.0109         0            10.2 
24 mu_0       0.6      0.813 0.0108         0             8.37
25 mu_0       0.7      0.746 0.00397        0             7.37
26 mu_0       0.8      0.800 0.0000849      0             8.25
27 mu_0       0.9      1.15  0.0000000959   0             8.40
[1] "Total run time was 152.772 seconds"
