
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1281"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 7  4  6  4  4 15  5  5  3  7  8  5  4  5  8 10 
[1] "observed time summary: "
    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. 
0.000000 0.006411 0.283169 0.571935 0.925078 5.000000 
[1] "event indicator table: "

  0   1 
758 523 
[1] "treatment indicator table: "

  0   1 
531 750 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 638
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 53"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 65"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 643
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 175.453 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.405 0.0299
 2 mu         0.1   0.2 0.506 0.0359
 3 mu         0.1   0.3 0.561 0.0415
 4 mu         0.1   0.4 0.623 0.0468
 5 mu         0.1   0.5 0.669 0.0359
 6 mu         0.2   0.1 0.405 0.0429
 7 mu         0.2   0.2 0.489 0.0427
 8 mu         0.2   0.3 0.543 0.0428
 9 mu         0.2   0.4 0.606 0.0392
10 mu         0.2   0.5 0.653 0.0383
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.991        1         0.601      1.54
 2 mu         0.2      1.01         1         0.556      1.67
 3 mu         0.3      1.01         1         0.579      1.64
 4 mu         0.4      1.00         1         0.703      1.47
 5 mu         0.5      0.994        1         0.681      1.47
 6 mu         0.6      0.996        1         0.701      1.44
 7 mu         0.7      1.01         1         0.601      1.46
 8 mu         0.8      1.02         1.00      0.674      1.37
 9 mu         0.9      1.01         1.01      0.693      1.34
10 mu_1       0.1      1.02         1         0.510      1.65
11 mu_1       0.2      1.02         1         0.547      1.64
12 mu_1       0.3      1.01         1         0.624      1.63
13 mu_1       0.4      0.998        0.999     0.675      1.51
14 mu_1       0.5      0.995        1         0.677      1.42
15 mu_1       0.6      1.00         1         0.653      1.46
16 mu_1       0.7      1.01         1         0.603      1.44
17 mu_1       0.8      1.02         1.01      0.687      1.37
18 mu_1       0.9      1.01         1.01      0.677      1.33
19 mu_0       0.1      0.989        0.999     0.603      1.55
20 mu_0       0.2      1.01         1         0.558      1.68
21 mu_0       0.3      1.02         1         0.559      1.64
22 mu_0       0.4      1.00         1         0.644      1.50
23 mu_0       0.5      0.992        1         0.675      1.51
24 mu_0       0.6      0.990        1         0.698      1.41
25 mu_0       0.7      1.00         1         0.595      1.50
26 mu_0       0.8      1.02         1         0.621      1.49
27 mu_0       0.9      1.02         1         0.649      1.44
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.920  0.000437     7.06e-20      6.68
 2 mu         0.2      0.657  0.0228       7.40e-14      5.89
 3 mu         0.3      0.669  0.0801       2.46e-10      6.13
 4 mu         0.4      0.845  0.112        7.76e- 8      6.80
 5 mu         0.5      1.01   0.0326       6.73e- 6      5.52
 6 mu         0.6      1.04   0.0486       2.97e- 7      6.76
 7 mu         0.7      0.936  0.102        1.26e- 9      5.74
 8 mu         0.8      0.818  0.212        5.67e-13      4.46
 9 mu         0.9      0.919  0.256        1.08e-18      5.16
10 mu_1       0.1      0.540  0.000000405  0             6.75
11 mu_1       0.2      0.553  0.0000518    0             5.96
12 mu_1       0.3      0.717  0.000885     0             6.81
13 mu_1       0.4      0.932  0.00663      0             7.16
14 mu_1       0.5      1.06   0.0113       0             5.95
15 mu_1       0.6      1.04   0.0481       0             7.12
16 mu_1       0.7      0.911  0.133        0             5.27
17 mu_1       0.8      0.805  0.210        0             4.41
18 mu_1       0.9      0.934  0.162        0             5.35
19 mu_0       0.1      0.962  0.000123     0             6.80
20 mu_0       0.2      0.683  0.0102       0             6.06
21 mu_0       0.3      0.648  0.0481       0             5.84
22 mu_0       0.4      0.787  0.0769       0             6.56
23 mu_0       0.5      0.957  0.0340       0             6.32
24 mu_0       0.6      1.04   0.0121       0             6.23
25 mu_0       0.7      0.993  0.0153       0             7.05
26 mu_0       0.8      0.870  0.00207      0             5.54
27 mu_0       0.9      0.787  0.0000214    0             5.25
[1] "Total run time was 179.562 seconds"
