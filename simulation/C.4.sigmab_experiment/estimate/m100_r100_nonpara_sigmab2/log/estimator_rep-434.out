
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1361"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  3  1  8  7  4  4 10 10  2  7  7  4  7  9 12 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.01776 0.30868 0.60120 1.00000 6.00000 
[1] "event indicator table: "

  0   1 
774 587 
[1] "treatment indicator table: "

  0   1 
579 782 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 700
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 43"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 83"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 661
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 7"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 150.397 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.410 0.0355
 2 mu         0.1   0.2 0.491 0.0299
 3 mu         0.1   0.3 0.529 0.0301
 4 mu         0.1   0.4 0.599 0.0332
 5 mu         0.1   0.5 0.636 0.0408
 6 mu         0.2   0.1 0.375 0.0364
 7 mu         0.2   0.2 0.441 0.0294
 8 mu         0.2   0.3 0.487 0.0304
 9 mu         0.2   0.4 0.552 0.0360
10 mu         0.2   0.5 0.585 0.0402
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.989        0.990     0.524      1.41
 2 mu         0.2      0.999        1         0.577      1.65
 3 mu         0.3      0.998        1         0.529      1.50
 4 mu         0.4      1.00         1         0.551      1.52
 5 mu         0.5      1.01         1         0.585      1.49
 6 mu         0.6      1.01         1         0.448      1.42
 7 mu         0.7      1.01         1         0.502      1.39
 8 mu         0.8      1.01         1         0.630      1.46
 9 mu         0.9      1.00         1.00      0.529      1.44
10 mu_1       0.1      0.996        0.984     0.556      1.84
11 mu_1       0.2      0.999        0.996     0.565      1.56
12 mu_1       0.3      0.995        1         0.508      1.51
13 mu_1       0.4      1.00         1         0.582      1.52
14 mu_1       0.5      1.01         1         0.550      1.47
15 mu_1       0.6      1.01         1         0.428      1.43
16 mu_1       0.7      1.01         1         0.539      1.38
17 mu_1       0.8      1.01         1         0.601      1.46
18 mu_1       0.9      1.00         1.01      0.536      1.45
19 mu_0       0.1      0.988        0.996     0.517      1.42
20 mu_0       0.2      0.999        0.985     0.574      1.67
21 mu_0       0.3      0.999        0.998     0.537      1.50
22 mu_0       0.4      0.999        1         0.531      1.51
23 mu_0       0.5      1.01         1         0.608      1.51
24 mu_0       0.6      1.01         1         0.476      1.42
25 mu_0       0.7      1.01         1         0.416      1.44
26 mu_0       0.8      1.01         1         0.658      1.43
27 mu_0       0.9      1.01         1         0.460      1.62
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.21      4.10e- 3  4.12e-20      7.46
 2 mu         0.2      1.31      1.26e- 1  4.32e-14      6.87
 3 mu         0.3      1.16      7.14e- 2  1.44e-10     10.9 
 4 mu         0.4      0.900     2.20e- 2  4.53e- 8      9.62
 5 mu         0.5      0.738     2.32e- 2  3.93e- 6      8.90
 6 mu         0.6      0.730     2.06e- 2  4.69e- 7      7.41
 7 mu         0.7      0.784     1.27e- 2  2.64e- 9      9.59
 8 mu         0.8      0.835     6.57e- 2  1.79e-12      9.54
 9 mu         0.9      0.952     6.19e- 2  6.82e-18      6.63
10 mu_1       0.1      1.26      9.60e-10  0             7.94
11 mu_1       0.2      1.24      3.88e- 6  0             8.54
12 mu_1       0.3      1.03      3.02e- 4  0            12.1 
13 mu_1       0.4      0.789     2.66e- 3  0             8.76
14 mu_1       0.5      0.700     9.36e- 3  0             8.43
15 mu_1       0.6      0.732     8.23e- 3  0             8.49
16 mu_1       0.7      0.787     9.92e- 3  0             9.42
17 mu_1       0.8      0.838     7.91e- 2  0             9.68
18 mu_1       0.9      0.963     3.31e- 2  0             6.38
19 mu_0       0.1      1.20      1.85e- 3  0             7.60
20 mu_0       0.2      1.32      1.11e- 1  0             6.78
21 mu_0       0.3      1.22      6.83e- 2  0            10.4 
22 mu_0       0.4      0.974     2.48e- 2  0            10.7 
23 mu_0       0.5      0.776     1.51e- 2  0             9.37
24 mu_0       0.6      0.728     1.15e- 2  0             6.49
25 mu_0       0.7      0.778     1.62e- 3  0             9.99
26 mu_0       0.8      0.826     2.41e- 5  0             8.94
27 mu_0       0.9      0.859     1.82e- 8  0            10.3 
[1] "Total run time was 154.221 seconds"
