
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1315"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  4  7  6  3  3  7  8  7  6 11  4  5 12  6  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.01343 0.29061 0.55520 0.92712 5.00000 
[1] "event indicator table: "

  0   1 
767 548 
[1] "treatment indicator table: "

  0   1 
544 771 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 658
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 657
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 139.609 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.427 0.0394
 2 mu         0.1   0.2 0.523 0.0469
 3 mu         0.1   0.3 0.576 0.0541
 4 mu         0.1   0.4 0.593 0.0538
 5 mu         0.1   0.5 0.638 0.0558
 6 mu         0.2   0.1 0.358 0.0431
 7 mu         0.2   0.2 0.411 0.0491
 8 mu         0.2   0.3 0.484 0.0500
 9 mu         0.2   0.4 0.519 0.0530
10 mu         0.2   0.5 0.532 0.0581
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.988        0.987     0.570      1.83
 2 mu         0.2      0.999        0.989     0.567      1.53
 3 mu         0.3      1.00         1         0.681      1.56
 4 mu         0.4      0.990        1         0.651      1.49
 5 mu         0.5      0.968        1.00      0.550      1.38
 6 mu         0.6      0.960        0.993     0.362      1.39
 7 mu         0.7      0.982        0.995     0.433      1.37
 8 mu         0.8      1.01         1         0.577      1.49
 9 mu         0.9      1.00         1         0.667      1.50
10 mu_1       0.1      0.994        0.984     0.503      1.80
11 mu_1       0.2      1.00         0.993     0.609      1.63
12 mu_1       0.3      0.997        1         0.650      1.55
13 mu_1       0.4      0.982        1         0.607      1.44
14 mu_1       0.5      0.963        0.979     0.472      1.41
15 mu_1       0.6      0.964        1         0.353      1.37
16 mu_1       0.7      0.988        0.990     0.444      1.42
17 mu_1       0.8      1.01         1         0.599      1.49
18 mu_1       0.9      1.00         1         0.667      1.51
19 mu_0       0.1      0.987        0.998     0.578      1.83
20 mu_0       0.2      0.998        0.986     0.556      1.51
21 mu_0       0.3      1.00         1         0.676      1.57
22 mu_0       0.4      0.995        1         0.659      1.52
23 mu_0       0.5      0.972        0.994     0.585      1.40
24 mu_0       0.6      0.955        0.985     0.375      1.41
25 mu_0       0.7      0.967        0.989     0.382      1.41
26 mu_0       0.8      0.999        0.997     0.486      1.49
27 mu_0       0.9      1.01         1         0.606      1.57
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.802     2.30e- 5  4.14e-20     10.2 
 2 mu         0.2      0.731     1.70e- 3  4.34e-14      6.67
 3 mu         0.3      0.844     1.43e- 2  1.44e-10      8.93
 4 mu         0.4      0.910     5.79e- 3  4.56e- 8      9.06
 5 mu         0.5      0.960     1.58e- 2  3.95e- 6     10.0 
 6 mu         0.6      1.02      5.42e- 2  2.05e- 7     12.4 
 7 mu         0.7      0.965     6.50e- 2  8.66e-10     14.1 
 8 mu         0.8      0.907     1.85e- 1  3.90e-13      6.13
 9 mu         0.9      1.09      5.31e- 1  7.45e-19      9.90
10 mu_1       0.1      0.676     7.58e-10  0             9.81
11 mu_1       0.2      0.809     1.19e- 6  0             9.26
12 mu_1       0.3      0.907     7.14e- 5  0             8.27
13 mu_1       0.4      0.927     2.05e- 3  0            10.6 
14 mu_1       0.5      0.966     1.51e- 2  0             9.59
15 mu_1       0.6      1.01      5.25e- 2  0            13.8 
16 mu_1       0.7      0.937     6.94e- 2  0            13.4 
17 mu_1       0.8      0.908     2.11e- 1  0             5.51
18 mu_1       0.9      1.10      4.71e- 1  0             9.90
19 mu_0       0.1      0.816     1.75e- 6  0            10.3 
20 mu_0       0.2      0.712     6.38e- 4  0             7.11
21 mu_0       0.3      0.817     1.65e- 2  0             9.21
22 mu_0       0.4      0.899     4.89e- 3  0             8.06
23 mu_0       0.5      0.953     1.77e- 3  0            10.7 
24 mu_0       0.6      1.03      7.29e- 4  0            10.4 
25 mu_0       0.7      1.03      4.10e- 5  0            15.6 
26 mu_0       0.8      0.901     7.12e- 7  0            10.2 
27 mu_0       0.9      0.930     6.95e-10  0             9.90
[1] "Total run time was 143.565 seconds"
