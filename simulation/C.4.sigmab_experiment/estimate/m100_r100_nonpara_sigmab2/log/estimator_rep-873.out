
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1348"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  6  3  3  5  2 10  5  7  7  8  6  9 11  9  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02365 0.31366 0.59667 1.00000 6.00000 
[1] "event indicator table: "

  0   1 
767 581 
[1] "treatment indicator table: "

  0   1 
549 799 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 703
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 645
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 163.958 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.357 0.0447
 2 mu         0.1   0.2 0.458 0.0477
 3 mu         0.1   0.3 0.526 0.0547
 4 mu         0.1   0.4 0.583 0.0536
 5 mu         0.1   0.5 0.653 0.0420
 6 mu         0.2   0.1 0.341 0.0379
 7 mu         0.2   0.2 0.453 0.0374
 8 mu         0.2   0.3 0.518 0.0395
 9 mu         0.2   0.4 0.588 0.0472
10 mu         0.2   0.5 0.643 0.0393
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.989        1         0.558      1.45
 2 mu         0.2      1.00         1.00      0.526      1.38
 3 mu         0.3      1.02         1.01      0.581      1.35
 4 mu         0.4      1.04         1         0.748      1.59
 5 mu         0.5      1.03         1         0.648      1.55
 6 mu         0.6      1.00         1         0.529      1.47
 7 mu         0.7      0.983        1         0.582      1.37
 8 mu         0.8      0.983        1         0.631      1.59
 9 mu         0.9      0.984        1         0.690      1.44
10 mu_1       0.1      0.991        1         0.413      1.52
11 mu_1       0.2      1.01         1.01      0.511      1.38
12 mu_1       0.3      1.03         1         0.663      1.51
13 mu_1       0.4      1.04         1         0.749      1.63
14 mu_1       0.5      1.02         1.01      0.595      1.54
15 mu_1       0.6      0.995        1         0.524      1.44
16 mu_1       0.7      0.981        1         0.591      1.40
17 mu_1       0.8      0.982        0.993     0.631      1.61
18 mu_1       0.9      0.984        1.00      0.682      1.44
19 mu_0       0.1      0.988        1         0.563      1.44
20 mu_0       0.2      1.00         1         0.514      1.39
21 mu_0       0.3      1.02         1.01      0.545      1.36
22 mu_0       0.4      1.03         1         0.650      1.57
23 mu_0       0.5      1.03         1         0.701      1.61
24 mu_0       0.6      1.01         1         0.536      1.51
25 mu_0       0.7      0.989        1         0.544      1.40
26 mu_0       0.8      0.985        1         0.633      1.52
27 mu_0       0.9      0.985        0.997     0.608      1.72
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.904     4.00e- 5  4.55e-20      6.17
 2 mu         0.2      0.912     7.31e- 3  4.77e-14      8.40
 3 mu         0.3      0.955     1.19e- 2  1.59e-10      9.83
 4 mu         0.4      0.886     1.18e- 2  5.00e- 8      8.40
 5 mu         0.5      0.817     1.73e- 2  4.34e- 6      5.70
 6 mu         0.6      0.820     3.19e- 2  9.61e- 8      6.12
 7 mu         0.7      0.807     6.63e- 2  3.05e-10      6.51
 8 mu         0.8      0.787     1.27e- 1  9.17e-14      5.10
 9 mu         0.9      0.924     5.55e- 1  8.74e-20      6.11
10 mu_1       0.1      0.936     6.05e- 8  0             9.39
11 mu_1       0.2      0.927     2.55e- 5  0            11.0 
12 mu_1       0.3      0.916     1.09e- 3  0             9.71
13 mu_1       0.4      0.837     7.39e- 3  0             7.35
14 mu_1       0.5      0.811     1.21e- 2  0             5.70
15 mu_1       0.6      0.826     2.90e- 2  0             6.28
16 mu_1       0.7      0.803     3.86e- 2  0             6.36
17 mu_1       0.8      0.796     1.38e- 1  0             5.14
18 mu_1       0.9      0.944     5.49e- 1  0             5.94
19 mu_0       0.1      0.900     1.23e- 5  0             6.07
20 mu_0       0.2      0.908     1.76e- 3  0             7.73
21 mu_0       0.3      0.971     1.15e- 2  0            10.4 
22 mu_0       0.4      0.918     2.70e- 3  0             9.10
23 mu_0       0.5      0.824     2.69e- 3  0             5.74
24 mu_0       0.6      0.810     6.46e- 4  0             5.89
25 mu_0       0.7      0.815     2.70e- 5  0             6.85
26 mu_0       0.8      0.751     1.99e- 7  0             5.46
27 mu_0       0.9      0.747     4.03e-11  0             7.64
[1] "Total run time was 168.041 seconds"
