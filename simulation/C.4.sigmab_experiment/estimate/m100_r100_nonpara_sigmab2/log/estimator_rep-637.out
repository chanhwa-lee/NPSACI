
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1269"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  7  5  3  5  8  5 10 10  2  7  8  4  7  7  6 
[1] "observed time summary: "
    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. 
0.000000 0.004937 0.256778 0.572817 0.956599 5.000000 
[1] "event indicator table: "

  0   1 
751 518 
[1] "treatment indicator table: "

  0   1 
517 752 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 673
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 15"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 596
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 8"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 65"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 148.021 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.436 0.0409
 2 mu         0.1   0.2 0.482 0.0416
 3 mu         0.1   0.3 0.555 0.0460
 4 mu         0.1   0.4 0.611 0.0466
 5 mu         0.1   0.5 0.647 0.0514
 6 mu         0.2   0.1 0.376 0.0399
 7 mu         0.2   0.2 0.431 0.0388
 8 mu         0.2   0.3 0.518 0.0436
 9 mu         0.2   0.4 0.575 0.0485
10 mu         0.2   0.5 0.606 0.0537
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.02          1.00     0.604      1.42
 2 mu         0.2      1.01          1        0.533      1.49
 3 mu         0.3      1.01          1        0.597      1.59
 4 mu         0.4      1.00          1        0.677      1.56
 5 mu         0.5      0.999         1        0.667      1.40
 6 mu         0.6      0.997         1        0.658      1.52
 7 mu         0.7      0.994         1        0.638      1.42
 8 mu         0.8      0.989         1        0.593      1.34
 9 mu         0.9      0.991         1        0.660      1.35
10 mu_1       0.1      1.01          1        0.421      1.56
11 mu_1       0.2      1.00          1        0.519      1.54
12 mu_1       0.3      1.00          1        0.586      1.64
13 mu_1       0.4      1.00          1        0.704      1.50
14 mu_1       0.5      0.998         1        0.638      1.45
15 mu_1       0.6      0.996         1        0.681      1.53
16 mu_1       0.7      0.993         1        0.619      1.38
17 mu_1       0.8      0.989         1        0.575      1.36
18 mu_1       0.9      0.992         1        0.675      1.35
19 mu_0       0.1      1.02          1.01     0.603      1.43
20 mu_0       0.2      1.01          1        0.536      1.48
21 mu_0       0.3      1.01          1        0.575      1.57
22 mu_0       0.4      1.00          1        0.642      1.60
23 mu_0       0.5      1.00          1        0.696      1.38
24 mu_0       0.6      0.999         1        0.625      1.51
25 mu_0       0.7      0.995         1        0.682      1.51
26 mu_0       0.8      0.987         1        0.583      1.37
27 mu_0       0.9      0.982         1        0.464      1.45
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.881  0.000318     5.02e-20      6.49
 2 mu         0.2      0.736  0.0402       5.26e-14      6.67
 3 mu         0.3      0.811  0.0360       1.75e-10      6.53
 4 mu         0.4      0.967  0.0297       5.52e- 8      7.49
 5 mu         0.5      1.07   0.0677       4.79e- 6      8.72
 6 mu         0.6      1.07   0.147        2.02e- 7      7.63
 7 mu         0.7      1.05   0.137        8.52e-10      5.68
 8 mu         0.8      1.05   0.163        3.84e-13      5.27
 9 mu         0.9      1.09   0.710        7.33e-19      5.88
10 mu_1       0.1      0.703  0.000000719  0             8.13
11 mu_1       0.2      0.719  0.000223     0             6.74
12 mu_1       0.3      0.877  0.00489      0             7.69
13 mu_1       0.4      1.04   0.0357       0             7.71
14 mu_1       0.5      1.12   0.0494       0             8.72
15 mu_1       0.6      1.10   0.116        0             7.16
16 mu_1       0.7      1.06   0.174        0             5.53
17 mu_1       0.8      1.04   0.192        0             5.49
18 mu_1       0.9      1.08   0.657        0             6.13
19 mu_0       0.1      0.901  0.000129     0             6.61
20 mu_0       0.2      0.740  0.0147       0             6.95
21 mu_0       0.3      0.782  0.0385       0             6.04
22 mu_0       0.4      0.916  0.0232       0             7.34
23 mu_0       0.5      1.01   0.0248       0             8.72
24 mu_0       0.6      1.03   0.0329       0             8.34
25 mu_0       0.7      1.04   0.0327       0             7.29
26 mu_0       0.8      1.08   0.00578      0             6.36
27 mu_0       0.9      1.16   0.0000476    0             7.13
[1] "Total run time was 151.675 seconds"
