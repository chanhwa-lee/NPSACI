
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1324"
[1] "cluster size dist'n: "

 6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
10  4  7  6  2  7  8  8  8  6  5  2  9  9  9 
[1] "observed time summary: "
    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. 
0.000000 0.004981 0.265111 0.528529 0.907399 5.000000 
[1] "event indicator table: "

  0   1 
742 582 
[1] "treatment indicator table: "

  0   1 
632 692 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 699
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 625
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 88"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 160.469 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.440 0.0284
 2 mu         0.1   0.2 0.514 0.0341
 3 mu         0.1   0.3 0.573 0.0403
 4 mu         0.1   0.4 0.613 0.0427
 5 mu         0.1   0.5 0.670 0.0424
 6 mu         0.2   0.1 0.366 0.0321
 7 mu         0.2   0.2 0.441 0.0367
 8 mu         0.2   0.3 0.490 0.0405
 9 mu         0.2   0.4 0.535 0.0487
10 mu         0.2   0.5 0.603 0.0508
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.02          1.00     0.566      1.44
 2 mu         0.2      1.02          1        0.635      1.41
 3 mu         0.3      1.02          1.01     0.650      1.46
 4 mu         0.4      1.01          1.00     0.689      1.40
 5 mu         0.5      0.998         1        0.674      1.30
 6 mu         0.6      1.00          1        0.631      1.38
 7 mu         0.7      1.00          1        0.593      1.41
 8 mu         0.8      1.01          1        0.554      1.73
 9 mu         0.9      0.995         1        0.612      1.45
10 mu_1       0.1      1.02          1.01     0.421      1.49
11 mu_1       0.2      1.03          1.00     0.586      1.52
12 mu_1       0.3      1.02          1        0.678      1.42
13 mu_1       0.4      1.00          1.00     0.691      1.39
14 mu_1       0.5      0.997         1.02     0.661      1.34
15 mu_1       0.6      1.00          1        0.623      1.40
16 mu_1       0.7      1.00          1        0.572      1.44
17 mu_1       0.8      1.01          1        0.548      1.74
18 mu_1       0.9      0.993         1        0.626      1.41
19 mu_0       0.1      1.02          1.00     0.582      1.45
20 mu_0       0.2      1.02          1        0.598      1.41
21 mu_0       0.3      1.02          1.01     0.635      1.49
22 mu_0       0.4      1.01          1        0.688      1.41
23 mu_0       0.5      1.00          1.00     0.682      1.32
24 mu_0       0.6      0.999         1.00     0.645      1.36
25 mu_0       0.7      1.00          1.00     0.636      1.42
26 mu_0       0.8      1.01          1        0.562      1.69
27 mu_0       0.9      1.01          1        0.488      1.75
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.12    0.00825     1.01e-19      6.50
 2 mu         0.2      1.12    0.150       1.05e-13     11.8 
 3 mu         0.3      0.999   0.165       3.50e-10     12.0 
 4 mu         0.4      0.911   0.106       1.11e- 7      6.13
 5 mu         0.5      0.881   0.0506      9.59e- 6      6.34
 6 mu         0.6      0.853   0.0625      2.57e- 7      7.53
 7 mu         0.7      0.813   0.0805      1.09e- 9      7.46
 8 mu         0.8      0.882   0.131       4.91e-13      6.06
 9 mu         0.9      1.11    0.00681     9.36e-19      6.36
10 mu_1       0.1      1.12    0.0000153   0             7.93
11 mu_1       0.2      1.06    0.00126     0            14.7 
12 mu_1       0.3      0.935   0.0127      0            10.0 
13 mu_1       0.4      0.889   0.0172      0             7.01
14 mu_1       0.5      0.877   0.0266      0             6.34
15 mu_1       0.6      0.845   0.0375      0             8.16
16 mu_1       0.7      0.811   0.0657      0             6.93
17 mu_1       0.8      0.901   0.133       0             6.32
18 mu_1       0.9      1.12    0.00304     0             6.32
19 mu_0       0.1      1.12    0.00333     0             6.74
20 mu_0       0.2      1.13    0.142       0            11.0 
21 mu_0       0.3      1.03    0.172       0            12.9 
22 mu_0       0.4      0.926   0.117       0             7.46
23 mu_0       0.5      0.885   0.0429      0             6.34
24 mu_0       0.6      0.865   0.0354      0             7.01
25 mu_0       0.7      0.820   0.0123      0             8.70
26 mu_0       0.8      0.803   0.000697    0             5.88
27 mu_0       0.9      1.01    0.00000241  0             7.39
[1] "Total run time was 164.421 seconds"
