
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1225"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 8  8  5  7  6  5  6  8  9  7  2  4  3  3 14  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03517 0.40786 0.63389 1.00000 4.00000 
[1] "event indicator table: "

  0   1 
734 491 
[1] "treatment indicator table: "

  0   1 
380 845 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 631
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 21"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 66"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 594
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 58"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 137.964 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.419 0.101 
 2 mu         0.1   0.2 0.502 0.0794
 3 mu         0.1   0.3 0.560 0.0685
 4 mu         0.1   0.4 0.612 0.0885
 5 mu         0.1   0.5 0.642 0.0820
 6 mu         0.2   0.1 0.393 0.0967
 7 mu         0.2   0.2 0.482 0.0769
 8 mu         0.2   0.3 0.511 0.0701
 9 mu         0.2   0.4 0.559 0.0883
10 mu         0.2   0.5 0.610 0.0805
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.01         1         0.552      1.61
 2 mu         0.2      0.989        1         0.468      1.77
 3 mu         0.3      0.988        1         0.562      1.81
 4 mu         0.4      0.990        1         0.609      1.87
 5 mu         0.5      0.987        0.996     0.577      1.86
 6 mu         0.6      0.984        1         0.666      1.91
 7 mu         0.7      0.990        1         0.608      1.63
 8 mu         0.8      1.00         1         0.553      1.66
 9 mu         0.9      1.02         1         0.580      1.36
10 mu_1       0.1      0.997        1         0.393      1.81
11 mu_1       0.2      0.986        1         0.475      1.85
12 mu_1       0.3      0.987        1         0.558      1.74
13 mu_1       0.4      0.986        0.999     0.570      1.88
14 mu_1       0.5      0.982        0.995     0.584      1.91
15 mu_1       0.6      0.984        1         0.682      1.89
16 mu_1       0.7      0.993        1         0.596      1.64
17 mu_1       0.8      1.01         1         0.534      1.63
18 mu_1       0.9      1.02         1         0.598      1.34
19 mu_0       0.1      1.01         1         0.550      1.61
20 mu_0       0.2      0.989        1         0.467      1.75
21 mu_0       0.3      0.988        1         0.545      1.84
22 mu_0       0.4      0.992        1         0.579      1.86
23 mu_0       0.5      0.991        1         0.570      1.81
24 mu_0       0.6      0.985        1         0.588      1.94
25 mu_0       0.7      0.984        1         0.637      1.78
26 mu_0       0.8      0.990        1         0.564      1.74
27 mu_0       0.9      1.01         1         0.421      1.54
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.35      4.56e- 6  4.60e-20     38.2 
 2 mu         0.2      0.936     7.06e- 4  4.82e-14     23.2 
 3 mu         0.3      0.702     5.96e- 3  1.60e-10      7.06
 4 mu         0.4      0.743     2.34e- 2  5.05e- 8      8.31
 5 mu         0.5      0.948     4.67e- 2  4.38e- 6      9.97
 6 mu         0.6      1.28      6.83e- 2  4.15e- 7     28.0 
 7 mu         0.7      1.49      1.01e- 1  1.75e- 9     36.9 
 8 mu         0.8      1.25      2.42e- 1  7.91e-13     18.4 
 9 mu         0.9      0.981     7.46e- 1  1.51e-18      7.21
10 mu_1       0.1      1.13      3.53e- 7  0            42.5 
11 mu_1       0.2      0.723     1.63e- 4  0            12.9 
12 mu_1       0.3      0.658     2.45e- 3  0             8.66
13 mu_1       0.4      0.794     1.21e- 2  0             7.66
14 mu_1       0.5      1.05      2.82e- 2  0            13.6 
15 mu_1       0.6      1.37      8.70e- 2  0            31.9 
16 mu_1       0.7      1.49      1.38e- 1  0            36.1 
17 mu_1       0.8      1.21      2.95e- 1  0            15.7 
18 mu_1       0.9      0.987     7.83e- 1  0             7.28
19 mu_0       0.1      1.37      8.50e- 9  0            37.8 
20 mu_0       0.2      0.989     1.82e- 5  0            25.8 
21 mu_0       0.3      0.721     9.69e- 4  0             7.84
22 mu_0       0.4      0.710     4.87e- 3  0             8.75
23 mu_0       0.5      0.851     7.23e- 3  0             7.55
24 mu_0       0.6      1.14      1.08e- 3  0            22.1 
25 mu_0       0.7      1.48      1.06e- 4  0            38.9 
26 mu_0       0.8      1.43      8.59e- 7  0            29.0 
27 mu_0       0.9      0.926     6.11e-10  0             8.07
[1] "Total run time was 141.53 seconds"
