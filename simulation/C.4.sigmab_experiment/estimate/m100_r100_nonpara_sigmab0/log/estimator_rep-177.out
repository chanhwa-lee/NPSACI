
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1191"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 9  5  5 10  7  6  5  4 10 10  4  3  9  6  4  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03054 0.32529 0.61122 1.00000 6.00000 
[1] "event indicator table: "

  0   1 
715 476 
[1] "treatment indicator table: "

  0   1 
434 757 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 553
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 67"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 638
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 187.477 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.396 0.0819
 2 mu         0.1   0.2 0.531 0.106 
 3 mu         0.1   0.3 0.542 0.104 
 4 mu         0.1   0.4 0.647 0.132 
 5 mu         0.1   0.5 0.702 0.141 
 6 mu         0.2   0.1 0.367 0.0592
 7 mu         0.2   0.2 0.473 0.0658
 8 mu         0.2   0.3 0.502 0.0646
 9 mu         0.2   0.4 0.590 0.0911
10 mu         0.2   0.5 0.637 0.0849
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.507        0.149 0.0000359      9.41
 2 mu         0.2      0.766        0.607 0.00719        8.35
 3 mu         0.3      0.921        0.959 0.0948         3.85
 4 mu         0.4      0.989        1     0.383          1.69
 5 mu         0.5      1.01         1     0.754          1.38
 6 mu         0.6      1.00         1     0.840          1.13
 7 mu         0.7      0.996        1     0.882          1.12
 8 mu         0.8      0.994        1     0.677          1.56
 9 mu         0.9      1.00         1     0.258          2.96
10 mu_1       0.1      0.762        0.422 0.000167      12.6 
11 mu_1       0.2      0.895        0.878 0.0172         5.82
12 mu_1       0.3      0.976        1     0.157          2.24
13 mu_1       0.4      1.00         1     0.498          1.55
14 mu_1       0.5      1.00         1     0.787          1.28
15 mu_1       0.6      0.998        1     0.866          1.08
16 mu_1       0.7      0.995        1     0.850          1.14
17 mu_1       0.8      0.995        1     0.633          1.68
18 mu_1       0.9      1.00         0.999 0.227          3.11
19 mu_0       0.1      0.478        0.120 0.0000213      9.06
20 mu_0       0.2      0.734        0.532 0.00467        8.98
21 mu_0       0.3      0.898        0.920 0.0682         4.53
22 mu_0       0.4      0.980        1     0.307          1.99
23 mu_0       0.5      1.01         1     0.683          1.49
24 mu_0       0.6      1.01         1.00  0.801          1.23
25 mu_0       0.7      0.998        1     0.917          1.10
26 mu_0       0.8      0.991        0.993 0.849          1.19
27 mu_0       0.9      0.987        1     0.523          1.59
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.0408    0.000126   4.54e-12      2.05
 2 mu         0.2     0.210     0.0136     7.44e- 8      7.19
 3 mu         0.3     0.496     0.104      2.17e- 5      9.57
 4 mu         0.4     0.791     0.377      1.22e- 3     11.3 
 5 mu         0.5     1.00      0.859      2.77e- 2      6.03
 6 mu         0.6     1.09      1.06       2.28e- 1      2.17
 7 mu         0.7     1.05      1.01       1.38e- 1      3.08
 8 mu         0.8     1.07      0.521      2.71e- 3     20.0 
 9 mu         0.9     1.77      0.0903     1.51e- 6    104.  
10 mu_1       0.1     0.143     0.000750   4.54e-11      6.15
11 mu_1       0.2     0.400     0.0410     3.72e- 7     10.8 
12 mu_1       0.3     0.699     0.208      7.24e- 5     11.7 
13 mu_1       0.4     0.942     0.599      3.05e- 3     10.4 
14 mu_1       0.5     1.08      1.04       5.54e- 2      4.44
15 mu_1       0.6     1.10      1.11       3.49e- 1      2.13
16 mu_1       0.7     1.03      0.910      7.28e- 2      4.40
17 mu_1       0.8     1.09      0.426      1.25e- 3     25.0 
18 mu_1       0.9     1.88      0.0632     6.19e- 7    115.  
19 mu_0       0.1     0.0294    0.0000583  0             1.59
20 mu_0       0.2     0.162     0.00551    0             6.29
21 mu_0       0.3     0.408     0.0520     0             9.53
22 mu_0       0.4     0.690     0.227      0            11.9 
23 mu_0       0.5     0.927     0.611      0             7.61
24 mu_0       0.6     1.08      1.07       0             2.65
25 mu_0       0.7     1.09      1.12       0             2.20
26 mu_0       0.8     0.974     0.866      0             3.32
27 mu_0       0.9     0.799     0.253      0            11.7 
[1] "Total run time was 190.872 seconds"
