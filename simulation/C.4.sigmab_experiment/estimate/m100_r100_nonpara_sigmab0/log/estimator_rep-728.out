
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1174"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 19 20 
 8  6  6  6 11  6  7 10  6  6  7  4  5  4  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0471  0.3836  0.6460  1.0000  5.0000 
[1] "event indicator table: "

  0   1 
728 446 
[1] "treatment indicator table: "

  0   1 
412 762 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 594
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 580
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 40"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 114.909 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.281 0.169
 2 mu         0.1   0.2 0.389 0.229
 3 mu         0.1   0.3 0.515 0.244
 4 mu         0.1   0.4 0.557 0.266
 5 mu         0.1   0.5 0.633 0.282
 6 mu         0.2   0.1 0.299 0.132
 7 mu         0.2   0.2 0.414 0.178
 8 mu         0.2   0.3 0.496 0.192
 9 mu         0.2   0.4 0.525 0.208
10 mu         0.2   0.5 0.575 0.226
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      3.62         0.166  0.000237    261.  
 2 mu         0.2      2.09         0.581  0.0174      101.  
 3 mu         0.3      1.28         0.832  0.127        23.9 
 4 mu         0.4      1.05         1      0.383         4.55
 5 mu         0.5      1.01         1      0.651         1.54
 6 mu         0.6      1.01         1      0.896         1.17
 7 mu         0.7      1.00         1.00   0.884         1.13
 8 mu         0.8      0.981        0.999  0.650         1.33
 9 mu         0.9      0.930        0.974  0.222         2.30
10 mu_1       0.1      2.80         0.462  0.00101     174.  
11 mu_1       0.2      1.38         0.814  0.0394       33.9 
12 mu_1       0.3      1.06         0.956  0.203         6.05
13 mu_1       0.4      1.01         1      0.493         2.25
14 mu_1       0.5      1.01         1      0.701         1.31
15 mu_1       0.6      1.01         1      0.947         1.11
16 mu_1       0.7      0.999        1      0.847         1.17
17 mu_1       0.8      0.977        0.997  0.601         1.36
18 mu_1       0.9      0.925        0.962  0.200         2.44
19 mu_0       0.1      3.71         0.136  0.000151    270.  
20 mu_0       0.2      2.26         0.524  0.0119      117.  
21 mu_0       0.3      1.37         0.787  0.0946       31.6 
22 mu_0       0.4      1.08         0.981  0.310         6.50
23 mu_0       0.5      1.01         1      0.601         1.83
24 mu_0       0.6      1.00         1      0.810         1.29
25 mu_0       0.7      1.00         1      0.936         1.13
26 mu_0       0.8      1.00         1      0.785         1.17
27 mu_0       0.9      0.978        1      0.414         1.73
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.210    0.0000487  1.31e-12     10.5 
 2 mu         0.2      0.583    0.00608    6.02e- 8     18.4 
 3 mu         0.3      1.02     0.0593     2.65e- 5     24.0 
 4 mu         0.4      1.23     0.228      1.66e- 3     21.8 
 5 mu         0.5      1.14     0.514      3.42e- 2     14.6 
 6 mu         0.6      1.03     0.939      3.24e- 1      4.31
 7 mu         0.7      1.02     0.953      2.15e- 1      2.60
 8 mu         0.8      0.950    0.588      4.82e- 3      5.62
 9 mu         0.9      0.683    0.118      3.02e- 6     16.2 
10 mu_1       0.1      0.524    0.000274   1.10e-11     23.3 
11 mu_1       0.2      0.872    0.0198     2.54e- 7     20.4 
12 mu_1       0.3      1.19     0.131      7.44e- 5     26.7 
13 mu_1       0.4      1.24     0.406      3.51e- 3     21.8 
14 mu_1       0.5      1.11     0.757      5.77e- 2     11.7 
15 mu_1       0.6      1.03     0.981      3.80e- 1      2.87
16 mu_1       0.7      1.02     0.932      7.45e- 2      2.92
17 mu_1       0.8      0.926    0.469      2.41e- 3      7.02
18 mu_1       0.9      0.658    0.0823     1.34e- 6     18.0 
19 mu_0       0.1      0.175    0.0000192  0             9.06
20 mu_0       0.2      0.511    0.00167    0            17.9 
21 mu_0       0.3      0.946    0.0245     0            22.9 
22 mu_0       0.4      1.23     0.103      0            24.1 
23 mu_0       0.5      1.18     0.313      0            17.5 
24 mu_0       0.6      1.03     0.770      0             6.46
25 mu_0       0.7      1.01     0.955      0             2.17
26 mu_0       0.8      1.05     0.971      0             3.58
27 mu_0       0.9      0.910    0.372      0             5.25
[1] "Total run time was 118.124 seconds"
