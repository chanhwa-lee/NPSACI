
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1212"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  5  5  7 10  4  8  6  9  6 10  7  6  5  4  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03738 0.37624 0.65094 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
732 480 
[1] "treatment indicator table: "

  0   1 
433 779 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 599
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 50"
[1] "     Cluster: 54"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 613
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 74.387 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.345 0.0933
 2 mu         0.1   0.2 0.487 0.143 
 3 mu         0.1   0.3 0.496 0.144 
 4 mu         0.1   0.4 0.501 0.146 
 5 mu         0.1   0.5 0.567 0.141 
 6 mu         0.2   0.1 0.305 0.0555
 7 mu         0.2   0.2 0.441 0.103 
 8 mu         0.2   0.3 0.451 0.0912
 9 mu         0.2   0.4 0.459 0.0817
10 mu         0.2   0.5 0.527 0.0654
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.591        0.165  0.000827     11.4 
 2 mu         0.2      0.805        0.549  0.0403        6.31
 3 mu         0.3      0.926        0.862  0.242         3.16
 4 mu         0.4      0.983        0.996  0.522         1.96
 5 mu         0.5      1.00         1      0.745         1.30
 6 mu         0.6      1.01         1.00   0.839         1.14
 7 mu         0.7      1.01         1.00   0.893         1.17
 8 mu         0.8      1.01         1      0.680         1.56
 9 mu         0.9      1.02         1      0.295         4.01
10 mu_1       0.1      0.757        0.453  0.00348       9.15
11 mu_1       0.2      0.895        0.838  0.0877        4.63
12 mu_1       0.3      0.963        0.999  0.353         2.54
13 mu_1       0.4      0.995        1      0.628         1.62
14 mu_1       0.5      1.01         1      0.787         1.21
15 mu_1       0.6      1.01         1      0.854         1.16
16 mu_1       0.7      1.01         1      0.832         1.18
17 mu_1       0.8      1.01         1      0.633         1.69
18 mu_1       0.9      1.02         1      0.271         4.27
19 mu_0       0.1      0.572        0.135  0.000532     12.6 
20 mu_0       0.2      0.782        0.479  0.0284        6.73
21 mu_0       0.3      0.910        0.824  0.190         3.73
22 mu_0       0.4      0.975        0.972  0.451         2.22
23 mu_0       0.5      1.00         1      0.699         1.45
24 mu_0       0.6      1.01         1.00   0.815         1.19
25 mu_0       0.7      1.01         1.00   0.875         1.17
26 mu_0       0.8      1.01         1      0.838         1.23
27 mu_0       0.9      1.01         1      0.514         1.67
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.810    0.0000521  1.96e-13     76.4 
 2 mu         0.2      2.63     0.00516    1.14e- 8    235.  
 3 mu         0.3      2.40     0.0638     6.56e- 6    183.  
 4 mu         0.4      1.47     0.272      5.61e- 4     67.0 
 5 mu         0.5      1.13     0.629      1.66e- 2     12.7 
 6 mu         0.6      1.15     0.979      2.46e- 1     10.2 
 7 mu         0.7      1.15     1.02       3.83e- 2      6.25
 8 mu         0.8      1.09     0.530      2.24e- 4     12.3 
 9 mu         0.9      1.17     0.0679     2.19e- 8     40.4 
10 mu_1       0.1      1.85     0.000420   1.84e-12    170.  
11 mu_1       0.2      3.09     0.0187     5.37e- 8    261.  
12 mu_1       0.3      2.09     0.135      2.06e- 5    136.  
13 mu_1       0.4      1.29     0.480      1.32e- 3     37.2 
14 mu_1       0.5      1.15     0.830      3.13e- 2     10.4 
15 mu_1       0.6      1.19     1.04       2.68e- 1      9.74
16 mu_1       0.7      1.15     0.979      1.22e- 2      5.10
17 mu_1       0.8      1.09     0.426      6.22e- 5     14.4 
18 mu_1       0.9      1.19     0.0483     5.41e- 9     42.2 
19 mu_0       0.1      0.694    0.0000162  0            66.0 
20 mu_0       0.2      2.51     0.00197    0           228.  
21 mu_0       0.3      2.54     0.0293     0           204.  
22 mu_0       0.4      1.59     0.153      0            86.8 
23 mu_0       0.5      1.11     0.455      0            19.8 
24 mu_0       0.6      1.10     0.867      0            11.0 
25 mu_0       0.7      1.14     1.08       0             8.92
26 mu_0       0.8      1.06     0.823      0             4.31
27 mu_0       0.9      0.987    0.172      0            23.7 
[1] "Total run time was 76.548 seconds"
