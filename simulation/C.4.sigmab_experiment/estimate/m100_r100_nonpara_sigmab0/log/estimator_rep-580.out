
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1228"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
11  7  5  3  7  4  6  8  6  5  9  3  8  8  4  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04244 0.31757 0.61414 1.00000 4.69913 
[1] "event indicator table: "

  0   1 
698 530 
[1] "treatment indicator table: "

  0   1 
441 787 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 617
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 75"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 611
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 108.063 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.198 0.0938
 2 mu         0.1   0.2 0.388 0.122 
 3 mu         0.1   0.3 0.512 0.114 
 4 mu         0.1   0.4 0.523 0.116 
 5 mu         0.1   0.5 0.534 0.127 
 6 mu         0.2   0.1 0.195 0.0765
 7 mu         0.2   0.2 0.327 0.103 
 8 mu         0.2   0.3 0.459 0.0905
 9 mu         0.2   0.4 0.481 0.0926
10 mu         0.2   0.5 0.512 0.103 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.466       0.110   0.000339      8.08
 2 mu         0.2      0.819       0.601   0.0185       12.5 
 3 mu         0.3      1.02        0.944   0.118        10.9 
 4 mu         0.4      1.05        1       0.345         7.38
 5 mu         0.5      1.03        1       0.644         3.11
 6 mu         0.6      1.01        1       0.875         1.29
 7 mu         0.7      0.993       1       0.851         1.15
 8 mu         0.8      0.980       1       0.567         1.50
 9 mu         0.9      0.948       0.997   0.173         2.95
10 mu_1       0.1      0.689       0.329   0.00149      14.3 
11 mu_1       0.2      0.983       0.863   0.0464       11.1 
12 mu_1       0.3      1.07        1       0.205        10.6 
13 mu_1       0.4      1.05        1.00    0.475         5.73
14 mu_1       0.5      1.02        1       0.756         2.26
15 mu_1       0.6      1.00        1       0.903         1.12
16 mu_1       0.7      0.992       1       0.830         1.18
17 mu_1       0.8      0.979       1       0.524         1.61
18 mu_1       0.9      0.947       0.990   0.154         3.11
19 mu_0       0.1      0.442       0.0863  0.000211      7.39
20 mu_0       0.2      0.778       0.531   0.0115       12.8 
21 mu_0       0.3      0.997       0.896   0.0801       11.0 
22 mu_0       0.4      1.05        1       0.259         8.49
23 mu_0       0.5      1.03        1       0.531         3.97
24 mu_0       0.6      1.01        1       0.802         1.56
25 mu_0       0.7      0.996       1       0.898         1.11
26 mu_0       0.8      0.984       1.00    0.741         1.33
27 mu_0       0.9      0.955       1       0.347         1.87
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.0264    0.0000925  2.48e-11     0.863
 2 mu         0.2     0.116     0.00791    5.08e- 7     3.36 
 3 mu         0.3     0.290     0.0695     1.30e- 4     5.10 
 4 mu         0.4     0.556     0.267      5.26e- 3     4.79 
 5 mu         0.5     0.825     0.628      6.31e- 2     3.70 
 6 mu         0.6     0.990     0.883      3.25e- 1     2.73 
 7 mu         0.7     1.02      0.971      7.06e- 2     3.54 
 8 mu         0.8     0.956     0.553      3.12e- 3     8.92 
 9 mu         0.9     0.819     0.0757     6.95e- 6    14.8  
10 mu_1       0.1     0.104     0.000661   1.96e-10     3.45 
11 mu_1       0.2     0.242     0.0230     2.00e- 6     5.61 
12 mu_1       0.3     0.447     0.160      3.43e- 4     5.66 
13 mu_1       0.4     0.709     0.483      1.04e- 2     4.09 
14 mu_1       0.5     0.928     0.836      1.14e- 1     2.96 
15 mu_1       0.6     1.03      0.914      2.84e- 1     2.31 
16 mu_1       0.7     1.02      0.890      4.15e- 2     4.38 
17 mu_1       0.8     0.944     0.439      1.61e- 3     9.66 
18 mu_1       0.9     0.804     0.0532     3.18e- 6    15.1  
19 mu_0       0.1     0.0179    0.0000282  0            0.632
20 mu_0       0.2     0.0842    0.00311    0            2.80 
21 mu_0       0.3     0.223     0.0316     0            4.85 
22 mu_0       0.4     0.453     0.163      0            5.32 
23 mu_0       0.5     0.723     0.472      0            4.44 
24 mu_0       0.6     0.931     0.761      0            4.09 
25 mu_0       0.7     1.02      0.957      0            3.13 
26 mu_0       0.8     1.01      0.859      0            5.95 
27 mu_0       0.9     0.952     0.219      0           13.7  
[1] "Total run time was 111.41 seconds"
