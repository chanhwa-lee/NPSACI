
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1280"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 3  4 11  5  7  4 10  4  6  8  5  6  5  8  7  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02917 0.33436 0.61347 1.00000 5.61784 
[1] "event indicator table: "

  0   1 
732 548 
[1] "treatment indicator table: "

  0   1 
471 809 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 668
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 612
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 17"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 161.622 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.353 0.0620
 2 mu         0.1   0.2 0.542 0.102 
 3 mu         0.1   0.3 0.557 0.101 
 4 mu         0.1   0.4 0.585 0.101 
 5 mu         0.1   0.5 0.628 0.114 
 6 mu         0.2   0.1 0.344 0.0497
 7 mu         0.2   0.2 0.524 0.0840
 8 mu         0.2   0.3 0.559 0.0873
 9 mu         0.2   0.4 0.589 0.0867
10 mu         0.2   0.5 0.622 0.0873
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.491        0.146  0.000292      5.51
 2 mu         0.2      0.857        0.583  0.0213        7.16
 3 mu         0.3      0.980        0.846  0.145         4.51
 4 mu         0.4      0.997        0.981  0.426         2.07
 5 mu         0.5      1.00         1      0.764         1.31
 6 mu         0.6      1.00         1      0.935         1.12
 7 mu         0.7      0.991        0.999  0.789         1.27
 8 mu         0.8      0.996        0.977  0.489         2.25
 9 mu         0.9      1.11         0.859  0.113        13.6 
10 mu_1       0.1      0.787        0.395  0.00121       8.78
11 mu_1       0.2      0.998        0.854  0.0456        6.21
12 mu_1       0.3      1.01         0.978  0.224         3.49
13 mu_1       0.4      1.00         1      0.540         1.54
14 mu_1       0.5      1.01         1.01   0.847         1.21
15 mu_1       0.6      1.00         1      0.918         1.09
16 mu_1       0.7      0.987        0.999  0.723         1.32
17 mu_1       0.8      0.997        0.977  0.450         2.59
18 mu_1       0.9      1.13         0.845  0.0972       15.0 
19 mu_0       0.1      0.458        0.114  0.000190      5.19
20 mu_0       0.2      0.822        0.522  0.0152        7.45
21 mu_0       0.3      0.968        0.795  0.111         4.95
22 mu_0       0.4      0.994        0.962  0.351         2.46
23 mu_0       0.5      1.00         1      0.681         1.42
24 mu_0       0.6      1.01         1.00   0.917         1.19
25 mu_0       0.7      1.00         1      0.873         1.16
26 mu_0       0.8      0.991        1      0.645         1.51
27 mu_0       0.9      1.00         0.983  0.255         2.16
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.0886   0.0000209   5.04e-13      5.11
 2 mu         0.2     0.487    0.00403     2.61e- 8     13.0 
 3 mu         0.3     1.08     0.0553      1.31e- 5     39.1 
 4 mu         0.4     1.24     0.289       9.63e- 4     39.5 
 5 mu         0.5     1.10     0.683       2.37e- 2     17.6 
 6 mu         0.6     1.04     0.955       2.81e- 1      3.47
 7 mu         0.7     1.05     0.946       3.91e- 2      3.36
 8 mu         0.8     1.13     0.475       5.87e- 4     12.0 
 9 mu         0.9     1.13     0.0467      2.58e- 7     22.9 
10 mu_1       0.1     0.256    0.000110    4.48e-12     12.8 
11 mu_1       0.2     0.802    0.0123      1.16e- 7     22.8 
12 mu_1       0.3     1.28     0.112       3.89e- 5     45.7 
13 mu_1       0.4     1.25     0.435       2.14e- 3     34.6 
14 mu_1       0.5     1.10     0.872       4.22e- 2     12.3 
15 mu_1       0.6     1.06     1.05        2.80e- 1      2.28
16 mu_1       0.7     1.07     0.851       1.64e- 2      4.43
17 mu_1       0.8     1.14     0.365       2.16e- 4     13.3 
18 mu_1       0.9     1.11     0.0308      8.44e- 8     23.4 
19 mu_0       0.1     0.0700   0.00000883  0             4.26
20 mu_0       0.2     0.408    0.00154     0            10.6 
21 mu_0       0.3     0.989    0.0311      0            36.4 
22 mu_0       0.4     1.23     0.153       0            42.8 
23 mu_0       0.5     1.10     0.492       0            22.9 
24 mu_0       0.6     1.01     0.898       0             5.64
25 mu_0       0.7     1.01     1.02        0             2.01
26 mu_0       0.8     1.07     0.756       0             6.64
27 mu_0       0.9     1.35     0.141       0            21.9 
[1] "Total run time was 164.828 seconds"
