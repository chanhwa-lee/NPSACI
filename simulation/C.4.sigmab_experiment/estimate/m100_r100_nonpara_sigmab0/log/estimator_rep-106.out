
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1287"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 1  4  5 14  4  7  4  7  9  6  2 10 10  9  6  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02615 0.33836 0.59148 1.00000 4.48080 
[1] "event indicator table: "

  0   1 
782 505 
[1] "treatment indicator table: "

  0   1 
456 831 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 661
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 63"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 626
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 84"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 360.534 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.401 0.126 
 2 mu         0.1   0.2 0.498 0.154 
 3 mu         0.1   0.3 0.526 0.174 
 4 mu         0.1   0.4 0.546 0.185 
 5 mu         0.1   0.5 0.563 0.197 
 6 mu         0.2   0.1 0.361 0.0873
 7 mu         0.2   0.2 0.444 0.108 
 8 mu         0.2   0.3 0.490 0.120 
 9 mu         0.2   0.4 0.526 0.130 
10 mu         0.2   0.5 0.547 0.137 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.15         0.135 0.0000894     55.5 
 2 mu         0.2      1.06         0.441 0.00923       27.4 
 3 mu         0.3      0.985        0.830 0.0886         9.04
 4 mu         0.4      1.00         0.986 0.310          2.76
 5 mu         0.5      1.02         1.00  0.618          1.62
 6 mu         0.6      1.02         1.00  0.847          1.38
 7 mu         0.7      1.00         1     0.829          1.19
 8 mu         0.8      0.991        0.998 0.442          1.75
 9 mu         0.9      0.984        0.915 0.0737         3.07
10 mu_1       0.1      1.24         0.396 0.000427      42.9 
11 mu_1       0.2      0.979        0.696 0.0225        11.1 
12 mu_1       0.3      0.972        0.938 0.149          3.15
13 mu_1       0.4      1.01         1     0.411          1.67
14 mu_1       0.5      1.03         1.00  0.708          1.59
15 mu_1       0.6      1.02         1.00  0.887          1.34
16 mu_1       0.7      1.00         1     0.780          1.20
17 mu_1       0.8      0.990        0.997 0.393          1.87
18 mu_1       0.9      0.984        0.905 0.0612         3.26
19 mu_0       0.1      1.14         0.103 0.0000519     56.9 
20 mu_0       0.2      1.08         0.383 0.00591       31.5 
21 mu_0       0.3      0.991        0.754 0.0628        11.6 
22 mu_0       0.4      0.993        0.967 0.242          3.67
23 mu_0       0.5      1.02         1     0.528          1.64
24 mu_0       0.6      1.03         1.01  0.786          1.54
25 mu_0       0.7      1.01         1     0.919          1.31
26 mu_0       0.8      0.996        1     0.640          1.28
27 mu_0       0.9      0.986        1     0.186          2.39
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1    0.00799   0.0000241   1.57e-14     0.264
 2 mu         0.2    0.104     0.00436     3.24e- 9     2.70 
 3 mu         0.3    0.417     0.0486      3.67e- 6    10.6  
 4 mu         0.4    0.825     0.225       4.78e- 4    14.6  
 5 mu         0.5    1.07      0.608       1.84e- 2     9.38 
 6 mu         0.6    1.11      0.974       3.05e- 1     5.35 
 7 mu         0.7    1.10      1.05        7.52e- 2     3.70 
 8 mu         0.8    1.16      0.581       2.21e- 3    13.9  
 9 mu         0.9    1.09      0.0698      2.47e- 6    29.0  
10 mu_1       0.1    0.0339    0.000159    1.41e-13     0.989
11 mu_1       0.2    0.229     0.0157      1.46e- 8     5.25 
12 mu_1       0.3    0.636     0.111       1.10e- 5    13.8  
13 mu_1       0.4    1.00      0.360       1.08e- 3    14.2  
14 mu_1       0.5    1.14      0.807       3.32e- 2     7.88 
15 mu_1       0.6    1.13      1.03        3.92e- 1     4.11 
16 mu_1       0.7    1.11      1.02        4.18e- 2     4.17 
17 mu_1       0.8    1.17      0.469       1.08e- 3    15.7  
18 mu_1       0.9    1.07      0.0540      1.07e- 6    29.0  
19 mu_0       0.1    0.00511   0.00000866  0            0.183
20 mu_0       0.2    0.0725    0.00136     0            2.06 
21 mu_0       0.3    0.323     0.0226      0            9.28 
22 mu_0       0.4    0.707     0.120       0           14.9  
23 mu_0       0.5    1.00      0.404       0           11.5  
24 mu_0       0.6    1.10      0.856       0            7.20 
25 mu_0       0.7    1.08      0.981       0            3.64 
26 mu_0       0.8    1.12      0.976       0            6.97 
27 mu_0       0.9    1.35      0.205       0           29.0  
[1] "Total run time was 366.768 seconds"
