
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1251"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  5  8  5  8  5  5 13  5  8  7  5  4  6  6  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03865 0.36141 0.64635 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
733 518 
[1] "treatment indicator table: "

  0   1 
461 790 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 636
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 11"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 615
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 138.019 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.344 0.0810
 2 mu         0.1   0.2 0.445 0.143 
 3 mu         0.1   0.3 0.504 0.128 
 4 mu         0.1   0.4 0.486 0.135 
 5 mu         0.1   0.5 0.538 0.121 
 6 mu         0.2   0.1 0.305 0.0515
 7 mu         0.2   0.2 0.374 0.0929
 8 mu         0.2   0.3 0.444 0.0823
 9 mu         0.2   0.4 0.439 0.0992
10 mu         0.2   0.5 0.503 0.0889
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.484        0.176  0.000433      5.18
 2 mu         0.2      0.884        0.626  0.0316        8.85
 3 mu         0.3      1.07         0.925  0.182         6.39
 4 mu         0.4      1.07         1      0.458         3.24
 5 mu         0.5      1.03         1      0.715         1.69
 6 mu         0.6      1.00         1      0.919         1.11
 7 mu         0.7      0.995        0.998  0.737         1.22
 8 mu         0.8      0.987        0.998  0.418         1.39
 9 mu         0.9      0.984        0.920  0.136         3.10
10 mu_1       0.1      0.770        0.461  0.00176       8.87
11 mu_1       0.2      1.06         0.927  0.0657        8.89
12 mu_1       0.3      1.11         1      0.271         4.76
13 mu_1       0.4      1.06         1.00   0.570         2.61
14 mu_1       0.5      1.02         1.00   0.777         1.39
15 mu_1       0.6      1.00         1.00   0.926         1.11
16 mu_1       0.7      0.993        0.999  0.689         1.23
17 mu_1       0.8      0.986        0.994  0.385         1.46
18 mu_1       0.9      0.986        0.902  0.123         3.34
19 mu_0       0.1      0.452        0.138  0.000286      5.62
20 mu_0       0.2      0.840        0.549  0.0230        8.84
21 mu_0       0.3      1.05         0.864  0.144         7.09
22 mu_0       0.4      1.08         1      0.382         3.75
23 mu_0       0.5      1.04         1.00   0.653         1.98
24 mu_0       0.6      1.01         1      0.850         1.20
25 mu_0       0.7      0.998        1      0.850         1.20
26 mu_0       0.8      0.987        0.993  0.549         1.28
27 mu_0       0.9      0.966        1      0.252         1.79
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.353    0.0000424  3.87e-12     28.3 
 2 mu         0.2      2.10     0.00476    1.33e- 7    174.  
 3 mu         0.3      2.80     0.0541     3.91e- 5    204.  
 4 mu         0.4      1.94     0.275      1.84e- 3     99.1 
 5 mu         0.5      1.22     0.691      3.03e- 2     23.6 
 6 mu         0.6      1.04     0.994      2.39e- 1      2.87
 7 mu         0.7      1.01     0.966      8.44e- 2      3.18
 8 mu         0.8      0.803    0.548      6.63e- 4      5.38
 9 mu         0.9      0.359    0.0882     7.29e- 8      4.37
10 mu_1       0.1      0.950    0.000324   3.10e-11     74.4 
11 mu_1       0.2      2.91     0.0146     5.56e- 7    229.  
12 mu_1       0.3      2.73     0.116      1.09e- 4    179.  
13 mu_1       0.4      1.66     0.427      3.84e- 3     65.2 
14 mu_1       0.5      1.13     0.846      5.05e- 2     12.4 
15 mu_1       0.6      1.05     1.01       2.19e- 1      3.04
16 mu_1       0.7      0.991    0.952      3.73e- 2      3.79
17 mu_1       0.8      0.743    0.446      2.18e- 4      5.60
18 mu_1       0.9      0.315    0.0636     2.13e- 8      4.04
19 mu_0       0.1      0.287    0.0000173  8.61e-13     23.1 
20 mu_0       0.2      1.90     0.00188    2.78e- 8    160.  
21 mu_0       0.3      2.83     0.0295     9.32e- 6    214.  
22 mu_0       0.4      2.13     0.160      5.12e- 4    122.  
23 mu_0       0.5      1.30     0.479      1.01e- 2     34.7 
24 mu_0       0.6      1.04     0.896      9.97e- 2      4.75
25 mu_0       0.7      1.07     1.00       1.82e- 1      3.24
26 mu_0       0.8      1.04     0.967      2.44e- 3      4.48
27 mu_0       0.9      0.760    0.344      5.37e- 7      7.28
[1] "Total run time was 140.842 seconds"
