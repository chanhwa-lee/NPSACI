
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1272"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  6  7  7  6  4  5 10  9  3  6  6  8  5  9  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04479 0.40874 0.65042 1.00000 6.00000 
[1] "event indicator table: "

  0   1 
764 508 
[1] "treatment indicator table: "

  0   1 
434 838 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 653
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 42"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 619
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 85.302 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.164 0.143 
 2 mu         0.1   0.2 0.161 0.195 
 3 mu         0.1   0.3 0.163 0.216 
 4 mu         0.1   0.4 0.229 0.247 
 5 mu         0.1   0.5 0.382 0.255 
 6 mu         0.2   0.1 0.191 0.0785
 7 mu         0.2   0.2 0.207 0.110 
 8 mu         0.2   0.3 0.220 0.122 
 9 mu         0.2   0.4 0.301 0.138 
10 mu         0.2   0.5 0.457 0.129 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      0.397       0.0563 0.00000103       6.95
 2 mu         0.2      0.616       0.363  0.000474         3.70
 3 mu         0.3      0.827       0.760  0.0119           3.21
 4 mu         0.4      0.950       0.973  0.0876           4.68
 5 mu         0.5      0.995       0.995  0.319            3.54
 6 mu         0.6      1.00        0.997  0.615            1.85
 7 mu         0.7      0.992       1      0.731            1.18
 8 mu         0.8      0.965       0.998  0.511            1.37
 9 mu         0.9      0.911       0.966  0.153            1.76
10 mu_1       0.1      0.502       0.178  0.00000576       3.53
11 mu_1       0.2      0.746       0.616  0.00136          4.07
12 mu_1       0.3      0.907       0.924  0.0233           4.21
13 mu_1       0.4      0.982       0.976  0.134            4.70
14 mu_1       0.5      1.00        1      0.410            3.02
15 mu_1       0.6      1.00        1      0.700            1.58
16 mu_1       0.7      0.988       1      0.686            1.23
17 mu_1       0.8      0.961       1      0.469            1.40
18 mu_1       0.9      0.906       0.980  0.136            1.77
19 mu_0       0.1      0.385       0.0424 0.000000501      7.56
20 mu_0       0.2      0.584       0.296  0.000254         3.77
21 mu_0       0.3      0.792       0.685  0.00696          3.45
22 mu_0       0.4      0.928       0.958  0.0565           4.67
23 mu_0       0.5      0.987       1      0.229            4.06
24 mu_0       0.6      1.00        1      0.488            2.26
25 mu_0       0.7      0.999       1      0.729            1.27
26 mu_0       0.8      0.982       0.995  0.639            1.26
27 mu_0       0.9      0.949       0.968  0.307            1.68
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.0508   0.0000285   7.21e-13      2.91
 2 mu         0.2     0.248    0.00386     3.32e- 8      6.45
 3 mu         0.3     0.613    0.0517      1.46e- 5     10.0 
 4 mu         0.4     1.05     0.241       7.26e- 4     21.1 
 5 mu         0.5     1.37     0.649       1.38e- 2     38.0 
 6 mu         0.6     1.35     0.949       1.41e- 1     31.6 
 7 mu         0.7     1.13     0.925       1.66e- 1     11.1 
 8 mu         0.8     0.993    0.648       6.40e- 3      5.33
 9 mu         0.9     0.786    0.0953      1.27e- 5     10.3 
10 mu_1       0.1     0.165    0.000214    6.07e-12      8.30
11 mu_1       0.2     0.455    0.0126      1.40e- 7      9.22
12 mu_1       0.3     0.835    0.113       4.10e- 5     12.5 
13 mu_1       0.4     1.21     0.412       1.69e- 3     27.7 
14 mu_1       0.5     1.42     0.841       2.57e- 2     40.0 
15 mu_1       0.6     1.32     0.937       2.20e- 1     27.7 
16 mu_1       0.7     1.10     0.898       8.87e- 2      8.33
17 mu_1       0.8     0.981    0.575       3.00e- 3      5.41
18 mu_1       0.9     0.766    0.0721      5.28e- 6     10.7 
19 mu_0       0.1     0.0381   0.00000966  0             2.31
20 mu_0       0.2     0.197    0.00146     0             5.76
21 mu_0       0.3     0.518    0.0233      0             8.96
22 mu_0       0.4     0.941    0.130       0            16.6 
23 mu_0       0.5     1.32     0.391       0            36.0 
24 mu_0       0.6     1.41     0.865       0            37.4 
25 mu_0       0.7     1.20     0.931       0            17.5 
26 mu_0       0.8     1.04     0.830       0             5.33
27 mu_0       0.9     0.967    0.280       0             8.45
[1] "Total run time was 87.89 seconds"
