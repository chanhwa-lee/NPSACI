
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1268"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  4  7  4  8  6  5  9  9  8  6  1  8 10  8  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03048 0.33765 0.59647 1.00000 5.08261 
[1] "event indicator table: "

  0   1 
764 504 
[1] "treatment indicator table: "

  0   1 
443 825 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 643
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 625
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 62"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 67.125 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.297 0.0700
 2 mu         0.1   0.2 0.399 0.0867
 3 mu         0.1   0.3 0.481 0.119 
 4 mu         0.1   0.4 0.578 0.151 
 5 mu         0.1   0.5 0.620 0.151 
 6 mu         0.2   0.1 0.332 0.0771
 7 mu         0.2   0.2 0.392 0.0723
 8 mu         0.2   0.3 0.446 0.0860
 9 mu         0.2   0.4 0.522 0.0956
10 mu         0.2   0.5 0.582 0.104 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      0.517       0.0909 0.00000461     11.7 
 2 mu         0.2      0.780       0.408  0.00183         9.56
 3 mu         0.3      0.933       0.744  0.0371          8.31
 4 mu         0.4      0.975       0.919  0.207           3.87
 5 mu         0.5      0.989       0.975  0.549           1.61
 6 mu         0.6      0.999       1      0.845           1.16
 7 mu         0.7      1.00        0.999  0.870           1.22
 8 mu         0.8      0.990       1      0.657           1.45
 9 mu         0.9      0.950       0.971  0.150           2.25
10 mu_1       0.1      0.715       0.279  0.0000235      10.6 
11 mu_1       0.2      0.896       0.674  0.00477        11.0 
12 mu_1       0.3      0.977       0.917  0.0661          6.63
13 mu_1       0.4      0.989       0.965  0.288           2.67
14 mu_1       0.5      0.996       0.992  0.645           1.38
15 mu_1       0.6      1.00        1.00   0.875           1.14
16 mu_1       0.7      1.00        1      0.844           1.25
17 mu_1       0.8      0.988       0.993  0.606           1.49
18 mu_1       0.9      0.948       0.967  0.129           2.40
19 mu_0       0.1      0.495       0.0700 0.00000252     11.8 
20 mu_0       0.2      0.751       0.330  0.00110         9.21
21 mu_0       0.3      0.915       0.682  0.0247          9.03
22 mu_0       0.4      0.966       0.891  0.154           4.67
23 mu_0       0.5      0.982       0.968  0.453           1.92
24 mu_0       0.6      0.995       0.989  0.800           1.25
25 mu_0       0.7      1.00        1      0.894           1.18
26 mu_0       0.8      0.999       0.998  0.771           1.32
27 mu_0       0.9      0.973       0.974  0.340           1.78
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.10    0.0000211   4.51e-14     34.9 
 2 mu         0.2      3.61    0.00294     4.67e- 9    201.  
 3 mu         0.3      4.03    0.0437      3.52e- 6    235.  
 4 mu         0.4      2.58    0.218       3.44e- 4    114.  
 5 mu         0.5      1.53    0.596       1.06e- 2     27.2 
 6 mu         0.6      1.19    0.961       1.51e- 1      7.80
 7 mu         0.7      1.08    1.01        1.15e- 1      3.15
 8 mu         0.8      0.981   0.581       7.65e- 4      7.20
 9 mu         0.9      0.923   0.102       8.41e- 8     33.3 
10 mu_1       0.1      2.63    0.000140    4.03e-13     85.8 
11 mu_1       0.2      4.59    0.00942     2.09e- 8    264.  
12 mu_1       0.3      3.61    0.0950      1.05e- 5    206.  
13 mu_1       0.4      2.02    0.387       7.70e- 4     75.2 
14 mu_1       0.5      1.31    0.765       1.90e- 2     14.3 
15 mu_1       0.6      1.13    0.961       2.25e- 1      5.20
16 mu_1       0.7      1.05    0.999       4.13e- 2      3.38
17 mu_1       0.8      0.963   0.494       2.52e- 4      9.00
18 mu_1       0.9      0.920   0.0731      2.46e- 8     37.0 
19 mu_0       0.1      0.926   0.00000710  0            30.2 
20 mu_0       0.2      3.37    0.00116     0           185.  
21 mu_0       0.3      4.21    0.0200      0           247.  
22 mu_0       0.4      2.95    0.116       0           140.  
23 mu_0       0.5      1.75    0.383       0            40.1 
24 mu_0       0.6      1.27    0.815       0            11.7 
25 mu_0       0.7      1.13    1.03        0             5.14
26 mu_0       0.8      1.05    0.979       0             3.54
27 mu_0       0.9      0.948   0.332       0             9.77
[1] "Total run time was 69.077 seconds"
