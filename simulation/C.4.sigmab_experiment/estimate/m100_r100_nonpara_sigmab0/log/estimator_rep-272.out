
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1190"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 8  9  5  5  9  8  4  7  5  5  8 10  3  6  2  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.06475 0.41235 0.65439 1.00000 7.00000 
[1] "event indicator table: "

  0   1 
640 550 
[1] "treatment indicator table: "

  0   1 
418 772 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 608
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 32"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 582
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 96"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 188.569 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.354 0.181
 2 mu         0.1   0.2 0.414 0.226
 3 mu         0.1   0.3 0.542 0.262
 4 mu         0.1   0.4 0.551 0.289
 5 mu         0.1   0.5 0.624 0.305
 6 mu         0.2   0.1 0.337 0.153
 7 mu         0.2   0.2 0.391 0.191
 8 mu         0.2   0.3 0.488 0.220
 9 mu         0.2   0.4 0.504 0.245
10 mu         0.2   0.5 0.577 0.258
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      6.25         0.150 0.0000652    553.  
 2 mu         0.2      2.78         0.562 0.0105       189.  
 3 mu         0.3      1.32         0.896 0.115         39.4 
 4 mu         0.4      1.04         0.994 0.368          6.45
 5 mu         0.5      1.01         1     0.626          1.65
 6 mu         0.6      1.01         1.01  0.829          1.16
 7 mu         0.7      0.999        1     0.742          1.17
 8 mu         0.8      0.985        1     0.471          1.73
 9 mu         0.9      0.956        0.998 0.150          3.47
10 mu_1       0.1      4.45         0.413 0.000297     346.  
11 mu_1       0.2      1.54         0.827 0.0243        59.8 
12 mu_1       0.3      1.06         0.993 0.183          9.34
13 mu_1       0.4      1.02         1     0.472          2.19
14 mu_1       0.5      1.01         1     0.706          1.30
15 mu_1       0.6      1.01         1.00  0.866          1.13
16 mu_1       0.7      0.996        1     0.675          1.19
17 mu_1       0.8      0.982        1     0.409          1.85
18 mu_1       0.9      0.951        0.985 0.128          3.56
19 mu_0       0.1      6.45         0.120 0.0000395    576.  
20 mu_0       0.2      3.09         0.476 0.00703      222.  
21 mu_0       0.3      1.43         0.815 0.0855        52.2 
22 mu_0       0.4      1.05         0.966 0.298          9.29
23 mu_0       0.5      1.02         1     0.546          2.09
24 mu_0       0.6      1.01         1     0.763          1.20
25 mu_0       0.7      1.01         1     0.833          1.17
26 mu_0       0.8      0.996        1     0.681          1.28
27 mu_0       0.9      1.00         1     0.319          2.63
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.120     0.0000369  9.56e-13      2.85
 2 mu         0.2     0.632     0.00436    4.40e- 8     19.7 
 3 mu         0.3     1.20      0.0535     1.94e- 5     26.4 
 4 mu         0.4     1.38      0.221      1.22e- 3     26.1 
 5 mu         0.5     1.24      0.554      2.50e- 2     17.5 
 6 mu         0.6     1.12      0.915      2.37e- 1      5.16
 7 mu         0.7     1.09      0.991      3.00e- 2      3.56
 8 mu         0.8     0.984     0.527      3.01e- 4      7.32
 9 mu         0.9     0.635     0.0990     6.62e- 8      8.46
10 mu_1       0.1     0.407     0.000241   8.05e-12      7.91
11 mu_1       0.2     1.08      0.0145     1.85e- 7     27.4 
12 mu_1       0.3     1.46      0.121      5.44e- 5     24.4 
13 mu_1       0.4     1.39      0.357      2.56e- 3     26.1 
14 mu_1       0.5     1.18      0.733      4.21e- 2     14.0 
15 mu_1       0.6     1.09      0.988      2.71e- 1      3.44
16 mu_1       0.7     1.08      0.904      1.19e- 2      4.30
17 mu_1       0.8     0.949     0.407      1.04e- 4      7.93
18 mu_1       0.9     0.602     0.0647     2.04e- 8      8.96
19 mu_0       0.1     0.0882    0.0000132  0             2.29
20 mu_0       0.2     0.520     0.00196    0            17.8 
21 mu_0       0.3     1.09      0.0217     0            27.2 
22 mu_0       0.4     1.36      0.115      0            26.1 
23 mu_0       0.5     1.29      0.373      0            21.0 
24 mu_0       0.6     1.16      0.774      0             7.74
25 mu_0       0.7     1.14      1.09       0             2.71
26 mu_0       0.8     1.12      0.932      0             5.28
27 mu_0       0.9     0.940     0.305      0            11.3 
[1] "Total run time was 193.202 seconds"
