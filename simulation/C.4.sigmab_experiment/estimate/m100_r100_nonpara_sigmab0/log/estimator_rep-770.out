
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1298"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 1  2  7  4 11  7 12  7  3  3 10 11  6  5  4  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04498 0.35589 0.60095 1.00000 4.61692 
[1] "event indicator table: "

  0   1 
774 524 
[1] "treatment indicator table: "

  0   1 
437 861 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 646
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 652
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 71.48 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.378 0.101 
 2 mu         0.1   0.2 0.419 0.0901
 3 mu         0.1   0.3 0.531 0.144 
 4 mu         0.1   0.4 0.530 0.143 
 5 mu         0.1   0.5 0.609 0.130 
 6 mu         0.2   0.1 0.358 0.0893
 7 mu         0.2   0.2 0.396 0.0783
 8 mu         0.2   0.3 0.509 0.130 
 9 mu         0.2   0.4 0.513 0.128 
10 mu         0.2   0.5 0.583 0.117 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      0.505       0.0473 0.000000902      8.42
 2 mu         0.2      0.891       0.338  0.000436        14.9 
 3 mu         0.3      1.10        0.678  0.0110          20.0 
 4 mu         0.4      1.10        0.888  0.0776          13.9 
 5 mu         0.5      1.04        0.968  0.262            6.15
 6 mu         0.6      1.01        0.999  0.541            2.25
 7 mu         0.7      1.01        1.01   0.803            1.28
 8 mu         0.8      1.00        1.01   0.466            1.58
 9 mu         0.9      0.969       0.889  0.0557           3.01
10 mu_1       0.1      0.772       0.159  0.00000534       8.59
11 mu_1       0.2      1.06        0.584  0.00130         21.3 
12 mu_1       0.3      1.14        0.847  0.0221          19.1 
13 mu_1       0.4      1.08        0.938  0.120           10.2 
14 mu_1       0.5      1.02        0.983  0.334            3.99
15 mu_1       0.6      1.00        0.996  0.609            1.67
16 mu_1       0.7      1.01        1.00   0.838            1.33
17 mu_1       0.8      0.999       1      0.413            1.62
18 mu_1       0.9      0.964       0.883  0.0454           3.14
19 mu_0       0.1      0.476       0.0352 0.000000410      8.41
20 mu_0       0.2      0.848       0.271  0.000220        13.3 
21 mu_0       0.3      1.08        0.590  0.00621         20.3 
22 mu_0       0.4      1.12        0.827  0.0496          16.3 
23 mu_0       0.5      1.06        0.936  0.190            8.31
24 mu_0       0.6      1.01        0.997  0.438            3.13
25 mu_0       0.7      1.00        1      0.713            1.43
26 mu_0       0.8      1.01        1.00   0.675            1.45
27 mu_0       0.9      1.01        1.01   0.149            1.91
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.230   0.00000668  5.32e-12      18.4
 2 mu         0.2      0.988   0.00152     1.22e- 7      72.6
 3 mu         0.3      1.74    0.0389      3.59e- 5     110. 
 4 mu         0.4      2.12    0.214       1.69e- 3     103. 
 5 mu         0.5      2.02    0.540       2.78e- 2      67.6
 6 mu         0.6      1.65    0.967       2.20e- 1      30.6
 7 mu         0.7      1.43    1.15        1.50e- 1      10.9
 8 mu         0.8      1.41    0.774       8.43e- 3      18.2
 9 mu         0.9      1.32    0.133       2.64e- 5      42.2
10 mu_1       0.1      0.762   0.0000481   4.43e-11      61.3
11 mu_1       0.2      1.67    0.00494     5.10e- 7     121. 
12 mu_1       0.3      2.09    0.0820      9.98e- 5     122. 
13 mu_1       0.4      2.11    0.366       3.53e- 3      86.1
14 mu_1       0.5      1.84    0.745       4.64e- 2      46.7
15 mu_1       0.6      1.52    1.06        3.05e- 1      22.5
16 mu_1       0.7      1.40    1.10        7.81e- 2      12.4
17 mu_1       0.8      1.41    0.709       3.24e- 3      18.2
18 mu_1       0.9      1.34    0.0944      9.02e- 6      46.9
19 mu_0       0.1      0.171   0.00000203  0             13.6
20 mu_0       0.2      0.817   0.000641    0             60.5
21 mu_0       0.3      1.59    0.0175      0            105. 
22 mu_0       0.4      2.12    0.111       0            115. 
23 mu_0       0.5      2.19    0.344       0             90.1
24 mu_0       0.6      1.85    0.720       0             51.0
25 mu_0       0.7      1.50    1.10        0             19.2
26 mu_0       0.8      1.44    1.03        0             18.2
27 mu_0       0.9      1.17    0.362       0             14.9
[1] "Total run time was 73.633 seconds"
