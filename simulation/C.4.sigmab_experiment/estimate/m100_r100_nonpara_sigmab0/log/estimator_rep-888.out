
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1270"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 3  5  6  7  6  6 11  6  6  7  3 10  8  6  5  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03263 0.34391 0.61115 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
763 507 
[1] "treatment indicator table: "

  0   1 
425 845 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 607
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 65"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 663
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 41"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 103.169 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.424 0.172
 2 mu         0.1   0.2 0.429 0.178
 3 mu         0.1   0.3 0.670 0.225
 4 mu         0.1   0.4 0.722 0.223
 5 mu         0.1   0.5 0.722 0.224
 6 mu         0.2   0.1 0.438 0.202
 7 mu         0.2   0.2 0.451 0.210
 8 mu         0.2   0.3 0.635 0.258
 9 mu         0.2   0.4 0.703 0.263
10 mu         0.2   0.5 0.702 0.267
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      1.37        0.0516 0.000000510     73.6 
 2 mu         0.2      2.55        0.371  0.000421       179.  
 3 mu         0.3      1.99        0.713  0.0134         108.  
 4 mu         0.4      1.28        0.967  0.104           29.9 
 5 mu         0.5      1.04        1      0.357            5.12
 6 mu         0.6      0.996       1      0.699            1.32
 7 mu         0.7      0.992       1      0.818            1.10
 8 mu         0.8      0.993       1      0.555            1.44
 9 mu         0.9      1.02        0.994  0.189            4.41
10 mu_1       0.1      2.04        0.163  0.00000284     147.  
11 mu_1       0.2      2.62        0.630  0.00119        179.  
12 mu_1       0.3      1.68        0.897  0.0256          72.2 
13 mu_1       0.4      1.14        1      0.154           15.7 
14 mu_1       0.5      1.01        1.00   0.438            2.80
15 mu_1       0.6      0.991       1.00   0.764            1.18
16 mu_1       0.7      0.991       1      0.769            1.10
17 mu_1       0.8      0.993       1      0.524            1.54
18 mu_1       0.9      1.02        0.981  0.164            4.79
19 mu_0       0.1      1.29        0.0384 0.000000252     65.5 
20 mu_0       0.2      2.53        0.296  0.000229       179.  
21 mu_0       0.3      2.12        0.624  0.00812        123.  
22 mu_0       0.4      1.37        0.930  0.0713          39.4 
23 mu_0       0.5      1.06        1      0.275            7.43
24 mu_0       0.6      1.00        1.00   0.602            1.60
25 mu_0       0.7      0.993       0.997  0.809            1.13
26 mu_0       0.8      0.992       1      0.680            1.20
27 mu_0       0.9      0.976       0.994  0.408            1.55
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.243   0.0000287   3.10e-13     22.6 
 2 mu         0.2      0.664   0.00349     1.60e- 8     55.7 
 3 mu         0.3      0.799   0.0348      8.06e- 6     49.4 
 4 mu         0.4      0.828   0.157       5.91e- 4     25.1 
 5 mu         0.5      0.906   0.485       1.46e- 2      7.91
 6 mu         0.6      0.985   0.914       1.73e- 1      3.56
 7 mu         0.7      0.994   0.967       1.31e- 1      2.15
 8 mu         0.8      0.861   0.697       3.40e- 3      4.39
 9 mu         0.9      0.591   0.135       4.73e- 6     16.0 
10 mu_1       0.1      0.589   0.000196    2.75e-12     52.2 
11 mu_1       0.2      0.867   0.0112      7.13e- 8     64.3 
12 mu_1       0.3      0.841   0.0842      2.39e- 5     38.0 
13 mu_1       0.4      0.865   0.285       1.31e- 3     14.5 
14 mu_1       0.5      0.951   0.673       2.59e- 2      5.15
15 mu_1       0.6      1.01    0.986       2.56e- 1      2.97
16 mu_1       0.7      0.981   0.957       4.33e- 2      2.60
17 mu_1       0.8      0.823   0.586       9.80e- 4      5.49
18 mu_1       0.9      0.567   0.106       1.21e- 6     17.8 
19 mu_0       0.1      0.205   0.00000956  0            19.3 
20 mu_0       0.2      0.613   0.00118     0            53.5 
21 mu_0       0.3      0.780   0.0128      0            54.3 
22 mu_0       0.4      0.804   0.0756      0            32.2 
23 mu_0       0.5      0.862   0.300       0            12.2 
24 mu_0       0.6      0.953   0.722       0             4.45
25 mu_0       0.7      1.02    1.05        0             2.82
26 mu_0       0.8      1.01    0.949       0             3.20
27 mu_0       0.9      0.806   0.408       0             7.87
[1] "Total run time was 105.397 seconds"
