
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1297"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  6  7  2  6  4  4 10 10  8  4  7  7  6  8  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02176 0.33526 0.57457 1.00000 4.00000 
[1] "event indicator table: "

  0   1 
797 500 
[1] "treatment indicator table: "

  0   1 
487 810 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 616
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 76"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 681
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 51"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 91.551 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.428 0.104 
 2 mu         0.1   0.2 0.467 0.107 
 3 mu         0.1   0.3 0.683 0.192 
 4 mu         0.1   0.4 0.685 0.171 
 5 mu         0.1   0.5 0.693 0.165 
 6 mu         0.2   0.1 0.373 0.0612
 7 mu         0.2   0.2 0.420 0.0551
 8 mu         0.2   0.3 0.615 0.133 
 9 mu         0.2   0.4 0.628 0.109 
10 mu         0.2   0.5 0.643 0.0997
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.631        0.214  0.000230     16.7 
 2 mu         0.2      0.868        0.676  0.0139        6.41
 3 mu         0.3      0.986        0.943  0.105         3.42
 4 mu         0.4      1.01         1      0.325         1.68
 5 mu         0.5      1.01         1      0.598         1.27
 6 mu         0.6      0.995        1      0.821         1.10
 7 mu         0.7      0.991        0.997  0.819         1.17
 8 mu         0.8      0.990        0.982  0.568         1.52
 9 mu         0.9      0.977        0.874  0.151         3.31
10 mu_1       0.1      0.771        0.520  0.000991      7.94
11 mu_1       0.2      0.957        0.937  0.0316        4.80
12 mu_1       0.3      1.01         1      0.170         2.22
13 mu_1       0.4      1.01         1.00   0.420         1.54
14 mu_1       0.5      1.00         1      0.674         1.22
15 mu_1       0.6      0.992        0.998  0.866         1.06
16 mu_1       0.7      0.990        0.996  0.790         1.22
17 mu_1       0.8      0.989        0.979  0.527         1.61
18 mu_1       0.9      0.976        0.858  0.132         3.54
19 mu_0       0.1      0.615        0.177  0.000145     18.4 
20 mu_0       0.2      0.845        0.599  0.00942       7.75
21 mu_0       0.3      0.977        0.893  0.0776        3.93
22 mu_0       0.4      1.02         1      0.262         1.98
23 mu_0       0.5      1.01         1.00   0.523         1.42
24 mu_0       0.6      1.00         1      0.752         1.18
25 mu_0       0.7      0.993        1      0.879         1.08
26 mu_0       0.8      0.992        1      0.706         1.27
27 mu_0       0.9      0.989        0.977  0.321         1.95
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.100     0.0000531  4.20e-13      7.58
 2 mu         0.2     0.254     0.00710    2.18e- 8     13.3 
 3 mu         0.3     0.473     0.0936     1.09e- 5     11.8 
 4 mu         0.4     0.764     0.392      8.02e- 4      7.10
 5 mu         0.5     1.00      0.827      1.98e- 2      3.16
 6 mu         0.6     1.07      1.04       2.23e- 1      2.54
 7 mu         0.7     1.01      0.937      1.21e- 1      4.12
 8 mu         0.8     0.953     0.431      4.65e- 3      9.07
 9 mu         0.9     0.704     0.0370     6.56e- 6     11.6 
10 mu_1       0.1     0.260     0.000332   3.74e-12     16.9 
11 mu_1       0.2     0.400     0.0233     9.67e- 8     14.8 
12 mu_1       0.3     0.629     0.196      3.24e- 5      8.70
13 mu_1       0.4     0.898     0.609      1.78e- 3      4.22
14 mu_1       0.5     1.06      1.03       3.52e- 2      2.93
15 mu_1       0.6     1.06      1.04       2.97e- 1      2.30
16 mu_1       0.7     0.990     0.863      5.39e- 2      4.85
17 mu_1       0.8     0.928     0.333      2.62e- 3      9.55
18 mu_1       0.9     0.666     0.0264     3.28e- 6     11.9 
19 mu_0       0.1     0.0828    0.0000213  5.19e-14      6.55
20 mu_0       0.2     0.217     0.00331    3.02e- 9     12.9 
21 mu_0       0.3     0.406     0.0479     1.74e- 6     13.1 
22 mu_0       0.4     0.675     0.260      1.49e- 4      9.20
23 mu_0       0.5     0.940     0.682      4.40e- 3      4.82
24 mu_0       0.6     1.08      1.02       4.86e- 2      2.93
25 mu_0       0.7     1.07      1.01       2.22e- 1      2.49
26 mu_0       0.8     1.05      0.828      1.28e- 2      7.16
27 mu_0       0.9     1.05      0.133      3.61e- 5     11.8 
[1] "Total run time was 94.549 seconds"
