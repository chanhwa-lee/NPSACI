
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1120"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 8 12 12  6  6  4  7  5 10  4  3  5  5  4  3  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03814 0.35941 0.62006 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
635 485 
[1] "treatment indicator table: "

  0   1 
404 716 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 556
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 564
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 82"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 130.382 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.515 0.109 
 2 mu         0.1   0.2 0.597 0.138 
 3 mu         0.1   0.3 0.599 0.139 
 4 mu         0.1   0.4 0.623 0.147 
 5 mu         0.1   0.5 0.634 0.150 
 6 mu         0.2   0.1 0.457 0.0733
 7 mu         0.2   0.2 0.526 0.0939
 8 mu         0.2   0.3 0.537 0.0951
 9 mu         0.2   0.4 0.556 0.0998
10 mu         0.2   0.5 0.573 0.103 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.609        0.175  0.000198     10.1 
 2 mu         0.2      0.913        0.604  0.0122       11.9 
 3 mu         0.3      1.02         0.859  0.0958        7.78
 4 mu         0.4      1.00         0.983  0.311         3.99
 5 mu         0.5      0.990        1      0.615         1.59
 6 mu         0.6      0.995        1      0.864         1.09
 7 mu         0.7      0.999        1      0.895         1.12
 8 mu         0.8      0.997        1      0.733         1.39
 9 mu         0.9      1.00         1      0.353         2.38
10 mu_1       0.1      0.865        0.501  0.000857     12.6 
11 mu_1       0.2      1.04         0.900  0.0280       11.4 
12 mu_1       0.3      1.04         1      0.156         6.64
13 mu_1       0.4      1.00         1      0.409         2.88
14 mu_1       0.5      0.992        1      0.706         1.30
15 mu_1       0.6      0.998        1      0.920         1.09
16 mu_1       0.7      1.00         1      0.872         1.14
17 mu_1       0.8      0.997        1      0.703         1.43
18 mu_1       0.9      1.00         1      0.322         2.53
19 mu_0       0.1      0.580        0.140  0.000125     10.4 
20 mu_0       0.2      0.881        0.518  0.00827      12.0 
21 mu_0       0.3      1.01         0.838  0.0700        8.79
22 mu_0       0.4      1.01         0.984  0.246         4.73
23 mu_0       0.5      0.987        1      0.524         1.92
24 mu_0       0.6      0.991        1      0.760         1.17
25 mu_0       0.7      0.999        1      0.926         1.11
26 mu_0       0.8      0.999        1      0.842         1.23
27 mu_0       0.9      1.01         1      0.524         1.66
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.187    0.000146   7.50e-15     10.1 
 2 mu         0.2      0.467    0.0118     1.55e- 9     11.2 
 3 mu         0.3      0.899    0.0852     1.76e- 6     13.8 
 4 mu         0.4      1.20     0.276      2.29e- 4     18.9 
 5 mu         0.5      1.20     0.655      8.83e- 3     12.1 
 6 mu         0.6      1.12     1.00       1.51e- 1      3.73
 7 mu         0.7      1.09     1.05       1.85e- 1      2.81
 8 mu         0.8      1.03     0.622      4.15e- 3      6.68
 9 mu         0.9      0.897    0.114      2.60e- 6     13.9 
10 mu_1       0.1      0.446    0.000773   6.75e-14     16.8 
11 mu_1       0.2      0.733    0.0385     6.99e- 9     10.2 
12 mu_1       0.3      1.12     0.201      5.28e- 6     17.8 
13 mu_1       0.4      1.26     0.478      5.16e- 4     18.4 
14 mu_1       0.5      1.18     0.823      1.59e- 2      9.44
15 mu_1       0.6      1.11     1.07       2.26e- 1      3.32
16 mu_1       0.7      1.08     1.00       6.90e- 2      3.44
17 mu_1       0.8      1.02     0.493      2.07e- 3      7.51
18 mu_1       0.9      0.887    0.0880     1.15e- 6     14.5 
19 mu_0       0.1      0.158    0.0000473  0             9.32
20 mu_0       0.2      0.401    0.00463    0            11.6 
21 mu_0       0.3      0.806    0.0322     0            12.0 
22 mu_0       0.4      1.15     0.159      0            19.3 
23 mu_0       0.5      1.21     0.453      0            14.8 
24 mu_0       0.6      1.12     0.862      0             5.71
25 mu_0       0.7      1.09     1.03       0             2.76
26 mu_0       0.8      1.06     1.05       0             4.43
27 mu_0       0.9      0.988    0.326      0            13.9 
[1] "Total run time was 132.855 seconds"
