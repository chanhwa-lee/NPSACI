
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1272"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 8  5  5  8  3  5  6  6  7  9  7  5  4  6 10  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04981 0.40077 0.63817 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
765 507 
[1] "treatment indicator table: "

  0   1 
434 838 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 651
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 621
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 38"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 422.394 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.367 0.0831
 2 mu         0.1   0.2 0.497 0.101 
 3 mu         0.1   0.3 0.539 0.0991
 4 mu         0.1   0.4 0.616 0.105 
 5 mu         0.1   0.5 0.638 0.104 
 6 mu         0.2   0.1 0.343 0.0771
 7 mu         0.2   0.2 0.451 0.0884
 8 mu         0.2   0.3 0.499 0.0840
 9 mu         0.2   0.4 0.587 0.0937
10 mu         0.2   0.5 0.606 0.0896
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.343       0.0938 0.0000721      2.60
 2 mu         0.2      0.621       0.437  0.0121         2.84
 3 mu         0.3      0.816       0.764  0.119          2.57
 4 mu         0.4      0.916       0.891  0.323          1.84
 5 mu         0.5      0.959       0.964  0.584          1.36
 6 mu         0.6      0.984       0.990  0.827          1.08
 7 mu         0.7      1.01        1.00   0.867          1.11
 8 mu         0.8      1.02        1      0.753          1.40
 9 mu         0.9      1.00        1      0.288          2.56
10 mu_1       0.1      0.553       0.290  0.000330       3.80
11 mu_1       0.2      0.769       0.671  0.0281         3.18
12 mu_1       0.3      0.888       0.879  0.183          2.15
13 mu_1       0.4      0.944       0.945  0.409          1.62
14 mu_1       0.5      0.970       0.984  0.662          1.22
15 mu_1       0.6      0.992       0.997  0.853          1.07
16 mu_1       0.7      1.01        1.01   0.855          1.14
17 mu_1       0.8      1.02        1      0.725          1.46
18 mu_1       0.9      0.998       0.983  0.260          2.64
19 mu_0       0.1      0.319       0.0724 0.0000435      2.47
20 mu_0       0.2      0.584       0.381  0.00806        2.96
21 mu_0       0.3      0.785       0.713  0.0891         2.75
22 mu_0       0.4      0.898       0.866  0.266          1.98
23 mu_0       0.5      0.947       0.948  0.506          1.50
24 mu_0       0.6      0.973       0.986  0.754          1.16
25 mu_0       0.7      0.995       1.00   0.883          1.10
26 mu_0       0.8      1.02        1.01   0.788          1.22
27 mu_0       0.9      1.04        1.00   0.542          1.85
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.242   0.0000102   4.98e-15      9.25
 2 mu         0.2      0.500   0.00189     1.03e- 9     18.2 
 3 mu         0.3      0.753   0.0369      1.17e- 6     18.4 
 4 mu         0.4      0.939   0.226       1.52e- 4     13.0 
 5 mu         0.5      1.03    0.678       4.49e- 3      6.80
 6 mu         0.6      1.04    0.987       5.76e- 2      3.98
 7 mu         0.7      1.01    1.03        1.68e- 1      2.35
 8 mu         0.8      1.03    0.593       5.67e- 3      6.79
 9 mu         0.9      1.07    0.106       7.20e- 6     16.8 
10 mu_1       0.1      0.573   0.0000738   4.49e-14     23.1 
11 mu_1       0.2      0.700   0.00634     4.65e- 9     22.8 
12 mu_1       0.3      0.854   0.0790      3.50e- 6     15.4 
13 mu_1       0.4      0.968   0.351       3.42e- 4      8.72
14 mu_1       0.5      1.02    0.873       8.97e- 3      5.52
15 mu_1       0.6      1.02    1.02        9.60e- 2      3.32
16 mu_1       0.7      1.00    0.981       7.99e- 2      3.07
17 mu_1       0.8      1.03    0.463       2.36e- 3      7.78
18 mu_1       0.9      1.07    0.0751      3.11e- 6     18.7 
19 mu_0       0.1      0.205   0.00000261  0             7.71
20 mu_0       0.2      0.450   0.000834    0            17.1 
21 mu_0       0.3      0.709   0.0188      0            19.7 
22 mu_0       0.4      0.920   0.135       0            16.2 
23 mu_0       0.5      1.03    0.486       0            10.2 
24 mu_0       0.6      1.06    0.919       0             4.98
25 mu_0       0.7      1.03    1.08        0             2.28
26 mu_0       0.8      1.00    0.985       0             2.83
27 mu_0       0.9      1.08    0.308       0            10.9 
[1] "Total run time was 431.298 seconds"
