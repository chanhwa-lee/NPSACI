
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1338"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 7  3  5  6  3  6  6  4  7  5 10  5  7 10  9  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04277 0.41230 0.66484 1.00000 6.00000 
[1] "event indicator table: "

  0   1 
777 561 
[1] "treatment indicator table: "

  0   1 
477 861 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 687
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 651
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 30"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 135.317 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.316 0.118 
 2 mu         0.1   0.2 0.381 0.165 
 3 mu         0.1   0.3 0.415 0.194 
 4 mu         0.1   0.4 0.429 0.215 
 5 mu         0.1   0.5 0.538 0.192 
 6 mu         0.2   0.1 0.307 0.0844
 7 mu         0.2   0.2 0.376 0.120 
 8 mu         0.2   0.3 0.399 0.138 
 9 mu         0.2   0.4 0.435 0.153 
10 mu         0.2   0.5 0.536 0.136 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.511       0.0887 0.0000362     18.7 
 2 mu         0.2      0.890       0.442  0.00677       18.0 
 3 mu         0.3      1.01        0.771  0.0853         8.41
 4 mu         0.4      1.02        0.944  0.333          3.13
 5 mu         0.5      1.02        1      0.671          1.83
 6 mu         0.6      1.01        1.00   0.885          1.27
 7 mu         0.7      1.00        1      0.809          1.27
 8 mu         0.8      0.985       0.995  0.623          1.40
 9 mu         0.9      0.946       0.908  0.193          4.86
10 mu_1       0.1      0.833       0.275  0.000174      26.0 
11 mu_1       0.2      1.03        0.677  0.0166        13.3 
12 mu_1       0.3      1.04        0.900  0.143          4.71
13 mu_1       0.4      1.03        1      0.435          2.55
14 mu_1       0.5      1.02        1      0.755          1.52
15 mu_1       0.6      1.01        1.00   0.905          1.24
16 mu_1       0.7      1.00        1      0.775          1.30
17 mu_1       0.8      0.982       0.987  0.580          1.46
18 mu_1       0.9      0.943       0.883  0.171          5.32
19 mu_0       0.1      0.475       0.0692 0.0000208     17.9 
20 mu_0       0.2      0.856       0.372  0.00432       19.2 
21 mu_0       0.3      0.999       0.700  0.0607        10.1 
22 mu_0       0.4      1.02        0.901  0.265          3.68
23 mu_0       0.5      1.02        1      0.587          2.13
24 mu_0       0.6      1.01        1      0.805          1.36
25 mu_0       0.7      1.01        1      0.887          1.21
26 mu_0       0.8      1.00        1      0.655          1.34
27 mu_0       0.9      0.972       0.995  0.388          1.59
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.225   0.0000296   5.83e-14     16.2 
 2 mu         0.2      0.558   0.00303     6.79e- 9     25.3 
 3 mu         0.3      0.925   0.0561      5.85e- 6     20.6 
 4 mu         0.4      1.15    0.266       6.67e- 4     24.3 
 5 mu         0.5      1.18    0.615       2.47e- 2     15.8 
 6 mu         0.6      1.13    0.948       1.92e- 1      7.31
 7 mu         0.7      1.13    0.994       1.03e- 1      4.52
 8 mu         0.8      1.36    0.491       2.33e- 3     29.2 
 9 mu         0.9      2.12    0.0578      2.05e- 6    108.  
10 mu_1       0.1      0.503   0.000189    5.50e-13     32.4 
11 mu_1       0.2      0.766   0.0102      3.21e- 8     25.3 
12 mu_1       0.3      1.06    0.113       1.84e- 5     25.3 
13 mu_1       0.4      1.20    0.397       1.58e- 3     22.4 
14 mu_1       0.5      1.19    0.812       4.67e- 2     14.1 
15 mu_1       0.6      1.14    1.04        2.27e- 1      5.42
16 mu_1       0.7      1.15    0.891       3.46e- 2      6.10
17 mu_1       0.8      1.42    0.392       9.11e- 4     34.4 
18 mu_1       0.9      2.16    0.0434      7.12e- 7    113.  
19 mu_0       0.1      0.194   0.00000627  0            14.4 
20 mu_0       0.2      0.506   0.00143     0            25.3 
21 mu_0       0.3      0.867   0.0275      0            22.3 
22 mu_0       0.4      1.12    0.129       0            25.6 
23 mu_0       0.5      1.17    0.421       0            17.6 
24 mu_0       0.6      1.11    0.881       0            10.2 
25 mu_0       0.7      1.07    1.01        0             3.14
26 mu_0       0.8      1.13    0.828       0             8.10
27 mu_0       0.9      1.73    0.204       0            60.0 
[1] "Total run time was 139.042 seconds"
