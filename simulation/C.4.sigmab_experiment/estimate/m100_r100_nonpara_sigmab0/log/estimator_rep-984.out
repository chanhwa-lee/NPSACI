
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1233"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 7  5  9  3 11  6  3  8  3  7  6 10  6  5  6  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02791 0.28747 0.55507 0.87988 5.00000 
[1] "event indicator table: "

  0   1 
726 507 
[1] "treatment indicator table: "

  0   1 
466 767 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 618
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 78"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 615
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 35"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 48"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 154.28 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.363 0.0902
 2 mu         0.1   0.2 0.582 0.0885
 3 mu         0.1   0.3 0.626 0.0986
 4 mu         0.1   0.4 0.685 0.101 
 5 mu         0.1   0.5 0.756 0.128 
 6 mu         0.2   0.1 0.368 0.0682
 7 mu         0.2   0.2 0.515 0.0577
 8 mu         0.2   0.3 0.549 0.0573
 9 mu         0.2   0.4 0.592 0.0588
10 mu         0.2   0.5 0.646 0.0715
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.495        0.192  0.000253      3.33
 2 mu         0.2      0.775        0.593  0.0220        3.49
 3 mu         0.3      0.913        0.881  0.174         2.95
 4 mu         0.4      0.971        1      0.495         1.89
 5 mu         0.5      0.994        1      0.738         1.29
 6 mu         0.6      1.00         1      0.869         1.08
 7 mu         0.7      1.00         1.00   0.837         1.16
 8 mu         0.8      1.00         1      0.711         1.60
 9 mu         0.9      0.979        1      0.152         4.18
10 mu_1       0.1      0.721        0.507  0.00114       4.17
11 mu_1       0.2      0.892        0.852  0.0501        3.64
12 mu_1       0.3      0.958        0.959  0.273         2.54
13 mu_1       0.4      0.988        1      0.613         1.60
14 mu_1       0.5      0.999        1      0.821         1.19
15 mu_1       0.6      1.00         1.00   0.863         1.08
16 mu_1       0.7      1.01         1      0.829         1.20
17 mu_1       0.8      1.00         1.00   0.672         1.76
18 mu_1       0.9      0.978        0.997  0.129         4.52
19 mu_0       0.1      0.470        0.162  0.000155      3.55
20 mu_0       0.2      0.746        0.526  0.0150        3.62
21 mu_0       0.3      0.894        0.859  0.132         3.13
22 mu_0       0.4      0.961        0.991  0.417         2.08
23 mu_0       0.5      0.990        1      0.655         1.39
24 mu_0       0.6      0.999        1      0.788         1.16
25 mu_0       0.7      1.00         1      0.820         1.11
26 mu_0       0.8      1.00         0.991  0.826         1.26
27 mu_0       0.9      0.985        1      0.358         1.83
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.0784    0.000132   1.85e-14      2.73
 2 mu         0.2     0.357     0.0100     3.83e- 9      8.70
 3 mu         0.3     0.776     0.0915     4.33e- 6     22.8 
 4 mu         0.4     1.05      0.365      5.65e- 4     23.5 
 5 mu         0.5     1.10      0.787      1.41e- 2     12.1 
 6 mu         0.6     1.05      0.998      1.67e- 1      3.10
 7 mu         0.7     1.01      0.948      9.83e- 2      3.40
 8 mu         0.8     1.03      0.505      4.98e- 3     16.5 
 9 mu         0.9     1.01      0.0542     8.41e- 6     34.3 
10 mu_1       0.1     0.244     0.00101    1.66e-13      6.84
11 mu_1       0.2     0.630     0.0307     1.72e- 8     15.3 
12 mu_1       0.3     1.00      0.195      1.30e- 5     26.8 
13 mu_1       0.4     1.13      0.580      1.27e- 3     20.7 
14 mu_1       0.5     1.10      0.946      2.51e- 2      8.52
15 mu_1       0.6     1.04      1.01       2.48e- 1      2.24
16 mu_1       0.7     1.00      0.870      5.01e- 2      4.85
17 mu_1       0.8     1.03      0.373      2.23e- 3     18.5 
18 mu_1       0.9     0.994     0.0343     3.30e- 6     34.3 
19 mu_0       0.1     0.0600    0.0000463  0             2.28
20 mu_0       0.2     0.289     0.00459    0             7.03
21 mu_0       0.3     0.679     0.0381     0            21.1 
22 mu_0       0.4     0.995     0.243      0            25.3 
23 mu_0       0.5     1.10      0.597      0            15.6 
24 mu_0       0.6     1.06      0.960      0             5.01
25 mu_0       0.7     1.02      1.01       0             2.12
26 mu_0       0.8     1.02      0.885      0             8.23
27 mu_0       0.9     1.14      0.192      0            34.3 
[1] "Total run time was 159.173 seconds"
