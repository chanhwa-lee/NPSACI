
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1258"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  5  7  8 11  6  7  2  4  3  6  5  9 11  5  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03407 0.35781 0.60882 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
763 495 
[1] "treatment indicator table: "

  0   1 
440 818 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 650
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 38"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 608
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 255.862 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.314 0.159 
 2 mu         0.1   0.2 0.435 0.114 
 3 mu         0.1   0.3 0.583 0.141 
 4 mu         0.1   0.4 0.613 0.134 
 5 mu         0.1   0.5 0.620 0.132 
 6 mu         0.2   0.1 0.342 0.109 
 7 mu         0.2   0.2 0.423 0.0853
 8 mu         0.2   0.3 0.499 0.0731
 9 mu         0.2   0.4 0.544 0.0714
10 mu         0.2   0.5 0.551 0.0697
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.437       0.0872 0.0000835      5.03
 2 mu         0.2      0.673       0.392  0.0139         3.84
 3 mu         0.3      0.843       0.783  0.157          2.66
 4 mu         0.4      0.944       0.968  0.472          1.73
 5 mu         0.5      0.988       0.998  0.778          1.40
 6 mu         0.6      1.00        1      0.913          1.14
 7 mu         0.7      1.00        1.00   0.854          1.10
 8 mu         0.8      1.01        1      0.584          1.50
 9 mu         0.9      0.996       1      0.230          3.37
10 mu_1       0.1      0.600       0.268  0.000381       4.98
11 mu_1       0.2      0.789       0.643  0.0325         3.35
12 mu_1       0.3      0.909       0.916  0.249          2.01
13 mu_1       0.4      0.974       0.981  0.574          1.57
14 mu_1       0.5      0.997       1      0.825          1.32
15 mu_1       0.6      1.00        1      0.925          1.09
16 mu_1       0.7      1.01        1.00   0.816          1.14
17 mu_1       0.8      1.01        1      0.550          1.59
18 mu_1       0.9      0.994       1      0.208          3.56
19 mu_0       0.1      0.419       0.0679 0.0000504      5.44
20 mu_0       0.2      0.644       0.336  0.00930        3.96
21 mu_0       0.3      0.815       0.714  0.116          2.94
22 mu_0       0.4      0.924       0.936  0.403          1.92
23 mu_0       0.5      0.979       0.993  0.671          1.48
24 mu_0       0.6      0.996       1      0.816          1.22
25 mu_0       0.7      1.00        1      0.928          1.07
26 mu_0       0.8      1.01        1      0.719          1.24
27 mu_0       0.9      1.02        1      0.426          1.90
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.298   0.0000164   1.61e-13     22.8 
 2 mu         0.2      0.472   0.00432     9.38e- 9     22.5 
 3 mu         0.3      0.690   0.0546      5.39e- 6     20.6 
 4 mu         0.4      0.843   0.237       4.61e- 4     18.2 
 5 mu         0.5      0.927   0.601       1.37e- 2      8.25
 6 mu         0.6      0.989   0.969       2.02e- 1      3.97
 7 mu         0.7      1.04    1.01        1.28e- 1      2.60
 8 mu         0.8      1.11    0.615       2.19e- 3     10.1 
 9 mu         0.9      1.26    0.0771      1.08e- 6     33.2 
10 mu_1       0.1      0.507   0.000109    1.52e-12     32.6 
11 mu_1       0.2      0.580   0.0119      4.42e- 8     16.1 
12 mu_1       0.3      0.768   0.108       1.69e- 5     22.9 
13 mu_1       0.4      0.883   0.390       1.09e- 3     15.2 
14 mu_1       0.5      0.952   0.798       2.57e- 2      7.22
15 mu_1       0.6      1.01    0.978       2.51e- 1      2.89
16 mu_1       0.7      1.05    0.939       4.47e- 2      3.25
17 mu_1       0.8      1.13    0.480       9.13e- 4     11.9 
18 mu_1       0.9      1.27    0.0559      4.02e- 7     34.7 
19 mu_0       0.1      0.275   0.00000722  0            21.7 
20 mu_0       0.2      0.445   0.00151     0            24.1 
21 mu_0       0.3      0.657   0.0241      0            19.6 
22 mu_0       0.4      0.817   0.129       0            20.2 
23 mu_0       0.5      0.903   0.428       0            10.4 
24 mu_0       0.6      0.965   0.845       0             5.58
25 mu_0       0.7      1.01    1.03        0             1.77
26 mu_0       0.8      1.04    0.951       0             5.35
27 mu_0       0.9      1.16    0.226       0            19.5 
[1] "Total run time was 259.012 seconds"
