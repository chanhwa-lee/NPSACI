
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1281"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 8  3  6  9  6  3  9  4  5  3  5  8  7 11  9  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03687 0.37877 0.63196 1.00000 5.91947 
[1] "event indicator table: "

  0   1 
761 520 
[1] "treatment indicator table: "

  0   1 
456 825 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 673
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 65"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 608
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 92"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 155.317 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.503 0.164 
 2 mu         0.1   0.2 0.532 0.138 
 3 mu         0.1   0.3 0.567 0.136 
 4 mu         0.1   0.4 0.592 0.135 
 5 mu         0.1   0.5 0.601 0.134 
 6 mu         0.2   0.1 0.406 0.112 
 7 mu         0.2   0.2 0.485 0.0984
 8 mu         0.2   0.3 0.552 0.0985
 9 mu         0.2   0.4 0.586 0.103 
10 mu         0.2   0.5 0.592 0.0949
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.406       0.108  0.0000254      5.48
 2 mu         0.2      0.703       0.464  0.00532        6.08
 3 mu         0.3      0.902       0.827  0.0761         3.40
 4 mu         0.4      0.995       0.978  0.336          2.01
 5 mu         0.5      1.02        1      0.650          1.49
 6 mu         0.6      1.01        1      0.835          1.27
 7 mu         0.7      0.998       1      0.772          1.28
 8 mu         0.8      0.979       0.994  0.446          2.01
 9 mu         0.9      0.878       0.912  0.110          2.49
10 mu_1       0.1      0.663       0.316  0.000129       8.45
11 mu_1       0.2      0.851       0.753  0.0137         4.78
12 mu_1       0.3      0.965       0.963  0.134          2.53
13 mu_1       0.4      1.01        1      0.458          1.86
14 mu_1       0.5      1.02        1      0.726          1.39
15 mu_1       0.6      1.01        1      0.841          1.25
16 mu_1       0.7      0.996       1      0.725          1.36
17 mu_1       0.8      0.974       0.980  0.402          2.09
18 mu_1       0.9      0.868       0.886  0.0919         2.69
19 mu_0       0.1      0.378       0.0825 0.0000139      5.15
20 mu_0       0.2      0.666       0.396  0.00322        6.40
21 mu_0       0.3      0.874       0.750  0.0513         3.98
22 mu_0       0.4      0.983       0.956  0.255          2.18
23 mu_0       0.5      1.02        1      0.571          1.65
24 mu_0       0.6      1.01        1      0.775          1.29
25 mu_0       0.7      1.00        1      0.810          1.22
26 mu_0       0.8      1.00        1      0.606          1.68
27 mu_0       0.9      0.976       0.966  0.263          2.67
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.337   0.0000300   4.64e-12     29.4 
 2 mu         0.2      0.561   0.00282     1.07e- 7     29.0 
 3 mu         0.3      0.904   0.0417      3.13e- 5     25.3 
 4 mu         0.4      1.20    0.208       1.48e- 3     30.5 
 5 mu         0.5      1.29    0.660       2.43e- 2     18.8 
 6 mu         0.6      1.26    0.949       1.71e- 1      7.61
 7 mu         0.7      1.20    0.948       1.02e- 1      9.20
 8 mu         0.8      1.00    0.536       5.95e- 3     13.5 
 9 mu         0.9      0.551   0.0906      1.89e- 5      6.72
10 mu_1       0.1      0.564   0.000201    3.86e-11     41.9 
11 mu_1       0.2      0.709   0.0106      4.45e- 7     20.7 
12 mu_1       0.3      1.05    0.103       8.70e- 5     31.7 
13 mu_1       0.4      1.27    0.364       3.07e- 3     28.6 
14 mu_1       0.5      1.30    0.852       4.04e- 2     14.1 
15 mu_1       0.6      1.25    0.956       2.28e- 1      6.35
16 mu_1       0.7      1.18    0.933       3.98e- 2     10.4 
17 mu_1       0.8      0.959   0.429       2.03e- 3     13.3 
18 mu_1       0.9      0.511   0.0679      8.33e- 6      6.85
19 mu_0       0.1      0.312   0.00000715  0            28.0 
20 mu_0       0.2      0.524   0.00114     0            31.0 
21 mu_0       0.3      0.842   0.0173      0            23.9 
22 mu_0       0.4      1.16    0.111       0            31.7 
23 mu_0       0.5      1.29    0.419       0            23.5 
24 mu_0       0.6      1.27    0.936       0             9.52
25 mu_0       0.7      1.24    0.954       0             7.09
26 mu_0       0.8      1.18    0.900       0            14.2 
27 mu_0       0.9      0.911   0.267       0            10.4 
[1] "Total run time was 157.407 seconds"
