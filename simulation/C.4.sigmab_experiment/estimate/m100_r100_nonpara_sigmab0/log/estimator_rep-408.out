
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1266"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 7 11  4  4  5  5  6  7  7  3  3  9  6  9  6  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02837 0.33507 0.59496 0.99097 5.22890 
[1] "event indicator table: "

  0   1 
753 513 
[1] "treatment indicator table: "

  0   1 
449 817 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 601
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 13"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 91"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 665
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 51"
[1] "     Cluster: 56"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 119.114 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.483 0.115 
 2 mu         0.1   0.2 0.583 0.132 
 3 mu         0.1   0.3 0.614 0.142 
 4 mu         0.1   0.4 0.643 0.148 
 5 mu         0.1   0.5 0.666 0.154 
 6 mu         0.2   0.1 0.437 0.0873
 7 mu         0.2   0.2 0.514 0.0920
 8 mu         0.2   0.3 0.552 0.0957
 9 mu         0.2   0.4 0.579 0.0992
10 mu         0.2   0.5 0.611 0.102 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.498       0.0792 0.0000371     11.3 
 2 mu         0.2      0.748       0.449  0.00677        9.72
 3 mu         0.3      0.893       0.822  0.0650         4.15
 4 mu         0.4      0.976       0.961  0.230          2.76
 5 mu         0.5      1.01        1      0.478          1.82
 6 mu         0.6      1.01        1      0.744          1.24
 7 mu         0.7      0.996       1      0.761          1.22
 8 mu         0.8      0.966       0.997  0.372          1.63
 9 mu         0.9      0.861       0.901  0.0440         2.50
10 mu_1       0.1      0.718       0.232  0.000187      14.7 
11 mu_1       0.2      0.858       0.712  0.0155         6.75
12 mu_1       0.3      0.951       0.933  0.105          3.24
13 mu_1       0.4      1.00        1      0.299          2.45
14 mu_1       0.5      1.01        1      0.548          1.61
15 mu_1       0.6      1.00        1      0.798          1.17
16 mu_1       0.7      0.993       1      0.693          1.29
17 mu_1       0.8      0.958       0.989  0.326          1.64
18 mu_1       0.9      0.850       0.869  0.0354         2.64
19 mu_0       0.1      0.473       0.0608 0.0000205     10.9 
20 mu_0       0.2      0.720       0.384  0.00432       10.5 
21 mu_0       0.3      0.868       0.765  0.0481         4.94
22 mu_0       0.4      0.959       0.928  0.184          2.97
23 mu_0       0.5      1.00        1      0.408          2.09
24 mu_0       0.6      1.01        1      0.662          1.37
25 mu_0       0.7      1.00        1      0.863          1.18
26 mu_0       0.8      0.997       1      0.554          1.55
27 mu_0       0.9      0.958       1      0.121          1.96
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.64     0.0000292  1.51e-13    149.  
 2 mu         0.2      1.77     0.00513    1.39e- 8    147.  
 3 mu         0.3      1.55     0.0586     9.18e- 6     98.9 
 4 mu         0.4      1.39     0.236      7.69e- 4     52.3 
 5 mu         0.5      1.27     0.620      1.98e- 2     21.9 
 6 mu         0.6      1.15     0.935      1.92e- 1      6.88
 7 mu         0.7      1.16     0.918      2.73e- 1     11.9 
 8 mu         0.8      1.18     0.516      1.31e- 2     17.5 
 9 mu         0.9      0.910    0.0710     1.64e- 5     23.3 
10 mu_1       0.1      2.49     0.000183   1.28e-12    213.  
11 mu_1       0.2      1.53     0.0165     5.91e- 8    105.  
12 mu_1       0.3      1.20     0.118      2.60e- 5     47.1 
13 mu_1       0.4      1.16     0.422      1.63e- 3     18.7 
14 mu_1       0.5      1.13     0.827      3.36e- 2      6.25
15 mu_1       0.6      1.09     0.980      2.56e- 1      4.92
16 mu_1       0.7      1.15     0.816      9.37e- 2     13.5 
17 mu_1       0.8      1.16     0.420      6.89e- 3     17.2 
18 mu_1       0.9      0.889    0.0512     7.67e- 6     23.8 
19 mu_0       0.1      1.54     0.0000109  0           142.  
20 mu_0       0.2      1.83     0.00186    0           157.  
21 mu_0       0.3      1.70     0.0240     0           121.  
22 mu_0       0.4      1.55     0.122      0            74.7 
23 mu_0       0.5      1.41     0.413      0            37.5 
24 mu_0       0.6      1.25     0.835      0            14.8 
25 mu_0       0.7      1.18     0.996      0             8.38
26 mu_0       0.8      1.24     0.847      0            18.4 
27 mu_0       0.9      1.09     0.207      0            17.9 
[1] "Total run time was 122.982 seconds"
