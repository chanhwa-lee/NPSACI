
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1289"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  4  8 11  4  3  6  6  5  8  4  9  6  9  8  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03839 0.35229 0.60244 1.00000 6.00000 
[1] "event indicator table: "

  0   1 
762 527 
[1] "treatment indicator table: "

  0   1 
463 826 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 621
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 668
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 24"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 85.22 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.479 0.167
 2 mu         0.1   0.2 0.583 0.205
 3 mu         0.1   0.3 0.583 0.199
 4 mu         0.1   0.4 0.577 0.200
 5 mu         0.1   0.5 0.596 0.208
 6 mu         0.2   0.1 0.436 0.122
 7 mu         0.2   0.2 0.536 0.157
 8 mu         0.2   0.3 0.540 0.150
 9 mu         0.2   0.4 0.539 0.148
10 mu         0.2   0.5 0.560 0.152
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.686        0.145 0.0000245     28.5 
 2 mu         0.2      0.956        0.553 0.00489       25.2 
 3 mu         0.3      1.01         0.889 0.0581        10.7 
 4 mu         0.4      1.02         0.986 0.242          3.36
 5 mu         0.5      1.01         1     0.550          1.63
 6 mu         0.6      1.00         1     0.854          1.26
 7 mu         0.7      1.01         1     0.848          1.30
 8 mu         0.8      1.02         1     0.698          2.28
 9 mu         0.9      0.980        0.912 0.229          5.20
10 mu_1       0.1      1.04         0.419 0.000124      38.1 
11 mu_1       0.2      1.03         0.838 0.0125        17.3 
12 mu_1       0.3      1.02         0.994 0.102          5.36
13 mu_1       0.4      1.02         1     0.334          1.82
14 mu_1       0.5      1.01         1     0.648          1.57
15 mu_1       0.6      1.00         1     0.906          1.16
16 mu_1       0.7      1.01         1     0.819          1.37
17 mu_1       0.8      1.02         1     0.651          2.46
18 mu_1       0.9      0.974        0.889 0.196          5.38
19 mu_0       0.1      0.647        0.115 0.0000134     27.4 
20 mu_0       0.2      0.938        0.495 0.00300       27.1 
21 mu_0       0.3      1.01         0.830 0.0392        13.0 
22 mu_0       0.4      1.02         0.978 0.181          4.39
23 mu_0       0.5      1.02         0.996 0.453          1.68
24 mu_0       0.6      1.01         1     0.764          1.41
25 mu_0       0.7      1.00         1     0.892          1.14
26 mu_0       0.8      1.02         1.00  0.779          1.59
27 mu_0       0.9      1.03         1     0.497          3.57
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.20    0.0000186   8.90e-13    116.  
 2 mu         0.2      1.23    0.00451     4.09e- 8    102.  
 3 mu         0.3      1.08    0.0536      1.80e- 5     60.0 
 4 mu         0.4      1.02    0.289       1.13e- 3     27.2 
 5 mu         0.5      1.04    0.727       2.33e- 2      9.49
 6 mu         0.6      1.07    0.977       1.68e- 1      3.51
 7 mu         0.7      1.04    0.923       1.20e- 1      2.95
 8 mu         0.8      0.932   0.424       4.63e- 3      5.66
 9 mu         0.9      0.670   0.0550      9.16e- 6     13.6 
10 mu_1       0.1      1.60    0.000120    7.49e-12    145.  
11 mu_1       0.2      1.04    0.0136      1.72e- 7     63.7 
12 mu_1       0.3      0.914   0.129       5.06e- 5     25.0 
13 mu_1       0.4      0.950   0.467       2.38e- 3      8.77
14 mu_1       0.5      1.02    0.902       3.92e- 2      4.87
15 mu_1       0.6      1.06    0.972       2.18e- 1      2.93
16 mu_1       0.7      1.02    0.854       6.42e- 2      3.07
17 mu_1       0.8      0.910   0.336       2.17e- 3      6.62
18 mu_1       0.9      0.650   0.0361      3.82e- 6     15.1 
19 mu_0       0.1      1.16    0.00000579  0           113.  
20 mu_0       0.2      1.27    0.00159     0           112.  
21 mu_0       0.3      1.15    0.0253      0            75.1 
22 mu_0       0.4      1.06    0.182       0            39.7 
23 mu_0       0.5      1.06    0.531       0            16.6 
24 mu_0       0.6      1.10    0.966       0             5.23
25 mu_0       0.7      1.09    1.05        0             2.94
26 mu_0       0.8      1.02    0.791       0             4.72
27 mu_0       0.9      0.854   0.189       0             7.13
[1] "Total run time was 87.691 seconds"
