
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1261"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  5  8  6  8  5  8  6  2  5  5 11  5  5  7  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04065 0.38330 0.64337 1.00000 6.00000 
[1] "event indicator table: "

  0   1 
737 524 
[1] "treatment indicator table: "

  0   1 
447 814 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 665
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 34"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 596
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 179.873 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.534 0.137 
 2 mu         0.1   0.2 0.600 0.152 
 3 mu         0.1   0.3 0.618 0.166 
 4 mu         0.1   0.4 0.693 0.186 
 5 mu         0.1   0.5 0.690 0.188 
 6 mu         0.2   0.1 0.461 0.0841
 7 mu         0.2   0.2 0.523 0.0932
 8 mu         0.2   0.3 0.558 0.104 
 9 mu         0.2   0.4 0.619 0.114 
10 mu         0.2   0.5 0.620 0.115 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.565       0.0925  0.000219     18.7 
 2 mu         0.2      0.752       0.432   0.0188       10.2 
 3 mu         0.3      0.893       0.786   0.135         5.19
 4 mu         0.4      0.987       0.956   0.368         2.71
 5 mu         0.5      1.02        1       0.692         1.61
 6 mu         0.6      1.01        1.00    0.842         1.20
 7 mu         0.7      0.999       1       0.734         1.28
 8 mu         0.8      0.998       0.989   0.431         2.87
 9 mu         0.9      1.01        0.941   0.0708        5.08
10 mu_1       0.1      0.761       0.281   0.000940     19.7 
11 mu_1       0.2      0.854       0.704   0.0415        7.33
12 mu_1       0.3      0.962       0.933   0.208         3.84
13 mu_1       0.4      1.02        1       0.479         2.12
14 mu_1       0.5      1.02        1.00    0.793         1.45
15 mu_1       0.6      1.01        1.00    0.829         1.13
16 mu_1       0.7      0.996       1       0.705         1.39
17 mu_1       0.8      0.999       0.991   0.389         3.13
18 mu_1       0.9      1.01        0.925   0.0589        5.07
19 mu_0       0.1      0.543       0.0746  0.000139     18.6 
20 mu_0       0.2      0.726       0.367   0.0131       11.4 
21 mu_0       0.3      0.863       0.687   0.103         5.77
22 mu_0       0.4      0.967       0.920   0.295         3.14
23 mu_0       0.5      1.01        1       0.590         1.79
24 mu_0       0.6      1.02        1.00    0.800         1.29
25 mu_0       0.7      1.01        1.00    0.802         1.13
26 mu_0       0.8      0.992       1       0.601         1.84
27 mu_0       0.9      1.01        1       0.177         5.21
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.0409   0.0000227   1.12e-14     0.806
 2 mu         0.2     0.198    0.00375     2.33e- 9     3.12 
 3 mu         0.3     0.537    0.0682      2.64e- 6    10.8  
 4 mu         0.4     0.950    0.253       3.43e- 4    19.8  
 5 mu         0.5     1.18     0.675       1.32e- 2    15.9  
 6 mu         0.6     1.21     1.05        1.58e- 1     5.90 
 7 mu         0.7     1.26     0.938       1.22e- 1     6.73 
 8 mu         0.8     1.51     0.552       8.35e- 3    16.5  
 9 mu         0.9     1.84     0.0917      3.59e- 5    47.6  
10 mu_1       0.1     0.157    0.000154    1.01e-13     3.22 
11 mu_1       0.2     0.394    0.0108      1.05e- 8     5.20 
12 mu_1       0.3     0.769    0.146       7.91e- 6    15.2  
13 mu_1       0.4     1.11     0.404       7.73e- 4    20.9  
14 mu_1       0.5     1.23     0.910       2.38e- 2    13.4  
15 mu_1       0.6     1.23     1.05        2.31e- 1     5.79 
16 mu_1       0.7     1.31     0.885       5.97e- 2     8.65 
17 mu_1       0.8     1.58     0.431       3.48e- 3    20.6  
18 mu_1       0.9     1.89     0.0664      1.66e- 5    52.9  
19 mu_0       0.1     0.0280   0.00000627  0            0.585
20 mu_0       0.2     0.149    0.00176     0            2.60 
21 mu_0       0.3     0.438    0.0317      0            8.94 
22 mu_0       0.4     0.845    0.155       0           19.1  
23 mu_0       0.5     1.12     0.455       0           18.4  
24 mu_0       0.6     1.18     0.876       0            8.50 
25 mu_0       0.7     1.15     1.03        0            5.05 
26 mu_0       0.8     1.22     0.884       0            7.46 
27 mu_0       0.9     1.39     0.269       0           21.5  
[1] "Total run time was 183.973 seconds"
