
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1292"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  5  6  6  5  3  8 12  5  3  8  7  5  8  8  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04722 0.35330 0.60412 1.00000 5.98810 
[1] "event indicator table: "

  0   1 
774 518 
[1] "treatment indicator table: "

  0   1 
463 829 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 624
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 668
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 116.799 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.432 0.147 
 2 mu         0.1   0.2 0.666 0.233 
 3 mu         0.1   0.3 0.725 0.248 
 4 mu         0.1   0.4 0.745 0.272 
 5 mu         0.1   0.5 0.749 0.278 
 6 mu         0.2   0.1 0.398 0.0846
 7 mu         0.2   0.2 0.596 0.131 
 8 mu         0.2   0.3 0.650 0.137 
 9 mu         0.2   0.4 0.684 0.136 
10 mu         0.2   0.5 0.698 0.135 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.27         0.142 0.0000477     77.6 
 2 mu         0.2      0.968        0.612 0.00483       19.0 
 3 mu         0.3      0.986        0.903 0.0489         4.22
 4 mu         0.4      1.00         1     0.195          1.89
 5 mu         0.5      1.00         0.998 0.463          1.53
 6 mu         0.6      0.997        1     0.768          1.25
 7 mu         0.7      0.998        1     0.766          1.27
 8 mu         0.8      0.998        1     0.573          2.00
 9 mu         0.9      1.02         0.975 0.128          4.67
10 mu_1       0.1      0.701        0.338 0.000216       7.44
11 mu_1       0.2      0.915        0.849 0.0114         3.66
12 mu_1       0.3      0.996        0.988 0.0822         2.33
13 mu_1       0.4      1.00         1     0.266          1.76
14 mu_1       0.5      0.997        1     0.549          1.42
15 mu_1       0.6      0.997        1     0.829          1.16
16 mu_1       0.7      0.997        1     0.737          1.31
17 mu_1       0.8      0.999        1     0.528          2.18
18 mu_1       0.9      1.03         0.957 0.108          4.84
19 mu_0       0.1      1.34         0.113 0.0000289     86.2 
20 mu_0       0.2      0.982        0.519 0.00318       23.7 
21 mu_0       0.3      0.982        0.862 0.0347         5.78
22 mu_0       0.4      1.00         1     0.148          1.98
23 mu_0       0.5      1.00         1     0.378          1.63
24 mu_0       0.6      0.999        1     0.675          1.38
25 mu_0       0.7      0.999        1     0.833          1.16
26 mu_0       0.8      0.996        1     0.669          1.42
27 mu_0       0.9      1.00         1     0.305          3.13
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.148   0.0000130   2.62e-13     10.4 
 2 mu         0.2      0.402   0.00214     1.53e- 8     13.0 
 3 mu         0.3      0.715   0.0363      8.78e- 6     13.1 
 4 mu         0.4      0.928   0.215       6.84e- 4     10.1 
 5 mu         0.5      1.04    0.648       1.69e- 2      4.96
 6 mu         0.6      1.12    1.08        2.00e- 1      4.39
 7 mu         0.7      1.14    1.07        8.10e- 2      4.74
 8 mu         0.8      1.18    0.604       1.83e- 3     16.4 
 9 mu         0.9      1.41    0.0727      1.61e- 6     54.0 
10 mu_1       0.1      0.367   0.0000953   2.47e-12     20.8 
11 mu_1       0.2      0.627   0.00729     7.19e- 8     13.0 
12 mu_1       0.3      0.860   0.0858      2.75e- 5     13.6 
13 mu_1       0.4      0.978   0.374       1.52e- 3      7.89
14 mu_1       0.5      1.06    0.880       3.00e- 2      4.69
15 mu_1       0.6      1.13    1.03        2.96e- 1      4.65
16 mu_1       0.7      1.15    1.05        3.61e- 2      4.52
17 mu_1       0.8      1.21    0.494       7.13e- 4     19.3 
18 mu_1       0.9      1.43    0.0550      5.58e- 7     56.4 
19 mu_0       0.1      0.124   0.00000323  0             9.25
20 mu_0       0.2      0.346   0.000987    0            13.0 
21 mu_0       0.3      0.653   0.0179      0            13.1 
22 mu_0       0.4      0.894   0.117       0            11.6 
23 mu_0       0.5      1.03    0.455       0             7.93
24 mu_0       0.6      1.10    0.909       0             4.88
25 mu_0       0.7      1.12    1.06        0             5.27
26 mu_0       0.8      1.08    0.968       0             4.82
27 mu_0       0.9      1.25    0.205       0            31.7 
[1] "Total run time was 119.55 seconds"
