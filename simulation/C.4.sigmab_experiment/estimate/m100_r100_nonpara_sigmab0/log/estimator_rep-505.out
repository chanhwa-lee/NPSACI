
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1220"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
13  4  4  9  2 10  7  5  4  3  6  8  6  5  8  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03991 0.34777 0.60593 1.00000 6.00000 
[1] "event indicator table: "

  0   1 
708 512 
[1] "treatment indicator table: "

  0   1 
440 780 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 651
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 76"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 569
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 44"
[1] "     Cluster: 49"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 65"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 117.463 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.274 0.107 
 2 mu         0.1   0.2 0.331 0.168 
 3 mu         0.1   0.3 0.450 0.149 
 4 mu         0.1   0.4 0.455 0.157 
 5 mu         0.1   0.5 0.457 0.176 
 6 mu         0.2   0.1 0.258 0.0713
 7 mu         0.2   0.2 0.327 0.119 
 8 mu         0.2   0.3 0.438 0.0832
 9 mu         0.2   0.4 0.446 0.0896
10 mu         0.2   0.5 0.451 0.107 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.794        0.131 0.0000224     27.6 
 2 mu         0.2      0.845        0.543 0.00342       13.9 
 3 mu         0.3      0.938        0.879 0.0465         4.76
 4 mu         0.4      1.00         1     0.219          1.97
 5 mu         0.5      1.01         1     0.539          1.55
 6 mu         0.6      1.00         1     0.848          1.21
 7 mu         0.7      1.00         1     0.856          1.28
 8 mu         0.8      1.01         1     0.579          2.66
 9 mu         0.9      0.983        0.954 0.165          6.51
10 mu_1       0.1      0.830        0.337 0.000117      21.6 
11 mu_1       0.2      0.867        0.776 0.00927        5.87
12 mu_1       0.3      0.969        0.982 0.0867         2.42
13 mu_1       0.4      1.01         1     0.316          1.80
14 mu_1       0.5      1.01         1     0.649          1.43
15 mu_1       0.6      1.00         1     0.906          1.16
16 mu_1       0.7      1.00         1     0.808          1.37
17 mu_1       0.8      1.01         1     0.531          2.94
18 mu_1       0.9      0.977        0.949 0.142          6.74
19 mu_0       0.1      0.790        0.109 0.0000118     28.3 
20 mu_0       0.2      0.840        0.474 0.00195       15.9 
21 mu_0       0.3      0.924        0.817 0.0293         6.03
22 mu_0       0.4      0.997        1     0.154          2.12
23 mu_0       0.5      1.02         1     0.429          1.66
24 mu_0       0.6      1.01         1     0.761          1.29
25 mu_0       0.7      0.999        1     0.897          1.10
26 mu_0       0.8      1.01         1     0.759          1.53
27 mu_0       0.9      1.04         1     0.364          4.43
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.627    0.0000441  1.57e-11     30.1 
 2 mu         0.2      0.866    0.00456    3.22e- 7     46.7 
 3 mu         0.3      0.843    0.0653     8.26e- 5     36.1 
 4 mu         0.4      0.824    0.269      3.34e- 3     18.7 
 5 mu         0.5      0.892    0.697      4.58e- 2      6.80
 6 mu         0.6      1.00     0.964      2.89e- 1      2.23
 7 mu         0.7      1.08     1.02       9.63e- 2      4.50
 8 mu         0.8      0.988    0.628      5.12e- 3      7.56
 9 mu         0.9      0.628    0.0897     1.28e- 5      8.47
10 mu_1       0.1      1.07     0.000309   1.24e-10     59.9 
11 mu_1       0.2      0.898    0.0156     1.27e- 6     46.7 
12 mu_1       0.3      0.787    0.142      2.17e- 4     24.1 
13 mu_1       0.4      0.819    0.465      6.59e- 3      9.36
14 mu_1       0.5      0.929    0.906      7.22e- 2      2.72
15 mu_1       0.6      1.04     1.03       1.29e- 1      2.48
16 mu_1       0.7      1.10     0.999      1.72e- 2      5.22
17 mu_1       0.8      0.960    0.500      1.01e- 3      7.68
18 mu_1       0.9      0.605    0.0683     6.34e- 6      9.41
19 mu_0       0.1      0.578    0.0000147  0            29.2 
20 mu_0       0.2      0.858    0.00186    0            46.7 
21 mu_0       0.3      0.867    0.0250     0            41.3 
22 mu_0       0.4      0.828    0.144      0            25.0 
23 mu_0       0.5      0.855    0.464      0            10.9 
24 mu_0       0.6      0.946    0.908      0             3.29
25 mu_0       0.7      1.06     1.03       0             2.81
26 mu_0       0.8      1.10     0.948      0             7.09
27 mu_0       0.9      0.835    0.233      0             8.20
[1] "Total run time was 120.809 seconds"
