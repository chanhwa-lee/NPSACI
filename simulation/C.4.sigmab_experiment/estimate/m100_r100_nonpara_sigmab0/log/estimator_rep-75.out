
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1206"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 18 19 20 
 8  4  7  9  5  5  7 12  7  2  8  9  6  6  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03529 0.33899 0.61299 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
716 490 
[1] "treatment indicator table: "

  0   1 
448 758 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 627
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 579
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 175.812 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.456 0.108 
 2 mu         0.1   0.2 0.492 0.0981
 3 mu         0.1   0.3 0.581 0.108 
 4 mu         0.1   0.4 0.586 0.109 
 5 mu         0.1   0.5 0.626 0.126 
 6 mu         0.2   0.1 0.392 0.0760
 7 mu         0.2   0.2 0.424 0.0586
 8 mu         0.2   0.3 0.515 0.0729
 9 mu         0.2   0.4 0.525 0.0706
10 mu         0.2   0.5 0.567 0.0936
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.490        0.140  0.000358      6.22
 2 mu         0.2      0.760        0.471  0.0311        7.11
 3 mu         0.3      0.920        0.781  0.189         4.26
 4 mu         0.4      0.989        0.973  0.496         2.11
 5 mu         0.5      1.01         1      0.757         1.49
 6 mu         0.6      1.01         1      0.887         1.18
 7 mu         0.7      1.01         1      0.789         1.90
 8 mu         0.8      1.04         1      0.457         4.49
 9 mu         0.9      1.07         1      0.126         6.18
10 mu_1       0.1      0.731        0.392  0.00148       9.65
11 mu_1       0.2      0.887        0.762  0.0648        5.80
12 mu_1       0.3      0.969        0.929  0.278         3.17
13 mu_1       0.4      1.00         1      0.606         1.88
14 mu_1       0.5      1.01         1      0.834         1.34
15 mu_1       0.6      1.01         1.00   0.894         1.23
16 mu_1       0.7      1.01         1      0.749         2.13
17 mu_1       0.8      1.04         1      0.420         4.83
18 mu_1       0.9      1.08         1      0.113         6.07
19 mu_0       0.1      0.463        0.109  0.000233      5.84
20 mu_0       0.2      0.729        0.391  0.0222        7.43
21 mu_0       0.3      0.900        0.710  0.151         4.91
22 mu_0       0.4      0.981        0.949  0.423         2.55
23 mu_0       0.5      1.01         1      0.680         1.63
24 mu_0       0.6      1.01         1      0.846         1.23
25 mu_0       0.7      1.01         1      0.881         1.38
26 mu_0       0.8      1.02         1      0.606         3.12
27 mu_0       0.9      1.05         1      0.240         7.24
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.161    0.000169   3.60e-13      8.81
 2 mu         0.2      0.508    0.00973    1.87e- 8     24.4 
 3 mu         0.3      0.765    0.0910     9.38e- 6     24.8 
 4 mu         0.4      0.903    0.329      6.88e- 4     14.7 
 5 mu         0.5      1.01     0.720      1.70e- 2      6.53
 6 mu         0.6      1.12     0.982      2.01e- 1      5.72
 7 mu         0.7      1.19     0.980      1.50e- 2      7.56
 8 mu         0.8      1.18     0.511      1.96e- 4     16.1 
 9 mu         0.9      0.981    0.0495     5.46e- 8     28.9 
10 mu_1       0.1      0.420    0.000984   3.20e-12     22.0 
11 mu_1       0.2      0.739    0.0321     8.29e- 8     30.5 
12 mu_1       0.3      0.872    0.200      2.78e- 5     20.6 
13 mu_1       0.4      0.965    0.547      1.53e- 3     10.6 
14 mu_1       0.5      1.07     0.892      3.02e- 2      4.02
15 mu_1       0.6      1.17     1.01       1.25e- 1      6.53
16 mu_1       0.7      1.20     0.936      7.49e- 3      7.39
17 mu_1       0.8      1.17     0.396      8.58e- 5     18.1 
18 mu_1       0.9      0.950    0.0360     2.12e- 8     29.4 
19 mu_0       0.1      0.133    0.0000543  0             7.34
20 mu_0       0.2      0.451    0.00390    0            22.9 
21 mu_0       0.3      0.719    0.0378     0            26.5 
22 mu_0       0.4      0.861    0.173      0            18.3 
23 mu_0       0.5      0.951    0.504      0             9.04
24 mu_0       0.6      1.06     0.888      0             4.52
25 mu_0       0.7      1.16     1.02       0             7.95
26 mu_0       0.8      1.22     0.904      0            12.1 
27 mu_0       0.9      1.26     0.166      0            24.0 
[1] "Total run time was 179.749 seconds"
