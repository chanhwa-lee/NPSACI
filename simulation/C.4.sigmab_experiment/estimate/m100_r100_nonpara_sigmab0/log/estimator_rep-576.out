
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1312"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 2  2 10  2  6  5  8 11  7 10  7  3 10  4  6  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02482 0.33749 0.61592 1.00000 4.96877 
[1] "event indicator table: "

  0   1 
774 538 
[1] "treatment indicator table: "

  0   1 
451 861 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 641
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 52"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 671
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 68"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 88"
[1] "     Cluster: 95"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 191.714 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.711 0.340
 2 mu         0.1   0.2 0.721 0.314
 3 mu         0.1   0.3 0.729 0.302
 4 mu         0.1   0.4 0.735 0.287
 5 mu         0.1   0.5 0.897 0.287
 6 mu         0.2   0.1 0.646 0.294
 7 mu         0.2   0.2 0.655 0.262
 8 mu         0.2   0.3 0.668 0.243
 9 mu         0.2   0.4 0.677 0.212
10 mu         0.2   0.5 0.836 0.206
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.939       0.0870 0.0000291     50.1 
 2 mu         0.2      0.960       0.453  0.00649       20.0 
 3 mu         0.3      0.949       0.776  0.0931         5.68
 4 mu         0.4      0.967       0.908  0.398          2.47
 5 mu         0.5      0.992       0.986  0.689          1.58
 6 mu         0.6      0.999       1.00   0.910          1.12
 7 mu         0.7      0.994       0.995  0.857          1.12
 8 mu         0.8      0.994       1      0.585          1.30
 9 mu         0.9      1.00        0.970  0.248          2.15
10 mu_1       0.1      1.04        0.266  0.000137      33.7 
11 mu_1       0.2      0.960       0.714  0.0158         7.52
12 mu_1       0.3      0.957       0.878  0.156          3.02
13 mu_1       0.4      0.981       0.976  0.525          2.12
14 mu_1       0.5      0.999       1      0.803          1.34
15 mu_1       0.6      1.00        0.998  0.891          1.10
16 mu_1       0.7      0.993       0.994  0.828          1.14
17 mu_1       0.8      0.995       1      0.548          1.34
18 mu_1       0.9      1.00        0.960  0.227          2.19
19 mu_0       0.1      0.927       0.0695 0.0000171     51.9 
20 mu_0       0.2      0.959       0.383  0.00416       23.1 
21 mu_0       0.3      0.945       0.689  0.0660         7.11
22 mu_0       0.4      0.958       0.860  0.303          2.71
23 mu_0       0.5      0.985       0.969  0.576          1.83
24 mu_0       0.6      0.998       0.999  0.829          1.20
25 mu_0       0.7      0.997       0.998  0.870          1.13
26 mu_0       0.8      0.992       1      0.732          1.15
27 mu_0       0.9      1.02        1.00   0.435          1.75
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.858   0.0000132   8.50e-15     65.7 
 2 mu         0.2      0.907   0.00204     1.76e- 9     64.8 
 3 mu         0.3      0.814   0.0360      1.99e- 6     43.6 
 4 mu         0.4      0.854   0.192       2.60e- 4     23.1 
 5 mu         0.5      0.981   0.599       1.00e- 2      9.66
 6 mu         0.6      1.06    0.947       1.70e- 1      3.04
 7 mu         0.7      1.08    0.996       1.34e- 1      2.63
 8 mu         0.8      1.13    0.661       5.94e- 3      7.67
 9 mu         0.9      1.03    0.0870      1.32e- 5     15.7 
10 mu_1       0.1      1.25    0.0000960   7.65e-14     93.8 
11 mu_1       0.2      0.751   0.00694     7.92e- 9     46.3 
12 mu_1       0.3      0.664   0.0809      5.98e- 6     20.8 
13 mu_1       0.4      0.816   0.325       5.84e- 4      8.24
14 mu_1       0.5      0.988   0.787       1.80e- 2      3.64
15 mu_1       0.6      1.06    1.04        2.13e- 1      2.69
16 mu_1       0.7      1.09    1.02        3.78e- 2      2.96
17 mu_1       0.8      1.14    0.551       3.06e- 3      8.51
18 mu_1       0.9      1.01    0.0558      6.05e- 6     15.7 
19 mu_0       0.1      0.814   0.00000421  0            62.6 
20 mu_0       0.2      0.946   0.000947    0            69.4 
21 mu_0       0.3      0.878   0.0169      0            53.4 
22 mu_0       0.4      0.880   0.101       0            32.9 
23 mu_0       0.5      0.975   0.385       0            16.6 
24 mu_0       0.6      1.05    0.910       0             6.51
25 mu_0       0.7      1.07    1.06        0             2.92
26 mu_0       0.8      1.11    1.04        0             4.76
27 mu_0       0.9      1.22    0.251       0            15.7 
[1] "Total run time was 198.206 seconds"
