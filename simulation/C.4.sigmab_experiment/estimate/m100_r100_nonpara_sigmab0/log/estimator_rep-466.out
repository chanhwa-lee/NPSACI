
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1283"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  6  3  5  9  3  9  8  6  4  7  5 10  5  9  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04791 0.38978 0.62080 1.00000 4.00000 
[1] "event indicator table: "

  0   1 
770 513 
[1] "treatment indicator table: "

  0   1 
472 811 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 656
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 627
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 52"
[1] "     Cluster: 56"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 232.292 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.263 0.109 
 2 mu         0.1   0.2 0.266 0.140 
 3 mu         0.1   0.3 0.336 0.153 
 4 mu         0.1   0.4 0.364 0.164 
 5 mu         0.1   0.5 0.391 0.171 
 6 mu         0.2   0.1 0.247 0.0791
 7 mu         0.2   0.2 0.265 0.107 
 8 mu         0.2   0.3 0.340 0.113 
 9 mu         0.2   0.4 0.372 0.117 
10 mu         0.2   0.5 0.395 0.120 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.17         0.226  0.000300     23.7 
 2 mu         0.2      1.14         0.782  0.0286       14.3 
 3 mu         0.3      1.05         0.975  0.228         5.65
 4 mu         0.4      1.01         0.978  0.551         2.17
 5 mu         0.5      1.01         1      0.806         1.70
 6 mu         0.6      1.01         1.00   0.825         1.35
 7 mu         0.7      0.994        0.994  0.840         1.23
 8 mu         0.8      0.973        0.979  0.637         1.58
 9 mu         0.9      0.961        0.938  0.294         2.73
10 mu_1       0.1      1.20         0.538  0.00130      23.1 
11 mu_1       0.2      1.08         0.912  0.0642        9.32
12 mu_1       0.3      1.02         0.975  0.334         3.26
13 mu_1       0.4      1.01         0.982  0.660         1.88
14 mu_1       0.5      1.01         1      0.780         1.58
15 mu_1       0.6      1.01         1.01   0.844         1.24
16 mu_1       0.7      0.989        0.986  0.798         1.25
17 mu_1       0.8      0.970        0.975  0.614         1.66
18 mu_1       0.9      0.960        0.924  0.262         2.96
19 mu_0       0.1      1.16         0.193  0.000189     24.4 
20 mu_0       0.2      1.15         0.706  0.0197       15.5 
21 mu_0       0.3      1.06         0.948  0.183         6.68
22 mu_0       0.4      1.01         0.982  0.478         2.58
23 mu_0       0.5      1.01         0.991  0.740         1.81
24 mu_0       0.6      1.01         1      0.796         1.52
25 mu_0       0.7      1.00         1      0.832         1.18
26 mu_0       0.8      0.986        1      0.728         1.33
27 mu_0       0.9      0.970        0.984  0.536         2.08
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.24     0.0000976  4.27e-13    120.  
 2 mu         0.2      0.786    0.00861    1.67e- 8     59.4 
 3 mu         0.3      0.758    0.0848     5.61e- 6     26.7 
 4 mu         0.4      0.943    0.314      3.08e- 4     10.6 
 5 mu         0.5      1.13     0.720      6.09e- 3      5.63
 6 mu         0.6      1.23     1.02       6.00e- 2      4.07
 7 mu         0.7      1.30     1.12       4.50e- 2      4.73
 8 mu         0.8      1.54     0.622      2.37e- 3     26.7 
 9 mu         0.9      2.00     0.0663     4.17e- 6     87.9 
10 mu_1       0.1      0.127    0.000611   0             3.53
11 mu_1       0.2      0.374    0.0282     0             4.41
12 mu_1       0.3      0.701    0.161      0             6.26
13 mu_1       0.4      0.994    0.529      0             7.53
14 mu_1       0.5      1.17     0.910      0             4.64
15 mu_1       0.6      1.24     1.10       0             4.41
16 mu_1       0.7      1.33     1.09       0             6.36
17 mu_1       0.8      1.58     0.515      0            31.4 
18 mu_1       0.9      2.00     0.0479     0            92.0 
19 mu_0       0.1      1.36     0.0000348  2.79e-14    134.  
20 mu_0       0.2      0.890    0.00359    1.83e- 9     74.3 
21 mu_0       0.3      0.782    0.0364     9.43e- 7     38.1 
22 mu_0       0.4      0.909    0.185      6.05e- 5     17.6 
23 mu_0       0.5      1.09     0.531      1.43e- 3      7.08
24 mu_0       0.6      1.20     0.951      1.77e- 2      3.86
25 mu_0       0.7      1.25     1.08       1.09e- 1      4.70
26 mu_0       0.8      1.37     1.01       7.90e- 3      7.86
27 mu_0       0.9      1.94     0.266      2.78e- 5     51.7 
[1] "Total run time was 240.142 seconds"
