
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1214"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 8  7  6  8  3 10  6  3 10  7  3  6  6  4  6  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03384 0.38064 0.61518 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
722 492 
[1] "treatment indicator table: "

  0   1 
438 776 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 632
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 9"
[1] "     Cluster: 16"
[1] "     Cluster: 21"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 582
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 65"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 83"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 139.756 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.435 0.141 
 2 mu         0.1   0.2 0.551 0.186 
 3 mu         0.1   0.3 0.834 0.269 
 4 mu         0.1   0.4 0.840 0.258 
 5 mu         0.1   0.5 0.846 0.253 
 6 mu         0.2   0.1 0.386 0.0949
 7 mu         0.2   0.2 0.490 0.125 
 8 mu         0.2   0.3 0.705 0.184 
 9 mu         0.2   0.4 0.727 0.177 
10 mu         0.2   0.5 0.741 0.173 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.22         0.304  0.000739     57.6 
 2 mu         0.2      1.27         0.692  0.0531       36.7 
 3 mu         0.3      1.09         0.916  0.267        11.3 
 4 mu         0.4      1.01         0.993  0.533         2.74
 5 mu         0.5      0.999        1      0.754         1.25
 6 mu         0.6      1.00         1      0.886         1.14
 7 mu         0.7      1.01         1      0.828         1.40
 8 mu         0.8      1.01         1      0.564         1.89
 9 mu         0.9      0.984        0.979  0.189         2.29
10 mu_1       0.1      1.51         0.662  0.00300      64.7 
11 mu_1       0.2      1.21         0.937  0.110        21.7 
12 mu_1       0.3      1.05         0.995  0.380         5.23
13 mu_1       0.4      1.01         1      0.628         1.64
14 mu_1       0.5      1.00         1      0.813         1.18
15 mu_1       0.6      1.00         1      0.925         1.12
16 mu_1       0.7      1.01         1      0.782         1.47
17 mu_1       0.8      1.01         1      0.525         1.93
18 mu_1       0.9      0.981        0.972  0.169         2.41
19 mu_0       0.1      1.19         0.256  0.000488     56.8 
20 mu_0       0.2      1.28         0.621  0.0389       40.5 
21 mu_0       0.3      1.11         0.884  0.219        13.9 
22 mu_0       0.4      1.02         0.999  0.470         3.54
23 mu_0       0.5      0.998        1      0.695         1.36
24 mu_0       0.6      1.00         1      0.818         1.18
25 mu_0       0.7      1.01         1.00   0.874         1.24
26 mu_0       0.8      1.01         1      0.721         1.72
27 mu_0       0.9      1.02         1      0.367         2.24
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.362    0.0000703  3.68e-14     29.8 
 2 mu         0.2      0.570    0.00993    7.63e- 9     33.1 
 3 mu         0.3      0.765    0.0858     8.63e- 6     25.5 
 4 mu         0.4      0.963    0.358      1.12e- 3     15.7 
 5 mu         0.5      1.10     0.808      4.33e- 2      7.89
 6 mu         0.6      1.16     1.10       2.98e- 1      3.10
 7 mu         0.7      1.33     1.02       1.88e- 1      7.82
 8 mu         0.8      1.90     0.411      9.51e- 3     32.8 
 9 mu         0.9      2.37     0.0473     1.61e- 5     68.2 
10 mu_1       0.1      0.714    0.000386   3.31e-13     49.7 
11 mu_1       0.2      0.729    0.0281     3.43e- 8     27.6 
12 mu_1       0.3      0.856    0.201      2.59e- 5     14.1 
13 mu_1       0.4      1.01     0.571      2.53e- 3      6.54
14 mu_1       0.5      1.10     1.02       7.45e- 2      3.57
15 mu_1       0.6      1.16     1.15       3.92e- 1      2.04
16 mu_1       0.7      1.38     0.902      9.57e- 2      9.85
17 mu_1       0.8      2.00     0.304      4.25e- 3     36.8 
18 mu_1       0.9      2.35     0.0282     8.06e- 6     68.2 
19 mu_0       0.1      0.322    0.0000342  0            27.6 
20 mu_0       0.2      0.530    0.00468    0            34.5 
21 mu_0       0.3      0.726    0.0408     0            30.3 
22 mu_0       0.4      0.933    0.233      0            21.8 
23 mu_0       0.5      1.09     0.621      0            13.1 
24 mu_0       0.6      1.16     1.08       0             6.46
25 mu_0       0.7      1.21     1.15       0             3.07
26 mu_0       0.8      1.54     0.786      0            16.4 
27 mu_0       0.9      2.53     0.166      0            68.2 
[1] "Total run time was 141.965 seconds"
