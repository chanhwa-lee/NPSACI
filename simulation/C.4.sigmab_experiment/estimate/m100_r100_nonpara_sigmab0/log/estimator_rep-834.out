
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1238"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 3  8  6  5 11  5  2  9  6 13  4 11  4  2  6  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.05082 0.37232 0.63391 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
761 477 
[1] "treatment indicator table: "

  0   1 
410 828 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 603
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 81"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 635
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 139.313 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.358 0.0928
 2 mu         0.1   0.2 0.423 0.140 
 3 mu         0.1   0.3 0.445 0.153 
 4 mu         0.1   0.4 0.473 0.154 
 5 mu         0.1   0.5 0.555 0.117 
 6 mu         0.2   0.1 0.334 0.0691
 7 mu         0.2   0.2 0.408 0.109 
 8 mu         0.2   0.3 0.436 0.111 
 9 mu         0.2   0.4 0.475 0.106 
10 mu         0.2   0.5 0.530 0.0769
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.392       0.0731 0.000163       5.91
 2 mu         0.2      0.676       0.346  0.0167         4.86
 3 mu         0.3      0.880       0.791  0.130          3.67
 4 mu         0.4      0.980       0.979  0.390          1.99
 5 mu         0.5      1.02        1      0.674          1.49
 6 mu         0.6      1.01        1      0.800          1.25
 7 mu         0.7      0.993       0.999  0.885          1.16
 8 mu         0.8      0.968       0.981  0.593          1.71
 9 mu         0.9      1.00        0.950  0.218          8.17
10 mu_1       0.1      0.554       0.228  0.000735       4.90
11 mu_1       0.2      0.824       0.602  0.0396         4.98
12 mu_1       0.3      0.955       0.917  0.215          2.77
13 mu_1       0.4      1.01        1      0.508          1.62
14 mu_1       0.5      1.02        1      0.718          1.41
15 mu_1       0.6      1.01        1      0.830          1.21
16 mu_1       0.7      0.987       0.992  0.836          1.14
17 mu_1       0.8      0.965       0.984  0.544          1.87
18 mu_1       0.9      1.01        0.950  0.195          8.95
19 mu_0       0.1      0.374       0.0550 0.0000992      6.45
20 mu_0       0.2      0.640       0.291  0.0109         4.83
21 mu_0       0.3      0.848       0.713  0.0931         4.05
22 mu_0       0.4      0.960       0.943  0.295          2.32
23 mu_0       0.5      1.01        1      0.563          1.61
24 mu_0       0.6      1.02        1      0.756          1.41
25 mu_0       0.7      1.01        1      0.887          1.19
26 mu_0       0.8      0.978       0.991  0.787          1.12
27 mu_0       0.9      0.937       0.957  0.427          1.47
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.987   0.0000128   4.31e-14     89.2 
 2 mu         0.2      2.35    0.00180     3.97e- 9    195.  
 3 mu         0.3      2.20    0.0346      2.62e- 6    152.  
 4 mu         0.4      1.48    0.201       2.19e- 4     66.0 
 5 mu         0.5      1.09    0.567       4.47e- 3     17.3 
 6 mu         0.6      1.02    0.981       3.99e- 2      5.13
 7 mu         0.7      1.03    0.990       6.96e- 2      2.86
 8 mu         0.8      1.02    0.643       1.57e- 3      9.95
 9 mu         0.9      1.07    0.0967      1.38e- 6     23.0 
10 mu_1       0.1      2.19    0.0000966   3.67e-13    191.  
11 mu_1       0.2      2.73    0.00595     1.69e- 8    209.  
12 mu_1       0.3      1.91    0.0731      7.42e- 6    108.  
13 mu_1       0.4      1.24    0.339       4.66e- 4     35.3 
14 mu_1       0.5      1.02    0.761       8.95e- 3      7.43
15 mu_1       0.6      1.02    1.01        6.65e- 2      3.80
16 mu_1       0.7      1.03    0.962       3.11e- 2      4.09
17 mu_1       0.8      1.03    0.538       6.13e- 4     11.5 
18 mu_1       0.9      1.08    0.0709      4.79e- 7     23.7 
19 mu_0       0.1      0.853   0.00000314  0            77.9 
20 mu_0       0.2      2.25    0.000743    0           192.  
21 mu_0       0.3      2.32    0.0170      0           170.  
22 mu_0       0.4      1.65    0.0900      0            86.4 
23 mu_0       0.5      1.15    0.374       0            27.3 
24 mu_0       0.6      1.02    0.825       0             7.12
25 mu_0       0.7      1.02    1.01        0             4.17
26 mu_0       0.8      0.963   0.876       0             3.55
27 mu_0       0.9      0.948   0.312       0            16.4 
[1] "Total run time was 142.517 seconds"
