
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1189"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 9  8  9  3  8  4  7  6  6  8  6  4  6  6  6  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03535 0.35595 0.60286 1.00000 4.31402 
[1] "event indicator table: "

  0   1 
693 496 
[1] "treatment indicator table: "

  0   1 
424 765 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 585
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 82"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 604
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 52"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 767.24 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.274 0.0884
 2 mu         0.1   0.2 0.302 0.116 
 3 mu         0.1   0.3 0.306 0.146 
 4 mu         0.1   0.4 0.380 0.203 
 5 mu         0.1   0.5 0.813 0.215 
 6 mu         0.2   0.1 0.288 0.0577
 7 mu         0.2   0.2 0.349 0.0661
 8 mu         0.2   0.3 0.372 0.0771
 9 mu         0.2   0.4 0.445 0.109 
10 mu         0.2   0.5 0.673 0.139 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.421       0.0968 0.0000625      3.46
 2 mu         0.2      0.669       0.413  0.00984        5.16
 3 mu         0.3      0.837       0.745  0.105          3.98
 4 mu         0.4      0.936       0.925  0.351          2.33
 5 mu         0.5      0.982       1      0.626          1.59
 6 mu         0.6      0.996       1      0.828          1.19
 7 mu         0.7      0.999       1      0.819          1.21
 8 mu         0.8      0.998       1      0.633          1.69
 9 mu         0.9      1.02        0.974  0.230          3.89
10 mu_1       0.1      0.649       0.292  0.000284       6.45
11 mu_1       0.2      0.799       0.626  0.0227         5.05
12 mu_1       0.3      0.900       0.905  0.166          2.88
13 mu_1       0.4      0.964       1      0.438          1.88
14 mu_1       0.5      0.992       1      0.685          1.36
15 mu_1       0.6      0.999       1      0.864          1.10
16 mu_1       0.7      0.998       1      0.770          1.27
17 mu_1       0.8      0.997       1      0.593          1.75
18 mu_1       0.9      1.02        0.957  0.206          4.05
19 mu_0       0.1      0.395       0.0762 0.0000379      3.12
20 mu_0       0.2      0.637       0.357  0.00662        5.19
21 mu_0       0.3      0.810       0.672  0.0786         4.46
22 mu_0       0.4      0.917       0.877  0.287          2.84
23 mu_0       0.5      0.972       1      0.566          1.81
24 mu_0       0.6      0.993       1      0.774          1.33
25 mu_0       0.7      1.00        1      0.855          1.09
26 mu_0       0.8      1.00        1      0.776          1.47
27 mu_0       0.9      0.996       1      0.386          2.41
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.137    0.0000365  5.30e-14      7.59
 2 mu         0.2      0.410    0.00411    5.48e- 9     16.8 
 3 mu         0.3      0.772    0.0415     4.14e- 6     19.4 
 4 mu         0.4      1.06     0.224      4.04e- 4     16.0 
 5 mu         0.5      1.14     0.563      1.25e- 2     10.8 
 6 mu         0.6      1.06     0.919      1.77e- 1      5.76
 7 mu         0.7      1.00     0.957      8.90e- 2      2.87
 8 mu         0.8      0.935    0.593      3.01e- 3      6.16
 9 mu         0.9      0.685    0.102      5.29e- 6     10.9 
10 mu_1       0.1      0.399    0.000284   4.74e-13     21.7 
11 mu_1       0.2      0.686    0.0160     2.45e- 8     24.1 
12 mu_1       0.3      0.981    0.113      1.23e- 5     18.5 
13 mu_1       0.4      1.14     0.385      9.04e- 4     12.5 
14 mu_1       0.5      1.12     0.762      2.23e- 2      9.63
15 mu_1       0.6      1.04     0.975      1.79e- 1      4.80
16 mu_1       0.7      0.992    0.947      4.24e- 2      3.76
17 mu_1       0.8      0.918    0.495      1.25e- 3      6.59
18 mu_1       0.9      0.656    0.0704     1.96e- 6     10.8 
19 mu_0       0.1      0.108    0.0000103  0             6.02
20 mu_0       0.2      0.341    0.00130    0            15.0 
21 mu_0       0.3      0.683    0.0202     0            19.8 
22 mu_0       0.4      1.01     0.118      0            19.0 
23 mu_0       0.5      1.15     0.370      0            14.3 
24 mu_0       0.6      1.10     0.836      0             8.46
25 mu_0       0.7      1.02     0.948      0             3.64
26 mu_0       0.8      1.00     0.943      0             4.86
27 mu_0       0.9      0.948    0.289      0            11.5 
[1] "Total run time was 773.48 seconds"
