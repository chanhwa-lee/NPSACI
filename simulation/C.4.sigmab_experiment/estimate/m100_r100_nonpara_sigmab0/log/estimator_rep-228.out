
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1192"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  5  7  7  8  8  5  6 11  7  8  7  5  2  6  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02423 0.34799 0.57778 0.96485 6.00000 
[1] "event indicator table: "

  0   1 
686 506 
[1] "treatment indicator table: "

  0   1 
452 740 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 558
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 11"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 634
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 62"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 128.864 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.517 0.172 
 2 mu         0.1   0.2 0.674 0.159 
 3 mu         0.1   0.3 0.696 0.143 
 4 mu         0.1   0.4 0.706 0.128 
 5 mu         0.1   0.5 0.711 0.125 
 6 mu         0.2   0.1 0.499 0.144 
 7 mu         0.2   0.2 0.583 0.114 
 8 mu         0.2   0.3 0.626 0.102 
 9 mu         0.2   0.4 0.640 0.0840
10 mu         0.2   0.5 0.653 0.0807
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.523        0.127 0.0000365      8.72
 2 mu         0.2      0.675        0.460 0.00710        5.04
 3 mu         0.3      0.789        0.796 0.0750         3.34
 4 mu         0.4      0.896        0.946 0.292          1.85
 5 mu         0.5      0.964        0.995 0.637          1.39
 6 mu         0.6      0.994        0.997 0.850          1.26
 7 mu         0.7      1.01         1.00  0.701          1.67
 8 mu         0.8      1.06         1.00  0.416          2.41
 9 mu         0.9      1.18         1     0.125          8.23
10 mu_1       0.1      0.678        0.356 0.000176       6.35
11 mu_1       0.2      0.755        0.716 0.0172         4.43
12 mu_1       0.3      0.849        0.913 0.126          2.42
13 mu_1       0.4      0.935        0.980 0.394          1.42
14 mu_1       0.5      0.981        0.997 0.716          1.36
15 mu_1       0.6      1.00         1     0.868          1.40
16 mu_1       0.7      1.02         1     0.641          1.85
17 mu_1       0.8      1.07         1.00  0.369          2.70
18 mu_1       0.9      1.19         1     0.106          9.03
19 mu_0       0.1      0.506        0.101 0.0000209      9.52
20 mu_0       0.2      0.655        0.386 0.00450        5.19
21 mu_0       0.3      0.763        0.745 0.0534         3.74
22 mu_0       0.4      0.870        0.890 0.225          2.16
23 mu_0       0.5      0.948        0.992 0.509          1.42
24 mu_0       0.6      0.985        0.991 0.751          1.31
25 mu_0       0.7      0.997        1     0.841          1.25
26 mu_0       0.8      1.01         1     0.603          1.53
27 mu_0       0.9      1.03         1     0.294          2.19
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.483    0.000106   7.16e-13     38.5 
 2 mu         0.2      1.38     0.0104     3.30e- 8     94.8 
 3 mu         0.3      1.73     0.0988     1.45e- 5     84.2 
 4 mu         0.4      1.60     0.357      9.11e- 4     42.7 
 5 mu         0.5      1.33     0.775      1.87e- 2     13.5 
 6 mu         0.6      1.17     0.980      1.77e- 1      6.03
 7 mu         0.7      1.29     0.913      2.41e- 2     24.2 
 8 mu         0.8      1.91     0.389      2.76e- 4     80.3 
 9 mu         0.9      3.55     0.0551     6.84e- 8    232.  
10 mu_1       0.1      1.17     0.000674   6.03e-12     88.8 
11 mu_1       0.2      1.84     0.0300     1.39e- 7    109.  
12 mu_1       0.3      1.79     0.200      4.07e- 5     64.7 
13 mu_1       0.4      1.50     0.576      1.92e- 3     24.6 
14 mu_1       0.5      1.25     0.871      3.15e- 2      6.22
15 mu_1       0.6      1.17     0.961      8.89e- 2     10.1 
16 mu_1       0.7      1.39     0.792      9.09e- 3     34.5 
17 mu_1       0.8      2.14     0.289      1.09e- 4    100.  
18 mu_1       0.9      3.83     0.0297     2.40e- 8    258.  
19 mu_0       0.1      0.406    0.0000477  0            32.9 
20 mu_0       0.2      1.26     0.00455    0            91.1 
21 mu_0       0.3      1.71     0.0479     0            92.5 
22 mu_0       0.4      1.66     0.241      0            54.7 
23 mu_0       0.5      1.41     0.609      0            20.7 
24 mu_0       0.6      1.18     0.885      0             5.98
25 mu_0       0.7      1.04     0.966      0             2.63
26 mu_0       0.8      1.01     0.766      0             7.08
27 mu_0       0.9      1.07     0.201      0            12.9 
[1] "Total run time was 132.609 seconds"
