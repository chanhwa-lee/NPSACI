
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1276"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  3  7  6  8  8  6  7  6 10  5  4  3  3  8 11 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02842 0.32486 0.60530 1.00000 4.00000 
[1] "event indicator table: "

  0   1 
763 513 
[1] "treatment indicator table: "

  0   1 
474 802 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 680
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 14"
[1] "     Cluster: 18"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 596
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 100.532 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.453 0.161 
 2 mu         0.1   0.2 0.640 0.229 
 3 mu         0.1   0.3 0.623 0.226 
 4 mu         0.1   0.4 0.645 0.235 
 5 mu         0.1   0.5 0.636 0.238 
 6 mu         0.2   0.1 0.418 0.0873
 7 mu         0.2   0.2 0.559 0.123 
 8 mu         0.2   0.3 0.550 0.109 
 9 mu         0.2   0.4 0.577 0.110 
10 mu         0.2   0.5 0.572 0.111 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.538       0.0730  0.000229     21.9 
 2 mu         0.2      0.638       0.481   0.0205        7.93
 3 mu         0.3      0.816       0.758   0.162         2.98
 4 mu         0.4      0.938       0.907   0.451         1.64
 5 mu         0.5      0.988       1.00    0.738         1.26
 6 mu         0.6      0.999       0.997   0.900         1.08
 7 mu         0.7      0.999       1       0.759         1.17
 8 mu         0.8      1.01        0.993   0.364         1.76
 9 mu         0.9      1.02        0.946   0.0549        4.06
10 mu_1       0.1      0.517       0.214   0.000950      3.92
11 mu_1       0.2      0.715       0.690   0.0442        2.32
12 mu_1       0.3      0.884       0.907   0.248         1.79
13 mu_1       0.4      0.967       0.986   0.570         1.53
14 mu_1       0.5      0.996       0.999   0.774         1.18
15 mu_1       0.6      1.00        0.999   0.936         1.08
16 mu_1       0.7      0.999       1       0.701         1.25
17 mu_1       0.8      1.01        0.996   0.321         1.95
18 mu_1       0.9      1.03        0.914   0.0460        4.37
19 mu_0       0.1      0.541       0.0586  0.000147     24.3 
20 mu_0       0.2      0.618       0.406   0.0145        9.74
21 mu_0       0.3      0.787       0.699   0.119         3.86
22 mu_0       0.4      0.919       0.882   0.356         1.81
23 mu_0       0.5      0.980       0.994   0.672         1.34
24 mu_0       0.6      0.999       1.00    0.843         1.14
25 mu_0       0.7      0.997       1       0.883         1.08
26 mu_0       0.8      0.994       1       0.537         1.36
27 mu_0       0.9      0.999       1       0.135         1.94
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.279    0.0000286  1.39e-14     20.3 
 2 mu         0.2      0.534    0.00537    2.87e- 9     22.5 
 3 mu         0.3      0.746    0.0558     3.25e- 6     17.3 
 4 mu         0.4      0.886    0.282      4.24e- 4     13.5 
 5 mu         0.5      0.981    0.716      1.63e- 2      6.39
 6 mu         0.6      1.03     0.975      2.78e- 1      2.11
 7 mu         0.7      1.01     0.866      1.26e- 1      2.52
 8 mu         0.8      0.990    0.354      2.82e- 3     12.3 
 9 mu         0.9      0.887    0.0371     1.77e- 6     25.7 
10 mu_1       0.1      0.583    0.000155   1.25e-13     33.9 
11 mu_1       0.2      0.713    0.0159     1.29e- 8     18.8 
12 mu_1       0.3      0.820    0.125      9.76e- 6     17.6 
13 mu_1       0.4      0.906    0.456      9.54e- 4     10.4 
14 mu_1       0.5      0.987    0.917      2.94e- 2      3.94
15 mu_1       0.6      1.03     1.01       4.18e- 1      1.65
16 mu_1       0.7      1.00     0.764      7.19e- 2      3.23
17 mu_1       0.8      0.978    0.268      1.41e- 3     13.9 
18 mu_1       0.9      0.853    0.0220     7.86e- 7     25.7 
19 mu_0       0.1      0.245    0.0000116  1.54e-15     18.8 
20 mu_0       0.2      0.490    0.00165    3.59e-10     23.5 
21 mu_0       0.3      0.715    0.0263     4.65e- 7     20.7 
22 mu_0       0.4      0.873    0.173      7.06e- 5     15.6 
23 mu_0       0.5      0.975    0.503      3.27e- 3      8.96
24 mu_0       0.6      1.04     0.965      6.96e- 2      4.40
25 mu_0       0.7      1.05     1.06       2.52e- 1      1.79
26 mu_0       0.8      1.04     0.754      8.47e- 3      6.17
27 mu_0       0.9      1.19     0.162      1.06e- 5     25.7 
[1] "Total run time was 103.375 seconds"
