
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1250"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 8  5  9  8  5  1  6  4  3 10  9  8  7  4  9  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02133 0.32443 0.56995 0.99867 4.72400 
[1] "event indicator table: "

  0   1 
737 513 
[1] "treatment indicator table: "

  0   1 
455 795 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 657
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 593
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 57"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 107.126 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.385 0.0963
 2 mu         0.1   0.2 0.411 0.105 
 3 mu         0.1   0.3 0.445 0.124 
 4 mu         0.1   0.4 0.557 0.136 
 5 mu         0.1   0.5 0.602 0.156 
 6 mu         0.2   0.1 0.392 0.0784
 7 mu         0.2   0.2 0.432 0.0839
 8 mu         0.2   0.3 0.487 0.0998
 9 mu         0.2   0.4 0.593 0.113 
10 mu         0.2   0.5 0.626 0.120 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.777       0.0894  0.000239     19.5 
 2 mu         0.2      0.942       0.491   0.0213       19.1 
 3 mu         0.3      1.03        0.845   0.174         9.01
 4 mu         0.4      1.03        0.990   0.443         3.12
 5 mu         0.5      1.01        1       0.741         1.41
 6 mu         0.6      1.00        1       0.891         1.11
 7 mu         0.7      0.997       1       0.769         1.11
 8 mu         0.8      1.01        1       0.447         2.08
 9 mu         0.9      1.12        0.959   0.0863        9.80
10 mu_1       0.1      0.807       0.258   0.00103      27.4 
11 mu_1       0.2      0.977       0.740   0.0474       14.2 
12 mu_1       0.3      1.03        0.954   0.270         4.95
13 mu_1       0.4      1.02        0.991   0.565         2.01
14 mu_1       0.5      1.01        1       0.812         1.28
15 mu_1       0.6      0.999       1       0.887         1.11
16 mu_1       0.7      0.996       1       0.732         1.16
17 mu_1       0.8      1.02        1       0.405         2.38
18 mu_1       0.9      1.13        0.944   0.0733       10.8 
19 mu_0       0.1      0.774       0.0702  0.000151     18.7 
20 mu_0       0.2      0.933       0.421   0.0148       20.4 
21 mu_0       0.3      1.02        0.799   0.130        10.8 
22 mu_0       0.4      1.04        0.983   0.362         4.01
23 mu_0       0.5      1.02        0.997   0.650         1.60
24 mu_0       0.6      1.01        1       0.852         1.19
25 mu_0       0.7      0.997       1       0.856         1.09
26 mu_0       0.8      0.993       1       0.613         1.35
27 mu_0       0.9      0.997       0.994   0.203         2.20
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.0701    0.0000808  2.93e-12      2.19
 2 mu         0.2     0.540     0.00800    1.35e- 7     30.4 
 3 mu         0.3     1.21      0.0873     5.94e- 5     60.9 
 4 mu         0.4     1.44      0.337      3.73e- 3     46.2 
 5 mu         0.5     1.32      0.782      4.18e- 2     16.5 
 6 mu         0.6     1.18      1.09       2.39e- 1      3.29
 7 mu         0.7     1.10      0.994      1.62e- 1      3.61
 8 mu         0.8     1.02      0.473      1.85e- 3      9.06
 9 mu         0.9     0.599     0.0853     4.58e- 7      7.45
10 mu_1       0.1     0.241     0.000461   2.47e-11      6.93
11 mu_1       0.2     0.948     0.0279     5.68e- 7     47.9 
12 mu_1       0.3     1.50      0.178      1.67e- 4     64.1 
13 mu_1       0.4     1.50      0.563      7.85e- 3     36.4 
14 mu_1       0.5     1.30      1.01       7.17e- 2     10.4 
15 mu_1       0.6     1.14      1.09       3.41e- 1      2.89
16 mu_1       0.7     1.08      0.860      7.30e- 2      4.34
17 mu_1       0.8     0.978     0.342      7.31e- 4      9.53
18 mu_1       0.9     0.546     0.0545     1.61e- 7      6.97
19 mu_0       0.1     0.0511    0.0000350  5.14e-13      1.67
20 mu_0       0.2     0.438     0.00380    2.66e- 8     26.0 
21 mu_0       0.3     1.08      0.0367     1.34e- 5     59.6 
22 mu_0       0.4     1.40      0.202      9.82e- 4     52.6 
23 mu_0       0.5     1.35      0.568      1.20e- 2     22.5 
24 mu_0       0.6     1.23      1.07       8.53e- 2      4.62
25 mu_0       0.7     1.17      1.20       3.69e- 1      2.72
26 mu_0       0.8     1.19      0.985      6.34e- 3      7.15
27 mu_0       0.9     1.07      0.335      3.14e- 6     11.8 
[1] "Total run time was 110.348 seconds"
