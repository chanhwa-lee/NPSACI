
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1280"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  8  9  5  3  6  4  6  7  7  6  3  9  6  7  9 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0386  0.3767  0.6439  1.0000  5.5836 
[1] "event indicator table: "

  0   1 
757 523 
[1] "treatment indicator table: "

  0   1 
439 841 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 686
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 72"
[1] "     Cluster: 76"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 594
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 93"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 97.546 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.311 0.121 
 2 mu         0.1   0.2 0.364 0.146 
 3 mu         0.1   0.3 0.441 0.179 
 4 mu         0.1   0.4 0.479 0.181 
 5 mu         0.1   0.5 0.613 0.224 
 6 mu         0.2   0.1 0.275 0.0924
 7 mu         0.2   0.2 0.343 0.107 
 8 mu         0.2   0.3 0.418 0.137 
 9 mu         0.2   0.4 0.453 0.133 
10 mu         0.2   0.5 0.583 0.173 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.467       0.0561 0.000000195      15.7 
 2 mu         0.2      0.723       0.390  0.000179         17.8 
 3 mu         0.3      0.882       0.767  0.00643           7.43
 4 mu         0.4      0.979       0.955  0.0585            2.47
 5 mu         0.5      1.00        0.999  0.240             1.61
 6 mu         0.6      1.00        1      0.567             1.16
 7 mu         0.7      0.999       1      0.862             1.26
 8 mu         0.8      0.997       1      0.656             1.43
 9 mu         0.9      0.943       0.967  0.225             2.55
10 mu_1       0.1      0.676       0.181  0.00000109       23.7 
11 mu_1       0.2      0.842       0.644  0.000512         14.0 
12 mu_1       0.3      0.956       0.914  0.0126            4.51
13 mu_1       0.4      1.01        0.981  0.0892            2.23
14 mu_1       0.5      1.01        1      0.306             1.45
15 mu_1       0.6      1.00        1      0.638             1.12
16 mu_1       0.7      0.999       1      0.815             1.31
17 mu_1       0.8      0.995       1      0.616             1.43
18 mu_1       0.9      0.935       0.962  0.201             2.72
19 mu_0       0.1      0.444       0.0408 0.0000000954     14.8 
20 mu_0       0.2      0.693       0.323  0.0000956        18.8 
21 mu_0       0.3      0.851       0.685  0.00378           8.68
22 mu_0       0.4      0.961       0.911  0.0380            2.83
23 mu_0       0.5      1.00        0.981  0.173             1.78
24 mu_0       0.6      1.00        1.00   0.460             1.25
25 mu_0       0.7      1.00        1      0.794             1.16
26 mu_0       0.8      1.00        1.01   0.775             1.43
27 mu_0       0.9      1.01        1      0.441             1.64
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.308   0.00000972  1.34e-12     21.2 
 2 mu         0.2      0.838   0.00219     3.47e- 8     52.1 
 3 mu         0.3      0.987   0.0334      1.16e- 5     46.3 
 4 mu         0.4      0.931   0.207       6.40e- 4     23.5 
 5 mu         0.5      0.928   0.579       1.23e- 2      7.41
 6 mu         0.6      0.982   0.887       1.10e- 1      2.51
 7 mu         0.7      1.03    0.885       6.92e- 2      4.04
 8 mu         0.8      1.18    0.584       2.05e- 3     10.2 
 9 mu         0.9      1.91    0.0834      3.20e- 6     43.8 
10 mu_1       0.1      0.796   0.0000620   1.18e-11     48.8 
11 mu_1       0.2      1.13    0.00706     1.53e- 7     60.2 
12 mu_1       0.3      1.01    0.0811      3.43e- 5     35.6 
13 mu_1       0.4      0.908   0.337       1.41e- 3     13.6 
14 mu_1       0.5      0.931   0.822       2.23e- 2      3.42
15 mu_1       0.6      0.992   0.906       1.83e- 1      2.49
16 mu_1       0.7      1.04    0.883       2.83e- 2      5.25
17 mu_1       0.8      1.24    0.451       7.32e- 4     11.8 
18 mu_1       0.9      2.00    0.0589      1.02e- 6     48.7 
19 mu_0       0.1      0.254   0.00000308  0            18.1 
20 mu_0       0.2      0.764   0.000782    0            50.1 
21 mu_0       0.3      0.976   0.0135      0            50.9 
22 mu_0       0.4      0.947   0.114       0            30.1 
23 mu_0       0.5      0.926   0.414       0            11.4 
24 mu_0       0.6      0.968   0.753       0             3.92
25 mu_0       0.7      0.985   0.935       0             2.64
26 mu_0       0.8      0.958   0.843       0             4.65
27 mu_0       0.9      1.07    0.228       0            15.1 
[1] "Total run time was 100.153 seconds"
