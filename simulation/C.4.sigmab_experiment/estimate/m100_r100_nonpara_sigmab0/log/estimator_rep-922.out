
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1260"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 3  8 10  6  6  6  7  6  8  2  2  5  7  7 11  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04116 0.34554 0.60899 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
753 507 
[1] "treatment indicator table: "

  0   1 
425 835 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 640
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 620
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 147.208 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.393 0.109 
 2 mu         0.1   0.2 0.519 0.100 
 3 mu         0.1   0.3 0.660 0.128 
 4 mu         0.1   0.4 0.668 0.127 
 5 mu         0.1   0.5 0.691 0.130 
 6 mu         0.2   0.1 0.341 0.0699
 7 mu         0.2   0.2 0.457 0.0587
 8 mu         0.2   0.3 0.598 0.0875
 9 mu         0.2   0.4 0.617 0.0809
10 mu         0.2   0.5 0.642 0.0767
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      0.347       0.0901 0.00000198       5.49
 2 mu         0.2      0.581       0.422  0.000862         3.35
 3 mu         0.3      0.832       0.794  0.0194           4.30
 4 mu         0.4      0.980       0.996  0.121            4.92
 5 mu         0.5      1.01        1      0.359            3.43
 6 mu         0.6      0.999       1      0.649            1.79
 7 mu         0.7      0.999       1      0.831            1.20
 8 mu         0.8      1.02        1      0.491            1.90
 9 mu         0.9      1.08        1      0.0955           4.34
10 mu_1       0.1      0.516       0.269  0.0000111        4.74
11 mu_1       0.2      0.743       0.729  0.00243          3.66
12 mu_1       0.3      0.941       0.973  0.0370           5.20
13 mu_1       0.4      1.02        1      0.178            4.65
14 mu_1       0.5      1.01        1      0.439            2.80
15 mu_1       0.6      0.997       0.993  0.710            1.48
16 mu_1       0.7      1.00        1      0.793            1.28
17 mu_1       0.8      1.02        1      0.443            2.06
18 mu_1       0.9      1.08        1      0.0804           4.67
19 mu_0       0.1      0.329       0.0675 0.000000968      5.57
20 mu_0       0.2      0.541       0.338  0.000469         3.72
21 mu_0       0.3      0.785       0.713  0.0118           3.91
22 mu_0       0.4      0.955       0.962  0.0835           5.11
23 mu_0       0.5      1.01        1      0.279            4.06
24 mu_0       0.6      1.00        1      0.558            2.27
25 mu_0       0.7      0.993       0.992  0.804            1.24
26 mu_0       0.8      0.999       1      0.682            1.22
27 mu_0       0.9      1.02        1      0.232            1.65
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.0529    0.0000334  1.39e-14      2.33
 2 mu         0.2     0.831     0.00340    3.23e- 9     54.4 
 3 mu         0.3     2.33      0.0349     4.18e- 6    164.  
 4 mu         0.4     2.61      0.168      6.35e- 4    166.  
 5 mu         0.5     1.76      0.515      1.85e- 2     73.8 
 6 mu         0.6     1.20      0.939      1.37e- 1     14.5 
 7 mu         0.7     1.15      0.993      1.51e- 1      7.53
 8 mu         0.8     1.60      0.737      8.19e- 3     55.5 
 9 mu         0.9     3.36      0.137      3.70e- 6    231.  
10 mu_1       0.1     0.187     0.000217   1.31e-13      7.77
11 mu_1       0.2     1.47      0.0124     1.53e- 8     95.3 
12 mu_1       0.3     2.81      0.0863     1.32e- 5    191.  
13 mu_1       0.4     2.49      0.307      1.50e- 3    145.  
14 mu_1       0.5     1.58      0.702      2.96e- 2     51.7 
15 mu_1       0.6     1.18      1.04       1.87e- 1      8.48
16 mu_1       0.7     1.19      0.946      8.70e- 2     10.2 
17 mu_1       0.8     1.72      0.668      3.92e- 3     65.7 
18 mu_1       0.9     3.50      0.0998     1.44e- 6    243.  
19 mu_0       0.1     0.0380    0.0000115  0             1.73
20 mu_0       0.2     0.670     0.000858   0            44.2 
21 mu_0       0.3     2.13      0.0134     0           152.  
22 mu_0       0.4     2.69      0.0914     0           179.  
23 mu_0       0.5     1.94      0.324      0            95.9 
24 mu_0       0.6     1.24      0.724      0            23.6 
25 mu_0       0.7     1.04      0.934      0             3.81
26 mu_0       0.8     1.12      0.831      0            14.6 
27 mu_0       0.9     2.09      0.293      0           122.  
[1] "Total run time was 150.853 seconds"
