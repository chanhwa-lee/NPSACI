
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1181"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 9  4  9 10  3  6  7  9  4  7  6  8  6  5  3  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03849 0.41249 0.63394 1.00000 5.26735 
[1] "event indicator table: "

  0   1 
711 470 
[1] "treatment indicator table: "

  0   1 
401 780 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 590
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 591
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 176.045 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.439 0.113 
 2 mu         0.1   0.2 0.572 0.126 
 3 mu         0.1   0.3 0.724 0.206 
 4 mu         0.1   0.4 0.758 0.201 
 5 mu         0.1   0.5 0.771 0.194 
 6 mu         0.2   0.1 0.360 0.0744
 7 mu         0.2   0.2 0.494 0.0847
 8 mu         0.2   0.3 0.636 0.169 
 9 mu         0.2   0.4 0.658 0.163 
10 mu         0.2   0.5 0.677 0.155 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.633        0.197 0.000151       8.22
 2 mu         0.2      0.956        0.552 0.0141         7.89
 3 mu         0.3      1.02         0.847 0.121          4.35
 4 mu         0.4      1.00         0.970 0.360          2.44
 5 mu         0.5      0.995        0.988 0.641          2.07
 6 mu         0.6      0.997        1     0.844          1.41
 7 mu         0.7      0.999        1     0.887          1.09
 8 mu         0.8      0.999        1     0.548          1.61
 9 mu         0.9      1.00         1     0.165          3.02
10 mu_1       0.1      0.955        0.510 0.000716      11.0 
11 mu_1       0.2      1.06         0.828 0.0337         6.98
12 mu_1       0.3      1.03         0.948 0.198          3.54
13 mu_1       0.4      1.00         0.997 0.461          2.37
14 mu_1       0.5      0.997        1     0.728          1.92
15 mu_1       0.6      0.999        1     0.901          1.28
16 mu_1       0.7      0.999        1     0.851          1.12
17 mu_1       0.8      0.999        1     0.504          1.71
18 mu_1       0.9      1.00         1.00  0.147          3.10
19 mu_0       0.1      0.597        0.158 0.0000888      7.91
20 mu_0       0.2      0.930        0.476 0.00923        8.12
21 mu_0       0.3      1.02         0.786 0.0856         4.96
22 mu_0       0.4      1.01         0.937 0.278          2.66
23 mu_0       0.5      0.994        0.980 0.555          2.22
24 mu_0       0.6      0.995        1     0.747          1.60
25 mu_0       0.7      0.999        1     0.898          1.11
26 mu_0       0.8      1.00         1     0.721          1.24
27 mu_0       0.9      1.01         1     0.332          2.29
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.260    0.0000337  3.76e-14     23.3 
 2 mu         0.2      0.394    0.00487    2.19e- 9     25.8 
 3 mu         0.3      0.562    0.0470     1.26e- 6     19.9 
 4 mu         0.4      0.797    0.233      1.08e- 4     12.3 
 5 mu         0.5      1.00     0.569      3.19e- 3      6.15
 6 mu         0.6      1.08     0.944      4.72e- 2      3.30
 7 mu         0.7      1.03     1.00       2.58e- 1      2.79
 8 mu         0.8      0.939    0.610      1.79e- 2      6.19
 9 mu         0.9      0.840    0.128      7.08e- 5     10.8 
10 mu_1       0.1      0.500    0.000198   3.54e-13     38.8 
11 mu_1       0.2      0.509    0.0170     1.03e- 8     21.5 
12 mu_1       0.3      0.668    0.111      3.95e- 6     11.0 
13 mu_1       0.4      0.889    0.408      2.54e- 4      5.86
14 mu_1       0.5      1.05     0.752      6.01e- 3      5.64
15 mu_1       0.6      1.07     1.04       7.40e- 2      2.60
16 mu_1       0.7      1.00     0.963      1.58e- 1      3.59
17 mu_1       0.8      0.918    0.486      8.94e- 3      6.96
18 mu_1       0.9      0.815    0.0901     3.15e- 5     11.2 
19 mu_0       0.1      0.233    0.0000155  2.46e-15     21.5 
20 mu_0       0.2      0.366    0.00158    1.61e-10     26.9 
21 mu_0       0.3      0.517    0.0221     1.06e- 7     23.6 
22 mu_0       0.4      0.735    0.110      1.06e- 5     17.0 
23 mu_0       0.5      0.959    0.366      3.75e- 4     10.3 
24 mu_0       0.6      1.09     0.774      6.94e- 3      5.04
25 mu_0       0.7      1.08     1.07       8.18e- 2      1.96
26 mu_0       0.8      1.03     1.04       5.36e- 2      3.09
27 mu_0       0.9      1.07     0.463      4.25e- 4      8.93
[1] "Total run time was 179.032 seconds"
