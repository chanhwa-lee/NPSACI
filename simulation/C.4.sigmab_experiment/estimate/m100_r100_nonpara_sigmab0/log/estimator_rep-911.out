
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1366"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  5  1  5  9  6  7  4  3  5 11  5  7  8 14  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03415 0.36172 0.60226 1.00000 5.44979 
[1] "event indicator table: "

  0   1 
854 512 
[1] "treatment indicator table: "

  0   1 
488 878 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 690
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 676
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 178.013 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.269 0.111 
 2 mu         0.1   0.2 0.365 0.125 
 3 mu         0.1   0.3 0.446 0.144 
 4 mu         0.1   0.4 0.496 0.160 
 5 mu         0.1   0.5 0.558 0.193 
 6 mu         0.2   0.1 0.246 0.0800
 7 mu         0.2   0.2 0.350 0.0841
 8 mu         0.2   0.3 0.430 0.0928
 9 mu         0.2   0.4 0.471 0.103 
10 mu         0.2   0.5 0.522 0.125 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.632       0.0634 0.0000890     19.6 
 2 mu         0.2      0.823       0.385  0.0150        12.6 
 3 mu         0.3      0.926       0.798  0.169         10.5 
 4 mu         0.4      0.962       0.965  0.390          4.59
 5 mu         0.5      0.978       0.993  0.640          1.74
 6 mu         0.6      0.994       0.999  0.823          1.16
 7 mu         0.7      1.00        1      0.766          1.17
 8 mu         0.8      0.988       1      0.513          1.41
 9 mu         0.9      0.958       0.982  0.136          2.68
10 mu_1       0.1      0.798       0.201  0.000424      16.6 
11 mu_1       0.2      0.878       0.686  0.0361        14.1 
12 mu_1       0.3      0.944       0.930  0.248          8.29
13 mu_1       0.4      0.968       0.984  0.484          3.13
14 mu_1       0.5      0.983       0.997  0.708          1.39
15 mu_1       0.6      0.998       1      0.869          1.13
16 mu_1       0.7      1.00        1      0.732          1.19
17 mu_1       0.8      0.986       1      0.483          1.50
18 mu_1       0.9      0.956       0.976  0.117          2.84
19 mu_0       0.1      0.614       0.0490 0.0000518     20.0 
20 mu_0       0.2      0.810       0.325  0.00976       12.6 
21 mu_0       0.3      0.918       0.734  0.124         11.4 
22 mu_0       0.4      0.959       0.934  0.327          5.57
23 mu_0       0.5      0.973       0.990  0.563          2.10
24 mu_0       0.6      0.987       0.994  0.735          1.21
25 mu_0       0.7      1.00        1      0.846          1.14
26 mu_0       0.8      0.997       1      0.631          1.26
27 mu_0       0.9      0.975       1      0.306          1.57
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.0205   0.0000122   5.81e-13     0.480
 2 mu         0.2     0.212    0.00212     5.34e- 8     7.95 
 3 mu         0.3     0.670    0.0332      3.53e- 5    23.8  
 4 mu         0.4     1.08     0.178       2.15e- 3    28.7  
 5 mu         0.5     1.19     0.601       2.71e- 2    17.7  
 6 mu         0.6     1.16     1.00        1.86e- 1     5.66 
 7 mu         0.7     1.17     1.01        8.92e- 2     5.00 
 8 mu         0.8     1.07     0.532       3.92e- 3    14.3  
 9 mu         0.9     0.603    0.0615      4.36e- 6    13.3  
10 mu_1       0.1     0.0808   0.0000871   4.93e-12     1.60 
11 mu_1       0.2     0.424    0.00705     2.27e- 7    14.9  
12 mu_1       0.3     0.927    0.0786      9.99e- 5    29.8  
13 mu_1       0.4     1.20     0.311       4.65e- 3    26.9  
14 mu_1       0.5     1.20     0.784       4.70e- 2    13.2  
15 mu_1       0.6     1.16     1.09        2.19e- 1     3.54 
16 mu_1       0.7     1.17     0.953       4.64e- 2     6.07 
17 mu_1       0.8     1.04     0.447       1.91e- 3    15.2  
18 mu_1       0.9     0.557    0.0441      1.89e- 6    12.5  
19 mu_0       0.1     0.0138   0.00000317  0            0.356
20 mu_0       0.2     0.159    0.000995    0            6.21 
21 mu_0       0.3     0.560    0.0140      0           21.3  
22 mu_0       0.4     0.991    0.0908      0           29.8  
23 mu_0       0.5     1.17     0.371       0           22.1  
24 mu_0       0.6     1.15     0.853       0            8.84 
25 mu_0       0.7     1.16     1.10        0            3.19 
26 mu_0       0.8     1.21     0.874       0           10.8  
27 mu_0       0.9     1.02     0.222       0           19.9  
[1] "Total run time was 182.574 seconds"
