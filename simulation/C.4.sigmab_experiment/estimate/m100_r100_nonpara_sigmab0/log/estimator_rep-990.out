
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1256"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 8  4  4  8  9  6  6  6  5  5  7  6  5  4 12  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04081 0.33004 0.61153 1.00000 4.46695 
[1] "event indicator table: "

  0   1 
748 508 
[1] "treatment indicator table: "

  0   1 
441 815 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 606
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 650
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 310.233 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.365 0.108 
 2 mu         0.1   0.2 0.552 0.196 
 3 mu         0.1   0.3 0.638 0.231 
 4 mu         0.1   0.4 0.633 0.215 
 5 mu         0.1   0.5 0.630 0.201 
 6 mu         0.2   0.1 0.333 0.0621
 7 mu         0.2   0.2 0.505 0.130 
 8 mu         0.2   0.3 0.591 0.157 
 9 mu         0.2   0.4 0.588 0.134 
10 mu         0.2   0.5 0.604 0.116 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.878       0.113  0.0000620     40.4 
 2 mu         0.2      0.974       0.422  0.00945       13.9 
 3 mu         0.3      1.01        0.811  0.100          6.35
 4 mu         0.4      0.988       1      0.350          4.21
 5 mu         0.5      0.985       1      0.646          1.91
 6 mu         0.6      0.999       1      0.867          1.16
 7 mu         0.7      1.00        1      0.863          1.31
 8 mu         0.8      0.989       0.998  0.578          1.86
 9 mu         0.9      0.965       0.927  0.161          5.06
10 mu_1       0.1      1.01        0.311  0.000280      25.2 
11 mu_1       0.2      1.03        0.659  0.0217         7.94
12 mu_1       0.3      1.02        0.946  0.159          6.13
13 mu_1       0.4      0.990       1      0.444          3.31
14 mu_1       0.5      0.991       1      0.720          1.52
15 mu_1       0.6      1.00        1      0.893          1.13
16 mu_1       0.7      1.00        1      0.833          1.37
17 mu_1       0.8      0.985       0.992  0.532          1.92
18 mu_1       0.9      0.961       0.929  0.140          5.49
19 mu_0       0.1      0.864       0.0895 0.0000377     42.1 
20 mu_0       0.2      0.960       0.356  0.00638       16.2 
21 mu_0       0.3      1.00        0.741  0.0749         6.62
22 mu_0       0.4      0.987       0.975  0.287          4.80
23 mu_0       0.5      0.979       1      0.573          2.31
24 mu_0       0.6      0.994       1      0.769          1.23
25 mu_0       0.7      1.01        1      0.910          1.16
26 mu_0       0.8      1.01        1      0.764          1.61
27 mu_0       0.9      0.999       1      0.350          2.39
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.906   0.0000160   9.61e-14     63.7 
 2 mu         0.2      1.24    0.00275     8.84e- 9     55.8 
 3 mu         0.3      1.30    0.0452      5.84e- 6     32.9 
 4 mu         0.4      1.23    0.266       4.89e- 4     14.9 
 5 mu         0.5      1.13    0.701       1.26e- 2      6.06
 6 mu         0.6      1.06    0.965       1.43e- 1      2.52
 7 mu         0.7      1.05    0.988       5.27e- 2      2.58
 8 mu         0.8      1.07    0.631       7.92e- 4      8.93
 9 mu         0.9      1.12    0.0928      3.48e- 7     29.0 
10 mu_1       0.1      1.48    0.0000958   8.16e-13     79.6 
11 mu_1       0.2      1.31    0.00976     3.76e- 8     34.9 
12 mu_1       0.3      1.21    0.0969      1.65e- 5     19.4 
13 mu_1       0.4      1.13    0.459       1.04e- 3      9.67
14 mu_1       0.5      1.07    0.869       2.14e- 2      3.90
15 mu_1       0.6      1.05    1.02        2.02e- 1      2.43
16 mu_1       0.7      1.05    1.04        2.21e- 2      3.36
17 mu_1       0.8      1.08    0.537       2.91e- 4     11.2 
18 mu_1       0.9      1.14    0.0620      1.14e- 7     32.2 
19 mu_0       0.1      0.843   0.00000510  0            61.9 
20 mu_0       0.2      1.22    0.00105     0            61.1 
21 mu_0       0.3      1.34    0.0231      0            41.1 
22 mu_0       0.4      1.30    0.150       0            21.7 
23 mu_0       0.5      1.19    0.456       0             9.16
24 mu_0       0.6      1.09    0.786       0             4.29
25 mu_0       0.7      1.03    1.06        0             2.58
26 mu_0       0.8      1.01    0.918       0             3.68
27 mu_0       0.9      0.918   0.241       0             9.65
[1] "Total run time was 315.379 seconds"
