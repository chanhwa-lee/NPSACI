
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1261"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  3  5 14  4  7  6  5  7  8  6  6  8  8  5  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04485 0.33925 0.58313 1.00000 4.00000 
[1] "event indicator table: "

  0   1 
754 507 
[1] "treatment indicator table: "

  0   1 
465 796 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 664
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 60"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 81"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 597
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 181.773 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.412 0.149 
 2 mu         0.1   0.2 0.453 0.187 
 3 mu         0.1   0.3 0.488 0.206 
 4 mu         0.1   0.4 0.515 0.217 
 5 mu         0.1   0.5 0.557 0.228 
 6 mu         0.2   0.1 0.386 0.0800
 7 mu         0.2   0.2 0.449 0.101 
 8 mu         0.2   0.3 0.470 0.107 
 9 mu         0.2   0.4 0.494 0.107 
10 mu         0.2   0.5 0.528 0.107 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.16         0.140 0.0000444     33.3 
 2 mu         0.2      1.10         0.592 0.00831       13.8 
 3 mu         0.3      1.12         0.873 0.107          9.41
 4 mu         0.4      1.10         0.992 0.335          8.56
 5 mu         0.5      1.05         1     0.625          4.13
 6 mu         0.6      1.01         1.01  0.850          1.51
 7 mu         0.7      0.996        0.995 0.735          1.26
 8 mu         0.8      0.954        0.977 0.459          1.78
 9 mu         0.9      0.885        0.821 0.111          6.89
10 mu_1       0.1      0.873        0.367 0.000205       9.77
11 mu_1       0.2      1.01         0.835 0.0198         6.79
12 mu_1       0.3      1.08         0.981 0.177         10.5 
13 mu_1       0.4      1.07         1     0.425          7.28
14 mu_1       0.5      1.03         1     0.709          3.02
15 mu_1       0.6      1.01         1.00  0.868          1.22
16 mu_1       0.7      0.990        0.997 0.704          1.33
17 mu_1       0.8      0.946        0.962 0.425          2.00
18 mu_1       0.9      0.880        0.815 0.0968         7.53
19 mu_0       0.1      1.19         0.109 0.0000266     36.9 
20 mu_0       0.2      1.13         0.527 0.00544       16.9 
21 mu_0       0.3      1.14         0.808 0.0772         8.94
22 mu_0       0.4      1.12         0.979 0.265          9.41
23 mu_0       0.5      1.06         1     0.541          5.23
24 mu_0       0.6      1.02         1.00  0.808          1.95
25 mu_0       0.7      1.01         1.00  0.807          1.15
26 mu_0       0.8      0.989        0.999 0.596          1.30
27 mu_0       0.9      0.929        0.980 0.239          1.98
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.0552    0.0000849  2.64e-12     1.23 
 2 mu         0.2     0.396     0.00738    1.17e- 7    11.8  
 3 mu         0.3     0.827     0.0639     3.93e- 5    23.6  
 4 mu         0.4     1.01      0.290      2.16e- 3    17.9  
 5 mu         0.5     1.05      0.633      3.99e- 2     6.37 
 6 mu         0.6     1.09      0.946      2.28e- 1     3.92 
 7 mu         0.7     1.22      0.955      3.89e- 2    22.7  
 8 mu         0.8     1.56      0.434      5.84e- 4    65.2  
 9 mu         0.9     1.39      0.0557     1.77e- 7    60.4  
10 mu_1       0.1     0.182     0.000516   2.24e-11     3.62 
11 mu_1       0.2     0.673     0.0234     5.17e- 7    18.6  
12 mu_1       0.3     1.02      0.142      1.15e- 4    24.8  
13 mu_1       0.4     1.08      0.477      4.76e- 3    14.1  
14 mu_1       0.5     1.09      0.796      6.85e- 2     4.02 
15 mu_1       0.6     1.11      0.955      2.78e- 1     5.56 
16 mu_1       0.7     1.25      0.892      1.63e- 2    27.6  
17 mu_1       0.8     1.59      0.334      2.15e- 4    69.3  
18 mu_1       0.9     1.34      0.0404     6.23e- 8    57.0  
19 mu_0       0.1     0.0411    0.0000314  0            0.964
20 mu_0       0.2     0.327     0.00262    0           10.0  
21 mu_0       0.3     0.745     0.0288     0           23.1  
22 mu_0       0.4     0.958     0.167      0           20.4  
23 mu_0       0.5     1.01      0.507      0            8.72 
24 mu_0       0.6     1.07      0.835      0            3.61 
25 mu_0       0.7     1.16      0.952      0           11.4  
26 mu_0       0.8     1.45      0.833      0           48.9  
27 mu_0       0.9     1.83      0.197      0           90.6  
[1] "Total run time was 186.761 seconds"
