
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1246"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 8  5  4 10  7  6  5  2  6  5  9  7 11  5  6  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03141 0.35043 0.62391 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
780 466 
[1] "treatment indicator table: "

  0   1 
428 818 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 611
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 30"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 635
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 11"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 326.789 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.360 0.107 
 2 mu         0.1   0.2 0.390 0.113 
 3 mu         0.1   0.3 0.402 0.119 
 4 mu         0.1   0.4 0.416 0.130 
 5 mu         0.1   0.5 0.432 0.142 
 6 mu         0.2   0.1 0.297 0.0923
 7 mu         0.2   0.2 0.350 0.110 
 8 mu         0.2   0.3 0.369 0.122 
 9 mu         0.2   0.4 0.400 0.131 
10 mu         0.2   0.5 0.437 0.142 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.794       0.113  0.0000228     19.0 
 2 mu         0.2      1.20        0.591  0.00485       37.7 
 3 mu         0.3      1.17        0.865  0.0704        26.2 
 4 mu         0.4      1.05        1      0.316          9.00
 5 mu         0.5      1.01        1      0.694          2.44
 6 mu         0.6      1.01        1      0.886          1.31
 7 mu         0.7      1.00        1      0.794          1.12
 8 mu         0.8      0.992       1      0.535          1.35
 9 mu         0.9      0.981       0.998  0.138          2.15
10 mu_1       0.1      1.11        0.313  0.000116      28.9 
11 mu_1       0.2      1.28        0.860  0.0126        39.8 
12 mu_1       0.3      1.13        0.980  0.124         18.8 
13 mu_1       0.4      1.03        1      0.431          5.28
14 mu_1       0.5      1.01        1      0.776          1.74
15 mu_1       0.6      1.01        1      0.904          1.24
16 mu_1       0.7      1.00        1      0.765          1.16
17 mu_1       0.8      0.990       1      0.490          1.40
18 mu_1       0.9      0.979       0.997  0.121          2.32
19 mu_0       0.1      0.760       0.0923 0.0000125     18.3 
20 mu_0       0.2      1.18        0.515  0.00292       37.2 
21 mu_0       0.3      1.20        0.813  0.0473        29.4 
22 mu_0       0.4      1.07        0.999  0.239         11.5 
23 mu_0       0.5      1.01        1      0.595          3.15
24 mu_0       0.6      1.01        1      0.804          1.42
25 mu_0       0.7      1.01        1      0.863          1.15
26 mu_0       0.8      0.998       1      0.715          1.17
27 mu_0       0.9      0.993       1      0.295          1.46
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.0220    0.0000503  8.66e-15     1.12 
 2 mu         0.2     0.107     0.00448    1.79e- 9     2.80 
 3 mu         0.3     0.307     0.0574     2.03e- 6     3.69 
 4 mu         0.4     0.634     0.275      2.65e- 4     3.54 
 5 mu         0.5     0.963     0.706      8.20e- 3     5.29 
 6 mu         0.6     1.10      1.00       8.42e- 2     5.50 
 7 mu         0.7     1.06      0.999      1.87e- 1     3.48 
 8 mu         0.8     1.07      0.563      1.09e- 2     7.71 
 9 mu         0.9     1.08      0.0707     4.30e- 5    16.1  
10 mu_1       0.1     0.0865    0.000321   7.80e-14     3.74 
11 mu_1       0.2     0.234     0.0168     8.07e- 9     4.67 
12 mu_1       0.3     0.487     0.125      6.09e- 6     4.10 
13 mu_1       0.4     0.813     0.464      5.95e- 4     3.39 
14 mu_1       0.5     1.07      0.905      1.53e- 2     5.88 
15 mu_1       0.6     1.12      1.03       1.31e- 1     5.24 
16 mu_1       0.7     1.04      0.944      1.07e- 1     4.09 
17 mu_1       0.8     1.07      0.457      5.43e- 3     8.67 
18 mu_1       0.9     1.06      0.0500     1.91e- 5    16.1  
19 mu_0       0.1     0.0148    0.0000184  0            0.830
20 mu_0       0.2     0.0749    0.00164    0            2.33 
21 mu_0       0.3     0.229     0.0258     0            3.52 
22 mu_0       0.4     0.514     0.161      0            3.94 
23 mu_0       0.5     0.860     0.519      0            4.71 
24 mu_0       0.6     1.09      0.971      0            6.11 
25 mu_0       0.7     1.09      1.04       0            4.57 
26 mu_0       0.8     1.06      0.925      0            5.89 
27 mu_0       0.9     1.32      0.257      0           16.1  
[1] "Total run time was 331.765 seconds"
