
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1214"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 7  5  6  8  4  7  6  5 12  9 10  5  2  5  5  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02766 0.32048 0.59960 0.97424 5.00000 
[1] "event indicator table: "

  0   1 
727 487 
[1] "treatment indicator table: "

  0   1 
436 778 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 598
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 616
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 143.679 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.489 0.135 
 2 mu         0.1   0.2 0.512 0.136 
 3 mu         0.1   0.3 0.627 0.164 
 4 mu         0.1   0.4 0.633 0.164 
 5 mu         0.1   0.5 0.656 0.161 
 6 mu         0.2   0.1 0.376 0.0721
 7 mu         0.2   0.2 0.412 0.0713
 8 mu         0.2   0.3 0.519 0.0988
 9 mu         0.2   0.4 0.530 0.0985
10 mu         0.2   0.5 0.571 0.0903
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.579        0.158 0.0000582     10.4 
 2 mu         0.2      0.841        0.549 0.0102         9.52
 3 mu         0.3      1.03         0.920 0.0845         6.75
 4 mu         0.4      1.08         1     0.287          5.44
 5 mu         0.5      1.04         1     0.587          2.52
 6 mu         0.6      1.01         1     0.849          1.26
 7 mu         0.7      0.996        1     0.761          1.22
 8 mu         0.8      0.977        0.980 0.470          1.89
 9 mu         0.9      0.928        0.938 0.126          2.82
10 mu_1       0.1      0.776        0.392 0.000292      12.8 
11 mu_1       0.2      0.990        0.845 0.0248         7.88
12 mu_1       0.3      1.09         1     0.146          7.18
13 mu_1       0.4      1.07         1     0.394          4.49
14 mu_1       0.5      1.03         1     0.690          1.92
15 mu_1       0.6      1.01         1     0.884          1.18
16 mu_1       0.7      0.993        1     0.719          1.27
17 mu_1       0.8      0.973        0.978 0.426          2.01
18 mu_1       0.9      0.922        0.921 0.108          2.80
19 mu_0       0.1      0.557        0.128 0.0000322     11.5 
20 mu_0       0.2      0.804        0.453 0.00642        9.93
21 mu_0       0.3      1.01         0.834 0.0579         6.65
22 mu_0       0.4      1.08         1     0.216          6.07
23 mu_0       0.5      1.06         1     0.483          3.12
24 mu_0       0.6      1.02         1     0.747          1.39
25 mu_0       0.7      1.00         1     0.859          1.15
26 mu_0       0.8      0.994        1     0.645          1.41
27 mu_0       0.9      0.982        0.980 0.284          3.00
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.324    0.0000365  2.08e-11     15.5 
 2 mu         0.2      1.46     0.00352    4.25e- 7     50.7 
 3 mu         0.3      2.57     0.0479     1.09e- 4    116.  
 4 mu         0.4      2.48     0.255      4.13e- 3    103.  
 5 mu         0.5      1.75     0.681      4.96e- 2     44.0 
 6 mu         0.6      1.31     1.05       2.45e- 1      9.02
 7 mu         0.7      1.21     1.03       1.48e- 1      6.53
 8 mu         0.8      1.14     0.612      9.80e- 3      7.36
 9 mu         0.9      1.00     0.131      6.12e- 6     14.3 
10 mu_1       0.1      0.893    0.000245   1.64e-10     42.3 
11 mu_1       0.2      2.26     0.0108     1.68e- 6     84.5 
12 mu_1       0.3      2.83     0.111      2.87e- 4    129.  
13 mu_1       0.4      2.24     0.440      8.49e- 3     85.6 
14 mu_1       0.5      1.54     0.927      8.94e- 2     29.3 
15 mu_1       0.6      1.26     1.05       3.54e- 1      5.01
16 mu_1       0.7      1.21     1.02       8.02e- 2      7.18
17 mu_1       0.8      1.14     0.509      5.16e- 3      7.21
18 mu_1       0.9      1.00     0.0941     2.27e- 6     15.9 
19 mu_0       0.1      0.261    0.0000102  0            12.5 
20 mu_0       0.2      1.26     0.00135    0            44.0 
21 mu_0       0.3      2.46     0.0209     0           111.  
22 mu_0       0.4      2.63     0.139      0           114.  
23 mu_0       0.5      1.97     0.446      0            58.6 
24 mu_0       0.6      1.39     0.905      0            15.0 
25 mu_0       0.7      1.20     1.03       0             5.03
26 mu_0       0.8      1.15     0.947      0             8.49
27 mu_0       0.9      1.01     0.281      0             9.74
[1] "Total run time was 147.297 seconds"
