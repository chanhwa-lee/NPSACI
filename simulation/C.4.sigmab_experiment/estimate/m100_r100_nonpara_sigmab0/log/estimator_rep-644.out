
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1216"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  7  5  7  7  9  7  4  6  9  7 10  5  5  4  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.05093 0.38281 0.60440 1.00000 5.53649 
[1] "event indicator table: "

  0   1 
710 506 
[1] "treatment indicator table: "

  0   1 
417 799 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 638
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 578
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 44"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 90.46 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.372 0.0927
 2 mu         0.1   0.2 0.422 0.0947
 3 mu         0.1   0.3 0.444 0.105 
 4 mu         0.1   0.4 0.530 0.114 
 5 mu         0.1   0.5 0.548 0.127 
 6 mu         0.2   0.1 0.336 0.0589
 7 mu         0.2   0.2 0.448 0.0813
 8 mu         0.2   0.3 0.477 0.0826
 9 mu         0.2   0.4 0.534 0.0842
10 mu         0.2   0.5 0.587 0.101 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.618       0.0903 0.000149      10.5 
 2 mu         0.2      0.822       0.425  0.0156        11.9 
 3 mu         0.3      0.938       0.751  0.119          6.85
 4 mu         0.4      0.995       1      0.332          3.00
 5 mu         0.5      1.01        1      0.596          1.46
 6 mu         0.6      1.01        1.00   0.833          1.18
 7 mu         0.7      0.998       0.999  0.902          1.25
 8 mu         0.8      0.982       1      0.707          1.46
 9 mu         0.9      0.976       0.984  0.266          2.10
10 mu_1       0.1      0.796       0.273  0.000655      16.3 
11 mu_1       0.2      0.894       0.654  0.0357         9.61
12 mu_1       0.3      0.962       0.921  0.190          4.13
13 mu_1       0.4      1.00        1      0.427          1.82
14 mu_1       0.5      1.01        1      0.677          1.38
15 mu_1       0.6      1.01        1.00   0.885          1.15
16 mu_1       0.7      0.995       0.998  0.861          1.26
17 mu_1       0.8      0.979       0.997  0.676          1.53
18 mu_1       0.9      0.977       0.975  0.237          2.24
19 mu_0       0.1      0.598       0.0699 0.0000930      9.84
20 mu_0       0.2      0.804       0.363  0.0106        12.5 
21 mu_0       0.3      0.928       0.712  0.0888         8.02
22 mu_0       0.4      0.991       0.984  0.269          3.80
23 mu_0       0.5      1.01        1      0.514          1.74
24 mu_0       0.6      1.01        1.00   0.755          1.27
25 mu_0       0.7      1.00        1      0.916          1.23
26 mu_0       0.8      0.994       0.994  0.813          1.31
27 mu_0       0.9      0.969       0.995  0.520          1.57
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.372   0.0000190   6.78e-13     23.6 
 2 mu         0.2      0.802   0.00289     3.51e- 8     26.2 
 3 mu         0.3      1.23    0.0421      1.77e- 5     30.1 
 4 mu         0.4      1.34    0.205       1.29e- 3     19.5 
 5 mu         0.5      1.25    0.552       3.19e- 2      6.37
 6 mu         0.6      1.16    1.00        2.41e- 1      3.76
 7 mu         0.7      1.16    1.08        3.42e- 2      3.64
 8 mu         0.8      1.14    0.736       2.61e- 4      9.42
 9 mu         0.9      0.881   0.136       3.23e- 8     15.5 
10 mu_1       0.1      0.776   0.000127    6.02e-12     39.4 
11 mu_1       0.2      1.09    0.00988     1.56e- 7     25.7 
12 mu_1       0.3      1.34    0.104       5.23e- 5     30.1 
13 mu_1       0.4      1.30    0.382       2.88e- 3     14.6 
14 mu_1       0.5      1.18    0.771       5.67e- 2      5.23
15 mu_1       0.6      1.14    1.08        3.40e- 1      2.72
16 mu_1       0.7      1.17    1.07        1.47e- 2      4.16
17 mu_1       0.8      1.13    0.629       9.80e- 5     10.5 
18 mu_1       0.9      0.851   0.0972      1.08e- 8     15.3 
19 mu_0       0.1      0.327   0.00000702  0            21.9 
20 mu_0       0.2      0.730   0.00119     0            27.3 
21 mu_0       0.3      1.18    0.0184      0            30.1 
22 mu_0       0.4      1.37    0.104       0            22.8 
23 mu_0       0.5      1.31    0.350       0            10.4 
24 mu_0       0.6      1.19    0.828       0             6.26
25 mu_0       0.7      1.16    1.13        0             3.59
26 mu_0       0.8      1.19    1.12        0             5.36
27 mu_0       0.9      1.15    0.415       0            17.2 
[1] "Total run time was 93.501 seconds"
