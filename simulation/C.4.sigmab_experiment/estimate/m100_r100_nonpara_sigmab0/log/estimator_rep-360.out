
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1212"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
12  6  5  7  7  1  5  6  6  7 10  5  9  6  2  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03305 0.35346 0.60900 1.00000 4.59105 
[1] "event indicator table: "

  0   1 
747 465 
[1] "treatment indicator table: "

  0   1 
408 804 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 619
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 593
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 35"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 246.572 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.341 0.161
 2 mu         0.1   0.2 0.402 0.154
 3 mu         0.1   0.3 0.424 0.161
 4 mu         0.1   0.4 0.510 0.130
 5 mu         0.1   0.5 0.511 0.138
 6 mu         0.2   0.1 0.282 0.137
 7 mu         0.2   0.2 0.365 0.134
 8 mu         0.2   0.3 0.379 0.149
 9 mu         0.2   0.4 0.457 0.120
10 mu         0.2   0.5 0.461 0.133
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.561        0.211  0.000682      4.50
 2 mu         0.2      0.947        0.664  0.0344       13.9 
 3 mu         0.3      1.05         1      0.189        11.2 
 4 mu         0.4      1.04         1      0.462         4.71
 5 mu         0.5      1.02         1      0.665         1.67
 6 mu         0.6      1.01         1      0.816         1.21
 7 mu         0.7      0.999        1      0.866         1.25
 8 mu         0.8      0.978        0.999  0.577         1.56
 9 mu         0.9      0.956        1      0.131         1.85
10 mu_1       0.1      0.877        0.492  0.00288      10.0 
11 mu_1       0.2      1.09         0.952  0.0776       15.6 
12 mu_1       0.3      1.08         1      0.302         8.58
13 mu_1       0.4      1.04         1      0.580         3.04
14 mu_1       0.5      1.01         1      0.710         1.43
15 mu_1       0.6      1.00         1      0.854         1.18
16 mu_1       0.7      0.997        1      0.842         1.30
17 mu_1       0.8      0.975        0.993  0.521         1.60
18 mu_1       0.9      0.957        1      0.111         1.97
19 mu_0       0.1      0.526        0.174  0.000438      4.21
20 mu_0       0.2      0.911        0.594  0.0236       13.5 
21 mu_0       0.3      1.04         1      0.141        12.4 
22 mu_0       0.4      1.04         1      0.377         5.83
23 mu_0       0.5      1.02         1      0.620         2.06
24 mu_0       0.6      1.01         1      0.759         1.32
25 mu_0       0.7      1.00         1      0.902         1.13
26 mu_0       0.8      0.993        1      0.763         1.40
27 mu_0       0.9      0.950        0.973  0.306         1.87
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.384   0.0000204   1.07e-14     18.1 
 2 mu         0.2      0.980   0.00256     2.21e- 9     54.4 
 3 mu         0.3      1.30    0.0429      2.51e- 6     63.4 
 4 mu         0.4      1.25    0.222       3.26e- 4     36.8 
 5 mu         0.5      1.10    0.550       1.26e- 2     12.1 
 6 mu         0.6      1.04    0.969       1.42e- 1      3.73
 7 mu         0.7      1.06    1.05        5.80e- 2      2.63
 8 mu         0.8      1.14    0.768       3.32e- 3      9.51
 9 mu         0.9      1.14    0.173       2.60e- 6     19.8 
10 mu_1       0.1      0.816   0.000159    9.62e-14     33.1 
11 mu_1       0.2      1.33    0.0100      9.96e- 9     72.5 
12 mu_1       0.3      1.37    0.0923      7.52e- 6     56.4 
13 mu_1       0.4      1.20    0.396       7.35e- 4     24.5 
14 mu_1       0.5      1.06    0.766       2.27e- 2      6.44
15 mu_1       0.6      1.03    0.957       7.76e- 2      2.46
16 mu_1       0.7      1.07    1.05        1.04e- 2      2.77
17 mu_1       0.8      1.16    0.683       6.06e- 4     10.7 
18 mu_1       0.9      1.14    0.130       7.70e- 7     19.8 
19 mu_0       0.1      0.336   0.00000357  0            17.6 
20 mu_0       0.2      0.892   0.000945    0            49.9 
21 mu_0       0.3      1.26    0.0205      0            66.4 
22 mu_0       0.4      1.28    0.112       0            44.9 
23 mu_0       0.5      1.15    0.346       0            17.7 
24 mu_0       0.6      1.05    0.807       0             6.22
25 mu_0       0.7      1.03    0.959       0             3.57
26 mu_0       0.8      1.07    1.05        0             4.75
27 mu_0       0.9      1.16    0.413       0            19.8 
[1] "Total run time was 253.622 seconds"
