
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1231"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6 11  5  8  5  7  6  5  2  5  8  3 11  5  6  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03823 0.35546 0.59350 1.00000 4.37827 
[1] "event indicator table: "

  0   1 
734 497 
[1] "treatment indicator table: "

  0   1 
437 794 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 620
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 52"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 611
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 32"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 86.421 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.385 0.137 
 2 mu         0.1   0.2 0.436 0.151 
 3 mu         0.1   0.3 0.454 0.158 
 4 mu         0.1   0.4 0.491 0.175 
 5 mu         0.1   0.5 0.546 0.207 
 6 mu         0.2   0.1 0.357 0.0913
 7 mu         0.2   0.2 0.402 0.103 
 8 mu         0.2   0.3 0.427 0.107 
 9 mu         0.2   0.4 0.470 0.120 
10 mu         0.2   0.5 0.506 0.140 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      1.19         0.208 0.00000651     29.7 
 2 mu         0.2      1.07         0.780 0.00243        15.6 
 3 mu         0.3      0.974        1     0.0465          4.97
 4 mu         0.4      0.974        1     0.248           2.18
 5 mu         0.5      0.993        1     0.622           1.54
 6 mu         0.6      0.997        1     0.776           1.16
 7 mu         0.7      0.990        1     0.645           1.20
 8 mu         0.8      0.966        1     0.419           1.42
 9 mu         0.9      0.910        1     0.0861          2.31
10 mu_1       0.1      1.18         0.488 0.0000330      27.9 
11 mu_1       0.2      1.01         0.955 0.00626         9.34
12 mu_1       0.3      0.963        1     0.0820          2.72
13 mu_1       0.4      0.983        1     0.340           1.90
14 mu_1       0.5      0.997        1     0.722           1.23
15 mu_1       0.6      0.997        1     0.740           1.17
16 mu_1       0.7      0.988        1     0.604           1.24
17 mu_1       0.8      0.962        1     0.368           1.45
18 mu_1       0.9      0.905        1     0.0709          2.49
19 mu_0       0.1      1.19         0.177 0.00000357     33.0 
20 mu_0       0.2      1.09         0.722 0.00147        17.1 
21 mu_0       0.3      0.979        0.962 0.0313          5.93
22 mu_0       0.4      0.968        1     0.186           2.37
23 mu_0       0.5      0.988        1     0.523           1.85
24 mu_0       0.6      0.996        1     0.680           1.35
25 mu_0       0.7      0.994        1     0.743           1.13
26 mu_0       0.8      0.985        1     0.606           1.31
27 mu_0       0.9      0.956        1     0.222           1.70
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.260   0.0000369   3.56e-12     17.6 
 2 mu         0.2      0.838   0.00423     9.23e- 8     39.0 
 3 mu         0.3      1.41    0.0500      3.09e- 5     45.0 
 4 mu         0.4      1.69    0.223       1.70e- 3     37.0 
 5 mu         0.5      1.72    0.616       3.36e- 2     23.2 
 6 mu         0.6      1.61    1.03        2.31e- 1     11.0 
 7 mu         0.7      1.41    1.25        6.11e- 2      3.92
 8 mu         0.8      1.24    0.726       1.38e- 3      7.81
 9 mu         0.9      1.18    0.126       1.21e- 6     22.6 
10 mu_1       0.1      0.822   0.000270    3.14e-11     50.2 
11 mu_1       0.2      1.40    0.0157      4.07e- 7     55.7 
12 mu_1       0.3      1.70    0.115       9.10e- 5     42.8 
13 mu_1       0.4      1.71    0.385       3.75e- 3     26.4 
14 mu_1       0.5      1.64    0.870       5.77e- 2     13.3 
15 mu_1       0.6      1.52    1.18        3.03e- 1      6.02
16 mu_1       0.7      1.36    1.34        2.73e- 2      4.19
17 mu_1       0.8      1.23    0.605       5.38e- 4      9.77
18 mu_1       0.9      1.20    0.0930      4.21e- 7     25.1 
19 mu_0       0.1      0.198   0.00000893  0            13.9 
20 mu_0       0.2      0.697   0.00155     0            34.8 
21 mu_0       0.3      1.29    0.0147      0            45.9 
22 mu_0       0.4      1.67    0.123       0            44.0 
23 mu_0       0.5      1.80    0.376       0            33.2 
24 mu_0       0.6      1.75    0.877       0            19.6 
25 mu_0       0.7      1.53    1.20        0             8.43
26 mu_0       0.8      1.26    1.02        0             4.30
27 mu_0       0.9      1.02    0.292       0            10.7 
[1] "Total run time was 88.843 seconds"
