
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1304"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  3  5  8  5  8  6  7  5  7  5  9  9  7  9  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04585 0.35094 0.61732 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
750 554 
[1] "treatment indicator table: "

  0   1 
487 817 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 660
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 644
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 46"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 112.382 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.437 0.113 
 2 mu         0.1   0.2 0.524 0.116 
 3 mu         0.1   0.3 0.580 0.123 
 4 mu         0.1   0.4 0.592 0.118 
 5 mu         0.1   0.5 0.590 0.116 
 6 mu         0.2   0.1 0.397 0.0971
 7 mu         0.2   0.2 0.476 0.0917
 8 mu         0.2   0.3 0.531 0.0900
 9 mu         0.2   0.4 0.549 0.0827
10 mu         0.2   0.5 0.552 0.0787
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.596        0.185  0.000885      5.53
 2 mu         0.2      0.838        0.695  0.0532        5.28
 3 mu         0.3      0.937        0.955  0.280         3.86
 4 mu         0.4      0.976        0.967  0.610         1.72
 5 mu         0.5      0.995        1.00   0.816         1.37
 6 mu         0.6      1.00         1      0.921         1.11
 7 mu         0.7      0.999        1.00   0.847         1.15
 8 mu         0.8      0.967        0.969  0.435         1.58
 9 mu         0.9      0.910        0.865  0.0686        4.44
10 mu_1       0.1      0.804        0.424  0.00356       4.91
11 mu_1       0.2      0.916        0.926  0.108         5.61
12 mu_1       0.3      0.961        0.965  0.406         2.91
13 mu_1       0.4      0.984        0.993  0.683         1.65
14 mu_1       0.5      0.999        1      0.864         1.28
15 mu_1       0.6      1.01         1.00   0.924         1.13
16 mu_1       0.7      0.995        1.00   0.799         1.14
17 mu_1       0.8      0.961        0.961  0.386         1.72
18 mu_1       0.9      0.905        0.858  0.0574        4.80
19 mu_0       0.1      0.573        0.160  0.000587      5.62
20 mu_0       0.2      0.818        0.612  0.0397        5.20
21 mu_0       0.3      0.927        0.917  0.226         4.26
22 mu_0       0.4      0.970        0.971  0.538         2.01
23 mu_0       0.5      0.991        0.993  0.741         1.47
24 mu_0       0.6      1.00         1      0.850         1.13
25 mu_0       0.7      1.01         1      0.920         1.17
26 mu_0       0.8      0.992        0.999  0.629         1.18
27 mu_0       0.9      0.956        0.992  0.169         1.62
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.0818    0.0000435  5.55e-13      7.09
 2 mu         0.2     0.402     0.00607    5.11e- 8     31.1 
 3 mu         0.3     0.677     0.0696     3.37e- 5     36.2 
 4 mu         0.4     0.879     0.339      2.82e- 3     21.0 
 5 mu         0.5     1.09      0.801      6.11e- 2      6.90
 6 mu         0.6     1.20      1.00       4.63e- 1      3.86
 7 mu         0.7     1.16      1.05       9.61e- 2      4.78
 8 mu         0.8     1.02      0.472      1.90e- 3     13.7 
 9 mu         0.9     0.652     0.0415     1.48e- 6     12.7 
10 mu_1       0.1     0.236     0.000309   4.71e-12     18.9 
11 mu_1       0.2     0.621     0.0176     2.17e- 7     41.4 
12 mu_1       0.3     0.822     0.142      9.55e- 5     32.2 
13 mu_1       0.4     0.994     0.538      6.00e- 3     14.0 
14 mu_1       0.5     1.16      1.03       9.78e- 2      4.01
15 mu_1       0.6     1.22      1.09       5.46e- 1      3.62
16 mu_1       0.7     1.15      0.977      3.66e- 2      5.80
17 mu_1       0.8     0.994     0.367      6.32e- 4     14.6 
18 mu_1       0.9     0.614     0.0288     4.39e- 7     12.0 
19 mu_0       0.1     0.0646    0.0000173  0             5.78
20 mu_0       0.2     0.348     0.00227    0            28.5 
21 mu_0       0.3     0.615     0.0343     0            37.9 
22 mu_0       0.4     0.803     0.219      0            25.7 
23 mu_0       0.5     1.01      0.621      0            10.1 
24 mu_0       0.6     1.18      1.12       0             4.22
25 mu_0       0.7     1.20      1.09       0             3.36
26 mu_0       0.8     1.14      0.867      0            10.3 
27 mu_0       0.9     0.997     0.157      0            19.0 
[1] "Total run time was 114.665 seconds"
