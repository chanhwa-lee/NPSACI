
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1289"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  9  6  5  2  4  8  6 10  8  3  5 10  8  6  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02749 0.33574 0.60328 1.00000 6.00000 
[1] "event indicator table: "

  0   1 
782 507 
[1] "treatment indicator table: "

  0   1 
436 853 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 666
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 623
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 90.672 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.496 0.200
 2 mu         0.1   0.2 0.577 0.250
 3 mu         0.1   0.3 0.632 0.236
 4 mu         0.1   0.4 0.632 0.229
 5 mu         0.1   0.5 0.717 0.276
 6 mu         0.2   0.1 0.417 0.137
 7 mu         0.2   0.2 0.487 0.179
 8 mu         0.2   0.3 0.556 0.155
 9 mu         0.2   0.4 0.562 0.145
10 mu         0.2   0.5 0.636 0.187
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.721       0.0797 0.0000703     36.3 
 2 mu         0.2      0.891       0.416  0.00803       18.1 
 3 mu         0.3      0.978       0.833  0.0847         6.27
 4 mu         0.4      1.00        0.982  0.319          2.26
 5 mu         0.5      1.00        1      0.641          1.41
 6 mu         0.6      0.997       1      0.828          1.17
 7 mu         0.7      0.996       1.00   0.722          1.26
 8 mu         0.8      1.01        1      0.451          2.03
 9 mu         0.9      1.09        1      0.121          6.15
10 mu_1       0.1      0.888       0.244  0.000356      28.1 
11 mu_1       0.2      0.959       0.685  0.0207         7.57
12 mu_1       0.3      0.999       0.958  0.149          3.24
13 mu_1       0.4      1.00        1      0.436          1.65
14 mu_1       0.5      0.999       1      0.700          1.28
15 mu_1       0.6      0.996       1      0.861          1.14
16 mu_1       0.7      0.998       1      0.677          1.33
17 mu_1       0.8      1.02        1      0.420          2.14
18 mu_1       0.9      1.10        1      0.105          6.69
19 mu_0       0.1      0.702       0.0606 0.0000385     37.2 
20 mu_0       0.2      0.874       0.348  0.00486       20.7 
21 mu_0       0.3      0.969       0.749  0.0571         7.89
22 mu_0       0.4      1.00        0.957  0.241          2.85
23 mu_0       0.5      1.00        1      0.555          1.66
24 mu_0       0.6      0.998       1      0.708          1.31
25 mu_0       0.7      0.992       1      0.827          1.12
26 mu_0       0.8      0.991       1      0.575          1.59
27 mu_0       0.9      0.997       1      0.271          2.96
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.128    0.0000329  1.88e-13      6.36
 2 mu         0.2      0.309    0.00439    9.74e- 9      7.95
 3 mu         0.3      0.556    0.0426     4.90e- 6     11.8 
 4 mu         0.4      0.848    0.197      3.59e- 4     11.1 
 5 mu         0.5      1.05     0.573      8.86e- 3      7.29
 6 mu         0.6      1.12     1.01       1.05e- 1      3.30
 7 mu         0.7      1.19     1.02       3.05e- 1      8.46
 8 mu         0.8      1.46     0.528      1.03e- 2     27.9 
 9 mu         0.9      1.52     0.0797     1.28e- 5     40.8 
10 mu_1       0.1      0.331    0.000225   1.67e-12     12.7 
11 mu_1       0.2      0.485    0.0151     4.33e- 8     13.0 
12 mu_1       0.3      0.706    0.0990     1.45e- 5     13.2 
13 mu_1       0.4      0.951    0.387      7.98e- 4      9.28
14 mu_1       0.5      1.09     0.818      1.57e- 2      4.86
15 mu_1       0.6      1.12     1.04       1.55e- 1      2.61
16 mu_1       0.7      1.22     0.954      1.35e- 1     10.7 
17 mu_1       0.8      1.50     0.443      5.40e- 3     30.7 
18 mu_1       0.9      1.48     0.0553     6.01e- 6     40.0 
19 mu_0       0.1      0.106    0.0000122  0             5.66
20 mu_0       0.2      0.266    0.00136    0             7.95
21 mu_0       0.3      0.492    0.0197     0            11.3 
22 mu_0       0.4      0.779    0.0909     0            12.4 
23 mu_0       0.5      1.02     0.381      0             9.71
24 mu_0       0.6      1.11     0.794      0             5.50
25 mu_0       0.7      1.13     1.07       0             3.45
26 mu_0       0.8      1.30     0.926      0            16.4 
27 mu_0       0.9      1.88     0.280      0            48.0 
[1] "Total run time was 93.296 seconds"
