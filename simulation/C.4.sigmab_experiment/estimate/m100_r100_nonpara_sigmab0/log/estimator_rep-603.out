
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1196"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 8  6 10  4  8  6  8  6  5  7  5  5  3  6 11  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04031 0.40703 0.66960 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
698 498 
[1] "treatment indicator table: "

  0   1 
421 775 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 599
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 28"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 597
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 66.735 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.449 0.211 
 2 mu         0.1   0.2 0.437 0.172 
 3 mu         0.1   0.3 0.447 0.141 
 4 mu         0.1   0.4 0.428 0.145 
 5 mu         0.1   0.5 0.421 0.147 
 6 mu         0.2   0.1 0.429 0.141 
 7 mu         0.2   0.2 0.439 0.107 
 8 mu         0.2   0.3 0.459 0.0801
 9 mu         0.2   0.4 0.464 0.0760
10 mu         0.2   0.5 0.460 0.0753
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.601        0.175 0.0000442      7.87
 2 mu         0.2      0.911        0.752 0.00861        6.84
 3 mu         0.3      1.07         1     0.112          4.50
 4 mu         0.4      1.08         1     0.357          3.16
 5 mu         0.5      1.04         1.00  0.578          1.98
 6 mu         0.6      1.01         1.00  0.763          1.22
 7 mu         0.7      0.991        1.00  0.807          1.11
 8 mu         0.8      0.975        1     0.437          1.31
 9 mu         0.9      0.925        0.971 0.0657         2.08
10 mu_1       0.1      0.893        0.489 0.000205       9.37
11 mu_1       0.2      1.04         1     0.0206         6.25
12 mu_1       0.3      1.09         1     0.184          3.56
13 mu_1       0.4      1.06         1.00  0.464          2.87
14 mu_1       0.5      1.02         1.00  0.647          1.68
15 mu_1       0.6      1.00         1     0.814          1.15
16 mu_1       0.7      0.987        0.996 0.785          1.13
17 mu_1       0.8      0.971        1     0.388          1.38
18 mu_1       0.9      0.918        0.957 0.0547         2.11
19 mu_0       0.1      0.569        0.139 0.0000263      7.70
20 mu_0       0.2      0.879        0.675 0.00562        7.38
21 mu_0       0.3      1.06         1     0.0805         5.07
22 mu_0       0.4      1.09         1     0.274          3.35
23 mu_0       0.5      1.06         1.00  0.508          2.28
24 mu_0       0.6      1.02         1.00  0.686          1.33
25 mu_0       0.7      0.999        1     0.857          1.10
26 mu_0       0.8      0.991        1     0.632          1.19
27 mu_0       0.9      0.985        1     0.165          1.83
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.166    0.0000868  1.16e-13      7.05
 2 mu         0.2      0.506    0.00786    1.20e- 8     10.4 
 3 mu         0.3      1.09     0.0639     9.04e- 6     31.4 
 4 mu         0.4      1.48     0.260      8.84e- 4     31.7 
 5 mu         0.5      1.48     0.703      1.55e- 2     14.1 
 6 mu         0.6      1.32     1.08       1.11e- 1      5.88
 7 mu         0.7      1.21     1.08       1.95e- 1      3.70
 8 mu         0.8      1.15     0.627      2.55e- 3     12.9 
 9 mu         0.9      0.986    0.128      7.09e- 7     23.8 
10 mu_1       0.1      0.428    0.000557   1.04e-12     14.1 
11 mu_1       0.2      0.837    0.0249     5.36e- 8     18.2 
12 mu_1       0.3      1.37     0.149      2.70e- 5     36.6 
13 mu_1       0.4      1.56     0.428      1.98e- 3     27.7 
14 mu_1       0.5      1.44     0.888      2.87e- 2      9.89
15 mu_1       0.6      1.28     1.20       1.70e- 1      4.90
16 mu_1       0.7      1.19     1.05       7.99e- 2      4.10
17 mu_1       0.8      1.14     0.493      1.11e- 3     14.4 
18 mu_1       0.9      0.957    0.0924     2.76e- 7     23.7 
19 mu_0       0.1      0.137    0.0000361  0             6.27
20 mu_0       0.2      0.423    0.00294    0             8.80
21 mu_0       0.3      0.972    0.0303     0            29.2 
22 mu_0       0.4      1.43     0.137      0            34.3 
23 mu_0       0.5      1.52     0.437      0            18.4 
24 mu_0       0.6      1.39     0.944      0             7.34
25 mu_0       0.7      1.26     1.12       0             3.73
26 mu_0       0.8      1.21     0.999      0             6.78
27 mu_0       0.9      1.25     0.359      0            25.1 
[1] "Total run time was 68.891 seconds"
