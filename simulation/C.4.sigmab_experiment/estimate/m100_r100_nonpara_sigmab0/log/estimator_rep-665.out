
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1283"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  7  6  2 10  6  4 10  6  5  3  7  6  9  5  9 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04141 0.36407 0.62428 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
759 524 
[1] "treatment indicator table: "

  0   1 
460 823 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 610
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 54"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 673
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 21"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 110.061 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.323 0.137 
 2 mu         0.1   0.2 0.419 0.161 
 3 mu         0.1   0.3 0.445 0.194 
 4 mu         0.1   0.4 0.451 0.221 
 5 mu         0.1   0.5 0.464 0.239 
 6 mu         0.2   0.1 0.284 0.0876
 7 mu         0.2   0.2 0.395 0.0964
 8 mu         0.2   0.3 0.430 0.122 
 9 mu         0.2   0.4 0.449 0.137 
10 mu         0.2   0.5 0.465 0.149 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.55        0.115  0.0000651     91.4 
 2 mu         0.2      1.24        0.468  0.00990       29.6 
 3 mu         0.3      1.07        0.816  0.105          8.95
 4 mu         0.4      1.00        0.973  0.367          2.82
 5 mu         0.5      0.996       1      0.688          1.50
 6 mu         0.6      0.999       1      0.881          1.15
 7 mu         0.7      0.992       1      0.768          1.15
 8 mu         0.8      0.974       0.994  0.489          1.67
 9 mu         0.9      0.964       0.942  0.117          4.12
10 mu_1       0.1      0.977       0.319  0.000295      22.1 
11 mu_1       0.2      1.04        0.740  0.0228        15.3 
12 mu_1       0.3      0.999       0.924  0.167          5.12
13 mu_1       0.4      0.992       0.992  0.466          1.93
14 mu_1       0.5      0.999       1      0.752          1.34
15 mu_1       0.6      1.00        1      0.900          1.11
16 mu_1       0.7      0.990       1      0.736          1.23
17 mu_1       0.8      0.972       0.993  0.452          1.78
18 mu_1       0.9      0.965       0.932  0.100          4.40
19 mu_0       0.1      1.61        0.0921 0.0000396    101.  
20 mu_0       0.2      1.29        0.403  0.00669       36.5 
21 mu_0       0.3      1.10        0.754  0.0784        12.2 
22 mu_0       0.4      1.01        0.926  0.301          4.00
23 mu_0       0.5      0.994       0.988  0.591          1.65
24 mu_0       0.6      0.998       0.999  0.808          1.23
25 mu_0       0.7      0.997       1      0.843          1.08
26 mu_0       0.8      0.983       1      0.640          1.23
27 mu_0       0.9      0.958       1      0.274          1.63
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.13    0.0000245   1.30e-12    111.  
 2 mu         0.2      1.03    0.00489     5.97e- 8     86.3 
 3 mu         0.3      0.863   0.0653      2.63e- 5     44.5 
 4 mu         0.4      0.874   0.300       1.65e- 3     17.3 
 5 mu         0.5      0.974   0.734       3.39e- 2      6.45
 6 mu         0.6      1.06    1.00        2.75e- 1      4.85
 7 mu         0.7      1.13    1.01        9.80e- 2      6.74
 8 mu         0.8      1.23    0.483       5.03e- 3     14.8 
 9 mu         0.9      1.38    0.0513      9.96e- 6     40.1 
10 mu_1       0.1      1.32    0.000140    1.09e-11    123.  
11 mu_1       0.2      0.809   0.0144      2.51e- 7     47.9 
12 mu_1       0.3      0.770   0.130       7.37e- 5     16.5 
13 mu_1       0.4      0.884   0.471       3.48e- 3      7.87
14 mu_1       0.5      1.01    0.957       5.72e- 2      6.45
15 mu_1       0.6      1.09    1.02        1.87e- 1      4.04
16 mu_1       0.7      1.16    0.892       1.87e- 2      8.02
17 mu_1       0.8      1.27    0.374       7.31e- 4     17.4 
18 mu_1       0.9      1.43    0.0360      2.86e- 6     44.6 
19 mu_0       0.1      1.11    0.00000909  0           109.  
20 mu_0       0.2      1.08    0.00227     0            95.9 
21 mu_0       0.3      0.904   0.0328      0            56.5 
22 mu_0       0.4      0.867   0.145       0            25.6 
23 mu_0       0.5      0.943   0.504       0             8.93
24 mu_0       0.6      1.03    0.938       0             6.06
25 mu_0       0.7      1.07    1.05        0             3.74
26 mu_0       0.8      1.06    0.768       0            12.3 
27 mu_0       0.9      0.926   0.164       0            18.0 
[1] "Total run time was 112.615 seconds"
