
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1327"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 3  6  5  7  4  6 12  4  4  7  4  4  9  5  8 12 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03003 0.32418 0.60486 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
787 540 
[1] "treatment indicator table: "

  0   1 
494 833 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 646
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 681
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 67"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 67.724 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.303 0.0659
 2 mu         0.1   0.2 0.339 0.0734
 3 mu         0.1   0.3 0.410 0.0830
 4 mu         0.1   0.4 0.578 0.126 
 5 mu         0.1   0.5 0.604 0.127 
 6 mu         0.2   0.1 0.251 0.0393
 7 mu         0.2   0.2 0.298 0.0457
 8 mu         0.2   0.3 0.371 0.0500
 9 mu         0.2   0.4 0.482 0.0702
10 mu         0.2   0.5 0.513 0.0726
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.785        0.307  0.000654     12.0 
 2 mu         0.2      0.997        0.850  0.0343        6.89
 3 mu         0.3      1.04         0.996  0.218         3.00
 4 mu         0.4      1.01         1      0.477         1.59
 5 mu         0.5      0.996        1      0.718         1.26
 6 mu         0.6      0.999        1      0.922         1.09
 7 mu         0.7      1.01         1      0.833         1.20
 8 mu         0.8      1.02         1      0.545         1.51
 9 mu         0.9      1.01         1      0.114         2.47
10 mu_1       0.1      1.03         0.738  0.00265      10.1 
11 mu_1       0.2      1.02         1      0.0731        3.33
12 mu_1       0.3      1.01         1      0.329         2.13
13 mu_1       0.4      0.997        1      0.580         1.47
14 mu_1       0.5      0.994        1      0.791         1.18
15 mu_1       0.6      1.00         1      0.939         1.10
16 mu_1       0.7      1.01         1      0.797         1.24
17 mu_1       0.8      1.02         1      0.502         1.57
18 mu_1       0.9      1.01         0.992  0.0980        2.54
19 mu_0       0.1      0.758        0.254  0.000432     12.2 
20 mu_0       0.2      0.989        0.796  0.0246        7.78
21 mu_0       0.3      1.05         0.990  0.170         3.61
22 mu_0       0.4      1.02         1      0.404         1.78
23 mu_0       0.5      0.998        1      0.644         1.35
24 mu_0       0.6      0.996        1      0.846         1.14
25 mu_0       0.7      1.00         1      0.911         1.15
26 mu_0       0.8      1.00         1      0.713         1.29
27 mu_0       0.9      1.01         0.989  0.258         2.03
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.121     0.0000830  2.31e-12      5.26
 2 mu         0.2     0.332     0.0120     9.43e- 8     10.7 
 3 mu         0.3     0.596     0.0940     3.63e- 5     12.5 
 4 mu         0.4     0.860     0.362      1.96e- 3      8.60
 5 mu         0.5     1.01      0.777      3.35e- 2      3.91
 6 mu         0.6     1.04      1.04       2.54e- 1      1.97
 7 mu         0.7     1.03      0.895      1.80e- 1      3.59
 8 mu         0.8     0.929     0.335      7.54e- 3      9.09
 9 mu         0.9     0.551     0.0326     1.06e- 5     14.8 
10 mu_1       0.1     0.324     0.000527   1.84e-11     10.5 
11 mu_1       0.2     0.532     0.0337     3.77e- 7     14.6 
12 mu_1       0.3     0.757     0.211      9.68e- 5     11.3 
13 mu_1       0.4     0.948     0.587      3.91e- 3      5.86
14 mu_1       0.5     1.02      0.964      5.36e- 2      3.36
15 mu_1       0.6     1.02      1.01       3.38e- 1      1.91
16 mu_1       0.7     1.01      0.780      7.01e- 2      4.66
17 mu_1       0.8     0.895     0.266      3.57e- 3     10.3 
18 mu_1       0.9     0.511     0.0201     5.31e- 6     14.9 
19 mu_0       0.1     0.0985    0.0000408  5.12e-13      4.68
20 mu_0       0.2     0.281     0.00517    2.36e- 8      9.76
21 mu_0       0.3     0.527     0.0397     1.04e- 5     12.9 
22 mu_0       0.4     0.801     0.229      6.52e- 4     10.4 
23 mu_0       0.5     1.00      0.585      1.34e- 2      5.68
24 mu_0       0.6     1.06      1.02       1.27e- 1      2.60
25 mu_0       0.7     1.07      1.09       3.59e- 1      2.20
26 mu_0       0.8     1.06      0.681      2.07e- 2      4.32
27 mu_0       0.9     0.906     0.131      5.84e- 5     13.4 
[1] "Total run time was 69.826 seconds"
