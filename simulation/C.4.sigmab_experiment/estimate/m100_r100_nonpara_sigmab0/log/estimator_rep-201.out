
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1251"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 1 10  3  7 10  8  4  8  7  3  5  9 11  9  2  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.05277 0.36288 0.64445 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
767 484 
[1] "treatment indicator table: "

  0   1 
442 809 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 603
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 56"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 648
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 22"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 99.382 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.356 0.107 
 2 mu         0.1   0.2 0.405 0.104 
 3 mu         0.1   0.3 0.449 0.107 
 4 mu         0.1   0.4 0.488 0.113 
 5 mu         0.1   0.5 0.517 0.125 
 6 mu         0.2   0.1 0.329 0.0735
 7 mu         0.2   0.2 0.388 0.0795
 8 mu         0.2   0.3 0.454 0.0866
 9 mu         0.2   0.4 0.490 0.0924
10 mu         0.2   0.5 0.540 0.104 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.865        0.221  0.000565     18.6 
 2 mu         0.2      1.41         0.709  0.0329       29.3 
 3 mu         0.3      1.30         0.959  0.223        18.1 
 4 mu         0.4      1.11         1      0.509         5.77
 5 mu         0.5      1.03         1.00   0.716         1.67
 6 mu         0.6      1.01         1.00   0.857         1.15
 7 mu         0.7      1.00         1      0.880         1.12
 8 mu         0.8      0.993        1      0.687         1.53
 9 mu         0.9      0.978        0.962  0.284         3.26
10 mu_1       0.1      1.33         0.544  0.00234      31.0 
11 mu_1       0.2      1.49         0.886  0.0716       29.4 
12 mu_1       0.3      1.22         1      0.339        12.5 
13 mu_1       0.4      1.07         1      0.617         3.49
14 mu_1       0.5      1.02         1.00   0.776         1.27
15 mu_1       0.6      1.01         1.01   0.878         1.13
16 mu_1       0.7      0.998        1      0.852         1.17
17 mu_1       0.8      0.991        1      0.661         1.62
18 mu_1       0.9      0.977        0.948  0.255         3.47
19 mu_0       0.1      0.813        0.184  0.000367     17.2 
20 mu_0       0.2      1.39         0.656  0.0233       29.2 
21 mu_0       0.3      1.33         0.942  0.173        20.5 
22 mu_0       0.4      1.13         1      0.437         7.29
23 mu_0       0.5      1.04         1      0.656         2.08
24 mu_0       0.6      1.01         1.00   0.784         1.20
25 mu_0       0.7      1.00         1.00   0.867         1.12
26 mu_0       0.8      1.00         1      0.755         1.17
27 mu_0       0.9      0.993        1      0.403         1.53
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.0291    0.0000656  6.50e-15      1.58
 2 mu         0.2     0.244     0.00683    1.35e- 9      5.68
 3 mu         0.3     0.671     0.0605     1.52e- 6     11.3 
 4 mu         0.4     1.02      0.276      1.98e- 4     12.6 
 5 mu         0.5     1.13      0.746      7.65e- 3      8.11
 6 mu         0.6     1.13      1.00       1.02e- 1      3.25
 7 mu         0.7     1.11      1.06       8.17e- 2      3.04
 8 mu         0.8     1.21      0.652      2.10e- 3      8.77
 9 mu         0.9     1.42      0.104      2.08e- 6     28.9 
10 mu_1       0.1     0.0987    0.000495   5.85e-14      4.73
11 mu_1       0.2     0.453     0.0217     6.06e- 9      9.47
12 mu_1       0.3     0.905     0.145      4.57e- 6     12.6 
13 mu_1       0.4     1.15      0.463      4.46e- 4     12.3 
14 mu_1       0.5     1.18      0.939      1.38e- 2      6.30
15 mu_1       0.6     1.15      1.09       1.51e- 1      3.18
16 mu_1       0.7     1.12      1.07       4.12e- 2      3.69
17 mu_1       0.8     1.23      0.544      9.28e- 4     10.3 
18 mu_1       0.9     1.43      0.0737     8.17e- 7     30.2 
19 mu_0       0.1     0.0214    0.0000277  0             1.23
20 mu_0       0.2     0.191     0.00196    0             4.84
21 mu_0       0.3     0.571     0.0294     0            10.8 
22 mu_0       0.4     0.933     0.172      0            12.9 
23 mu_0       0.5     1.09      0.501      0             9.91
24 mu_0       0.6     1.10      0.918      0             3.81
25 mu_0       0.7     1.09      1.05       0             3.16
26 mu_0       0.8     1.10      0.953      0             6.54
27 mu_0       0.9     1.29      0.283      0            17.0 
[1] "Total run time was 102.731 seconds"
