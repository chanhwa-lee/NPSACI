
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1308"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 8  4  7  3  7  5  3  7  7  4  6  7  9  5 11  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.06285 0.40217 0.62400 1.00000 5.10481 
[1] "event indicator table: "

  0   1 
775 533 
[1] "treatment indicator table: "

  0   1 
433 875 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 648
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 660
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 90.314 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.427 0.117 
 2 mu         0.1   0.2 0.542 0.157 
 3 mu         0.1   0.3 0.591 0.166 
 4 mu         0.1   0.4 0.609 0.177 
 5 mu         0.1   0.5 0.654 0.191 
 6 mu         0.2   0.1 0.403 0.0908
 7 mu         0.2   0.2 0.478 0.0980
 8 mu         0.2   0.3 0.531 0.0997
 9 mu         0.2   0.4 0.554 0.108 
10 mu         0.2   0.5 0.607 0.122 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      0.490       0.0499 0.0000156      18.4 
 2 mu         0.2      0.673       0.310  0.00389        11.7 
 3 mu         0.3      0.836       0.664  0.0403          5.14
 4 mu         0.4      0.943       0.903  0.138           2.87
 5 mu         0.5      0.985       0.987  0.320           1.84
 6 mu         0.6      0.997       1      0.567           1.34
 7 mu         0.7      0.992       0.998  0.833           1.19
 8 mu         0.8      0.968       0.998  0.537           1.51
 9 mu         0.9      0.961       0.972  0.129           4.10
10 mu_1       0.1      0.667       0.162  0.0000782      16.9 
11 mu_1       0.2      0.762       0.558  0.00977         6.46
12 mu_1       0.3      0.896       0.848  0.0825          3.34
13 mu_1       0.4      0.970       0.993  0.222           2.54
14 mu_1       0.5      0.994       1      0.430           1.60
15 mu_1       0.6      0.998       1      0.672           1.28
16 mu_1       0.7      0.989       0.991  0.827           1.17
17 mu_1       0.8      0.965       0.998  0.485           1.62
18 mu_1       0.9      0.964       0.964  0.111           4.43
19 mu_0       0.1      0.471       0.0372 0.00000861     18.5 
20 mu_0       0.2      0.650       0.251  0.00242        13.2 
21 mu_0       0.3      0.810       0.579  0.0222          6.42
22 mu_0       0.4      0.925       0.840  0.0824          3.09
23 mu_0       0.5      0.977       0.981  0.209           2.17
24 mu_0       0.6      0.995       1      0.408           1.42
25 mu_0       0.7      0.998       1      0.647           1.23
26 mu_0       0.8      0.982       0.989  0.746           1.16
27 mu_0       0.9      0.935       0.967  0.292           1.55
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.0590   0.0000268   1.13e-14     1.34 
 2 mu         0.2     0.395    0.00286     2.34e- 9    13.2  
 3 mu         0.3     1.01     0.0687      2.64e- 6    26.4  
 4 mu         0.4     1.53     0.250       3.44e- 4    23.8  
 5 mu         0.5     1.65     0.612       1.33e- 2    17.8  
 6 mu         0.6     1.47     0.979       1.64e- 1     8.35 
 7 mu         0.7     1.35     1.12        2.31e- 1     4.97 
 8 mu         0.8     1.51     0.703       1.29e- 2    15.3  
 9 mu         0.9     1.69     0.113       2.27e- 5    41.5  
10 mu_1       0.1     0.219    0.000193    1.01e-13     4.47 
11 mu_1       0.2     0.760    0.0120      1.05e- 8    22.0  
12 mu_1       0.3     1.38     0.139       7.93e- 6    29.4  
13 mu_1       0.4     1.70     0.461       7.75e- 4    23.4  
14 mu_1       0.5     1.62     0.853       2.39e- 2    15.0  
15 mu_1       0.6     1.40     1.08        2.19e- 1     7.37 
16 mu_1       0.7     1.33     1.17        1.61e- 1     4.60 
17 mu_1       0.8     1.54     0.597       5.38e- 3    17.1  
18 mu_1       0.9     1.68     0.0853      8.42e- 6    43.4  
19 mu_0       0.1     0.0412   0.00000292  0            0.994
20 mu_0       0.2     0.304    0.00136     0           11.0  
21 mu_0       0.3     0.851    0.0324      0           25.2  
22 mu_0       0.4     1.42     0.117       0           26.5  
23 mu_0       0.5     1.67     0.399       0           20.6  
24 mu_0       0.6     1.58     0.866       0           10.5  
25 mu_0       0.7     1.39     1.18        0            5.85 
26 mu_0       0.8     1.40     1.12        0            8.04 
27 mu_0       0.9     1.79     0.277       0           29.8  
[1] "Total run time was 92.543 seconds"
