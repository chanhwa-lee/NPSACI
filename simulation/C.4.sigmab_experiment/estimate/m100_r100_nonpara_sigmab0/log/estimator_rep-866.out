
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1249"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 7  6  3 13  7  5  6  6  5  6  2  1 10  8  7  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03281 0.33288 0.60388 1.00000 5.72149 
[1] "event indicator table: "

  0   1 
749 500 
[1] "treatment indicator table: "

  0   1 
473 776 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 599
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 650
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 95.084 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.285 0.0628
 2 mu         0.1   0.2 0.341 0.0869
 3 mu         0.1   0.3 0.483 0.106 
 4 mu         0.1   0.4 0.567 0.0938
 5 mu         0.1   0.5 0.588 0.0965
 6 mu         0.2   0.1 0.286 0.0504
 7 mu         0.2   0.2 0.339 0.0656
 8 mu         0.2   0.3 0.448 0.0807
 9 mu         0.2   0.4 0.526 0.0691
10 mu         0.2   0.5 0.552 0.0703
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.764        0.296 0.000135       7.77
 2 mu         0.2      0.869        0.806 0.0120         5.91
 3 mu         0.3      0.930        1     0.101          3.72
 4 mu         0.4      0.971        1     0.328          1.84
 5 mu         0.5      0.988        1     0.644          1.24
 6 mu         0.6      0.995        1     0.875          1.15
 7 mu         0.7      1.00         1     0.792          1.39
 8 mu         0.8      1.02         1     0.531          2.19
 9 mu         0.9      1.04         0.999 0.111          4.91
10 mu_1       0.1      0.859        0.676 0.000606       6.48
11 mu_1       0.2      0.913        0.923 0.0275         5.49
12 mu_1       0.3      0.957        1     0.162          2.68
13 mu_1       0.4      0.984        1.00  0.424          1.42
14 mu_1       0.5      0.992        1     0.732          1.25
15 mu_1       0.6      0.998        1     0.883          1.17
16 mu_1       0.7      1.01         1     0.751          1.50
17 mu_1       0.8      1.02         1     0.486          2.42
18 mu_1       0.9      1.04         0.996 0.0944         5.30
19 mu_0       0.1      0.754        0.260 0.0000828      8.11
20 mu_0       0.2      0.858        0.772 0.00811        6.02
21 mu_0       0.3      0.918        0.966 0.0754         4.16
22 mu_0       0.4      0.962        1     0.264          2.11
23 mu_0       0.5      0.983        1     0.555          1.31
24 mu_0       0.6      0.991        1.00  0.838          1.22
25 mu_0       0.7      0.998        1     0.887          1.15
26 mu_0       0.8      1.00         1     0.710          1.27
27 mu_0       0.9      1.01         1     0.258          2.34
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.342    0.0000594  1.91e-15     16.5 
 2 mu         0.2      0.786    0.00447    5.00e-10     14.4 
 3 mu         0.3      1.16     0.0681     7.39e- 7     18.8 
 4 mu         0.4      1.28     0.298      1.31e- 4     15.2 
 5 mu         0.5      1.22     0.747      7.27e- 3      8.26
 6 mu         0.6      1.13     1.08       1.94e- 1      3.38
 7 mu         0.7      1.07     0.950      4.59e- 2      3.30
 8 mu         0.8      1.23     0.393      1.78e- 3     34.3 
 9 mu         0.9      3.49     0.0434     1.16e- 6    286.  
10 mu_1       0.1      0.773    0.000539   1.91e-14     20.6 
11 mu_1       0.2      1.16     0.0165     2.50e- 9     21.3 
12 mu_1       0.3      1.32     0.139      2.46e- 6     18.8 
13 mu_1       0.4      1.25     0.472      3.28e- 4     11.4 
14 mu_1       0.5      1.14     0.992      1.45e- 2      4.98
15 mu_1       0.6      1.08     1.11       7.05e- 2      2.18
16 mu_1       0.7      1.05     0.840      9.41e- 3      4.44
17 mu_1       0.8      1.28     0.297      5.51e- 4     42.9 
18 mu_1       0.9      3.78     0.0226     4.76e- 7    318.  
19 mu_0       0.1      0.294    0.0000173  0            16.0 
20 mu_0       0.2      0.692    0.00176    0            15.8 
21 mu_0       0.3      1.09     0.0318     0            18.8 
22 mu_0       0.4      1.30     0.163      0            17.7 
23 mu_0       0.5      1.29     0.566      0            11.6 
24 mu_0       0.6      1.20     1.01       0             5.63
25 mu_0       0.7      1.12     1.11       0             2.59
26 mu_0       0.8      0.999    0.748      0             4.36
27 mu_0       0.9      0.800    0.156      0             7.27
[1] "Total run time was 97.925 seconds"
