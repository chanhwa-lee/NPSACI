
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1332"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 7  3  6  5  2  4  6  4 17  3  5  9  7  4  8 10 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0179  0.3162  0.5968  1.0000  6.0000 
[1] "event indicator table: "

  0   1 
809 523 
[1] "treatment indicator table: "

  0   1 
458 874 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 635
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 96"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 697
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 110.845 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.473 0.107 
 2 mu         0.1   0.2 0.490 0.0973
 3 mu         0.1   0.3 0.508 0.103 
 4 mu         0.1   0.4 0.507 0.109 
 5 mu         0.1   0.5 0.671 0.169 
 6 mu         0.2   0.1 0.410 0.0752
 7 mu         0.2   0.2 0.445 0.0678
 8 mu         0.2   0.3 0.469 0.0713
 9 mu         0.2   0.4 0.475 0.0765
10 mu         0.2   0.5 0.605 0.115 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.307       0.0495 0.0000340      4.03
 2 mu         0.2      0.609       0.341  0.00595        5.31
 3 mu         0.3      0.872       0.709  0.0738         3.76
 4 mu         0.4      0.998       0.939  0.300          2.50
 5 mu         0.5      1.02        1      0.647          1.63
 6 mu         0.6      1.00        1      0.865          1.20
 7 mu         0.7      0.996       1      0.895          1.19
 8 mu         0.8      1.01        1      0.627          1.79
 9 mu         0.9      1.11        1      0.200          6.81
10 mu_1       0.1      0.524       0.157  0.000156       6.82
11 mu_1       0.2      0.785       0.586  0.0140         4.81
12 mu_1       0.3      0.967       0.906  0.121          2.85
13 mu_1       0.4      1.02        1      0.394          2.26
14 mu_1       0.5      1.01        1.00   0.734          1.43
15 mu_1       0.6      1.00        1      0.906          1.15
16 mu_1       0.7      0.995       1      0.865          1.25
17 mu_1       0.8      1.01        1      0.595          1.94
18 mu_1       0.9      1.12        0.994  0.179          7.42
19 mu_0       0.1      0.283       0.0378 0.0000205      3.72
20 mu_0       0.2      0.565       0.271  0.00393        5.43
21 mu_0       0.3      0.832       0.626  0.0534         4.23
22 mu_0       0.4      0.981       0.892  0.238          2.65
23 mu_0       0.5      1.02        1      0.561          1.84
24 mu_0       0.6      1.01        1      0.800          1.29
25 mu_0       0.7      0.997       0.998  0.924          1.07
26 mu_0       0.8      0.999       1      0.755          1.40
27 mu_0       0.9      1.03        1      0.393          2.32
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.100    0.0000280   6.98e-14      9.03
 2 mu         0.2     0.193    0.00343     4.57e- 9     11.3 
 3 mu         0.3     0.371    0.0403      3.00e- 6      9.92
 4 mu         0.4     0.631    0.213       3.00e- 4      7.14
 5 mu         0.5     0.869    0.576       1.06e- 2      4.89
 6 mu         0.6     0.990    0.949       1.91e- 1      2.41
 7 mu         0.7     1.01     0.981       2.43e- 1      2.74
 8 mu         0.8     1.11     0.473       1.40e- 2     19.6 
 9 mu         0.9     2.06     0.0448      3.94e- 5    129.  
10 mu_1       0.1     0.223    0.000198    6.98e-13     18.1 
11 mu_1       0.2     0.291    0.0105      2.29e- 8     11.3 
12 mu_1       0.3     0.490    0.0946      1.00e- 5      7.20
13 mu_1       0.4     0.740    0.343       7.49e- 4      6.63
14 mu_1       0.5     0.930    0.774       2.13e- 2      3.76
15 mu_1       0.6     1.01     1.01        2.79e- 1      1.85
16 mu_1       0.7     1.02     0.943       1.64e- 1      3.42
17 mu_1       0.8     1.16     0.359       8.29e- 3     24.5 
18 mu_1       0.9     2.20     0.0303      2.08e- 5    144.  
19 mu_0       0.1     0.0867   0.00000309  0             8.03
20 mu_0       0.2     0.169    0.00135     0            11.3 
21 mu_0       0.3     0.320    0.0162      0            11.3 
22 mu_0       0.4     0.558    0.116       0             9.52
23 mu_0       0.5     0.808    0.381       0             6.88
24 mu_0       0.6     0.966    0.814       0             4.23
25 mu_0       0.7     0.992    1.04        0             2.08
26 mu_0       0.8     0.925    0.756       0             4.93
27 mu_0       0.9     0.789    0.129       0            12.8 
[1] "Total run time was 112.999 seconds"
