
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1272"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 2  9  6  5  6  7  6  7  8  8  6  4  2 12  8  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03426 0.35090 0.60704 1.00000 4.28623 
[1] "event indicator table: "

  0   1 
763 509 
[1] "treatment indicator table: "

  0   1 
445 827 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 627
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 62"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 645
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 136.022 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.205 0.0935
 2 mu         0.1   0.2 0.370 0.0931
 3 mu         0.1   0.3 0.424 0.112 
 4 mu         0.1   0.4 0.484 0.115 
 5 mu         0.1   0.5 0.552 0.129 
 6 mu         0.2   0.1 0.224 0.0556
 7 mu         0.2   0.2 0.353 0.0580
 8 mu         0.2   0.3 0.409 0.0711
 9 mu         0.2   0.4 0.447 0.0717
10 mu         0.2   0.5 0.517 0.0817
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.441       0.0684 0.0000195      6.17
 2 mu         0.2      0.637       0.365  0.00405        4.36
 3 mu         0.3      0.815       0.736  0.0574         2.47
 4 mu         0.4      0.937       0.952  0.256          1.80
 5 mu         0.5      0.985       1      0.588          1.35
 6 mu         0.6      0.994       0.996  0.877          1.17
 7 mu         0.7      0.998       1      0.860          1.12
 8 mu         0.8      0.994       1      0.549          1.50
 9 mu         0.9      0.964       0.926  0.123          2.61
10 mu_1       0.1      0.629       0.218  0.0000946      5.97
11 mu_1       0.2      0.742       0.610  0.0101         2.69
12 mu_1       0.3      0.883       0.933  0.0988         2.06
13 mu_1       0.4      0.967       0.996  0.346          1.50
14 mu_1       0.5      0.992       1      0.679          1.32
15 mu_1       0.6      0.996       0.995  0.915          1.13
16 mu_1       0.7      0.998       1      0.824          1.17
17 mu_1       0.8      0.992       1      0.503          1.59
18 mu_1       0.9      0.961       0.917  0.104          2.77
19 mu_0       0.1      0.420       0.0527 0.0000111      6.19
20 mu_0       0.2      0.611       0.312  0.00253        4.78
21 mu_0       0.3      0.785       0.649  0.0397         2.85
22 mu_0       0.4      0.917       0.909  0.196          1.99
23 mu_0       0.5      0.978       0.997  0.497          1.49
24 mu_0       0.6      0.992       0.998  0.800          1.23
25 mu_0       0.7      0.997       1      0.913          1.07
26 mu_0       0.8      1.00        1      0.733          1.20
27 mu_0       0.9      0.992       1      0.290          1.66
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1    0.0124     0.0000310  1.49e-12     0.339
 2 mu         0.2    0.112      0.00470    6.88e- 8     2.38 
 3 mu         0.3    0.386      0.0480     3.03e- 5     5.79 
 4 mu         0.4    0.738      0.185      1.90e- 3     9.09 
 5 mu         0.5    0.957      0.520      3.91e- 2     6.08 
 6 mu         0.6    1.02       0.933      3.33e- 1     2.50 
 7 mu         0.7    1.04       0.965      1.75e- 1     3.13 
 8 mu         0.8    0.978      0.572      4.38e- 3     9.04 
 9 mu         0.9    0.780      0.0934     2.74e- 6    33.0  
10 mu_1       0.1    0.0524     0.000191   1.26e-11     1.23 
11 mu_1       0.2    0.246      0.0154     2.90e- 7     4.32 
12 mu_1       0.3    0.589      0.108      8.50e- 5     7.71 
13 mu_1       0.4    0.899      0.366      4.01e- 3     9.09 
14 mu_1       0.5    1.03       0.758      6.59e- 2     4.86 
15 mu_1       0.6    1.04       0.971      4.54e- 1     2.08 
16 mu_1       0.7    1.03       0.947      1.07e- 1     3.72 
17 mu_1       0.8    0.954      0.445      2.19e- 3    11.3  
18 mu_1       0.9    0.768      0.0644     1.22e- 6    36.7  
19 mu_0       0.1    0.00800    0.0000133  0            0.239
20 mu_0       0.2    0.0789     0.00132    0            1.89 
21 mu_0       0.3    0.299      0.0146     0            4.96 
22 mu_0       0.4    0.631      0.104      0            9.09 
23 mu_0       0.5    0.888      0.322      0            7.29 
24 mu_0       0.6    0.999      0.796      0            3.12 
25 mu_0       0.7    1.05       0.971      0            1.93 
26 mu_0       0.8    1.08       1.02       0            5.72 
27 mu_0       0.9    0.887      0.332      0            8.37 
[1] "Total run time was 139.56 seconds"
