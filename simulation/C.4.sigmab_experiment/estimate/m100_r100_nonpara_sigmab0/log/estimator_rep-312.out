
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1272"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 7  7  6  5  6  5  3  2  8 11  5  9  9  7  4  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03036 0.31911 0.59671 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
731 541 
[1] "treatment indicator table: "

  0   1 
469 803 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 619
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 653
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 76.599 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.331 0.0778
 2 mu         0.1   0.2 0.618 0.230 
 3 mu         0.1   0.3 0.646 0.214 
 4 mu         0.1   0.4 0.739 0.209 
 5 mu         0.1   0.5 0.787 0.215 
 6 mu         0.2   0.1 0.299 0.0560
 7 mu         0.2   0.2 0.495 0.143 
 8 mu         0.2   0.3 0.541 0.136 
 9 mu         0.2   0.4 0.664 0.147 
10 mu         0.2   0.5 0.734 0.164 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.517        0.160  0.000224      9.39
 2 mu         0.2      0.863        0.626  0.0199       10.2 
 3 mu         0.3      0.971        0.924  0.161         4.78
 4 mu         0.4      0.990        1      0.470         2.22
 5 mu         0.5      0.997        1      0.762         1.29
 6 mu         0.6      1.00         1.00   0.921         1.11
 7 mu         0.7      1.01         1      0.849         1.32
 8 mu         0.8      1.01         1      0.595         1.90
 9 mu         0.9      1.00         0.978  0.213         5.05
10 mu_1       0.1      0.826        0.426  0.000967     14.1 
11 mu_1       0.2      0.991        0.861  0.0442        7.70
12 mu_1       0.3      0.999        0.994  0.249         3.35
13 mu_1       0.4      0.994        1      0.562         1.60
14 mu_1       0.5      0.998        1      0.829         1.17
15 mu_1       0.6      1.00         1      0.919         1.09
16 mu_1       0.7      1.01         1      0.806         1.40
17 mu_1       0.8      1.00         1      0.545         1.98
18 mu_1       0.9      1.00         0.986  0.186         5.46
19 mu_0       0.1      0.483        0.130  0.000142      8.86
20 mu_0       0.2      0.831        0.568  0.0138       10.8 
21 mu_0       0.3      0.959        0.896  0.124         5.38
22 mu_0       0.4      0.987        0.994  0.397         2.64
23 mu_0       0.5      0.996        1      0.681         1.41
24 mu_0       0.6      1.00         1      0.850         1.15
25 mu_0       0.7      1.01         1.01   0.888         1.12
26 mu_0       0.8      1.01         1      0.795         1.58
27 mu_0       0.9      1.01         1      0.450         2.40
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.108     0.0000360  2.77e-14      3.69
 2 mu         0.2     0.517     0.00452    3.22e- 9     29.5 
 3 mu         0.3     0.996     0.0665     2.78e- 6     51.6 
 4 mu         0.4     1.20      0.314      3.17e- 4     39.9 
 5 mu         0.5     1.19      0.758      1.17e- 2     16.4 
 6 mu         0.6     1.12      1.03       2.08e- 1      3.64
 7 mu         0.7     1.11      0.924      1.80e- 1      5.05
 8 mu         0.8     1.35      0.420      7.20e- 3     19.1 
 9 mu         0.9     1.92      0.0456     6.34e- 6     51.3 
10 mu_1       0.1     0.319     0.000213   2.61e-13     10.5 
11 mu_1       0.2     0.860     0.0147     1.52e- 8     46.1 
12 mu_1       0.3     1.20      0.134      8.75e- 6     53.7 
13 mu_1       0.4     1.24      0.497      7.48e- 4     31.1 
14 mu_1       0.5     1.17      0.941      2.22e- 2     10.2 
15 mu_1       0.6     1.11      1.05       2.88e- 1      2.69
16 mu_1       0.7     1.13      0.797      9.10e- 2      6.70
17 mu_1       0.8     1.41      0.336      2.81e- 3     22.2 
18 mu_1       0.9     1.94      0.0254     2.20e- 6     53.8 
19 mu_0       0.1     0.0846    0.0000101  0             3.28
20 mu_0       0.2     0.431     0.00193    0            25.3 
21 mu_0       0.3     0.907     0.0352     0            50.6 
22 mu_0       0.4     1.17      0.192      0            45.7 
23 mu_0       0.5     1.20      0.548      0            22.5 
24 mu_0       0.6     1.15      0.992      0             6.02
25 mu_0       0.7     1.08      1.08       0             2.32
26 mu_0       0.8     1.11      0.769      0             6.83
27 mu_0       0.9     1.69      0.129      0            31.6 
[1] "Total run time was 79.035 seconds"
