
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1259"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  6 10  4  3 10  4  4  6  9  8  3  5 10  5  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0425  0.3217  0.5866  1.0000  4.4155 
[1] "event indicator table: "

  0   1 
757 502 
[1] "treatment indicator table: "

  0   1 
445 814 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 664
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 75"
[1] "     Cluster: 80"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 595
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 95.752 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.332 0.147
 2 mu         0.1   0.2 0.376 0.178
 3 mu         0.1   0.3 0.401 0.195
 4 mu         0.1   0.4 0.429 0.211
 5 mu         0.1   0.5 0.486 0.229
 6 mu         0.2   0.1 0.245 0.124
 7 mu         0.2   0.2 0.280 0.165
 8 mu         0.2   0.3 0.313 0.181
 9 mu         0.2   0.4 0.364 0.195
10 mu         0.2   0.5 0.452 0.211
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      1.13        0.107  0.000000143      46.3 
 2 mu         0.2      1.11        0.417  0.000152         22.5 
 3 mu         0.3      0.987       0.760  0.00608          13.7 
 4 mu         0.4      0.940       0.972  0.0589            4.34
 5 mu         0.5      0.967       1      0.246             1.46
 6 mu         0.6      0.991       1      0.571             1.21
 7 mu         0.7      0.996       1      0.802             1.16
 8 mu         0.8      0.998       1      0.474             1.48
 9 mu         0.9      0.973       1      0.141             2.76
10 mu_1       0.1      0.929       0.283  0.000000813      20.0 
11 mu_1       0.2      1.02        0.673  0.000442         22.6 
12 mu_1       0.3      0.940       0.896  0.0121            9.39
13 mu_1       0.4      0.941       1      0.0906            2.65
14 mu_1       0.5      0.974       1      0.314             1.41
15 mu_1       0.6      0.991       1      0.640             1.23
16 mu_1       0.7      0.996       1      0.756             1.21
17 mu_1       0.8      0.997       1      0.435             1.55
18 mu_1       0.9      0.968       0.996  0.126             3.01
19 mu_0       0.1      1.15        0.0858 0.0000000688     51.4 
20 mu_0       0.2      1.13        0.343  0.0000791        22.5 
21 mu_0       0.3      1.01        0.691  0.00349          15.6 
22 mu_0       0.4      0.940       0.939  0.0378            5.46
23 mu_0       0.5      0.961       0.998  0.178             1.72
24 mu_0       0.6      0.990       1      0.467             1.33
25 mu_0       0.7      0.997       1      0.790             1.24
26 mu_0       0.8      0.998       1      0.632             1.22
27 mu_0       0.9      1.02        1      0.282             1.85
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.185   0.0000205   8.82e-14      7.24
 2 mu         0.2      0.625   0.00319     8.12e- 9     25.4 
 3 mu         0.3      1.13    0.0510      5.36e- 6     33.7 
 4 mu         0.4      1.44    0.259       4.49e- 4     27.1 
 5 mu         0.5      1.53    0.737       1.15e- 2     20.3 
 6 mu         0.6      1.51    0.996       1.31e- 1     10.8 
 7 mu         0.7      1.41    1.10        1.06e- 1      6.49
 8 mu         0.8      1.22    0.766       1.83e- 3      9.65
 9 mu         0.9      0.838   0.0953      9.04e- 7     15.2 
10 mu_1       0.1      0.506   0.000147    7.49e-13     21.7 
11 mu_1       0.2      0.997   0.00958     3.45e- 8     38.1 
12 mu_1       0.3      1.37    0.120       1.52e- 5     33.7 
13 mu_1       0.4      1.51    0.445       9.54e- 4     24.5 
14 mu_1       0.5      1.52    0.893       1.96e- 2     17.4 
15 mu_1       0.6      1.48    1.08        1.86e- 1      9.86
16 mu_1       0.7      1.38    1.10        4.19e- 2      6.75
17 mu_1       0.8      1.18    0.669       7.61e- 4     10.5 
18 mu_1       0.9      0.788   0.0645      3.35e- 7     15.6 
19 mu_0       0.1      0.149   0.00000563  1.47e-14      5.64
20 mu_0       0.2      0.532   0.00139     1.52e- 9     22.2 
21 mu_0       0.3      1.03    0.0219      1.15e- 6     33.7 
22 mu_0       0.4      1.39    0.144       1.12e- 4     31.7 
23 mu_0       0.5      1.53    0.475       3.46e- 3     23.2 
24 mu_0       0.6      1.55    0.928       4.91e- 2     14.5 
25 mu_0       0.7      1.49    1.11        2.36e- 1      9.83
26 mu_0       0.8      1.37    1.12        6.09e- 3      8.65
27 mu_0       0.9      1.29    0.360       6.03e- 6     14.9 
[1] "Total run time was 97.965 seconds"
