
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1323"
[1] "cluster size dist'n: "

 5  7  8  9 10 11 13 14 15 16 17 18 19 20 
 5  6 10  9  7  5  6 10  4  6  6  6 14  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03675 0.37070 0.63274 1.00000 7.00000 
[1] "event indicator table: "

  0   1 
802 521 
[1] "treatment indicator table: "

  0   1 
474 849 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 642
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 681
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 110.108 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.297 0.0939
 2 mu         0.1   0.2 0.416 0.140 
 3 mu         0.1   0.3 0.437 0.142 
 4 mu         0.1   0.4 0.470 0.146 
 5 mu         0.1   0.5 0.472 0.151 
 6 mu         0.2   0.1 0.273 0.0596
 7 mu         0.2   0.2 0.373 0.0902
 8 mu         0.2   0.3 0.417 0.0912
 9 mu         0.2   0.4 0.453 0.0966
10 mu         0.2   0.5 0.468 0.0997
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.294       0.0520 0.0000349      2.89
 2 mu         0.2      0.580       0.401  0.00484        3.08
 3 mu         0.3      0.814       0.756  0.0546         3.63
 4 mu         0.4      0.925       0.891  0.227          2.34
 5 mu         0.5      0.965       0.954  0.517          1.68
 6 mu         0.6      0.988       0.990  0.790          1.17
 7 mu         0.7      1.00        1.00   0.826          1.16
 8 mu         0.8      0.992       0.994  0.567          1.63
 9 mu         0.9      0.954       0.896  0.250          4.61
10 mu_1       0.1      0.501       0.163  0.000163       4.20
11 mu_1       0.2      0.749       0.649  0.0117         3.72
12 mu_1       0.3      0.897       0.867  0.0934         3.40
13 mu_1       0.4      0.951       0.946  0.309          2.05
14 mu_1       0.5      0.974       0.982  0.603          1.52
15 mu_1       0.6      0.993       0.993  0.840          1.16
16 mu_1       0.7      1.00        1      0.790          1.19
17 mu_1       0.8      0.988       0.990  0.531          1.77
18 mu_1       0.9      0.950       0.874  0.223          5.00
19 mu_0       0.1      0.271       0.0403 0.0000208      3.01
20 mu_0       0.2      0.538       0.343  0.00312        3.22
21 mu_0       0.3      0.779       0.700  0.0380         3.72
22 mu_0       0.4      0.908       0.863  0.172          2.65
23 mu_0       0.5      0.956       0.945  0.431          1.83
24 mu_0       0.6      0.980       0.982  0.717          1.28
25 mu_0       0.7      1.00        0.997  0.890          1.13
26 mu_0       0.8      1.01        1      0.709          1.31
27 mu_0       0.9      0.991       0.994  0.421          1.91
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.194   0.0000284   2.25e-12     11.3 
 2 mu         0.2      0.399   0.00429     5.82e- 8     14.1 
 3 mu         0.3      0.881   0.0633      1.95e- 5     21.7 
 4 mu         0.4      1.36    0.316       1.07e- 3     35.8 
 5 mu         0.5      1.45    0.807       2.12e- 2     28.7 
 6 mu         0.6      1.31    1.01        2.04e- 1     10.6 
 7 mu         0.7      1.18    1.03        1.24e- 1      5.02
 8 mu         0.8      1.19    0.516       4.76e- 3     19.0 
 9 mu         0.9      1.26    0.0437      3.42e- 6     43.9 
10 mu_1       0.1      0.416   0.000160    1.98e-11     22.5 
11 mu_1       0.2      0.590   0.0138      2.57e- 7     14.1 
12 mu_1       0.3      1.11    0.123       5.74e- 5     27.4 
13 mu_1       0.4      1.46    0.512       2.37e- 3     37.7 
14 mu_1       0.5      1.42    1.02        3.74e- 2     24.2 
15 mu_1       0.6      1.26    1.09        2.95e- 1      7.44
16 mu_1       0.7      1.16    0.938       7.95e- 2      6.66
17 mu_1       0.8      1.20    0.405       2.68e- 3     22.0 
18 mu_1       0.9      1.25    0.0291      1.40e- 6     45.3 
19 mu_0       0.1      0.169   0.00000895  0            10.0 
20 mu_0       0.2      0.351   0.00157     0            14.1 
21 mu_0       0.3      0.782   0.0364      0            19.5 
22 mu_0       0.4      1.29    0.203       0            34.5 
23 mu_0       0.5      1.48    0.579       0            33.2 
24 mu_0       0.6      1.38    1.02        0            15.3 
25 mu_0       0.7      1.22    1.10        0             2.97
26 mu_0       0.8      1.13    0.956       0             6.78
27 mu_0       0.9      1.35    0.183       0            31.4 
[1] "Total run time was 112.904 seconds"
