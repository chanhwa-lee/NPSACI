
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1258"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 3  6  5  6 12  4  5  6  9  6 10  8  6  3  6  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04228 0.36835 0.65058 1.00000 7.14654 
[1] "event indicator table: "

  0   1 
756 502 
[1] "treatment indicator table: "

  0   1 
440 818 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 629
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 10"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 629
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 59"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 444.778 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.462 0.117 
 2 mu         0.1   0.2 0.545 0.133 
 3 mu         0.1   0.3 0.653 0.169 
 4 mu         0.1   0.4 0.660 0.165 
 5 mu         0.1   0.5 0.667 0.164 
 6 mu         0.2   0.1 0.390 0.0829
 7 mu         0.2   0.2 0.477 0.0911
 8 mu         0.2   0.3 0.574 0.121 
 9 mu         0.2   0.4 0.585 0.115 
10 mu         0.2   0.5 0.599 0.114 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.370       0.0579 0.000115       5.72
 2 mu         0.2      0.662       0.379  0.0120         6.38
 3 mu         0.3      0.878       0.741  0.116          5.27
 4 mu         0.4      0.974       0.914  0.398          3.17
 5 mu         0.5      0.998       0.999  0.717          1.71
 6 mu         0.6      1.00        1      0.906          1.17
 7 mu         0.7      1.01        1.00   0.834          1.16
 8 mu         0.8      1.02        1      0.601          1.69
 9 mu         0.9      1.03        0.972  0.269          4.39
10 mu_1       0.1      0.599       0.195  0.000549       8.82
11 mu_1       0.2      0.825       0.616  0.0294         6.60
12 mu_1       0.3      0.952       0.896  0.195          4.31
13 mu_1       0.4      0.993       0.978  0.523          2.25
14 mu_1       0.5      1.00        0.998  0.795          1.35
15 mu_1       0.6      1.00        1      0.904          1.09
16 mu_1       0.7      1.01        1.00   0.788          1.19
17 mu_1       0.8      1.03        1      0.558          1.82
18 mu_1       0.9      1.03        0.943  0.240          4.76
19 mu_0       0.1      0.345       0.0428 0.0000664      5.37
20 mu_0       0.2      0.622       0.321  0.00769        6.71
21 mu_0       0.3      0.846       0.681  0.0824         5.69
22 mu_0       0.4      0.961       0.899  0.315          3.78
23 mu_0       0.5      0.995       0.985  0.639          2.06
24 mu_0       0.6      1.00        0.999  0.846          1.29
25 mu_0       0.7      1.01        1.00   0.891          1.10
26 mu_0       0.8      1.01        1.00   0.772          1.28
27 mu_0       0.9      1.01        1      0.526          2.24
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.131   0.0000156   1.26e-13      8.71
 2 mu         0.2      0.502   0.00205     1.31e- 8     27.2 
 3 mu         0.3      0.888   0.0328      9.88e- 6     31.5 
 4 mu         0.4      1.13    0.206       9.66e- 4     21.7 
 5 mu         0.5      1.18    0.551       2.98e- 2      9.88
 6 mu         0.6      1.12    1.03        2.58e- 1      3.97
 7 mu         0.7      1.07    0.960       3.33e- 1      3.27
 8 mu         0.8      1.08    0.533       1.81e- 2     14.1 
 9 mu         0.9      1.01    0.0612      4.53e- 5     26.0 
10 mu_1       0.1      0.403   0.000104    1.13e-12     23.8 
11 mu_1       0.2      0.829   0.00740     5.86e- 8     37.0 
12 mu_1       0.3      1.10    0.0713      2.95e- 5     28.6 
13 mu_1       0.4      1.19    0.331       2.16e- 3     14.8 
14 mu_1       0.5      1.15    0.762       5.33e- 2      7.64
15 mu_1       0.6      1.09    1.06        3.99e- 1      2.94
16 mu_1       0.7      1.06    0.891       1.77e- 1      4.18
17 mu_1       0.8      1.08    0.421       9.04e- 3     15.7 
18 mu_1       0.9      0.984   0.0425      2.24e- 5     25.9 
19 mu_0       0.1      0.101   0.00000461  0             7.04
20 mu_0       0.2      0.420   0.000758    0            24.7 
21 mu_0       0.3      0.799   0.0162      0            32.7 
22 mu_0       0.4      1.09    0.110       0            26.4 
23 mu_0       0.5      1.20    0.368       0            14.4 
24 mu_0       0.6      1.17    0.841       0             5.51
25 mu_0       0.7      1.12    1.11        0             2.08
26 mu_0       0.8      1.11    0.845       0             7.40
27 mu_0       0.9      1.21    0.209       0            27.4 
[1] "Total run time was 456.35 seconds"
