
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1237"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5 10  6  8  4  8  5  4 10  2  8  5  4  5  9  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04398 0.32693 0.58683 0.98003 6.00000 
[1] "event indicator table: "

  0   1 
705 532 
[1] "treatment indicator table: "

  0   1 
494 743 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 618
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 91"
[1] "     Cluster: 95"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 619
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 36"
[1] "     Cluster: 40"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 137.766 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.317 0.0798
 2 mu         0.1   0.2 0.378 0.0984
 3 mu         0.1   0.3 0.395 0.107 
 4 mu         0.1   0.4 0.538 0.144 
 5 mu         0.1   0.5 0.586 0.148 
 6 mu         0.2   0.1 0.332 0.0558
 7 mu         0.2   0.2 0.386 0.0632
 8 mu         0.2   0.3 0.419 0.0709
 9 mu         0.2   0.4 0.535 0.0932
10 mu         0.2   0.5 0.595 0.0990
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.805        0.349  0.000179      9.94
 2 mu         0.2      1.05         0.753  0.0154       13.0 
 3 mu         0.3      1.03         0.988  0.127         6.96
 4 mu         0.4      1.00         1      0.402         2.42
 5 mu         0.5      0.994        1      0.750         1.17
 6 mu         0.6      0.998        1      0.890         1.10
 7 mu         0.7      1.00         1      0.748         1.33
 8 mu         0.8      1.00         1      0.570         1.96
 9 mu         0.9      1.02         0.884  0.173        12.3 
10 mu_1       0.1      1.06         0.713  0.000767     14.9 
11 mu_1       0.2      1.08         0.909  0.0340       11.5 
12 mu_1       0.3      1.02         1      0.199         4.31
13 mu_1       0.4      0.994        1      0.509         1.52
14 mu_1       0.5      0.993        1      0.836         1.08
15 mu_1       0.6      1.00         1      0.864         1.15
16 mu_1       0.7      1.01         1      0.720         1.37
17 mu_1       0.8      1.00         1      0.521         2.24
18 mu_1       0.9      1.02         0.876  0.149        13.6 
19 mu_0       0.1      0.776        0.313  0.000114      9.67
20 mu_0       0.2      1.04         0.694  0.0107       13.4 
21 mu_0       0.3      1.04         0.963  0.0966        8.10
22 mu_0       0.4      1.01         1      0.330         3.02
23 mu_0       0.5      0.994        1      0.664         1.28
24 mu_0       0.6      0.996        1      0.869         1.12
25 mu_0       0.7      1.00         1      0.812         1.24
26 mu_0       0.8      1.01         1      0.693         1.47
27 mu_0       0.9      0.981        1      0.354         2.24
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.140    0.000190   6.93e-13      9.18
 2 mu         0.2      0.425    0.0119     3.19e- 8     16.1 
 3 mu         0.3      0.740    0.130      1.40e- 5     14.2 
 4 mu         0.4      0.954    0.424      8.82e- 4      8.60
 5 mu         0.5      1.05     0.838      1.81e- 2      4.62
 6 mu         0.6      1.05     1.02       1.72e- 1      2.19
 7 mu         0.7      0.999    0.750      2.64e- 2      5.25
 8 mu         0.8      0.926    0.270      3.45e- 4      9.64
 9 mu         0.9      0.713    0.0230     9.61e- 8     19.8 
10 mu_1       0.1      0.375    0.00122    5.83e-12     20.4 
11 mu_1       0.2      0.680    0.0348     1.34e- 7     17.9 
12 mu_1       0.3      0.919    0.268      3.94e- 5     10.5 
13 mu_1       0.4      1.03     0.732      1.86e- 3      6.16
14 mu_1       0.5      1.06     1.03       3.05e- 2      3.36
15 mu_1       0.6      1.04     1.02       2.20e- 1      2.74
16 mu_1       0.7      0.981    0.656      1.32e- 2      5.63
17 mu_1       0.8      0.907    0.183      1.51e- 4     11.1 
18 mu_1       0.9      0.680    0.0130     3.74e- 8     20.3 
19 mu_0       0.1      0.114    0.0000506  1.22e-13      7.93
20 mu_0       0.2      0.361    0.00610    6.29e- 9     15.7 
21 mu_0       0.3      0.663    0.0595     3.17e- 6     15.8 
22 mu_0       0.4      0.902    0.257      2.32e- 4     11.1 
23 mu_0       0.5      1.04     0.686      5.72e- 3      5.88
24 mu_0       0.6      1.08     1.03       6.77e- 2      3.20
25 mu_0       0.7      1.04     0.959      5.71e- 2      4.38
26 mu_0       0.8      0.998    0.604      1.12e- 3      6.41
27 mu_0       0.9      1.01     0.102      6.24e- 7     15.2 
[1] "Total run time was 141.027 seconds"
