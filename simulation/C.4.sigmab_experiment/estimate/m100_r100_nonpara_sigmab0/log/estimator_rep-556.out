
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1284"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 8  4  7  7  4  7  6  2  5  6  8  6  8  9  4  9 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03715 0.36891 0.61660 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
790 494 
[1] "treatment indicator table: "

  0   1 
456 828 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 637
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 647
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 229.332 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.185 0.156 
 2 mu         0.1   0.2 0.266 0.155 
 3 mu         0.1   0.3 0.359 0.162 
 4 mu         0.1   0.4 0.375 0.181 
 5 mu         0.1   0.5 0.398 0.212 
 6 mu         0.2   0.1 0.173 0.114 
 7 mu         0.2   0.2 0.258 0.0916
 8 mu         0.2   0.3 0.349 0.0841
 9 mu         0.2   0.4 0.371 0.0961
10 mu         0.2   0.5 0.401 0.116 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.64        0.0961 0.0000614     57.3 
 2 mu         0.2      1.15        0.458  0.0101        18.2 
 3 mu         0.3      1.02        0.798  0.109          5.64
 4 mu         0.4      0.993       0.971  0.354          2.77
 5 mu         0.5      0.990       1      0.694          1.50
 6 mu         0.6      0.996       0.998  0.891          1.16
 7 mu         0.7      1.00        1      0.838          1.16
 8 mu         0.8      1.00        0.988  0.547          1.76
 9 mu         0.9      1.03        0.920  0.153          7.24
10 mu_1       0.1      0.808       0.275  0.000280      16.6 
11 mu_1       0.2      0.895       0.692  0.0235         8.28
12 mu_1       0.3      0.952       0.937  0.170          4.11
13 mu_1       0.4      0.976       1      0.454          2.12
14 mu_1       0.5      0.989       1      0.767          1.28
15 mu_1       0.6      0.998       1      0.915          1.13
16 mu_1       0.7      1.00        1      0.802          1.21
17 mu_1       0.8      1.00        0.988  0.506          1.94
18 mu_1       0.9      1.03        0.906  0.134          7.95
19 mu_0       0.1      1.73        0.0749 0.0000371     63.6 
20 mu_0       0.2      1.22        0.393  0.00675       22.5 
21 mu_0       0.3      1.05        0.718  0.0824         7.56
22 mu_0       0.4      1.00        0.936  0.288          3.21
23 mu_0       0.5      0.991       1      0.608          1.71
24 mu_0       0.6      0.994       0.994  0.850          1.21
25 mu_0       0.7      1.00        1      0.881          1.11
26 mu_0       0.8      1.00        1      0.712          1.29
27 mu_0       0.9      1.00        0.980  0.325          2.81
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.0403   0.0000304   3.21e-11      2.76
 2 mu         0.2     0.194    0.00463     6.56e- 7      9.69
 3 mu         0.3     0.441    0.0609      1.20e- 4     12.8 
 4 mu         0.4     0.741    0.256       3.26e- 3     10.3 
 5 mu         0.5     0.997    0.575       3.95e- 2      5.64
 6 mu         0.6     1.15     0.976       1.85e- 1      4.17
 7 mu         0.7     1.20     0.991       2.23e- 1      5.07
 8 mu         0.8     1.08     0.608       1.06e- 2      9.86
 9 mu         0.9     0.693    0.116       1.50e- 5     10.1 
10 mu_1       0.1     0.131    0.000192    2.53e-10      8.29
11 mu_1       0.2     0.351    0.0159      2.59e- 6     14.5 
12 mu_1       0.3     0.610    0.131       3.70e- 4     12.8 
13 mu_1       0.4     0.884    0.435       7.52e- 3      7.76
14 mu_1       0.5     1.09     0.821       7.29e- 2      5.28
15 mu_1       0.6     1.20     1.10        2.16e- 1      4.09
16 mu_1       0.7     1.21     0.925       1.59e- 1      5.47
17 mu_1       0.8     1.04     0.492       5.97e- 3     10.6 
18 mu_1       0.9     0.652    0.0904      7.48e- 6      9.65
19 mu_0       0.1     0.0302   0.00000847  0             2.15
20 mu_0       0.2     0.155    0.00165     0             8.48
21 mu_0       0.3     0.369    0.0229      0            12.8 
22 mu_0       0.4     0.646    0.114       0            12.1 
23 mu_0       0.5     0.904    0.356       0             7.90
24 mu_0       0.6     1.07     0.829       0             4.94
25 mu_0       0.7     1.18     1.06        0             4.69
26 mu_0       0.8     1.21     1.05        0             7.04
27 mu_0       0.9     1.06     0.327       0            14.5 
[1] "Total run time was 231.858 seconds"
