
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1290"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 7  8  4  3  5  4  4  7  8  7  8 11  5  7  7  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03159 0.33479 0.63336 1.00000 6.00000 
[1] "event indicator table: "

  0   1 
773 517 
[1] "treatment indicator table: "

  0   1 
460 830 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 643
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 58"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 647
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 128.346 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.386 0.127
 2 mu         0.1   0.2 0.509 0.146
 3 mu         0.1   0.3 0.526 0.152
 4 mu         0.1   0.4 0.649 0.205
 5 mu         0.1   0.5 0.660 0.204
 6 mu         0.2   0.1 0.351 0.104
 7 mu         0.2   0.2 0.444 0.106
 8 mu         0.2   0.3 0.470 0.109
 9 mu         0.2   0.4 0.561 0.145
10 mu         0.2   0.5 0.581 0.145
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.882       0.119   0.000270     16.2 
 2 mu         0.2      1.06        0.568   0.0245       14.2 
 3 mu         0.3      1.05        0.907   0.142         6.10
 4 mu         0.4      1.02        1       0.362         2.21
 5 mu         0.5      1.01        1       0.631         1.45
 6 mu         0.6      1.00        1       0.910         1.12
 7 mu         0.7      0.990       1       0.828         1.11
 8 mu         0.8      0.970       0.995   0.630         1.35
 9 mu         0.9      0.962       0.954   0.282         3.02
10 mu_1       0.1      1.15        0.327   0.00117      21.6 
11 mu_1       0.2      1.07        0.851   0.0511        9.67
12 mu_1       0.3      1.03        1       0.211         3.20
13 mu_1       0.4      1.02        1       0.446         1.82
14 mu_1       0.5      1.01        1       0.709         1.31
15 mu_1       0.6      1.00        1       0.946         1.08
16 mu_1       0.7      0.987       1       0.796         1.12
17 mu_1       0.8      0.968       0.995   0.605         1.42
18 mu_1       0.9      0.962       0.938   0.257         3.25
19 mu_0       0.1      0.852       0.0970  0.000170     15.6 
20 mu_0       0.2      1.06        0.501   0.0170       15.3 
21 mu_0       0.3      1.05        0.842   0.113         7.34
22 mu_0       0.4      1.03        1       0.306         2.74
23 mu_0       0.5      1.01        1       0.553         1.61
24 mu_0       0.6      1.01        1       0.822         1.27
25 mu_0       0.7      0.996       0.999   0.898         1.08
26 mu_0       0.8      0.979       1       0.726         1.17
27 mu_0       0.9      0.958       1       0.500         1.59
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     40.6      0.0000349  4.02e-13   4041.  
 2 mu         0.2     31.4      0.00518    2.08e- 8   3108.  
 3 mu         0.3     11.3      0.0860     1.05e- 5   1078.  
 4 mu         0.4      2.89     0.320      7.67e- 4    221.  
 5 mu         0.5      1.16     0.744      1.89e- 2     27.0 
 6 mu         0.6      1.06     1.08       2.24e- 1      1.74
 7 mu         0.7      1.10     1.03       4.14e- 2      3.45
 8 mu         0.8      1.10     0.540      1.85e- 4     13.0 
 9 mu         0.9      0.799    0.0624     1.43e- 8     21.4 
10 mu_1       0.1     50.9      0.000208   3.57e-12   5051.  
11 mu_1       0.2     19.9      0.0187     9.25e- 8   1942.  
12 mu_1       0.3      5.07     0.174      3.10e- 5    449.  
13 mu_1       0.4      1.45     0.517      1.70e- 3     69.2 
14 mu_1       0.5      1.01     0.946      3.36e- 2      6.74
15 mu_1       0.6      1.05     1.07       3.24e- 1      1.61
16 mu_1       0.7      1.08     0.950      7.39e- 3      4.38
17 mu_1       0.8      1.07     0.438      2.89e- 5     14.4 
18 mu_1       0.9      0.749    0.0452     1.99e- 9     21.1 
19 mu_0       0.1     39.5      0.0000160  4.96e-14   3929.  
20 mu_0       0.2     34.3      0.00257    2.89e- 9   3399.  
21 mu_0       0.3     13.9      0.0395     1.66e- 6   1348.  
22 mu_0       0.4      3.85     0.182      1.42e- 4    323.  
23 mu_0       0.5      1.31     0.543      4.21e- 3     47.2 
24 mu_0       0.6      1.07     1.01       6.22e- 2      3.73
25 mu_0       0.7      1.14     1.18       1.21e- 1      1.90
26 mu_0       0.8      1.21     1.00       8.10e- 4      7.21
27 mu_0       0.9      1.24     0.245      1.25e- 7     23.7 
[1] "Total run time was 130.441 seconds"
