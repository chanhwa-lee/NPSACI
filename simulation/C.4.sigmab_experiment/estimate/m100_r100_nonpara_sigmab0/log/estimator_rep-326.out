
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1266"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
11  4  6  5  9  4  3  6  4  6  6  7  8  5  5 11 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0469  0.3671  0.6511  1.0000  5.0000 
[1] "event indicator table: "

  0   1 
766 500 
[1] "treatment indicator table: "

  0   1 
419 847 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 633
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 20"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 70"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 633
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 48"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 210.037 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.252 0.0907
 2 mu         0.1   0.2 0.256 0.145 
 3 mu         0.1   0.3 0.301 0.179 
 4 mu         0.1   0.4 0.368 0.202 
 5 mu         0.1   0.5 0.377 0.224 
 6 mu         0.2   0.1 0.258 0.0519
 7 mu         0.2   0.2 0.291 0.0890
 8 mu         0.2   0.3 0.345 0.114 
 9 mu         0.2   0.4 0.410 0.125 
10 mu         0.2   0.5 0.422 0.137 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.17         0.139 0.0000211     62.0 
 2 mu         0.2      0.968        0.550 0.00463       18.9 
 3 mu         0.3      0.923        0.861 0.0663         5.39
 4 mu         0.4      0.946        0.978 0.289          2.26
 5 mu         0.5      0.977        0.991 0.631          1.26
 6 mu         0.6      0.999        1     0.849          1.16
 7 mu         0.7      1.00         1     0.830          1.12
 8 mu         0.8      0.990        1     0.498          1.25
 9 mu         0.9      0.937        1     0.0907         2.45
10 mu_1       0.1      1.07         0.373 0.0000991     36.5 
11 mu_1       0.2      0.920        0.793 0.0113         7.83
12 mu_1       0.3      0.930        0.966 0.111          3.68
13 mu_1       0.4      0.960        1.00  0.381          1.47
14 mu_1       0.5      0.986        0.996 0.715          1.18
15 mu_1       0.6      1.00         1     0.884          1.15
16 mu_1       0.7      1.00         1.00  0.791          1.15
17 mu_1       0.8      0.987        1     0.451          1.30
18 mu_1       0.9      0.933        1     0.0774         2.59
19 mu_0       0.1      1.18         0.112 0.0000124     64.9 
20 mu_0       0.2      0.980        0.488 0.00297       22.2 
21 mu_0       0.3      0.919        0.805 0.0470         6.12
22 mu_0       0.4      0.937        0.973 0.227          2.85
23 mu_0       0.5      0.967        0.983 0.547          1.33
24 mu_0       0.6      0.992        1     0.771          1.18
25 mu_0       0.7      1.00         1     0.874          1.12
26 mu_0       0.8      1.00         1     0.685          1.19
27 mu_0       0.9      0.976        1     0.210          1.30
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.0894   0.0000234   1.44e-13      6.78
 2 mu         0.2     0.205    0.00254     1.32e- 8      8.47
 3 mu         0.3     0.438    0.0428      8.73e- 6      7.45
 4 mu         0.4     0.764    0.230       7.32e- 4      6.19
 5 mu         0.5     1.00     0.614       1.88e- 2      5.50
 6 mu         0.6     1.08     1.06        1.27e- 1      2.75
 7 mu         0.7     1.11     1.02        2.94e- 1      4.71
 8 mu         0.8     1.17     0.683       1.30e- 2     11.6 
 9 mu         0.9     1.20     0.130       2.89e- 5     33.8 
10 mu_1       0.1     0.221    0.000151    1.22e-12     13.6 
11 mu_1       0.2     0.339    0.0100      5.62e- 8      8.47
12 mu_1       0.3     0.604    0.0934      2.47e- 5      5.41
13 mu_1       0.4     0.900    0.403       1.55e- 3      6.64
14 mu_1       0.5     1.06     0.808       3.20e- 2      4.71
15 mu_1       0.6     1.10     1.05        2.11e- 1      3.34
16 mu_1       0.7     1.13     1.01        1.67e- 1      4.94
17 mu_1       0.8     1.19     0.579       6.68e- 3     13.6 
18 mu_1       0.9     1.21     0.0931      1.32e- 5     35.3 
19 mu_0       0.1     0.0748   0.00000485  0             6.03
20 mu_0       0.2     0.171    0.00101     0             8.47
21 mu_0       0.3     0.367    0.0211      0             8.51
22 mu_0       0.4     0.672    0.106       0             7.15
23 mu_0       0.5     0.941    0.406       0             6.28
24 mu_0       0.6     1.05     0.876       0             3.93
25 mu_0       0.7     1.07     1.12        0             4.19
26 mu_0       0.8     1.08     1.01        0             5.39
27 mu_0       0.9     1.10     0.294       0            21.2 
[1] "Total run time was 213.539 seconds"
