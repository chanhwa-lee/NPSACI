
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1208"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  6  5  5 12  6 10  7 10  5  7  5  6  5  2  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03015 0.31373 0.57298 0.95905 4.00000 
[1] "event indicator table: "

  0   1 
730 478 
[1] "treatment indicator table: "

  0   1 
451 757 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 627
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 84"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 581
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 111.798 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.368 0.205 
 2 mu         0.1   0.2 0.437 0.255 
 3 mu         0.1   0.3 0.428 0.267 
 4 mu         0.1   0.4 0.525 0.197 
 5 mu         0.1   0.5 0.668 0.140 
 6 mu         0.2   0.1 0.401 0.162 
 7 mu         0.2   0.2 0.471 0.200 
 8 mu         0.2   0.3 0.500 0.185 
 9 mu         0.2   0.4 0.562 0.135 
10 mu         0.2   0.5 0.667 0.0968
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.839        0.203  0.000375     11.2 
 2 mu         0.2      1.03         0.650  0.0241        7.17
 3 mu         0.3      1.01         0.912  0.162         4.94
 4 mu         0.4      0.992        0.982  0.453         2.50
 5 mu         0.5      0.994        0.999  0.742         1.34
 6 mu         0.6      1.00         0.999  0.883         1.12
 7 mu         0.7      1.00         1      0.680         1.23
 8 mu         0.8      0.990        1      0.371         1.77
 9 mu         0.9      0.991        0.930  0.117         4.06
10 mu_1       0.1      1.07         0.484  0.00155      10.3 
11 mu_1       0.2      1.05         0.899  0.0518        6.80
12 mu_1       0.3      0.995        0.983  0.249         3.66
13 mu_1       0.4      0.989        0.997  0.565         1.76
14 mu_1       0.5      0.996        1.00   0.814         1.20
15 mu_1       0.6      1.00         1      0.893         1.12
16 mu_1       0.7      1.00         1      0.633         1.31
17 mu_1       0.8      0.988        1      0.341         1.91
18 mu_1       0.9      0.992        0.901  0.106         4.39
19 mu_0       0.1      0.814        0.161  0.000244     11.6 
20 mu_0       0.2      1.02         0.578  0.0171        7.96
21 mu_0       0.3      1.02         0.854  0.125         5.49
22 mu_0       0.4      0.994        0.986  0.379         2.99
23 mu_0       0.5      0.993        0.995  0.665         1.54
24 mu_0       0.6      0.997        0.998  0.820         1.18
25 mu_0       0.7      1.00         0.998  0.791         1.12
26 mu_0       0.8      1.00         1      0.488         1.32
27 mu_0       0.9      0.982        1      0.211         1.77
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.947    0.0000969  3.91e-13     64.3 
 2 mu         0.2      1.64     0.00675    2.03e- 8     89.1 
 3 mu         0.3      1.79     0.0732     1.02e- 5     60.3 
 4 mu         0.4      1.48     0.304      7.47e- 4     35.9 
 5 mu         0.5      1.16     0.679      1.84e- 2     10.7 
 6 mu         0.6      1.02     0.920      2.18e- 1      3.05
 7 mu         0.7      1.03     0.943      5.63e- 2      6.19
 8 mu         0.8      1.12     0.475      4.81e- 4     10.4 
 9 mu         0.9      1.01     0.0725     5.95e- 8     20.6 
10 mu_1       0.1      1.76     0.000670   3.48e-12    117.  
11 mu_1       0.2      1.83     0.0249     9.01e- 8     81.0 
12 mu_1       0.3      1.64     0.160      3.02e- 5     55.3 
13 mu_1       0.4      1.30     0.487      1.66e- 3     26.9 
14 mu_1       0.5      1.08     0.890      3.28e- 2      6.40
15 mu_1       0.6      1.01     0.959      2.07e- 1      2.68
16 mu_1       0.7      1.05     0.864      2.47e- 2      7.18
17 mu_1       0.8      1.13     0.383      1.80e- 4     11.6 
18 mu_1       0.9      0.985    0.0533     1.98e- 8     21.1 
19 mu_0       0.1      0.857    0.0000386  0            58.4 
20 mu_0       0.2      1.60     0.00305    0            91.1 
21 mu_0       0.3      1.85     0.0367     0            70.4 
22 mu_0       0.4      1.59     0.175      0            41.9 
23 mu_0       0.5      1.24     0.505      0            14.9 
24 mu_0       0.6      1.04     0.851      0             5.55
25 mu_0       0.7      0.982    0.927      0             3.87
26 mu_0       0.8      1.07     0.814      0             9.75
27 mu_0       0.9      1.28     0.264      0            15.8 
[1] "Total run time was 114.71 seconds"
