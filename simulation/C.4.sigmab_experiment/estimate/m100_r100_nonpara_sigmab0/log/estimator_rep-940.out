
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1247"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  6  7  6 11  3  5  4  5 12  6 11  4  3  4  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0746  0.4125  0.6464  1.0000  5.0830 
[1] "event indicator table: "

  0   1 
731 516 
[1] "treatment indicator table: "

  0   1 
409 838 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 598
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 9"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 649
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 58"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 66.799 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.216 0.124 
 2 mu         0.1   0.2 0.412 0.167 
 3 mu         0.1   0.3 0.424 0.187 
 4 mu         0.1   0.4 0.447 0.208 
 5 mu         0.1   0.5 0.493 0.239 
 6 mu         0.2   0.1 0.234 0.0969
 7 mu         0.2   0.2 0.390 0.146 
 8 mu         0.2   0.3 0.406 0.163 
 9 mu         0.2   0.4 0.424 0.182 
10 mu         0.2   0.5 0.461 0.211 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     10.6         0.0671 0.0000741   1016.  
 2 mu         0.2      3.76        0.448  0.0122       309.  
 3 mu         0.3      1.42        0.802  0.129         54.9 
 4 mu         0.4      1.03        1      0.366          6.73
 5 mu         0.5      1.00        1      0.599          1.71
 6 mu         0.6      1.00        1      0.806          1.16
 7 mu         0.7      1.00        1      0.836          1.14
 8 mu         0.8      1.01        1      0.661          1.48
 9 mu         0.9      1.04        0.986  0.271          2.63
10 mu_1       0.1      6.55        0.207  0.000338     598.  
11 mu_1       0.2      1.72        0.705  0.0283        90.8 
12 mu_1       0.3      1.04        0.955  0.197         11.0 
13 mu_1       0.4      0.995       1      0.451          2.27
14 mu_1       0.5      0.999       1      0.682          1.34
15 mu_1       0.6      1.00        1      0.836          1.14
16 mu_1       0.7      1.00        1      0.809          1.16
17 mu_1       0.8      1.01        1      0.621          1.54
18 mu_1       0.9      1.05        0.993  0.243          2.75
19 mu_0       0.1     11.0         0.0515 0.0000448   1062.  
20 mu_0       0.2      4.27        0.380  0.00813      363.  
21 mu_0       0.3      1.58        0.727  0.100         73.6 
22 mu_0       0.4      1.05        0.972  0.310         10.2 
23 mu_0       0.5      1.00        1      0.512          2.07
24 mu_0       0.6      1.00        1      0.749          1.26
25 mu_0       0.7      1.00        1      0.842          1.14
26 mu_0       0.8      1.00        1      0.726          1.27
27 mu_0       0.9      1.01        1      0.513          1.73
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      2.27    0.0000190   1.28e-11    224.  
 2 mu         0.2      3.25    0.00302     1.80e- 7    310.  
 3 mu         0.3      2.51    0.0375      3.07e- 5    210.  
 4 mu         0.4      1.70    0.215       1.11e- 3     93.1 
 5 mu         0.5      1.34    0.557       1.68e- 2     28.2 
 6 mu         0.6      1.31    1.06        1.44e- 1      6.79
 7 mu         0.7      1.37    1.26        1.51e- 1      5.57
 8 mu         0.8      1.24    0.972       1.14e- 2      5.44
 9 mu         0.9      0.830   0.242       3.79e- 5     10.6 
10 mu_1       0.1      4.20    0.000145    1.01e-10    407.  
11 mu_1       0.2      3.12    0.0100      8.38e- 7    282.  
12 mu_1       0.3      1.88    0.0920      9.51e- 5    127.  
13 mu_1       0.4      1.35    0.369       2.57e- 3     42.3 
14 mu_1       0.5      1.26    0.772       3.12e- 2     11.6 
15 mu_1       0.6      1.33    1.22        2.23e- 1      4.85
16 mu_1       0.7      1.38    1.21        9.94e- 2      5.97
17 mu_1       0.8      1.20    0.833       4.30e- 3      5.16
18 mu_1       0.9      0.796   0.175       9.45e- 6     11.8 
19 mu_0       0.1      2.06    0.00000487  0           203.  
20 mu_0       0.2      3.29    0.00113     0           317.  
21 mu_0       0.3      2.78    0.0154      0           245.  
22 mu_0       0.4      1.93    0.0870      0           127.  
23 mu_0       0.5      1.42    0.331       0            46.2 
24 mu_0       0.6      1.29    0.777       0            11.2 
25 mu_0       0.7      1.36    1.23        0             4.64
26 mu_0       0.8      1.39    1.31        0             6.79
27 mu_0       0.9      1.14    0.638       0             5.96
[1] "Total run time was 68.919 seconds"
