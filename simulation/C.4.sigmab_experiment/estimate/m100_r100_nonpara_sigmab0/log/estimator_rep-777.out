
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1220"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  7  5  6  8  9  6 10  7  3  8  8  3  2  6  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.01608 0.26309 0.55568 0.93126 5.00000 
[1] "event indicator table: "

  0   1 
732 488 
[1] "treatment indicator table: "

  0   1 
471 749 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 638
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 80"
[1] "     Cluster: 84"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 582
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 82.4 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.294 0.111 
 2 mu         0.1   0.2 0.344 0.155 
 3 mu         0.1   0.3 0.365 0.192 
 4 mu         0.1   0.4 0.431 0.195 
 5 mu         0.1   0.5 0.429 0.209 
 6 mu         0.2   0.1 0.318 0.0796
 7 mu         0.2   0.2 0.408 0.116 
 8 mu         0.2   0.3 0.452 0.138 
 9 mu         0.2   0.4 0.511 0.127 
10 mu         0.2   0.5 0.516 0.132 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.801        0.205  0.000306     16.3 
 2 mu         0.2      0.924        0.608  0.0178        9.48
 3 mu         0.3      0.953        0.908  0.126         3.98
 4 mu         0.4      0.982        0.978  0.365         2.36
 5 mu         0.5      0.998        0.999  0.642         1.56
 6 mu         0.6      0.996        1      0.843         1.16
 7 mu         0.7      0.983        0.996  0.775         1.17
 8 mu         0.8      0.959        0.970  0.461         1.57
 9 mu         0.9      0.910        0.859  0.0919        3.15
10 mu_1       0.1      1.00         0.503  0.00132      14.2 
11 mu_1       0.2      0.944        0.841  0.0401        5.95
12 mu_1       0.3      0.960        0.973  0.200         2.75
13 mu_1       0.4      0.988        0.997  0.465         1.79
14 mu_1       0.5      0.998        1      0.715         1.27
15 mu_1       0.6      0.993        1      0.839         1.11
16 mu_1       0.7      0.979        0.989  0.733         1.23
17 mu_1       0.8      0.954        0.960  0.426         1.65
18 mu_1       0.9      0.906        0.845  0.0786        3.40
19 mu_0       0.1      0.779        0.172  0.000194     16.5 
20 mu_0       0.2      0.919        0.546  0.0122       10.7 
21 mu_0       0.3      0.950        0.867  0.0948        4.90
22 mu_0       0.4      0.978        0.975  0.299         2.75
23 mu_0       0.5      0.998        1      0.568         1.87
24 mu_0       0.6      1.00         1      0.790         1.28
25 mu_0       0.7      0.993        1      0.807         1.10
26 mu_0       0.8      0.979        0.992  0.603         1.28
27 mu_0       0.9      0.952        0.989  0.212         1.98
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.861    0.000169   3.40e-12     53.9 
 2 mu         0.2      1.64     0.0141     1.39e- 7     84.2 
 3 mu         0.3      1.78     0.132      5.36e- 5     98.1 
 4 mu         0.4      1.45     0.452      2.89e- 3     56.9 
 5 mu         0.5      1.17     0.885      4.95e- 2     18.7 
 6 mu         0.6      1.08     0.992      3.75e- 1      3.33
 7 mu         0.7      1.05     0.954      1.38e- 1      4.80
 8 mu         0.8      1.01     0.458      5.14e- 3      9.08
 9 mu         0.9      0.794    0.0596     4.02e- 6     13.1 
10 mu_1       0.1      1.52     0.00116    2.72e-11     67.3 
11 mu_1       0.2      1.90     0.0425     5.57e- 7    112.  
12 mu_1       0.3      1.65     0.260      1.43e- 4     87.2 
13 mu_1       0.4      1.28     0.680      5.77e- 3     37.9 
14 mu_1       0.5      1.11     0.984      7.92e- 2      9.97
15 mu_1       0.6      1.07     0.980      2.31e- 1      2.85
16 mu_1       0.7      1.05     0.880      3.08e- 2      5.71
17 mu_1       0.8      1.01     0.364      1.71e- 3     10.2 
18 mu_1       0.9      0.769    0.0402     1.19e- 6     13.1 
19 mu_0       0.1      0.788    0.0000703  0            52.4 
20 mu_0       0.2      1.57     0.00624    0            77.2 
21 mu_0       0.3      1.84     0.0761     0           103.  
22 mu_0       0.4      1.56     0.291      0            69.5 
23 mu_0       0.5      1.24     0.660      0            27.4 
24 mu_0       0.6      1.09     0.937      0             6.10
25 mu_0       0.7      1.05     1.04       0             2.86
26 mu_0       0.8      1.04     0.840      0             6.75
27 mu_0       0.9      1.01     0.197      0            13.1 
[1] "Total run time was 84.49 seconds"
