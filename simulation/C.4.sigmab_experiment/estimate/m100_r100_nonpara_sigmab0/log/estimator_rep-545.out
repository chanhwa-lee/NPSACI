
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1290"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  4  7  2  8  8 10  3  5  6  6 12  6  5  5  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0481  0.3966  0.6330  1.0000  5.0000 
[1] "event indicator table: "

  0   1 
764 526 
[1] "treatment indicator table: "

  0   1 
454 836 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 644
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 646
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 134.78 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.397 0.0689
 2 mu         0.1   0.2 0.517 0.0929
 3 mu         0.1   0.3 0.514 0.0799
 4 mu         0.1   0.4 0.531 0.0831
 5 mu         0.1   0.5 0.522 0.0865
 6 mu         0.2   0.1 0.374 0.0460
 7 mu         0.2   0.2 0.486 0.0578
 8 mu         0.2   0.3 0.502 0.0501
 9 mu         0.2   0.4 0.525 0.0553
10 mu         0.2   0.5 0.529 0.0571
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.395       0.0932 0.0000471      3.71
 2 mu         0.2      0.669       0.486  0.00719        4.37
 3 mu         0.3      0.865       0.816  0.0755         2.93
 4 mu         0.4      0.972       0.983  0.264          1.81
 5 mu         0.5      1.01        1      0.539          1.32
 6 mu         0.6      1.01        1.01   0.826          1.14
 7 mu         0.7      0.992       0.989  0.864          1.11
 8 mu         0.8      0.977       0.975  0.649          1.47
 9 mu         0.9      0.998       0.908  0.141          4.50
10 mu_1       0.1      0.596       0.279  0.000213       5.49
11 mu_1       0.2      0.813       0.777  0.0165         3.82
12 mu_1       0.3      0.944       0.939  0.120          2.26
13 mu_1       0.4      1.00        1      0.337          1.56
14 mu_1       0.5      1.01        1.00   0.613          1.24
15 mu_1       0.6      1.00        1      0.878          1.10
16 mu_1       0.7      0.988       0.990  0.813          1.17
17 mu_1       0.8      0.976       0.966  0.603          1.59
18 mu_1       0.9      1.00        0.897  0.121          4.90
19 mu_0       0.1      0.372       0.0758 0.0000282      3.51
20 mu_0       0.2      0.633       0.418  0.00486        4.50
21 mu_0       0.3      0.831       0.745  0.0566         3.22
22 mu_0       0.4      0.953       0.944  0.216          2.03
23 mu_0       0.5      1.00        1      0.465          1.41
24 mu_0       0.6      1.01        1.01   0.748          1.20
25 mu_0       0.7      1.00        1      0.913          1.11
26 mu_0       0.8      0.983       0.998  0.824          1.17
27 mu_0       0.9      0.957       0.977  0.317          1.98
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.0995   0.0000287   2.98e-14      6.80
 2 mu         0.2     0.554    0.00295     1.95e- 9     21.2 
 3 mu         0.3     1.35     0.0427      1.28e- 6     32.2 
 4 mu         0.4     1.80     0.225       1.28e- 4     32.5 
 5 mu         0.5     1.56     0.603       4.55e- 3     23.2 
 6 mu         0.6     1.19     0.914       8.41e- 2     10.3 
 7 mu         0.7     1.10     1.04        3.61e- 2      2.83
 8 mu         0.8     1.29     0.541       6.20e- 4     13.7 
 9 mu         0.9     2.42     0.0884      3.07e- 7     71.2 
10 mu_1       0.1     0.301    0.000197    2.98e-13     18.6 
11 mu_1       0.2     0.941    0.0121      9.77e- 9     28.9 
12 mu_1       0.3     1.69     0.0911      4.28e- 6     37.6 
13 mu_1       0.4     1.85     0.372       3.20e- 4     31.8 
14 mu_1       0.5     1.46     0.754       9.10e- 3     20.9 
15 mu_1       0.6     1.15     1.01        1.40e- 1      7.73
16 mu_1       0.7     1.11     0.976       1.72e- 2      3.51
17 mu_1       0.8     1.35     0.456       2.58e- 4     17.1 
18 mu_1       0.9     2.59     0.0662      1.14e- 7     79.1 
19 mu_0       0.1     0.0771   0.00000613  0             5.50
20 mu_0       0.2     0.457    0.000984    0            19.3 
21 mu_0       0.3     1.21     0.0209      0            29.9 
22 mu_0       0.4     1.77     0.131       0            35.2 
23 mu_0       0.5     1.66     0.445       0            25.6 
24 mu_0       0.6     1.27     0.842       0            14.2 
25 mu_0       0.7     1.07     1.08        0             3.19
26 mu_0       0.8     1.01     0.847       0             4.76
27 mu_0       0.9     0.889    0.274       0            11.0 
[1] "Total run time was 137.56 seconds"
