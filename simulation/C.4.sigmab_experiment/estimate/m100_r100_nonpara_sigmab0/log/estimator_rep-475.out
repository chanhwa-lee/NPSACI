
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1198"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  8 10  6  5  9  5 10  5  6  3  8  3  6  4  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.05119 0.42077 0.66067 1.00000 4.00000 
[1] "event indicator table: "

  0   1 
725 473 
[1] "treatment indicator table: "

  0   1 
419 779 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 580
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 7"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 618
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 17"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 87.077 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.267 0.0852
 2 mu         0.1   0.2 0.314 0.110 
 3 mu         0.1   0.3 0.358 0.122 
 4 mu         0.1   0.4 0.376 0.137 
 5 mu         0.1   0.5 0.380 0.144 
 6 mu         0.2   0.1 0.239 0.0453
 7 mu         0.2   0.2 0.303 0.0624
 8 mu         0.2   0.3 0.341 0.0688
 9 mu         0.2   0.4 0.364 0.0827
10 mu         0.2   0.5 0.368 0.0871
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.715       0.104  0.0000298     12.4 
 2 mu         0.2      0.830       0.555  0.00389       10.0 
 3 mu         0.3      0.902       0.831  0.0478         5.04
 4 mu         0.4      0.950       0.970  0.213          2.07
 5 mu         0.5      0.979       1      0.522          1.27
 6 mu         0.6      0.998       1      0.833          1.18
 7 mu         0.7      1.00        1      0.896          1.14
 8 mu         0.8      0.988       0.986  0.680          1.41
 9 mu         0.9      0.917       0.911  0.310          2.24
10 mu_1       0.1      0.750       0.314  0.000161      12.3 
11 mu_1       0.2      0.868       0.783  0.0107         8.43
12 mu_1       0.3      0.932       0.905  0.0902         3.39
13 mu_1       0.4      0.968       0.996  0.312          1.56
14 mu_1       0.5      0.988       1      0.637          1.27
15 mu_1       0.6      1.00        1      0.855          1.15
16 mu_1       0.7      1.00        1      0.854          1.16
17 mu_1       0.8      0.983       0.982  0.640          1.47
18 mu_1       0.9      0.908       0.895  0.283          2.27
19 mu_0       0.1      0.711       0.0832 0.0000152     13.7 
20 mu_0       0.2      0.820       0.480  0.00218       10.5 
21 mu_0       0.3      0.890       0.800  0.0297         5.75
22 mu_0       0.4      0.939       0.942  0.148          2.42
23 mu_0       0.5      0.971       0.996  0.407          1.38
24 mu_0       0.6      0.993       1      0.736          1.23
25 mu_0       0.7      1.01        1.00   0.882          1.08
26 mu_0       0.8      1.01        1      0.818          1.21
27 mu_0       0.9      0.996       1      0.553          1.93
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.519   0.0000322   1.32e-13     31.7 
 2 mu         0.2      0.903   0.00354     1.22e- 8     43.9 
 3 mu         0.3      0.984   0.0447      8.04e- 6     29.7 
 4 mu         0.4      1.02    0.198       6.73e- 4     13.2 
 5 mu         0.5      1.08    0.575       1.73e- 2      8.48
 6 mu         0.6      1.09    0.949       1.97e- 1      4.61
 7 mu         0.7      1.08    1.02        7.89e- 2      2.19
 8 mu         0.8      1.05    0.566       2.68e- 3      7.15
 9 mu         0.9      0.839   0.100       6.63e- 6     11.8 
10 mu_1       0.1      1.03    0.000195    1.12e-12     57.7 
11 mu_1       0.2      1.06    0.0134      5.17e- 8     39.9 
12 mu_1       0.3      0.987   0.101       2.28e- 5     18.0 
13 mu_1       0.4      1.03    0.378       1.43e- 3     10.4 
14 mu_1       0.5      1.09    0.779       2.94e- 2      6.79
15 mu_1       0.6      1.10    1.04        2.34e- 1      3.35
16 mu_1       0.7      1.09    0.950       2.05e- 2      2.68
17 mu_1       0.8      1.05    0.463       6.10e- 4      7.95
18 mu_1       0.9      0.811   0.0684      1.34e- 6     11.6 
19 mu_0       0.1      0.462   0.00000538  0            28.8 
20 mu_0       0.2      0.864   0.00115     0            44.9 
21 mu_0       0.3      0.982   0.0163      0            34.7 
22 mu_0       0.4      1.02    0.118       0            18.0 
23 mu_0       0.5      1.07    0.379       0            10.2 
24 mu_0       0.6      1.08    0.841       0             6.92
25 mu_0       0.7      1.07    1.03        0             3.04
26 mu_0       0.8      1.08    0.993       0             3.97
27 mu_0       0.9      1.09    0.311       0            13.1 
[1] "Total run time was 89.711 seconds"
