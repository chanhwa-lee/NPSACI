
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1268"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  4  4 10  5 12  5  5  6  4  7  8  4  8  8  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04858 0.36593 0.65116 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
769 499 
[1] "treatment indicator table: "

  0   1 
437 831 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 639
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 629
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 150.5 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.293 0.0971
 2 mu         0.1   0.2 0.335 0.129 
 3 mu         0.1   0.3 0.482 0.123 
 4 mu         0.1   0.4 0.588 0.174 
 5 mu         0.1   0.5 0.591 0.176 
 6 mu         0.2   0.1 0.292 0.0653
 7 mu         0.2   0.2 0.364 0.0901
 8 mu         0.2   0.3 0.479 0.0893
 9 mu         0.2   0.4 0.563 0.119 
10 mu         0.2   0.5 0.570 0.121 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      1.10        0.110  0.0000101      27.8 
 2 mu         0.2      1.26        0.497  0.00204        17.2 
 3 mu         0.3      1.25        0.830  0.0313         18.5 
 4 mu         0.4      1.11        0.981  0.165           9.33
 5 mu         0.5      1.03        1      0.456           2.78
 6 mu         0.6      1.01        1      0.791           1.23
 7 mu         0.7      1.00        1      0.833           1.14
 8 mu         0.8      1.01        1      0.574           1.51
 9 mu         0.9      1.03        1      0.179           2.52
10 mu_1       0.1      1.08        0.349  0.0000486      24.7 
11 mu_1       0.2      1.24        0.787  0.00511        20.7 
12 mu_1       0.3      1.18        1.00   0.0553         16.4 
13 mu_1       0.4      1.06        1      0.232           6.35
14 mu_1       0.5      1.01        1      0.548           1.84
15 mu_1       0.6      1.00        1.00   0.847           1.17
16 mu_1       0.7      1.00        1      0.783           1.16
17 mu_1       0.8      1.01        1      0.540           1.60
18 mu_1       0.9      1.03        1      0.160           2.66
19 mu_0       0.1      1.11        0.0883 0.00000581     30.9 
20 mu_0       0.2      1.26        0.415  0.00127        19.3 
21 mu_0       0.3      1.28        0.766  0.0210         19.5 
22 mu_0       0.4      1.15        0.977  0.120          11.3 
23 mu_0       0.5      1.04        1      0.365           3.72
24 mu_0       0.6      1.01        1      0.680           1.36
25 mu_0       0.7      1.00        1.00   0.843           1.19
26 mu_0       0.8      0.992       1      0.712           1.21
27 mu_0       0.9      1.01        1      0.350           1.95
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.0522   0.0000221   1.24e-14     1.33 
 2 mu         0.2     0.283    0.00392     1.45e- 9    11.4  
 3 mu         0.3     0.648    0.0492      1.25e- 6    22.7  
 4 mu         0.4     0.986    0.263       1.42e- 4    20.5  
 5 mu         0.5     1.15     0.615       5.27e- 3    14.2  
 6 mu         0.6     1.10     0.966       8.68e- 2     7.85 
 7 mu         0.7     1.01     0.894       1.21e- 1     4.56 
 8 mu         0.8     1.11     0.497       1.11e- 2    19.6  
 9 mu         0.9     1.22     0.0846      1.95e- 5    36.3  
10 mu_1       0.1     0.189    0.000151    1.17e-13     4.43 
11 mu_1       0.2     0.526    0.0130      6.84e- 9    18.9  
12 mu_1       0.3     0.869    0.106       3.93e- 6    25.2  
13 mu_1       0.4     1.11     0.417       3.36e- 4    17.1  
14 mu_1       0.5     1.17     0.798       9.96e- 3    13.4  
15 mu_1       0.6     1.06     0.970       1.36e- 1     6.20 
16 mu_1       0.7     0.996    0.806       7.99e- 2     5.83 
17 mu_1       0.8     1.11     0.406       4.62e- 3    22.0  
18 mu_1       0.9     1.20     0.0582      7.23e- 6    36.1  
19 mu_0       0.1     0.0370   0.00000718  0            0.985
20 mu_0       0.2     0.222    0.00147     0            9.46 
21 mu_0       0.3     0.553    0.0266      0           21.6  
22 mu_0       0.4     0.904    0.159       0           22.7  
23 mu_0       0.5     1.13     0.442       0           14.9  
24 mu_0       0.6     1.14     0.819       0           10.3  
25 mu_0       0.7     1.05     1.05        0            3.11 
26 mu_0       0.8     1.08     0.784       0           10.3  
27 mu_0       0.9     1.40     0.292       0           38.3  
[1] "Total run time was 155.688 seconds"
