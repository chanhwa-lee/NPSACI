
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1187"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5 11  5  8  7  6  7  5  6  8  8  5  6  4  7  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03267 0.33580 0.65542 1.00000 5.04355 
[1] "event indicator table: "

  0   1 
724 463 
[1] "treatment indicator table: "

  0   1 
429 758 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 565
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 622
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 44"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 284.286 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.253 0.148 
 2 mu         0.1   0.2 0.286 0.175 
 3 mu         0.1   0.3 0.321 0.204 
 4 mu         0.1   0.4 0.582 0.181 
 5 mu         0.1   0.5 0.604 0.186 
 6 mu         0.2   0.1 0.285 0.0942
 7 mu         0.2   0.2 0.331 0.119 
 8 mu         0.2   0.3 0.385 0.147 
 9 mu         0.2   0.4 0.549 0.133 
10 mu         0.2   0.5 0.571 0.136 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.778       0.0797 0.0000000937     18.5 
 2 mu         0.2      0.940       0.419  0.0000858        15.3 
 3 mu         0.3      0.954       0.735  0.00326          11.8 
 4 mu         0.4      0.943       0.938  0.0336            5.06
 5 mu         0.5      0.967       0.986  0.167             1.91
 6 mu         0.6      0.990       1      0.492             1.29
 7 mu         0.7      1.00        1      0.632             1.33
 8 mu         0.8      0.993       1      0.373             2.40
 9 mu         0.9      0.936       0.984  0.0593            5.43
10 mu_1       0.1      0.903       0.234  0.000000547      21.4 
11 mu_1       0.2      0.959       0.642  0.000255         16.3 
12 mu_1       0.3      0.934       0.897  0.00667           9.07
13 mu_1       0.4      0.942       0.967  0.0539            3.33
14 mu_1       0.5      0.974       0.999  0.225             1.49
15 mu_1       0.6      0.994       1      0.579             1.28
16 mu_1       0.7      1.00        1      0.583             1.37
17 mu_1       0.8      0.990       1      0.328             2.59
18 mu_1       0.9      0.929       0.971  0.0473            5.63
19 mu_0       0.1      0.764       0.0640 0.0000000433     18.2 
20 mu_0       0.2      0.935       0.350  0.0000435        16.7 
21 mu_0       0.3      0.962       0.657  0.00180          13.0 
22 mu_0       0.4      0.944       0.908  0.0201            6.21
23 mu_0       0.5      0.959       0.972  0.109             2.50
24 mu_0       0.6      0.985       1      0.360             1.45
25 mu_0       0.7      1.00        1      0.746             1.26
26 mu_0       0.8      1.01        1      0.552             1.61
27 mu_0       0.9      1.00        1      0.168             3.62
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.157    0.0000479  1.23e-16     11.6 
 2 mu         0.2      0.467    0.00623    6.44e-11     14.5 
 3 mu         0.3      1.01     0.0730     1.43e- 7     19.9 
 4 mu         0.4      1.39     0.348      3.38e- 5     27.3 
 5 mu         0.5      1.40     0.719      2.34e- 3     17.5 
 6 mu         0.6      1.36     0.836      7.48e- 2     13.3 
 7 mu         0.7      1.49     0.872      9.66e- 2     35.6 
 8 mu         0.8      1.65     0.512      3.77e- 3     52.3 
 9 mu         0.9      2.51     0.107      2.10e- 6    166.  
10 mu_1       0.1      0.380    0.000283   1.23e-15     23.2 
11 mu_1       0.2      0.756    0.0201     3.22e-10     15.3 
12 mu_1       0.3      1.27     0.156      4.76e- 7     25.8 
13 mu_1       0.4      1.47     0.517      8.44e- 5     26.6 
14 mu_1       0.5      1.38     0.859      4.69e- 3     13.6 
15 mu_1       0.6      1.37     0.906      1.25e- 1     17.7 
16 mu_1       0.7      1.52     0.850      6.90e- 2     40.6 
17 mu_1       0.8      1.65     0.418      1.74e- 3     52.3 
18 mu_1       0.9      2.63     0.0753     8.59e- 7    184.  
19 mu_0       0.1      0.132    0.0000228  0            10.3 
20 mu_0       0.2      0.395    0.00302    0            14.5 
21 mu_0       0.3      0.899    0.0441     0            17.3 
22 mu_0       0.4      1.34     0.203      0            27.8 
23 mu_0       0.5      1.42     0.527      0            21.4 
24 mu_0       0.6      1.35     0.795      0             8.24
25 mu_0       0.7      1.43     0.931      0            23.7 
26 mu_0       0.8      1.64     0.846      0            52.3 
27 mu_0       0.9      1.39     0.331      0            53.7 
[1] "Total run time was 288.771 seconds"
