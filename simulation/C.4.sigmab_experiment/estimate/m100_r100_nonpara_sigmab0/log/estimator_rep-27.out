
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1234"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 3  7  8 10  6  4 10  3  9  4  7  5  8  5  3  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03696 0.37380 0.63285 1.00000 5.24096 
[1] "event indicator table: "

  0   1 
741 493 
[1] "treatment indicator table: "

  0   1 
441 793 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 652
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 582
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 416.006 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.448 0.166
 2 mu         0.1   0.2 0.469 0.179
 3 mu         0.1   0.3 0.535 0.215
 4 mu         0.1   0.4 0.590 0.248
 5 mu         0.1   0.5 0.577 0.247
 6 mu         0.2   0.1 0.403 0.113
 7 mu         0.2   0.2 0.434 0.101
 8 mu         0.2   0.3 0.505 0.125
 9 mu         0.2   0.4 0.557 0.150
10 mu         0.2   0.5 0.552 0.143
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.45         0.231 0.0000766     96.6 
 2 mu         0.2      1.08         0.709 0.00793       27.2 
 3 mu         0.3      1.07         1     0.0753         6.96
 4 mu         0.4      1.07         1.01  0.257          2.58
 5 mu         0.5      1.04         1.02  0.499          1.85
 6 mu         0.6      1.01         1.01  0.716          1.26
 7 mu         0.7      0.996        0.995 0.861          1.18
 8 mu         0.8      0.973        0.981 0.511          1.39
 9 mu         0.9      0.955        0.927 0.127          4.19
10 mu_1       0.1      0.767        0.578 0.000384       6.86
11 mu_1       0.2      0.974        0.953 0.0200         4.22
12 mu_1       0.3      1.06         1.00  0.129          3.49
13 mu_1       0.4      1.05         1.02  0.343          2.38
14 mu_1       0.5      1.03         1.01  0.573          1.62
15 mu_1       0.6      1.01         1.00  0.766          1.15
16 mu_1       0.7      0.992        0.991 0.817          1.21
17 mu_1       0.8      0.969        0.969 0.466          1.45
18 mu_1       0.9      0.956        0.911 0.111          4.59
19 mu_0       0.1      1.53         0.188 0.0000424    107.  
20 mu_0       0.2      1.10         0.656 0.00491       33.7 
21 mu_0       0.3      1.08         0.962 0.0523         9.56
22 mu_0       0.4      1.08         1     0.200          2.76
23 mu_0       0.5      1.05         1.01  0.424          2.09
24 mu_0       0.6      1.02         1.02  0.643          1.41
25 mu_0       0.7      1.01         1.00  0.828          1.15
26 mu_0       0.8      0.987        0.984 0.693          1.30
27 mu_0       0.9      0.949        0.957 0.277          1.48
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.530   0.0000216   1.07e-12     38.9 
 2 mu         0.2      1.06    0.00378     4.94e- 8     54.0 
 3 mu         0.3      1.38    0.0530      2.18e- 5     36.5 
 4 mu         0.4      1.46    0.281       1.37e- 3     29.6 
 5 mu         0.5      1.34    0.704       2.73e- 2     15.2 
 6 mu         0.6      1.18    0.922       1.50e- 1      5.96
 7 mu         0.7      1.12    1.05        6.09e- 2      4.06
 8 mu         0.8      1.10    0.595       3.29e- 3      9.64
 9 mu         0.9      0.935   0.0715      8.14e- 6     19.8 
10 mu_1       0.1      1.15    0.000121    9.05e-12     70.8 
11 mu_1       0.2      1.37    0.0130      2.08e- 7     49.0 
12 mu_1       0.3      1.48    0.113       6.11e- 5     33.7 
13 mu_1       0.4      1.43    0.450       2.88e- 3     26.1 
14 mu_1       0.5      1.26    0.835       4.44e- 2     10.7 
15 mu_1       0.6      1.13    0.968       1.74e- 1      4.20
16 mu_1       0.7      1.10    0.929       2.37e- 2      4.56
17 mu_1       0.8      1.09    0.468       7.48e- 4     11.1 
18 mu_1       0.9      0.925   0.0503      1.64e- 6     20.3 
19 mu_0       0.1      0.462   0.00000652  0            35.4 
20 mu_0       0.2      0.977   0.00142     0            55.2 
21 mu_0       0.3      1.33    0.0277      0            42.7 
22 mu_0       0.4      1.49    0.163       0            31.9 
23 mu_0       0.5      1.42    0.495       0            19.6 
24 mu_0       0.6      1.26    0.924       0            10.7 
25 mu_0       0.7      1.16    1.06        0             4.59
26 mu_0       0.8      1.14    0.931       0             5.60
27 mu_0       0.9      1.03    0.249       0            15.2 
[1] "Total run time was 423.088 seconds"
