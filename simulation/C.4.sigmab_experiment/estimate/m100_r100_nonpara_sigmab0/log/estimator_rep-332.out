
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1195"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
10  5  6  6 12  7  3  5  5  5  7  9  5  4  7  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03679 0.36233 0.61248 1.00000 8.00000 
[1] "event indicator table: "

  0   1 
709 486 
[1] "treatment indicator table: "

  0   1 
440 755 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 598
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 597
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 67"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 93"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 76.253 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.594 0.206
 2 mu         0.1   0.2 0.601 0.215
 3 mu         0.1   0.3 0.601 0.220
 4 mu         0.1   0.4 0.613 0.231
 5 mu         0.1   0.5 0.619 0.241
 6 mu         0.2   0.1 0.495 0.147
 7 mu         0.2   0.2 0.525 0.159
 8 mu         0.2   0.3 0.529 0.166
 9 mu         0.2   0.4 0.548 0.179
10 mu         0.2   0.5 0.569 0.192
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       1.20        0.178  0.000273     61.8 
 2 mu         0.2       1.56        0.613  0.0225       75.9 
 3 mu         0.3       1.26        0.891  0.170        32.0 
 4 mu         0.4       1.07        0.995  0.478         8.00
 5 mu         0.5       1.01        1      0.743         2.00
 6 mu         0.6       1.00        1      0.874         1.17
 7 mu         0.7       1.00        1      0.782         1.24
 8 mu         0.8       1.01        1      0.456         1.82
 9 mu         0.9       1.05        0.959  0.0785        4.08
10 mu_1       0.1       1.68        0.437  0.00117      97.6 
11 mu_1       0.2       1.52        0.891  0.0492       60.7 
12 mu_1       0.3       1.17        0.975  0.259        18.0 
13 mu_1       0.4       1.04        1      0.586         4.17
14 mu_1       0.5       1.01        1      0.793         1.44
15 mu_1       0.6       1.00        1      0.906         1.19
16 mu_1       0.7       1.00        1      0.740         1.30
17 mu_1       0.8       1.01        1      0.411         1.92
18 mu_1       0.9       1.05        0.950  0.0658        4.42
19 mu_0       0.1       1.14        0.144  0.000174     57.8 
20 mu_0       0.2       1.57        0.545  0.0158       79.7 
21 mu_0       0.3       1.31        0.838  0.132        38.0 
22 mu_0       0.4       1.09        0.980  0.405        10.6 
23 mu_0       0.5       1.02        1      0.649         2.56
24 mu_0       0.6       1.00        1      0.824         1.22
25 mu_0       0.7       1.00        1      0.880         1.20
26 mu_0       0.8       1.01        1      0.630         1.43
27 mu_0       0.9       1.02        1      0.192         2.45
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.958    0.0000444  2.86e-12     62.5 
 2 mu         0.2      1.09     0.00438    1.32e- 7     48.7 
 3 mu         0.3      1.11     0.0611     5.80e- 5     25.1 
 4 mu         0.4      1.17     0.253      3.64e- 3     14.3 
 5 mu         0.5      1.19     0.669      6.71e- 2     12.2 
 6 mu         0.6      1.16     1.02       2.77e- 1      6.35
 7 mu         0.7      1.15     0.992      6.66e- 2      3.53
 8 mu         0.8      1.17     0.436      2.97e- 3      8.85
 9 mu         0.9      1.08     0.0636     5.18e- 6     16.2 
10 mu_1       0.1      1.39     0.000311   2.41e-11     69.4 
11 mu_1       0.2      1.08     0.0155     5.55e- 7     27.0 
12 mu_1       0.3      1.07     0.136      1.63e- 4     13.9 
13 mu_1       0.4      1.13     0.434      7.67e- 3     14.9 
14 mu_1       0.5      1.14     0.870      1.16e- 1     10.1 
15 mu_1       0.6      1.13     1.05       1.06e- 1      4.41
16 mu_1       0.7      1.16     0.878      1.06e- 2      4.24
17 mu_1       0.8      1.19     0.339      4.13e- 4      9.31
18 mu_1       0.9      1.10     0.0468     1.61e- 6     18.0 
19 mu_0       0.1      0.909    0.0000151  0            61.7 
20 mu_0       0.2      1.09     0.00174    0            54.1 
21 mu_0       0.3      1.13     0.0282     0            31.9 
22 mu_0       0.4      1.20     0.137      0            14.4 
23 mu_0       0.5      1.24     0.491      0            14.2 
24 mu_0       0.6      1.20     1.00       0             9.27
25 mu_0       0.7      1.14     1.05       0             3.57
26 mu_0       0.8      1.09     0.709      0             6.98
27 mu_0       0.9      0.953    0.174      0            11.5 
[1] "Total run time was 78.373 seconds"
