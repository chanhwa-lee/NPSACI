
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1252"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  8  5  4 10  4  5  9  5  7  6  8 10  4  4  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04617 0.37391 0.64355 1.00000 6.00000 
[1] "event indicator table: "

  0   1 
720 532 
[1] "treatment indicator table: "

  0   1 
453 799 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 632
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 620
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 81.532 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.368 0.221
 2 mu         0.1   0.2 0.439 0.267
 3 mu         0.1   0.3 0.426 0.292
 4 mu         0.1   0.4 0.488 0.328
 5 mu         0.1   0.5 0.548 0.352
 6 mu         0.2   0.1 0.337 0.129
 7 mu         0.2   0.2 0.414 0.151
 8 mu         0.2   0.3 0.411 0.166
 9 mu         0.2   0.4 0.494 0.195
10 mu         0.2   0.5 0.532 0.209
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.97        0.115  0.0000747    144.  
 2 mu         0.2      1.11        0.506  0.0113        31.7 
 3 mu         0.3      0.990       0.871  0.0816         6.36
 4 mu         0.4      0.991       0.998  0.277          2.37
 5 mu         0.5      0.995       1      0.626          1.28
 6 mu         0.6      0.998       1      0.790          1.14
 7 mu         0.7      1.00        1      0.746          1.31
 8 mu         0.8      1.01        0.992  0.668          2.82
 9 mu         0.9      1.05        0.912  0.274         11.2 
10 mu_1       0.1      0.775       0.332  0.000339      13.7 
11 mu_1       0.2      0.914       0.782  0.0234         5.67
12 mu_1       0.3      0.976       0.996  0.124          3.40
13 mu_1       0.4      0.993       1      0.361          1.72
14 mu_1       0.5      0.995       1      0.707          1.22
15 mu_1       0.6      0.998       1      0.814          1.14
16 mu_1       0.7      1.00        1      0.713          1.43
17 mu_1       0.8      1.01        0.985  0.643          3.25
18 mu_1       0.9      1.05        0.888  0.251         12.4 
19 mu_0       0.1      2.11        0.0918 0.0000453    160.  
20 mu_0       0.2      1.16        0.426  0.00790       39.4 
21 mu_0       0.3      0.996       0.809  0.0634         8.66
22 mu_0       0.4      0.989       0.961  0.221          2.80
23 mu_0       0.5      0.995       1      0.530          1.48
24 mu_0       0.6      0.998       1      0.755          1.15
25 mu_0       0.7      1.00        1      0.824          1.15
26 mu_0       0.8      1.01        1      0.686          1.30
27 mu_0       0.9      1.02        1      0.478          1.70
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.228    0.0000393  4.50e-15      9.87
 2 mu         0.2      0.508    0.00405    9.32e-10     12.3 
 3 mu         0.3      0.783    0.0538     1.05e- 6     14.3 
 4 mu         0.4      0.939    0.274      1.37e- 4     11.6 
 5 mu         0.5      0.990    0.653      5.30e- 3      7.57
 6 mu         0.6      0.996    0.872      9.03e- 2      3.43
 7 mu         0.7      1.01     0.840      5.69e- 2      3.60
 8 mu         0.8      1.01     0.447      2.00e- 3      8.50
 9 mu         0.9      0.757    0.0658     1.76e- 6     15.7 
10 mu_1       0.1      0.533    0.000263   4.05e-14     19.7 
11 mu_1       0.2      0.742    0.0125     4.19e- 9     13.5 
12 mu_1       0.3      0.899    0.112      3.16e- 6     14.9 
13 mu_1       0.4      0.958    0.436      3.09e- 4      9.64
14 mu_1       0.5      0.973    0.717      9.54e- 3      5.05
15 mu_1       0.6      0.980    0.938      1.35e- 1      2.27
16 mu_1       0.7      0.998    0.781      3.13e- 2      3.86
17 mu_1       0.8      0.989    0.360      7.80e- 4      9.51
18 mu_1       0.9      0.709    0.0447     6.10e- 7     15.6 
19 mu_0       0.1      0.194    0.0000105  5.00e-16      8.78
20 mu_0       0.2      0.449    0.00152    1.16e-10     12.3 
21 mu_0       0.3      0.733    0.0253     1.51e- 7     14.0 
22 mu_0       0.4      0.926    0.178      2.29e- 5     12.9 
23 mu_0       0.5      1.01     0.543      1.06e- 3     10.1 
24 mu_0       0.6      1.02     0.765      2.26e- 2      5.71
25 mu_0       0.7      1.03     0.957      1.17e- 1      3.00
26 mu_0       0.8      1.10     0.781      6.87e- 3      5.16
27 mu_0       0.9      1.19     0.250      1.21e- 5     16.6 
[1] "Total run time was 83.963 seconds"
