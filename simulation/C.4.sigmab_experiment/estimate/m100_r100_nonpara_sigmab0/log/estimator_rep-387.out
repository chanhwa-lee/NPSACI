
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1316"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  4  3  7  6  4 10  7 10  6  6  5  7  5  6 10 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04147 0.33172 0.61365 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
794 522 
[1] "treatment indicator table: "

  0   1 
459 857 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 665
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 651
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 115.47 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.482 0.189
 2 mu         0.1   0.2 0.569 0.187
 3 mu         0.1   0.3 0.670 0.205
 4 mu         0.1   0.4 0.685 0.206
 5 mu         0.1   0.5 0.704 0.212
 6 mu         0.2   0.1 0.436 0.110
 7 mu         0.2   0.2 0.507 0.110
 8 mu         0.2   0.3 0.575 0.114
 9 mu         0.2   0.4 0.592 0.115
10 mu         0.2   0.5 0.614 0.120
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      2.07        0.0904 0.000165      87.9 
 2 mu         0.2      1.12        0.453  0.0156        21.9 
 3 mu         0.3      0.973       0.850  0.130          5.15
 4 mu         0.4      0.979       0.988  0.389          1.83
 5 mu         0.5      0.987       0.997  0.667          1.31
 6 mu         0.6      0.993       1      0.817          1.15
 7 mu         0.7      1.00        1      0.869          1.21
 8 mu         0.8      1.01        1.00   0.649          1.56
 9 mu         0.9      0.994       1      0.221          2.98
10 mu_1       0.1      0.830       0.260  0.000726      19.9 
11 mu_1       0.2      0.872       0.684  0.0348         4.46
12 mu_1       0.3      0.952       0.958  0.202          2.12
13 mu_1       0.4      0.981       1      0.483          1.49
14 mu_1       0.5      0.989       1      0.705          1.26
15 mu_1       0.6      0.996       1      0.832          1.12
16 mu_1       0.7      1.01        1.00   0.845          1.30
17 mu_1       0.8      1.02        1.00   0.597          1.68
18 mu_1       0.9      0.991       0.997  0.199          3.20
19 mu_0       0.1      2.21        0.0701 0.0000999     97.6 
20 mu_0       0.2      1.18        0.398  0.0108        27.2 
21 mu_0       0.3      0.981       0.803  0.0994         6.94
22 mu_0       0.4      0.978       0.974  0.326          2.10
23 mu_0       0.5      0.985       0.991  0.607          1.45
24 mu_0       0.6      0.989       1      0.766          1.20
25 mu_0       0.7      0.995       1      0.857          1.09
26 mu_0       0.8      1.01        1.00   0.785          1.30
27 mu_0       0.9      1.02        1.01   0.414          1.87
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.104    0.00000910  9.63e-12      9.46
 2 mu         0.2     0.240    0.00269     2.22e- 7     10.5 
 3 mu         0.3     0.579    0.0515      3.17e- 5     10.1 
 4 mu         0.4     0.963    0.257       1.00e- 3     12.1 
 5 mu         0.5     1.16     0.691       1.45e- 2      8.48
 6 mu         0.6     1.18     1.04        1.30e- 1      4.08
 7 mu         0.7     1.16     1.06        4.13e- 2      4.19
 8 mu         0.8     1.20     0.649       5.40e- 4     12.2 
 9 mu         0.9     1.43     0.107       1.50e- 7     31.3 
10 mu_1       0.1     0.199    0.0000662   8.02e-11     15.8 
11 mu_1       0.2     0.374    0.00863     9.23e- 7      8.75
12 mu_1       0.3     0.779    0.101       1.06e- 4     12.6 
13 mu_1       0.4     1.11     0.452       2.50e- 3     11.4 
14 mu_1       0.5     1.21     0.855       2.91e- 2      7.42
15 mu_1       0.6     1.18     1.06        2.16e- 1      2.97
16 mu_1       0.7     1.18     1.01        2.06e- 2      5.98
17 mu_1       0.8     1.25     0.513       2.36e- 4     15.2 
18 mu_1       0.9     1.48     0.0834      5.85e- 8     34.7 
19 mu_0       0.1     0.0937   0.00000347  0             8.76
20 mu_0       0.2     0.206    0.00128     0            10.9 
21 mu_0       0.3     0.494    0.0265      0             9.61
22 mu_0       0.4     0.868    0.137       0            12.6 
23 mu_0       0.5     1.12     0.502       0             9.54
24 mu_0       0.6     1.17     0.921       0             5.73
25 mu_0       0.7     1.12     0.989       0             3.15
26 mu_0       0.8     1.03     0.817       0             3.10
27 mu_0       0.9     0.934    0.218       0            11.9 
[1] "Total run time was 118.003 seconds"
