
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1268"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  4  9  5  3  9  8  5  5  5  9 11  6  5  7  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03376 0.33786 0.61135 1.00000 5.74426 
[1] "event indicator table: "

  0   1 
784 484 
[1] "treatment indicator table: "

  0   1 
439 829 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 618
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 70"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 650
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 9"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 81.81 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.318 0.0815
 2 mu         0.1   0.2 0.369 0.0954
 3 mu         0.1   0.3 0.376 0.125 
 4 mu         0.1   0.4 0.387 0.149 
 5 mu         0.1   0.5 0.529 0.113 
 6 mu         0.2   0.1 0.286 0.0605
 7 mu         0.2   0.2 0.333 0.0676
 8 mu         0.2   0.3 0.347 0.0881
 9 mu         0.2   0.4 0.367 0.107 
10 mu         0.2   0.5 0.482 0.0792
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      0.479       0.0924 0.00000523      4.96
 2 mu         0.2      0.757       0.429  0.00194         8.13
 3 mu         0.3      0.935       0.847  0.0379          5.87
 4 mu         0.4      0.995       1.00   0.211           3.72
 5 mu         0.5      1.00        1      0.540           2.42
 6 mu         0.6      0.997       0.997  0.773           1.42
 7 mu         0.7      0.983       0.992  0.780           1.10
 8 mu         0.8      0.947       0.971  0.455           1.22
 9 mu         0.9      0.872       0.889  0.0753          1.70
10 mu_1       0.1      0.632       0.279  0.0000265       7.18
11 mu_1       0.2      0.886       0.677  0.00501         8.63
12 mu_1       0.3      0.992       0.934  0.0673          4.35
13 mu_1       0.4      1.01        1      0.292           3.32
14 mu_1       0.5      1.00        1      0.621           1.98
15 mu_1       0.6      0.995       0.996  0.823           1.25
16 mu_1       0.7      0.978       0.992  0.749           1.10
17 mu_1       0.8      0.940       0.961  0.405           1.29
18 mu_1       0.9      0.864       0.879  0.0625          1.75
19 mu_0       0.1      0.462       0.0717 0.00000287      5.46
20 mu_0       0.2      0.724       0.359  0.00117         8.00
21 mu_0       0.3      0.911       0.783  0.0253          6.52
22 mu_0       0.4      0.986       0.974  0.156           3.99
23 mu_0       0.5      1.00        1      0.460           2.86
24 mu_0       0.6      0.999       1      0.698           1.68
25 mu_0       0.7      0.995       1      0.847           1.14
26 mu_0       0.8      0.976       0.987  0.658           1.16
27 mu_0       0.9      0.944       0.978  0.190           1.46
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.05    0.0000158   2.09e-13     44.8 
 2 mu         0.2      1.63    0.00272     1.22e- 8     65.0 
 3 mu         0.3      1.55    0.0380      6.15e- 6     57.7 
 4 mu         0.4      1.28    0.202       4.51e- 4     29.3 
 5 mu         0.5      1.15    0.578       1.11e- 2      9.24
 6 mu         0.6      1.08    0.859       1.10e- 1      5.70
 7 mu         0.7      1.01    0.947       1.09e- 1      2.92
 8 mu         0.8      0.976   0.612       3.97e- 3      6.74
 9 mu         0.9      0.908   0.0873      5.52e- 6     21.9 
10 mu_1       0.1      1.97    0.000104    1.77e-12     64.0 
11 mu_1       0.2      1.73    0.00930     5.43e- 8     75.0 
12 mu_1       0.3      1.30    0.0831      1.82e- 5     44.4 
13 mu_1       0.4      1.08    0.336       1.00e- 3     16.9 
14 mu_1       0.5      1.05    0.757       1.95e- 2      6.99
15 mu_1       0.6      1.03    0.831       1.54e- 1      4.75
16 mu_1       0.7      0.983   0.930       3.45e- 2      3.41
17 mu_1       0.8      0.970   0.493       1.15e- 3      8.42
18 mu_1       0.9      0.898   0.0625      1.42e- 6     24.3 
19 mu_0       0.1      0.951   0.00000577  0            42.6 
20 mu_0       0.2      1.61    0.00107     0            62.5 
21 mu_0       0.3      1.65    0.0178      0            63.5 
22 mu_0       0.4      1.42    0.0865      0            37.6 
23 mu_0       0.5      1.24    0.362       0            14.2 
24 mu_0       0.6      1.16    0.815       0             7.12
25 mu_0       0.7      1.07    0.907       0             4.87
26 mu_0       0.8      0.998   0.965       0             3.87
27 mu_0       0.9      1.00    0.278       0             9.82
[1] "Total run time was 83.872 seconds"
