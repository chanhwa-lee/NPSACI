
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1322"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  4  4  7  7 13  3  4  4  8  3  5  7 11  6 10 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03381 0.36768 0.63525 1.00000 4.91037 
[1] "event indicator table: "

  0   1 
785 537 
[1] "treatment indicator table: "

  0   1 
478 844 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 668
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 654
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 89"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 88.408 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.216 0.149 
 2 mu         0.1   0.2 0.319 0.110 
 3 mu         0.1   0.3 0.419 0.105 
 4 mu         0.1   0.4 0.438 0.114 
 5 mu         0.1   0.5 0.466 0.122 
 6 mu         0.2   0.1 0.183 0.108 
 7 mu         0.2   0.2 0.284 0.0710
 8 mu         0.2   0.3 0.395 0.0599
 9 mu         0.2   0.4 0.418 0.0661
10 mu         0.2   0.5 0.455 0.0722
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.542        0.166 0.0000796     12.0 
 2 mu         0.2      0.845        0.651 0.00896        8.43
 3 mu         0.3      1.01         0.910 0.0861         6.11
 4 mu         0.4      1.04         1     0.316          3.55
 5 mu         0.5      1.02         1     0.653          1.87
 6 mu         0.6      1.00         1     0.813          1.33
 7 mu         0.7      0.989        1     0.793          1.21
 8 mu         0.8      0.971        0.997 0.471          1.38
 9 mu         0.9      0.930        0.927 0.0631         2.84
10 mu_1       0.1      0.715        0.445 0.000366      11.7 
11 mu_1       0.2      0.963        0.892 0.0212         7.78
12 mu_1       0.3      1.04         1.00  0.142          4.90
13 mu_1       0.4      1.03         1     0.421          2.57
14 mu_1       0.5      1.02         1     0.721          1.76
15 mu_1       0.6      1.00         1.00  0.860          1.23
16 mu_1       0.7      0.987        0.997 0.770          1.24
17 mu_1       0.8      0.969        0.997 0.420          1.45
18 mu_1       0.9      0.925        0.917 0.0515         3.03
19 mu_0       0.1      0.522        0.133 0.0000477     13.3 
20 mu_0       0.2      0.816        0.586 0.00578        9.15
21 mu_0       0.3      0.996        0.865 0.0621         6.62
22 mu_0       0.4      1.04         1     0.247          4.20
23 mu_0       0.5      1.03         1.00  0.562          2.26
24 mu_0       0.6      1.01         1     0.742          1.48
25 mu_0       0.7      0.995        1     0.847          1.15
26 mu_0       0.8      0.982        1.00  0.674          1.37
27 mu_0       0.9      0.975        1     0.167          1.97
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.341   0.00000856  5.24e-12     28.0 
 2 mu         0.2      0.678   0.00231     1.21e- 7     43.6 
 3 mu         0.3      0.838   0.0572      3.54e- 5     33.7 
 4 mu         0.4      1.00    0.272       1.67e- 3     17.5 
 5 mu         0.5      1.19    0.775       2.74e- 2     11.0 
 6 mu         0.6      1.29    1.06        1.81e- 1      7.32
 7 mu         0.7      1.24    1.07        1.19e- 1      4.88
 8 mu         0.8      0.998   0.620       6.42e- 3      5.72
 9 mu         0.9      0.617   0.0672      8.05e- 6     13.0 
10 mu_1       0.1      0.763   0.0000680   4.37e-11     55.9 
11 mu_1       0.2      0.871   0.00718     5.03e- 7     43.6 
12 mu_1       0.3      0.905   0.133       9.84e- 5     22.5 
13 mu_1       0.4      1.05    0.475       3.48e- 3      9.15
14 mu_1       0.5      1.22    0.938       4.57e- 2     11.0 
15 mu_1       0.6      1.29    1.08        2.59e- 1      6.10
16 mu_1       0.7      1.21    1.07        5.97e- 2      5.23
17 mu_1       0.8      0.954   0.494       2.66e- 3      5.96
18 mu_1       0.9      0.592   0.0468      3.76e- 6     14.5 
19 mu_0       0.1      0.294   0.00000259  0            24.9 
20 mu_0       0.2      0.630   0.00111     0            43.6 
21 mu_0       0.3      0.810   0.0249      0            38.5 
22 mu_0       0.4      0.968   0.157       0            23.3 
23 mu_0       0.5      1.16    0.530       0            11.0 
24 mu_0       0.6      1.29    1.03        0             9.15
25 mu_0       0.7      1.30    1.11        0             4.63
26 mu_0       0.8      1.17    1.03        0             6.01
27 mu_0       0.9      0.848   0.194       0             7.75
[1] "Total run time was 91.167 seconds"
