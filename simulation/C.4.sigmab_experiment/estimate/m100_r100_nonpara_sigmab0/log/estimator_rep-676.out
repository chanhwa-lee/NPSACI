
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1193"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 8  9  7  9  4  4  7  7  6  4  6  6  4 11  5  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04668 0.37173 0.60884 1.00000 6.00000 
[1] "event indicator table: "

  0   1 
694 499 
[1] "treatment indicator table: "

  0   1 
435 758 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 598
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 595
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 173.926 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.275 0.105 
 2 mu         0.1   0.2 0.374 0.135 
 3 mu         0.1   0.3 0.420 0.153 
 4 mu         0.1   0.4 0.474 0.168 
 5 mu         0.1   0.5 0.540 0.183 
 6 mu         0.2   0.1 0.249 0.0853
 7 mu         0.2   0.2 0.344 0.107 
 8 mu         0.2   0.3 0.401 0.119 
 9 mu         0.2   0.4 0.442 0.132 
10 mu         0.2   0.5 0.508 0.141 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.991        0.315  0.000217     41.6 
 2 mu         0.2      1.13         0.699  0.0210       32.7 
 3 mu         0.3      1.04         0.972  0.185        12.2 
 4 mu         0.4      1.00         1      0.527         3.33
 5 mu         0.5      0.999        1      0.764         1.29
 6 mu         0.6      1.00         1      0.916         1.10
 7 mu         0.7      1.01         1      0.780         1.14
 8 mu         0.8      1.00         1      0.574         1.44
 9 mu         0.9      0.971        1      0.127         2.06
10 mu_1       0.1      1.26         0.672  0.00103      52.3 
11 mu_1       0.2      1.10         0.927  0.0505       21.1 
12 mu_1       0.3      1.01         1      0.304         5.74
13 mu_1       0.4      0.997        1      0.640         1.73
14 mu_1       0.5      1.00         1      0.843         1.18
15 mu_1       0.6      1.01         1.00   0.914         1.09
16 mu_1       0.7      1.01         1      0.750         1.18
17 mu_1       0.8      1.00         1      0.530         1.49
18 mu_1       0.9      0.967        1      0.110         2.16
19 mu_0       0.1      0.961        0.272  0.000127     40.4 
20 mu_0       0.2      1.13         0.661  0.0136       35.6 
21 mu_0       0.3      1.05         0.974  0.135        15.0 
22 mu_0       0.4      1.00         1      0.451         4.39
23 mu_0       0.5      0.996        1      0.673         1.50
24 mu_0       0.6      1.00         1      0.839         1.16
25 mu_0       0.7      1.01         1      0.850         1.13
26 mu_0       0.8      1.01         1      0.643         1.26
27 mu_0       0.9      1.01         1      0.282         1.77
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.244    0.000135   4.01e-11     14.4 
 2 mu         0.2      0.991    0.0117     8.20e- 7     44.3 
 3 mu         0.3      1.33     0.0801     2.10e- 4     59.3 
 4 mu         0.4      1.15     0.320      6.28e- 3     33.7 
 5 mu         0.5      1.03     0.746      6.09e- 2      9.60
 6 mu         0.6      1.07     1.02       3.38e- 1      2.69
 7 mu         0.7      1.07     1.01       6.75e- 2      2.60
 8 mu         0.8      0.873    0.551      6.76e- 4      5.00
 9 mu         0.9      0.469    0.0804     1.49e- 7      7.83
10 mu_1       0.1      0.639    0.000784   3.16e-10     33.3 
11 mu_1       0.2      1.39     0.0336     3.24e- 6     61.5 
12 mu_1       0.3      1.39     0.200      5.54e- 4     54.9 
13 mu_1       0.4      1.13     0.531      1.44e- 2     23.4 
14 mu_1       0.5      1.05     0.970      1.12e- 1      5.34
15 mu_1       0.6      1.09     1.05       3.61e- 1      2.59
16 mu_1       0.7      1.05     0.928      2.68e- 2      3.06
17 mu_1       0.8      0.817    0.446      2.35e- 4      5.15
18 mu_1       0.9      0.426    0.0479     4.59e- 8      7.97
19 mu_0       0.1      0.200    0.0000450  9.37e-12     12.3 
20 mu_0       0.2      0.890    0.00479    2.16e- 7     40.0 
21 mu_0       0.3      1.30     0.0342     3.68e- 5     61.2 
22 mu_0       0.4      1.17     0.163      8.72e- 4     40.5 
23 mu_0       0.5      1.00     0.519      1.01e- 2     13.9 
24 mu_0       0.6      1.04     0.946      7.54e- 2      2.88
25 mu_0       0.7      1.14     1.10       1.62e- 1      2.77
26 mu_0       0.8      1.09     0.998      2.44e- 3      4.41
27 mu_0       0.9      0.856    0.253      1.07e- 6      6.52
[1] "Total run time was 182.038 seconds"
