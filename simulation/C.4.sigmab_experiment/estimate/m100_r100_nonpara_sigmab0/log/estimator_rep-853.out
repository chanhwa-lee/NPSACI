
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1314"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  3  3  9  4  4  8  7 10 10  4  7  5  5  7  9 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03991 0.34217 0.60935 1.00000 4.19434 
[1] "event indicator table: "

  0   1 
776 538 
[1] "treatment indicator table: "

  0   1 
481 833 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 650
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 70"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 664
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 105.987 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.215 0.0919
 2 mu         0.1   0.2 0.576 0.134 
 3 mu         0.1   0.3 0.602 0.124 
 4 mu         0.1   0.4 0.707 0.158 
 5 mu         0.1   0.5 0.715 0.153 
 6 mu         0.2   0.1 0.225 0.0670
 7 mu         0.2   0.2 0.503 0.0914
 8 mu         0.2   0.3 0.544 0.0877
 9 mu         0.2   0.4 0.658 0.135 
10 mu         0.2   0.5 0.668 0.129 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      0.560       0.0923 0.0000118       8.39
 2 mu         0.2      0.905       0.449  0.00414        14.8 
 3 mu         0.3      0.999       0.840  0.0728          9.52
 4 mu         0.4      1.00        0.999  0.344           4.14
 5 mu         0.5      1.00        1      0.738           1.87
 6 mu         0.6      1.00        1      0.903           1.17
 7 mu         0.7      1.01        1      0.749           1.38
 8 mu         0.8      1.00        0.982  0.428           2.30
 9 mu         0.9      0.967       0.887  0.117           5.00
10 mu_1       0.1      0.871       0.268  0.0000594      15.8 
11 mu_1       0.2      1.02        0.711  0.0106         14.1 
12 mu_1       0.3      1.01        0.986  0.126           6.58
13 mu_1       0.4      1.00        1      0.458           2.76
14 mu_1       0.5      1.00        1      0.785           1.49
15 mu_1       0.6      1.00        1.00   0.930           1.09
16 mu_1       0.7      1.01        1      0.691           1.49
17 mu_1       0.8      0.999       0.987  0.383           2.51
18 mu_1       0.9      0.967       0.885  0.101           5.32
19 mu_0       0.1      0.525       0.0738 0.00000649      7.57
20 mu_0       0.2      0.877       0.382  0.00253        14.9 
21 mu_0       0.3      0.994       0.765  0.0501         10.8 
22 mu_0       0.4      1.01        1      0.268           5.06
23 mu_0       0.5      1.00        1      0.630           2.25
24 mu_0       0.6      1.00        1      0.845           1.30
25 mu_0       0.7      1.00        1      0.884           1.11
26 mu_0       0.8      1.00        1      0.608           1.45
27 mu_0       0.9      0.973       1      0.268           2.09
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      5.68     0.0000306  2.86e-12    564.  
 2 mu         0.2      9.94     0.00436    1.17e- 7    976.  
 3 mu         0.3      6.22     0.0518     4.50e- 5    581.  
 4 mu         0.4      2.52     0.258      2.42e- 3    186.  
 5 mu         0.5      1.19     0.650      4.15e- 2     33.9 
 6 mu         0.6      0.994    0.954      3.14e- 1      3.22
 7 mu         0.7      0.997    0.935      8.08e- 2      3.77
 8 mu         0.8      0.909    0.436      9.31e- 4      5.58
 9 mu         0.9      0.652    0.0539     1.62e- 7     18.1 
10 mu_1       0.1     10.7      0.000184   2.28e-11   1058.  
11 mu_1       0.2      9.48     0.0134     4.67e- 7    915.  
12 mu_1       0.3      4.19     0.114      1.20e- 4    363.  
13 mu_1       0.4      1.65     0.416      4.85e- 3     87.0 
14 mu_1       0.5      1.05     0.880      6.64e- 2     12.7 
15 mu_1       0.6      0.998    0.991      2.46e- 1      1.88
16 mu_1       0.7      0.995    0.844      3.25e- 2      4.31
17 mu_1       0.8      0.884    0.354      2.18e- 4      6.97
18 mu_1       0.9      0.631    0.0358     3.37e- 8     20.1 
19 mu_0       0.1      5.12     0.0000128  0           509.  
20 mu_0       0.2     10.1      0.00165    0           992.  
21 mu_0       0.3      7.08     0.0288     0           674.  
22 mu_0       0.4      3.10     0.144      0           251.  
23 mu_0       0.5      1.34     0.475      0            55.1 
24 mu_0       0.6      0.990    0.875      0             6.54
25 mu_0       0.7      1.00     1.01       0             2.52
26 mu_0       0.8      1.01     0.810      0             5.55
27 mu_0       0.9      0.845    0.169      0             7.50
[1] "Total run time was 108.8 seconds"
