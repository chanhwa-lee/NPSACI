
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1252"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 8  6  7  2 11  2  8  3  9  3  9  6  8  6  6  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04832 0.33460 0.60920 0.95826 5.00000 
[1] "event indicator table: "

  0   1 
703 549 
[1] "treatment indicator table: "

  0   1 
460 792 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 611
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 641
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 52"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 96"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 65.222 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.489 0.149 
 2 mu         0.1   0.2 0.576 0.185 
 3 mu         0.1   0.3 0.606 0.181 
 4 mu         0.1   0.4 0.680 0.185 
 5 mu         0.1   0.5 0.684 0.194 
 6 mu         0.2   0.1 0.434 0.106 
 7 mu         0.2   0.2 0.521 0.138 
 8 mu         0.2   0.3 0.561 0.108 
 9 mu         0.2   0.4 0.610 0.0994
10 mu         0.2   0.5 0.627 0.0930
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.690       0.0727 0.000139      25.7 
 2 mu         0.2      0.677       0.426  0.0102         8.50
 3 mu         0.3      0.788       0.735  0.0785         2.93
 4 mu         0.4      0.895       0.907  0.262          1.51
 5 mu         0.5      0.958       0.972  0.562          1.19
 6 mu         0.6      0.988       1      0.827          1.09
 7 mu         0.7      1.01        1.00   0.861          1.19
 8 mu         0.8      1.04        1      0.631          1.59
 9 mu         0.9      1.07        1      0.181          3.38
10 mu_1       0.1      0.537       0.209  0.000561       3.90
11 mu_1       0.2      0.690       0.664  0.0214         2.48
12 mu_1       0.3      0.832       0.866  0.120          1.74
13 mu_1       0.4      0.923       0.947  0.336          1.24
14 mu_1       0.5      0.969       0.987  0.646          1.18
15 mu_1       0.6      0.993       1      0.847          1.08
16 mu_1       0.7      1.01        1.00   0.840          1.22
17 mu_1       0.8      1.04        1      0.585          1.68
18 mu_1       0.9      1.07        1      0.160          3.50
19 mu_0       0.1      0.707       0.0580 0.0000921     28.4 
20 mu_0       0.2      0.673       0.363  0.00737       10.4 
21 mu_0       0.3      0.769       0.678  0.0607         3.78
22 mu_0       0.4      0.876       0.861  0.212          1.74
23 mu_0       0.5      0.946       0.956  0.478          1.25
24 mu_0       0.6      0.981       0.998  0.796          1.14
25 mu_0       0.7      1.00        1      0.865          1.12
26 mu_0       0.8      1.02        1      0.814          1.26
27 mu_0       0.9      1.08        1      0.367          2.29
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.238   0.0000383   1.31e-12     20.2 
 2 mu         0.2      1.13    0.00535     6.02e- 8     88.6 
 3 mu         0.3      1.60    0.0726      2.65e- 5    103.  
 4 mu         0.4      1.48    0.311       1.67e- 3     59.9 
 5 mu         0.5      1.25    0.705       3.42e- 2     19.7 
 6 mu         0.6      1.14    1.01        2.81e- 1      3.50
 7 mu         0.7      1.09    0.983       8.54e- 2      3.79
 8 mu         0.8      0.958   0.591       2.89e- 3      5.02
 9 mu         0.9      0.591   0.0763      4.23e- 6      6.44
10 mu_1       0.1      0.667   0.000279    1.10e-11     54.0 
11 mu_1       0.2      1.62    0.0164      2.54e- 7    118.  
12 mu_1       0.3      1.69    0.160       7.44e- 5     91.8 
13 mu_1       0.4      1.41    0.533       3.51e- 3     39.9 
14 mu_1       0.5      1.21    0.919       5.77e- 2     10.5 
15 mu_1       0.6      1.14    1.02        3.90e- 1      2.74
16 mu_1       0.7      1.09    0.937       4.07e- 2      4.17
17 mu_1       0.8      0.927   0.457       1.20e- 3      5.58
18 mu_1       0.9      0.555   0.0568      1.25e- 6      6.37
19 mu_0       0.1      0.191   0.00000883  0            16.5 
20 mu_0       0.2      1.00    0.00238     0            81.2 
21 mu_0       0.3      1.57    0.0320      0           108.  
22 mu_0       0.4      1.53    0.170       0            73.2 
23 mu_0       0.5      1.28    0.477       0            28.9 
24 mu_0       0.6      1.13    0.972       0             6.42
25 mu_0       0.7      1.10    0.964       0             3.10
26 mu_0       0.8      1.08    0.909       0             4.93
27 mu_0       0.9      0.914   0.249       0             7.16
[1] "Total run time was 67.363 seconds"
