
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1246"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 3  5  7 12  4  4  6  7 10  2 11  9  7  6  4  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.01668 0.28615 0.56375 1.00000 6.00000 
[1] "event indicator table: "

  0   1 
745 501 
[1] "treatment indicator table: "

  0   1 
459 787 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 625
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 621
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 70"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 67.114 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.375 0.125 
 2 mu         0.1   0.2 0.458 0.145 
 3 mu         0.1   0.3 0.467 0.163 
 4 mu         0.1   0.4 0.545 0.183 
 5 mu         0.1   0.5 0.568 0.195 
 6 mu         0.2   0.1 0.367 0.0606
 7 mu         0.2   0.2 0.436 0.0636
 8 mu         0.2   0.3 0.463 0.0710
 9 mu         0.2   0.4 0.529 0.0807
10 mu         0.2   0.5 0.564 0.0873
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.996        0.154 0.000110      41.2 
 2 mu         0.2      0.832        0.522 0.0118         9.63
 3 mu         0.3      0.879        0.906 0.0955         2.71
 4 mu         0.4      0.945        0.994 0.251          1.59
 5 mu         0.5      0.979        1     0.445          1.27
 6 mu         0.6      0.991        0.999 0.662          1.14
 7 mu         0.7      0.995        0.992 0.716          1.30
 8 mu         0.8      0.996        0.996 0.422          1.51
 9 mu         0.9      1.00         0.917 0.0933         3.38
10 mu_1       0.1      0.727        0.407 0.000556      10.2 
11 mu_1       0.2      0.817        0.781 0.0299         3.36
12 mu_1       0.3      0.911        0.985 0.154          1.80
13 mu_1       0.4      0.965        0.997 0.327          1.49
14 mu_1       0.5      0.986        1     0.512          1.19
15 mu_1       0.6      0.993        1     0.724          1.15
16 mu_1       0.7      0.995        0.995 0.659          1.34
17 mu_1       0.8      0.996        0.999 0.382          1.60
18 mu_1       0.9      1.00         0.891 0.0779         3.68
19 mu_0       0.1      1.03         0.128 0.0000610     45.7 
20 mu_0       0.2      0.836        0.447 0.00724       11.8 
21 mu_0       0.3      0.865        0.853 0.0700         3.34
22 mu_0       0.4      0.932        0.976 0.185          1.68
23 mu_0       0.5      0.972        1     0.355          1.36
24 mu_0       0.6      0.988        1     0.557          1.18
25 mu_0       0.7      0.994        0.996 0.768          1.21
26 mu_0       0.8      0.995        0.994 0.579          1.45
27 mu_0       0.9      0.986        1     0.232          2.08
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.0326    0.0000871  7.27e-14     0.785
 2 mu         0.2     0.208     0.00746    4.76e- 9     2.77 
 3 mu         0.3     0.551     0.0807     3.13e- 6     6.35 
 4 mu         0.4     0.898     0.331      3.12e- 4     9.12 
 5 mu         0.5     1.12      0.760      1.11e- 2    10.1  
 6 mu         0.6     1.25      1.10       1.39e- 1     6.08 
 7 mu         0.7     1.39      1.03       3.93e- 2     9.44 
 8 mu         0.8     1.66      0.569      6.75e- 4    20.5  
 9 mu         0.9     2.74      0.0926     3.34e- 7   135.   
10 mu_1       0.1     0.122     0.000610   7.27e-13     2.62 
11 mu_1       0.2     0.417     0.0239     2.38e- 8     4.61 
12 mu_1       0.3     0.788     0.170      1.04e- 5     7.05 
13 mu_1       0.4     1.06      0.512      7.80e- 4    10.6  
14 mu_1       0.5     1.19      0.928      2.22e- 2     9.44 
15 mu_1       0.6     1.28      1.18       2.14e- 1     4.73 
16 mu_1       0.7     1.42      0.962      1.87e- 2    11.1  
17 mu_1       0.8     1.72      0.401      2.81e- 4    25.6  
18 mu_1       0.9     2.89      0.0598     1.24e- 7   150.   
19 mu_0       0.1     0.0227    0.0000306  0            0.581
20 mu_0       0.2     0.156     0.00350    0            2.31 
21 mu_0       0.3     0.449     0.0382     0            6.04 
22 mu_0       0.4     0.792     0.220      0            8.10 
23 mu_0       0.5     1.05      0.571      0           10.8  
24 mu_0       0.6     1.20      1.05       0            8.10 
25 mu_0       0.7     1.32      1.21       0            5.55 
26 mu_0       0.8     1.42      0.920      0           16.0  
27 mu_0       0.9     1.38      0.292      0           20.8  
[1] "Total run time was 69.182 seconds"
