
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1263"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6 12  5  5  6  3  5  3  6  8  9  5  3  9  7  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04764 0.32995 0.60614 1.00000 4.00000 
[1] "event indicator table: "

  0   1 
757 506 
[1] "treatment indicator table: "

  0   1 
453 810 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 638
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 85"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 625
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 107.164 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.254 0.0935
 2 mu         0.1   0.2 0.323 0.163 
 3 mu         0.1   0.3 0.398 0.223 
 4 mu         0.1   0.4 0.411 0.224 
 5 mu         0.1   0.5 0.606 0.116 
 6 mu         0.2   0.1 0.255 0.0641
 7 mu         0.2   0.2 0.336 0.114 
 8 mu         0.2   0.3 0.425 0.163 
 9 mu         0.2   0.4 0.437 0.160 
10 mu         0.2   0.5 0.579 0.0902
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.731        0.278  0.000480     10.4 
 2 mu         0.2      0.959        0.730  0.0358        9.12
 3 mu         0.3      1.00         0.992  0.175         3.96
 4 mu         0.4      1.00         1      0.419         1.58
 5 mu         0.5      1.00         1      0.684         1.45
 6 mu         0.6      1.00         1      0.839         1.14
 7 mu         0.7      0.993        1      0.835         1.14
 8 mu         0.8      0.982        1      0.496         1.81
 9 mu         0.9      0.973        0.960  0.0895        5.70
10 mu_1       0.1      0.976        0.673  0.00196      13.9 
11 mu_1       0.2      1.00         0.985  0.0772        6.23
12 mu_1       0.3      0.991        1      0.269         2.11
13 mu_1       0.4      0.992        1      0.527         1.62
14 mu_1       0.5      0.998        1      0.766         1.36
15 mu_1       0.6      0.999        1      0.855         1.15
16 mu_1       0.7      0.991        1      0.792         1.19
17 mu_1       0.8      0.980        1      0.442         2.02
18 mu_1       0.9      0.969        0.955  0.0739        5.98
19 mu_0       0.1      0.704        0.235  0.000316     10.0 
20 mu_0       0.2      0.948        0.643  0.0254        9.84
21 mu_0       0.3      1.00         0.955  0.135         4.75
22 mu_0       0.4      1.00         1      0.347         1.83
23 mu_0       0.5      1.00         1      0.602         1.54
24 mu_0       0.6      1.00         1      0.815         1.17
25 mu_0       0.7      0.999        1      0.893         1.16
26 mu_0       0.8      0.991        1      0.714         1.26
27 mu_0       0.9      1.01         1      0.230         3.17
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.572    0.0000778  9.71e-14     42.1 
 2 mu         0.2      0.903    0.00900    8.94e- 9     58.3 
 3 mu         0.3      0.947    0.0989     5.90e- 6     39.4 
 4 mu         0.4      0.993    0.375      4.94e- 4     17.5 
 5 mu         0.5      1.07     0.799      1.27e- 2      8.20
 6 mu         0.6      1.11     1.03       1.44e- 1      3.42
 7 mu         0.7      1.22     0.954      1.05e- 1      9.31
 8 mu         0.8      1.83     0.498      3.56e- 3     41.7 
 9 mu         0.9      3.55     0.0669     8.80e- 6    217.  
10 mu_1       0.1      1.13     0.000430   8.25e-13     76.5 
11 mu_1       0.2      1.02     0.0300     3.80e- 8     53.0 
12 mu_1       0.3      0.944    0.212      1.67e- 5     23.9 
13 mu_1       0.4      0.999    0.609      1.05e- 3     11.1 
14 mu_1       0.5      1.07     0.983      2.16e- 2      6.31
15 mu_1       0.6      1.10     1.07       2.04e- 1      2.38
16 mu_1       0.7      1.26     0.857      2.72e- 2     11.8 
17 mu_1       0.8      1.95     0.375      8.09e- 4     52.1 
18 mu_1       0.9      3.74     0.0393     1.78e- 6    241.  
19 mu_0       0.1      0.511    0.0000355  0            38.3 
20 mu_0       0.2      0.873    0.00413    0            59.6 
21 mu_0       0.3      0.949    0.0505     0            46.1 
22 mu_0       0.4      0.990    0.231      0            23.9 
23 mu_0       0.5      1.07     0.582      0            10.1 
24 mu_0       0.6      1.13     1.02       0             5.27
25 mu_0       0.7      1.15     1.10       0             3.45
26 mu_0       0.8      1.34     0.943      0            19.5 
27 mu_0       0.9      1.84     0.271      0            64.1 
[1] "Total run time was 109.38 seconds"
