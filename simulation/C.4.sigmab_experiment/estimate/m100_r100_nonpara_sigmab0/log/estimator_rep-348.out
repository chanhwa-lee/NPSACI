
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1236"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  4  5  5  8 13  6  6  5  5  9 11  8  2  6  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04557 0.38116 0.64531 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
739 497 
[1] "treatment indicator table: "

  0   1 
409 827 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 644
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 592
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 84"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 84.357 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.311 0.132
 2 mu         0.1   0.2 0.347 0.159
 3 mu         0.1   0.3 0.401 0.171
 4 mu         0.1   0.4 0.411 0.185
 5 mu         0.1   0.5 0.439 0.200
 6 mu         0.2   0.1 0.302 0.101
 7 mu         0.2   0.2 0.346 0.119
 8 mu         0.2   0.3 0.401 0.125
 9 mu         0.2   0.4 0.420 0.136
10 mu         0.2   0.5 0.453 0.146
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.46        0.0954 0.0000593     72.9 
 2 mu         0.2      1.52        0.429  0.0102        60.9 
 3 mu         0.3      1.21        0.764  0.0998        23.4 
 4 mu         0.4      1.03        0.923  0.337          5.88
 5 mu         0.5      0.991       0.982  0.646          1.89
 6 mu         0.6      0.994       1      0.839          1.19
 7 mu         0.7      1.00        1      0.885          1.14
 8 mu         0.8      1.00        1.00   0.750          1.41
 9 mu         0.9      1.01        1      0.313          2.42
10 mu_1       0.1      1.78        0.281  0.000283      94.3 
11 mu_1       0.2      1.37        0.711  0.0247        40.8 
12 mu_1       0.3      1.08        0.918  0.168         11.1 
13 mu_1       0.4      0.992       0.948  0.453          2.58
14 mu_1       0.5      0.985       0.992  0.728          1.46
15 mu_1       0.6      0.995       1      0.857          1.16
16 mu_1       0.7      1.00        1      0.854          1.19
17 mu_1       0.8      1.00        1.00   0.718          1.49
18 mu_1       0.9      1.01        1      0.285          2.57
19 mu_0       0.1      1.42        0.0747 0.0000345     70.6 
20 mu_0       0.2      1.55        0.353  0.00662       65.9 
21 mu_0       0.3      1.26        0.689  0.0703        28.7 
22 mu_0       0.4      1.06        0.897  0.260          8.07
23 mu_0       0.5      0.997       0.968  0.565          2.31
24 mu_0       0.6      0.992       0.999  0.771          1.39
25 mu_0       0.7      1.00        1.00   0.861          1.14
26 mu_0       0.8      1.00        1      0.850          1.17
27 mu_0       0.9      0.995       1      0.567          1.47
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.106    0.0000139   2.95e-13      3.55
 2 mu         0.2     0.371    0.00158     1.72e- 8      7.88
 3 mu         0.3     0.666    0.0292      9.87e- 6      9.83
 4 mu         0.4     0.916    0.169       8.44e- 4      7.92
 5 mu         0.5     1.06     0.498       2.02e- 2      6.47
 6 mu         0.6     1.10     0.929       1.54e- 1      3.89
 7 mu         0.7     1.08     1.00        3.02e- 1      3.27
 8 mu         0.8     1.18     0.735       2.46e- 2     18.4 
 9 mu         0.9     1.69     0.0909      6.94e- 5     60.7 
10 mu_1       0.1     0.345    0.0000976   2.78e-12     10.1 
11 mu_1       0.2     0.644    0.00632     8.09e- 8     11.3 
12 mu_1       0.3     0.855    0.0638      3.10e- 5      9.83
13 mu_1       0.4     0.999    0.283       1.99e- 3      6.81
14 mu_1       0.5     1.07     0.659       3.40e- 2      6.04
15 mu_1       0.6     1.08     0.979       2.49e- 1      3.12
16 mu_1       0.7     1.07     1.00        1.42e- 1      4.39
17 mu_1       0.8     1.21     0.627       1.09e- 2     21.7 
18 mu_1       0.9     1.73     0.0684      3.65e- 5     63.5 
19 mu_0       0.1     0.0800   0.00000352  0             2.82
20 mu_0       0.2     0.302    0.000629    0             7.04
21 mu_0       0.3     0.586    0.0141      0             9.83
22 mu_0       0.4     0.861    0.0903      0             9.24
23 mu_0       0.5     1.06     0.299       0             6.90
24 mu_0       0.6     1.13     0.776       0             5.19
25 mu_0       0.7     1.10     1.03        0             3.09
26 mu_0       0.8     1.04     0.998       0             5.43
27 mu_0       0.9     1.29     0.278       0            35.7 
[1] "Total run time was 86.626 seconds"
