
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1329"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 2  6  4  6  4  6  8  8  9  6  7  7  4  3 13  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0425  0.3251  0.6098  1.0000  4.0000 
[1] "event indicator table: "

  0   1 
788 541 
[1] "treatment indicator table: "

  0   1 
478 851 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 660
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 669
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 22"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 81"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 187.782 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.229 0.100 
 2 mu         0.1   0.2 0.298 0.116 
 3 mu         0.1   0.3 0.357 0.136 
 4 mu         0.1   0.4 0.382 0.149 
 5 mu         0.1   0.5 0.467 0.166 
 6 mu         0.2   0.1 0.232 0.0600
 7 mu         0.2   0.2 0.303 0.0665
 8 mu         0.2   0.3 0.367 0.0741
 9 mu         0.2   0.4 0.406 0.0817
10 mu         0.2   0.5 0.466 0.0920
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.612       0.125   0.000495     13.8 
 2 mu         0.2      0.852       0.470   0.0322       10.5 
 3 mu         0.3      0.975       0.805   0.187         5.51
 4 mu         0.4      1.01        0.965   0.455         3.19
 5 mu         0.5      1.01        1       0.715         1.73
 6 mu         0.6      1.00        1       0.870         1.17
 7 mu         0.7      1.01        1       0.824         1.27
 8 mu         0.8      1.02        1       0.513         1.54
 9 mu         0.9      1.05        0.989   0.139         3.01
10 mu_1       0.1      0.763       0.341   0.00211      15.4 
11 mu_1       0.2      0.934       0.755   0.0655        7.53
12 mu_1       0.3      1.00        0.944   0.272         4.68
13 mu_1       0.4      1.01        0.992   0.544         2.51
14 mu_1       0.5      1.01        1       0.778         1.47
15 mu_1       0.6      1.01        1       0.897         1.13
16 mu_1       0.7      1.01        1       0.790         1.32
17 mu_1       0.8      1.02        1       0.475         1.58
18 mu_1       0.9      1.05        0.987   0.124         3.28
19 mu_0       0.1      0.596       0.0995  0.000316     15.1 
20 mu_0       0.2      0.831       0.407   0.0239       11.2 
21 mu_0       0.3      0.964       0.754   0.151         5.91
22 mu_0       0.4      1.00        0.941   0.396         3.64
23 mu_0       0.5      1.01        0.998   0.644         2.00
24 mu_0       0.6      1.00        1.00    0.830         1.24
25 mu_0       0.7      1.00        1       0.903         1.16
26 mu_0       0.8      1.01        1.00    0.666         1.46
27 mu_0       0.9      1.03        1       0.277         1.99
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.0418   0.0000141   2.18e-11     1.01 
 2 mu         0.2     0.293    0.00276     2.82e- 7     5.59 
 3 mu         0.3     0.729    0.0399      6.07e- 5    12.8  
 4 mu         0.4     1.02     0.231       1.92e- 3    13.4  
 5 mu         0.5     1.08     0.626       2.79e- 2     7.95 
 6 mu         0.6     1.08     0.972       2.49e- 1     3.26 
 7 mu         0.7     1.13     1.03        9.39e- 2     6.52 
 8 mu         0.8     1.23     0.541       1.84e- 3    21.6  
 9 mu         0.9     1.45     0.0632      1.03e- 6    44.4  
10 mu_1       0.1     0.151    0.0000843   1.91e-10     3.35 
11 mu_1       0.2     0.551    0.00937     1.23e- 6     9.99 
12 mu_1       0.3     0.959    0.0893      1.84e- 4    15.2  
13 mu_1       0.4     1.10     0.369       4.79e- 3    12.0  
14 mu_1       0.5     1.08     0.864       5.58e- 2     5.68 
15 mu_1       0.6     1.09     1.02        3.55e- 1     2.60 
16 mu_1       0.7     1.15     0.978       4.94e- 2     8.60 
17 mu_1       0.8     1.26     0.432       8.48e- 4    24.9  
18 mu_1       0.9     1.48     0.0439      4.20e- 7    45.5  
19 mu_0       0.1     0.0296   0.00000490  0            0.745
20 mu_0       0.2     0.228    0.00127     0            4.49 
21 mu_0       0.3     0.631    0.0149      0           11.7  
22 mu_0       0.4     0.970    0.123       0           14.4  
23 mu_0       0.5     1.08     0.487       0           10.2  
24 mu_0       0.6     1.07     0.842       0            4.29 
25 mu_0       0.7     1.09     1.04        0            2.47 
26 mu_0       0.8     1.12     0.941       0            8.30 
27 mu_0       0.9     1.17     0.182       0           34.1  
[1] "Total run time was 191.063 seconds"
