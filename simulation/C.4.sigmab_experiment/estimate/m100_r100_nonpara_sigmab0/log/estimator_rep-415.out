
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1240"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  4  9  6  6 10  7 13  2  3  5  6  4  2 10  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04961 0.37497 0.64460 1.00000 6.00000 
[1] "event indicator table: "

  0   1 
724 516 
[1] "treatment indicator table: "

  0   1 
441 799 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 618
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 622
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 100.508 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.369 0.0815
 2 mu         0.1   0.2 0.456 0.105 
 3 mu         0.1   0.3 0.499 0.114 
 4 mu         0.1   0.4 0.509 0.126 
 5 mu         0.1   0.5 0.531 0.136 
 6 mu         0.2   0.1 0.349 0.0416
 7 mu         0.2   0.2 0.419 0.0542
 8 mu         0.2   0.3 0.475 0.0595
 9 mu         0.2   0.4 0.502 0.0681
10 mu         0.2   0.5 0.520 0.0748
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.738        0.183 0.0000429     11.9 
 2 mu         0.2      0.844        0.580 0.00777        5.51
 3 mu         0.3      0.939        0.879 0.0957         2.62
 4 mu         0.4      0.985        0.983 0.367          2.14
 5 mu         0.5      1.00         1     0.718          1.44
 6 mu         0.6      1.01         1.00  0.900          1.17
 7 mu         0.7      1.00         1     0.766          1.20
 8 mu         0.8      0.981        0.999 0.421          1.30
 9 mu         0.9      0.911        0.925 0.0673         1.95
10 mu_1       0.1      0.701        0.437 0.000205       4.50
11 mu_1       0.2      0.862        0.822 0.0189         3.00
12 mu_1       0.3      0.953        0.950 0.159          2.63
13 mu_1       0.4      0.991        1     0.478          1.92
14 mu_1       0.5      1.00         1     0.800          1.37
15 mu_1       0.6      1.01         1     0.913          1.15
16 mu_1       0.7      1.00         1     0.729          1.19
17 mu_1       0.8      0.975        0.993 0.379          1.34
18 mu_1       0.9      0.904        0.917 0.0567         2.02
19 mu_0       0.1      0.742        0.148 0.0000248     13.2 
20 mu_0       0.2      0.839        0.532 0.00498        6.73
21 mu_0       0.3      0.933        0.816 0.0684         3.37
22 mu_0       0.4      0.981        0.961 0.293          2.29
23 mu_0       0.5      0.999        1     0.636          1.58
24 mu_0       0.6      1.00         1     0.844          1.28
25 mu_0       0.7      1.01         1.00  0.853          1.22
26 mu_0       0.8      1.00         1     0.588          1.30
27 mu_0       0.9      0.982        1.00  0.163          1.61
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.123    0.0000427  9.92e-13      5.30
 2 mu         0.2      0.328    0.00661    4.56e- 8      6.62
 3 mu         0.3      0.596    0.0825     2.01e- 5      7.53
 4 mu         0.4      0.835    0.331      1.26e- 3      8.87
 5 mu         0.5      0.994    0.758      2.20e- 2      4.95
 6 mu         0.6      1.06     1.02       1.88e- 1      2.82
 7 mu         0.7      1.03     1.02       1.09e- 1      2.85
 8 mu         0.8      0.910    0.490      2.14e- 3      4.79
 9 mu         0.9      0.624    0.0678     1.19e- 6      9.15
10 mu_1       0.1      0.328    0.000282   8.35e-12     10.6 
11 mu_1       0.2      0.522    0.0211     1.92e- 7      6.62
12 mu_1       0.3      0.743    0.176      5.64e- 5      9.24
13 mu_1       0.4      0.916    0.501      2.66e- 3      8.17
14 mu_1       0.5      1.03     0.919      4.08e- 2      4.69
15 mu_1       0.6      1.06     1.00       2.91e- 1      3.05
16 mu_1       0.7      1.01     0.970      5.73e- 2      3.30
17 mu_1       0.8      0.881    0.395      9.83e- 4      4.86
18 mu_1       0.9      0.592    0.0461     4.87e- 7      9.44
19 mu_0       0.1      0.100    0.0000204  0             4.71
20 mu_0       0.2      0.279    0.00346    0             6.62
21 mu_0       0.3      0.532    0.0313     0             6.79
22 mu_0       0.4      0.781    0.226      0             9.33
23 mu_0       0.5      0.961    0.566      0             5.99
24 mu_0       0.6      1.07     1.02       0             3.61
25 mu_0       0.7      1.08     1.03       0             3.26
26 mu_0       0.8      1.03     0.896      0             4.49
27 mu_0       0.9      0.911    0.242      0             6.54
[1] "Total run time was 103.441 seconds"
