
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1312"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 8  7  2  4  7  9  1  5  7  7  2  9  6  8  9  9 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0400  0.3297  0.5765  1.0000  4.6809 
[1] "event indicator table: "

  0   1 
759 553 
[1] "treatment indicator table: "

  0   1 
493 819 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 656
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 41"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 656
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 111.27 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.318 0.0840
 2 mu         0.1   0.2 0.371 0.109 
 3 mu         0.1   0.3 0.510 0.118 
 4 mu         0.1   0.4 0.510 0.122 
 5 mu         0.1   0.5 0.638 0.129 
 6 mu         0.2   0.1 0.306 0.0529
 7 mu         0.2   0.2 0.358 0.0655
 8 mu         0.2   0.3 0.485 0.0711
 9 mu         0.2   0.4 0.495 0.0726
10 mu         0.2   0.5 0.597 0.0777
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.640        0.196  0.000603     11.2 
 2 mu         0.2      0.860        0.667  0.0415        6.00
 3 mu         0.3      0.965        0.940  0.259         2.66
 4 mu         0.4      1.00         1      0.555         1.60
 5 mu         0.5      1.01         1      0.807         1.34
 6 mu         0.6      1.01         1      0.915         1.12
 7 mu         0.7      0.996        1      0.842         1.26
 8 mu         0.8      0.977        0.996  0.601         1.53
 9 mu         0.9      0.915        0.904  0.183         2.68
10 mu_1       0.1      0.805        0.470  0.00243       8.90
11 mu_1       0.2      0.926        0.872  0.0853        3.38
12 mu_1       0.3      0.984        1      0.379         1.93
13 mu_1       0.4      1.01         1      0.673         1.42
14 mu_1       0.5      1.01         1      0.853         1.29
15 mu_1       0.6      1.00         1      0.910         1.14
16 mu_1       0.7      0.993        1      0.810         1.30
17 mu_1       0.8      0.971        0.991  0.562         1.60
18 mu_1       0.9      0.907        0.878  0.163         2.75
19 mu_0       0.1      0.621        0.165  0.000400     11.5 
20 mu_0       0.2      0.843        0.606  0.0305        6.75
21 mu_0       0.3      0.957        0.900  0.204         3.11
22 mu_0       0.4      1.00         1      0.477         1.82
23 mu_0       0.5      1.01         1      0.740         1.39
24 mu_0       0.6      1.01         1      0.901         1.19
25 mu_0       0.7      1.00         1      0.904         1.18
26 mu_0       0.8      0.998        1      0.752         1.36
27 mu_0       0.9      0.991        1      0.361         2.04
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.0496    0.0000360  6.18e-14     1.16 
 2 mu         0.2     0.233     0.00679    6.40e- 9     4.16 
 3 mu         0.3     0.527     0.0780     4.83e- 6     7.23 
 4 mu         0.4     0.810     0.342      4.72e- 4     6.39 
 5 mu         0.5     1.00      0.727      1.46e- 2     3.88 
 6 mu         0.6     1.12      1.05       2.07e- 1     3.14 
 7 mu         0.7     1.15      1.04       4.48e- 2     4.51 
 8 mu         0.8     1.01      0.504      7.69e- 4     6.88 
 9 mu         0.9     0.624     0.0617     3.81e- 7    12.7  
10 mu_1       0.1     0.177     0.000207   5.53e-13     3.52 
11 mu_1       0.2     0.434     0.0181     2.86e- 8     6.94 
12 mu_1       0.3     0.715     0.166      1.44e- 5     8.03 
13 mu_1       0.4     0.930     0.533      1.06e- 3     5.32 
14 mu_1       0.5     1.06      0.944      2.61e- 2     3.32 
15 mu_1       0.6     1.14      1.10       3.08e- 1     3.37 
16 mu_1       0.7     1.14      0.928      2.13e- 2     5.01 
17 mu_1       0.8     0.968     0.382      3.21e- 4     7.69 
18 mu_1       0.9     0.582     0.0364     1.41e- 7    12.7  
19 mu_0       0.1     0.0354    0.0000139  0            0.902
20 mu_0       0.2     0.182     0.00250    0            3.56 
21 mu_0       0.3     0.447     0.0378     0            6.88 
22 mu_0       0.4     0.730     0.202      0            7.10 
23 mu_0       0.5     0.939     0.550      0            5.17 
24 mu_0       0.6     1.08      0.959      0            3.21 
25 mu_0       0.7     1.18      1.06       0            3.56 
26 mu_0       0.8     1.18      0.976      0            6.42 
27 mu_0       0.9     1.00      0.226      0           13.4  
[1] "Total run time was 114.264 seconds"
