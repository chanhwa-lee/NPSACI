
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1222"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 8  2  6 10  6 10  6  3  8  6  9  7  3  5  4  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.05131 0.42209 0.66860 1.00000 6.00000 
[1] "event indicator table: "

  0   1 
743 479 
[1] "treatment indicator table: "

  0   1 
408 814 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 589
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 69"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 633
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 56"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 132.358 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.471 0.138 
 2 mu         0.1   0.2 0.510 0.126 
 3 mu         0.1   0.3 0.594 0.189 
 4 mu         0.1   0.4 0.639 0.194 
 5 mu         0.1   0.5 0.633 0.198 
 6 mu         0.2   0.1 0.420 0.107 
 7 mu         0.2   0.2 0.469 0.0929
 8 mu         0.2   0.3 0.548 0.140 
 9 mu         0.2   0.4 0.606 0.136 
10 mu         0.2   0.5 0.617 0.134 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.618        0.161 0.0000266      7.47
 2 mu         0.2      0.953        0.620 0.00538        6.50
 3 mu         0.3      1.10         0.918 0.0573         8.60
 4 mu         0.4      1.07         0.977 0.227          5.83
 5 mu         0.5      1.03         0.997 0.523          2.30
 6 mu         0.6      1.02         1     0.844          1.47
 7 mu         0.7      1.01         1     0.853          1.17
 8 mu         0.8      0.977        0.992 0.673          1.24
 9 mu         0.9      0.909        0.901 0.212          1.82
10 mu_1       0.1      0.854        0.432 0.000134       6.98
11 mu_1       0.2      1.10         0.891 0.0133         7.31
12 mu_1       0.3      1.12         0.987 0.0988         8.65
13 mu_1       0.4      1.05         0.981 0.312          4.54
14 mu_1       0.5      1.02         1     0.620          1.74
15 mu_1       0.6      1.01         1.00  0.875          1.43
16 mu_1       0.7      1.00         1     0.792          1.18
17 mu_1       0.8      0.971        0.989 0.623          1.26
18 mu_1       0.9      0.902        0.889 0.188          1.93
19 mu_0       0.1      0.592        0.132 0.0000147      8.17
20 mu_0       0.2      0.917        0.527 0.00339        6.60
21 mu_0       0.3      1.09         0.874 0.0394         8.59
22 mu_0       0.4      1.08         0.972 0.171          6.69
23 mu_0       0.5      1.03         0.984 0.425          2.87
24 mu_0       0.6      1.02         1     0.745          1.54
25 mu_0       0.7      1.01         1     0.845          1.25
26 mu_0       0.8      1.00         1     0.828          1.24
27 mu_0       0.9      0.972        0.995 0.424          1.33
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.420    0.0000323  1.31e-13     38.6 
 2 mu         0.2      0.578    0.00403    1.20e- 8     38.1 
 3 mu         0.3      0.774    0.0481     7.94e- 6     25.6 
 4 mu         0.4      0.976    0.231      6.62e- 4     13.5 
 5 mu         0.5      1.08     0.561      1.14e- 2      6.41
 6 mu         0.6      1.11     0.932      8.44e- 2      4.36
 7 mu         0.7      1.13     1.01       6.93e- 2      3.42
 8 mu         0.8      1.12     0.672      1.36e- 3      7.79
 9 mu         0.9      0.784    0.159      7.57e- 7      9.00
10 mu_1       0.1      0.689    0.000203   1.11e-12     55.1 
11 mu_1       0.2      0.688    0.0137     5.11e- 8     27.2 
12 mu_1       0.3      0.881    0.107      2.25e- 5     12.2 
13 mu_1       0.4      1.04     0.394      1.39e- 3      8.66
14 mu_1       0.5      1.09     0.780      2.27e- 2      5.70
15 mu_1       0.6      1.10     0.995      1.41e- 1      3.90
16 mu_1       0.7      1.12     0.989      3.65e- 2      3.82
17 mu_1       0.8      1.09     0.531      6.26e- 4      8.44
18 mu_1       0.9      0.736    0.120      3.10e- 7      8.67
19 mu_0       0.1      0.390    0.0000129  0            36.7 
20 mu_0       0.2      0.550    0.00170    0            40.8 
21 mu_0       0.3      0.728    0.0261     0            31.4 
22 mu_0       0.4      0.935    0.129      0            19.3 
23 mu_0       0.5      1.08     0.387      0             9.72
24 mu_0       0.6      1.13     0.775      0             6.05
25 mu_0       0.7      1.16     1.04       0             3.97
26 mu_0       0.8      1.24     1.14       0             5.19
27 mu_0       0.9      1.21     0.468      0            12.0 
[1] "Total run time was 135.294 seconds"
