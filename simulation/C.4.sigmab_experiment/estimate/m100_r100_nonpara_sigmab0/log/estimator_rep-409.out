
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1230"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  9  5  7  9  6  2  5  8  6  5  6 10  6  5  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04464 0.36254 0.62391 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
729 501 
[1] "treatment indicator table: "

  0   1 
461 769 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 629
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 56"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 601
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 89"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 188.607 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.306 0.103 
 2 mu         0.1   0.2 0.317 0.130 
 3 mu         0.1   0.3 0.408 0.141 
 4 mu         0.1   0.4 0.525 0.107 
 5 mu         0.1   0.5 0.603 0.130 
 6 mu         0.2   0.1 0.293 0.0721
 7 mu         0.2   0.2 0.317 0.0922
 8 mu         0.2   0.3 0.381 0.102 
 9 mu         0.2   0.4 0.495 0.0649
10 mu         0.2   0.5 0.558 0.0771
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.567        0.153 0.0000377     10.4 
 2 mu         0.2      0.831        0.567 0.00684        7.34
 3 mu         0.3      0.963        0.836 0.0846         4.46
 4 mu         0.4      0.998        0.979 0.329          2.29
 5 mu         0.5      1.00         1     0.661          1.35
 6 mu         0.6      1.01         1     0.907          1.09
 7 mu         0.7      1.00         1     0.707          1.31
 8 mu         0.8      0.989        1     0.390          1.70
 9 mu         0.9      0.895        0.892 0.0964         2.46
10 mu_1       0.1      0.764        0.358 0.000181      10.5 
11 mu_1       0.2      0.931        0.785 0.0167         5.79
12 mu_1       0.3      0.990        0.948 0.141          3.63
13 mu_1       0.4      1.00         1     0.430          1.71
14 mu_1       0.5      1.01         1     0.743          1.22
15 mu_1       0.6      1.01         1.00  0.914          1.13
16 mu_1       0.7      1.00         1     0.651          1.37
17 mu_1       0.8      0.984        1     0.349          1.76
18 mu_1       0.9      0.883        0.887 0.0824         2.50
19 mu_0       0.1      0.546        0.130 0.0000218     10.4 
20 mu_0       0.2      0.806        0.494 0.00438        8.20
21 mu_0       0.3      0.951        0.787 0.0603         4.82
22 mu_0       0.4      0.996        0.962 0.261          2.67
23 mu_0       0.5      1.00         1.00  0.580          1.49
24 mu_0       0.6      1.01         1     0.850          1.14
25 mu_0       0.7      1.01         1     0.840          1.18
26 mu_0       0.8      1.01         1     0.553          1.48
27 mu_0       0.9      1.00         1     0.222          2.15
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.298    0.000162   2.15e-11     26.0 
 2 mu         0.2      0.649    0.00873    4.40e- 7     45.7 
 3 mu         0.3      0.886    0.0750     1.13e- 4     40.3 
 4 mu         0.4      1.04     0.324      4.56e- 3     24.4 
 5 mu         0.5      1.10     0.771      5.77e- 2     10.6 
 6 mu         0.6      1.12     1.06       3.43e- 1      3.21
 7 mu         0.7      1.14     0.973      5.10e- 2      4.18
 8 mu         0.8      1.00     0.492      1.14e- 3      6.86
 9 mu         0.9      0.585    0.0479     7.17e- 7      7.42
10 mu_1       0.1      0.724    0.00118    1.70e-10     57.9 
11 mu_1       0.2      0.897    0.0347     1.74e- 6     50.7 
12 mu_1       0.3      0.994    0.169      2.97e- 4     29.9 
13 mu_1       0.4      1.07     0.523      9.00e- 3     13.5 
14 mu_1       0.5      1.09     0.965      9.87e- 2      4.78
15 mu_1       0.6      1.12     1.11       3.13e- 1      2.35
16 mu_1       0.7      1.12     0.901      2.91e- 2      4.72
17 mu_1       0.8      0.957    0.394      5.72e- 4      7.35
18 mu_1       0.9      0.545    0.0322     3.19e- 7      7.56
19 mu_0       0.1      0.251    0.0000525  0            22.5 
20 mu_0       0.2      0.587    0.00293    0            44.4 
21 mu_0       0.3      0.840    0.0402     0            44.8 
22 mu_0       0.4      1.02     0.189      0            31.6 
23 mu_0       0.5      1.10     0.574      0            16.5 
24 mu_0       0.6      1.12     0.976      0             6.24
25 mu_0       0.7      1.16     1.13       0             3.19
26 mu_0       0.8      1.17     0.871      0             6.44
27 mu_0       0.9      0.942    0.248      0            10.1 
[1] "Total run time was 193.368 seconds"
