
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1253"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  5  8  7  9  3  5  7  3  7  7  7  8  6  7  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04055 0.34635 0.62929 1.00000 6.00000 
[1] "event indicator table: "

  0   1 
742 511 
[1] "treatment indicator table: "

  0   1 
447 806 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 621
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 33"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 632
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 93"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 130.218 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.355 0.157 
 2 mu         0.1   0.2 0.442 0.172 
 3 mu         0.1   0.3 0.502 0.170 
 4 mu         0.1   0.4 0.539 0.186 
 5 mu         0.1   0.5 0.566 0.192 
 6 mu         0.2   0.1 0.329 0.0926
 7 mu         0.2   0.2 0.422 0.101 
 8 mu         0.2   0.3 0.477 0.0960
 9 mu         0.2   0.4 0.529 0.108 
10 mu         0.2   0.5 0.568 0.109 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.13        0.0945 0.000145      35.7 
 2 mu         0.2      0.942       0.433  0.0150        13.2 
 3 mu         0.3      0.953       0.812  0.121          4.83
 4 mu         0.4      0.986       0.992  0.376          2.06
 5 mu         0.5      1.00        1      0.701          1.36
 6 mu         0.6      1.01        1      0.832          1.17
 7 mu         0.7      1.00        1      0.881          1.14
 8 mu         0.8      0.996       1      0.659          1.48
 9 mu         0.9      0.955       0.955  0.180          2.02
10 mu_1       0.1      0.642       0.295  0.000635       4.96
11 mu_1       0.2      0.828       0.694  0.0343         4.06
12 mu_1       0.3      0.941       0.980  0.189          2.36
13 mu_1       0.4      0.989       1      0.484          1.62
14 mu_1       0.5      1.00        1.00   0.763          1.32
15 mu_1       0.6      1.01        1      0.863          1.12
16 mu_1       0.7      1.00        1      0.834          1.17
17 mu_1       0.8      0.994       1      0.623          1.51
18 mu_1       0.9      0.950       0.952  0.157          2.08
19 mu_0       0.1      1.19        0.0741 0.0000904     39.5 
20 mu_0       0.2      0.970       0.368  0.0102        16.2 
21 mu_0       0.3      0.959       0.742  0.0915         6.39
22 mu_0       0.4      0.984       0.972  0.304          2.70
23 mu_0       0.5      1.00        1      0.631          1.47
24 mu_0       0.6      1.01        1      0.785          1.24
25 mu_0       0.7      1.01        1      0.900          1.10
26 mu_0       0.8      1.01        1      0.789          1.34
27 mu_0       0.9      0.996       1      0.383          1.93
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.0216    0.0000369  1.77e-12     0.934
 2 mu         0.2     0.122     0.00514    9.19e- 8     2.33 
 3 mu         0.3     0.342     0.0722     4.62e- 5     4.98 
 4 mu         0.4     0.639     0.284      2.68e- 3     6.98 
 5 mu         0.5     0.908     0.660      4.93e- 2     5.16 
 6 mu         0.6     1.05      0.969      3.37e- 1     2.31 
 7 mu         0.7     1.09      0.885      1.13e- 1     6.55 
 8 mu         0.8     1.21      0.419      2.54e- 3    24.7  
 9 mu         0.9     1.42      0.0506     1.59e- 6    40.6  
10 mu_1       0.1     0.0845    0.000209   1.58e-11     3.11 
11 mu_1       0.2     0.259     0.0170     4.08e- 7     3.89 
12 mu_1       0.3     0.521     0.147      1.37e- 4     6.64 
13 mu_1       0.4     0.795     0.493      5.91e- 3     6.98 
14 mu_1       0.5     0.999     0.864      9.34e- 2     4.13 
15 mu_1       0.6     1.08      1.04       5.27e- 1     2.23 
16 mu_1       0.7     1.09      0.795      6.46e- 2     8.32 
17 mu_1       0.8     1.24      0.342      1.27e- 3    27.4  
18 mu_1       0.9     1.44      0.0332     7.06e- 7    40.1  
19 mu_0       0.1     0.0146    0.0000155  0            0.692
20 mu_0       0.2     0.0874    0.00233    0            1.94 
21 mu_0       0.3     0.265     0.0345     0            4.27 
22 mu_0       0.4     0.534     0.154      0            6.98 
23 mu_0       0.5     0.817     0.427      0            6.20 
24 mu_0       0.6     1.02      0.843      0            3.19 
25 mu_0       0.7     1.08      1.05       0            2.43 
26 mu_0       0.8     1.11      0.715      0           13.7  
27 mu_0       0.9     1.25      0.153      0           45.1  
[1] "Total run time was 134.787 seconds"
