
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1263"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  9  2  5  2  7  8  8 10  8  7  8  8  4  5  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0444  0.3289  0.6004  1.0000  4.0000 
[1] "event indicator table: "

  0   1 
768 495 
[1] "treatment indicator table: "

  0   1 
440 823 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 600
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 8"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 43"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 663
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 16"
[1] "     Cluster: 20"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 69"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 78.988 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.147 0.107 
 2 mu         0.1   0.2 0.200 0.136 
 3 mu         0.1   0.3 0.523 0.104 
 4 mu         0.1   0.4 0.525 0.0927
 5 mu         0.1   0.5 0.639 0.141 
 6 mu         0.2   0.1 0.223 0.0841
 7 mu         0.2   0.2 0.319 0.110 
 8 mu         0.2   0.3 0.536 0.0930
 9 mu         0.2   0.4 0.540 0.0824
10 mu         0.2   0.5 0.607 0.0959
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.423        0.140 0.000122       4.36
 2 mu         0.2      0.698        0.570 0.0123         3.98
 3 mu         0.3      0.859        0.866 0.114          2.08
 4 mu         0.4      0.942        0.991 0.347          1.54
 5 mu         0.5      0.978        1     0.663          1.30
 6 mu         0.6      0.995        1     0.901          1.09
 7 mu         0.7      1.01         1     0.908          1.14
 8 mu         0.8      1.03         1     0.720          1.54
 9 mu         0.9      1.03         1     0.365          2.54
10 mu_1       0.1      0.660        0.395 0.000581       5.86
11 mu_1       0.2      0.831        0.859 0.0299         2.91
12 mu_1       0.3      0.918        0.970 0.182          1.75
13 mu_1       0.4      0.963        1     0.449          1.38
14 mu_1       0.5      0.985        0.998 0.757          1.14
15 mu_1       0.6      0.998        1     0.930          1.06
16 mu_1       0.7      1.01         1     0.882          1.18
17 mu_1       0.8      1.03         1     0.670          1.61
18 mu_1       0.9      1.03         1     0.326          2.69
19 mu_0       0.1      0.397        0.113 0.0000711      4.20
20 mu_0       0.2      0.665        0.494 0.00792        4.25
21 mu_0       0.3      0.833        0.812 0.0825         2.37
22 mu_0       0.4      0.928        0.971 0.278          1.65
23 mu_0       0.5      0.972        0.996 0.569          1.45
24 mu_0       0.6      0.990        0.997 0.821          1.21
25 mu_0       0.7      1.00         1     0.924          1.08
26 mu_0       0.8      1.01         1     0.857          1.27
27 mu_0       0.9      1.05         1.00  0.665          1.98
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.195   0.0000141   2.06e-15     14.6 
 2 mu         0.2      0.412   0.00277     4.80e-10     16.2 
 3 mu         0.3      0.656   0.0430      6.21e- 7     23.3 
 4 mu         0.4      0.835   0.205       9.45e- 5     21.1 
 5 mu         0.5      0.971   0.602       4.37e- 3     10.4 
 6 mu         0.6      1.08    1.03        9.31e- 2      2.84
 7 mu         0.7      1.12    1.07        2.02e- 1      2.95
 8 mu         0.8      1.11    0.612       1.14e- 2     12.7 
 9 mu         0.9      1.30    0.0824      2.01e- 5     34.4 
10 mu_1       0.1      0.419   0.000102    1.95e-14     24.3 
11 mu_1       0.2      0.595   0.00856     2.28e- 9     19.5 
12 mu_1       0.3      0.772   0.0878      1.96e- 6     25.9 
13 mu_1       0.4      0.893   0.360       2.24e- 4     17.5 
14 mu_1       0.5      1.01    0.837       8.28e- 3      6.92
15 mu_1       0.6      1.09    1.10        1.47e- 1      2.01
16 mu_1       0.7      1.11    0.924       1.00e- 1      3.93
17 mu_1       0.8      1.11    0.477       4.75e- 3     14.9 
18 mu_1       0.9      1.32    0.0609      7.44e- 6     36.2 
19 mu_0       0.1      0.171   0.00000432  0            13.5 
20 mu_0       0.2      0.366   0.00113     0            16.9 
21 mu_0       0.3      0.606   0.0179      0            22.2 
22 mu_0       0.4      0.797   0.118       0            23.4 
23 mu_0       0.5      0.937   0.375       0            13.8 
24 mu_0       0.6      1.06    0.887       0             4.73
25 mu_0       0.7      1.14    1.19        0             2.72
26 mu_0       0.8      1.13    0.991       0             4.25
27 mu_0       0.9      1.18    0.275       0            22.1 
[1] "Total run time was 81.154 seconds"
