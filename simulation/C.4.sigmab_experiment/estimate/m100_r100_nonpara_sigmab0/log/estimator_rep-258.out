
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1306"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 3  5  4  5  6  4  5 10  5 11 15  4  8  8  4  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.05048 0.39318 0.62779 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
778 528 
[1] "treatment indicator table: "

  0   1 
469 837 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 626
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 8"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 58"
[1] "     Cluster: 62"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 93"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 680
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 24"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 75"
[1] "     Cluster: 79"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 157.474 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.457 0.0901
 2 mu         0.1   0.2 0.470 0.0877
 3 mu         0.1   0.3 0.496 0.107 
 4 mu         0.1   0.4 0.574 0.112 
 5 mu         0.1   0.5 0.688 0.139 
 6 mu         0.2   0.1 0.432 0.0643
 7 mu         0.2   0.2 0.478 0.0609
 8 mu         0.2   0.3 0.521 0.0814
 9 mu         0.2   0.4 0.583 0.0737
10 mu         0.2   0.5 0.665 0.0856
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.626        0.153  0.000869      9.62
 2 mu         0.2      0.875        0.593  0.0356        5.90
 3 mu         0.3      0.981        0.914  0.162         2.95
 4 mu         0.4      1.00         1      0.368         1.75
 5 mu         0.5      0.993        1      0.627         1.28
 6 mu         0.6      0.997        0.999  0.878         1.12
 7 mu         0.7      1.01         1      0.851         1.24
 8 mu         0.8      1.01         1      0.631         1.57
 9 mu         0.9      1.01         0.973  0.191         2.45
10 mu_1       0.1      0.803        0.398  0.00347       8.37
11 mu_1       0.2      0.958        0.856  0.0661        3.26
12 mu_1       0.3      1.00         1      0.222         1.92
13 mu_1       0.4      0.998        1      0.439         1.62
14 mu_1       0.5      0.992        0.999  0.696         1.19
15 mu_1       0.6      0.999        0.998  0.880         1.11
16 mu_1       0.7      1.01         1      0.848         1.29
17 mu_1       0.8      1.01         1      0.590         1.61
18 mu_1       0.9      1.01         0.970  0.169         2.60
19 mu_0       0.1      0.607        0.126  0.000580      9.75
20 mu_0       0.2      0.854        0.556  0.0280        6.56
21 mu_0       0.3      0.971        0.868  0.136         3.43
22 mu_0       0.4      1.00         1      0.321         1.95
23 mu_0       0.5      0.995        1      0.558         1.39
24 mu_0       0.6      0.993        0.996  0.802         1.17
25 mu_0       0.7      1.00         1      0.834         1.15
26 mu_0       0.8      1.01         1.00   0.796         1.43
27 mu_0       0.9      1.00         0.995  0.385         1.82
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.394   0.0000218   4.24e-12     17.2 
 2 mu         0.2      1.14    0.00442     1.74e- 7     27.3 
 3 mu         0.3      1.40    0.0574      6.69e- 5     36.0 
 4 mu         0.4      1.21    0.292       2.95e- 3     20.4 
 5 mu         0.5      1.06    0.743       3.88e- 2      6.21
 6 mu         0.6      1.09    1.02        2.55e- 1      2.23
 7 mu         0.7      1.16    0.998       4.10e- 2      3.44
 8 mu         0.8      1.20    0.573       4.10e- 4      7.52
 9 mu         0.9      0.998   0.0832      9.03e- 8     13.7 
10 mu_1       0.1      0.923   0.000143    3.39e-11     31.3 
11 mu_1       0.2      1.50    0.0146      6.95e- 7     37.3 
12 mu_1       0.3      1.38    0.126       1.78e- 4     33.3 
13 mu_1       0.4      1.11    0.479       6.07e- 3     14.2 
14 mu_1       0.5      1.05    0.887       6.39e- 2      3.24
15 mu_1       0.6      1.11    1.13        1.27e- 1      2.38
16 mu_1       0.7      1.19    0.999       1.11e- 2      4.10
17 mu_1       0.8      1.21    0.469       1.42e- 4      8.62
18 mu_1       0.9      0.981   0.0549      2.79e- 8     14.0 
19 mu_0       0.1      0.336   0.00000867  0            15.6 
20 mu_0       0.2      1.05    0.00152     0            25.6 
21 mu_0       0.3      1.41    0.0296      0            37.1 
22 mu_0       0.4      1.27    0.172       0            24.6 
23 mu_0       0.5      1.08    0.532       0             9.32
24 mu_0       0.6      1.05    0.935       0             2.70
25 mu_0       0.7      1.10    1.12        0             2.52
26 mu_0       0.8      1.16    0.942       0             4.84
27 mu_0       0.9      1.15    0.197       0            11.4 
[1] "Total run time was 160.746 seconds"
