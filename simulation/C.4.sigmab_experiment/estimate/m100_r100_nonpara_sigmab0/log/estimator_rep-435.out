
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1241"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  6  5  8  2  6 10 10  5  8  9  5  5  1  7  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04352 0.34557 0.60938 1.00000 4.80647 
[1] "event indicator table: "

  0   1 
738 503 
[1] "treatment indicator table: "

  0   1 
460 781 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 635
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 606
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 63"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 80"
[1] "     Cluster: 84"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 79.236 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.463 0.162
 2 mu         0.1   0.2 0.560 0.202
 3 mu         0.1   0.3 0.577 0.193
 4 mu         0.1   0.4 0.582 0.184
 5 mu         0.1   0.5 0.590 0.178
 6 mu         0.2   0.1 0.429 0.129
 7 mu         0.2   0.2 0.519 0.150
 8 mu         0.2   0.3 0.538 0.143
 9 mu         0.2   0.4 0.548 0.134
10 mu         0.2   0.5 0.559 0.130
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.606        0.234  0.000355      5.78
 2 mu         0.2      0.878        0.681  0.0289        7.38
 3 mu         0.3      0.987        0.944  0.216         4.76
 4 mu         0.4      1.00         1      0.583         2.16
 5 mu         0.5      1.00         1      0.834         1.27
 6 mu         0.6      1.00         1      0.929         1.12
 7 mu         0.7      1.00         1      0.749         1.47
 8 mu         0.8      0.998        1      0.545         2.34
 9 mu         0.9      0.914        0.899  0.117         3.02
10 mu_1       0.1      0.802        0.550  0.00151       7.89
11 mu_1       0.2      0.972        0.875  0.0630        7.04
12 mu_1       0.3      1.00         1      0.327         3.30
13 mu_1       0.4      1.00         1      0.704         1.53
14 mu_1       0.5      1.00         1      0.887         1.24
15 mu_1       0.6      1.00         1      0.875         1.09
16 mu_1       0.7      1.00         1      0.717         1.59
17 mu_1       0.8      0.995        0.996  0.500         2.41
18 mu_1       0.9      0.904        0.881  0.0999        3.17
19 mu_0       0.1      0.584        0.194  0.000226      5.87
20 mu_0       0.2      0.855        0.613  0.0203        7.46
21 mu_0       0.3      0.979        0.917  0.168         5.38
22 mu_0       0.4      1.00         1      0.502         2.58
23 mu_0       0.5      1.00         1      0.769         1.34
24 mu_0       0.6      1.00         1      0.898         1.18
25 mu_0       0.7      1.00         1      0.823         1.21
26 mu_0       0.8      1.01         1      0.693         2.04
27 mu_0       0.9      1.01         1      0.270         2.83
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.279    0.0000828  3.46e-13     14.0 
 2 mu         0.2      0.572    0.00609    2.02e- 8     15.6 
 3 mu         0.3      0.806    0.0790     1.16e- 5     15.2 
 4 mu         0.4      0.953    0.319      9.91e- 4     10.5 
 5 mu         0.5      1.02     0.733      2.93e- 2      4.87
 6 mu         0.6      1.05     1.05       4.34e- 1      2.16
 7 mu         0.7      1.11     1.02       9.11e- 2      5.29
 8 mu         0.8      1.26     0.469      4.62e- 3     21.7 
 9 mu         0.9      1.50     0.0591     1.09e- 5     71.3 
10 mu_1       0.1      0.605    0.000473   3.26e-12     23.4 
11 mu_1       0.2      0.778    0.0221     9.49e- 8     17.9 
12 mu_1       0.3      0.894    0.157      3.64e- 5     13.8 
13 mu_1       0.4      0.970    0.527      2.33e- 3      7.16
14 mu_1       0.5      1.01     0.947      5.52e- 2      4.38
15 mu_1       0.6      1.04     1.04       2.96e- 1      2.43
16 mu_1       0.7      1.13     0.933      4.03e- 2      6.40
17 mu_1       0.8      1.28     0.371      2.05e- 3     25.5 
18 mu_1       0.9      1.50     0.0431     5.45e- 6     74.5 
19 mu_0       0.1      0.243    0.0000331  2.26e-14     13.0 
20 mu_0       0.2      0.521    0.00261    1.48e- 9     16.2 
21 mu_0       0.3      0.768    0.0328     9.74e- 7     15.8 
22 mu_0       0.4      0.941    0.171      9.72e- 5     12.7 
23 mu_0       0.5      1.02     0.528      3.45e- 3      6.93
24 mu_0       0.6      1.05     0.998      6.38e- 2      3.04
25 mu_0       0.7      1.08     1.08       1.95e- 1      3.17
26 mu_0       0.8      1.18     0.880      1.48e- 2      7.86
27 mu_0       0.9      1.56     0.214      6.00e- 5     41.9 
[1] "Total run time was 81.668 seconds"
