
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1292"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  7  7  6  5  2  7  3  7  9  5  7  8 12  6  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04727 0.39004 0.65584 1.00000 4.41024 
[1] "event indicator table: "

  0   1 
754 538 
[1] "treatment indicator table: "

  0   1 
458 834 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 662
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 630
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 457.009 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.402 0.131 
 2 mu         0.1   0.2 0.546 0.156 
 3 mu         0.1   0.3 0.611 0.182 
 4 mu         0.1   0.4 0.608 0.182 
 5 mu         0.1   0.5 0.641 0.182 
 6 mu         0.2   0.1 0.364 0.0797
 7 mu         0.2   0.2 0.499 0.101 
 8 mu         0.2   0.3 0.562 0.122 
 9 mu         0.2   0.4 0.570 0.118 
10 mu         0.2   0.5 0.600 0.113 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.795       0.0653 0.0000287     22.1 
 2 mu         0.2      0.887       0.475  0.00559       15.2 
 3 mu         0.3      0.943       0.801  0.0742         5.07
 4 mu         0.4      0.977       0.949  0.291          2.33
 5 mu         0.5      0.983       1      0.570          1.48
 6 mu         0.6      0.993       0.999  0.841          1.17
 7 mu         0.7      1.01        1      0.877          1.18
 8 mu         0.8      1.02        1      0.656          1.43
 9 mu         0.9      1.00        1      0.190          2.71
10 mu_1       0.1      0.859       0.209  0.000145      26.0 
11 mu_1       0.2      0.890       0.730  0.0143         9.12
12 mu_1       0.3      0.958       0.925  0.129          3.17
13 mu_1       0.4      0.983       0.976  0.405          1.97
14 mu_1       0.5      0.986       1      0.684          1.34
15 mu_1       0.6      0.998       1      0.886          1.12
16 mu_1       0.7      1.01        1.00   0.858          1.21
17 mu_1       0.8      1.02        1      0.607          1.51
18 mu_1       0.9      1.00        1      0.165          2.80
19 mu_0       0.1      0.788       0.0503 0.0000158     21.7 
20 mu_0       0.2      0.886       0.398  0.00342       16.7 
21 mu_0       0.3      0.937       0.752  0.0509         6.19
22 mu_0       0.4      0.974       0.936  0.214          2.57
23 mu_0       0.5      0.979       0.988  0.457          1.62
24 mu_0       0.6      0.985       0.993  0.734          1.24
25 mu_0       0.7      1.00        1      0.901          1.10
26 mu_0       0.8      1.02        1.01   0.804          1.28
27 mu_0       0.9      1.02        0.999  0.412          1.88
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.0163   0.0000153   1.45e-13     0.498
 2 mu         0.2     0.128    0.00381     1.34e- 8     4.49 
 3 mu         0.3     0.378    0.0529      8.82e- 6    10.3  
 4 mu         0.4     0.699    0.246       7.39e- 4    10.8  
 5 mu         0.5     0.967    0.633       1.90e- 2     6.38 
 6 mu         0.6     1.08     0.977       2.16e- 1     2.93 
 7 mu         0.7     1.05     0.926       2.17e- 1     4.20 
 8 mu         0.8     0.922    0.519       1.25e- 2     7.70 
 9 mu         0.9     0.698    0.0695      3.53e- 5    15.0  
10 mu_1       0.1     0.0663   0.000111    1.23e-12     1.87 
11 mu_1       0.2     0.268    0.0111      5.68e- 8     8.02 
12 mu_1       0.3     0.566    0.132       2.50e- 5    12.2  
13 mu_1       0.4     0.858    0.409       1.57e- 3     9.63 
14 mu_1       0.5     1.06     0.879       3.23e- 2     5.01 
15 mu_1       0.6     1.10     1.00        3.06e- 1     2.51 
16 mu_1       0.7     1.03     0.870       1.47e- 1     4.43 
17 mu_1       0.8     0.898    0.389       7.41e- 3     8.02 
18 mu_1       0.9     0.674    0.0439      1.86e- 5    16.6  
19 mu_0       0.1     0.0108   0.00000502  0            0.346
20 mu_0       0.2     0.0926   0.00144     0            3.61 
21 mu_0       0.3     0.298    0.0220      0            9.41 
22 mu_0       0.4     0.592    0.135       0           11.6  
23 mu_0       0.5     0.878    0.448       0            8.20 
24 mu_0       0.6     1.05     0.924       0            4.18 
25 mu_0       0.7     1.08     0.999       0            3.69 
26 mu_0       0.8     1.01     0.907       0            6.41 
27 mu_0       0.9     0.912    0.243       0            9.38 
[1] "Total run time was 463.639 seconds"
