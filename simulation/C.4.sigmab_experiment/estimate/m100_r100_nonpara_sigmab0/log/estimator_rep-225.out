
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1285"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 12 13 14 15 16 17 18 19 20 
 7  9  9  5  2  3  5  8  5  8  9  8  9 11  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02892 0.31283 0.56743 1.00000 4.25974 
[1] "event indicator table: "

  0   1 
773 512 
[1] "treatment indicator table: "

  0   1 
462 823 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 619
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 666
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 65.692 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.606 0.290
 2 mu         0.1   0.2 0.687 0.291
 3 mu         0.1   0.3 0.729 0.296
 4 mu         0.1   0.4 0.738 0.290
 5 mu         0.1   0.5 0.750 0.285
 6 mu         0.2   0.1 0.489 0.210
 7 mu         0.2   0.2 0.581 0.214
 8 mu         0.2   0.3 0.619 0.216
 9 mu         0.2   0.4 0.652 0.216
10 mu         0.2   0.5 0.699 0.218
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      2.89        0.0999 0.000127     232.  
 2 mu         0.2      1.54        0.408  0.0124        70.7 
 3 mu         0.3      1.13        0.817  0.109         13.0 
 4 mu         0.4      1.04        0.986  0.357          5.25
 5 mu         0.5      1.01        1      0.688          1.88
 6 mu         0.6      1.00        1      0.915          1.14
 7 mu         0.7      1.00        1      0.772          1.18
 8 mu         0.8      1.00        1      0.562          1.40
 9 mu         0.9      0.944       0.969  0.197          2.28
10 mu_1       0.1      1.97        0.301  0.000602     137.  
11 mu_1       0.2      1.15        0.674  0.0286        21.0 
12 mu_1       0.3      1.06        0.975  0.175          8.90
13 mu_1       0.4      1.02        1      0.461          3.46
14 mu_1       0.5      1.01        1      0.778          1.39
15 mu_1       0.6      1.00        1      0.905          1.11
16 mu_1       0.7      1.00        1      0.747          1.21
17 mu_1       0.8      1.00        1      0.528          1.49
18 mu_1       0.9      0.934       0.956  0.179          2.39
19 mu_0       0.1      2.99        0.0778 0.0000742    243.  
20 mu_0       0.2      1.63        0.354  0.00787       83.1 
21 mu_0       0.3      1.16        0.751  0.0772        17.2 
22 mu_0       0.4      1.05        0.980  0.288          6.44
23 mu_0       0.5      1.02        1      0.598          2.41
24 mu_0       0.6      1.00        1      0.876          1.24
25 mu_0       0.7      1.00        1      0.831          1.11
26 mu_0       0.8      1.01        1      0.688          1.30
27 mu_0       0.9      1.04        1      0.361          1.80
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.0986    0.0000391  6.31e-12      3.94
 2 mu         0.2     0.258     0.00433    9.19e- 8      5.46
 3 mu         0.3     0.466     0.0694     2.35e- 5      9.50
 4 mu         0.4     0.696     0.285      1.13e- 3      8.75
 5 mu         0.5     0.874     0.709      2.14e- 2      4.97
 6 mu         0.6     0.965     0.926      2.20e- 1      2.56
 7 mu         0.7     0.977     0.966      2.15e- 1      2.45
 8 mu         0.8     0.867     0.488      8.27e- 3      6.17
 9 mu         0.9     0.667     0.0680     1.17e- 5     16.0 
10 mu_1       0.1     0.278     0.000263   5.89e-11      7.88
11 mu_1       0.2     0.429     0.0141     4.29e- 7      9.10
12 mu_1       0.3     0.604     0.139      7.31e- 5     10.6 
13 mu_1       0.4     0.786     0.472      2.64e- 3      7.29
14 mu_1       0.5     0.910     0.840      4.00e- 2      3.31
15 mu_1       0.6     0.967     0.956      3.08e- 1      2.47
16 mu_1       0.7     0.959     0.881      9.73e- 2      2.92
17 mu_1       0.8     0.838     0.379      4.65e- 3      7.20
18 mu_1       0.9     0.650     0.0435     5.83e- 6     16.6 
19 mu_0       0.1     0.0786    0.0000134  0             3.50
20 mu_0       0.2     0.215     0.00165    0             4.92
21 mu_0       0.3     0.406     0.0351     0             9.05
22 mu_0       0.4     0.636     0.182      0             9.72
23 mu_0       0.5     0.838     0.521      0             6.62
24 mu_0       0.6     0.961     0.873      0             2.88
25 mu_0       0.7     1.02      1.01       0             1.96
26 mu_0       0.8     0.981     0.881      0             3.45
27 mu_0       0.9     0.820     0.246      0            10.7 
[1] "Total run time was 67.793 seconds"
