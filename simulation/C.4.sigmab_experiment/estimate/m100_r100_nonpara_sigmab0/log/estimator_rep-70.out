
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1287"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  5  5  5 13  5  6  4  5  7  5  8 10  5  5  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.05516 0.42539 0.69587 1.00000 6.00000 
[1] "event indicator table: "

  0   1 
794 493 
[1] "treatment indicator table: "

  0   1 
429 858 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 650
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 637
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 52"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 227.391 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.411 0.141
 2 mu         0.1   0.2 0.549 0.195
 3 mu         0.1   0.3 0.559 0.201
 4 mu         0.1   0.4 0.560 0.212
 5 mu         0.1   0.5 0.616 0.227
 6 mu         0.2   0.1 0.367 0.108
 7 mu         0.2   0.2 0.477 0.149
 8 mu         0.2   0.3 0.489 0.155
 9 mu         0.2   0.4 0.497 0.164
10 mu         0.2   0.5 0.551 0.178
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      1.80        0.0438 0.00000430     98.5 
 2 mu         0.2      2.22        0.309  0.00115       106.  
 3 mu         0.3      1.48        0.662  0.0216         37.3 
 4 mu         0.4      1.08        0.915  0.128           7.38
 5 mu         0.5      0.990       0.986  0.389           2.19
 6 mu         0.6      0.989       0.998  0.728           1.18
 7 mu         0.7      0.998       1      0.797           1.23
 8 mu         0.8      1.02        1      0.600           2.09
 9 mu         0.9      1.17        1      0.247          10.7 
10 mu_1       0.1      2.58        0.142  0.0000234     148.  
11 mu_1       0.2      1.99        0.522  0.00322        79.9 
12 mu_1       0.3      1.24        0.837  0.0414         18.9 
13 mu_1       0.4      1.01        0.967  0.192           4.00
14 mu_1       0.5      0.986       1      0.485           1.35
15 mu_1       0.6      0.992       0.995  0.802           1.14
16 mu_1       0.7      1.00        1      0.763           1.27
17 mu_1       0.8      1.03        1      0.562           2.36
18 mu_1       0.9      1.18        0.993  0.220          11.7 
19 mu_0       0.1      1.71        0.0327 0.00000218     93.0 
20 mu_0       0.2      2.27        0.250  0.000635      113.  
21 mu_0       0.3      1.59        0.587  0.0130         45.2 
22 mu_0       0.4      1.12        0.886  0.0862          9.64
23 mu_0       0.5      0.994       0.975  0.292           3.03
24 mu_0       0.6      0.985       1      0.619           1.25
25 mu_0       0.7      0.992       0.991  0.878           1.13
26 mu_0       0.8      1.00        1      0.699           1.41
27 mu_0       0.9      1.03        1.00   0.488           2.40
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.0405   0.0000261   2.50e-16      2.11
 2 mu         0.2     0.309    0.00266     1.31e-10     18.5 
 3 mu         0.3     0.750    0.0515      2.90e- 7     32.3 
 4 mu         0.4     1.13     0.229       6.86e- 5     25.0 
 5 mu         0.5     1.35     0.601       4.76e- 3     16.6 
 6 mu         0.6     1.40     0.985       1.43e- 1      6.40
 7 mu         0.7     1.29     1.11        2.00e- 1      3.87
 8 mu         0.8     1.39     0.694       4.51e- 3     36.0 
 9 mu         0.9     4.07     0.108       3.97e- 6    337.  
10 mu_1       0.1     0.141    0.000192    2.50e-15      6.59
11 mu_1       0.2     0.556    0.0101      6.54e-10     28.9 
12 mu_1       0.3     0.991    0.104       9.67e- 7     33.6 
13 mu_1       0.4     1.28     0.404       1.72e- 4     22.2 
14 mu_1       0.5     1.41     0.784       9.52e- 3     13.7 
15 mu_1       0.6     1.40     1.10        2.38e- 1      4.96
16 mu_1       0.7     1.27     1.12        8.93e- 2      4.06
17 mu_1       0.8     1.44     0.584       1.76e- 3     45.0 
18 mu_1       0.9     4.41     0.0775      1.38e- 6    375.  
19 mu_0       0.1     0.0294   0.00000594  0             1.61
20 mu_0       0.2     0.247    0.00114     0            15.9 
21 mu_0       0.3     0.647    0.0250      0            31.7 
22 mu_0       0.4     1.03     0.128       0            28.6 
23 mu_0       0.5     1.28     0.427       0            19.6 
24 mu_0       0.6     1.40     0.815       0             9.41
25 mu_0       0.7     1.33     1.09        0             4.20
26 mu_0       0.8     1.16     1.03        0             4.87
27 mu_0       0.9     0.958    0.328       0             8.67
[1] "Total run time was 232.112 seconds"
