
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1225"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  6  8 10  6  5  9  6  6  5  4  8  8  5  4  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02413 0.33379 0.59412 1.00000 4.00000 
[1] "event indicator table: "

  0   1 
749 476 
[1] "treatment indicator table: "

  0   1 
450 775 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 610
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 78"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 615
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 37"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 93.118 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.486 0.122 
 2 mu         0.1   0.2 0.557 0.165 
 3 mu         0.1   0.3 0.686 0.147 
 4 mu         0.1   0.4 0.704 0.138 
 5 mu         0.1   0.5 0.728 0.132 
 6 mu         0.2   0.1 0.423 0.0817
 7 mu         0.2   0.2 0.482 0.113 
 8 mu         0.2   0.3 0.600 0.0964
 9 mu         0.2   0.4 0.618 0.0908
10 mu         0.2   0.5 0.644 0.0884
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.475        0.157 0.0000269      6.72
 2 mu         0.2      0.742        0.541 0.00402        4.31
 3 mu         0.3      0.867        0.852 0.0469         2.89
 4 mu         0.4      0.924        0.965 0.200          2.08
 5 mu         0.5      0.962        0.996 0.455          1.43
 6 mu         0.6      0.989        1     0.737          1.11
 7 mu         0.7      1.00         1     0.848          1.13
 8 mu         0.8      0.981        1     0.633          1.41
 9 mu         0.9      0.897        0.859 0.218          3.73
10 mu_1       0.1      0.728        0.439 0.000123       6.17
11 mu_1       0.2      0.857        0.811 0.0105         3.98
12 mu_1       0.3      0.911        0.956 0.0848         2.55
13 mu_1       0.4      0.946        0.983 0.274          1.71
14 mu_1       0.5      0.975        0.997 0.522          1.26
15 mu_1       0.6      0.996        1     0.794          1.08
16 mu_1       0.7      1.00         1     0.818          1.16
17 mu_1       0.8      0.975        1     0.595          1.52
18 mu_1       0.9      0.888        0.830 0.191          4.04
19 mu_0       0.1      0.447        0.124 0.0000162      6.78
20 mu_0       0.2      0.713        0.464 0.00239        4.82
21 mu_0       0.3      0.849        0.802 0.0306         3.15
22 mu_0       0.4      0.910        0.942 0.144          2.32
23 mu_0       0.5      0.948        0.986 0.380          1.61
24 mu_0       0.6      0.978        0.995 0.652          1.20
25 mu_0       0.7      0.999        1.00  0.855          1.10
26 mu_0       0.8      1.00         1     0.783          1.24
27 mu_0       0.9      0.974        1     0.456          1.67
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.360    0.000110   2.96e-12     24.5 
 2 mu         0.2      0.803    0.00913    4.85e- 8     43.0 
 3 mu         0.3      1.02     0.0874     1.42e- 5     38.0 
 4 mu         0.4      1.09     0.327      7.95e- 4     22.9 
 5 mu         0.5      1.11     0.739      1.81e- 2     10.0 
 6 mu         0.6      1.12     1.03       2.32e- 1      3.78
 7 mu         0.7      1.14     1.05       1.27e- 1      3.37
 8 mu         0.8      1.21     0.624      4.29e- 3     13.0 
 9 mu         0.9      1.57     0.0791     7.55e- 6     67.7 
10 mu_1       0.1      0.877    0.000677   2.96e-11     54.4 
11 mu_1       0.2      1.08     0.0275     2.43e- 7     47.7 
12 mu_1       0.3      1.07     0.198      4.72e- 5     28.1 
13 mu_1       0.4      1.07     0.537      1.99e- 3     12.7 
14 mu_1       0.5      1.10     0.952      3.61e- 2      4.65
15 mu_1       0.6      1.12     1.05       3.87e- 1      3.55
16 mu_1       0.7      1.14     0.986      6.04e- 2      4.19
17 mu_1       0.8      1.24     0.481      1.79e- 3     16.3 
18 mu_1       0.9      1.63     0.0589     2.80e- 6     75.3 
19 mu_0       0.1      0.302    0.0000395  0            21.2 
20 mu_0       0.2      0.734    0.00421    0            41.8 
21 mu_0       0.3      1.00     0.0402     0            42.2 
22 mu_0       0.4      1.10     0.194      0            29.7 
23 mu_0       0.5      1.12     0.512      0            15.6 
24 mu_0       0.6      1.12     0.964      0             5.87
25 mu_0       0.7      1.12     1.10       0             2.95
26 mu_0       0.8      1.13     0.948      0             6.43
27 mu_0       0.9      1.07     0.239      0            18.8 
[1] "Total run time was 95.567 seconds"
