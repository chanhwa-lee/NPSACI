
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1248"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 8  5  4 10  6  4  7  9  4  6  9  2  5  4  9  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03326 0.33788 0.61662 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
748 500 
[1] "treatment indicator table: "

  0   1 
431 817 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 612
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 80"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 636
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 64"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 69.949 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.330 0.0958
 2 mu         0.1   0.2 0.362 0.114 
 3 mu         0.1   0.3 0.482 0.152 
 4 mu         0.1   0.4 0.528 0.156 
 5 mu         0.1   0.5 0.555 0.164 
 6 mu         0.2   0.1 0.324 0.0838
 7 mu         0.2   0.2 0.352 0.0990
 8 mu         0.2   0.3 0.470 0.139 
 9 mu         0.2   0.4 0.522 0.138 
10 mu         0.2   0.5 0.550 0.145 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.987        0.146 0.0000190     32.8 
 2 mu         0.2      1.39         0.460 0.00382       56.9 
 3 mu         0.3      1.23         0.787 0.0526        34.2 
 4 mu         0.4      1.06         1     0.229         11.5 
 5 mu         0.5      1.00         1     0.522          2.84
 6 mu         0.6      0.996        1     0.764          1.18
 7 mu         0.7      0.996        1     0.858          1.17
 8 mu         0.8      0.985        1     0.641          1.56
 9 mu         0.9      0.921        0.962 0.244          2.78
10 mu_1       0.1      1.44         0.436 0.0000962     61.6 
11 mu_1       0.2      1.40         0.720 0.00979       53.5 
12 mu_1       0.3      1.13         0.960 0.0920        21.6 
13 mu_1       0.4      1.01         0.999 0.313          5.83
14 mu_1       0.5      0.995        1     0.608          1.65
15 mu_1       0.6      0.996        1     0.811          1.10
16 mu_1       0.7      0.995        1     0.823          1.18
17 mu_1       0.8      0.981        1     0.596          1.65
18 mu_1       0.9      0.913        0.946 0.217          2.86
19 mu_0       0.1      0.937        0.112 0.0000105     29.6 
20 mu_0       0.2      1.39         0.390 0.00232       57.8 
21 mu_0       0.3      1.28         0.680 0.0357        39.5 
22 mu_0       0.4      1.09         0.985 0.174         15.2 
23 mu_0       0.5      1.01         1     0.436          4.03
24 mu_0       0.6      0.996        1     0.694          1.32
25 mu_0       0.7      0.998        1     0.880          1.16
26 mu_0       0.8      0.999        1     0.762          1.27
27 mu_0       0.9      0.990        1     0.459          2.10
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.0757   0.0000236   1.18e-11      2.93
 2 mu         0.2     0.380    0.00388     2.72e- 7     12.8 
 3 mu         0.3     0.683    0.0555      7.97e- 5     16.1 
 4 mu         0.4     0.877    0.247       2.75e- 3     14.8 
 5 mu         0.5     1.01     0.558       3.48e- 2      8.42
 6 mu         0.6     1.10     0.977       2.38e- 1      2.96
 7 mu         0.7     1.13     1.06        3.97e- 2      2.68
 8 mu         0.8     1.09     0.589       7.82e- 4      6.90
 9 mu         0.9     0.823    0.0712      6.12e- 7     12.6 
10 mu_1       0.1     0.253    0.000204    9.83e-11      7.80
11 mu_1       0.2     0.654    0.0174      1.13e- 6     17.1 
12 mu_1       0.3     0.865    0.128       2.21e- 4     17.9 
13 mu_1       0.4     0.968    0.412       5.97e- 3     12.4 
14 mu_1       0.5     1.05     0.795       6.03e- 2      5.61
15 mu_1       0.6     1.11     1.08        2.25e- 1      2.72
16 mu_1       0.7     1.13     1.01        1.51e- 2      3.24
17 mu_1       0.8     1.08     0.485       2.61e- 4      7.90
18 mu_1       0.9     0.793    0.0536      1.81e- 7     12.8 
19 mu_0       0.1     0.0561   0.00000526  0             2.38
20 mu_0       0.2     0.311    0.00148     0            11.7 
21 mu_0       0.3     0.605    0.0244      0            15.6 
22 mu_0       0.4     0.816    0.0886      0            16.5 
23 mu_0       0.5     0.973    0.366       0            11.2 
24 mu_0       0.6     1.08     0.897       0             4.88
25 mu_0       0.7     1.12     1.12        0             2.19
26 mu_0       0.8     1.13     0.985       0             4.10
27 mu_0       0.9     1.09     0.236       0            10.5 
[1] "Total run time was 72.453 seconds"
