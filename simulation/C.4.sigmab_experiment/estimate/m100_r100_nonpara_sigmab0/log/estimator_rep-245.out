
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1306"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 3  6  5  3  4  4  8 11  8  9  8  7  7  9  3  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03107 0.32391 0.59149 0.99800 7.00000 
[1] "event indicator table: "

  0   1 
762 544 
[1] "treatment indicator table: "

  0   1 
496 810 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 667
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 20"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 639
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 120.942 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.337 0.0950
 2 mu         0.1   0.2 0.427 0.119 
 3 mu         0.1   0.3 0.516 0.135 
 4 mu         0.1   0.4 0.601 0.148 
 5 mu         0.1   0.5 0.692 0.166 
 6 mu         0.2   0.1 0.309 0.0755
 7 mu         0.2   0.2 0.389 0.0931
 8 mu         0.2   0.3 0.508 0.112 
 9 mu         0.2   0.4 0.585 0.122 
10 mu         0.2   0.5 0.643 0.128 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.44         0.142 0.0000494     48.5 
 2 mu         0.2      1.73         0.600 0.00861       47.3 
 3 mu         0.3      1.45         0.864 0.103         21.6 
 4 mu         0.4      1.14         0.990 0.358          6.51
 5 mu         0.5      1.02         1     0.640          1.86
 6 mu         0.6      1.00         1     0.790          1.23
 7 mu         0.7      1.01         1.00  0.760          1.46
 8 mu         0.8      1.03         1     0.425          2.62
 9 mu         0.9      0.991        0.968 0.0820         5.22
10 mu_1       0.1      1.82         0.391 0.000226      69.3 
11 mu_1       0.2      1.64         0.788 0.0202        33.8 
12 mu_1       0.3      1.26         0.965 0.168         10.5 
13 mu_1       0.4      1.05         1     0.473          3.15
14 mu_1       0.5      1.00         1     0.739          1.38
15 mu_1       0.6      1.00         1     0.784          1.20
16 mu_1       0.7      1.02         1.00  0.727          1.55
17 mu_1       0.8      1.03         1.00  0.376          2.85
18 mu_1       0.9      0.983        0.962 0.0672         5.38
19 mu_0       0.1      1.40         0.113 0.0000297     46.2 
20 mu_0       0.2      1.75         0.525 0.00570       50.6 
21 mu_0       0.3      1.53         0.824 0.0755        26.4 
22 mu_0       0.4      1.20         0.991 0.282          8.98
23 mu_0       0.5      1.04         1     0.540          2.52
24 mu_0       0.6      1.00         1     0.778          1.31
25 mu_0       0.7      1.00         1     0.794          1.26
26 mu_0       0.8      1.02         1.00  0.620          1.71
27 mu_0       0.9      1.06         1     0.216          3.84
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.716   0.0000166   6.67e-16     32.1 
 2 mu         0.2      1.70    0.00312     3.11e-10     99.2 
 3 mu         0.3      1.95    0.0577      6.03e- 7     88.5 
 4 mu         0.4      1.76    0.262       1.22e- 4     37.7 
 5 mu         0.5      1.53    0.695       7.07e- 3     18.1 
 6 mu         0.6      1.34    0.997       1.81e- 1     13.1 
 7 mu         0.7      1.33    0.911       4.32e- 2      7.05
 8 mu         0.8      1.62    0.390       3.78e- 4     21.4 
 9 mu         0.9      2.26    0.0384      7.40e- 8    100.  
10 mu_1       0.1      1.37    0.000108    6.33e-15     67.4 
11 mu_1       0.2      2.06    0.0108      1.48e- 9    117.  
12 mu_1       0.3      1.93    0.122       1.91e- 6     69.4 
13 mu_1       0.4      1.67    0.436       2.90e- 4     22.2 
14 mu_1       0.5      1.45    0.908       1.34e- 2     18.1 
15 mu_1       0.6      1.31    1.01        1.38e- 1     10.9 
16 mu_1       0.7      1.36    0.783       1.45e- 2      8.39
17 mu_1       0.8      1.67    0.319       1.11e- 4     25.4 
18 mu_1       0.9      2.28    0.0276      1.93e- 8    106.  
19 mu_0       0.1      0.643   0.00000534  0            31.2 
20 mu_0       0.2      1.61    0.00147     0            94.8 
21 mu_0       0.3      1.96    0.0246      0            96.7 
22 mu_0       0.4      1.82    0.158       0            48.1 
23 mu_0       0.5      1.61    0.526       0            18.1 
24 mu_0       0.6      1.39    0.979       0            16.3 
25 mu_0       0.7      1.27    1.06        0             7.47
26 mu_0       0.8      1.42    0.627       0            12.9 
27 mu_0       0.9      2.01    0.112       0            50.0 
[1] "Total run time was 123.332 seconds"
