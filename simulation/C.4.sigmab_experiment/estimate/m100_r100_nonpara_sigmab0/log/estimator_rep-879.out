
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1215"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 8  9  4  5  8  5  7 10  5  8  4  3  4  6  7  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02741 0.33100 0.59950 1.00000 4.00000 
[1] "event indicator table: "

  0   1 
755 460 
[1] "treatment indicator table: "

  0   1 
459 756 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 617
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 67"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 598
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 112.203 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.472 0.161 
 2 mu         0.1   0.2 0.528 0.161 
 3 mu         0.1   0.3 0.539 0.157 
 4 mu         0.1   0.4 0.599 0.156 
 5 mu         0.1   0.5 0.606 0.154 
 6 mu         0.2   0.1 0.303 0.0626
 7 mu         0.2   0.2 0.367 0.0673
 8 mu         0.2   0.3 0.390 0.0737
 9 mu         0.2   0.4 0.452 0.0762
10 mu         0.2   0.5 0.471 0.0828
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.555        0.133 0.0000779      6.13
 2 mu         0.2      0.816        0.596 0.0133         8.54
 3 mu         0.3      0.958        0.933 0.117          4.37
 4 mu         0.4      0.999        0.998 0.317          2.51
 5 mu         0.5      1.01         1     0.582          1.76
 6 mu         0.6      1.01         1     0.825          1.21
 7 mu         0.7      1.01         1     0.822          1.30
 8 mu         0.8      1.01         1     0.591          1.69
 9 mu         0.9      1.00         1     0.136          3.97
10 mu_1       0.1      0.699        0.348 0.000371      10.2 
11 mu_1       0.2      0.936        0.866 0.0320         7.28
12 mu_1       0.3      1.00         1     0.211          2.88
13 mu_1       0.4      1.01         1     0.450          2.24
14 mu_1       0.5      1.01         1     0.705          1.49
15 mu_1       0.6      1.00         1     0.899          1.21
16 mu_1       0.7      1.01         1     0.791          1.36
17 mu_1       0.8      1.01         1     0.557          1.78
18 mu_1       0.9      1.00         1     0.116          4.32
19 mu_0       0.1      0.539        0.103 0.0000453      6.41
20 mu_0       0.2      0.786        0.522 0.00860        8.86
21 mu_0       0.3      0.938        0.903 0.0771         5.03
22 mu_0       0.4      0.992        0.998 0.228          2.68
23 mu_0       0.5      1.00         1     0.459          2.02
24 mu_0       0.6      1.01         1     0.714          1.35
25 mu_0       0.7      1.01         1     0.874          1.20
26 mu_0       0.8      1.01         1     0.727          1.41
27 mu_0       0.9      1.02         1     0.309          2.37
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.154    0.000178   9.15e-14      3.65
 2 mu         0.2      0.677    0.0103     6.00e- 9     18.0 
 3 mu         0.3      1.24     0.104      3.94e- 6     23.9 
 4 mu         0.4      1.43     0.354      3.93e- 4     17.8 
 5 mu         0.5      1.31     0.776      1.40e- 2      7.63
 6 mu         0.6      1.14     1.01       1.48e- 1      3.94
 7 mu         0.7      1.11     0.955      1.17e- 1     10.6 
 8 mu         0.8      1.44     0.430      2.15e- 3     26.5 
 9 mu         0.9      2.70     0.0675     1.06e- 6    170.  
10 mu_1       0.1      0.454    0.00101    9.15e-13     10.4 
11 mu_1       0.2      1.09     0.0355     3.00e- 8     25.7 
12 mu_1       0.3      1.46     0.239      1.31e- 5     22.8 
13 mu_1       0.4      1.44     0.587      9.83e- 4     14.9 
14 mu_1       0.5      1.26     0.912      2.79e- 2      5.94
15 mu_1       0.6      1.11     0.988      2.16e- 1      3.28
16 mu_1       0.7      1.12     0.845      5.96e- 2     12.7 
17 mu_1       0.8      1.51     0.350      8.95e- 4     32.2 
18 mu_1       0.9      2.85     0.0481     3.94e- 7    188.  
19 mu_0       0.1      0.121    0.0000600  0             2.89
20 mu_0       0.2      0.573    0.00449    0            16.0 
21 mu_0       0.3      1.14     0.0447     0            24.4 
22 mu_0       0.4      1.42     0.213      0            19.8 
23 mu_0       0.5      1.36     0.560      0            10.2 
24 mu_0       0.6      1.19     0.990      0             4.92
25 mu_0       0.7      1.08     0.964      0             5.56
26 mu_0       0.8      1.17     0.830      0            20.9 
27 mu_0       0.9      1.38     0.240      0            34.4 
[1] "Total run time was 114.587 seconds"
