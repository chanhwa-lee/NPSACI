
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1297"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  8  4  6  7  3 10  9  4  4  7  4  5  4 12  9 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04111 0.36439 0.60836 1.00000 4.00000 
[1] "event indicator table: "

  0   1 
783 514 
[1] "treatment indicator table: "

  0   1 
439 858 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 650
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 647
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 710.874 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.326 0.107 
 2 mu         0.1   0.2 0.452 0.140 
 3 mu         0.1   0.3 0.454 0.152 
 4 mu         0.1   0.4 0.458 0.158 
 5 mu         0.1   0.5 0.456 0.171 
 6 mu         0.2   0.1 0.297 0.0720
 7 mu         0.2   0.2 0.420 0.100 
 8 mu         0.2   0.3 0.427 0.108 
 9 mu         0.2   0.4 0.435 0.111 
10 mu         0.2   0.5 0.436 0.123 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      0.581       0.0658 0.000000816     18.6 
 2 mu         0.2      0.833       0.399  0.000623        15.7 
 3 mu         0.3      0.928       0.725  0.0182           7.71
 4 mu         0.4      0.958       0.938  0.130            3.11
 5 mu         0.5      0.975       0.988  0.410            1.76
 6 mu         0.6      0.988       0.995  0.745            1.12
 7 mu         0.7      0.997       1      0.916            1.08
 8 mu         0.8      0.999       1      0.637            1.35
 9 mu         0.9      0.981       0.996  0.139            2.19
10 mu_1       0.1      0.799       0.229  0.00000451      18.9 
11 mu_1       0.2      0.927       0.639  0.00174         13.3 
12 mu_1       0.3      0.963       0.883  0.0343           4.77
13 mu_1       0.4      0.973       0.995  0.189            2.71
14 mu_1       0.5      0.981       0.999  0.496            1.46
15 mu_1       0.6      0.991       0.998  0.803            1.08
16 mu_1       0.7      0.999       1      0.881            1.10
17 mu_1       0.8      0.999       1      0.590            1.41
18 mu_1       0.9      0.978       0.997  0.120            2.31
19 mu_0       0.1      0.557       0.0476 0.000000406     18.9 
20 mu_0       0.2      0.810       0.333  0.000345        16.3 
21 mu_0       0.3      0.913       0.646  0.0113           8.97
22 mu_0       0.4      0.949       0.901  0.0914           3.38
23 mu_0       0.5      0.969       0.993  0.324            2.06
24 mu_0       0.6      0.984       0.997  0.659            1.20
25 mu_0       0.7      0.993       1      0.856            1.07
26 mu_0       0.8      1.00        1      0.825            1.13
27 mu_0       0.9      1.01        1      0.313            1.70
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       3.65   0.0000124   6.71e-15    353.  
 2 mu         0.2       5.11   0.00166     1.39e- 9    489.  
 3 mu         0.3       3.68   0.0372      1.57e- 6    330.  
 4 mu         0.4       2.08   0.205       2.05e- 4    147.  
 5 mu         0.5       1.30   0.637       7.90e- 3     44.4 
 6 mu         0.6       1.11   1.02        1.10e- 1      8.59
 7 mu         0.7       1.07   1.05        2.78e- 1      2.39
 8 mu         0.8       1.10   0.606       1.40e- 2     11.1 
 9 mu         0.9       1.19   0.0863      3.52e- 5     36.6 
10 mu_1       0.1       6.69   0.000107    6.04e-14    641.  
11 mu_1       0.2       4.75   0.00619     6.25e- 9    444.  
12 mu_1       0.3       2.48   0.0837      4.71e- 6    200.  
13 mu_1       0.4       1.38   0.350       4.61e- 4     66.7 
14 mu_1       0.5       1.10   0.860       1.42e- 2     16.2 
15 mu_1       0.6       1.08   1.08        1.56e- 1      3.14
16 mu_1       0.7       1.06   1.02        1.40e- 1      2.96
17 mu_1       0.8       1.10   0.481       6.78e- 3     13.1 
18 mu_1       0.9       1.18   0.0624      1.49e- 5     38.3 
19 mu_0       0.1       3.32   0.00000322  0           321.  
20 mu_0       0.2       5.20   0.000705    0           500.  
21 mu_0       0.3       4.20   0.0182      0           386.  
22 mu_0       0.4       2.54   0.126       0           200.  
23 mu_0       0.5       1.51   0.430       0            72.7 
24 mu_0       0.6       1.16   0.867       0            17.6 
25 mu_0       0.7       1.09   1.09        0             2.67
26 mu_0       0.8       1.08   1.04        0             4.41
27 mu_0       0.9       1.27   0.295       0            21.5 
[1] "Total run time was 722.047 seconds"
