
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1290"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  2  4  9  7  7  2  9  5 10  6 10  4  6  6  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04537 0.36371 0.60912 1.00000 4.56201 
[1] "event indicator table: "

  0   1 
783 507 
[1] "treatment indicator table: "

  0   1 
433 857 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 652
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 5"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 638
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 44"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 126.284 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.292 0.0764
 2 mu         0.1   0.2 0.416 0.0846
 3 mu         0.1   0.3 0.429 0.0938
 4 mu         0.1   0.4 0.444 0.106 
 5 mu         0.1   0.5 0.539 0.108 
 6 mu         0.2   0.1 0.261 0.0494
 7 mu         0.2   0.2 0.377 0.0491
 8 mu         0.2   0.3 0.395 0.0537
 9 mu         0.2   0.4 0.413 0.0639
10 mu         0.2   0.5 0.500 0.0599
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.780        0.126 0.0000348     16.1 
 2 mu         0.2      0.889        0.559 0.00464        6.39
 3 mu         0.3      0.953        0.897 0.0569         2.14
 4 mu         0.4      0.994        1     0.248          1.72
 5 mu         0.5      1.01         1.01  0.583          1.30
 6 mu         0.6      1.00         1     0.847          1.13
 7 mu         0.7      0.994        1.00  0.892          1.08
 8 mu         0.8      0.980        0.983 0.568          1.50
 9 mu         0.9      0.958        0.975 0.109          2.72
10 mu_1       0.1      0.929        0.349 0.000179      10.8 
11 mu_1       0.2      0.939        0.860 0.0123         3.30
12 mu_1       0.3      0.986        0.996 0.104          1.99
13 mu_1       0.4      1.01         1.00  0.352          1.53
14 mu_1       0.5      1.01         1.01  0.695          1.23
15 mu_1       0.6      1.00         1.00  0.856          1.11
16 mu_1       0.7      0.992        1     0.860          1.09
17 mu_1       0.8      0.977        0.976 0.515          1.61
18 mu_1       0.9      0.956        0.970 0.0924         2.83
19 mu_0       0.1      0.764        0.102 0.0000187     16.7 
20 mu_0       0.2      0.876        0.481 0.00272        7.38
21 mu_0       0.3      0.939        0.871 0.0368         2.44
22 mu_0       0.4      0.986        1     0.178          1.84
23 mu_0       0.5      1.00         1.00  0.470          1.42
24 mu_0       0.6      1.01         1.01  0.807          1.15
25 mu_0       0.7      1.00         1     0.873          1.10
26 mu_0       0.8      0.988        1     0.779          1.12
27 mu_0       0.9      0.971        0.975 0.258          1.70
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.143   0.00000914  5.76e-13     12.4 
 2 mu         0.2      0.311   0.00176     2.65e- 8     12.2 
 3 mu         0.3      0.620   0.0285      1.07e- 5     19.2 
 4 mu         0.4      0.886   0.160       5.87e- 4     20.2 
 5 mu         0.5      1.00    0.504       1.16e- 2     11.9 
 6 mu         0.6      1.05    0.968       1.14e- 1      3.99
 7 mu         0.7      1.11    1.06        1.02e- 1      2.43
 8 mu         0.8      1.14    0.701       3.01e- 3      7.48
 9 mu         0.9      1.10    0.133       3.36e- 6     19.0 
10 mu_1       0.1      0.251   0.0000600   4.85e-12     17.7 
11 mu_1       0.2      0.462   0.00620     1.12e- 7     15.0 
12 mu_1       0.3      0.784   0.0663      3.14e- 5     22.8 
13 mu_1       0.4      0.974   0.289       1.29e- 3     18.0 
14 mu_1       0.5      1.04    0.666       2.04e- 2      8.53
15 mu_1       0.6      1.08    1.06        1.36e- 1      2.37
16 mu_1       0.7      1.14    1.11        2.42e- 2      3.37
17 mu_1       0.8      1.15    0.593       1.47e- 3      8.69
18 mu_1       0.9      1.11    0.101       1.45e- 6     19.7 
19 mu_0       0.1      0.131   0.00000192  0            11.8 
20 mu_0       0.2      0.274   0.000503    0            13.1 
21 mu_0       0.3      0.550   0.0104      0            17.6 
22 mu_0       0.4      0.827   0.0781      0            21.6 
23 mu_0       0.5      0.964   0.343       0            15.3 
24 mu_0       0.6      1.01    0.813       0             6.41
25 mu_0       0.7      1.06    1.12        0             2.32
26 mu_0       0.8      1.09    1.12        0             3.84
27 mu_0       0.9      1.03    0.337       0            12.6 
[1] "Total run time was 129.38 seconds"
