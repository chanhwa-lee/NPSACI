
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1209"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 8  9  8  7  6  5  6  3  2  9  4  9  9  4  4  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.05462 0.34188 0.60965 0.99919 7.00000 
[1] "event indicator table: "

  0   1 
703 506 
[1] "treatment indicator table: "

  0   1 
434 775 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 578
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 6"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 631
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 171.557 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.267 0.0634
 2 mu         0.1   0.2 0.354 0.0840
 3 mu         0.1   0.3 0.449 0.0931
 4 mu         0.1   0.4 0.479 0.107 
 5 mu         0.1   0.5 0.527 0.118 
 6 mu         0.2   0.1 0.253 0.0542
 7 mu         0.2   0.2 0.347 0.0776
 8 mu         0.2   0.3 0.425 0.0818
 9 mu         0.2   0.4 0.462 0.0915
10 mu         0.2   0.5 0.501 0.102 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.758        0.207 0.0000382      7.76
 2 mu         0.2      1.08         0.649 0.00748       16.6 
 3 mu         0.3      1.09         0.973 0.0980        10.4 
 4 mu         0.4      1.03         1     0.394          3.67
 5 mu         0.5      1.00         1     0.710          1.44
 6 mu         0.6      0.997        1     0.867          1.12
 7 mu         0.7      0.991        1     0.830          1.16
 8 mu         0.8      0.990        1     0.612          1.44
 9 mu         0.9      1.03         1     0.244          4.54
10 mu_1       0.1      0.986        0.517 0.000177      13.5 
11 mu_1       0.2      1.13         0.901 0.0179        16.7 
12 mu_1       0.3      1.06         1     0.162          7.37
13 mu_1       0.4      1.01         1     0.511          2.41
14 mu_1       0.5      1.00         1     0.770          1.26
15 mu_1       0.6      0.996        1     0.896          1.08
16 mu_1       0.7      0.990        1     0.806          1.18
17 mu_1       0.8      0.991        1     0.582          1.57
18 mu_1       0.9      1.04         1     0.222          4.97
19 mu_0       0.1      0.733        0.170 0.0000227      8.61
20 mu_0       0.2      1.07         0.556 0.00488       16.5 
21 mu_0       0.3      1.10         0.929 0.0706        11.8 
22 mu_0       0.4      1.04         1     0.316          4.50
23 mu_0       0.5      1.01         1     0.650          1.66
24 mu_0       0.6      0.999        1     0.822          1.18
25 mu_0       0.7      0.994        1     0.872          1.09
26 mu_0       0.8      0.986        1     0.736          1.26
27 mu_0       0.9      0.986        1     0.441          1.91
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.108    0.0000387   3.95e-11      5.50
 2 mu         0.2     0.404    0.00401     7.19e- 7     10.9 
 3 mu         0.3     0.739    0.0527      1.61e- 4     18.9 
 4 mu         0.4     0.931    0.238       5.46e- 3     17.4 
 5 mu         0.5     0.988    0.646       5.75e- 2      9.89
 6 mu         0.6     1.01     1.02        3.15e- 1      3.44
 7 mu         0.7     1.02     0.990       1.16e- 1      2.85
 8 mu         0.8     0.917    0.531       3.94e- 3      4.80
 9 mu         0.9     0.709    0.0870      6.93e- 6      7.68
10 mu_1       0.1     0.326    0.000330    2.96e-10     13.8 
11 mu_1       0.2     0.679    0.0143      2.69e- 6     18.1 
12 mu_1       0.3     0.916    0.112       4.03e- 4     21.0 
13 mu_1       0.4     0.988    0.424       1.05e- 2     14.5 
14 mu_1       0.5     1.00     0.866       9.34e- 2      6.60
15 mu_1       0.6     1.03     1.04        4.03e- 1      1.91
16 mu_1       0.7     1.03     0.891       5.54e- 2      3.31
17 mu_1       0.8     0.912    0.441       1.64e- 3      4.87
18 mu_1       0.9     0.709    0.0585      2.57e- 6      8.53
19 mu_0       0.1     0.0840   0.00000661  0             4.58
20 mu_0       0.2     0.335    0.00159     0            10.2 
21 mu_0       0.3     0.663    0.0236      0            18.0 
22 mu_0       0.4     0.893    0.122       0            19.4 
23 mu_0       0.5     0.976    0.418       0            13.2 
24 mu_0       0.6     0.990    0.894       0             5.74
25 mu_0       0.7     0.996    1.03        0             1.86
26 mu_0       0.8     0.934    0.858       0             4.50
27 mu_0       0.9     0.708    0.206       0             5.20
[1] "Total run time was 175.384 seconds"
