
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1263"
[1] "cluster size dist'n: "

 5  6  7  9 10 11 12 13 14 15 16 17 18 19 20 
 8 14  4  7  3  5  6  7  2  6  8  9  7  5  9 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03303 0.32075 0.58674 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
758 505 
[1] "treatment indicator table: "

  0   1 
469 794 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 657
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 80"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 606
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 107.413 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.588 0.158 
 2 mu         0.1   0.2 0.616 0.132 
 3 mu         0.1   0.3 0.845 0.213 
 4 mu         0.1   0.4 0.867 0.188 
 5 mu         0.1   0.5 0.867 0.184 
 6 mu         0.2   0.1 0.480 0.0791
 7 mu         0.2   0.2 0.538 0.0748
 8 mu         0.2   0.3 0.692 0.101 
 9 mu         0.2   0.4 0.755 0.100 
10 mu         0.2   0.5 0.759 0.0978
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.607        0.200  0.000541      7.35
 2 mu         0.2      0.823        0.661  0.0235        4.40
 3 mu         0.3      0.927        0.947  0.125         2.80
 4 mu         0.4      0.977        1      0.341         1.79
 5 mu         0.5      0.995        1      0.680         1.27
 6 mu         0.6      0.997        1      0.907         1.11
 7 mu         0.7      1.00         1      0.779         1.16
 8 mu         0.8      1.01         1      0.602         1.48
 9 mu         0.9      0.992        1      0.209         2.57
10 mu_1       0.1      0.786        0.494  0.00233       6.14
11 mu_1       0.2      0.895        0.886  0.0460        3.65
12 mu_1       0.3      0.954        1      0.181         2.27
13 mu_1       0.4      0.988        1      0.431         1.51
14 mu_1       0.5      0.998        1      0.777         1.23
15 mu_1       0.6      0.998        1      0.905         1.08
16 mu_1       0.7      1.00         1      0.752         1.17
17 mu_1       0.8      1.01         1      0.556         1.58
18 mu_1       0.9      0.987        1      0.186         2.63
19 mu_0       0.1      0.587        0.167  0.000333      7.49
20 mu_0       0.2      0.805        0.602  0.0178        4.84
21 mu_0       0.3      0.916        0.896  0.100         3.02
22 mu_0       0.4      0.970        1      0.282         1.98
23 mu_0       0.5      0.993        1      0.583         1.38
24 mu_0       0.6      0.996        1      0.867         1.17
25 mu_0       0.7      0.996        1      0.843         1.14
26 mu_0       0.8      1.01         1      0.718         1.25
27 mu_0       0.9      1.03         1      0.412         1.99
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.292    0.0000391  8.33e-16     19.8 
 2 mu         0.2      0.660    0.00537    3.88e-10     19.5 
 3 mu         0.3      0.951    0.0777     7.53e- 7     28.4 
 4 mu         0.4      0.970    0.290      1.53e- 4     21.5 
 5 mu         0.5      1.00     0.763      8.02e- 3      7.66
 6 mu         0.6      1.09     1.06       1.37e- 1      1.95
 7 mu         0.7      1.06     1.02       2.93e- 2      3.16
 8 mu         0.8      1.08     0.402      2.94e- 4     26.7 
 9 mu         0.9      1.85     0.0500     6.46e- 8    125.  
10 mu_1       0.1      0.539    0.000255   7.91e-15     28.2 
11 mu_1       0.2      0.862    0.0163     1.84e- 9     26.7 
12 mu_1       0.3      1.02     0.162      2.38e- 6     29.8 
13 mu_1       0.4      0.991    0.492      3.62e- 4     17.0 
14 mu_1       0.5      1.05     0.965      1.44e- 2      4.84
15 mu_1       0.6      1.11     1.13       2.05e- 1      1.78
16 mu_1       0.7      1.04     0.945      1.16e- 2      4.29
17 mu_1       0.8      1.10     0.308      1.02e- 4     31.7 
18 mu_1       0.9      1.90     0.0292     1.99e- 8    132.  
19 mu_0       0.1      0.265    0.0000159  0            18.8 
20 mu_0       0.2      0.609    0.00249    0            20.9 
21 mu_0       0.3      0.923    0.0299     0            27.7 
22 mu_0       0.4      0.957    0.176      0            24.5 
23 mu_0       0.5      0.954    0.540      0            10.5 
24 mu_0       0.6      1.06     1.02       0             2.62
25 mu_0       0.7      1.11     1.15       0             2.05
26 mu_0       0.8      1.03     0.845      0             6.67
27 mu_0       0.9      1.44     0.198      0            62.5 
[1] "Total run time was 110.214 seconds"
