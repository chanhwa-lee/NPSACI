
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1259"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 2  7  8  6  7  9 11  4  1  4  6  9  8  6  6  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04687 0.36956 0.62722 1.00000 4.47391 
[1] "event indicator table: "

  0   1 
735 524 
[1] "treatment indicator table: "

  0   1 
446 813 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 644
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 615
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 102.307 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.521 0.153
 2 mu         0.1   0.2 0.650 0.194
 3 mu         0.1   0.3 0.672 0.193
 4 mu         0.1   0.4 0.724 0.203
 5 mu         0.1   0.5 0.753 0.210
 6 mu         0.2   0.1 0.471 0.125
 7 mu         0.2   0.2 0.596 0.164
 8 mu         0.2   0.3 0.620 0.163
 9 mu         0.2   0.4 0.664 0.167
10 mu         0.2   0.5 0.708 0.175
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.689       0.0924  0.000265     17.5 
 2 mu         0.2      0.935       0.486   0.0206       24.1 
 3 mu         0.3      0.991       0.787   0.138        11.5 
 4 mu         0.4      0.996       0.942   0.393         3.36
 5 mu         0.5      0.998       1       0.693         1.61
 6 mu         0.6      1.00        1       0.892         1.14
 7 mu         0.7      1.00        1       0.867         1.20
 8 mu         0.8      1.01        0.999   0.529         1.62
 9 mu         0.9      1.05        0.972   0.169         4.30
10 mu_1       0.1      0.845       0.306   0.00119      29.2 
11 mu_1       0.2      0.990       0.731   0.0472       20.3 
12 mu_1       0.3      0.999       0.889   0.222         6.78
13 mu_1       0.4      0.998       0.976   0.506         2.39
14 mu_1       0.5      1.00        1       0.776         1.39
15 mu_1       0.6      1.00        1       0.939         1.12
16 mu_1       0.7      1.00        1       0.819         1.26
17 mu_1       0.8      1.01        0.997   0.480         1.68
18 mu_1       0.9      1.05        0.965   0.151         4.64
19 mu_0       0.1      0.672       0.0698  0.000163     16.2 
20 mu_0       0.2      0.921       0.433   0.0139       25.1 
21 mu_0       0.3      0.988       0.724   0.103        13.5 
22 mu_0       0.4      0.994       0.909   0.318         4.34
23 mu_0       0.5      0.996       0.990   0.607         1.83
24 mu_0       0.6      1.00        1       0.821         1.21
25 mu_0       0.7      1.01        1.00    0.920         1.10
26 mu_0       0.8      1.01        1       0.725         1.41
27 mu_0       0.9      1.02        1       0.330         2.04
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.21     0.0000922  2.94e-13    116.  
 2 mu         0.2      1.24     0.00541    2.71e- 8    102.  
 3 mu         0.3      1.09     0.0505     1.79e- 5     60.1 
 4 mu         0.4      1.03     0.237      1.50e- 3     27.2 
 5 mu         0.5      1.03     0.622      3.84e- 2      9.50
 6 mu         0.6      1.04     0.988      2.78e- 1      2.39
 7 mu         0.7      1.03     0.977      2.06e- 1      2.76
 8 mu         0.8      0.922    0.470      7.97e- 3      7.26
 9 mu         0.9      0.613    0.0679     1.58e- 5     12.5 
10 mu_1       0.1      1.62     0.000570   2.50e-12    145.  
11 mu_1       0.2      1.05     0.0203     1.15e- 7     63.7 
12 mu_1       0.3      0.934    0.118      5.06e- 5     25.0 
13 mu_1       0.4      0.965    0.406      3.18e- 3      8.51
14 mu_1       0.5      1.01     0.813      6.54e- 2      3.40
15 mu_1       0.6      1.03     1.03       3.51e- 1      1.98
16 mu_1       0.7      1.02     0.862      6.65e- 2      3.94
17 mu_1       0.8      0.899    0.362      3.73e- 3      7.72
18 mu_1       0.9      0.593    0.0483     6.57e- 6     13.8 
19 mu_0       0.1      1.17     0.0000264  0           113.  
20 mu_0       0.2      1.29     0.00160    0           112.  
21 mu_0       0.3      1.16     0.0272     0            75.1 
22 mu_0       0.4      1.08     0.129      0            39.7 
23 mu_0       0.5      1.05     0.425      0            16.6 
24 mu_0       0.6      1.05     0.815      0             5.23
25 mu_0       0.7      1.06     1.08       0             2.01
26 mu_0       0.8      1.02     0.862      0             5.45
27 mu_0       0.9      0.800    0.219      0            10.1 
[1] "Total run time was 105.71 seconds"
