
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1363"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 2  3  5  5  5  5 11  5  9  4  4  8  9 11  8  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02439 0.31985 0.58213 0.99961 4.14892 
[1] "event indicator table: "

  0   1 
820 543 
[1] "treatment indicator table: "

  0   1 
485 878 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 673
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 690
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 92.358 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.423 0.212
 2 mu         0.1   0.2 0.487 0.258
 3 mu         0.1   0.3 0.525 0.289
 4 mu         0.1   0.4 0.628 0.312
 5 mu         0.1   0.5 0.672 0.330
 6 mu         0.2   0.1 0.397 0.158
 7 mu         0.2   0.2 0.465 0.193
 8 mu         0.2   0.3 0.517 0.220
 9 mu         0.2   0.4 0.615 0.238
10 mu         0.2   0.5 0.657 0.248
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      2.26        0.0916 0.0000422    176.  
 2 mu         0.2      1.59        0.471  0.00743       76.4 
 3 mu         0.3      1.16        0.795  0.0909        20.9 
 4 mu         0.4      1.03        0.977  0.357          4.66
 5 mu         0.5      1.01        1      0.675          1.52
 6 mu         0.6      1.00        1      0.871          1.15
 7 mu         0.7      0.996       1.00   0.854          1.21
 8 mu         0.8      0.977       0.977  0.678          1.33
 9 mu         0.9      0.956       0.887  0.352          5.62
10 mu_1       0.1      2.06        0.274  0.000193     126.  
11 mu_1       0.2      1.22        0.701  0.0175        27.8 
12 mu_1       0.3      1.04        0.923  0.149          5.77
13 mu_1       0.4      1.00        1      0.464          2.17
14 mu_1       0.5      1.00        1      0.736          1.23
15 mu_1       0.6      1.00        1      0.912          1.11
16 mu_1       0.7      0.994       1      0.807          1.24
17 mu_1       0.8      0.974       0.976  0.646          1.43
18 mu_1       0.9      0.956       0.860  0.321          6.16
19 mu_0       0.1      2.28        0.0724 0.0000254    181.  
20 mu_0       0.2      1.68        0.402  0.00491       88.6 
21 mu_0       0.3      1.21        0.726  0.0661        27.4 
22 mu_0       0.4      1.04        0.954  0.286          6.61
23 mu_0       0.5      1.01        1      0.613          1.89
24 mu_0       0.6      1.01        0.996  0.809          1.22
25 mu_0       0.7      1.00        1      0.919          1.14
26 mu_0       0.8      0.989       0.997  0.769          1.23
27 mu_0       0.9      0.962       0.966  0.557          1.48
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.151   0.0000114   3.56e-12     12.6 
 2 mu         0.2      0.602   0.00135     1.46e- 7     34.9 
 3 mu         0.3      1.12    0.0314      5.61e- 5     35.4 
 4 mu         0.4      1.32    0.163       3.02e- 3     25.3 
 5 mu         0.5      1.19    0.562       5.18e- 2     11.3 
 6 mu         0.6      1.08    0.945       2.82e- 1      2.85
 7 mu         0.7      1.05    1.01        1.56e- 1      2.68
 8 mu         0.8      0.934   0.593       2.03e- 3      6.34
 9 mu         0.9      0.603   0.0688      5.67e- 7     11.6 
10 mu_1       0.1      0.406   0.0000754   2.85e-11     31.5 
11 mu_1       0.2      0.918   0.00506     5.83e- 7     43.6 
12 mu_1       0.3      1.31    0.0642      1.50e- 4     29.5 
13 mu_1       0.4      1.32    0.302       6.04e- 3     22.2 
14 mu_1       0.5      1.16    0.761       8.28e- 2      7.91
15 mu_1       0.6      1.08    0.986       4.71e- 1      2.40
16 mu_1       0.7      1.05    0.987       7.78e- 2      3.19
17 mu_1       0.8      0.907   0.510       8.90e- 4      7.27
18 mu_1       0.9      0.576   0.0511      2.20e- 7     11.8 
19 mu_0       0.1      0.122   0.00000289  0            10.5 
20 mu_0       0.2      0.523   0.000491    0            32.7 
21 mu_0       0.3      1.04    0.0138      0            38.0 
22 mu_0       0.4      1.31    0.0761      0            27.5 
23 mu_0       0.5      1.23    0.335       0            14.7 
24 mu_0       0.6      1.10    0.866       0             4.27
25 mu_0       0.7      1.07    1.05        0             2.54
26 mu_0       0.8      1.04    0.978       0             4.91
27 mu_0       0.9      0.841   0.219       0             9.66
[1] "Total run time was 95.187 seconds"
