
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1231"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 7  7  6  6  7  3 10  6  7  8  6  6  3  3  5 10 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03352 0.32916 0.62028 1.00000 6.24619 
[1] "event indicator table: "

  0   1 
751 480 
[1] "treatment indicator table: "

  0   1 
428 803 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 593
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 638
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 22"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 254.285 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.317 0.188
 2 mu         0.1   0.2 0.501 0.227
 3 mu         0.1   0.3 0.584 0.256
 4 mu         0.1   0.4 0.645 0.273
 5 mu         0.1   0.5 0.646 0.283
 6 mu         0.2   0.1 0.339 0.169
 7 mu         0.2   0.2 0.439 0.194
 8 mu         0.2   0.3 0.531 0.224
 9 mu         0.2   0.4 0.603 0.251
10 mu         0.2   0.5 0.611 0.260
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      5.53        0.0703 0.00000531    511.  
 2 mu         0.2      2.93        0.382  0.00199       221.  
 3 mu         0.3      1.45        0.695  0.0385         58.7 
 4 mu         0.4      1.04        0.915  0.209          11.0 
 5 mu         0.5      0.991       0.989  0.542           3.26
 6 mu         0.6      0.991       0.995  0.755           1.67
 7 mu         0.7      0.986       1.00   0.726           1.25
 8 mu         0.8      0.997       1      0.446           2.55
 9 mu         0.9      1.14        0.992  0.140           9.15
10 mu_1       0.1      4.26        0.234  0.0000269     365.  
11 mu_1       0.2      1.64        0.629  0.00514        79.1 
12 mu_1       0.3      1.07        0.860  0.0680         14.3 
13 mu_1       0.4      0.986       0.969  0.288           4.42
14 mu_1       0.5      0.991       0.997  0.634           2.69
15 mu_1       0.6      0.991       1      0.782           1.38
16 mu_1       0.7      0.985       0.997  0.677           1.31
17 mu_1       0.8      1.00        0.997  0.401           2.89
18 mu_1       0.9      1.15        1      0.122          10.0 
19 mu_0       0.1      5.67        0.0511 0.00000291    528.  
20 mu_0       0.2      3.25        0.317  0.00120       257.  
21 mu_0       0.3      1.62        0.636  0.0258         77.7 
22 mu_0       0.4      1.08        0.854  0.156          16.7 
23 mu_0       0.5      0.991       0.964  0.450           3.83
24 mu_0       0.6      0.990       0.996  0.694           2.09
25 mu_0       0.7      0.989       1      0.756           1.28
26 mu_0       0.8      0.975       0.978  0.519           1.48
27 mu_0       0.9      0.990       0.973  0.167           5.08
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.738   0.0000474   1.14e-13     71.7 
 2 mu         0.2      1.43    0.00465     1.05e- 8    126.  
 3 mu         0.3      1.66    0.0554      6.93e- 6    111.  
 4 mu         0.4      1.69    0.231       3.38e- 4     67.1 
 5 mu         0.5      1.63    0.686       6.40e- 3     29.3 
 6 mu         0.6      1.47    1.09        6.57e- 2     10.0 
 7 mu         0.7      1.28    1.06        7.89e- 2      7.85
 8 mu         0.8      1.15    0.596       2.03e- 3     13.1 
 9 mu         0.9      0.941   0.0816      2.01e- 6     13.1 
10 mu_1       0.1      1.68    0.000337    9.69e-13    159.  
11 mu_1       0.2      1.77    0.0173      4.46e- 8    140.  
12 mu_1       0.3      1.65    0.127       1.96e- 5     82.3 
13 mu_1       0.4      1.60    0.456       7.88e- 4     37.3 
14 mu_1       0.5      1.55    0.918       1.19e- 2     13.0 
15 mu_1       0.6      1.41    1.06        1.02e- 1      9.21
16 mu_1       0.7      1.25    0.960       3.98e- 2      8.97
17 mu_1       0.8      1.14    0.492       8.96e- 4     13.1 
18 mu_1       0.9      0.933   0.0557      7.89e- 7     14.5 
19 mu_0       0.1      0.633   0.00000804  0            62.0 
20 mu_0       0.2      1.34    0.00139     0           122.  
21 mu_0       0.3      1.66    0.0230      0           123.  
22 mu_0       0.4      1.74    0.133       0            87.0 
23 mu_0       0.5      1.71    0.433       0            45.5 
24 mu_0       0.6      1.56    0.956       0            17.2 
25 mu_0       0.7      1.33    1.04        0             6.17
26 mu_0       0.8      1.16    0.778       0            13.1 
27 mu_0       0.9      1.01    0.253       0            10.8 
[1] "Total run time was 261.754 seconds"
