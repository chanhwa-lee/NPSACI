
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1294"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 7  9  5  6  2  2 10  5  4  4  5 12  9  4  6 10 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04218 0.36813 0.61290 1.00000 4.00000 
[1] "event indicator table: "

  0   1 
766 528 
[1] "treatment indicator table: "

  0   1 
451 843 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 664
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 70"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 630
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 97.047 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.352 0.0959
 2 mu         0.1   0.2 0.602 0.247 
 3 mu         0.1   0.3 0.632 0.224 
 4 mu         0.1   0.4 0.628 0.208 
 5 mu         0.1   0.5 0.613 0.204 
 6 mu         0.2   0.1 0.305 0.0479
 7 mu         0.2   0.2 0.460 0.139 
 8 mu         0.2   0.3 0.512 0.121 
 9 mu         0.2   0.4 0.518 0.110 
10 mu         0.2   0.5 0.520 0.109 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.405       0.0398  0.000230     10.1 
 2 mu         0.2      0.582       0.317   0.0132        4.23
 3 mu         0.3      0.789       0.716   0.0827        3.64
 4 mu         0.4      0.934       0.970   0.252         2.16
 5 mu         0.5      0.998       0.996   0.530         1.41
 6 mu         0.6      1.01        1       0.838         1.18
 7 mu         0.7      0.994       1       0.846         1.18
 8 mu         0.8      0.975       0.999   0.571         1.51
 9 mu         0.9      0.946       0.925   0.118         4.05
10 mu_1       0.1      0.464       0.146   0.000986      2.47
11 mu_1       0.2      0.689       0.554   0.0285        4.12
12 mu_1       0.3      0.869       0.876   0.130         3.24
13 mu_1       0.4      0.972       0.994   0.332         1.76
14 mu_1       0.5      1.01        1       0.622         1.35
15 mu_1       0.6      1.01        1.00    0.903         1.14
16 mu_1       0.7      0.991       1       0.801         1.23
17 mu_1       0.8      0.972       1       0.524         1.63
18 mu_1       0.9      0.943       0.918   0.102         4.23
19 mu_0       0.1      0.398       0.0274  0.000146     11.2 
20 mu_0       0.2      0.555       0.253   0.00937       5.14
21 mu_0       0.3      0.754       0.640   0.0626        3.81
22 mu_0       0.4      0.908       0.918   0.198         2.42
23 mu_0       0.5      0.989       0.996   0.437         1.49
24 mu_0       0.6      1.01        1       0.741         1.24
25 mu_0       0.7      1.00        1       0.911         1.09
26 mu_0       0.8      0.986       1       0.716         1.35
27 mu_0       0.9      0.973       0.991   0.266         2.40
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.107    0.00000642  5.33e-12      5.02
 2 mu         0.2     0.240    0.00173     2.18e- 7      8.16
 3 mu         0.3     0.440    0.0317      8.39e- 5      9.41
 4 mu         0.4     0.723    0.213       3.23e- 3      7.74
 5 mu         0.5     0.970    0.578       4.25e- 2      4.86
 6 mu         0.6     1.07     1.04        2.79e- 1      2.85
 7 mu         0.7     1.08     1.03        3.07e- 1      3.31
 8 mu         0.8     1.01     0.543       2.32e- 2      5.25
 9 mu         0.9     0.725    0.0797      7.47e- 5      8.80
10 mu_1       0.1     0.284    0.0000510   4.26e-11     10.5 
11 mu_1       0.2     0.389    0.00525     8.72e- 7     11.7 
12 mu_1       0.3     0.584    0.0676      2.24e- 4      8.96
13 mu_1       0.4     0.841    0.323       6.64e- 3      5.53
14 mu_1       0.5     1.02     0.784       6.99e- 2      3.95
15 mu_1       0.6     1.08     1.06        3.83e- 1      2.37
16 mu_1       0.7     1.08     0.985       1.24e- 1      3.54
17 mu_1       0.8     0.995    0.431       1.36e- 2      5.83
18 mu_1       0.9     0.698    0.0541      3.93e- 5      9.78
19 mu_0       0.1     0.0872   0.00000170  0             4.46
20 mu_0       0.2     0.203    0.000610    0             7.28
21 mu_0       0.3     0.378    0.0146      0             9.60
22 mu_0       0.4     0.645    0.0911      0             9.22
23 mu_0       0.5     0.916    0.376       0             6.94
24 mu_0       0.6     1.06     0.919       0             4.10
25 mu_0       0.7     1.07     1.05        0             2.75
26 mu_0       0.8     1.06     0.933       0             4.41
27 mu_0       0.9     0.964    0.278       0             7.48
[1] "Total run time was 99.531 seconds"
