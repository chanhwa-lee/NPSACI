
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1317"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 3  3  5  6 10  9  4  8  6  3  5  5  9  8 11  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.05848 0.38448 0.63570 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
792 525 
[1] "treatment indicator table: "

  0   1 
485 832 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 655
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 662
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 193.849 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.367 0.0935
 2 mu         0.1   0.2 0.493 0.157 
 3 mu         0.1   0.3 0.531 0.158 
 4 mu         0.1   0.4 0.552 0.157 
 5 mu         0.1   0.5 0.790 0.211 
 6 mu         0.2   0.1 0.343 0.0645
 7 mu         0.2   0.2 0.465 0.106 
 8 mu         0.2   0.3 0.500 0.104 
 9 mu         0.2   0.4 0.544 0.100 
10 mu         0.2   0.5 0.671 0.113 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.739        0.139  0.000344      6.49
 2 mu         0.2      0.878        0.542  0.0299        5.09
 3 mu         0.3      0.945        0.867  0.182         2.88
 4 mu         0.4      0.972        0.964  0.438         1.64
 5 mu         0.5      0.990        0.998  0.715         1.28
 6 mu         0.6      1.00         1      0.888         1.09
 7 mu         0.7      1.00         1.00   0.781         1.18
 8 mu         0.8      1.01         1      0.565         1.47
 9 mu         0.9      1.02         0.949  0.177         3.28
10 mu_1       0.1      0.734        0.348  0.00148       6.53
11 mu_1       0.2      0.895        0.777  0.0660        4.10
12 mu_1       0.3      0.952        0.947  0.275         2.25
13 mu_1       0.4      0.978        0.996  0.544         1.45
14 mu_1       0.5      0.994        0.995  0.797         1.24
15 mu_1       0.6      1.00         1.00   0.908         1.08
16 mu_1       0.7      1.00         1      0.737         1.23
17 mu_1       0.8      1.01         1      0.524         1.51
18 mu_1       0.9      1.02         0.943  0.158         3.53
19 mu_0       0.1      0.740        0.116  0.000218      7.13
20 mu_0       0.2      0.873        0.481  0.0209        5.34
21 mu_0       0.3      0.943        0.824  0.143         3.15
22 mu_0       0.4      0.968        0.949  0.367         1.87
23 mu_0       0.5      0.985        0.999  0.633         1.32
24 mu_0       0.6      0.998        1      0.837         1.22
25 mu_0       0.7      1.00         1      0.886         1.13
26 mu_0       0.8      1.00         1.00   0.605         1.30
27 mu_0       0.9      1.00         1      0.355         1.80
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.0226    0.0000297  8.14e-12     0.881
 2 mu         0.2     0.138     0.00370    1.18e- 7     2.20 
 3 mu         0.3     0.386     0.0473     3.03e- 5     5.86 
 4 mu         0.4     0.687     0.261      1.46e- 3     8.05 
 5 mu         0.5     0.925     0.648      2.76e- 2     5.17 
 6 mu         0.6     1.05      1.03       2.83e- 1     2.09 
 7 mu         0.7     1.04      1.02       1.90e- 1     3.75 
 8 mu         0.8     0.908     0.479      5.82e- 3     7.95 
 9 mu         0.9     0.686     0.0454     6.48e- 6    20.7  
10 mu_1       0.1     0.0863    0.000204   7.59e-11     2.94 
11 mu_1       0.2     0.282     0.0116     5.53e- 7     3.66 
12 mu_1       0.3     0.563     0.108      9.42e- 5     7.59 
13 mu_1       0.4     0.823     0.440      3.40e- 3     7.83 
14 mu_1       0.5     0.999     0.876      5.15e- 2     4.02 
15 mu_1       0.6     1.07      1.04       4.41e- 1     2.00 
16 mu_1       0.7     1.02      0.903      1.10e- 1     4.41 
17 mu_1       0.8     0.878     0.394      2.83e- 3     9.28 
18 mu_1       0.9     0.656     0.0302     2.80e- 6    21.4  
19 mu_0       0.1     0.0156    0.0000104  6.03e-13     0.652
20 mu_0       0.2     0.102     0.00151    9.87e- 9     1.83 
21 mu_0       0.3     0.310     0.0270     2.88e- 6     5.11 
22 mu_0       0.4     0.596     0.148      1.62e- 4     8.20 
23 mu_0       0.5     0.851     0.443      3.68e- 3     6.32 
24 mu_0       0.6     1.03      0.873      4.72e- 2     2.98 
25 mu_0       0.7     1.09      1.04       3.49e- 1     2.57 
26 mu_0       0.8     1.03      0.867      1.78e- 2     6.35 
27 mu_0       0.9     0.952     0.163      3.96e- 5    13.8  
[1] "Total run time was 197.071 seconds"
