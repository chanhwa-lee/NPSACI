
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1160"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 
 6  9  5  9  8  9  7  5  6  7  5  2 14  3  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02935 0.37356 0.60566 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
696 464 
[1] "treatment indicator table: "

  0   1 
442 718 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 558
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 602
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 28"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 93.148 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.361 0.0796
 2 mu         0.1   0.2 0.485 0.122 
 3 mu         0.1   0.3 0.506 0.120 
 4 mu         0.1   0.4 0.564 0.114 
 5 mu         0.1   0.5 0.594 0.111 
 6 mu         0.2   0.1 0.316 0.0506
 7 mu         0.2   0.2 0.416 0.0795
 8 mu         0.2   0.3 0.448 0.0807
 9 mu         0.2   0.4 0.542 0.0726
10 mu         0.2   0.5 0.580 0.0616
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.564        0.286  0.000363      7.36
 2 mu         0.2      0.831        0.738  0.0254        4.83
 3 mu         0.3      0.964        0.951  0.190         2.70
 4 mu         0.4      1.00         1      0.529         1.79
 5 mu         0.5      0.999        0.997  0.816         1.30
 6 mu         0.6      0.998        1      0.918         1.13
 7 mu         0.7      1.01         1.00   0.851         1.55
 8 mu         0.8      1.03         1.00   0.667         2.13
 9 mu         0.9      1.06         1      0.225         3.19
10 mu_1       0.1      0.786        0.645  0.00155       7.11
11 mu_1       0.2      0.949        0.934  0.0567        3.55
12 mu_1       0.3      1.00         1      0.295         1.70
13 mu_1       0.4      1.00         1      0.651         1.39
14 mu_1       0.5      0.998        1      0.877         1.18
15 mu_1       0.6      1.00         1      0.910         1.23
16 mu_1       0.7      1.02         1.00   0.827         1.66
17 mu_1       0.8      1.04         1      0.626         2.22
18 mu_1       0.9      1.06         1      0.198         3.43
19 mu_0       0.1      0.539        0.240  0.000231      7.93
20 mu_0       0.2      0.802        0.685  0.0176        5.14
21 mu_0       0.3      0.949        0.940  0.145         3.22
22 mu_0       0.4      0.998        1      0.447         2.17
23 mu_0       0.5      1.00         1      0.727         1.55
24 mu_0       0.6      0.994        1      0.839         1.19
25 mu_0       0.7      0.998        1      0.910         1.30
26 mu_0       0.8      1.02         1.00   0.796         1.77
27 mu_0       0.9      1.05         1.01   0.472         2.65
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.192    0.000142   3.05e-12     13.1 
 2 mu         0.2      0.390    0.0108     7.89e- 8     12.9 
 3 mu         0.3      0.639    0.0948     2.65e- 5      8.69
 4 mu         0.4      0.863    0.404      1.45e- 3      6.00
 5 mu         0.5      0.980    0.767      2.87e- 2      3.92
 6 mu         0.6      1.01     0.941      2.83e- 1      2.96
 7 mu         0.7      1.03     0.955      7.23e- 2      3.82
 8 mu         0.8      1.01     0.524      1.86e- 3      7.36
 9 mu         0.9      0.850    0.0692     1.84e- 6     13.4 
10 mu_1       0.1      0.398    0.000941   2.69e-11     18.7 
11 mu_1       0.2      0.573    0.0337     3.48e- 7      9.22
12 mu_1       0.3      0.787    0.195      7.78e- 5      7.09
13 mu_1       0.4      0.942    0.608      3.21e- 3      5.00
14 mu_1       0.5      1.00     0.867      5.07e- 2      3.39
15 mu_1       0.6      1.01     1.00       1.44e- 1      2.66
16 mu_1       0.7      1.03     0.824      2.57e- 2      4.37
17 mu_1       0.8      1.01     0.415      8.21e- 4      8.43
18 mu_1       0.9      0.838    0.0486     7.23e- 7     13.7 
19 mu_0       0.1      0.169    0.0000605  0            12.5 
20 mu_0       0.2      0.344    0.00457    0            13.8 
21 mu_0       0.3      0.575    0.0560     0            10.6 
22 mu_0       0.4      0.810    0.258      0             6.67
23 mu_0       0.5      0.959    0.565      0             5.23
24 mu_0       0.6      1.01     0.933      0             3.41
25 mu_0       0.7      1.01     1.05       0             2.55
26 mu_0       0.8      1.01     0.795      0             5.62
27 mu_0       0.9      0.960    0.220      0            11.2 
[1] "Total run time was 95.714 seconds"
