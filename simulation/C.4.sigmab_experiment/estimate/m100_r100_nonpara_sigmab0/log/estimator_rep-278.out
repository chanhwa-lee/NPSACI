
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1254"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
14  2  5  4  8  5  5  3  4  8  6  9  6 12  4  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04753 0.37029 0.64331 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
743 511 
[1] "treatment indicator table: "

  0   1 
442 812 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 651
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 603
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 90.089 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.333 0.138
 2 mu         0.1   0.2 0.424 0.154
 3 mu         0.1   0.3 0.575 0.186
 4 mu         0.1   0.4 0.605 0.199
 5 mu         0.1   0.5 0.617 0.208
 6 mu         0.2   0.1 0.311 0.118
 7 mu         0.2   0.2 0.404 0.138
 8 mu         0.2   0.3 0.537 0.164
 9 mu         0.2   0.4 0.583 0.181
10 mu         0.2   0.5 0.601 0.190
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.972       0.0877  0.000210     46.9 
 2 mu         0.2      1.37        0.486   0.0167       65.2 
 3 mu         0.3      1.17        0.841   0.123        31.2 
 4 mu         0.4      1.02        0.930   0.343         8.54
 5 mu         0.5      0.991       0.997   0.589         2.08
 6 mu         0.6      0.996       0.998   0.802         1.17
 7 mu         0.7      1.01        1.00    0.836         1.23
 8 mu         0.8      1.04        1       0.658         1.89
 9 mu         0.9      1.08        1       0.210         7.34
10 mu_1       0.1      1.42        0.246   0.000894     78.4 
11 mu_1       0.2      1.35        0.722   0.0362       55.1 
12 mu_1       0.3      1.08        0.914   0.186        18.3 
13 mu_1       0.4      0.998       0.973   0.421         4.37
14 mu_1       0.5      0.993       1       0.650         1.44
15 mu_1       0.6      1.00        1       0.842         1.16
16 mu_1       0.7      1.02        1.00    0.819         1.25
17 mu_1       0.8      1.05        1       0.620         2.09
18 mu_1       0.9      1.08        1       0.181         8.02
19 mu_0       0.1      0.922       0.0715  0.000134     43.4 
20 mu_0       0.2      1.37        0.432   0.0118       67.7 
21 mu_0       0.3      1.20        0.794   0.0959       36.7 
22 mu_0       0.4      1.03        0.926   0.290        11.3 
23 mu_0       0.5      0.990       0.996   0.527         2.76
24 mu_0       0.6      0.990       1       0.741         1.26
25 mu_0       0.7      1.00        1       0.874         1.18
26 mu_0       0.8      1.03        1.01    0.779         1.31
27 mu_0       0.9      1.08        1.02    0.472         1.75
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.374    0.0000475  3.89e-13     23.0 
 2 mu         0.2      0.871    0.00602    2.27e- 8     40.3 
 3 mu         0.3      1.07     0.0644     1.30e- 5     35.6 
 4 mu         0.4      1.14     0.280      8.68e- 4     21.5 
 5 mu         0.5      1.19     0.724      1.78e- 2      9.39
 6 mu         0.6      1.19     1.04       1.69e- 1      4.37
 7 mu         0.7      1.13     1.04       1.66e- 1      4.31
 8 mu         0.8      1.20     0.574      5.58e- 3     24.3 
 9 mu         0.9      1.47     0.102      6.99e- 6     80.1 
10 mu_1       0.1      0.904    0.000339   3.66e-12     51.1 
11 mu_1       0.2      1.14     0.0171     1.07e- 7     44.8 
12 mu_1       0.3      1.12     0.138      3.88e- 5     28.9 
13 mu_1       0.4      1.14     0.481      1.83e- 3     12.8 
14 mu_1       0.5      1.20     0.939      3.01e- 2      5.17
15 mu_1       0.6      1.18     1.06       2.37e- 1      3.88
16 mu_1       0.7      1.13     1.03       7.66e- 2      5.80
17 mu_1       0.8      1.22     0.495      2.60e- 3     28.6 
18 mu_1       0.9      1.48     0.0720     3.27e- 6     83.8 
19 mu_0       0.1      0.315    0.0000105  0            19.9 
20 mu_0       0.2      0.803    0.00293    0            39.2 
21 mu_0       0.3      1.06     0.0260     0            39.6 
22 mu_0       0.4      1.13     0.154      0            27.9 
23 mu_0       0.5      1.18     0.482      0            14.6 
24 mu_0       0.6      1.20     0.906      0             5.52
25 mu_0       0.7      1.14     1.07       0             3.26
26 mu_0       0.8      1.10     0.879      0             7.16
27 mu_0       0.9      1.41     0.280      0            47.1 
[1] "Total run time was 92.39 seconds"
