
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1206"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  9 11  4  4 11 10  5  3  5  6  5  4  7  6  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04799 0.34113 0.60933 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
725 481 
[1] "treatment indicator table: "

  0   1 
439 767 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 609
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 43"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 597
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 21"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 162.264 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.250 0.0455
 2 mu         0.1   0.2 0.422 0.0679
 3 mu         0.1   0.3 0.431 0.0676
 4 mu         0.1   0.4 0.491 0.0805
 5 mu         0.1   0.5 0.566 0.0945
 6 mu         0.2   0.1 0.232 0.0327
 7 mu         0.2   0.2 0.401 0.0542
 8 mu         0.2   0.3 0.412 0.0461
 9 mu         0.2   0.4 0.455 0.0522
10 mu         0.2   0.5 0.535 0.0684
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.474       0.125  0.000120       3.47
 2 mu         0.2      0.748       0.468  0.0189         5.78
 3 mu         0.3      0.898       0.794  0.139          5.33
 4 mu         0.4      0.959       0.952  0.383          2.68
 5 mu         0.5      0.984       1      0.656          1.54
 6 mu         0.6      0.998       1      0.811          1.20
 7 mu         0.7      1.01        1      0.802          1.50
 8 mu         0.8      1.03        1      0.522          2.67
 9 mu         0.9      1.02        1      0.128          4.09
10 mu_1       0.1      0.680       0.351  0.000547       4.30
11 mu_1       0.2      0.876       0.738  0.0436         6.83
12 mu_1       0.3      0.946       0.910  0.226          4.33
13 mu_1       0.4      0.976       1      0.495          1.88
14 mu_1       0.5      0.991       1      0.722          1.40
15 mu_1       0.6      1.00        1      0.841          1.16
16 mu_1       0.7      1.02        1      0.793          1.63
17 mu_1       0.8      1.03        1      0.471          2.88
18 mu_1       0.9      1.01        1      0.108          4.12
19 mu_0       0.1      0.451       0.0975 0.0000729      3.64
20 mu_0       0.2      0.716       0.411  0.0128         5.51
21 mu_0       0.3      0.878       0.714  0.102          5.76
22 mu_0       0.4      0.949       0.919  0.306          3.21
23 mu_0       0.5      0.977       1      0.551          1.86
24 mu_0       0.6      0.991       1      0.755          1.30
25 mu_0       0.7      1.01        1      0.822          1.24
26 mu_0       0.8      1.02        1.00   0.626          1.97
27 mu_0       0.9      1.03        1      0.301          3.85
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.734    0.0000576  3.02e-13     38.2 
 2 mu         0.2      2.12     0.00665    1.56e- 8    124.  
 3 mu         0.3      2.69     0.0757     7.85e- 6    166.  
 4 mu         0.4      2.29     0.333      5.76e- 4    112.  
 5 mu         0.5      1.72     0.757      1.42e- 2     44.2 
 6 mu         0.6      1.41     0.966      1.68e- 1      9.84
 7 mu         0.7      1.25     1.06       1.02e- 1      5.73
 8 mu         0.8      1.10     0.630      4.49e- 3     19.0 
 9 mu         0.9      0.944    0.0934     1.00e- 5     39.0 
10 mu_1       0.1      1.76     0.000426   2.68e-12     76.5 
11 mu_1       0.2      2.85     0.0228     6.94e- 8    178.  
12 mu_1       0.3      2.66     0.165      2.33e- 5    158.  
13 mu_1       0.4      1.99     0.540      1.28e- 3     80.1 
14 mu_1       0.5      1.55     0.862      2.53e- 2     25.3 
15 mu_1       0.6      1.35     1.04       2.49e- 1      6.85
16 mu_1       0.7      1.22     1.02       5.99e- 2      7.56
17 mu_1       0.8      1.08     0.529      2.31e- 3     21.9 
18 mu_1       0.9      0.918    0.0671     4.58e- 6     40.0 
19 mu_0       0.1      0.620    0.0000262  0            34.0 
20 mu_0       0.2      1.94     0.00339    0           111.  
21 mu_0       0.3      2.71     0.0350     0           169.  
22 mu_0       0.4      2.48     0.181      0           133.  
23 mu_0       0.5      1.89     0.525      0            63.1 
24 mu_0       0.6      1.50     0.909      0            17.6 
25 mu_0       0.7      1.32     1.07       0             6.83
26 mu_0       0.8      1.18     1.04       0             7.29
27 mu_0       0.9      1.18     0.321      0            30.0 
[1] "Total run time was 166.175 seconds"
