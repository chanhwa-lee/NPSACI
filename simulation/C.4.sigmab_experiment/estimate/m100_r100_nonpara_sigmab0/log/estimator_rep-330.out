
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1345"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 3  8  3  3  4  6  6  8  8  7  7  5  9  6  9  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03339 0.31512 0.60433 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
789 556 
[1] "treatment indicator table: "

  0   1 
511 834 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 680
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 40"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 665
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 33"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 70.405 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.215 0.0964
 2 mu         0.1   0.2 0.316 0.109 
 3 mu         0.1   0.3 0.316 0.129 
 4 mu         0.1   0.4 0.349 0.124 
 5 mu         0.1   0.5 0.348 0.139 
 6 mu         0.2   0.1 0.249 0.0735
 7 mu         0.2   0.2 0.337 0.0782
 8 mu         0.2   0.3 0.349 0.0919
 9 mu         0.2   0.4 0.381 0.0831
10 mu         0.2   0.5 0.390 0.0919
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.652        0.188   0.00150      7.33
 2 mu         0.2      0.932        0.641   0.0587       6.72
 3 mu         0.3      0.993        0.949   0.283        3.42
 4 mu         0.4      0.999        1       0.580        1.65
 5 mu         0.5      0.998        1       0.787        1.20
 6 mu         0.6      1.00         1       0.911        1.11
 7 mu         0.7      1.00         1       0.797        1.20
 8 mu         0.8      1.01         1       0.582        1.76
 9 mu         0.9      1.03         0.986   0.226        3.44
10 mu_1       0.1      0.905        0.459   0.00544      9.63
11 mu_1       0.2      1.00         0.895   0.112        5.02
12 mu_1       0.3      1.00         1       0.387        2.16
13 mu_1       0.4      1.00         1       0.661        1.32
14 mu_1       0.5      1.00         1       0.851        1.17
15 mu_1       0.6      1.00         1.00    0.918        1.09
16 mu_1       0.7      1.00         1       0.771        1.26
17 mu_1       0.8      1.01         1       0.552        1.84
18 mu_1       0.9      1.03         0.959   0.205        3.70
19 mu_0       0.1      0.624        0.158   0.00106      8.04
20 mu_0       0.2      0.915        0.578   0.0453       7.14
21 mu_0       0.3      0.989        0.911   0.239        3.96
22 mu_0       0.4      0.997        1.00    0.526        1.91
23 mu_0       0.5      0.996        1       0.689        1.24
24 mu_0       0.6      0.998        1       0.793        1.14
25 mu_0       0.7      1.00         1       0.859        1.10
26 mu_0       0.8      0.999        1       0.700        1.42
27 mu_0       0.9      1.00         1       0.413        2.35
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.0355    0.0000277  1.11e-12     1.21 
 2 mu         0.2     0.179     0.00538    5.11e- 8     4.24 
 3 mu         0.3     0.429     0.0847     2.25e- 5     5.62 
 4 mu         0.4     0.708     0.334      1.41e- 3     4.57 
 5 mu         0.5     0.937     0.747      2.91e- 2     2.94 
 6 mu         0.6     1.08      1.04       2.75e- 1     2.05 
 7 mu         0.7     1.12      1.05       3.21e- 2     4.00 
 8 mu         0.8     1.04      0.512      5.51e- 4    10.9  
 9 mu         0.9     0.787     0.0617     2.73e- 7    28.3  
10 mu_1       0.1     0.116     0.000174   9.36e-12     3.63 
11 mu_1       0.2     0.322     0.0154     2.15e- 7     6.36 
12 mu_1       0.3     0.584     0.170      6.32e- 5     5.75 
13 mu_1       0.4     0.833     0.534      2.98e- 3     4.39 
14 mu_1       0.5     1.02      0.966      4.90e- 2     2.78 
15 mu_1       0.6     1.11      1.15       2.23e- 1     2.01 
16 mu_1       0.7     1.12      0.956      1.53e- 2     4.81 
17 mu_1       0.8     1.02      0.407      2.29e- 4    12.7  
18 mu_1       0.9     0.759     0.0448     1.01e- 7    29.3  
19 mu_0       0.1     0.0266    0.0000104  0            0.941
20 mu_0       0.2     0.143     0.00263    0            3.71 
21 mu_0       0.3     0.362     0.0416     0            5.62 
22 mu_0       0.4     0.624     0.201      0            5.29 
23 mu_0       0.5     0.856     0.564      0            3.54 
24 mu_0       0.6     1.02      1.02       0            2.14 
25 mu_0       0.7     1.12      1.13       0            2.41 
26 mu_0       0.8     1.15      0.948      0            7.92 
27 mu_0       0.9     1.04      0.219      0           18.8  
[1] "Total run time was 72.666 seconds"
