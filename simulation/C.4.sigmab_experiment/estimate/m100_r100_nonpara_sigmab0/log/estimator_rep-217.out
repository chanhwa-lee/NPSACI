
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1315"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  5  6  4  3  8  5  5  8  8  6  3 10  8  9  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02128 0.36379 0.61405 1.00000 6.62039 
[1] "event indicator table: "

  0   1 
831 484 
[1] "treatment indicator table: "

  0   1 
446 869 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 668
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 647
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 65"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 84.907 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.323 0.138
 2 mu         0.1   0.2 0.325 0.152
 3 mu         0.1   0.3 0.410 0.179
 4 mu         0.1   0.4 0.443 0.194
 5 mu         0.1   0.5 0.454 0.213
 6 mu         0.2   0.1 0.335 0.106
 7 mu         0.2   0.2 0.346 0.110
 8 mu         0.2   0.3 0.443 0.133
 9 mu         0.2   0.4 0.487 0.135
10 mu         0.2   0.5 0.495 0.145
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      1.73        0.0958 0.00000657    106.  
 2 mu         0.2      1.51        0.447  0.00259        52.2 
 3 mu         0.3      1.19        0.850  0.0516         16.5 
 4 mu         0.4      1.04        0.995  0.279           4.33
 5 mu         0.5      0.992       0.997  0.631           1.55
 6 mu         0.6      0.989       0.996  0.872           1.10
 7 mu         0.7      0.996       0.996  0.869           1.12
 8 mu         0.8      1.01        1      0.701           1.42
 9 mu         0.9      1.05        1      0.254           3.94
10 mu_1       0.1      1.79        0.273  0.0000349      82.1 
11 mu_1       0.2      1.28        0.716  0.00694        20.6 
12 mu_1       0.3      1.07        0.973  0.0936          6.55
13 mu_1       0.4      1.00        1      0.389           2.44
14 mu_1       0.5      0.986       0.992  0.724           1.30
15 mu_1       0.6      0.990       0.996  0.919           1.07
16 mu_1       0.7      0.998       1      0.824           1.16
17 mu_1       0.8      1.02        1      0.662           1.50
18 mu_1       0.9      1.06        1      0.227           4.23
19 mu_0       0.1      1.73        0.0758 0.00000343    109.  
20 mu_0       0.2      1.57        0.374  0.00150        60.1 
21 mu_0       0.3      1.24        0.783  0.0336         21.4 
22 mu_0       0.4      1.06        0.960  0.206           6.05
23 mu_0       0.5      0.997       0.997  0.538           1.95
24 mu_0       0.6      0.986       0.986  0.781           1.22
25 mu_0       0.7      0.991       0.996  0.916           1.08
26 mu_0       0.8      0.997       1      0.804           1.18
27 mu_0       0.9      1.03        1.01   0.501           1.92
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.161   0.0000272   3.59e-15      6.21
 2 mu         0.2      0.421   0.00261     8.37e-10      8.96
 3 mu         0.3      0.705   0.0323      1.08e- 6     12.4 
 4 mu         0.4      0.948   0.179       1.65e- 4     15.2 
 5 mu         0.5      1.08    0.563       7.62e- 3     10.8 
 6 mu         0.6      1.12    1.01        1.62e- 1      4.52
 7 mu         0.7      1.14    1.05        2.21e- 1      3.06
 8 mu         0.8      1.19    0.570       8.85e- 3     14.4 
 9 mu         0.9      1.43    0.0722      1.25e- 5     59.9 
10 mu_1       0.1      0.442   0.000197    3.40e-14     12.4 
11 mu_1       0.2      0.667   0.00984     3.97e- 9     13.4 
12 mu_1       0.3      0.858   0.0789      3.42e- 6     15.9 
13 mu_1       0.4      1.01    0.291       3.90e- 4     14.7 
14 mu_1       0.5      1.08    0.774       1.44e- 2      8.32
15 mu_1       0.6      1.10    1.03        2.56e- 1      2.89
16 mu_1       0.7      1.13    1.05        1.26e- 1      3.34
17 mu_1       0.8      1.20    0.461       4.98e- 3     17.0 
18 mu_1       0.9      1.45    0.0505      6.23e- 6     63.1 
19 mu_0       0.1      0.130   0.00000390  0             5.52
20 mu_0       0.2      0.359   0.000963    0             7.84
21 mu_0       0.3      0.640   0.0109      0            11.9 
22 mu_0       0.4      0.909   0.0868      0            15.6 
23 mu_0       0.5      1.09    0.347       0            13.3 
24 mu_0       0.6      1.14    0.852       0             6.95
25 mu_0       0.7      1.15    1.13        0             3.16
26 mu_0       0.8      1.16    0.931       0             4.03
27 mu_0       0.9      1.26    0.235       0            31.5 
[1] "Total run time was 87.122 seconds"
