
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1219"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6 10  8  5  5  3  7  5  7  8  5  9  8  6  5  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0384  0.3685  0.6102  1.0000  4.0000 
[1] "event indicator table: "

  0   1 
735 484 
[1] "treatment indicator table: "

  0   1 
451 768 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 589
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 56"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 630
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 37"
[1] "     Cluster: 41"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 90.295 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.597 0.251
 2 mu         0.1   0.2 0.641 0.223
 3 mu         0.1   0.3 0.714 0.247
 4 mu         0.1   0.4 0.718 0.239
 5 mu         0.1   0.5 0.733 0.223
 6 mu         0.2   0.1 0.574 0.232
 7 mu         0.2   0.2 0.610 0.204
 8 mu         0.2   0.3 0.679 0.218
 9 mu         0.2   0.4 0.688 0.206
10 mu         0.2   0.5 0.713 0.187
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.486        0.166 0.0000307     10.4 
 2 mu         0.2      0.726        0.583 0.00565        6.36
 3 mu         0.3      0.894        0.923 0.0651         3.00
 4 mu         0.4      0.973        0.992 0.225          2.19
 5 mu         0.5      1.00         1     0.473          1.72
 6 mu         0.6      1.01         1     0.744          1.29
 7 mu         0.7      1.00         1     0.836          1.30
 8 mu         0.8      0.991        0.998 0.474          1.93
 9 mu         0.9      1.00         0.921 0.0949         4.17
10 mu_1       0.1      0.676        0.414 0.000147       9.12
11 mu_1       0.2      0.855        0.879 0.0138         3.42
12 mu_1       0.3      0.953        0.992 0.110          2.67
13 mu_1       0.4      0.992        1     0.305          2.05
14 mu_1       0.5      1.01         1     0.557          1.54
15 mu_1       0.6      1.01         1     0.811          1.19
16 mu_1       0.7      1.00         1     0.789          1.39
17 mu_1       0.8      0.991        0.990 0.432          2.12
18 mu_1       0.9      1.01         0.913 0.0816         4.49
19 mu_0       0.1      0.465        0.140 0.0000177     10.6 
20 mu_0       0.2      0.693        0.511 0.00361        7.10
21 mu_0       0.3      0.869        0.882 0.0457         3.57
22 mu_0       0.4      0.960        0.982 0.172          2.29
23 mu_0       0.5      0.999        1     0.389          1.90
24 mu_0       0.6      1.01         1     0.643          1.43
25 mu_0       0.7      1.01         1.00  0.873          1.23
26 mu_0       0.8      0.990        1     0.639          1.22
27 mu_0       0.9      0.963        1     0.215          2.00
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.250    0.0000530  1.68e-13     20.5 
 2 mu         0.2      0.951    0.00707    8.72e- 9     50.4 
 3 mu         0.3      1.44     0.0795     4.39e- 6     66.0 
 4 mu         0.4      1.37     0.353      3.22e- 4     50.0 
 5 mu         0.5      1.18     0.713      7.93e- 3     17.8 
 6 mu         0.6      1.13     1.07       9.39e- 2      3.53
 7 mu         0.7      1.11     0.995      1.19e- 1      4.50
 8 mu         0.8      1.12     0.544      2.01e- 3     14.0 
 9 mu         0.9      1.39     0.0835     4.96e- 7     51.2 
10 mu_1       0.1      0.634    0.000313   1.50e-12     47.2 
11 mu_1       0.2      1.36     0.0217     3.88e- 8     58.2 
12 mu_1       0.3      1.55     0.168      1.30e- 5     69.4 
13 mu_1       0.4      1.34     0.579      7.15e- 4     39.4 
14 mu_1       0.5      1.18     0.894      1.41e- 2     11.3 
15 mu_1       0.6      1.15     1.11       1.39e- 1      3.14
16 mu_1       0.7      1.12     0.889      3.92e- 2      5.84
17 mu_1       0.8      1.16     0.430      7.92e- 4     17.5 
18 mu_1       0.9      1.46     0.0597     1.74e- 7     56.9 
19 mu_0       0.1      0.207    0.0000174  0            17.5 
20 mu_0       0.2      0.849    0.00360    0            48.5 
21 mu_0       0.3      1.39     0.0431     0            64.5 
22 mu_0       0.4      1.39     0.218      0            57.0 
23 mu_0       0.5      1.18     0.570      0            24.4 
24 mu_0       0.6      1.12     0.954      0             5.00
25 mu_0       0.7      1.09     1.08       0             2.88
26 mu_0       0.8      0.965    0.884      0             5.53
27 mu_0       0.9      0.802    0.174      0            16.8 
[1] "Total run time was 92.737 seconds"
