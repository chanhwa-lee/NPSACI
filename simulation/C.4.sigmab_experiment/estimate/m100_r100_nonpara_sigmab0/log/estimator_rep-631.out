
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1269"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 7  2  8  2  8  6  5 11  6 11  2  9  7  5  4  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.05157 0.39938 0.65318 1.00000 6.00000 
[1] "event indicator table: "

  0   1 
789 480 
[1] "treatment indicator table: "

  0   1 
421 848 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 651
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 62"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 618
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 81"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 369.048 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.275 0.109 
 2 mu         0.1   0.2 0.318 0.160 
 3 mu         0.1   0.3 0.463 0.123 
 4 mu         0.1   0.4 0.452 0.149 
 5 mu         0.1   0.5 0.459 0.157 
 6 mu         0.2   0.1 0.254 0.0641
 7 mu         0.2   0.2 0.318 0.112 
 8 mu         0.2   0.3 0.445 0.0655
 9 mu         0.2   0.4 0.444 0.0950
10 mu         0.2   0.5 0.468 0.105 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.333       0.0854 0.0000296      4.88
 2 mu         0.2      0.596       0.453  0.00601        4.22
 3 mu         0.3      0.848       0.826  0.0835         3.13
 4 mu         0.4      0.965       0.981  0.362          2.29
 5 mu         0.5      0.985       0.962  0.531          1.57
 6 mu         0.6      0.990       0.990  0.722          1.23
 7 mu         0.7      1.00        1      0.897          1.11
 8 mu         0.8      1.01        1      0.547          1.75
 9 mu         0.9      1.05        0.996  0.122          6.41
10 mu_1       0.1      0.488       0.255  0.000150       5.68
11 mu_1       0.2      0.761       0.737  0.0154         3.64
12 mu_1       0.3      0.937       0.949  0.146          2.82
13 mu_1       0.4      0.985       0.973  0.469          1.93
14 mu_1       0.5      0.986       0.983  0.569          1.40
15 mu_1       0.6      0.992       0.995  0.778          1.16
16 mu_1       0.7      1.00        1.00   0.858          1.18
17 mu_1       0.8      1.02        1      0.503          1.95
18 mu_1       0.9      1.05        0.998  0.106          6.96
19 mu_0       0.1      0.316       0.0665 0.0000163      5.08
20 mu_0       0.2      0.555       0.375  0.00365        4.53
21 mu_0       0.3      0.810       0.748  0.0566         3.26
22 mu_0       0.4      0.951       0.965  0.275          2.57
23 mu_0       0.5      0.984       0.961  0.492          1.77
24 mu_0       0.6      0.987       0.981  0.637          1.33
25 mu_0       0.7      0.993       0.993  0.874          1.13
26 mu_0       0.8      1.00        1.00   0.723          1.23
27 mu_0       0.9      1.01        1      0.263          1.61
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.0988   0.0000157   7.20e-17      9.08
 2 mu         0.2     0.201    0.00226     3.35e-11     11.3 
 3 mu         0.3     0.396    0.0320      6.51e- 8      9.97
 4 mu         0.4     0.657    0.170       1.32e- 5      7.18
 5 mu         0.5     0.895    0.510       7.63e- 4      5.06
 6 mu         0.6     1.02     0.892       1.95e- 2      3.05
 7 mu         0.7     1.03     0.991       9.99e- 2      2.77
 8 mu         0.8     1.04     0.649       4.82e- 3      9.14
 9 mu         0.9     1.04     0.113       9.54e- 6     13.4 
10 mu_1       0.1     0.217    0.000118    6.84e-16     18.2 
11 mu_1       0.2     0.305    0.00874     1.59e-10     11.3 
12 mu_1       0.3     0.522    0.0669      2.06e- 7      6.65
13 mu_1       0.4     0.772    0.294       3.13e- 5      6.76
14 mu_1       0.5     0.966    0.707       1.45e- 3      4.16
15 mu_1       0.6     1.05     0.973       3.09e- 2      2.80
16 mu_1       0.7     1.05     0.996       5.10e- 2      3.50
17 mu_1       0.8     1.05     0.553       2.26e- 3     10.1 
18 mu_1       0.9     1.04     0.0778      3.97e- 6     13.1 
19 mu_0       0.1     0.0857   0.00000318  0             8.07
20 mu_0       0.2     0.175    0.000694    0            11.3 
21 mu_0       0.3     0.342    0.0148      0            11.4 
22 mu_0       0.4     0.581    0.0964      0             9.57
23 mu_0       0.5     0.823    0.328       0             6.92
24 mu_0       0.6     0.981    0.732       0             4.25
25 mu_0       0.7     1.01     1.00        0             2.37
26 mu_0       0.8     0.969    0.945       0             5.38
27 mu_0       0.9     1.00     0.247       0            15.7 
[1] "Total run time was 376.956 seconds"
