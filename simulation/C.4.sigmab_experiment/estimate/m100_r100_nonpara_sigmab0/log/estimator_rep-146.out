
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1343"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 7  3  7  7  2  4  5  3  5 14  3  4  9 10  7 10 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03585 0.34388 0.64199 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
781 562 
[1] "treatment indicator table: "

  0   1 
451 892 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 599
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 22"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 79"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 744
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 45"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 72"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 131.716 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.294 0.225
 2 mu         0.1   0.2 0.452 0.256
 3 mu         0.1   0.3 0.616 0.282
 4 mu         0.1   0.4 0.616 0.288
 5 mu         0.1   0.5 0.605 0.303
 6 mu         0.2   0.1 0.296 0.127
 7 mu         0.2   0.2 0.404 0.150
 8 mu         0.2   0.3 0.575 0.160
 9 mu         0.2   0.4 0.576 0.161
10 mu         0.2   0.5 0.569 0.167
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.25        0.0790 0.0000251     76.4 
 2 mu         0.2      0.864       0.400  0.00489       23.3 
 3 mu         0.3      0.807       0.794  0.0659         4.52
 4 mu         0.4      0.887       0.947  0.284          1.55
 5 mu         0.5      0.957       0.971  0.532          1.41
 6 mu         0.6      0.991       1      0.751          1.28
 7 mu         0.7      1.01        1      0.826          1.15
 8 mu         0.8      1.01        1      0.539          1.34
 9 mu         0.9      0.972       1      0.151          2.49
10 mu_1       0.1      0.988       0.232  0.000126      45.0 
11 mu_1       0.2      0.771       0.601  0.0125         7.02
12 mu_1       0.3      0.834       0.894  0.115          1.81
13 mu_1       0.4      0.922       0.973  0.386          1.58
14 mu_1       0.5      0.975       0.988  0.616          1.35
15 mu_1       0.6      0.998       1      0.835          1.25
16 mu_1       0.7      1.01        1.00   0.796          1.20
17 mu_1       0.8      1.01        1.00   0.497          1.36
18 mu_1       0.9      0.968       0.993  0.133          2.64
19 mu_0       0.1      1.28        0.0606 0.0000138     79.9 
20 mu_0       0.2      0.887       0.350  0.00299       27.4 
21 mu_0       0.3      0.795       0.736  0.0449         5.87
22 mu_0       0.4      0.863       0.913  0.215          1.58
23 mu_0       0.5      0.939       0.973  0.418          1.48
24 mu_0       0.6      0.981       0.986  0.612          1.32
25 mu_0       0.7      1.00        1      0.789          1.18
26 mu_0       0.8      1.01        1.00   0.708          1.25
27 mu_0       0.9      1.01        1      0.315          1.71
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.200   0.0000181   1.04e-13     17.2 
 2 mu         0.2      0.344   0.00203     5.59e- 9     21.4 
 3 mu         0.3      0.529   0.0462      2.81e- 6     18.9 
 4 mu         0.4      0.804   0.280       2.06e- 4     13.6 
 5 mu         0.5      1.08    0.704       5.08e- 3      8.18
 6 mu         0.6      1.19    0.988       6.01e- 2      4.54
 7 mu         0.7      1.17    1.08        8.91e- 2      4.23
 8 mu         0.8      1.10    0.760       5.16e- 3      8.13
 9 mu         0.9      0.729   0.108       7.86e- 6      5.46
10 mu_1       0.1      0.436   0.000110    8.83e-13     34.3 
11 mu_1       0.2      0.463   0.00774     2.48e- 8     21.4 
12 mu_1       0.3      0.623   0.109       8.32e- 6     12.6 
13 mu_1       0.4      0.895   0.468       4.58e- 4      7.00
14 mu_1       0.5      1.13    0.829       9.03e- 3      6.07
15 mu_1       0.6      1.20    0.991       8.91e- 2      4.45
16 mu_1       0.7      1.17    1.03        5.09e- 2      4.98
17 mu_1       0.8      1.08    0.632       2.58e- 3      8.36
18 mu_1       0.9      0.682   0.0775      3.93e- 6      5.20
19 mu_0       0.1      0.173   0.00000425  0            15.3 
20 mu_0       0.2      0.314   0.000947    0            21.4 
21 mu_0       0.3      0.488   0.0233      0            21.5 
22 mu_0       0.4      0.742   0.121       0            18.1 
23 mu_0       0.5      1.03    0.467       0            13.1 
24 mu_0       0.6      1.19    0.794       0             8.04
25 mu_0       0.7      1.19    1.08        0             4.09
26 mu_0       0.8      1.19    1.02        0             7.17
27 mu_0       0.9      1.16    0.338       0             9.32
[1] "Total run time was 135.574 seconds"
