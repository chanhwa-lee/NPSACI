
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1260"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 2  7  7  5  6  7  9  8  7  6  7  4  8  7  6  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04606 0.34448 0.63472 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
760 500 
[1] "treatment indicator table: "

  0   1 
425 835 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 622
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 28"
[1] "     Cluster: 33"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 89"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 638
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 100.125 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.421 0.150
 2 mu         0.1   0.2 0.484 0.182
 3 mu         0.1   0.3 0.488 0.187
 4 mu         0.1   0.4 0.571 0.232
 5 mu         0.1   0.5 0.576 0.234
 6 mu         0.2   0.1 0.391 0.117
 7 mu         0.2   0.2 0.455 0.142
 8 mu         0.2   0.3 0.465 0.145
 9 mu         0.2   0.4 0.537 0.181
10 mu         0.2   0.5 0.547 0.182
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      2.53         0.130 0.0000317    142.  
 2 mu         0.2      2.17         0.512 0.00593       86.2 
 3 mu         0.3      1.37         0.786 0.0767        23.3 
 4 mu         0.4      1.06         0.970 0.314          4.16
 5 mu         0.5      0.994        0.995 0.585          1.69
 6 mu         0.6      0.986        0.997 0.744          1.12
 7 mu         0.7      0.995        0.998 0.843          1.13
 8 mu         0.8      1.02         1.02  0.749          1.35
 9 mu         0.9      1.05         1     0.417          3.96
10 mu_1       0.1      3.05         0.381 0.000152     158.  
11 mu_1       0.2      1.74         0.753 0.0146        48.0 
12 mu_1       0.3      1.16         0.955 0.130          9.01
13 mu_1       0.4      1.01         0.990 0.416          2.35
14 mu_1       0.5      0.988        0.994 0.646          1.37
15 mu_1       0.6      0.987        0.996 0.789          1.12
16 mu_1       0.7      0.999        1     0.811          1.14
17 mu_1       0.8      1.02         1.02  0.738          1.49
18 mu_1       0.9      1.06         1     0.383          4.32
19 mu_0       0.1      2.47         0.101 0.0000183    140.  
20 mu_0       0.2      2.27         0.433 0.00378       95.8 
21 mu_0       0.3      1.46         0.733 0.0541        29.4 
22 mu_0       0.4      1.09         0.948 0.247          5.77
23 mu_0       0.5      1.00         1.00  0.514          2.01
24 mu_0       0.6      0.985        1.00  0.650          1.24
25 mu_0       0.7      0.986        0.987 0.791          1.13
26 mu_0       0.8      0.998        1     0.761          1.21
27 mu_0       0.9      1.02         1.02  0.657          1.65
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.0843   0.0000163   2.49e-16      5.36
 2 mu         0.2     0.287    0.00252     1.16e-10     14.8 
 3 mu         0.3     0.545    0.0370      2.25e- 7     15.1 
 4 mu         0.4     0.818    0.195       4.56e- 5      8.92
 5 mu         0.5     1.00     0.633       2.64e- 3      5.08
 6 mu         0.6     1.09     0.960       6.74e- 2      4.65
 7 mu         0.7     1.13     0.961       9.34e- 2      3.91
 8 mu         0.8     1.15     0.744       3.63e- 3     12.0 
 9 mu         0.9     1.58     0.124       2.29e- 6     49.3 
10 mu_1       0.1     0.250    0.000130    2.36e-15     13.4 
11 mu_1       0.2     0.472    0.00805     5.51e-10     18.6 
12 mu_1       0.3     0.710    0.0843      7.12e- 7     12.6 
13 mu_1       0.4     0.931    0.333       1.08e- 4      7.61
14 mu_1       0.5     1.05     0.821       5.01e- 3      5.33
15 mu_1       0.6     1.10     1.01        1.07e- 1      4.18
16 mu_1       0.7     1.13     1.01        3.33e- 2      4.03
17 mu_1       0.8     1.17     0.658       1.13e- 3     15.0 
18 mu_1       0.9     1.65     0.0930      1.02e- 6     54.8 
19 mu_0       0.1     0.0658   0.00000420  0             4.46
20 mu_0       0.2     0.241    0.00109     0            13.9 
21 mu_0       0.3     0.474    0.0156      0            16.1 
22 mu_0       0.4     0.743    0.0975      0            11.1 
23 mu_0       0.5     0.953    0.379       0             6.10
24 mu_0       0.6     1.07     0.918       0             5.37
25 mu_0       0.7     1.12     1.03        0             3.75
26 mu_0       0.8     1.08     1.02        0             4.05
27 mu_0       0.9     0.966    0.357       0            18.7 
[1] "Total run time was 102.808 seconds"
