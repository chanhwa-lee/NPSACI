
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1241"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  7  8  5  6  6  4  8  7  6  8  8  2  5  8  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02106 0.34277 0.60170 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
776 465 
[1] "treatment indicator table: "

  0   1 
436 805 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 599
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 44"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 77"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 642
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 96.832 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.408 0.0820
 2 mu         0.1   0.2 0.440 0.102 
 3 mu         0.1   0.3 0.452 0.112 
 4 mu         0.1   0.4 0.444 0.123 
 5 mu         0.1   0.5 0.635 0.112 
 6 mu         0.2   0.1 0.356 0.0566
 7 mu         0.2   0.2 0.399 0.0768
 8 mu         0.2   0.3 0.429 0.0802
 9 mu         0.2   0.4 0.433 0.0925
10 mu         0.2   0.5 0.619 0.0854
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.592        0.197 0.000117       4.11
 2 mu         0.2      0.794        0.712 0.0120         3.93
 3 mu         0.3      0.895        0.930 0.106          2.45
 4 mu         0.4      0.960        1     0.356          2.02
 5 mu         0.5      0.988        1     0.628          1.48
 6 mu         0.6      0.990        1     0.787          1.13
 7 mu         0.7      0.990        1.00  0.742          1.26
 8 mu         0.8      1.01         1     0.549          1.47
 9 mu         0.9      1.03         1     0.192          2.96
10 mu_1       0.1      0.764        0.488 0.000533       5.04
11 mu_1       0.2      0.863        0.915 0.0270         3.29
12 mu_1       0.3      0.929        1     0.164          2.26
13 mu_1       0.4      0.975        1     0.454          1.87
14 mu_1       0.5      0.990        1.00  0.669          1.39
15 mu_1       0.6      0.989        1.00  0.825          1.09
16 mu_1       0.7      0.991        1     0.706          1.31
17 mu_1       0.8      1.01         1     0.535          1.56
18 mu_1       0.9      1.04         1     0.171          3.19
19 mu_0       0.1      0.573        0.167 0.0000708      4.10
20 mu_0       0.2      0.777        0.640 0.00792        4.09
21 mu_0       0.3      0.881        0.887 0.0806         2.63
22 mu_0       0.4      0.949        1     0.291          2.12
23 mu_0       0.5      0.985        1     0.538          1.63
24 mu_0       0.6      0.991        1     0.684          1.23
25 mu_0       0.7      0.987        0.998 0.822          1.14
26 mu_0       0.8      0.987        0.996 0.604          1.45
27 mu_0       0.9      0.995        0.999 0.374          2.23
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.339   0.0000166   7.90e-14     15.2 
 2 mu         0.2      0.928   0.00263     5.18e- 9     58.5 
 3 mu         0.3      1.12    0.0371      3.40e- 6     59.6 
 4 mu         0.4      1.03    0.225       3.39e- 4     29.6 
 5 mu         0.5      1.01    0.651       1.21e- 2      8.12
 6 mu         0.6      1.09    1.05        1.06e- 1      2.36
 7 mu         0.7      1.14    1.09        6.79e- 2      2.93
 8 mu         0.8      1.22    0.595       8.92e- 4     22.2 
 9 mu         0.9      2.42    0.0836      3.49e- 7    146.  
10 mu_1       0.1      0.765   0.000117    7.90e-13     37.6 
11 mu_1       0.2      1.22    0.00977     2.59e- 8     73.1 
12 mu_1       0.3      1.15    0.0844      1.13e- 5     49.7 
13 mu_1       0.4      1.01    0.381       8.48e- 4     18.5 
14 mu_1       0.5      1.02    0.859       2.29e- 2      4.06
15 mu_1       0.6      1.11    1.06        1.63e- 1      2.26
16 mu_1       0.7      1.14    1.03        2.42e- 2      3.75
17 mu_1       0.8      1.27    0.474       2.79e- 4     27.8 
18 mu_1       0.9      2.59    0.0550      9.69e- 8    163.  
19 mu_0       0.1      0.292   0.00000571  0            14.0 
20 mu_0       0.2      0.855   0.00103     0            54.8 
21 mu_0       0.3      1.11    0.0176      0            63.9 
22 mu_0       0.4      1.04    0.116       0            37.1 
23 mu_0       0.5      0.995   0.420       0            12.2 
24 mu_0       0.6      1.07    0.967       0             3.40
25 mu_0       0.7      1.14    1.12        0             2.61
26 mu_0       0.8      1.03    0.992       0             3.36
27 mu_0       0.9      0.859   0.249       0            13.7 
[1] "Total run time was 99.746 seconds"
