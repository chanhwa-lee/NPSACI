
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1206"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 7  5  8  8  5 11  3 11  3  6  6  5  6  4  6  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04472 0.39537 0.65399 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
745 461 
[1] "treatment indicator table: "

  0   1 
438 768 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 611
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 595
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 339.756 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.537 0.195
 2 mu         0.1   0.2 0.585 0.205
 3 mu         0.1   0.3 0.620 0.212
 4 mu         0.1   0.4 0.622 0.215
 5 mu         0.1   0.5 0.622 0.220
 6 mu         0.2   0.1 0.450 0.114
 7 mu         0.2   0.2 0.517 0.114
 8 mu         0.2   0.3 0.551 0.113
 9 mu         0.2   0.4 0.570 0.114
10 mu         0.2   0.5 0.581 0.117
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.34        0.120   0.000302     52.0 
 2 mu         0.2      1.20        0.486   0.0222       14.9 
 3 mu         0.3      1.09        0.830   0.122         7.42
 4 mu         0.4      1.03        0.998   0.330         3.73
 5 mu         0.5      1.01        1       0.595         1.90
 6 mu         0.6      1.01        1.00    0.823         1.24
 7 mu         0.7      1.00        1       0.810         1.32
 8 mu         0.8      0.987       1       0.513         1.95
 9 mu         0.9      0.928       0.992   0.155         2.46
10 mu_1       0.1      1.10        0.334   0.00129      15.0 
11 mu_1       0.2      1.10        0.744   0.0510        9.88
12 mu_1       0.3      1.03        0.962   0.200         4.82
13 mu_1       0.4      1.01        1       0.438         2.37
14 mu_1       0.5      1.01        1       0.688         1.45
15 mu_1       0.6      1.01        1       0.877         1.12
16 mu_1       0.7      1.00        1       0.761         1.38
17 mu_1       0.8      0.984       1       0.474         2.04
18 mu_1       0.9      0.923       0.975   0.138         2.66
19 mu_0       0.1      1.36        0.0975  0.000192     57.7 
20 mu_0       0.2      1.23        0.431   0.0149       18.4 
21 mu_0       0.3      1.11        0.769   0.0891        8.54
22 mu_0       0.4      1.04        0.975   0.259         4.63
23 mu_0       0.5      1.01        1       0.502         2.35
24 mu_0       0.6      1.01        1.00    0.742         1.42
25 mu_0       0.7      1.01        1       0.909         1.19
26 mu_0       0.8      1.00        1       0.671         1.61
27 mu_0       0.9      0.967       0.994   0.314         2.65
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.0402    0.0000907  3.04e-13      1.65
 2 mu         0.2     0.147     0.00835    1.77e- 8      3.67
 3 mu         0.3     0.353     0.101      1.02e- 5      4.24
 4 mu         0.4     0.656     0.333      8.69e- 4      3.76
 5 mu         0.5     0.933     0.780      2.57e- 2      4.60
 6 mu         0.6     1.07      1.02       2.85e- 1      3.06
 7 mu         0.7     1.11      0.965      7.45e- 2      3.36
 8 mu         0.8     1.20      0.477      2.19e- 3     19.0 
 9 mu         0.9     1.40      0.0699     2.44e- 6     62.5 
10 mu_1       0.1     0.139     0.000678   2.86e-12      4.72
11 mu_1       0.2     0.287     0.0280     8.32e- 8      5.24
12 mu_1       0.3     0.523     0.212      3.19e- 5      4.03
13 mu_1       0.4     0.812     0.557      2.05e- 3      4.12
14 mu_1       0.5     1.02      0.952      4.84e- 2      4.60
15 mu_1       0.6     1.09      1.02       3.88e- 1      2.89
16 mu_1       0.7     1.11      0.859      4.14e- 2      4.52
17 mu_1       0.8     1.21      0.378      1.07e- 3     22.3 
18 mu_1       0.9     1.39      0.0496     1.05e- 6     65.4 
19 mu_0       0.1     0.0292    0.0000346  0             1.31
20 mu_0       0.2     0.112     0.00410    0             3.28
21 mu_0       0.3     0.281     0.0487     0             4.32
22 mu_0       0.4     0.552     0.225      0             4.15
23 mu_0       0.5     0.844     0.624      0             4.60
24 mu_0       0.6     1.03      0.924      0             3.83
25 mu_0       0.7     1.10      1.01       0             3.07
26 mu_0       0.8     1.17      0.905      0             5.98
27 mu_0       0.9     1.44      0.259      0            36.8 
[1] "Total run time was 348.76 seconds"
