
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1158"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  6 10 11  5 10  5  7 11  4  4  7  3  3  1  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04173 0.36598 0.63546 1.00000 5.88539 
[1] "event indicator table: "

  0   1 
708 450 
[1] "treatment indicator table: "

  0   1 
428 730 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 585
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 573
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 75.441 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.370 0.118 
 2 mu         0.1   0.2 0.477 0.161 
 3 mu         0.1   0.3 0.472 0.157 
 4 mu         0.1   0.4 0.565 0.190 
 5 mu         0.1   0.5 0.671 0.249 
 6 mu         0.2   0.1 0.325 0.0718
 7 mu         0.2   0.2 0.436 0.0994
 8 mu         0.2   0.3 0.435 0.0915
 9 mu         0.2   0.4 0.503 0.118 
10 mu         0.2   0.5 0.595 0.165 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.23         0.233  0.000396     60.4 
 2 mu         0.2      1.00         0.679  0.0237       18.6 
 3 mu         0.3      0.941        0.907  0.168         4.92
 4 mu         0.4      0.956        0.993  0.465         1.88
 5 mu         0.5      0.981        1      0.711         1.22
 6 mu         0.6      0.995        1      0.876         1.10
 7 mu         0.7      1.00         1      0.867         1.15
 8 mu         0.8      0.996        1      0.676         1.31
 9 mu         0.9      0.989        0.975  0.134         3.75
10 mu_1       0.1      1.11         0.593  0.00172      35.6 
11 mu_1       0.2      0.956        0.875  0.0536        7.91
12 mu_1       0.3      0.949        0.984  0.264         3.47
13 mu_1       0.4      0.970        1      0.581         1.37
14 mu_1       0.5      0.990        1      0.777         1.18
15 mu_1       0.6      0.999        1      0.880         1.10
16 mu_1       0.7      1.00         1.00   0.853         1.16
17 mu_1       0.8      0.995        1      0.624         1.42
18 mu_1       0.9      0.989        0.962  0.114         4.05
19 mu_0       0.1      1.25         0.189  0.000249     63.2 
20 mu_0       0.2      1.01         0.608  0.0163       21.8 
21 mu_0       0.3      0.938        0.860  0.126         5.54
22 mu_0       0.4      0.946        0.985  0.387         2.22
23 mu_0       0.5      0.972        0.995  0.645         1.31
24 mu_0       0.6      0.989        1      0.808         1.13
25 mu_0       0.7      0.998        1      0.854         1.13
26 mu_0       0.8      0.999        1      0.802         1.18
27 mu_0       0.9      0.987        1      0.311         1.59
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.94     0.0000946  1.71e-13    180.  
 2 mu         0.2      2.06     0.00949    9.94e- 9    141.  
 3 mu         0.3      1.93     0.106      5.71e- 6     72.5 
 4 mu         0.4      1.65     0.362      4.89e- 4     39.7 
 5 mu         0.5      1.32     0.749      1.45e- 2     18.8 
 6 mu         0.6      1.12     0.999      2.14e- 1      5.23
 7 mu         0.7      1.06     0.987      1.28e- 1      3.29
 8 mu         0.8      1.09     0.483      4.94e- 3     10.7 
 9 mu         0.9      1.24     0.0523     6.87e- 6     35.1 
10 mu_1       0.1      2.41     0.000577   1.61e-12    201.  
11 mu_1       0.2      1.87     0.0290     4.68e- 8     78.2 
12 mu_1       0.3      1.71     0.207      1.79e- 5     51.7 
13 mu_1       0.4      1.45     0.556      1.15e- 3     30.6 
14 mu_1       0.5      1.21     0.964      2.72e- 2     11.6 
15 mu_1       0.6      1.09     0.969      3.05e- 1      2.88
16 mu_1       0.7      1.06     0.888      3.06e- 2      3.76
17 mu_1       0.8      1.12     0.380      1.19e- 3     12.6 
18 mu_1       0.9      1.26     0.0349     2.69e- 6     36.7 
19 mu_0       0.1      1.88     0.0000342  0           178.  
20 mu_0       0.2      2.11     0.00490    0           156.  
21 mu_0       0.3      2.03     0.0501     0            92.1 
22 mu_0       0.4      1.78     0.216      0            45.9 
23 mu_0       0.5      1.44     0.573      0            26.0 
24 mu_0       0.6      1.18     1.01       0             9.06
25 mu_0       0.7      1.05     0.968      0             2.73
26 mu_0       0.8      0.985    0.751      0             5.50
27 mu_0       0.9      1.06     0.166      0            20.7 
[1] "Total run time was 77.889 seconds"
