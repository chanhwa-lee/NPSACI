
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1372"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 3  6  5  2  6  8  2  4 10  5  7  7  5 13 10  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.05041 0.37015 0.64942 1.00000 6.00000 
[1] "event indicator table: "

  0   1 
819 553 
[1] "treatment indicator table: "

  0   1 
486 886 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 627
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 745
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 157.592 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.282 0.127
 2 mu         0.1   0.2 0.380 0.180
 3 mu         0.1   0.3 0.420 0.206
 4 mu         0.1   0.4 0.464 0.233
 5 mu         0.1   0.5 0.509 0.253
 6 mu         0.2   0.1 0.259 0.126
 7 mu         0.2   0.2 0.359 0.176
 8 mu         0.2   0.3 0.402 0.203
 9 mu         0.2   0.4 0.446 0.230
10 mu         0.2   0.5 0.490 0.251
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1     10.6         0.0469 0.00000376   1038.  
 2 mu         0.2     16.5         0.296  0.00204      1596.  
 3 mu         0.3      9.17        0.678  0.0380        831.  
 4 mu         0.4      3.24        0.914  0.176         228.  
 5 mu         0.5      1.34        0.984  0.442          35.2 
 6 mu         0.6      1.02        1.00   0.742           3.41
 7 mu         0.7      0.987       0.991  0.789           1.25
 8 mu         0.8      0.969       1      0.492           2.13
 9 mu         0.9      0.926       0.853  0.0909          4.46
10 mu_1       0.1     18.7         0.142  0.0000199    1831.  
11 mu_1       0.2     14.9         0.540  0.00549      1408.  
12 mu_1       0.3      5.84        0.863  0.0702        489.  
13 mu_1       0.4      1.99        0.957  0.253         101.  
14 mu_1       0.5      1.12        1      0.538          12.9 
15 mu_1       0.6      1.00        1      0.809           1.60
16 mu_1       0.7      0.982       0.988  0.750           1.25
17 mu_1       0.8      0.965       0.998  0.443           2.30
18 mu_1       0.9      0.919       0.832  0.0761          4.58
19 mu_0       0.1      9.71        0.0365 0.00000198    950.  
20 mu_0       0.2     17.0         0.248  0.00117      1643.  
21 mu_0       0.3     10.6         0.610  0.0242        977.  
22 mu_0       0.4      4.07        0.864  0.124         313.  
23 mu_0       0.5      1.55        0.963  0.346          57.5 
24 mu_0       0.6      1.05        1      0.640           6.13
25 mu_0       0.7      0.997       1      0.855           1.39
26 mu_0       0.8      0.983       0.999  0.648           1.44
27 mu_0       0.9      0.991       0.998  0.225           3.35
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.0239   0.0000306   3.20e-13     0.958
 2 mu         0.2     0.344    0.00351     2.20e- 8    18.9  
 3 mu         0.3     1.09     0.0405      1.12e- 5    56.6  
 4 mu         0.4     1.57     0.215       8.36e- 4    68.0  
 5 mu         0.5     1.47     0.667       2.38e- 2    41.9  
 6 mu         0.6     1.21     1.00        1.44e- 1    13.4  
 7 mu         0.7     1.19     1.03        8.44e- 2     4.18 
 8 mu         0.8     1.67     0.560       1.66e- 3    27.4  
 9 mu         0.9     3.55     0.0538      9.22e- 7   160.   
10 mu_1       0.1     0.0950   0.000190    2.72e-12     3.59 
11 mu_1       0.2     0.674    0.0123      1.03e- 7    35.4  
12 mu_1       0.3     1.45     0.102       3.73e- 5    70.7  
13 mu_1       0.4     1.66     0.375       2.09e- 3    63.8  
14 mu_1       0.5     1.41     0.872       4.26e- 2    31.4  
15 mu_1       0.6     1.18     1.04        1.87e- 1     8.40 
16 mu_1       0.7     1.21     0.992       4.44e- 2     5.61 
17 mu_1       0.8     1.79     0.458       7.63e- 4    34.3  
18 mu_1       0.9     3.74     0.0409      3.78e- 7   178.   
19 mu_0       0.1     0.0160   0.00000922  0            0.665
20 mu_0       0.2     0.261    0.00131     0           14.7  
21 mu_0       0.3     0.931    0.0172      0           50.5  
22 mu_0       0.4     1.50     0.123       0           70.9  
23 mu_0       0.5     1.52     0.459       0           52.4  
24 mu_0       0.6     1.27     0.898       0           21.0  
25 mu_0       0.7     1.13     1.12        0            3.98 
26 mu_0       0.8     1.20     0.907       0            7.57 
27 mu_0       0.9     1.78     0.165       0           45.7  
[1] "Total run time was 161.713 seconds"
