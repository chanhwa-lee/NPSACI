
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1291"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  4  7  3  3 14  9  7  5  6  2  8  9  5  6  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02939 0.35810 0.61295 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
782 509 
[1] "treatment indicator table: "

  0   1 
481 810 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 628
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 663
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 64.128 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.617 0.232
 2 mu         0.1   0.2 0.643 0.209
 3 mu         0.1   0.3 0.645 0.199
 4 mu         0.1   0.4 0.642 0.203
 5 mu         0.1   0.5 0.643 0.207
 6 mu         0.2   0.1 0.521 0.151
 7 mu         0.2   0.2 0.581 0.154
 8 mu         0.2   0.3 0.624 0.132
 9 mu         0.2   0.4 0.641 0.120
10 mu         0.2   0.5 0.646 0.118
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.708       0.0985 0.0000675     19.1 
 2 mu         0.2      0.848       0.516  0.0124        12.2 
 3 mu         0.3      0.972       0.859  0.150          5.39
 4 mu         0.4      1.01        1      0.471          2.48
 5 mu         0.5      1.02        1.01   0.714          1.33
 6 mu         0.6      1.01        1.00   0.932          1.09
 7 mu         0.7      0.991       1      0.823          1.17
 8 mu         0.8      0.979       0.997  0.647          1.46
 9 mu         0.9      0.959       0.903  0.174          3.08
10 mu_1       0.1      0.741       0.286  0.000312      17.6 
11 mu_1       0.2      0.900       0.812  0.0294         6.07
12 mu_1       0.3      0.999       0.985  0.238          3.76
13 mu_1       0.4      1.02        1.00   0.579          1.99
14 mu_1       0.5      1.01        1.01   0.782          1.17
15 mu_1       0.6      1.00        1      0.920          1.08
16 mu_1       0.7      0.987       1      0.786          1.20
17 mu_1       0.8      0.978       0.987  0.598          1.56
18 mu_1       0.9      0.958       0.902  0.154          3.29
19 mu_0       0.1      0.705       0.0790 0.0000404     19.3 
20 mu_0       0.2      0.835       0.434  0.00819       13.7 
21 mu_0       0.3      0.961       0.820  0.110          6.71
22 mu_0       0.4      1.01        0.998  0.398          2.88
23 mu_0       0.5      1.02        1.01   0.646          1.49
24 mu_0       0.6      1.01        1.01   0.851          1.12
25 mu_0       0.7      1.00        1      0.905          1.11
26 mu_0       0.8      0.984       1      0.757          1.36
27 mu_0       0.9      0.974       0.997  0.359          1.85
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.419    0.0000429  3.64e-13     14.3 
 2 mu         0.2      1.47     0.00440    3.35e- 8     98.8 
 3 mu         0.3      1.99     0.0586     2.21e- 5    132.  
 4 mu         0.4      1.58     0.245      1.39e- 3     75.1 
 5 mu         0.5      1.15     0.681      2.86e- 2     21.4 
 6 mu         0.6      1.04     1.02       2.70e- 1      2.93
 7 mu         0.7      1.05     0.966      1.34e- 1      4.19
 8 mu         0.8      0.983    0.490      1.51e- 3      9.00
 9 mu         0.9      0.576    0.0666     3.32e- 7      8.33
10 mu_1       0.1      0.932    0.000313   3.09e-12     39.7 
11 mu_1       0.2      1.99     0.0154     1.42e- 7    137.  
12 mu_1       0.3      1.96     0.138      6.20e- 5    122.  
13 mu_1       0.4      1.38     0.413      2.92e- 3     52.2 
14 mu_1       0.5      1.07     0.855      4.81e- 2     11.9 
15 mu_1       0.6      1.03     1.04       1.53e- 1      2.00
16 mu_1       0.7      1.04     0.889      2.72e- 2      4.92
17 mu_1       0.8      0.948    0.396      5.23e- 4      9.56
18 mu_1       0.9      0.526    0.0387     1.02e- 7      7.87
19 mu_0       0.1      0.362    0.0000145  6.07e-14     13.2 
20 mu_0       0.2      1.34     0.00193    6.28e- 9     89.2 
21 mu_0       0.3      2.00     0.0245     4.74e- 6    136.  
22 mu_0       0.4      1.71     0.136      3.65e- 4     90.4 
23 mu_0       0.5      1.23     0.463      9.02e- 3     30.9 
24 mu_0       0.6      1.05     0.901      1.07e- 1      5.29
25 mu_0       0.7      1.06     1.06       3.21e- 1      2.46
26 mu_0       0.8      1.12     0.948      5.44e- 3      7.10
27 mu_0       0.9      1.02     0.237      2.40e- 6     12.5 
[1] "Total run time was 66.052 seconds"
