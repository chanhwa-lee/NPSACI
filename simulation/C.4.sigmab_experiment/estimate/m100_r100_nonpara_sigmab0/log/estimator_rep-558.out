
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1298"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 3  7  8  5  7  2  5  7 10  5  4  7 11  6  4  9 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03654 0.34745 0.59014 0.94584 5.00000 
[1] "event indicator table: "

  0   1 
775 523 
[1] "treatment indicator table: "

  0   1 
483 815 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 649
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 39"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 649
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 47"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 68"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 84.254 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.263 0.155 
 2 mu         0.1   0.2 0.395 0.134 
 3 mu         0.1   0.3 0.437 0.150 
 4 mu         0.1   0.4 0.472 0.166 
 5 mu         0.1   0.5 0.499 0.180 
 6 mu         0.2   0.1 0.299 0.101 
 7 mu         0.2   0.2 0.393 0.0833
 8 mu         0.2   0.3 0.430 0.0929
 9 mu         0.2   0.4 0.456 0.102 
10 mu         0.2   0.5 0.493 0.111 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.596       0.0903 0.0000564     21.7 
 2 mu         0.2      0.761       0.448  0.00645       15.1 
 3 mu         0.3      0.848       0.789  0.0692         5.06
 4 mu         0.4      0.928       0.984  0.269          1.72
 5 mu         0.5      0.975       1      0.577          1.52
 6 mu         0.6      0.996       1      0.762          1.18
 7 mu         0.7      1.01        1      0.759          1.40
 8 mu         0.8      1.01        1      0.613          2.19
 9 mu         0.9      0.964       0.949  0.170          2.40
10 mu_1       0.1      0.789       0.269  0.000272      25.6 
11 mu_1       0.2      0.834       0.723  0.0160         9.13
12 mu_1       0.3      0.904       0.931  0.119          2.42
13 mu_1       0.4      0.962       1      0.366          1.76
14 mu_1       0.5      0.990       1      0.669          1.45
15 mu_1       0.6      1.00        1      0.811          1.15
16 mu_1       0.7      1.01        1      0.739          1.49
17 mu_1       0.8      1.01        1      0.592          2.28
18 mu_1       0.9      0.958       0.941  0.147          2.33
19 mu_0       0.1      0.575       0.0694 0.0000324     21.3 
20 mu_0       0.2      0.743       0.366  0.00405       16.6 
21 mu_0       0.3      0.824       0.719  0.0477         6.19
22 mu_0       0.4      0.906       0.954  0.205          1.86
23 mu_0       0.5      0.961       0.998  0.485          1.64
24 mu_0       0.6      0.986       1      0.688          1.28
25 mu_0       0.7      1.00        1      0.792          1.19
26 mu_0       0.8      1.02        1      0.696          1.81
27 mu_0       0.9      1.02        1      0.382          2.95
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.146    0.0000337  3.55e-13      6.73
 2 mu         0.2      0.510    0.00524    1.16e- 8     14.9 
 3 mu         0.3      1.04     0.0702     4.46e- 6     18.2 
 4 mu         0.4      1.40     0.251      2.86e- 4     29.1 
 5 mu         0.5      1.40     0.676      6.77e- 3     22.4 
 6 mu         0.6      1.26     1.04       8.34e- 2      8.63
 7 mu         0.7      1.17     1.02       4.89e- 2      5.40
 8 mu         0.8      0.992    0.553      1.45e- 3      5.69
 9 mu         0.9      0.631    0.0900     2.26e- 6      9.13
10 mu_1       0.1      0.412    0.000254   3.15e-12     19.2 
11 mu_1       0.2      0.843    0.0155     5.45e- 8     21.3 
12 mu_1       0.3      1.29     0.160      1.39e- 5     24.9 
13 mu_1       0.4      1.46     0.424      6.70e- 4     30.0 
14 mu_1       0.5      1.35     0.873      1.27e- 2     18.5 
15 mu_1       0.6      1.22     1.08       1.30e- 1      5.92
16 mu_1       0.7      1.14     0.937      2.00e- 2      5.57
17 mu_1       0.8      0.947    0.440      5.17e- 4      5.53
18 mu_1       0.9      0.600    0.0550     7.18e- 7      9.55
19 mu_0       0.1      0.116    0.0000123  0             5.34
20 mu_0       0.2      0.427    0.00244    0            13.3 
21 mu_0       0.3      0.929    0.0302     0            17.6 
22 mu_0       0.4      1.36     0.143      0            28.5 
23 mu_0       0.5      1.45     0.472      0            26.4 
24 mu_0       0.6      1.32     0.981      0            12.7 
25 mu_0       0.7      1.23     1.01       0             5.00
26 mu_0       0.8      1.17     0.966      0             6.32
27 mu_0       0.9      0.912    0.296      0             9.02
[1] "Total run time was 86.752 seconds"
