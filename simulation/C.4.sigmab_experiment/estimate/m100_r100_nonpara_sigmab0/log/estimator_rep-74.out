
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1283"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  6  8  4  9  6  6  3  5  5  3 10  4  8  6 11 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03304 0.37166 0.59584 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
768 515 
[1] "treatment indicator table: "

  0   1 
459 824 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 657
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 626
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 22"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 139.137 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.327 0.111 
 2 mu         0.1   0.2 0.447 0.110 
 3 mu         0.1   0.3 0.547 0.122 
 4 mu         0.1   0.4 0.667 0.171 
 5 mu         0.1   0.5 0.676 0.164 
 6 mu         0.2   0.1 0.300 0.0807
 7 mu         0.2   0.2 0.396 0.0651
 8 mu         0.2   0.3 0.472 0.0761
 9 mu         0.2   0.4 0.576 0.105 
10 mu         0.2   0.5 0.585 0.0990
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.755        0.140 0.0000929     16.9 
 2 mu         0.2      0.809        0.524 0.0155         6.84
 3 mu         0.3      0.918        0.848 0.172          2.75
 4 mu         0.4      0.981        0.992 0.513          2.02
 5 mu         0.5      0.995        1     0.734          1.44
 6 mu         0.6      0.999        1     0.912          1.16
 7 mu         0.7      1.01         1.00  0.796          1.16
 8 mu         0.8      1.01         1     0.507          2.07
 9 mu         0.9      0.994        0.954 0.112          4.37
10 mu_1       0.1      0.661        0.371 0.000424       6.16
11 mu_1       0.2      0.821        0.772 0.0360         3.56
12 mu_1       0.3      0.943        0.949 0.273          2.26
13 mu_1       0.4      0.990        0.994 0.596          1.93
14 mu_1       0.5      0.997        1     0.779          1.28
15 mu_1       0.6      1.00         1     0.920          1.15
16 mu_1       0.7      1.01         1.00  0.757          1.23
17 mu_1       0.8      1.01         1     0.469          2.25
18 mu_1       0.9      0.991        0.954 0.0951         4.50
19 mu_0       0.1      0.766        0.112 0.0000560     18.5 
20 mu_0       0.2      0.805        0.458 0.0103         8.25
21 mu_0       0.3      0.907        0.802 0.128          3.54
22 mu_0       0.4      0.975        0.981 0.438          2.07
23 mu_0       0.5      0.993        1     0.682          1.60
24 mu_0       0.6      0.995        1     0.862          1.16
25 mu_0       0.7      1.00         1     0.887          1.14
26 mu_0       0.8      1.01         1     0.661          1.36
27 mu_0       0.9      1.02         0.998 0.260          3.19
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.411   0.0000366   8.60e-15     28.6 
 2 mu         0.2      1.03    0.00402     1.00e- 9     39.6 
 3 mu         0.3      1.32    0.0539      8.64e- 7     37.4 
 4 mu         0.4      1.22    0.270       9.85e- 5     28.9 
 5 mu         0.5      1.07    0.694       3.65e- 3     11.9 
 6 mu         0.6      1.06    0.950       6.47e- 2      3.57
 7 mu         0.7      1.18    0.994       7.12e- 2      7.25
 8 mu         0.8      1.61    0.546       1.49e- 3     46.8 
 9 mu         0.9      2.90    0.0622      1.16e- 6    173.  
10 mu_1       0.1      0.895   0.000231    8.12e-14     52.0 
11 mu_1       0.2      1.36    0.0128      4.73e- 9     36.0 
12 mu_1       0.3      1.36    0.112       2.72e- 6     39.0 
13 mu_1       0.4      1.15    0.460       2.33e- 4     22.6 
14 mu_1       0.5      1.05    0.875       6.89e- 3      7.42
15 mu_1       0.6      1.08    1.00        1.02e- 1      3.27
16 mu_1       0.7      1.22    0.980       1.85e- 2      9.79
17 mu_1       0.8      1.71    0.451       4.95e- 4     55.3 
18 mu_1       0.9      3.01    0.0416      3.44e- 7    182.  
19 mu_0       0.1      0.357   0.00000719  0            26.0 
20 mu_0       0.2      0.953   0.00141     0            40.5 
21 mu_0       0.3      1.31    0.0261      0            36.7 
22 mu_0       0.4      1.26    0.152       0            33.1 
23 mu_0       0.5      1.09    0.452       0            16.3 
24 mu_0       0.6      1.04    0.917       0             4.36
25 mu_0       0.7      1.08    1.04        0             3.76
26 mu_0       0.8      1.21    0.877       0            14.1 
27 mu_0       0.9      1.90    0.191       0            96.3 
[1] "Total run time was 142.822 seconds"
