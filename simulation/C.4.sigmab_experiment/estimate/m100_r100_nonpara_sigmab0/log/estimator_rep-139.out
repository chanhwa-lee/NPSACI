
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1293"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 3  6  6  7  6  6  5  4 10  8  5  7  7  6  9  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0498  0.3903  0.6514  1.0000  5.0000 
[1] "event indicator table: "

  0   1 
777 516 
[1] "treatment indicator table: "

  0   1 
426 867 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 646
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 647
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 72"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 86.113 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.415 0.167 
 2 mu         0.1   0.2 0.576 0.230 
 3 mu         0.1   0.3 0.642 0.247 
 4 mu         0.1   0.4 0.659 0.261 
 5 mu         0.1   0.5 0.671 0.273 
 6 mu         0.2   0.1 0.385 0.0999
 7 mu         0.2   0.2 0.493 0.128 
 8 mu         0.2   0.3 0.570 0.139 
 9 mu         0.2   0.4 0.588 0.145 
10 mu         0.2   0.5 0.608 0.151 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.27        0.0914 0.0000465     93.9 
 2 mu         0.2      1.01        0.471  0.00576       32.7 
 3 mu         0.3      0.997       0.798  0.0661         7.36
 4 mu         0.4      1.02        0.962  0.272          2.74
 5 mu         0.5      1.02        1.01   0.613          1.60
 6 mu         0.6      1.01        1.00   0.872          1.30
 7 mu         0.7      0.996       1      0.852          1.13
 8 mu         0.8      0.986       1      0.593          1.35
 9 mu         0.9      0.981       0.990  0.164          1.82
10 mu_1       0.1      1.14        0.272  0.000226      58.9 
11 mu_1       0.2      0.991       0.704  0.0145        10.9 
12 mu_1       0.3      1.03        0.939  0.116          3.77
13 mu_1       0.4      1.03        1      0.374          2.22
14 mu_1       0.5      1.02        1.01   0.719          1.46
15 mu_1       0.6      1.01        1      0.901          1.25
16 mu_1       0.7      0.993       0.998  0.821          1.15
17 mu_1       0.8      0.986       0.995  0.546          1.40
18 mu_1       0.9      0.980       0.992  0.142          1.85
19 mu_0       0.1      1.28        0.0698 0.0000265     97.8 
20 mu_0       0.2      1.02        0.396  0.00357       38.1 
21 mu_0       0.3      0.983       0.713  0.0449         9.54
22 mu_0       0.4      1.01        0.952  0.203          3.09
23 mu_0       0.5      1.02        1      0.507          1.83
24 mu_0       0.6      1.01        1.01   0.824          1.38
25 mu_0       0.7      1.00        1      0.873          1.15
26 mu_0       0.8      0.987       0.995  0.780          1.20
27 mu_0       0.9      0.990       0.983  0.361          1.60
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.0382   0.00000841  7.83e-17     0.711
 2 mu         0.2     0.244    0.00183     3.65e-11     5.26 
 3 mu         0.3     0.578    0.0310      7.07e- 8    12.0  
 4 mu         0.4     0.878    0.204       1.43e- 5    12.6  
 5 mu         0.5     1.06     0.576       8.29e- 4     7.47 
 6 mu         0.6     1.12     0.882       2.12e- 2     3.23 
 7 mu         0.7     1.13     1.04        1.17e- 1     3.56 
 8 mu         0.8     1.18     0.658       7.77e- 3     8.00 
 9 mu         0.9     1.29     0.0863      3.46e- 5    26.3  
10 mu_1       0.1     0.146    0.0000550   7.43e-16     2.67 
11 mu_1       0.2     0.482    0.00560     1.73e-10     9.39 
12 mu_1       0.3     0.804    0.0761      2.24e- 7    14.3  
13 mu_1       0.4     1.00     0.340       3.41e- 5    11.3  
14 mu_1       0.5     1.09     0.787       1.58e- 3     5.34 
15 mu_1       0.6     1.12     1.04        3.36e- 2     2.96 
16 mu_1       0.7     1.13     1.04        7.33e- 2     4.06 
17 mu_1       0.8     1.19     0.515       4.25e- 3     9.41 
18 mu_1       0.9     1.29     0.0645      1.68e- 5    27.5  
19 mu_0       0.1     0.0262   0.00000250  0            0.494
20 mu_0       0.2     0.184    0.000701    0            4.22 
21 mu_0       0.3     0.481    0.0144      0           11.0  
22 mu_0       0.4     0.795    0.108       0           13.5  
23 mu_0       0.5     1.02     0.383       0            9.60 
24 mu_0       0.6     1.13     0.760       0            4.16 
25 mu_0       0.7     1.14     1.03        0            2.68 
26 mu_0       0.8     1.14     1.04        0            5.35 
27 mu_0       0.9     1.30     0.292       0           15.5  
[1] "Total run time was 88.804 seconds"
