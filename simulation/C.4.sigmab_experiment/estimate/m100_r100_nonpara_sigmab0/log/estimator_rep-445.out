
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1282"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 3  5  5  3  5  8 16  5  6  7  9  6  5  3  9  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.01963 0.30775 0.61523 1.00000 6.00000 
[1] "event indicator table: "

  0   1 
755 527 
[1] "treatment indicator table: "

  0   1 
477 805 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 605
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 677
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 91.074 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.407 0.0946
 2 mu         0.1   0.2 0.454 0.102 
 3 mu         0.1   0.3 0.460 0.112 
 4 mu         0.1   0.4 0.588 0.125 
 5 mu         0.1   0.5 0.590 0.125 
 6 mu         0.2   0.1 0.367 0.0558
 7 mu         0.2   0.2 0.436 0.0564
 8 mu         0.2   0.3 0.456 0.0622
 9 mu         0.2   0.4 0.541 0.0652
10 mu         0.2   0.5 0.547 0.0662
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.323       0.121  0.0000707      2.76
 2 mu         0.2      0.644       0.540  0.00807        2.91
 3 mu         0.3      0.878       0.840  0.0851         2.41
 4 mu         0.4      0.968       0.967  0.320          1.97
 5 mu         0.5      0.990       0.996  0.635          1.38
 6 mu         0.6      0.994       1      0.823          1.14
 7 mu         0.7      0.988       1      0.831          1.14
 8 mu         0.8      0.978       0.999  0.439          1.92
 9 mu         0.9      0.973       0.912  0.0677         4.83
10 mu_1       0.1      0.526       0.347  0.000358       2.89
11 mu_1       0.2      0.821       0.793  0.0208         3.01
12 mu_1       0.3      0.956       0.926  0.150          2.45
13 mu_1       0.4      0.989       0.993  0.437          1.72
14 mu_1       0.5      0.994       0.997  0.723          1.26
15 mu_1       0.6      0.994       0.997  0.855          1.11
16 mu_1       0.7      0.987       1      0.785          1.19
17 mu_1       0.8      0.977       0.999  0.391          2.11
18 mu_1       0.9      0.974       0.900  0.0564         5.00
19 mu_0       0.1      0.300       0.0994 0.0000387      3.00
20 mu_0       0.2      0.600       0.485  0.00489        2.88
21 mu_0       0.3      0.845       0.803  0.0574         2.49
22 mu_0       0.4      0.955       0.953  0.242          2.14
23 mu_0       0.5      0.986       0.993  0.547          1.50
24 mu_0       0.6      0.994       1      0.774          1.20
25 mu_0       0.7      0.991       0.998  0.831          1.09
26 mu_0       0.8      0.980       0.996  0.634          1.37
27 mu_0       0.9      0.959       0.974  0.169          3.23
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.0291    0.0000648  4.35e-12     0.769
 2 mu         0.2     0.185     0.00633    1.27e- 7     3.04 
 3 mu         0.3     0.489     0.0770     4.85e- 5     4.75 
 4 mu         0.4     0.816     0.333      3.11e- 3     6.54 
 5 mu         0.5     1.02      0.727      3.80e- 2     6.27 
 6 mu         0.6     1.10      1.04       2.08e- 1     3.92 
 7 mu         0.7     1.16      0.988      5.29e- 2     7.20 
 8 mu         0.8     1.43      0.483      2.33e- 3    34.0  
 9 mu         0.9     1.95      0.0494     5.20e- 6    99.4  
10 mu_1       0.1     0.109     0.000345   4.07e-11     2.56 
11 mu_1       0.2     0.364     0.0245     5.93e- 7     5.06 
12 mu_1       0.3     0.690     0.153      1.52e- 4     5.76 
13 mu_1       0.4     0.948     0.532      7.29e- 3     6.89 
14 mu_1       0.5     1.07      0.900      6.18e- 2     5.79 
15 mu_1       0.6     1.12      1.04       2.19e- 1     3.42 
16 mu_1       0.7     1.19      0.906      3.11e- 2     9.21 
17 mu_1       0.8     1.50      0.379      1.20e- 3    39.8  
18 mu_1       0.9     1.97      0.0348     2.38e- 6   104.   
19 mu_0       0.1     0.0202    0.0000214  0            0.570
20 mu_0       0.2     0.140     0.00270    0            2.53 
21 mu_0       0.3     0.402     0.0404     0            4.38 
22 mu_0       0.4     0.728     0.183      0            6.31 
23 mu_0       0.5     0.969     0.506      0            6.75 
24 mu_0       0.6     1.07      0.945      0            5.28 
25 mu_0       0.7     1.10      1.08       0            3.88 
26 mu_0       0.8     1.18      0.813      0           14.0  
27 mu_0       0.9     1.75      0.178      0           62.1  
[1] "Total run time was 93.566 seconds"
