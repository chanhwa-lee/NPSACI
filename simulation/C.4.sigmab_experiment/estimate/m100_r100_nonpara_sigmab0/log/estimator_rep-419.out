
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1225"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  6  5  7  4  9 10  6  8  6  4 11  3  5  5  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0409  0.4067  0.6574  1.0000  7.0000 
[1] "event indicator table: "

  0   1 
739 486 
[1] "treatment indicator table: "

  0   1 
444 781 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 594
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 39"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 631
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 522.094 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.404 0.122 
 2 mu         0.1   0.2 0.523 0.130 
 3 mu         0.1   0.3 0.579 0.138 
 4 mu         0.1   0.4 0.624 0.154 
 5 mu         0.1   0.5 0.685 0.183 
 6 mu         0.2   0.1 0.322 0.0621
 7 mu         0.2   0.2 0.442 0.0693
 8 mu         0.2   0.3 0.509 0.0831
 9 mu         0.2   0.4 0.556 0.104 
10 mu         0.2   0.5 0.625 0.136 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.753        0.252 0.0000622     15.0 
 2 mu         0.2      0.954        0.722 0.0107         6.72
 3 mu         0.3      1.03         0.974 0.123          5.08
 4 mu         0.4      1.02         1     0.350          3.06
 5 mu         0.5      1.00         1     0.629          1.53
 6 mu         0.6      0.994        0.999 0.887          1.10
 7 mu         0.7      0.996        0.996 0.873          1.18
 8 mu         0.8      0.994        0.997 0.716          1.31
 9 mu         0.9      0.953        0.922 0.300          2.05
10 mu_1       0.1      0.877        0.626 0.000285       6.71
11 mu_1       0.2      1.00         0.998 0.0250         5.89
12 mu_1       0.3      1.03         1     0.198          4.48
13 mu_1       0.4      1.01         1     0.491          2.28
14 mu_1       0.5      0.995        1     0.759          1.25
15 mu_1       0.6      0.993        0.999 0.876          1.07
16 mu_1       0.7      0.997        0.995 0.861          1.21
17 mu_1       0.8      0.993        1.00  0.673          1.37
18 mu_1       0.9      0.947        0.901 0.271          2.11
19 mu_0       0.1      0.739        0.209 0.0000375     16.5 
20 mu_0       0.2      0.942        0.635 0.00711        8.02
21 mu_0       0.3      1.03         0.959 0.0912         5.34
22 mu_0       0.4      1.03         1     0.256          3.58
23 mu_0       0.5      1.01         1     0.500          1.82
24 mu_0       0.6      0.996        1     0.770          1.17
25 mu_0       0.7      0.995        1     0.854          1.09
26 mu_0       0.8      0.999        1     0.812          1.29
27 mu_0       0.9      1.01         1     0.563          1.60
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.123     0.0000429  9.66e-12      8.18
 2 mu         0.2     0.446     0.00518    1.41e- 7     25.5 
 3 mu         0.3     0.769     0.0606     3.59e- 5     29.6 
 4 mu         0.4     0.978     0.279      1.73e- 3     20.4 
 5 mu         0.5     1.05      0.687      3.28e- 2      9.28
 6 mu         0.6     1.06      0.995      3.37e- 1      2.72
 7 mu         0.7     1.08      1.01       1.01e- 1      3.09
 8 mu         0.8     1.08      0.529      3.88e- 3      9.44
 9 mu         0.9     0.952     0.0624     7.69e- 6     24.6 
10 mu_1       0.1     0.368     0.000272   9.02e-11     22.3 
11 mu_1       0.2     0.722     0.0173     6.57e- 7     34.8 
12 mu_1       0.3     0.943     0.135      1.12e- 4     26.9 
13 mu_1       0.4     1.05      0.450      4.03e- 3     13.9 
14 mu_1       0.5     1.06      0.938      6.12e- 2      5.24
15 mu_1       0.6     1.07      1.04       4.16e- 1      2.01
16 mu_1       0.7     1.08      0.944      5.39e- 2      3.86
17 mu_1       0.8     1.07      0.435      1.82e- 3     11.0 
18 mu_1       0.9     0.918     0.0396     3.20e- 6     25.5 
19 mu_0       0.1     0.0961    0.0000178  7.16e-13      6.61
20 mu_0       0.2     0.377     0.00206    1.17e- 8     23.2 
21 mu_0       0.3     0.695     0.0285     3.42e- 6     30.7 
22 mu_0       0.4     0.933     0.148      1.92e- 4     24.8 
23 mu_0       0.5     1.04      0.493      4.37e- 3     13.5 
24 mu_0       0.6     1.06      0.915      5.61e- 2      4.89
25 mu_0       0.7     1.06      1.02       2.09e- 1      2.33
26 mu_0       0.8     1.10      0.924      1.21e- 2      5.56
27 mu_0       0.9     1.26      0.237      4.81e- 5     16.4 
[1] "Total run time was 525.999 seconds"
