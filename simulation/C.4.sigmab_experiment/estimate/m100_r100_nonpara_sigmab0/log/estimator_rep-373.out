
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1323"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  4  1  7  7  6  7  5  6  8  5 13  4  4  7 10 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04515 0.36602 0.62508 1.00000 4.00000 
[1] "event indicator table: "

  0   1 
801 522 
[1] "treatment indicator table: "

  0   1 
465 858 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 658
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 665
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 126.143 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.492 0.123 
 2 mu         0.1   0.2 0.523 0.111 
 3 mu         0.1   0.3 0.767 0.253 
 4 mu         0.1   0.4 0.765 0.236 
 5 mu         0.1   0.5 0.845 0.234 
 6 mu         0.2   0.1 0.353 0.0723
 7 mu         0.2   0.2 0.400 0.0673
 8 mu         0.2   0.3 0.586 0.123 
 9 mu         0.2   0.4 0.603 0.117 
10 mu         0.2   0.5 0.685 0.117 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.604        0.146 0.0000636      6.38
 2 mu         0.2      0.832        0.568 0.0102         5.27
 3 mu         0.3      0.931        0.842 0.111          3.10
 4 mu         0.4      0.969        0.959 0.385          1.95
 5 mu         0.5      0.987        0.985 0.717          1.42
 6 mu         0.6      0.996        1     0.870          1.17
 7 mu         0.7      1.00         1     0.804          1.21
 8 mu         0.8      0.999        1     0.673          1.60
 9 mu         0.9      0.982        0.973 0.301          2.19
10 mu_1       0.1      0.790        0.391 0.000289       7.96
11 mu_1       0.2      0.900        0.801 0.0235         3.78
12 mu_1       0.3      0.954        0.953 0.177          2.76
13 mu_1       0.4      0.980        0.971 0.487          1.58
14 mu_1       0.5      0.992        0.999 0.791          1.37
15 mu_1       0.6      0.998        1     0.858          1.12
16 mu_1       0.7      1.00         1     0.778          1.28
17 mu_1       0.8      0.997        1     0.667          1.66
18 mu_1       0.9      0.979        0.963 0.266          2.37
19 mu_0       0.1      0.583        0.119 0.0000385      6.20
20 mu_0       0.2      0.815        0.507 0.00682        5.65
21 mu_0       0.3      0.922        0.809 0.0827         3.25
22 mu_0       0.4      0.962        0.943 0.318          2.20
23 mu_0       0.5      0.981        0.974 0.644          1.46
24 mu_0       0.6      0.992        1     0.850          1.26
25 mu_0       0.7      0.999        1     0.861          1.12
26 mu_0       0.8      1.00         1     0.700          1.33
27 mu_0       0.9      1.00         0.996 0.590          1.97
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.103    0.0000126   1.32e-13      6.75
 2 mu         0.2     0.324    0.00286     1.21e- 8      8.43
 3 mu         0.3     0.731    0.0369      8.00e- 6     24.5 
 4 mu         0.4     1.02     0.225       6.70e- 4     24.7 
 5 mu         0.5     1.08     0.602       1.72e- 2     11.0 
 6 mu         0.6     1.09     1.07        1.96e- 1      2.39
 7 mu         0.7     1.13     1.06        1.23e- 1      4.68
 8 mu         0.8     1.15     0.538       1.98e- 3     13.5 
 9 mu         0.9     0.895    0.0663      5.52e- 7     17.5 
10 mu_1       0.1     0.268    0.0000863   1.12e-12     13.5 
11 mu_1       0.2     0.541    0.0104      5.15e- 8     14.2 
12 mu_1       0.3     0.924    0.105       2.27e- 5     28.6 
13 mu_1       0.4     1.09     0.359       1.42e- 3     21.6 
14 mu_1       0.5     1.09     0.841       2.93e- 2      7.71
15 mu_1       0.6     1.09     1.07        2.77e- 1      2.30
16 mu_1       0.7     1.14     0.972       6.18e- 2      5.85
17 mu_1       0.8     1.15     0.455       8.68e- 4     14.8 
18 mu_1       0.9     0.863    0.0486      2.15e- 7     17.0 
19 mu_0       0.1     0.0848   0.00000255  0             6.00
20 mu_0       0.2     0.270    0.000841    0             8.43
21 mu_0       0.3     0.649    0.0175      0            22.7 
22 mu_0       0.4     0.970    0.0961      0            26.8 
23 mu_0       0.5     1.08     0.398       0            14.3 
24 mu_0       0.6     1.08     0.986       0             3.53
25 mu_0       0.7     1.11     1.16        0             2.63
26 mu_0       0.8     1.16     0.915       0             8.43
27 mu_0       0.9     1.18     0.245       0            21.9 
[1] "Total run time was 128.205 seconds"
