
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1238"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  7  4  2  6  7  7  9 13 10  8  3  4  4  4  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03672 0.35731 0.64376 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
736 502 
[1] "treatment indicator table: "

  0   1 
433 805 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 642
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 596
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 88.276 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.432 0.184
 2 mu         0.1   0.2 0.609 0.236
 3 mu         0.1   0.3 0.658 0.237
 4 mu         0.1   0.4 0.751 0.278
 5 mu         0.1   0.5 0.762 0.278
 6 mu         0.2   0.1 0.364 0.105
 7 mu         0.2   0.2 0.540 0.142
 8 mu         0.2   0.3 0.573 0.134
 9 mu         0.2   0.4 0.668 0.168
10 mu         0.2   0.5 0.684 0.163
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.563       0.0921 0.0000648     19.5 
 2 mu         0.2      0.710       0.425  0.00684        8.03
 3 mu         0.3      0.822       0.780  0.0812         3.99
 4 mu         0.4      0.901       0.918  0.282          2.02
 5 mu         0.5      0.962       0.986  0.521          1.54
 6 mu         0.6      0.996       1      0.750          1.24
 7 mu         0.7      1.00        1      0.879          1.15
 8 mu         0.8      1.00        1      0.638          1.31
 9 mu         0.9      1.00        1      0.161          2.49
10 mu_1       0.1      0.598       0.278  0.000269       6.09
11 mu_1       0.2      0.776       0.694  0.0156         5.67
12 mu_1       0.3      0.867       0.885  0.135          2.98
13 mu_1       0.4      0.932       0.966  0.368          1.79
14 mu_1       0.5      0.979       0.994  0.595          1.41
15 mu_1       0.6      1.00        1      0.805          1.17
16 mu_1       0.7      1.00        1      0.830          1.18
17 mu_1       0.8      1.00        1      0.596          1.36
18 mu_1       0.9      1.00        1      0.141          2.68
19 mu_0       0.1      0.559       0.0734 0.0000421     21.4 
20 mu_0       0.2      0.694       0.367  0.00465        9.64
21 mu_0       0.3      0.803       0.722  0.0583         4.42
22 mu_0       0.4      0.881       0.904  0.226          2.33
23 mu_0       0.5      0.946       0.965  0.446          1.68
24 mu_0       0.6      0.988       0.995  0.666          1.34
25 mu_0       0.7      1.00        1      0.880          1.13
26 mu_0       0.8      1.00        0.995  0.806          1.23
27 mu_0       0.9      0.997       1      0.347          1.55
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.0789   0.0000260   2.17e-12      3.03
 2 mu         0.2     0.316    0.00387     5.14e- 8      6.72
 3 mu         0.3     0.712    0.0451      1.31e- 5     11.7 
 4 mu         0.4     1.07     0.230       6.32e- 4     18.7 
 5 mu         0.5     1.21     0.659       1.20e- 2     14.4 
 6 mu         0.6     1.18     0.984       1.23e- 1      5.55
 7 mu         0.7     1.13     0.986       1.07e- 1      3.26
 8 mu         0.8     1.09     0.673       3.30e- 3      9.47
 9 mu         0.9     1.02     0.119       2.07e- 6     19.5 
10 mu_1       0.1     0.259    0.000171    1.91e-11      8.65
11 mu_1       0.2     0.570    0.0121      2.40e- 7      9.60
12 mu_1       0.3     0.952    0.0981      4.08e- 5     16.0 
13 mu_1       0.4     1.19     0.383       1.47e- 3     19.3 
14 mu_1       0.5     1.22     0.837       2.23e- 2     11.9 
15 mu_1       0.6     1.17     1.02        1.91e- 1      4.95
16 mu_1       0.7     1.12     0.977       4.70e- 2      3.77
17 mu_1       0.8     1.09     0.552       1.65e- 3     10.9 
18 mu_1       0.9     1.01     0.0903      9.18e- 7     20.0 
19 mu_0       0.1     0.0590   0.00000957  0             2.40
20 mu_0       0.2     0.252    0.00164     0             6.00
21 mu_0       0.3     0.609    0.0226      0             9.81
22 mu_0       0.4     0.990    0.136       0            18.4 
23 mu_0       0.5     1.19     0.426       0            17.0 
24 mu_0       0.6     1.21     0.878       0             8.16
25 mu_0       0.7     1.16     1.08        0             4.94
26 mu_0       0.8     1.11     1.04        0             4.44
27 mu_0       0.9     1.14     0.325       0            15.0 
[1] "Total run time was 90.457 seconds"
