
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1206"
[1] "cluster size dist'n: "

 5  6  7  8 10 11 12 13 14 15 16 17 18 19 20 
 4  9  6  8 14  8  6  7  9  4  7  5  2  4  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02202 0.33722 0.59126 1.00000 4.00000 
[1] "event indicator table: "

  0   1 
741 465 
[1] "treatment indicator table: "

  0   1 
425 781 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 618
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 28"
[1] "     Cluster: 32"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 588
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 82.159 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.342 0.111 
 2 mu         0.1   0.2 0.415 0.126 
 3 mu         0.1   0.3 0.430 0.133 
 4 mu         0.1   0.4 0.520 0.151 
 5 mu         0.1   0.5 0.518 0.154 
 6 mu         0.2   0.1 0.354 0.0895
 7 mu         0.2   0.2 0.422 0.0906
 8 mu         0.2   0.3 0.436 0.0900
 9 mu         0.2   0.4 0.516 0.0987
10 mu         0.2   0.5 0.521 0.0968
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.794        0.142  0.000257     16.6 
 2 mu         0.2      0.951        0.637  0.0235       10.9 
 3 mu         0.3      0.995        0.900  0.194         5.04
 4 mu         0.4      1.00         0.988  0.492         2.16
 5 mu         0.5      1.00         1      0.732         1.59
 6 mu         0.6      0.998        1      0.887         1.24
 7 mu         0.7      1.00         1      0.852         1.26
 8 mu         0.8      1.02         1      0.578         2.36
 9 mu         0.9      1.05         1      0.180         5.66
10 mu_1       0.1      1.02         0.372  0.00111      15.5 
11 mu_1       0.2      0.981        0.856  0.0525        6.05
12 mu_1       0.3      0.997        0.987  0.300         2.49
13 mu_1       0.4      1.00         0.998  0.622         1.85
14 mu_1       0.5      1.00         1      0.814         1.47
15 mu_1       0.6      0.998        1      0.912         1.16
16 mu_1       0.7      1.00         1      0.820         1.33
17 mu_1       0.8      1.02         1      0.537         2.56
18 mu_1       0.9      1.05         1      0.159         5.86
19 mu_0       0.1      0.770        0.116  0.000162     16.7 
20 mu_0       0.2      0.944        0.559  0.0163       12.2 
21 mu_0       0.3      0.994        0.842  0.149         6.21
22 mu_0       0.4      1.01         0.973  0.396         2.78
23 mu_0       0.5      1.00         1      0.625         1.71
24 mu_0       0.6      0.997        1      0.806         1.36
25 mu_0       0.7      0.995        0.999  0.889         1.14
26 mu_0       0.8      1.00         1      0.739         1.56
27 mu_0       0.9      1.04         1      0.363         3.87
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.0595    0.0000583  2.81e-14      2.32
 2 mu         0.2     0.356     0.00447    5.82e- 9     12.9 
 3 mu         0.3     0.765     0.0505     6.59e- 6     19.6 
 4 mu         0.4     1.02      0.266      8.59e- 4     15.5 
 5 mu         0.5     1.07      0.654      2.18e- 2      7.32
 6 mu         0.6     1.09      1.08       1.79e- 1      2.26
 7 mu         0.7     1.25      1.04       8.63e- 2      9.46
 8 mu         0.8     1.70      0.611      2.54e- 3     40.7 
 9 mu         0.9     2.11      0.108      2.76e- 6     75.3 
10 mu_1       0.1     0.202     0.000366   2.53e-13      7.15
11 mu_1       0.2     0.635     0.0176     2.62e- 8     19.8 
12 mu_1       0.3     0.983     0.117      1.98e- 5     20.1 
13 mu_1       0.4     1.10      0.445      1.93e- 3     11.9 
14 mu_1       0.5     1.09      0.850      3.81e- 2      4.90
15 mu_1       0.6     1.12      1.12       2.61e- 1      2.21
16 mu_1       0.7     1.29      1.02       4.80e- 2     12.1 
17 mu_1       0.8     1.77      0.519      1.24e- 3     45.5 
18 mu_1       0.9     2.09      0.0717     1.22e- 6     74.9 
19 mu_0       0.1     0.0436    0.0000196  0             1.79
20 mu_0       0.2     0.286     0.00153    0            11.1 
21 mu_0       0.3     0.672     0.0246     0            19.4 
22 mu_0       0.4     0.958     0.147      0            17.9 
23 mu_0       0.5     1.04      0.462      0            10.1 
24 mu_0       0.6     1.05      0.962      0             3.53
25 mu_0       0.7     1.14      1.14       0             3.52
26 mu_0       0.8     1.44      0.987      0            21.4 
27 mu_0       0.9     2.27      0.352      0            79.3 
[1] "Total run time was 84.939 seconds"
