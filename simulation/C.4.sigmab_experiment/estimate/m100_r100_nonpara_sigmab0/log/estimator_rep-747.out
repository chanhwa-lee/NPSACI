
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1240"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 3  4  6 12 10 10  7  5  6  3  3  3  4 10  5  9 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03722 0.35108 0.61827 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
764 476 
[1] "treatment indicator table: "

  0   1 
418 822 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 629
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 611
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 71.872 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.373 0.0860
 2 mu         0.1   0.2 0.522 0.124 
 3 mu         0.1   0.3 0.634 0.176 
 4 mu         0.1   0.4 0.643 0.178 
 5 mu         0.1   0.5 0.709 0.178 
 6 mu         0.2   0.1 0.346 0.0629
 7 mu         0.2   0.2 0.454 0.0799
 8 mu         0.2   0.3 0.511 0.0904
 9 mu         0.2   0.4 0.545 0.101 
10 mu         0.2   0.5 0.620 0.117 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.417       0.0812 0.0000357     10.8 
 2 mu         0.2      0.699       0.397  0.00586        8.16
 3 mu         0.3      0.920       0.743  0.0668         7.58
 4 mu         0.4      1.00        0.959  0.252          4.57
 5 mu         0.5      1.00        1      0.537          1.99
 6 mu         0.6      0.998       0.999  0.826          1.23
 7 mu         0.7      0.999       0.998  0.761          1.15
 8 mu         0.8      0.995       1      0.484          1.26
 9 mu         0.9      0.949       0.991  0.124          1.96
10 mu_1       0.1      0.654       0.252  0.000163      11.4 
11 mu_1       0.2      0.858       0.693  0.0136         7.90
12 mu_1       0.3      0.992       0.926  0.108          7.02
13 mu_1       0.4      1.01        0.997  0.326          3.48
14 mu_1       0.5      1.00        1      0.614          1.58
15 mu_1       0.6      0.998       1.00   0.884          1.20
16 mu_1       0.7      1.00        1.00   0.726          1.15
17 mu_1       0.8      0.994       1      0.451          1.31
18 mu_1       0.9      0.946       0.985  0.109          2.08
19 mu_0       0.1      0.391       0.0619 0.0000216     10.8 
20 mu_0       0.2      0.660       0.333  0.00392        8.99
21 mu_0       0.3      0.889       0.673  0.0492         7.82
22 mu_0       0.4      0.991       0.937  0.202          5.29
23 mu_0       0.5      1.01        0.988  0.460          2.40
24 mu_0       0.6      0.997       1      0.729          1.28
25 mu_0       0.7      0.996       1      0.845          1.14
26 mu_0       0.8      0.998       1      0.617          1.18
27 mu_0       0.9      0.976       0.995  0.266          1.49
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.743   0.0000105   2.10e-13     44.3 
 2 mu         0.2      2.27    0.00155     1.93e- 8    146.  
 3 mu         0.3      2.99    0.0260      1.28e- 5    196.  
 4 mu         0.4      2.24    0.145       1.07e- 3    111.  
 5 mu         0.5      1.38    0.466       2.75e- 2     31.7 
 6 mu         0.6      1.06    0.913       2.04e- 1      4.96
 7 mu         0.7      1.06    0.973       2.23e- 1      2.43
 8 mu         0.8      1.02    0.713       2.23e- 3      6.04
 9 mu         0.9      0.828   0.160       4.91e- 7     15.0 
10 mu_1       0.1      1.48    0.0000710   1.79e-12     63.4 
11 mu_1       0.2      2.96    0.00567     8.22e- 8    203.  
12 mu_1       0.3      2.88    0.0546      3.62e- 5    181.  
13 mu_1       0.4      1.87    0.251       2.27e- 3     77.2 
14 mu_1       0.5      1.20    0.663       4.67e- 2     17.6 
15 mu_1       0.6      1.05    0.993       2.91e- 1      3.22
16 mu_1       0.7      1.07    0.965       8.69e- 2      2.89
17 mu_1       0.8      1.01    0.606       7.75e- 4      6.97
18 mu_1       0.9      0.811   0.122       1.52e- 7     16.6 
19 mu_0       0.1      0.661   0.00000287  0            42.2 
20 mu_0       0.2      2.10    0.000362    0           132.  
21 mu_0       0.3      3.04    0.0102      0           202.  
22 mu_0       0.4      2.49    0.0740      0           134.  
23 mu_0       0.5      1.55    0.292       0            45.8 
24 mu_0       0.6      1.09    0.710       0             7.84
25 mu_0       0.7      1.03    0.998       0             2.00
26 mu_0       0.8      1.06    1.02        0             3.89
27 mu_0       0.9      0.981   0.427       0             9.55
[1] "Total run time was 73.973 seconds"
