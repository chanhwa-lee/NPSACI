
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1231"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
11  6  7  3 14  3  3  5  4  3  6  6  5  9  9  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.01644 0.33911 0.58766 1.00000 4.57365 
[1] "event indicator table: "

  0   1 
766 465 
[1] "treatment indicator table: "

  0   1 
418 813 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 613
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 67"
[1] "     Cluster: 71"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 82"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 618
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 17"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 104.947 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.425 0.0917
 2 mu         0.1   0.2 0.457 0.0983
 3 mu         0.1   0.3 0.473 0.120 
 4 mu         0.1   0.4 0.580 0.134 
 5 mu         0.1   0.5 0.575 0.133 
 6 mu         0.2   0.1 0.386 0.0549
 7 mu         0.2   0.2 0.425 0.0578
 8 mu         0.2   0.3 0.454 0.0718
 9 mu         0.2   0.4 0.543 0.0813
10 mu         0.2   0.5 0.546 0.0783
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.619        0.172  0.000205     10.6 
 2 mu         0.2      0.810        0.577  0.0189        4.85
 3 mu         0.3      0.933        0.892  0.160         3.40
 4 mu         0.4      0.981        0.997  0.392         2.13
 5 mu         0.5      0.997        1      0.666         1.62
 6 mu         0.6      1.00         1      0.895         1.22
 7 mu         0.7      0.997        1      0.854         1.11
 8 mu         0.8      0.978        1      0.519         1.24
 9 mu         0.9      0.928        0.956  0.125         2.02
10 mu_1       0.1      0.704        0.478  0.000924      5.87
11 mu_1       0.2      0.883        0.833  0.0437        4.66
12 mu_1       0.3      0.959        0.989  0.244         2.84
13 mu_1       0.4      0.988        1      0.475         1.87
14 mu_1       0.5      0.999        1      0.748         1.52
15 mu_1       0.6      1.00         1      0.914         1.15
16 mu_1       0.7      0.995        1      0.817         1.12
17 mu_1       0.8      0.975        1      0.471         1.31
18 mu_1       0.9      0.923        0.946  0.107         2.14
19 mu_0       0.1      0.609        0.137  0.000125     11.6 
20 mu_0       0.2      0.792        0.502  0.0128        5.64
21 mu_0       0.3      0.922        0.839  0.120         3.72
22 mu_0       0.4      0.977        0.995  0.336         2.36
23 mu_0       0.5      0.995        1      0.584         1.71
24 mu_0       0.6      1.00         1      0.817         1.33
25 mu_0       0.7      1.00         1      0.912         1.13
26 mu_0       0.8      0.991        1      0.713         1.15
27 mu_0       0.9      0.970        1      0.293         1.40
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.237   0.0000890   1.46e-12     16.7 
 2 mu         0.2      0.602   0.00581     4.25e- 8     29.3 
 3 mu         0.3      0.911   0.0456      1.63e- 5     25.9 
 4 mu         0.4      1.09    0.233       1.04e- 3     17.5 
 5 mu         0.5      1.13    0.585       2.47e- 2     10.8 
 6 mu         0.6      1.12    1.04        2.39e- 1      3.45
 7 mu         0.7      1.15    1.09        3.18e- 1      3.21
 8 mu         0.8      1.17    0.735       1.83e- 2     11.4 
 9 mu         0.9      1.04    0.151       3.75e- 5     33.4 
10 mu_1       0.1      0.605   0.000674    1.37e-11     37.1 
11 mu_1       0.2      0.893   0.0226      1.99e- 7     32.6 
12 mu_1       0.3      1.06    0.135       5.08e- 5     19.2 
13 mu_1       0.4      1.13    0.392       2.45e- 3     16.4 
14 mu_1       0.5      1.12    0.809       4.63e- 2      8.08
15 mu_1       0.6      1.12    1.11        3.48e- 1      2.47
16 mu_1       0.7      1.16    1.10        1.19e- 1      4.58
17 mu_1       0.8      1.16    0.635       7.95e- 3     13.4 
18 mu_1       0.9      1.01    0.109       1.56e- 5     34.7 
19 mu_0       0.1      0.196   0.00000804  0            14.4 
20 mu_0       0.2      0.529   0.00130     0            28.5 
21 mu_0       0.3      0.846   0.0207      0            28.8 
22 mu_0       0.4      1.06    0.0887      0            20.3 
23 mu_0       0.5      1.13    0.378       0            13.5 
24 mu_0       0.6      1.12    0.872       0             5.39
25 mu_0       0.7      1.12    1.11        0             2.40
26 mu_0       0.8      1.18    1.15        0             5.02
27 mu_0       0.9      1.24    0.380       0            20.8 
[1] "Total run time was 107.413 seconds"
