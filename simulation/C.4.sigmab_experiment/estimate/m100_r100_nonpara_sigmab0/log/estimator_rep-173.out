
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1299"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
10  6  4  5  5  2  7  3  6  9  9  5  3  6 11  9 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03365 0.34789 0.61157 1.00000 4.78548 
[1] "event indicator table: "

  0   1 
775 524 
[1] "treatment indicator table: "

  0   1 
443 856 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 663
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 636
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 80.954 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.650 0.248
 2 mu         0.1   0.2 0.652 0.255
 3 mu         0.1   0.3 0.671 0.270
 4 mu         0.1   0.4 0.672 0.278
 5 mu         0.1   0.5 0.854 0.355
 6 mu         0.2   0.1 0.596 0.244
 7 mu         0.2   0.2 0.609 0.246
 8 mu         0.2   0.3 0.642 0.253
 9 mu         0.2   0.4 0.644 0.257
10 mu         0.2   0.5 0.786 0.311
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.43        0.0756 0.0000748     89.2 
 2 mu         0.2      1.76        0.475  0.0115        96.4 
 3 mu         0.3      1.30        0.845  0.119         33.7 
 4 mu         0.4      1.08        0.999  0.386          6.17
 5 mu         0.5      1.02        1      0.653          2.04
 6 mu         0.6      1.00        1      0.853          1.37
 7 mu         0.7      0.996       1      0.821          1.17
 8 mu         0.8      0.987       1      0.561          1.41
 9 mu         0.9      0.953       1      0.178          2.43
10 mu_1       0.1      2.10        0.238  0.000339     134.  
11 mu_1       0.2      1.63        0.758  0.0265        72.3 
12 mu_1       0.3      1.17        0.989  0.188         17.0 
13 mu_1       0.4      1.05        1      0.469          2.72
14 mu_1       0.5      1.01        1      0.723          1.80
15 mu_1       0.6      1.00        1      0.886          1.27
16 mu_1       0.7      0.995       1      0.786          1.18
17 mu_1       0.8      0.986       1      0.522          1.46
18 mu_1       0.9      0.949       1      0.157          2.58
19 mu_0       0.1      1.35        0.0581 0.0000454     84.3 
20 mu_0       0.2      1.79        0.401  0.00779      102.  
21 mu_0       0.3      1.35        0.790  0.0902        40.9 
22 mu_0       0.4      1.10        0.987  0.326          8.52
23 mu_0       0.5      1.03        1      0.584          2.29
24 mu_0       0.6      1.01        1      0.804          1.52
25 mu_0       0.7      0.999       1      0.886          1.14
26 mu_0       0.8      0.994       1      0.720          1.22
27 mu_0       0.9      0.992       1      0.372          1.81
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.0936   0.0000212   3.83e-12      7.06
 2 mu         0.2     0.299    0.00196     1.29e- 7      8.81
 3 mu         0.3     0.686    0.0288      2.89e- 5     26.2 
 4 mu         0.4     0.944    0.185       1.19e- 3     26.5 
 5 mu         0.5     1.00     0.504       1.88e- 2     11.8 
 6 mu         0.6     1.02     0.913       1.54e- 1      4.45
 7 mu         0.7     1.04     1.01        1.59e- 1      2.98
 8 mu         0.8     1.04     0.585       2.12e- 3      8.66
 9 mu         0.9     1.01     0.108       5.91e- 7     22.2 
10 mu_1       0.1     0.232    0.000164    3.06e-11     14.1 
11 mu_1       0.2     0.496    0.00766     5.65e- 7     15.2 
12 mu_1       0.3     0.864    0.0738      8.42e- 5     30.6 
13 mu_1       0.4     1.01     0.313       2.60e- 3     23.1 
14 mu_1       0.5     1.02     0.673       3.29e- 2      8.25
15 mu_1       0.6     1.04     0.999       2.25e- 1      4.12
16 mu_1       0.7     1.06     0.978       8.12e- 2      4.25
17 mu_1       0.8     1.06     0.474       9.29e- 4     10.8 
18 mu_1       0.9     1.02     0.0810      2.30e- 7     24.7 
19 mu_0       0.1     0.0782   0.00000372  0             6.27
20 mu_0       0.2     0.250    0.000660    0             8.81
21 mu_0       0.3     0.610    0.0133      0            24.3 
22 mu_0       0.4     0.899    0.0836      0            28.7 
23 mu_0       0.5     0.986    0.338       0            15.3 
24 mu_0       0.6     0.996    0.762       0             4.94
25 mu_0       0.7     0.999    1.04        0             3.08
26 mu_0       0.8     0.973    0.915       0             4.35
27 mu_0       0.9     0.909    0.274       0            10.1 
[1] "Total run time was 83.147 seconds"
