
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1198"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
11  7  3  7 11  5  7  5  6  5  5  4  4  4  9  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0460  0.3926  0.6283  1.0000  5.0000 
[1] "event indicator table: "

  0   1 
724 474 
[1] "treatment indicator table: "

  0   1 
436 762 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 583
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 50"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 615
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 61"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 110.805 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.383 0.0926
 2 mu         0.1   0.2 0.465 0.0952
 3 mu         0.1   0.3 0.482 0.0995
 4 mu         0.1   0.4 0.489 0.110 
 5 mu         0.1   0.5 0.714 0.178 
 6 mu         0.2   0.1 0.333 0.0588
 7 mu         0.2   0.2 0.430 0.0601
 8 mu         0.2   0.3 0.458 0.0599
 9 mu         0.2   0.4 0.477 0.0643
10 mu         0.2   0.5 0.669 0.138 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.661        0.224  0.000306     12.6 
 2 mu         0.2      0.852        0.708  0.0270        6.66
 3 mu         0.3      0.954        0.952  0.211         2.69
 4 mu         0.4      0.986        1      0.490         1.97
 5 mu         0.5      0.994        1      0.693         1.35
 6 mu         0.6      1.00         1      0.895         1.15
 7 mu         0.7      1.01         1      0.806         1.15
 8 mu         0.8      1.01         1      0.542         1.51
 9 mu         0.9      1.04         1      0.111         3.85
10 mu_1       0.1      0.819        0.566  0.00132      10.0 
11 mu_1       0.2      0.930        0.947  0.0598        4.10
12 mu_1       0.3      0.982        1      0.304         2.43
13 mu_1       0.4      0.992        0.993  0.606         1.61
14 mu_1       0.5      0.997        1      0.805         1.25
15 mu_1       0.6      1.00         1      0.897         1.13
16 mu_1       0.7      1.01         1      0.775         1.19
17 mu_1       0.8      1.01         1      0.496         1.56
18 mu_1       0.9      1.04         1      0.0948        4.21
19 mu_0       0.1      0.643        0.183  0.000194     12.9 
20 mu_0       0.2      0.833        0.631  0.0188        7.53
21 mu_0       0.3      0.942        0.910  0.163         3.23
22 mu_0       0.4      0.982        1      0.400         2.21
23 mu_0       0.5      0.992        1      0.581         1.52
24 mu_0       0.6      0.999        1      0.760         1.20
25 mu_0       0.7      1.00         1      0.880         1.13
26 mu_0       0.8      1.00         1      0.725         1.28
27 mu_0       0.9      1.00         1      0.260         1.93
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.586    0.0000479  3.91e-12     43.1 
 2 mu         0.2      1.11     0.00552    1.60e- 7     67.1 
 3 mu         0.3      1.23     0.0703     6.17e- 5     51.9 
 4 mu         0.4      1.17     0.262      3.32e- 3     26.9 
 5 mu         0.5      1.11     0.709      5.59e- 2      9.77
 6 mu         0.6      1.12     1.08       3.91e- 1      3.11
 7 mu         0.7      1.12     1.05       1.58e- 1      3.00
 8 mu         0.8      0.994    0.624      1.21e- 2      5.83
 9 mu         0.9      0.663    0.0818     6.38e- 5     13.3 
10 mu_1       0.1      1.27     0.000250   3.13e-11     86.1 
11 mu_1       0.2      1.35     0.0155     6.40e- 7     67.1 
12 mu_1       0.3      1.21     0.143      1.64e- 4     34.6 
13 mu_1       0.4      1.10     0.463      6.64e- 3     13.4 
14 mu_1       0.5      1.09     0.914      9.10e- 2      5.73
15 mu_1       0.6      1.13     1.07       3.22e- 1      2.39
16 mu_1       0.7      1.12     1.07       5.01e- 2      3.27
17 mu_1       0.8      0.967    0.493      3.35e- 3      7.29
18 mu_1       0.9      0.639    0.0570     1.80e- 5     14.8 
19 mu_0       0.1      0.510    0.0000108  0            38.3 
20 mu_0       0.2      1.05     0.00186    0            67.1 
21 mu_0       0.3      1.24     0.0245     0            59.3 
22 mu_0       0.4      1.21     0.143      0            35.8 
23 mu_0       0.5      1.13     0.503      0            15.6 
24 mu_0       0.6      1.11     1.07       0             4.78
25 mu_0       0.7      1.12     1.07       0             2.59
26 mu_0       0.8      1.10     1.00       0             3.73
27 mu_0       0.9      0.878    0.279      0             5.13
[1] "Total run time was 113.281 seconds"
