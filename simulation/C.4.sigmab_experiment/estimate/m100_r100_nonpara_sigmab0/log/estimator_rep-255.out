
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1239"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 18 19 20 
 5  9  5  7  8  3  5 10  7  4  9  7  9  4  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03427 0.33254 0.61781 1.00000 4.93978 
[1] "event indicator table: "

  0   1 
702 537 
[1] "treatment indicator table: "

  0   1 
451 788 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 653
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 586
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 456.296 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.268 0.0675
 2 mu         0.1   0.2 0.530 0.157 
 3 mu         0.1   0.3 0.522 0.129 
 4 mu         0.1   0.4 0.685 0.171 
 5 mu         0.1   0.5 0.710 0.143 
 6 mu         0.2   0.1 0.266 0.0675
 7 mu         0.2   0.2 0.490 0.144 
 8 mu         0.2   0.3 0.494 0.125 
 9 mu         0.2   0.4 0.632 0.160 
10 mu         0.2   0.5 0.655 0.139 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      0.510       0.0823 0.00000552      5.50
 2 mu         0.2      0.862       0.402  0.00225        16.4 
 3 mu         0.3      1.01        0.749  0.0465         13.4 
 4 mu         0.4      0.984       0.930  0.229           5.67
 5 mu         0.5      0.974       0.987  0.525           1.91
 6 mu         0.6      0.990       0.999  0.766           1.21
 7 mu         0.7      0.993       0.999  0.733           1.23
 8 mu         0.8      0.987       1      0.451           1.99
 9 mu         0.9      0.969       0.980  0.111           3.95
10 mu_1       0.1      0.718       0.248  0.0000294      11.7 
11 mu_1       0.2      1.01        0.665  0.00607        18.4 
12 mu_1       0.3      1.03        0.916  0.0822         10.3 
13 mu_1       0.4      0.976       0.990  0.308           3.93
14 mu_1       0.5      0.978       0.991  0.599           1.42
15 mu_1       0.6      0.993       1.00   0.802           1.10
16 mu_1       0.7      0.992       0.997  0.672           1.29
17 mu_1       0.8      0.986       1      0.385           2.19
18 mu_1       0.9      0.965       0.975  0.0907          4.07
19 mu_0       0.1      0.487       0.0647 0.00000287      6.04
20 mu_0       0.2      0.826       0.328  0.00130        15.9 
21 mu_0       0.3      1.00        0.685  0.0300         14.7 
22 mu_0       0.4      0.988       0.894  0.177           6.94
23 mu_0       0.5      0.969       0.977  0.452           2.41
24 mu_0       0.6      0.985       0.999  0.712           1.38
25 mu_0       0.7      0.995       1      0.866           1.12
26 mu_0       0.8      0.989       1      0.716           1.31
27 mu_0       0.9      1.00        1      0.292           2.90
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.260    0.000103   2.43e-15     22.6 
 2 mu         0.2      0.623    0.00966    5.04e-10     44.6 
 3 mu         0.3      1.05     0.0916     5.70e- 7     45.0 
 4 mu         0.4      1.49     0.310      7.43e- 5     31.7 
 5 mu         0.5      1.55     0.742      2.87e- 3     24.9 
 6 mu         0.6      1.26     1.00       4.88e- 2     11.1 
 7 mu         0.7      1.07     0.950      1.98e- 1      3.65
 8 mu         0.8      1.08     0.513      6.65e- 3     10.5 
 9 mu         0.9      0.947    0.0594     8.33e- 6     13.1 
10 mu_1       0.1      0.695    0.000768   2.19e-14     56.5 
11 mu_1       0.2      0.928    0.0298     2.27e- 9     55.7 
12 mu_1       0.3      1.26     0.190      1.71e- 6     37.5 
13 mu_1       0.4      1.57     0.549      1.67e- 4     28.0 
14 mu_1       0.5      1.47     0.917      5.16e- 3     22.4 
15 mu_1       0.6      1.18     1.01       7.32e- 2      8.29
16 mu_1       0.7      1.05     0.870      1.19e- 1      4.43
17 mu_1       0.8      1.09     0.418      3.50e- 3     11.1 
18 mu_1       0.9      0.929    0.0381     3.90e- 6     14.6 
19 mu_0       0.1      0.212    0.0000385  0            18.8 
20 mu_0       0.2      0.547    0.00420    0            41.8 
21 mu_0       0.3      0.955    0.0400     0            48.2 
22 mu_0       0.4      1.43     0.177      0            39.7 
23 mu_0       0.5      1.63     0.471      0            27.4 
24 mu_0       0.6      1.39     0.935      0            15.2 
25 mu_0       0.7      1.10     1.07       0             3.79
26 mu_0       0.8      1.07     0.819      0             7.85
27 mu_0       0.9      1.11     0.212      0            14.5 
[1] "Total run time was 460.04 seconds"
