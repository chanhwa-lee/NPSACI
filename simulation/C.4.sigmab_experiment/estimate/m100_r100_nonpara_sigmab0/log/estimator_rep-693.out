
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1230"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 8  4  6 10  8  3  3  9  6  7  7  5  7  7  5  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04304 0.39059 0.63219 1.00000 5.37909 
[1] "event indicator table: "

  0   1 
707 523 
[1] "treatment indicator table: "

  0   1 
430 800 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 617
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 61"
[1] "     Cluster: 66"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 613
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 90"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 153.409 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.252 0.0618
 2 mu         0.1   0.2 0.415 0.0761
 3 mu         0.1   0.3 0.493 0.0817
 4 mu         0.1   0.4 0.564 0.112 
 5 mu         0.1   0.5 0.588 0.115 
 6 mu         0.2   0.1 0.249 0.0455
 7 mu         0.2   0.2 0.359 0.0516
 8 mu         0.2   0.3 0.461 0.0594
 9 mu         0.2   0.4 0.504 0.0720
10 mu         0.2   0.5 0.562 0.0769
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.441       0.107  0.0000237      4.43
 2 mu         0.2      0.790       0.539  0.00530        5.45
 3 mu         0.3      0.986       0.872  0.0659         5.02
 4 mu         0.4      1.03        0.986  0.261          3.45
 5 mu         0.5      1.01        1      0.571          2.19
 6 mu         0.6      1.00        0.999  0.852          1.21
 7 mu         0.7      0.999       1      0.792          1.16
 8 mu         0.8      0.990       0.993  0.437          1.44
 9 mu         0.9      0.982       0.943  0.0962         3.11
10 mu_1       0.1      0.685       0.337  0.000116       4.95
11 mu_1       0.2      0.957       0.799  0.0134         6.23
12 mu_1       0.3      1.04        0.992  0.114          4.17
13 mu_1       0.4      1.02        1      0.356          3.24
14 mu_1       0.5      1.01        1      0.665          1.84
15 mu_1       0.6      1.00        1      0.905          1.13
16 mu_1       0.7      0.997       1      0.743          1.22
17 mu_1       0.8      0.988       0.992  0.390          1.52
18 mu_1       0.9      0.982       0.929  0.0825         3.40
19 mu_0       0.1      0.413       0.0838 0.0000134      4.80
20 mu_0       0.2      0.748       0.464  0.00329        5.26
21 mu_0       0.3      0.965       0.818  0.0452         5.39
22 mu_0       0.4      1.03        0.978  0.197          3.59
23 mu_0       0.5      1.02        1      0.476          2.53
24 mu_0       0.6      1.01        0.996  0.772          1.36
25 mu_0       0.7      1.00        1      0.893          1.12
26 mu_0       0.8      0.998       1      0.625          1.22
27 mu_0       0.9      0.987       0.999  0.220          1.79
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.0320   0.0000410   5.81e-12     0.947
 2 mu         0.2     0.185    0.00340     1.34e- 7     3.67 
 3 mu         0.3     0.534    0.0458      3.92e- 5    11.0  
 4 mu         0.4     0.893    0.224       1.72e- 3    13.2  
 5 mu         0.5     1.06     0.597       2.18e- 2     8.14 
 6 mu         0.6     1.08     1.01        1.49e- 1     2.61 
 7 mu         0.7     1.04     1.00        1.21e- 1     2.35 
 8 mu         0.8     1.02     0.631       2.72e- 3     9.30 
 9 mu         0.9     1.33     0.0831      1.71e- 6    38.2  
10 mu_1       0.1     0.119    0.000278    4.84e-11     3.16 
11 mu_1       0.2     0.370    0.0129      5.57e- 7     6.87 
12 mu_1       0.3     0.757    0.105       1.09e- 4    13.7  
13 mu_1       0.4     1.03     0.357       3.73e- 3    12.4  
14 mu_1       0.5     1.10     0.808       3.77e- 2     6.10 
15 mu_1       0.6     1.09     1.06        2.15e- 1     2.40 
16 mu_1       0.7     1.04     0.951       6.94e- 2     3.00 
17 mu_1       0.8     1.05     0.518       1.36e- 3    11.6  
18 mu_1       0.9     1.39     0.0625      7.58e- 7    42.5  
19 mu_0       0.1     0.0223   0.00000751  0            0.702
20 mu_0       0.2     0.138    0.00128     0            2.86 
21 mu_0       0.3     0.439    0.0192      0            9.81 
22 mu_0       0.4     0.802    0.119       0           13.8  
23 mu_0       0.5     1.01     0.397       0           10.2  
24 mu_0       0.6     1.06     0.881       0            4.08 
25 mu_0       0.7     1.04     1.08        0            2.41 
26 mu_0       0.8     0.899    0.876       0            3.06 
27 mu_0       0.9     0.764    0.193       0           14.1  
[1] "Total run time was 157.617 seconds"
