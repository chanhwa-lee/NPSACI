
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1226"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 9  6  4  8  6  7  8  6  4  7  4  7  6  6  3  9 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0354  0.3808  0.6210  1.0000  4.8103 
[1] "event indicator table: "

  0   1 
719 507 
[1] "treatment indicator table: "

  0   1 
448 778 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 640
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 586
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 90"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 139.028 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.299 0.0633
 2 mu         0.1   0.2 0.381 0.0741
 3 mu         0.1   0.3 0.383 0.0928
 4 mu         0.1   0.4 0.455 0.0914
 5 mu         0.1   0.5 0.536 0.105 
 6 mu         0.2   0.1 0.283 0.0385
 7 mu         0.2   0.2 0.354 0.0417
 8 mu         0.2   0.3 0.372 0.0605
 9 mu         0.2   0.4 0.445 0.0551
10 mu         0.2   0.5 0.561 0.0718
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      0.479        0.185 0.000000415      6.27
 2 mu         0.2      0.727        0.563 0.000223         5.29
 3 mu         0.3      0.923        0.936 0.00626          3.35
 4 mu         0.4      1.01         1     0.0497           3.41
 5 mu         0.5      1.02         1     0.189            2.62
 6 mu         0.6      1.01         1     0.442            1.36
 7 mu         0.7      1.01         1     0.747            1.36
 8 mu         0.8      1.03         1     0.445            2.06
 9 mu         0.9      1.04         0.992 0.0838           3.39
10 mu_1       0.1      0.651        0.468 0.00000248       7.22
11 mu_1       0.2      0.858        0.840 0.000677         3.54
12 mu_1       0.3      0.984        1     0.0129           2.77
13 mu_1       0.4      1.02         1     0.0786           3.48
14 mu_1       0.5      1.02         1     0.248            2.27
15 mu_1       0.6      1.00         1     0.511            1.19
16 mu_1       0.7      1.01         1     0.732            1.40
17 mu_1       0.8      1.03         1     0.406            2.18
18 mu_1       0.9      1.04         0.981 0.0714           3.45
19 mu_0       0.1      0.460        0.148 0.000000186      6.16
20 mu_0       0.2      0.695        0.491 0.000110         5.73
21 mu_0       0.3      0.896        0.854 0.00342          3.91
22 mu_0       0.4      1.00         1     0.0304           3.36
23 mu_0       0.5      1.03         1     0.130            2.98
24 mu_0       0.6      1.01         1     0.338            1.62
25 mu_0       0.7      1.00         1     0.621            1.25
26 mu_0       0.8      1.01         1     0.602            1.58
27 mu_0       0.9      1.04         1     0.195            2.84
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.350   0.0000415   2.84e-11     27.5 
 2 mu         0.2      2.51    0.00469     6.55e- 7    171.  
 3 mu         0.3      5.58    0.0723      1.92e- 4    298.  
 4 mu         0.4      6.35    0.270       7.34e- 3    275.  
 5 mu         0.5      4.35    0.645       7.73e- 2    166.  
 6 mu         0.6      2.26    1.01        1.92e- 1     54.3 
 7 mu         0.7      1.48    1.02        1.07e- 1     10.1 
 8 mu         0.8      1.31    0.586       2.66e- 3     13.8 
 9 mu         0.9      1.07    0.0824      1.48e- 6     40.0 
10 mu_1       0.1      1.20    0.000224    2.37e-10     91.7 
11 mu_1       0.2      4.40    0.0171      2.73e- 6    286.  
12 mu_1       0.3      6.73    0.170       5.33e- 4    331.  
13 mu_1       0.4      5.92    0.509       1.49e- 2    251.  
14 mu_1       0.5      3.48    0.815       1.26e- 1    129.  
15 mu_1       0.6      1.85    1.10        1.92e- 1     33.1 
16 mu_1       0.7      1.41    1.07        5.41e- 2      5.95
17 mu_1       0.8      1.30    0.429       1.22e- 3     17.3 
18 mu_1       0.9      1.07    0.0559      6.06e- 7     44.4 
19 mu_0       0.1      0.256   0.00000982  0            20.4 
20 mu_0       0.2      2.03    0.00165     0           143.  
21 mu_0       0.3      5.09    0.0262      0           284.  
22 mu_0       0.4      6.63    0.136       0           305.  
23 mu_0       0.5      5.22    0.480       0           208.  
24 mu_0       0.6      2.87    0.902       0            90.4 
25 mu_0       0.7      1.63    1.12        0            22.4 
26 mu_0       0.8      1.36    0.991       0             9.15
27 mu_0       0.9      1.08    0.245       0            13.4 
[1] "Total run time was 143.461 seconds"
