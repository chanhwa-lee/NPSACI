
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1265"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  8  6  8  8  7  6  7  4  4  3  2  6 10  8  9 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0321  0.3437  0.6050  1.0000  6.0000 
[1] "event indicator table: "

  0   1 
731 534 
[1] "treatment indicator table: "

  0   1 
447 818 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 586
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 679
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 29"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 77"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 205.395 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.337 0.0877
 2 mu         0.1   0.2 0.424 0.103 
 3 mu         0.1   0.3 0.434 0.114 
 4 mu         0.1   0.4 0.433 0.129 
 5 mu         0.1   0.5 0.615 0.154 
 6 mu         0.2   0.1 0.367 0.0720
 7 mu         0.2   0.2 0.445 0.0801
 8 mu         0.2   0.3 0.469 0.0902
 9 mu         0.2   0.4 0.478 0.0963
10 mu         0.2   0.5 0.537 0.106 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.537        0.127  0.000208     12.5 
 2 mu         0.2      0.793        0.486  0.0195       17.2 
 3 mu         0.3      0.888        0.756  0.166         8.20
 4 mu         0.4      0.943        0.927  0.496         2.61
 5 mu         0.5      0.982        0.980  0.791         1.49
 6 mu         0.6      1.00         1      0.891         1.18
 7 mu         0.7      1.01         1      0.874         1.20
 8 mu         0.8      1.02         1      0.621         1.66
 9 mu         0.9      1.05         1      0.134         7.21
10 mu_1       0.1      0.771        0.333  0.000940     20.8 
11 mu_1       0.2      0.882        0.715  0.0451       14.4 
12 mu_1       0.3      0.919        0.875  0.264         4.90
13 mu_1       0.4      0.961        0.951  0.620         1.70
14 mu_1       0.5      0.991        0.988  0.848         1.40
15 mu_1       0.6      1.00         1      0.912         1.14
16 mu_1       0.7      1.01         1      0.838         1.24
17 mu_1       0.8      1.02         1.00   0.568         1.72
18 mu_1       0.9      1.05         1      0.113         7.96
19 mu_0       0.1      0.511        0.101  0.000126     11.6 
20 mu_0       0.2      0.770        0.423  0.0131       17.9 
21 mu_0       0.3      0.874        0.697  0.124         9.61
22 mu_0       0.4      0.931        0.906  0.414         3.26
23 mu_0       0.5      0.974        0.969  0.715         1.59
24 mu_0       0.6      0.994        1      0.826         1.27
25 mu_0       0.7      1.00         1      0.870         1.14
26 mu_0       0.8      1.01         1      0.740         1.42
27 mu_0       0.9      1.01         1      0.319         2.23
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.0322    0.0000415  4.30e-13     0.753
 2 mu         0.2     0.252     0.00526    3.95e- 8     8.57 
 3 mu         0.3     0.752     0.0604     2.61e- 5    29.5  
 4 mu         0.4     1.12      0.279      2.19e- 3    34.8  
 5 mu         0.5     1.20      0.675      3.61e- 2    18.6  
 6 mu         0.6     1.20      1.03       2.82e- 1     4.58 
 7 mu         0.7     1.24      1.06       1.82e- 1     4.10 
 8 mu         0.8     1.34      0.589      3.58e- 3    12.8  
 9 mu         0.9     1.38      0.0884     1.99e- 6    41.5  
10 mu_1       0.1     0.116     0.000294   3.65e-12     2.51 
11 mu_1       0.2     0.484     0.0163     1.68e- 7    15.8  
12 mu_1       0.3     1.01      0.138      7.39e- 5    36.2  
13 mu_1       0.4     1.24      0.474      4.57e- 3    32.0  
14 mu_1       0.5     1.24      0.878      6.01e- 2    13.7  
15 mu_1       0.6     1.23      1.12       3.71e- 1     3.86 
16 mu_1       0.7     1.27      1.02       9.60e- 2     4.80 
17 mu_1       0.8     1.36      0.471      1.65e- 3    16.0  
18 mu_1       0.9     1.40      0.0694     8.16e- 7    46.1  
19 mu_0       0.1     0.0230    0.0000125  0            0.557
20 mu_0       0.2     0.195     0.00198    0            6.77 
21 mu_0       0.3     0.642     0.0257     0           26.6  
22 mu_0       0.4     1.04      0.136      0           36.6  
23 mu_0       0.5     1.16      0.435      0           23.5  
24 mu_0       0.6     1.15      0.892      0            7.23 
25 mu_0       0.7     1.17      1.08       0            3.42 
26 mu_0       0.8     1.25      0.958      0            7.96 
27 mu_0       0.9     1.16      0.204      0           14.7  
[1] "Total run time was 208.468 seconds"
