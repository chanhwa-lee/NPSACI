
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1210"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
11  6  4 10  5  6  8  6  6  4  3  4  3 10  8  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0319  0.3444  0.6139  1.0000  4.6379 
[1] "event indicator table: "

  0   1 
704 506 
[1] "treatment indicator table: "

  0   1 
444 766 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 596
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 75"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 614
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 82.896 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.449 0.0947
 2 mu         0.1   0.2 0.488 0.0915
 3 mu         0.1   0.3 0.517 0.0960
 4 mu         0.1   0.4 0.556 0.0967
 5 mu         0.1   0.5 0.611 0.118 
 6 mu         0.2   0.1 0.384 0.0697
 7 mu         0.2   0.2 0.437 0.0727
 8 mu         0.2   0.3 0.483 0.0846
 9 mu         0.2   0.4 0.523 0.0884
10 mu         0.2   0.5 0.561 0.0979
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.602        0.168 0.0000359      5.76
 2 mu         0.2      1.02         0.626 0.00675       12.9 
 3 mu         0.3      1.07         0.904 0.0857        10.3 
 4 mu         0.4      1.02         1     0.335          4.45
 5 mu         0.5      0.999        0.998 0.660          1.67
 6 mu         0.6      0.999        1     0.866          1.14
 7 mu         0.7      1.00         1     0.824          1.10
 8 mu         0.8      1.01         1     0.565          1.41
 9 mu         0.9      1.06         1     0.131          5.00
10 mu_1       0.1      0.955        0.470 0.000173      10.6 
11 mu_1       0.2      1.14         0.877 0.0166        14.1 
12 mu_1       0.3      1.06         0.991 0.144          7.92
13 mu_1       0.4      1.01         0.996 0.438          2.95
14 mu_1       0.5      0.999        1     0.735          1.30
15 mu_1       0.6      1.00         1     0.895          1.15
16 mu_1       0.7      1.00         1.00  0.783          1.14
17 mu_1       0.8      1.02         1     0.514          1.51
18 mu_1       0.9      1.07         1     0.113          5.52
19 mu_0       0.1      0.563        0.138 0.0000207      5.41
20 mu_0       0.2      0.985        0.561 0.00430       12.9 
21 mu_0       0.3      1.08         0.877 0.0609        11.3 
22 mu_0       0.4      1.03         0.994 0.267          5.45
23 mu_0       0.5      0.999        0.998 0.585          2.05
24 mu_0       0.6      0.999        1     0.823          1.14
25 mu_0       0.7      0.999        1     0.860          1.10
26 mu_0       0.8      0.999        1     0.601          1.23
27 mu_0       0.9      1.01         1     0.288          1.77
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.142    0.0000366  1.50e-12      8.97
 2 mu         0.2      0.865    0.00435    6.92e- 8     62.1 
 3 mu         0.3      1.34     0.0476     3.05e- 5     83.1 
 4 mu         0.4      1.22     0.251      1.91e- 3     47.2 
 5 mu         0.5      1.05     0.603      3.93e- 2     13.5 
 6 mu         0.6      1.03     1.05       3.72e- 1      3.24
 7 mu         0.7      1.04     1.05       9.45e- 2      2.99
 8 mu         0.8      0.975    0.543      9.47e- 4      6.23
 9 mu         0.9      0.843    0.0742     2.08e- 7     16.0 
10 mu_1       0.1      0.434    0.000234   1.27e-11     24.9 
11 mu_1       0.2      1.31     0.0149     2.91e- 7     86.2 
12 mu_1       0.3      1.46     0.112      8.55e- 5     76.9 
13 mu_1       0.4      1.18     0.405      4.03e- 3     32.8 
14 mu_1       0.5      1.05     0.827      6.63e- 2      7.48
15 mu_1       0.6      1.06     1.04       5.23e- 1      2.70
16 mu_1       0.7      1.05     1.00       3.75e- 2      3.80
17 mu_1       0.8      0.969    0.422      3.29e- 4      7.79
18 mu_1       0.9      0.837    0.0532     6.43e- 8     17.8 
19 mu_0       0.1      0.109    0.0000143  0             7.20
20 mu_0       0.2      0.753    0.00153    0            56.0 
21 mu_0       0.3      1.29     0.0192     0            85.7 
22 mu_0       0.4      1.25     0.115      0            56.8 
23 mu_0       0.5      1.05     0.383      0            19.4 
24 mu_0       0.6      0.996    0.878      0             4.06
25 mu_0       0.7      1.02     1.06       0             1.70
26 mu_0       0.8      0.995    0.899      0             3.67
27 mu_0       0.9      0.896    0.234      0             8.28
[1] "Total run time was 85.026 seconds"
