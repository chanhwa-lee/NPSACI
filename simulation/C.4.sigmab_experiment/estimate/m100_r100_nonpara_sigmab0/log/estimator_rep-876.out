
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1221"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
10  3 11  4  5  8  5  4  8  3  6 11  8  3  6  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.06232 0.36899 0.66802 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
711 510 
[1] "treatment indicator table: "

  0   1 
440 781 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 590
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 631
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 21"
[1] "     Cluster: 33"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 86.369 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau    est    se
   <chr>    <dbl> <dbl>  <dbl> <dbl>
 1 mu         0.1   0.1 0.0316 0.204
 2 mu         0.1   0.2 0.146  0.255
 3 mu         0.1   0.3 0.254  0.305
 4 mu         0.1   0.4 0.240  0.334
 5 mu         0.1   0.5 0.423  0.243
 6 mu         0.2   0.1 0.102  0.151
 7 mu         0.2   0.2 0.213  0.188
 8 mu         0.2   0.3 0.318  0.226
 9 mu         0.2   0.4 0.327  0.247
10 mu         0.2   0.5 0.469  0.196
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.794       0.119  0.0000259     35.0 
 2 mu         0.2      1.14        0.502  0.00548       42.5 
 3 mu         0.3      1.07        0.823  0.0784        17.1 
 4 mu         0.4      1.01        0.942  0.345          3.98
 5 mu         0.5      0.993       1      0.667          1.64
 6 mu         0.6      0.994       0.996  0.868          1.18
 7 mu         0.7      0.996       1      0.813          1.18
 8 mu         0.8      1.00        1      0.559          1.61
 9 mu         0.9      0.996       1      0.173          2.69
10 mu_1       0.1      1.21        0.362  0.000121      55.2 
11 mu_1       0.2      1.19        0.741  0.0133        33.6 
12 mu_1       0.3      1.05        0.925  0.132          9.24
13 mu_1       0.4      1.00        0.999  0.456          2.30
14 mu_1       0.5      0.994       1.00   0.739          1.46
15 mu_1       0.6      0.994       1.00   0.902          1.13
16 mu_1       0.7      0.997       1      0.777          1.23
17 mu_1       0.8      1.00        1      0.506          1.71
18 mu_1       0.9      0.995       1      0.149          2.80
19 mu_0       0.1      0.747       0.0955 0.0000153     32.7 
20 mu_0       0.2      1.13        0.452  0.00352       44.7 
21 mu_0       0.3      1.08        0.751  0.0554        20.5 
22 mu_0       0.4      1.01        0.914  0.271          5.28
23 mu_0       0.5      0.992       1      0.595          1.82
24 mu_0       0.6      0.992       0.999  0.817          1.26
25 mu_0       0.7      0.996       1.00   0.898          1.12
26 mu_0       0.8      0.998       0.999  0.719          1.28
27 mu_0       0.9      1.00        1      0.367          2.27
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.281    0.0000591  1.14e-13     13.8 
 2 mu         0.2      0.500    0.00973    5.88e- 9     17.2 
 3 mu         0.3      0.769    0.0961     2.96e- 6     15.1 
 4 mu         0.4      1.07     0.384      2.17e- 4     10.9 
 5 mu         0.5      1.23     0.841      5.35e- 3      7.94
 6 mu         0.6      1.19     1.04       6.33e- 2      4.66
 7 mu         0.7      1.12     1.05       2.14e- 1      3.10
 8 mu         0.8      1.25     0.568      1.43e- 2     12.6 
 9 mu         0.9      1.50     0.0601     4.98e- 5     32.7 
10 mu_1       0.1      0.606    0.000405   1.01e-12     27.6 
11 mu_1       0.2      0.682    0.0268     2.61e- 8     17.2 
12 mu_1       0.3      0.902    0.214      8.76e- 6     10.1 
13 mu_1       0.4      1.14     0.606      4.81e- 4     10.6 
14 mu_1       0.5      1.23     1.04       9.50e- 3      6.54
15 mu_1       0.6      1.16     1.10       9.37e- 2      3.89
16 mu_1       0.7      1.14     0.906      5.89e- 2      3.88
17 mu_1       0.8      1.30     0.380      5.94e- 3     14.7 
18 mu_1       0.9      1.54     0.0401     2.28e- 5     33.9 
19 mu_0       0.1      0.245    0.0000207  0            12.3 
20 mu_0       0.2      0.455    0.00445    0            17.2 
21 mu_0       0.3      0.712    0.0492     0            17.3 
22 mu_0       0.4      1.02     0.253      0            14.5 
23 mu_0       0.5      1.24     0.646      0            10.5 
24 mu_0       0.6      1.24     1.05       0             6.46
25 mu_0       0.7      1.09     1.08       0             3.18
26 mu_0       0.8      1.02     0.792      0             4.89
27 mu_0       0.9      1.07     0.145      0            21.8 
[1] "Total run time was 89.344 seconds"
