
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1264"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 3  5  6 10  5 10  3  8  2 12  6  6  4 10  5  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.05352 0.41769 0.65236 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
771 493 
[1] "treatment indicator table: "

  0   1 
408 856 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 605
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 659
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 91"
[1] "     Cluster: 96"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 186.918 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.425 0.111 
 2 mu         0.1   0.2 0.554 0.146 
 3 mu         0.1   0.3 0.579 0.141 
 4 mu         0.1   0.4 0.595 0.146 
 5 mu         0.1   0.5 0.627 0.154 
 6 mu         0.2   0.1 0.395 0.0861
 7 mu         0.2   0.2 0.516 0.116 
 8 mu         0.2   0.3 0.566 0.121 
 9 mu         0.2   0.4 0.584 0.119 
10 mu         0.2   0.5 0.634 0.134 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      0.459       0.0343 0.00000112       9.20
 2 mu         0.2      0.689       0.258  0.000619        10.2 
 3 mu         0.3      0.820       0.653  0.0149           6.84
 4 mu         0.4      0.930       0.892  0.102            3.46
 5 mu         0.5      0.994       1      0.333            1.73
 6 mu         0.6      1.01        1.00   0.660            1.47
 7 mu         0.7      1.00        1      0.889            1.17
 8 mu         0.8      0.996       0.998  0.615            1.57
 9 mu         0.9      0.986       0.959  0.272            3.04
10 mu_1       0.1      0.748       0.138  0.00000616      13.2 
11 mu_1       0.2      0.792       0.495  0.00177          9.07
12 mu_1       0.3      0.873       0.826  0.0290           4.52
13 mu_1       0.4      0.960       0.966  0.153            2.18
14 mu_1       0.5      1.00        1      0.417            1.67
15 mu_1       0.6      1.01        1      0.731            1.41
16 mu_1       0.7      1.00        1.00   0.854            1.20
17 mu_1       0.8      0.995       1      0.576            1.64
18 mu_1       0.9      0.985       0.963  0.252            3.27
19 mu_0       0.1      0.427       0.0229 0.000000555      8.75
20 mu_0       0.2      0.663       0.193  0.000333        10.5 
21 mu_0       0.3      0.797       0.543  0.00890          7.83
22 mu_0       0.4      0.911       0.848  0.0680           4.31
23 mu_0       0.5      0.986       1      0.249            2.16
24 mu_0       0.6      1.01        1.00   0.553            1.56
25 mu_0       0.7      1.01        1.00   0.803            1.27
26 mu_0       0.8      1.00        0.999  0.770            1.30
27 mu_0       0.9      0.994       0.983  0.454            2.05
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.0465   0.0000126   4.02e-14      1.77
 2 mu         0.2     0.277    0.00182     4.17e- 9      8.95
 3 mu         0.3     0.625    0.0322      3.14e- 6     20.5 
 4 mu         0.4     0.862    0.155       2.88e- 4     18.1 
 5 mu         0.5     0.988    0.454       7.10e- 3      7.76
 6 mu         0.6     1.09     0.953       8.40e- 2      4.00
 7 mu         0.7     1.15     1.09        1.27e- 1      3.89
 8 mu         0.8     1.14     0.745       2.19e- 3     11.3 
 9 mu         0.9     1.05     0.149       1.08e- 6     20.6 
10 mu_1       0.1     0.158    0.0000863   3.60e-13      5.30
11 mu_1       0.2     0.499    0.00682     1.86e- 8     14.9 
12 mu_1       0.3     0.814    0.0715      9.38e- 6     22.8 
13 mu_1       0.4     0.961    0.268       6.40e- 4     15.1 
14 mu_1       0.5     1.04     0.654       1.26e- 2      5.18
15 mu_1       0.6     1.12     1.01        1.24e- 1      4.21
16 mu_1       0.7     1.15     1.10        6.06e- 2      5.09
17 mu_1       0.8     1.13     0.594       9.11e- 4     12.9 
18 mu_1       0.9     1.04     0.111       4.01e- 7     21.0 
19 mu_0       0.1     0.0341   0.00000388  0             1.37
20 mu_0       0.2     0.221    0.000738    0             7.46
21 mu_0       0.3     0.543    0.0126      0            19.6 
22 mu_0       0.4     0.796    0.0713      0            20.2 
23 mu_0       0.5     0.934    0.286       0            10.4 
24 mu_0       0.6     1.05     0.700       0             4.34
25 mu_0       0.7     1.13     1.02        0             4.17
26 mu_0       0.8     1.15     1.12        0             4.69
27 mu_0       0.9     1.15     0.400       0            17.1 
[1] "Total run time was 190.818 seconds"
