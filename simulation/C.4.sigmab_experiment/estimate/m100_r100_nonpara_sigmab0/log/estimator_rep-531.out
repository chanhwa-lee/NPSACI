
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1202"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  8  6  5 11  7  6  7  5  9  5  4  5  3  6  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03982 0.36935 0.63448 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
693 509 
[1] "treatment indicator table: "

  0   1 
434 768 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 579
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 67"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 623
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 69.384 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.373 0.0810
 2 mu         0.1   0.2 0.423 0.0775
 3 mu         0.1   0.3 0.473 0.0860
 4 mu         0.1   0.4 0.502 0.102 
 5 mu         0.1   0.5 0.518 0.117 
 6 mu         0.2   0.1 0.351 0.0699
 7 mu         0.2   0.2 0.397 0.0558
 8 mu         0.2   0.3 0.450 0.0587
 9 mu         0.2   0.4 0.478 0.0724
10 mu         0.2   0.5 0.496 0.0899
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.431       0.123  0.0000901      6.45
 2 mu         0.2      0.718       0.509  0.00940        6.91
 3 mu         0.3      0.884       0.814  0.0911         3.85
 4 mu         0.4      0.961       0.995  0.321          2.03
 5 mu         0.5      0.987       1      0.642          1.44
 6 mu         0.6      0.998       1      0.849          1.11
 7 mu         0.7      1.01        1      0.770          1.20
 8 mu         0.8      1.00        1      0.428          1.39
 9 mu         0.9      0.940       0.944  0.0842         3.87
10 mu_1       0.1      0.686       0.349  0.000430       9.51
11 mu_1       0.2      0.862       0.786  0.0230         5.45
12 mu_1       0.3      0.947       0.958  0.153          2.45
13 mu_1       0.4      0.982       0.999  0.427          1.74
14 mu_1       0.5      0.994       1      0.735          1.25
15 mu_1       0.6      1.00        1      0.855          1.11
16 mu_1       0.7      1.01        1      0.726          1.25
17 mu_1       0.8      0.999       1      0.390          1.48
18 mu_1       0.9      0.932       0.908  0.0722         4.19
19 mu_0       0.1      0.403       0.0975 0.0000522      6.11
20 mu_0       0.2      0.682       0.438  0.00601        7.28
21 mu_0       0.3      0.857       0.754  0.0645         4.45
22 mu_0       0.4      0.946       0.965  0.251          2.23
23 mu_0       0.5      0.980       0.993  0.550          1.62
24 mu_0       0.6      0.992       1      0.835          1.19
25 mu_0       0.7      1.00        1      0.873          1.14
26 mu_0       0.8      1.01        1      0.581          1.40
27 mu_0       0.9      1.01        1      0.192          1.58
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.121     0.0000419  1.69e-11      5.93
 2 mu         0.2     0.542     0.00430    2.19e- 7     29.2 
 3 mu         0.3     0.892     0.0632     4.89e- 5     38.9 
 4 mu         0.4     1.00      0.293      2.01e- 3     26.3 
 5 mu         0.5     1.04      0.732      3.18e- 2     10.4 
 6 mu         0.6     1.09      1.04       2.61e- 1      2.90
 7 mu         0.7     1.09      1.05       2.24e- 2      2.94
 8 mu         0.8     1.00      0.611      2.93e- 4      7.45
 9 mu         0.9     0.737     0.0894     8.16e- 8     12.1 
10 mu_1       0.1     0.386     0.000308   1.48e-10     16.9 
11 mu_1       0.2     0.874     0.0148     9.56e- 7     41.7 
12 mu_1       0.3     1.04      0.139      1.42e- 4     37.1 
13 mu_1       0.4     1.04      0.490      4.41e- 3     18.8 
14 mu_1       0.5     1.06      0.930      5.57e- 2      5.93
15 mu_1       0.6     1.10      1.08       1.87e- 1      3.13
16 mu_1       0.7     1.09      0.966      1.12e- 2      3.82
17 mu_1       0.8     0.979     0.467      1.28e- 4      8.46
18 mu_1       0.9     0.703     0.0603     3.17e- 8     12.2 
19 mu_0       0.1     0.0915    0.0000126  0             4.71
20 mu_0       0.2     0.458     0.00176    0            26.1 
21 mu_0       0.3     0.828     0.0278     0            39.7 
22 mu_0       0.4     0.982     0.164      0            31.3 
23 mu_0       0.5     1.02      0.507      0            14.8 
24 mu_0       0.6     1.06      0.946      0             4.13
25 mu_0       0.7     1.10      1.15       0             3.31
26 mu_0       0.8     1.09      1.02       0             3.39
27 mu_0       0.9     1.05      0.325      0            11.0 
[1] "Total run time was 71.476 seconds"
