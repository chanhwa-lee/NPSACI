
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1248"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  5  9  9  6  4  3  6  6  5 11  4  5 10  8  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02748 0.33923 0.61190 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
757 491 
[1] "treatment indicator table: "

  0   1 
450 798 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 649
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 599
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 82.414 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.402 0.175
 2 mu         0.1   0.2 0.583 0.202
 3 mu         0.1   0.3 0.597 0.205
 4 mu         0.1   0.4 0.608 0.199
 5 mu         0.1   0.5 0.631 0.198
 6 mu         0.2   0.1 0.382 0.144
 7 mu         0.2   0.2 0.550 0.160
 8 mu         0.2   0.3 0.565 0.158
 9 mu         0.2   0.4 0.583 0.144
10 mu         0.2   0.5 0.607 0.137
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.731       0.108  0.0000200     31.6 
 2 mu         0.2      0.801       0.492  0.00433       15.6 
 3 mu         0.3      0.910       0.809  0.0643         5.18
 4 mu         0.4      0.977       0.920  0.299          2.52
 5 mu         0.5      0.997       0.992  0.685          1.64
 6 mu         0.6      1.00        1      0.874          1.19
 7 mu         0.7      1.00        1      0.835          1.21
 8 mu         0.8      0.995       1      0.549          1.65
 9 mu         0.9      0.919       0.936  0.117          2.58
10 mu_1       0.1      0.777       0.323  0.000102      24.4 
11 mu_1       0.2      0.845       0.808  0.0113         6.31
12 mu_1       0.3      0.950       0.935  0.114          2.94
13 mu_1       0.4      0.989       0.990  0.412          2.26
14 mu_1       0.5      0.999       1      0.739          1.45
15 mu_1       0.6      1.00        1      0.866          1.13
16 mu_1       0.7      1.00        1      0.802          1.23
17 mu_1       0.8      0.992       1      0.503          1.75
18 mu_1       0.9      0.911       0.932  0.100          2.72
19 mu_0       0.1      0.726       0.0825 0.0000109     32.4 
20 mu_0       0.2      0.790       0.425  0.00260       17.9 
21 mu_0       0.3      0.894       0.757  0.0429         6.59
22 mu_0       0.4      0.968       0.904  0.223          2.69
23 mu_0       0.5      0.995       0.975  0.582          1.83
24 mu_0       0.6      1.00        1      0.804          1.26
25 mu_0       0.7      1.00        1      0.914          1.17
26 mu_0       0.8      1.00        1      0.733          1.35
27 mu_0       0.9      0.996       1      0.270          2.30
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.0982   0.0000286   6.20e-12      3.24
 2 mu         0.2     0.430    0.00422     9.03e- 8     22.4 
 3 mu         0.3     0.694    0.0669      2.31e- 5     30.0 
 4 mu         0.4     0.806    0.271       1.11e- 3     17.0 
 5 mu         0.5     0.929    0.709       2.10e- 2      4.86
 6 mu         0.6     1.03     0.967       2.16e- 1      3.93
 7 mu         0.7     1.01     0.941       3.41e- 2      2.88
 8 mu         0.8     0.847    0.463       3.42e- 4      6.72
 9 mu         0.9     0.681    0.0538      7.52e- 8     15.8 
10 mu_1       0.1     0.304    0.000183    5.79e-11      8.99
11 mu_1       0.2     0.687    0.0141      4.21e- 7     31.1 
12 mu_1       0.3     0.828    0.136       7.17e- 5     27.8 
13 mu_1       0.4     0.878    0.453       2.59e- 3     11.8 
14 mu_1       0.5     0.974    0.913       3.92e- 2      4.09
15 mu_1       0.6     1.04     0.980       3.08e- 1      3.69
16 mu_1       0.7     0.985    0.823       1.35e- 2      3.77
17 mu_1       0.8     0.826    0.342       1.19e- 4      8.40
18 mu_1       0.9     0.683    0.0346      2.32e- 8     17.0 
19 mu_0       0.1     0.0753   0.00000785  0             2.60
20 mu_0       0.2     0.366    0.00196     0            20.2 
21 mu_0       0.3     0.637    0.0267      0            30.9 
22 mu_0       0.4     0.758    0.141       0            20.5 
23 mu_0       0.5     0.883    0.501       0             7.02
24 mu_0       0.6     1.03     0.971       0             4.30
25 mu_0       0.7     1.07     1.08        0             3.42
26 mu_0       0.8     0.931    0.796       0             3.11
27 mu_0       0.9     0.660    0.177       0            10.5 
[1] "Total run time was 85.131 seconds"
