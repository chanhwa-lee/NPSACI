
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1346"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  5  6  3  8  5  5  7  3  7  6  3  7  7 16  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04664 0.40012 0.64478 1.00000 5.48528 
[1] "event indicator table: "

  0   1 
785 561 
[1] "treatment indicator table: "

  0   1 
494 852 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 687
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 33"
[1] "     Cluster: 38"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 79"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 659
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 142.752 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.420 0.124 
 2 mu         0.1   0.2 0.438 0.115 
 3 mu         0.1   0.3 0.455 0.120 
 4 mu         0.1   0.4 0.495 0.102 
 5 mu         0.1   0.5 0.577 0.151 
 6 mu         0.2   0.1 0.401 0.102 
 7 mu         0.2   0.2 0.439 0.0875
 8 mu         0.2   0.3 0.457 0.0835
 9 mu         0.2   0.4 0.472 0.0773
10 mu         0.2   0.5 0.546 0.125 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.411       0.0629 0.000112       4.69
 2 mu         0.2      0.691       0.390  0.0117         5.90
 3 mu         0.3      0.861       0.759  0.114          4.18
 4 mu         0.4      0.948       0.961  0.401          2.12
 5 mu         0.5      0.986       0.994  0.682          1.38
 6 mu         0.6      0.999       0.999  0.896          1.15
 7 mu         0.7      1.00        1      0.814          1.19
 8 mu         0.8      1.01        1      0.478          1.61
 9 mu         0.9      1.00        0.980  0.154          3.72
10 mu_1       0.1      0.642       0.220  0.000537       7.50
11 mu_1       0.2      0.814       0.677  0.0287         6.24
12 mu_1       0.3      0.914       0.936  0.192          3.07
13 mu_1       0.4      0.968       0.973  0.512          1.79
14 mu_1       0.5      0.992       1      0.750          1.32
15 mu_1       0.6      1.00        1      0.895          1.11
16 mu_1       0.7      1.00        1      0.751          1.24
17 mu_1       0.8      1.01        1      0.427          1.71
18 mu_1       0.9      0.998       0.958  0.135          3.87
19 mu_0       0.1      0.385       0.0453 0.0000652      4.67
20 mu_0       0.2      0.660       0.333  0.00750        5.98
21 mu_0       0.3      0.838       0.712  0.0808         4.66
22 mu_0       0.4      0.935       0.932  0.315          2.42
23 mu_0       0.5      0.980       0.995  0.615          1.57
24 mu_0       0.6      0.996       1      0.836          1.22
25 mu_0       0.7      1.00        1      0.881          1.14
26 mu_0       0.8      1.01        1.00   0.682          1.44
27 mu_0       0.9      1.04        1      0.324          2.37
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.223   0.0000172   1.98e-13     14.8 
 2 mu         0.2      0.787   0.00435     1.03e- 8     36.5 
 3 mu         0.3      1.21    0.0630      5.16e- 6     37.9 
 4 mu         0.4      1.28    0.298       3.78e- 4     34.2 
 5 mu         0.5      1.17    0.702       9.33e- 3     16.8 
 6 mu         0.6      1.08    1.01        1.10e- 1      4.50
 7 mu         0.7      1.12    0.968       8.61e- 2      4.84
 8 mu         0.8      1.23    0.415       2.23e- 3     11.0 
 9 mu         0.9      1.07    0.0445      3.10e- 6     16.1 
10 mu_1       0.1      0.589   0.000103    1.76e-12     34.2 
11 mu_1       0.2      1.16    0.0152      4.56e- 8     42.1 
12 mu_1       0.3      1.35    0.132       1.53e- 5     42.1 
13 mu_1       0.4      1.26    0.454       8.40e- 4     28.5 
14 mu_1       0.5      1.12    0.911       1.66e- 2     11.2 
15 mu_1       0.6      1.07    1.02        1.64e- 1      2.50
16 mu_1       0.7      1.14    0.876       2.84e- 2      5.61
17 mu_1       0.8      1.25    0.302       6.43e- 4     12.2 
18 mu_1       0.9      1.06    0.0311      7.95e- 7     15.8 
19 mu_0       0.1      0.183   0.00000647  0            12.7 
20 mu_0       0.2      0.694   0.00161     0            35.1 
21 mu_0       0.3      1.14    0.0313      0            36.1 
22 mu_0       0.4      1.30    0.172       0            38.0 
23 mu_0       0.5      1.22    0.525       0            22.5 
24 mu_0       0.6      1.10    0.960       0             7.50
25 mu_0       0.7      1.06    1.13        0             3.02
26 mu_0       0.8      1.15    0.766       0             7.62
27 mu_0       0.9      1.17    0.148       0            19.0 
[1] "Total run time was 146.312 seconds"
