
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1214"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 8 11  7  4  8  3  4  3  8  5 10  6  6  6  5  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02857 0.31657 0.60077 1.00000 6.00000 
[1] "event indicator table: "

  0   1 
723 491 
[1] "treatment indicator table: "

  0   1 
419 795 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 633
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 52"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 581
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 31"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 140.088 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.286 0.115
 2 mu         0.1   0.2 0.312 0.144
 3 mu         0.1   0.3 0.446 0.168
 4 mu         0.1   0.4 0.462 0.183
 5 mu         0.1   0.5 0.475 0.195
 6 mu         0.2   0.1 0.290 0.113
 7 mu         0.2   0.2 0.331 0.137
 8 mu         0.2   0.3 0.438 0.163
 9 mu         0.2   0.4 0.462 0.181
10 mu         0.2   0.5 0.478 0.193
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      1.75        0.0803 0.00000306    130.  
 2 mu         0.2      2.70        0.463  0.00135       202.  
 3 mu         0.3      1.93        0.842  0.0300        107.  
 4 mu         0.4      1.26        1      0.182          31.0 
 5 mu         0.5      1.04        1      0.508           5.77
 6 mu         0.6      1.01        1      0.844           1.31
 7 mu         0.7      1.00        1      0.916           1.17
 8 mu         0.8      0.997       1      0.726           1.44
 9 mu         0.9      0.996       0.992  0.440           3.61
10 mu_1       0.1      2.94        0.245  0.0000157     230.  
11 mu_1       0.2      2.59        0.740  0.00356       179.  
12 mu_1       0.3      1.57        0.970  0.0544         64.4 
13 mu_1       0.4      1.12        1      0.257          14.6 
14 mu_1       0.5      1.01        1      0.601           2.73
15 mu_1       0.6      1.00        1      0.896           1.11
16 mu_1       0.7      1.00        1      0.877           1.19
17 mu_1       0.8      0.996       1      0.692           1.51
18 mu_1       0.9      0.996       0.991  0.415           3.94
19 mu_0       0.1      1.62        0.0620 0.00000165    119.  
20 mu_0       0.2      2.72        0.396  0.000795      207.  
21 mu_0       0.3      2.09        0.782  0.0196        126.  
22 mu_0       0.4      1.36        0.975  0.133          41.9 
23 mu_0       0.5      1.06        1      0.415           8.80
24 mu_0       0.6      1.01        1      0.760           1.72
25 mu_0       0.7      1.01        1      0.905           1.14
26 mu_0       0.8      1.00        1      0.861           1.23
27 mu_0       0.9      0.997       1      0.612           2.03
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.398    0.0000573  3.48e-12     16.7 
 2 mu         0.2      0.718    0.00461    5.06e- 8     29.3 
 3 mu         0.3      0.951    0.0433     1.29e- 5     25.9 
 4 mu         0.4      1.15     0.225      6.22e- 4     15.6 
 5 mu         0.5      1.22     0.545      1.18e- 2      7.26
 6 mu         0.6      1.17     1.02       9.68e- 2      4.36
 7 mu         0.7      1.11     1.02       2.16e- 1      3.31
 8 mu         0.8      0.967    0.627      9.19e- 3      4.05
 9 mu         0.9      0.683    0.0820     1.30e- 5     10.2 
10 mu_1       0.1      0.889    0.000360   3.24e-11     37.1 
11 mu_1       0.2      0.935    0.0162     2.36e- 7     32.5 
12 mu_1       0.3      1.04     0.113      4.02e- 5     19.2 
13 mu_1       0.4      1.16     0.386      1.45e- 3      8.68
14 mu_1       0.5      1.18     0.732      2.06e- 2      6.78
15 mu_1       0.6      1.14     1.04       1.41e- 1      3.53
16 mu_1       0.7      1.08     0.994      5.14e- 2      3.55
17 mu_1       0.8      0.935    0.504      5.17e- 3      4.56
18 mu_1       0.9      0.656    0.0622     6.48e- 6     10.5 
19 mu_0       0.1      0.343    0.0000165  0            14.4 
20 mu_0       0.2      0.663    0.00128    0            28.5 
21 mu_0       0.3      0.913    0.0189     0            28.7 
22 mu_0       0.4      1.14     0.0898     0            20.3 
23 mu_0       0.5      1.25     0.316      0            10.6 
24 mu_0       0.6      1.22     0.775      0             5.82
25 mu_0       0.7      1.16     1.10       0             3.23
26 mu_0       0.8      1.09     0.944      0             4.50
27 mu_0       0.9      0.934    0.293      0             6.77
[1] "Total run time was 142.985 seconds"
