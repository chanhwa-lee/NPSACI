
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1265"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5 10  6  5  7  7  4  9  4  4  4  4  7  5  8 11 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02876 0.31400 0.56901 0.93961 5.00000 
[1] "event indicator table: "

  0   1 
753 512 
[1] "treatment indicator table: "

  0   1 
449 816 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 638
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 627
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 37"
[1] "     Cluster: 42"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 92.408 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.410 0.114 
 2 mu         0.1   0.2 0.572 0.147 
 3 mu         0.1   0.3 0.600 0.153 
 4 mu         0.1   0.4 0.652 0.173 
 5 mu         0.1   0.5 0.699 0.183 
 6 mu         0.2   0.1 0.380 0.0625
 7 mu         0.2   0.2 0.537 0.102 
 8 mu         0.2   0.3 0.572 0.0933
 9 mu         0.2   0.4 0.630 0.111 
10 mu         0.2   0.5 0.686 0.113 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.632       0.0843 0.0000242     11.6 
 2 mu         0.2      0.804       0.485  0.00565        9.70
 3 mu         0.3      0.953       0.801  0.0847         5.74
 4 mu         0.4      1.01        1      0.307          4.17
 5 mu         0.5      1.00        1      0.603          2.67
 6 mu         0.6      0.994       1      0.763          1.49
 7 mu         0.7      1.00        1      0.791          1.15
 8 mu         0.8      1.02        1      0.517          2.12
 9 mu         0.9      1.16        1      0.185          7.82
10 mu_1       0.1      0.758       0.248  0.000114      13.5 
11 mu_1       0.2      0.872       0.772  0.0139         6.21
12 mu_1       0.3      0.983       0.995  0.143          4.34
13 mu_1       0.4      1.01        1      0.398          3.90
14 mu_1       0.5      0.997       1      0.664          2.27
15 mu_1       0.6      0.994       0.997  0.836          1.35
16 mu_1       0.7      1.00        1      0.741          1.20
17 mu_1       0.8      1.03        1      0.480          2.34
18 mu_1       0.9      1.18        1      0.163          8.49
19 mu_0       0.1      0.618       0.0631 0.0000142     11.4 
20 mu_0       0.2      0.786       0.412  0.00359       10.6 
21 mu_0       0.3      0.940       0.727  0.0595         6.92
22 mu_0       0.4      1.01        0.944  0.240          4.35
23 mu_0       0.5      1.01        1      0.508          3.08
24 mu_0       0.6      0.995       1      0.654          1.71
25 mu_0       0.7      0.992       0.998  0.819          1.14
26 mu_0       0.8      1.00        1      0.664          1.32
27 mu_0       0.9      1.00        1      0.378          1.97
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.0544    0.0000412  8.29e-14      2.48
 2 mu         0.2     0.378     0.00445    7.63e- 9     15.5 
 3 mu         0.3     0.945     0.0515     5.04e- 6     26.9 
 4 mu         0.4     1.32      0.247      4.22e- 4     27.7 
 5 mu         0.5     1.30      0.583      1.08e- 2     17.8 
 6 mu         0.6     1.11      0.912      1.23e- 1      5.47
 7 mu         0.7     1.01      0.966      1.93e- 1      4.53
 8 mu         0.8     0.930     0.476      6.51e- 3      9.95
 9 mu         0.9     0.699     0.0569     8.15e- 6     13.8 
10 mu_1       0.1     0.199     0.000251   7.05e-13      8.26
11 mu_1       0.2     0.714     0.0144     3.24e- 8     25.8 
12 mu_1       0.3     1.25      0.126      1.43e- 5     29.9 
13 mu_1       0.4     1.41      0.406      8.97e- 4     26.9 
14 mu_1       0.5     1.25      0.760      1.84e- 2     13.8 
15 mu_1       0.6     1.07      0.990      1.75e- 1      3.55
16 mu_1       0.7     0.994     0.900      1.16e- 1      5.39
17 mu_1       0.8     0.916     0.378      3.43e- 3     10.4 
18 mu_1       0.9     0.683     0.0388     3.82e- 6     15.4 
19 mu_0       0.1     0.0383    0.0000120  0             1.84
20 mu_0       0.2     0.294     0.00153    0            12.9 
21 mu_0       0.3     0.815     0.0238     0            25.6 
22 mu_0       0.4     1.26      0.148      0            28.2 
23 mu_0       0.5     1.34      0.422      0            21.7 
24 mu_0       0.6     1.18      0.816      0             8.36
25 mu_0       0.7     1.04      1.03       0             2.52
26 mu_0       0.8     0.985     0.798      0             8.29
27 mu_0       0.9     0.848     0.180      0            12.1 
[1] "Total run time was 95.041 seconds"
