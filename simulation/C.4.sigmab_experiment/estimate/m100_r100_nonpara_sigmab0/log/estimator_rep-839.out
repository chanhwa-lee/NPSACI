
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1324"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  5  2  8  3  7  6  7  8  3  8  5  7  9  8  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.01628 0.30416 0.59810 1.00000 7.00000 
[1] "event indicator table: "

  0   1 
789 535 
[1] "treatment indicator table: "

  0   1 
488 836 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 644
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 680
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 117.879 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.398 0.128 
 2 mu         0.1   0.2 0.432 0.147 
 3 mu         0.1   0.3 0.441 0.164 
 4 mu         0.1   0.4 0.487 0.175 
 5 mu         0.1   0.5 0.518 0.179 
 6 mu         0.2   0.1 0.401 0.0828
 7 mu         0.2   0.2 0.449 0.0972
 8 mu         0.2   0.3 0.463 0.102 
 9 mu         0.2   0.4 0.519 0.108 
10 mu         0.2   0.5 0.544 0.109 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.446       0.0962 0.0000587      7.58
 2 mu         0.2      0.710       0.493  0.0105         4.17
 3 mu         0.3      0.890       0.796  0.127          3.18
 4 mu         0.4      0.966       0.943  0.393          2.60
 5 mu         0.5      0.988       0.985  0.651          1.52
 6 mu         0.6      1.00        1      0.804          1.13
 7 mu         0.7      1.01        1.00   0.822          1.27
 8 mu         0.8      1.02        1      0.510          2.62
 9 mu         0.9      1.03        0.986  0.157          6.70
10 mu_1       0.1      0.606       0.258  0.000281       5.27
11 mu_1       0.2      0.827       0.734  0.0256         3.43
12 mu_1       0.3      0.941       0.917  0.212          3.33
13 mu_1       0.4      0.979       0.972  0.524          2.24
14 mu_1       0.5      0.993       0.999  0.673          1.33
15 mu_1       0.6      1.00        1.00   0.846          1.10
16 mu_1       0.7      1.01        1      0.772          1.36
17 mu_1       0.8      1.02        1      0.457          2.89
18 mu_1       0.9      1.02        0.973  0.136          6.95
19 mu_0       0.1      0.429       0.0761 0.0000340      8.37
20 mu_0       0.2      0.681       0.431  0.00675        4.38
21 mu_0       0.3      0.868       0.762  0.0898         3.12
22 mu_0       0.4      0.956       0.915  0.306          2.83
23 mu_0       0.5      0.984       0.984  0.624          1.71
24 mu_0       0.6      0.997       1      0.742          1.21
25 mu_0       0.7      1.01        1.00   0.904          1.12
26 mu_0       0.8      1.01        1.00   0.721          1.55
27 mu_0       0.9      1.04        1      0.343          4.45
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.193    0.0000357  1.71e-13      7.55
 2 mu         0.2      0.535    0.00517    1.58e- 8     14.9 
 3 mu         0.3      0.912    0.0632     1.04e- 5     18.6 
 4 mu         0.4      1.11     0.337      8.72e- 4     16.4 
 5 mu         0.5      1.11     0.716      2.24e- 2      7.03
 6 mu         0.6      1.04     0.956      1.81e- 1      2.34
 7 mu         0.7      0.995    0.891      1.15e- 1      6.34
 8 mu         0.8      1.05     0.397      1.98e- 3     13.9 
 9 mu         0.9      1.13     0.0328     9.79e- 7     25.6 
10 mu_1       0.1      0.495    0.000215   1.46e-12     18.9 
11 mu_1       0.2      0.814    0.0157     6.70e- 8     18.6 
12 mu_1       0.3      1.07     0.144      2.95e- 5     20.7 
13 mu_1       0.4      1.12     0.512      1.85e- 3     13.7 
14 mu_1       0.5      1.07     0.909      3.81e- 2      4.68
15 mu_1       0.6      1.00     0.966      2.42e- 1      2.07
16 mu_1       0.7      0.991    0.775      5.48e- 2      7.55
17 mu_1       0.8      1.07     0.315      8.24e- 4     14.5 
18 mu_1       0.9      1.15     0.0224     3.63e- 7     28.5 
19 mu_0       0.1      0.159    0.0000137  0             6.29
20 mu_0       0.2      0.465    0.00189    0            14.0 
21 mu_0       0.3      0.845    0.0348     0            17.7 
22 mu_0       0.4      1.09     0.203      0            18.2 
23 mu_0       0.5      1.15     0.542      0             9.37
24 mu_0       0.6      1.09     0.924      0             4.10
25 mu_0       0.7      1.00     1.01       0             3.52
26 mu_0       0.8      0.936    0.642      0            11.6 
27 mu_0       0.9      0.903    0.116      0            17.0 
[1] "Total run time was 121.169 seconds"
