
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1329"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  2  5  4  8  7  3  7  7  9  4 11  6  4  6 11 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02825 0.30098 0.56249 0.99030 5.00000 
[1] "event indicator table: "

  0   1 
809 520 
[1] "treatment indicator table: "

  0   1 
497 832 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 681
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 17"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 648
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 75.789 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.326 0.113 
 2 mu         0.1   0.2 0.416 0.157 
 3 mu         0.1   0.3 0.484 0.162 
 4 mu         0.1   0.4 0.513 0.172 
 5 mu         0.1   0.5 0.525 0.184 
 6 mu         0.2   0.1 0.323 0.0708
 7 mu         0.2   0.2 0.412 0.0943
 8 mu         0.2   0.3 0.465 0.0968
 9 mu         0.2   0.4 0.507 0.0992
10 mu         0.2   0.5 0.526 0.104 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.993        0.196   0.00184     30.7 
 2 mu         0.2      1.06         0.595   0.0622      18.7 
 3 mu         0.3      1.00         0.860   0.274        5.40
 4 mu         0.4      0.987        0.992   0.566        1.58
 5 mu         0.5      0.991        0.992   0.799        1.20
 6 mu         0.6      0.999        0.999   0.878        1.10
 7 mu         0.7      1.01         1       0.869        1.19
 8 mu         0.8      1.01         1       0.641        1.65
 9 mu         0.9      1.01         0.952   0.139        2.77
10 mu_1       0.1      1.17         0.515   0.00680     34.1 
11 mu_1       0.2      1.03         0.841   0.118       10.6 
12 mu_1       0.3      0.986        0.962   0.375        2.45
13 mu_1       0.4      0.988        0.995   0.659        1.32
14 mu_1       0.5      0.994        0.998   0.848        1.15
15 mu_1       0.6      1.00         1.00    0.896        1.09
16 mu_1       0.7      1.01         1       0.838        1.23
17 mu_1       0.8      1.01         1       0.587        1.73
18 mu_1       0.9      1.00         0.939   0.118        2.90
19 mu_0       0.1      0.974        0.164   0.00129     30.3 
20 mu_0       0.2      1.07         0.535   0.0482      20.8 
21 mu_0       0.3      1.01         0.811   0.231        6.67
22 mu_0       0.4      0.987        0.974   0.505        1.88
23 mu_0       0.5      0.989        0.999   0.743        1.24
24 mu_0       0.6      0.995        0.999   0.850        1.15
25 mu_0       0.7      1.00         1.01    0.877        1.15
26 mu_0       0.8      1.01         1       0.777        1.31
27 mu_0       0.9      1.03         1       0.332        2.14
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.0289    0.0000429  7.91e-16      1.56
 2 mu         0.2     0.144     0.00457    3.69e-10      3.46
 3 mu         0.3     0.417     0.0582     7.15e- 7      3.99
 4 mu         0.4     0.759     0.260      1.45e- 4      4.51
 5 mu         0.5     0.958     0.634      8.38e- 3      3.62
 6 mu         0.6     0.998     0.975      2.14e- 1      1.92
 7 mu         0.7     1.03      1.05       9.08e- 2      3.01
 8 mu         0.8     1.21      0.567      4.03e- 3     25.3 
 9 mu         0.9     1.81      0.0448     5.04e- 6    119.  
10 mu_1       0.1     0.0963    0.000261   7.52e-15      4.45
11 mu_1       0.2     0.278     0.0157     1.75e- 9      4.94
12 mu_1       0.3     0.599     0.120      2.26e- 6      4.27
13 mu_1       0.4     0.896     0.438      3.44e- 4      4.75
14 mu_1       0.5     1.01      0.866      1.59e- 2      3.05
15 mu_1       0.6     1.02      1.05       3.33e- 1      1.92
16 mu_1       0.7     1.05      0.975      4.63e- 2      4.08
17 mu_1       0.8     1.24      0.468      2.06e- 3     30.1 
18 mu_1       0.9     1.83      0.0341     2.36e- 6    125.  
19 mu_0       0.1     0.0214    0.0000148  0             1.24
20 mu_0       0.2     0.111     0.00203    0             3.09
21 mu_0       0.3     0.339     0.0246     0             4.07
22 mu_0       0.4     0.668     0.131      0             4.49
23 mu_0       0.5     0.905     0.455      0             4.19
24 mu_0       0.6     0.967     0.902      0             2.09
25 mu_0       0.7     0.983     1.03       0             1.82
26 mu_0       0.8     1.10      0.867      0             6.33
27 mu_0       0.9     1.58      0.151      0            59.4 
[1] "Total run time was 78.988 seconds"
