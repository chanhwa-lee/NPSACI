
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1251"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 2  9  4  9  7  8  6  6 10  2  5  7  6  6  9  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.05196 0.36025 0.60031 1.00000 4.00000 
[1] "event indicator table: "

  0   1 
754 497 
[1] "treatment indicator table: "

  0   1 
426 825 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 628
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 623
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 328.062 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.312 0.0926
 2 mu         0.1   0.2 0.562 0.180 
 3 mu         0.1   0.3 0.627 0.183 
 4 mu         0.1   0.4 0.688 0.178 
 5 mu         0.1   0.5 0.690 0.179 
 6 mu         0.2   0.1 0.303 0.0737
 7 mu         0.2   0.2 0.523 0.131 
 8 mu         0.2   0.3 0.570 0.125 
 9 mu         0.2   0.4 0.629 0.122 
10 mu         0.2   0.5 0.646 0.123 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      0.597       0.109  0.00000121      15.5 
 2 mu         0.2      0.885       0.431  0.000647         8.94
 3 mu         0.3      1.04        0.791  0.0171          12.5 
 4 mu         0.4      1.04        0.924  0.121            8.66
 5 mu         0.5      1.00        0.993  0.393            3.65
 6 mu         0.6      0.995       0.998  0.744            1.48
 7 mu         0.7      1.01        1      0.845            1.16
 8 mu         0.8      1.02        1      0.648            1.53
 9 mu         0.9      1.03        1      0.279            3.69
10 mu_1       0.1      0.845       0.322  0.00000662      13.2 
11 mu_1       0.2      1.01        0.713  0.00181         11.9 
12 mu_1       0.3      1.07        0.926  0.0327          12.4 
13 mu_1       0.4      1.02        0.993  0.179            6.64
14 mu_1       0.5      0.993       0.985  0.484            2.57
15 mu_1       0.6      0.998       1      0.812            1.25
16 mu_1       0.7      1.01        1      0.795            1.22
17 mu_1       0.8      1.02        1      0.613            1.69
18 mu_1       0.9      1.04        1      0.247            4.03
19 mu_0       0.1      0.570       0.0847 0.000000611     15.7 
20 mu_0       0.2      0.852       0.362  0.000355        10.1 
21 mu_0       0.3      1.03        0.700  0.0104          12.6 
22 mu_0       0.4      1.05        0.900  0.0826          10.0 
23 mu_0       0.5      1.01        0.995  0.302            4.72
24 mu_0       0.6      0.991       0.987  0.644            1.83
25 mu_0       0.7      1.00        1      0.872            1.11
26 mu_0       0.8      1.01        1      0.724            1.24
27 mu_0       0.9      1.01        1.00   0.567            1.77
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.382    0.0000449  5.07e-16     30.6 
 2 mu         0.2      0.723    0.00466    2.36e-10     33.9 
 3 mu         0.3      1.21     0.0555     4.58e- 7     37.0 
 4 mu         0.4      1.53     0.291      9.28e- 5     43.5 
 5 mu         0.5      1.51     0.726      5.37e- 3     23.3 
 6 mu         0.6      1.36     1.17       9.80e- 2      7.48
 7 mu         0.7      1.27     1.14       3.81e- 1      5.19
 8 mu         0.8      1.52     0.697      1.05e- 2     25.6 
 9 mu         0.9      2.41     0.128      5.84e- 6     76.0 
10 mu_1       0.1      0.781    0.000297   4.81e-15     50.9 
11 mu_1       0.2      1.01     0.0166     1.12e- 9     28.3 
12 mu_1       0.3      1.41     0.117      1.45e- 6     45.4 
13 mu_1       0.4      1.54     0.486      2.20e- 4     40.1 
14 mu_1       0.5      1.43     0.968      1.02e- 2     17.2 
15 mu_1       0.6      1.29     1.20       1.45e- 1      6.56
16 mu_1       0.7      1.26     1.15       1.82e- 1      6.95
17 mu_1       0.8      1.57     0.567      4.83e- 3     30.0 
18 mu_1       0.9      2.45     0.0926     2.39e- 6     80.3 
19 mu_0       0.1      0.337    0.0000164  0            28.3 
20 mu_0       0.2      0.652    0.00144    0            35.3 
21 mu_0       0.3      1.13     0.0246     0            33.3 
22 mu_0       0.4      1.51     0.142      0            45.8 
23 mu_0       0.5      1.58     0.459      0            29.4 
24 mu_0       0.6      1.45     0.987      0             9.05
25 mu_0       0.7      1.30     1.20       0             4.14
26 mu_0       0.8      1.30     1.10       0             8.01
27 mu_0       0.9      2.01     0.394      0            46.9 
[1] "Total run time was 332.686 seconds"
