
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1280"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 3 10  6  7  2  4  6  5  6  8  8  9 10  9  3  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.05051 0.39448 0.61857 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
780 500 
[1] "treatment indicator table: "

  0   1 
447 833 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 630
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 650
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 104.081 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.348 0.106 
 2 mu         0.1   0.2 0.453 0.103 
 3 mu         0.1   0.3 0.466 0.114 
 4 mu         0.1   0.4 0.604 0.140 
 5 mu         0.1   0.5 0.618 0.137 
 6 mu         0.2   0.1 0.339 0.0800
 7 mu         0.2   0.2 0.429 0.0738
 8 mu         0.2   0.3 0.453 0.0728
 9 mu         0.2   0.4 0.520 0.0784
10 mu         0.2   0.5 0.541 0.0785
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.464       0.0396 0.0000859      6.45
 2 mu         0.2      0.659       0.359  0.00902        5.98
 3 mu         0.3      0.861       0.748  0.0879         3.91
 4 mu         0.4      0.984       0.973  0.309          2.26
 5 mu         0.5      1.02        1      0.596          2.20
 6 mu         0.6      1.01        1      0.784          1.47
 7 mu         0.7      0.992       0.989  0.823          1.23
 8 mu         0.8      0.991       1      0.516          2.32
 9 mu         0.9      0.966       0.934  0.0940         7.07
10 mu_1       0.1      0.602       0.134  0.000431       8.17
11 mu_1       0.2      0.764       0.611  0.0229         4.36
12 mu_1       0.3      0.926       0.908  0.152          2.33
13 mu_1       0.4      1.00        1      0.415          2.46
14 mu_1       0.5      1.01        1      0.687          2.03
15 mu_1       0.6      1.00        1.00   0.787          1.31
16 mu_1       0.7      0.990       0.983  0.800          1.29
17 mu_1       0.8      0.990       1      0.455          2.57
18 mu_1       0.9      0.961       0.924  0.0768         7.58
19 mu_0       0.1      0.449       0.0291 0.0000475      6.26
20 mu_0       0.2      0.633       0.296  0.00556        6.38
21 mu_0       0.3      0.832       0.687  0.0605         4.58
22 mu_0       0.4      0.971       0.944  0.238          2.80
23 mu_0       0.5      1.02        1      0.501          2.37
24 mu_0       0.6      1.02        1.00   0.732          1.71
25 mu_0       0.7      0.999       1      0.790          1.18
26 mu_0       0.8      0.992       0.995  0.759          1.46
27 mu_0       0.9      1.01        1      0.248          2.43
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.136    0.0000284  1.49e-12     11.5 
 2 mu         0.2      0.533    0.00462    3.21e- 8     40.4 
 3 mu         0.3      0.918    0.0516     8.19e- 6     53.5 
 4 mu         0.4      1.13     0.234      3.94e- 4     43.1 
 5 mu         0.5      1.21     0.592      7.46e- 3     23.5 
 6 mu         0.6      1.24     0.939      7.67e- 2      8.51
 7 mu         0.7      1.29     0.976      4.93e- 2      8.09
 8 mu         0.8      1.41     0.635      6.46e- 4     23.3 
 9 mu         0.9      1.60     0.109      1.80e- 7     34.0 
10 mu_1       0.1      0.431    0.000180   1.39e-11     34.5 
11 mu_1       0.2      0.873    0.0150     1.50e- 7     60.5 
12 mu_1       0.3      1.10     0.128      2.55e- 5     53.5 
13 mu_1       0.4      1.18     0.413      9.19e- 4     32.3 
14 mu_1       0.5      1.22     0.801      1.39e- 2     14.1 
15 mu_1       0.6      1.25     1.06       1.19e- 1      4.65
16 mu_1       0.7      1.31     0.924      2.47e- 2     10.1 
17 mu_1       0.8      1.44     0.501      2.82e- 4     25.5 
18 mu_1       0.9      1.60     0.0756     6.99e- 8     35.4 
19 mu_0       0.1      0.104    0.0000129  0             8.95
20 mu_0       0.2      0.447    0.00184    0            35.3 
21 mu_0       0.3      0.839    0.0217     0            53.5 
22 mu_0       0.4      1.10     0.135      0            50.3 
23 mu_0       0.5      1.20     0.396      0            32.9 
24 mu_0       0.6      1.22     0.795      0            14.9 
25 mu_0       0.7      1.24     0.957      0             5.68
26 mu_0       0.8      1.28     0.738      0            14.6 
27 mu_0       0.9      1.55     0.267      0            37.9 
[1] "Total run time was 106.887 seconds"
