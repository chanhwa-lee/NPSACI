
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1222"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  4  8  8  7 11  4  5  8  9  3  4  9  5  6  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04732 0.37601 0.63788 1.00000 4.54479 
[1] "event indicator table: "

  0   1 
712 510 
[1] "treatment indicator table: "

  0   1 
416 806 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 569
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 653
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 38"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 114.659 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.484 0.186
 2 mu         0.1   0.2 0.560 0.234
 3 mu         0.1   0.3 0.676 0.230
 4 mu         0.1   0.4 0.733 0.266
 5 mu         0.1   0.5 0.746 0.262
 6 mu         0.2   0.1 0.414 0.131
 7 mu         0.2   0.2 0.494 0.163
 8 mu         0.2   0.3 0.581 0.157
 9 mu         0.2   0.4 0.635 0.185
10 mu         0.2   0.5 0.668 0.181
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      1.38        0.0772 0.00000362     74.0 
 2 mu         0.2      1.04        0.399  0.00148        32.3 
 3 mu         0.3      0.920       0.693  0.0319          9.14
 4 mu         0.4      0.943       0.928  0.194           2.45
 5 mu         0.5      0.976       1      0.540           1.49
 6 mu         0.6      0.998       1      0.852           1.21
 7 mu         0.7      1.00        1      0.841           1.14
 8 mu         0.8      0.986       1      0.596           1.44
 9 mu         0.9      0.947       0.945  0.269           2.92
10 mu_1       0.1      1.23        0.218  0.0000185      53.0 
11 mu_1       0.2      0.880       0.597  0.00388        12.0 
12 mu_1       0.3      0.913       0.869  0.0576          2.86
13 mu_1       0.4      0.962       0.999  0.274           1.90
14 mu_1       0.5      0.988       0.998  0.639           1.40
15 mu_1       0.6      1.00        1      0.898           1.16
16 mu_1       0.7      1.00        1.00   0.799           1.17
17 mu_1       0.8      0.983       1      0.555           1.55
18 mu_1       0.9      0.946       0.936  0.244           3.15
19 mu_0       0.1      1.40        0.0594 0.00000197     76.3 
20 mu_0       0.2      1.07        0.336  0.000881       37.4 
21 mu_0       0.3      0.923       0.633  0.0208         11.8 
22 mu_0       0.4      0.930       0.883  0.140           3.23
23 mu_0       0.5      0.964       1      0.441           1.63
24 mu_0       0.6      0.991       0.998  0.752           1.29
25 mu_0       0.7      1.00        1      0.889           1.15
26 mu_0       0.8      0.999       1      0.762           1.21
27 mu_0       0.9      0.956       0.984  0.451           1.57
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.0697    0.0000321  4.69e-13      4.49
 2 mu         0.2     0.220     0.00363    2.74e- 8      8.86
 3 mu         0.3     0.442     0.0418     1.57e- 5      8.95
 4 mu         0.4     0.757     0.236      1.34e- 3      7.68
 5 mu         0.5     1.05      0.618      3.76e- 2     11.1 
 6 mu         0.6     1.16      0.948      2.85e- 1      7.68
 7 mu         0.7     1.19      1.06       2.27e- 1      5.20
 8 mu         0.8     1.45      0.667      1.73e- 2     29.4 
 9 mu         0.9     2.09      0.144      1.01e- 4     96.7 
10 mu_1       0.1     0.210     0.000213   4.42e-12     11.2 
11 mu_1       0.2     0.387     0.0111     1.29e- 7     11.1 
12 mu_1       0.3     0.615     0.0940     4.93e- 5      7.46
13 mu_1       0.4     0.912     0.397      3.16e- 3      9.60
14 mu_1       0.5     1.13      0.822      6.02e- 2     11.1 
15 mu_1       0.6     1.18      1.00       3.80e- 1      6.40
16 mu_1       0.7     1.21      1.04       1.08e- 1      6.99
17 mu_1       0.8     1.50      0.566      8.30e- 3     34.5 
18 mu_1       0.9     2.13      0.0972     5.19e- 5    101.  
19 mu_0       0.1     0.0541    0.0000105  0             3.74
20 mu_0       0.2     0.179     0.00125    0             8.31
21 mu_0       0.3     0.368     0.0211     0             9.59
22 mu_0       0.4     0.654     0.121      0             7.89
23 mu_0       0.5     0.971     0.390      0            11.1 
24 mu_0       0.6     1.14      0.836      0             9.60
25 mu_0       0.7     1.16      1.08       0             3.85
26 mu_0       0.8     1.24      1.09       0             8.64
27 mu_0       0.9     1.75      0.482      0            56.9 
[1] "Total run time was 116.596 seconds"
