
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "sigma.b: 1"
[1] "m: 100"
[1] "N_total: 1226"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 2  8  5 11  6  9 12  2  6  3  4  9  7  5  8  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.01156 0.32542 0.59692 1.00000 6.00000 
[1] "event indicator table: "

  0   1 
715 511 
[1] "treatment indicator table: "

  0   1 
484 742 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 624
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 25"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 602
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 134.414 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.356 0.0694
 2 mu         0.1   0.2 0.438 0.0618
 3 mu         0.1   0.3 0.520 0.0504
 4 mu         0.1   0.4 0.572 0.0656
 5 mu         0.1   0.5 0.620 0.0522
 6 mu         0.2   0.1 0.342 0.0488
 7 mu         0.2   0.2 0.414 0.0443
 8 mu         0.2   0.3 0.478 0.0413
 9 mu         0.2   0.4 0.529 0.0533
10 mu         0.2   0.5 0.569 0.0481
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.16         1        0.0149      5.99
 2 mu         0.2      1.06         1        0.142       3.86
 3 mu         0.3      1.01         0.980    0.415       2.00
 4 mu         0.4      0.995        0.980    0.572       1.66
 5 mu         0.5      1.01         1        0.602       1.56
 6 mu         0.6      1.02         1.01     0.725       1.37
 7 mu         0.7      1.03         1.02     0.831       1.31
 8 mu         0.8      1.02         1.01     0.757       1.30
 9 mu         0.9      1.01         1        0.739       1.41
10 mu_1       0.1      1.08         0.976    0.0575      5.71
11 mu_1       0.2      1.02         0.986    0.293       2.92
12 mu_1       0.3      0.997        0.968    0.562       1.82
13 mu_1       0.4      1.00         1        0.547       1.68
14 mu_1       0.5      1.01         1.00     0.628       1.51
15 mu_1       0.6      1.02         1.01     0.753       1.33
16 mu_1       0.7      1.03         1.02     0.837       1.31
17 mu_1       0.8      1.02         1.01     0.739       1.33
18 mu_1       0.9      1.01         1        0.727       1.41
19 mu_0       0.1      1.17         1        0.0102      6.59
20 mu_0       0.2      1.07         1        0.104       4.09
21 mu_0       0.3      1.01         0.988    0.327       2.11
22 mu_0       0.4      0.992        0.966    0.589       1.65
23 mu_0       0.5      0.999        1        0.576       1.62
24 mu_0       0.6      1.01         1        0.682       1.42
25 mu_0       0.7      1.03         1.02     0.778       1.32
26 mu_0       0.8      1.03         1.01     0.774       1.34
27 mu_0       0.9      1.01         1        0.619       1.37
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      9.39     0.0000730  3.32e-18    474.  
 2 mu         0.2      6.29     0.00733    1.74e-12    227.  
 3 mu         0.3      3.18     0.0880     3.85e- 9     62.9 
 4 mu         0.4      1.99     0.435      9.12e- 7     24.4 
 5 mu         0.5      1.41     0.444      6.32e- 5      9.60
 6 mu         0.6      1.07     0.566      2.02e- 3      5.41
 7 mu         0.7      0.966    0.772      5.23e- 5      6.13
 8 mu         0.8      1.08     0.702      5.29e- 8      5.33
 9 mu         0.9      1.41     0.259      2.56e-13      6.16
10 mu_1       0.1     10.5      0.000459   3.32e-17    474.  
11 mu_1       0.2      4.22     0.0249     8.69e-12    114.  
12 mu_1       0.3      2.21     0.190      1.28e- 8     23.3 
13 mu_1       0.4      1.57     0.425      2.28e- 6     11.3 
14 mu_1       0.5      1.20     0.526      1.26e- 4      8.38
15 mu_1       0.6      1.00     0.619      4.52e- 4      6.01
16 mu_1       0.7      0.981    0.786      7.86e- 6      5.83
17 mu_1       0.8      1.13     0.617      6.62e- 9      5.77
18 mu_1       0.9      1.45     0.183      2.84e-14      6.44
19 mu_0       0.1      9.27     0.0000301  0           474.  
20 mu_0       0.2      6.80     0.00307    0           256.  
21 mu_0       0.3      3.60     0.0430     0            79.9 
22 mu_0       0.4      2.26     0.239      0            36.2 
23 mu_0       0.5      1.62     0.395      0            16.0 
24 mu_0       0.6      1.19     0.401      0             7.87
25 mu_0       0.7      0.932    0.482      0             6.81
26 mu_0       0.8      0.881    0.375      0             4.45
27 mu_0       0.9      1.05     0.0269     0             8.21
[1] "Total run time was 138.111 seconds"
