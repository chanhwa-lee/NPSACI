
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
Loading required package: Matrix

Attaching package: ‘Matrix’

The following objects are masked from ‘package:tidyr’:

    expand, pack, unpack

[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: para"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 200"
[1] "N_total: 2636"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
10  5 10 11 10 13 16 15  8 16 20 13  8 17 16 12 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03786 0.34996 0.60360 1.00000 4.89663 
[1] "event indicator table: "

   0    1 
1584 1052 
[1] "treatment indicator table: "

   0    1 
 946 1690 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 103"
[1] "     Cluster: 105"
[1] "     Cluster: 110"
[1] "     Cluster: 113"
[1] "     Cluster: 114"
[1] "     Cluster: 117"
[1] "     Cluster: 120"
[1] "     Cluster: 121"
[1] "     Cluster: 125"
[1] "     Cluster: 128"
[1] "     Cluster: 129"
[1] "     Cluster: 130"
[1] "     Cluster: 134"
[1] "     Cluster: 137"
[1] "     Cluster: 141"
[1] "     Cluster: 142"
[1] "     Cluster: 145"
[1] "     Cluster: 146"
[1] "     Cluster: 147"
[1] "     Cluster: 151"
[1] "     Cluster: 153"
[1] "     Cluster: 156"
[1] "     Cluster: 157"
[1] "     Cluster: 158"
[1] "     Cluster: 160"
[1] "     Cluster: 161"
[1] "     Cluster: 162"
[1] "     Cluster: 163"
[1] "     Cluster: 164"
[1] "     Cluster: 167"
[1] "     Cluster: 168"
[1] "     Cluster: 169"
[1] "     Cluster: 171"
[1] "     Cluster: 172"
[1] "     Cluster: 175"
[1] "     Cluster: 176"
[1] "     Cluster: 179"
[1] "     Cluster: 181"
[1] "     Cluster: 184"
[1] "     Cluster: 185"
[1] "     Cluster: 186"
[1] "     Cluster: 187"
[1] "     Cluster: 188"
[1] "     Cluster: 190"
[1] "     Cluster: 194"
[1] "     Cluster: 195"
[1] "     Cluster: 196"
[1] "     Cluster: 199"
[1] "   Split: 2"
[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] "     Cluster: 101"
[1] "     Cluster: 102"
[1] "     Cluster: 104"
[1] "     Cluster: 106"
[1] "     Cluster: 107"
[1] "     Cluster: 108"
[1] "     Cluster: 109"
[1] "     Cluster: 111"
[1] "     Cluster: 112"
[1] "     Cluster: 115"
[1] "     Cluster: 116"
[1] "     Cluster: 118"
[1] "     Cluster: 119"
[1] "     Cluster: 122"
[1] "     Cluster: 123"
[1] "     Cluster: 124"
[1] "     Cluster: 126"
[1] "     Cluster: 127"
[1] "     Cluster: 131"
[1] "     Cluster: 132"
[1] "     Cluster: 133"
[1] "     Cluster: 135"
[1] "     Cluster: 136"
[1] "     Cluster: 138"
[1] "     Cluster: 139"
[1] "     Cluster: 140"
[1] "     Cluster: 143"
[1] "     Cluster: 144"
[1] "     Cluster: 148"
[1] "     Cluster: 149"
[1] "     Cluster: 150"
[1] "     Cluster: 152"
[1] "     Cluster: 154"
[1] "     Cluster: 155"
[1] "     Cluster: 159"
[1] "     Cluster: 165"
[1] "     Cluster: 166"
[1] "     Cluster: 170"
[1] "     Cluster: 173"
[1] "     Cluster: 174"
[1] "     Cluster: 177"
[1] "     Cluster: 178"
[1] "     Cluster: 180"
[1] "     Cluster: 182"
[1] "     Cluster: 183"
[1] "     Cluster: 189"
[1] "     Cluster: 191"
[1] "     Cluster: 192"
[1] "     Cluster: 193"
[1] "     Cluster: 197"
[1] "     Cluster: 198"
[1] "     Cluster: 200"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 377.865 seconds"
Warning message:
In checkConv(attr(opt, "derivs"), opt$par, ctrl = control$checkConv,  :
  Model failed to converge with max|grad| = 0.00220649 (tol = 0.002, component 1)
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.278 0.0978
 2 mu         0.1   0.2 0.291 0.126 
 3 mu         0.1   0.3 0.311 0.149 
 4 mu         0.1   0.4 0.454 0.0869
 5 mu         0.1   0.5 0.479 0.101 
 6 mu         0.2   0.1 0.247 0.0679
 7 mu         0.2   0.2 0.264 0.0908
 8 mu         0.2   0.3 0.301 0.108 
 9 mu         0.2   0.4 0.423 0.0582
10 mu         0.2   0.5 0.451 0.0677
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.864        0.585 0.000149      11.4 
 2 mu         0.2      0.995        0.946 0.0146         5.41
 3 mu         0.3      1.02         1     0.130          3.21
 4 mu         0.4      1.02         1     0.406          2.46
 5 mu         0.5      1.01         1     0.591          1.73
 6 mu         0.6      1.00         1     0.694          1.33
 7 mu         0.7      0.995        0.999 0.637          1.22
 8 mu         0.8      0.991        1.00  0.568          1.43
 9 mu         0.9      1.00         1     0.188          1.90
10 mu_1       0.1      0.999        0.891 0.000678       8.35
11 mu_1       0.2      1.03         0.998 0.0341         2.91
12 mu_1       0.3      1.02         1     0.210          3.23
13 mu_1       0.4      1.01         1     0.512          2.06
14 mu_1       0.5      1.01         1     0.642          1.58
15 mu_1       0.6      1.00         1     0.657          1.22
16 mu_1       0.7      0.994        0.998 0.621          1.23
17 mu_1       0.8      0.991        1     0.499          1.48
18 mu_1       0.9      1.00         1     0.158          1.98
19 mu_0       0.1      0.849        0.553 0.0000905     11.8 
20 mu_0       0.2      0.988        0.921 0.00977        6.12
21 mu_0       0.3      1.02         0.998 0.0966         3.20
22 mu_0       0.4      1.02         1     0.336          2.72
23 mu_0       0.5      1.01         1     0.541          1.88
24 mu_0       0.6      1.00         1     0.664          1.49
25 mu_0       0.7      0.997        1     0.672          1.21
26 mu_0       0.8      0.991        0.997 0.595          1.28
27 mu_0       0.9      0.990        0.994 0.343          1.80
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       1.25   0.0000160   1.51e-17    108.  
 2 mu         0.2       1.76   0.00386     3.95e-12    106.  
 3 mu         0.3       1.71   0.0510      5.84e- 9     71.6 
 4 mu         0.4       1.46   0.282       1.04e- 6     37.8 
 5 mu         0.5       1.24   0.744       5.75e- 5     15.8 
 6 mu         0.6       1.18   0.918       1.53e- 3      6.38
 7 mu         0.7       1.19   0.983       1.89e- 4      6.02
 8 mu         0.8       1.16   0.838       2.87e- 7     12.0 
 9 mu         0.9       1.11   0.136       3.12e-12     13.8 
10 mu_1       0.1       1.99   0.000102    1.51e-16    154.  
11 mu_1       0.2       1.82   0.0127      1.97e-11     75.9 
12 mu_1       0.3       1.56   0.115       1.95e- 8     34.5 
13 mu_1       0.4       1.30   0.471       2.59e- 6     20.4 
14 mu_1       0.5       1.16   0.816       1.15e- 4      7.74
15 mu_1       0.6       1.16   0.956       2.55e- 3      6.58
16 mu_1       0.7       1.19   1.03        4.06e- 5      7.10
17 mu_1       0.8       1.16   0.706       5.38e- 8     13.0 
18 mu_1       0.9       1.12   0.0977      5.20e-13     13.3 
19 mu_0       0.1       1.17   0.00000497  0           103.  
20 mu_0       0.2       1.75   0.00144     0           114.  
21 mu_0       0.3       1.78   0.0242      0            87.6 
22 mu_0       0.4       1.57   0.166       0            54.1 
23 mu_0       0.5       1.32   0.539       0            27.2 
24 mu_0       0.6       1.21   0.798       0            10.7 
25 mu_0       0.7       1.20   0.948       0             7.02
26 mu_0       0.8       1.16   0.950       0             8.73
27 mu_0       0.9       1.05   0.271       0            18.4 
[1] "Total run time was 381.329 seconds"
