
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
Loading required package: Matrix

Attaching package: ‘Matrix’

The following objects are masked from ‘package:tidyr’:

    expand, pack, unpack

[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: para"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 200"
[1] "N_total: 2543"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
11 12 10 14 10 13 14  9 14 14 16 10 15 12 17  9 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04369 0.34973 0.61509 1.00000 5.60593 
[1] "event indicator table: "

   0    1 
1501 1042 
[1] "treatment indicator table: "

   0    1 
 949 1594 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] "     Cluster: 103"
[1] "     Cluster: 104"
[1] "     Cluster: 105"
[1] "     Cluster: 106"
[1] "     Cluster: 107"
[1] "     Cluster: 108"
[1] "     Cluster: 111"
[1] "     Cluster: 112"
[1] "     Cluster: 114"
[1] "     Cluster: 115"
[1] "     Cluster: 116"
[1] "     Cluster: 117"
[1] "     Cluster: 119"
[1] "     Cluster: 121"
[1] "     Cluster: 123"
[1] "     Cluster: 124"
[1] "     Cluster: 125"
[1] "     Cluster: 126"
[1] "     Cluster: 129"
[1] "     Cluster: 130"
[1] "     Cluster: 133"
[1] "     Cluster: 134"
[1] "     Cluster: 135"
[1] "     Cluster: 136"
[1] "     Cluster: 137"
[1] "     Cluster: 138"
[1] "     Cluster: 139"
[1] "     Cluster: 140"
[1] "     Cluster: 143"
[1] "     Cluster: 146"
[1] "     Cluster: 147"
[1] "     Cluster: 148"
[1] "     Cluster: 149"
[1] "     Cluster: 154"
[1] "     Cluster: 156"
[1] "     Cluster: 160"
[1] "     Cluster: 164"
[1] "     Cluster: 166"
[1] "     Cluster: 172"
[1] "     Cluster: 174"
[1] "     Cluster: 175"
[1] "     Cluster: 177"
[1] "     Cluster: 178"
[1] "     Cluster: 179"
[1] "     Cluster: 184"
[1] "     Cluster: 186"
[1] "     Cluster: 188"
[1] "     Cluster: 189"
[1] "     Cluster: 191"
[1] "     Cluster: 194"
[1] "     Cluster: 196"
[1] "     Cluster: 197"
[1] "     Cluster: 198"
[1] "   Split: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 101"
[1] "     Cluster: 102"
[1] "     Cluster: 109"
[1] "     Cluster: 110"
[1] "     Cluster: 113"
[1] "     Cluster: 118"
[1] "     Cluster: 120"
[1] "     Cluster: 122"
[1] "     Cluster: 127"
[1] "     Cluster: 128"
[1] "     Cluster: 131"
[1] "     Cluster: 132"
[1] "     Cluster: 141"
[1] "     Cluster: 142"
[1] "     Cluster: 144"
[1] "     Cluster: 145"
[1] "     Cluster: 150"
[1] "     Cluster: 151"
[1] "     Cluster: 152"
[1] "     Cluster: 153"
[1] "     Cluster: 155"
[1] "     Cluster: 157"
[1] "     Cluster: 158"
[1] "     Cluster: 159"
[1] "     Cluster: 161"
[1] "     Cluster: 162"
[1] "     Cluster: 163"
[1] "     Cluster: 165"
[1] "     Cluster: 167"
[1] "     Cluster: 168"
[1] "     Cluster: 169"
[1] "     Cluster: 170"
[1] "     Cluster: 171"
[1] "     Cluster: 173"
[1] "     Cluster: 176"
[1] "     Cluster: 180"
[1] "     Cluster: 181"
[1] "     Cluster: 182"
[1] "     Cluster: 183"
[1] "     Cluster: 185"
[1] "     Cluster: 187"
[1] "     Cluster: 190"
[1] "     Cluster: 192"
[1] "     Cluster: 193"
[1] "     Cluster: 195"
[1] "     Cluster: 199"
[1] "     Cluster: 200"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 415.903 seconds"
Warning message:
In checkConv(attr(opt, "derivs"), opt$par, ctrl = control$checkConv,  :
  Model failed to converge with max|grad| = 0.00314647 (tol = 0.002, component 1)
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.311 0.0329
 2 mu         0.1   0.2 0.396 0.0413
 3 mu         0.1   0.3 0.436 0.0586
 4 mu         0.1   0.4 0.504 0.0545
 5 mu         0.1   0.5 0.580 0.0565
 6 mu         0.2   0.1 0.283 0.0255
 7 mu         0.2   0.2 0.370 0.0253
 8 mu         0.2   0.3 0.419 0.0346
 9 mu         0.2   0.4 0.481 0.0287
10 mu         0.2   0.5 0.539 0.0309
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.00         0.881   0.00411      6.91
 2 mu         0.2      0.997        1       0.0653       3.61
 3 mu         0.3      0.993        1       0.250        1.65
 4 mu         0.4      0.992        1       0.527        1.49
 5 mu         0.5      0.994        1       0.684        1.48
 6 mu         0.6      0.997        1       0.631        1.44
 7 mu         0.7      1.00         1       0.592        1.41
 8 mu         0.8      1.00         1       0.593        1.63
 9 mu         0.9      1.01         1       0.184        1.98
10 mu_1       0.1      1.02         0.987   0.0163       6.35
11 mu_1       0.2      1.00         1       0.138        2.30
12 mu_1       0.3      0.996        1       0.382        1.61
13 mu_1       0.4      0.994        1       0.562        1.52
14 mu_1       0.5      0.995        1       0.723        1.50
15 mu_1       0.6      0.998        1       0.611        1.41
16 mu_1       0.7      1.00         1       0.594        1.45
17 mu_1       0.8      1.00         1       0.570        1.65
18 mu_1       0.9      1.01         1       0.158        2.09
19 mu_0       0.1      0.999        0.873   0.00275      7.24
20 mu_0       0.2      0.995        0.991   0.0472       3.94
21 mu_0       0.3      0.992        1       0.193        1.77
22 mu_0       0.4      0.992        1       0.440        1.51
23 mu_0       0.5      0.993        1       0.622        1.50
24 mu_0       0.6      0.997        1       0.662        1.49
25 mu_0       0.7      0.997        1       0.587        1.33
26 mu_0       0.8      0.997        1       0.616        1.54
27 mu_0       0.9      1.00         1       0.414        1.83
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       2.30    0.0000277  1.54e-16    197.  
 2 mu         0.2       1.67    0.00623    3.58e-11     85.2 
 3 mu         0.3       1.32    0.0985     3.68e- 8     22.5 
 4 mu         0.4       1.26    0.463      4.90e- 6     19.9 
 5 mu         0.5       1.29    0.807      2.18e- 4     16.0 
 6 mu         0.6       1.33    1.09       8.18e- 4      8.62
 7 mu         0.7       1.29    0.922      9.57e- 6     11.4 
 8 mu         0.8       1.18    0.766      1.66e- 8     13.3 
 9 mu         0.9       1.13    0.0942     2.86e-13     20.6 
10 mu_1       0.1       2.21    0.000172   0           141.  
11 mu_1       0.2       1.38    0.0206     0            30.4 
12 mu_1       0.3       1.22    0.191      0            15.3 
13 mu_1       0.4       1.23    0.668      0            21.0 
14 mu_1       0.5       1.29    0.893      0            13.5 
15 mu_1       0.6       1.32    1.09       0             9.83
16 mu_1       0.7       1.27    0.937      0            11.1 
17 mu_1       0.8       1.17    0.725      0            13.3 
18 mu_1       0.9       1.14    0.0701     0            22.9 
19 mu_0       0.1       2.31    0.0000103  0           203.  
20 mu_0       0.2       1.75    0.00239    0            98.9 
21 mu_0       0.3       1.36    0.0421     0            29.9 
22 mu_0       0.4       1.27    0.308      0            19.2 
23 mu_0       0.5       1.29    0.665      0            18.5 
24 mu_0       0.6       1.33    1.06       0             8.55
25 mu_0       0.7       1.34    1.06       0            12.0 
26 mu_0       0.8       1.22    0.890      0            13.3 
27 mu_0       0.9       1.05    0.180      0            13.7 
[1] "Total run time was 419.627 seconds"
