
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
Loading required package: Matrix

Attaching package: ‘Matrix’

The following objects are masked from ‘package:tidyr’:

    expand, pack, unpack

[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: para"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 200"
[1] "N_total: 2458"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
12  9 19 13 15 14  9 12 17  9 14 10 12 11 10 14 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04237 0.39689 0.64741 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
1456 1002 
[1] "treatment indicator table: "

   0    1 
 852 1606 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 53"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "     Cluster: 103"
[1] "     Cluster: 104"
[1] "     Cluster: 105"
[1] "     Cluster: 109"
[1] "     Cluster: 111"
[1] "     Cluster: 114"
[1] "     Cluster: 115"
[1] "     Cluster: 116"
[1] "     Cluster: 120"
[1] "     Cluster: 121"
[1] "     Cluster: 122"
[1] "     Cluster: 123"
[1] "     Cluster: 125"
[1] "     Cluster: 126"
[1] "     Cluster: 127"
[1] "     Cluster: 129"
[1] "     Cluster: 131"
[1] "     Cluster: 133"
[1] "     Cluster: 135"
[1] "     Cluster: 136"
[1] "     Cluster: 138"
[1] "     Cluster: 139"
[1] "     Cluster: 140"
[1] "     Cluster: 142"
[1] "     Cluster: 143"
[1] "     Cluster: 144"
[1] "     Cluster: 149"
[1] "     Cluster: 151"
[1] "     Cluster: 153"
[1] "     Cluster: 156"
[1] "     Cluster: 157"
[1] "     Cluster: 158"
[1] "     Cluster: 160"
[1] "     Cluster: 161"
[1] "     Cluster: 164"
[1] "     Cluster: 165"
[1] "     Cluster: 166"
[1] "     Cluster: 171"
[1] "     Cluster: 172"
[1] "     Cluster: 173"
[1] "     Cluster: 175"
[1] "     Cluster: 176"
[1] "     Cluster: 179"
[1] "     Cluster: 181"
[1] "     Cluster: 183"
[1] "     Cluster: 186"
[1] "     Cluster: 187"
[1] "     Cluster: 188"
[1] "     Cluster: 189"
[1] "     Cluster: 192"
[1] "     Cluster: 194"
[1] "     Cluster: 195"
[1] "     Cluster: 196"
[1] "     Cluster: 199"
[1] "   Split: 2"
[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 89"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 101"
[1] "     Cluster: 102"
[1] "     Cluster: 106"
[1] "     Cluster: 107"
[1] "     Cluster: 108"
[1] "     Cluster: 110"
[1] "     Cluster: 112"
[1] "     Cluster: 113"
[1] "     Cluster: 117"
[1] "     Cluster: 118"
[1] "     Cluster: 119"
[1] "     Cluster: 124"
[1] "     Cluster: 128"
[1] "     Cluster: 130"
[1] "     Cluster: 132"
[1] "     Cluster: 134"
[1] "     Cluster: 137"
[1] "     Cluster: 141"
[1] "     Cluster: 145"
[1] "     Cluster: 146"
[1] "     Cluster: 147"
[1] "     Cluster: 148"
[1] "     Cluster: 150"
[1] "     Cluster: 152"
[1] "     Cluster: 154"
[1] "     Cluster: 155"
[1] "     Cluster: 159"
[1] "     Cluster: 162"
[1] "     Cluster: 163"
[1] "     Cluster: 167"
[1] "     Cluster: 168"
[1] "     Cluster: 169"
[1] "     Cluster: 170"
[1] "     Cluster: 174"
[1] "     Cluster: 177"
[1] "     Cluster: 178"
[1] "     Cluster: 180"
[1] "     Cluster: 182"
[1] "     Cluster: 184"
[1] "     Cluster: 185"
[1] "     Cluster: 190"
[1] "     Cluster: 191"
[1] "     Cluster: 193"
[1] "     Cluster: 197"
[1] "     Cluster: 198"
[1] "     Cluster: 200"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 379.306 seconds"
Warning message:
In checkConv(attr(opt, "derivs"), opt$par, ctrl = control$checkConv,  :
  Model failed to converge with max|grad| = 0.00837401 (tol = 0.002, component 1)
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.225 0.186 
 2 mu         0.1   0.2 0.315 0.187 
 3 mu         0.1   0.3 0.376 0.184 
 4 mu         0.1   0.4 0.429 0.188 
 5 mu         0.1   0.5 0.458 0.192 
 6 mu         0.2   0.1 0.281 0.0600
 7 mu         0.2   0.2 0.357 0.0671
 8 mu         0.2   0.3 0.407 0.0670
 9 mu         0.2   0.4 0.466 0.0705
10 mu         0.2   0.5 0.509 0.0719
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      0.907        0.791 0.00000125      11.0 
 2 mu         0.2      0.917        0.957 0.000701         2.94
 3 mu         0.3      0.951        0.986 0.0175           2.10
 4 mu         0.4      0.975        1     0.0975           1.74
 5 mu         0.5      0.992        1     0.284            1.33
 6 mu         0.6      0.999        1     0.553            1.22
 7 mu         0.7      1.00         1     0.777            1.23
 8 mu         0.8      1.01         1     0.782            1.43
 9 mu         0.9      1.02         1.01  0.469            1.75
10 mu_1       0.1      0.896        0.975 0.00000693       5.79
11 mu_1       0.2      0.939        0.988 0.00194          2.50
12 mu_1       0.3      0.967        1     0.0334           2.11
13 mu_1       0.4      0.984        1     0.157            1.56
14 mu_1       0.5      0.995        1     0.376            1.27
15 mu_1       0.6      1.00         1     0.639            1.22
16 mu_1       0.7      1.00         1     0.769            1.25
17 mu_1       0.8      1.01         1     0.759            1.46
18 mu_1       0.9      1.02         1.00  0.442            1.77
19 mu_0       0.1      0.908        0.763 0.000000617     11.6 
20 mu_0       0.2      0.912        0.928 0.000390         3.46
21 mu_0       0.3      0.944        0.970 0.00985          2.19
22 mu_0       0.4      0.970        1     0.0580           1.88
23 mu_0       0.5      0.988        1     0.191            1.45
24 mu_0       0.6      0.998        1     0.425            1.28
25 mu_0       0.7      1.00         1     0.695            1.21
26 mu_0       0.8      1.00         1     0.688            1.30
27 mu_0       0.9      1.01         1.00  0.537            1.57
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.04     0.0000695  2.14e-17     64.4 
 2 mu         0.2      1.48     0.00757    1.12e-11     63.5 
 3 mu         0.3      1.60     0.0740     2.49e- 8     42.7 
 4 mu         0.4      1.52     0.306      5.67e- 6     22.6 
 5 mu         0.5      1.38     0.666      2.52e- 4     15.0 
 6 mu         0.6      1.23     0.964      5.58e- 3      8.25
 7 mu         0.7      1.12     0.896      3.65e- 4      5.67
 8 mu         0.8      1.06     0.853      9.49e- 7      5.98
 9 mu         0.9      1.20     0.221      2.32e-11     29.0 
10 mu_1       0.1      1.55     0.000409   0            91.9 
11 mu_1       0.2      1.56     0.0218     0            45.4 
12 mu_1       0.3      1.49     0.164      0            20.4 
13 mu_1       0.4      1.40     0.502      0            19.6 
14 mu_1       0.5      1.30     0.852      0            12.6 
15 mu_1       0.6      1.19     0.981      0             7.57
16 mu_1       0.7      1.10     0.853      0             5.11
17 mu_1       0.8      1.07     0.830      0             6.41
18 mu_1       0.9      1.23     0.150      0            32.2 
19 mu_0       0.1      0.981    0.0000219  0            61.3 
20 mu_0       0.2      1.46     0.00356    0            68.0 
21 mu_0       0.3      1.65     0.0327     0            52.3 
22 mu_0       0.4      1.61     0.167      0            32.3 
23 mu_0       0.5      1.47     0.469      0            17.3 
24 mu_0       0.6      1.30     0.804      0            12.6 
25 mu_0       0.7      1.15     0.875      0             7.25
26 mu_0       0.8      1.04     0.743      0             5.15
27 mu_0       0.9      0.948    0.225      0             8.78
[1] "Total run time was 382.938 seconds"
