
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
Loading required package: Matrix

Attaching package: ‘Matrix’

The following objects are masked from ‘package:tidyr’:

    expand, pack, unpack

[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: para"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 200"
[1] "N_total: 2360"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
15 15 18 18 13 12  8 12 13 10 11  9 14 18  4 10 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02266 0.32958 0.58096 1.00000 5.00000 
[1] "event indicator table: "

   0    1 
1416  944 
[1] "treatment indicator table: "

   0    1 
 868 1492 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 11"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "     Cluster: 101"
[1] "     Cluster: 104"
[1] "     Cluster: 105"
[1] "     Cluster: 107"
[1] "     Cluster: 109"
[1] "     Cluster: 111"
[1] "     Cluster: 112"
[1] "     Cluster: 114"
[1] "     Cluster: 115"
[1] "     Cluster: 119"
[1] "     Cluster: 120"
[1] "     Cluster: 121"
[1] "     Cluster: 122"
[1] "     Cluster: 123"
[1] "     Cluster: 124"
[1] "     Cluster: 125"
[1] "     Cluster: 127"
[1] "     Cluster: 137"
[1] "     Cluster: 138"
[1] "     Cluster: 140"
[1] "     Cluster: 141"
[1] "     Cluster: 143"
[1] "     Cluster: 144"
[1] "     Cluster: 145"
[1] "     Cluster: 148"
[1] "     Cluster: 150"
[1] "     Cluster: 151"
[1] "     Cluster: 152"
[1] "     Cluster: 156"
[1] "     Cluster: 162"
[1] "     Cluster: 165"
[1] "     Cluster: 168"
[1] "     Cluster: 171"
[1] "     Cluster: 173"
[1] "     Cluster: 176"
[1] "     Cluster: 179"
[1] "     Cluster: 182"
[1] "     Cluster: 183"
[1] "     Cluster: 185"
[1] "     Cluster: 193"
[1] "     Cluster: 194"
[1] "     Cluster: 198"
[1] "   Split: 2"
[1] "     Cluster: 1"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 19"
[1] "     Cluster: 23"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 102"
[1] "     Cluster: 103"
[1] "     Cluster: 106"
[1] "     Cluster: 108"
[1] "     Cluster: 110"
[1] "     Cluster: 113"
[1] "     Cluster: 116"
[1] "     Cluster: 117"
[1] "     Cluster: 118"
[1] "     Cluster: 126"
[1] "     Cluster: 128"
[1] "     Cluster: 129"
[1] "     Cluster: 130"
[1] "     Cluster: 131"
[1] "     Cluster: 132"
[1] "     Cluster: 133"
[1] "     Cluster: 134"
[1] "     Cluster: 135"
[1] "     Cluster: 136"
[1] "     Cluster: 139"
[1] "     Cluster: 142"
[1] "     Cluster: 146"
[1] "     Cluster: 147"
[1] "     Cluster: 149"
[1] "     Cluster: 153"
[1] "     Cluster: 154"
[1] "     Cluster: 155"
[1] "     Cluster: 157"
[1] "     Cluster: 158"
[1] "     Cluster: 159"
[1] "     Cluster: 160"
[1] "     Cluster: 161"
[1] "     Cluster: 163"
[1] "     Cluster: 164"
[1] "     Cluster: 166"
[1] "     Cluster: 167"
[1] "     Cluster: 169"
[1] "     Cluster: 170"
[1] "     Cluster: 172"
[1] "     Cluster: 174"
[1] "     Cluster: 175"
[1] "     Cluster: 177"
[1] "     Cluster: 178"
[1] "     Cluster: 180"
[1] "     Cluster: 181"
[1] "     Cluster: 184"
[1] "     Cluster: 186"
[1] "     Cluster: 187"
[1] "     Cluster: 188"
[1] "     Cluster: 189"
[1] "     Cluster: 190"
[1] "     Cluster: 191"
[1] "     Cluster: 192"
[1] "     Cluster: 195"
[1] "     Cluster: 196"
[1] "     Cluster: 197"
[1] "     Cluster: 199"
[1] "     Cluster: 200"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 323.838 seconds"
Warning messages:
1: In checkConv(attr(opt, "derivs"), opt$par, ctrl = control$checkConv,  :
  Model failed to converge with max|grad| = 0.00252428 (tol = 0.002, component 1)
2: In checkConv(attr(opt, "derivs"), opt$par, ctrl = control$checkConv,  :
  Model failed to converge with max|grad| = 0.00499245 (tol = 0.002, component 1)
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.264 0.0966
 2 mu         0.1   0.2 0.329 0.133 
 3 mu         0.1   0.3 0.384 0.174 
 4 mu         0.1   0.4 0.394 0.213 
 5 mu         0.1   0.5 0.462 0.221 
 6 mu         0.2   0.1 0.283 0.0477
 7 mu         0.2   0.2 0.349 0.0639
 8 mu         0.2   0.3 0.385 0.0825
 9 mu         0.2   0.4 0.403 0.102 
10 mu         0.2   0.5 0.450 0.103 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.17         0.884   0.00183     52.1 
 2 mu         0.2      1.00         1       0.0517      10.4 
 3 mu         0.3      0.987        1       0.243        3.15
 4 mu         0.4      0.983        1       0.533        1.49
 5 mu         0.5      0.984        1       0.649        1.22
 6 mu         0.6      0.990        1       0.763        1.29
 7 mu         0.7      0.997        1       0.756        1.27
 8 mu         0.8      1.00         1       0.667        1.45
 9 mu         0.9      1.00         1       0.445        2.17
10 mu_1       0.1      0.983        1       0.00740      5.13
11 mu_1       0.2      0.994        1       0.115        4.00
12 mu_1       0.3      0.988        1       0.376        1.89
13 mu_1       0.4      0.984        1       0.585        1.27
14 mu_1       0.5      0.986        1       0.682        1.29
15 mu_1       0.6      0.992        1       0.744        1.30
16 mu_1       0.7      0.999        1       0.773        1.24
17 mu_1       0.8      1.00         1       0.647        1.52
18 mu_1       0.9      1.00         1       0.415        2.26
19 mu_0       0.1      1.19         0.850   0.00115     57.3 
20 mu_0       0.2      1.01         0.982   0.0358      12.0 
21 mu_0       0.3      0.987        1       0.187        3.69
22 mu_0       0.4      0.983        1       0.452        1.63
23 mu_0       0.5      0.983        1       0.617        1.29
24 mu_0       0.6      0.987        0.999   0.756        1.30
25 mu_0       0.7      0.994        1       0.718        1.32
26 mu_0       0.8      1.00         1       0.747        1.27
27 mu_0       0.9      1.01         1       0.620        1.47
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.57     0.000279   1.81e-18    154.  
 2 mu         0.2      1.51     0.0170     1.90e-12     85.6 
 3 mu         0.3      1.61     0.160      6.32e- 9     46.5 
 4 mu         0.4      1.49     0.491      1.99e- 6     41.1 
 5 mu         0.5      1.26     0.868      1.73e- 4     17.6 
 6 mu         0.6      1.12     0.906      3.87e- 3      5.40
 7 mu         0.7      1.15     0.952      8.05e- 5      7.63
 8 mu         0.8      1.25     0.986      3.15e- 7     16.7 
 9 mu         0.9      1.31     0.223      2.16e-11     22.0 
10 mu_1       0.1      0.878    0.00145    0            36.7 
11 mu_1       0.2      1.32     0.0481     0            33.8 
12 mu_1       0.3      1.50     0.263      0            51.6 
13 mu_1       0.4      1.37     0.739      0            34.2 
14 mu_1       0.5      1.17     0.858      0            11.7 
15 mu_1       0.6      1.10     0.925      0             4.66
16 mu_1       0.7      1.16     0.976      0             9.08
17 mu_1       0.8      1.25     0.757      0            17.4 
18 mu_1       0.9      1.30     0.160      0            24.5 
19 mu_0       0.1      1.65     0.0000798  0           171.  
20 mu_0       0.2      1.56     0.00720    0           107.  
21 mu_0       0.3      1.65     0.0651     0            62.8 
22 mu_0       0.4      1.58     0.281      0            45.6 
23 mu_0       0.5      1.34     0.650      0            23.4 
24 mu_0       0.6      1.15     0.823      0             8.31
25 mu_0       0.7      1.13     0.882      0             5.16
26 mu_0       0.8      1.24     0.955      0            14.0 
27 mu_0       0.9      1.38     0.487      0            20.4 
[1] "Total run time was 327.399 seconds"
