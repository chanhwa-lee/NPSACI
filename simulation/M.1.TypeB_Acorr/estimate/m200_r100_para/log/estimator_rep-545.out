
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
Loading required package: Matrix

Attaching package: ‘Matrix’

The following objects are masked from ‘package:tidyr’:

    expand, pack, unpack

[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: para"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 200"
[1] "N_total: 2473"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 9 15 14 12 19  7  6 18 16 17  9 11 16  7 14 10 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0222  0.3035  0.5695  0.9804  5.0000 
[1] "event indicator table: "

   0    1 
1430 1043 
[1] "treatment indicator table: "

   0    1 
1033 1440 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
[1] "     Cluster: 3"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 101"
[1] "     Cluster: 102"
[1] "     Cluster: 103"
[1] "     Cluster: 104"
[1] "     Cluster: 106"
[1] "     Cluster: 111"
[1] "     Cluster: 112"
[1] "     Cluster: 113"
[1] "     Cluster: 116"
[1] "     Cluster: 117"
[1] "     Cluster: 118"
[1] "     Cluster: 119"
[1] "     Cluster: 121"
[1] "     Cluster: 124"
[1] "     Cluster: 127"
[1] "     Cluster: 128"
[1] "     Cluster: 132"
[1] "     Cluster: 133"
[1] "     Cluster: 134"
[1] "     Cluster: 137"
[1] "     Cluster: 139"
[1] "     Cluster: 140"
[1] "     Cluster: 146"
[1] "     Cluster: 148"
[1] "     Cluster: 150"
[1] "     Cluster: 152"
[1] "     Cluster: 154"
[1] "     Cluster: 158"
[1] "     Cluster: 159"
[1] "     Cluster: 160"
[1] "     Cluster: 161"
[1] "     Cluster: 164"
[1] "     Cluster: 165"
[1] "     Cluster: 167"
[1] "     Cluster: 168"
[1] "     Cluster: 170"
[1] "     Cluster: 173"
[1] "     Cluster: 175"
[1] "     Cluster: 176"
[1] "     Cluster: 177"
[1] "     Cluster: 178"
[1] "     Cluster: 181"
[1] "     Cluster: 182"
[1] "     Cluster: 183"
[1] "     Cluster: 189"
[1] "     Cluster: 192"
[1] "     Cluster: 193"
[1] "     Cluster: 196"
[1] "     Cluster: 198"
[1] "     Cluster: 200"
[1] "   Split: 2"
[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] "     Cluster: 105"
[1] "     Cluster: 107"
[1] "     Cluster: 108"
[1] "     Cluster: 109"
[1] "     Cluster: 110"
[1] "     Cluster: 114"
[1] "     Cluster: 115"
[1] "     Cluster: 120"
[1] "     Cluster: 122"
[1] "     Cluster: 123"
[1] "     Cluster: 125"
[1] "     Cluster: 126"
[1] "     Cluster: 129"
[1] "     Cluster: 130"
[1] "     Cluster: 131"
[1] "     Cluster: 135"
[1] "     Cluster: 136"
[1] "     Cluster: 138"
[1] "     Cluster: 141"
[1] "     Cluster: 142"
[1] "     Cluster: 143"
[1] "     Cluster: 144"
[1] "     Cluster: 145"
[1] "     Cluster: 147"
[1] "     Cluster: 149"
[1] "     Cluster: 151"
[1] "     Cluster: 153"
[1] "     Cluster: 155"
[1] "     Cluster: 156"
[1] "     Cluster: 157"
[1] "     Cluster: 162"
[1] "     Cluster: 163"
[1] "     Cluster: 166"
[1] "     Cluster: 169"
[1] "     Cluster: 171"
[1] "     Cluster: 172"
[1] "     Cluster: 174"
[1] "     Cluster: 179"
[1] "     Cluster: 180"
[1] "     Cluster: 184"
[1] "     Cluster: 185"
[1] "     Cluster: 186"
[1] "     Cluster: 187"
[1] "     Cluster: 188"
[1] "     Cluster: 190"
[1] "     Cluster: 191"
[1] "     Cluster: 194"
[1] "     Cluster: 195"
[1] "     Cluster: 197"
[1] "     Cluster: 199"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 254.217 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.378 0.0354
 2 mu         0.1   0.2 0.486 0.0550
 3 mu         0.1   0.3 0.539 0.0518
 4 mu         0.1   0.4 0.571 0.0587
 5 mu         0.1   0.5 0.601 0.0655
 6 mu         0.2   0.1 0.319 0.0251
 7 mu         0.2   0.2 0.434 0.0355
 8 mu         0.2   0.3 0.492 0.0416
 9 mu         0.2   0.4 0.531 0.0451
10 mu         0.2   0.5 0.571 0.0447
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.983        0.994    0.0155      3.16
 2 mu         0.2      0.992        1        0.159       2.08
 3 mu         0.3      0.979        0.997    0.454       1.56
 4 mu         0.4      0.980        0.995    0.518       1.33
 5 mu         0.5      0.986        1        0.562       1.37
 6 mu         0.6      0.996        1        0.679       1.20
 7 mu         0.7      1.01         1.00     0.809       1.40
 8 mu         0.8      1.03         1        0.691       1.63
 9 mu         0.9      1.03         1        0.313       1.74
10 mu_1       0.1      1.02         1        0.0517      2.72
11 mu_1       0.2      0.982        1.00     0.294       1.76
12 mu_1       0.3      0.975        0.996    0.527       1.44
13 mu_1       0.4      0.981        0.997    0.511       1.39
14 mu_1       0.5      0.988        0.998    0.592       1.33
15 mu_1       0.6      1.00         1        0.718       1.19
16 mu_1       0.7      1.02         1        0.799       1.46
17 mu_1       0.8      1.03         1.00     0.676       1.63
18 mu_1       0.9      1.03         1        0.272       1.77
19 mu_0       0.1      0.979        0.977    0.0115      3.21
20 mu_0       0.2      0.994        1        0.125       2.16
21 mu_0       0.3      0.981        0.990    0.373       1.61
22 mu_0       0.4      0.979        0.993    0.524       1.36
23 mu_0       0.5      0.983        1        0.533       1.41
24 mu_0       0.6      0.990        1        0.620       1.25
25 mu_0       0.7      1.00         1        0.760       1.29
26 mu_0       0.8      1.02         1        0.748       1.68
27 mu_0       0.9      1.02         1        0.609       1.73
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       1.27     0.000377  2.30e-16     89.7 
 2 mu         0.2       1.05     0.0230    5.13e-11     18.7 
 3 mu         0.3       1.07     0.232     5.06e- 8     18.5 
 4 mu         0.4       1.11     0.699     6.73e- 6     14.3 
 5 mu         0.5       1.15     0.876     2.99e- 4      7.62
 6 mu         0.6       1.20     1.04      4.11e- 5      6.17
 7 mu         0.7       1.23     0.955     2.31e- 7      7.12
 8 mu         0.8       1.28     0.522     1.57e-10     27.1 
 9 mu         0.9       1.69     0.0462    5.97e-16     87.9 
10 mu_1       0.1       1.06     0.00229   0            30.9 
11 mu_1       0.2       1.07     0.0683    0            16.5 
12 mu_1       0.3       1.09     0.425     0            19.2 
13 mu_1       0.4       1.12     0.806     0            11.2 
14 mu_1       0.5       1.17     0.876     0             7.62
15 mu_1       0.6       1.21     1.05      0             6.17
16 mu_1       0.7       1.23     0.882     0            10.2 
17 mu_1       0.8       1.31     0.341     0            33.8 
18 mu_1       0.9       1.75     0.0316    0            97.7 
19 mu_0       0.1       1.29     0.000158  0            99.6 
20 mu_0       0.2       1.05     0.0121    0            21.7 
21 mu_0       0.3       1.06     0.132     0            18.1 
22 mu_0       0.4       1.10     0.505     0            16.4 
23 mu_0       0.5       1.13     0.867     0             8.07
24 mu_0       0.6       1.18     0.907     0             6.33
25 mu_0       0.7       1.21     1.06      0             5.86
26 mu_0       0.8       1.17     0.825     0             7.70
27 mu_0       0.9       1.16     0.137     0            17.3 
[1] "Total run time was 256.844 seconds"
