
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
Loading required package: Matrix

Attaching package: ‘Matrix’

The following objects are masked from ‘package:tidyr’:

    expand, pack, unpack

[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: para"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 200"
[1] "N_total: 2619"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6 11 10 11 13 11 15 17 11 13 11 15 12 13 19 12 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03739 0.36805 0.61827 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
1580 1039 
[1] "treatment indicator table: "

   0    1 
 972 1647 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] "     Cluster: 104"
[1] "     Cluster: 105"
[1] "     Cluster: 106"
[1] "     Cluster: 108"
[1] "     Cluster: 109"
[1] "     Cluster: 110"
[1] "     Cluster: 112"
[1] "     Cluster: 113"
[1] "     Cluster: 115"
[1] "     Cluster: 116"
[1] "     Cluster: 117"
[1] "     Cluster: 119"
[1] "     Cluster: 125"
[1] "     Cluster: 128"
[1] "     Cluster: 130"
[1] "     Cluster: 131"
[1] "     Cluster: 135"
[1] "     Cluster: 136"
[1] "     Cluster: 139"
[1] "     Cluster: 140"
[1] "     Cluster: 141"
[1] "     Cluster: 143"
[1] "     Cluster: 144"
[1] "     Cluster: 145"
[1] "     Cluster: 146"
[1] "     Cluster: 147"
[1] "     Cluster: 149"
[1] "     Cluster: 150"
[1] "     Cluster: 154"
[1] "     Cluster: 157"
[1] "     Cluster: 159"
[1] "     Cluster: 160"
[1] "     Cluster: 165"
[1] "     Cluster: 166"
[1] "     Cluster: 168"
[1] "     Cluster: 169"
[1] "     Cluster: 170"
[1] "     Cluster: 172"
[1] "     Cluster: 173"
[1] "     Cluster: 174"
[1] "     Cluster: 177"
[1] "     Cluster: 178"
[1] "     Cluster: 179"
[1] "     Cluster: 180"
[1] "     Cluster: 182"
[1] "     Cluster: 188"
[1] "     Cluster: 191"
[1] "     Cluster: 194"
[1] "     Cluster: 196"
[1] "     Cluster: 197"
[1] "     Cluster: 199"
[1] "   Split: 2"
[1] "     Cluster: 2"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 77"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 101"
[1] "     Cluster: 102"
[1] "     Cluster: 103"
[1] "     Cluster: 107"
[1] "     Cluster: 111"
[1] "     Cluster: 114"
[1] "     Cluster: 118"
[1] "     Cluster: 120"
[1] "     Cluster: 121"
[1] "     Cluster: 122"
[1] "     Cluster: 123"
[1] "     Cluster: 124"
[1] "     Cluster: 126"
[1] "     Cluster: 127"
[1] "     Cluster: 129"
[1] "     Cluster: 132"
[1] "     Cluster: 133"
[1] "     Cluster: 134"
[1] "     Cluster: 137"
[1] "     Cluster: 138"
[1] "     Cluster: 142"
[1] "     Cluster: 148"
[1] "     Cluster: 151"
[1] "     Cluster: 152"
[1] "     Cluster: 153"
[1] "     Cluster: 155"
[1] "     Cluster: 156"
[1] "     Cluster: 158"
[1] "     Cluster: 161"
[1] "     Cluster: 162"
[1] "     Cluster: 163"
[1] "     Cluster: 164"
[1] "     Cluster: 167"
[1] "     Cluster: 171"
[1] "     Cluster: 175"
[1] "     Cluster: 176"
[1] "     Cluster: 181"
[1] "     Cluster: 183"
[1] "     Cluster: 184"
[1] "     Cluster: 185"
[1] "     Cluster: 186"
[1] "     Cluster: 187"
[1] "     Cluster: 189"
[1] "     Cluster: 190"
[1] "     Cluster: 192"
[1] "     Cluster: 193"
[1] "     Cluster: 195"
[1] "     Cluster: 198"
[1] "     Cluster: 200"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 376.568 seconds"
Warning message:
In checkConv(attr(opt, "derivs"), opt$par, ctrl = control$checkConv,  :
  Model failed to converge with max|grad| = 0.003156 (tol = 0.002, component 1)
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.348 0.0775
 2 mu         0.1   0.2 0.379 0.0613
 3 mu         0.1   0.3 0.436 0.0726
 4 mu         0.1   0.4 0.481 0.102 
 5 mu         0.1   0.5 0.492 0.100 
 6 mu         0.2   0.1 0.254 0.0588
 7 mu         0.2   0.2 0.264 0.104 
 8 mu         0.2   0.3 0.303 0.140 
 9 mu         0.2   0.4 0.315 0.197 
10 mu         0.2   0.5 0.347 0.184 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.917        0.715  0.00102       4.92
 2 mu         0.2      0.984        1      0.0356        3.40
 3 mu         0.3      1.01         1      0.163         1.95
 4 mu         0.4      1.02         1.01   0.371         1.67
 5 mu         0.5      1.01         1.01   0.629         1.39
 6 mu         0.6      1.00         1      0.756         1.29
 7 mu         0.7      0.998        1      0.748         1.28
 8 mu         0.8      1.00         1.00   0.719         1.30
 9 mu         0.9      1.02         1      0.365         1.92
10 mu_1       0.1      0.965        0.960  0.00378       4.72
11 mu_1       0.2      1.00         0.988  0.0681        2.16
12 mu_1       0.3      1.02         1      0.227         1.77
13 mu_1       0.4      1.02         1.02   0.447         1.60
14 mu_1       0.5      1.01         1      0.698         1.34
15 mu_1       0.6      1.00         1      0.760         1.25
16 mu_1       0.7      0.998        1      0.725         1.29
17 mu_1       0.8      1.00         1.00   0.679         1.36
18 mu_1       0.9      1.02         1      0.345         1.97
19 mu_0       0.1      0.911        0.663  0.000709      5.03
20 mu_0       0.2      0.980        0.999  0.0274        3.71
21 mu_0       0.3      1.01         1      0.136         2.20
22 mu_0       0.4      1.02         1      0.321         1.72
23 mu_0       0.5      1.02         1.01   0.561         1.49
24 mu_0       0.6      1.01         1      0.751         1.34
25 mu_0       0.7      0.997        0.995  0.799         1.25
26 mu_0       0.8      0.997        1      0.704         1.33
27 mu_0       0.9      1.01         1      0.542         1.54
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.686    0.0000874  1.09e-16     35.7 
 2 mu         0.2      1.13     0.00649    2.86e-11     70.6 
 3 mu         0.3      1.31     0.0895     4.23e- 8     72.0 
 4 mu         0.4      1.30     0.369      7.49e- 6     35.8 
 5 mu         0.5      1.21     0.819      4.16e- 4     15.6 
 6 mu         0.6      1.10     0.974      1.08e- 2      8.63
 7 mu         0.7      1.04     0.945      4.01e- 4      4.70
 8 mu         0.8      1.04     0.655      3.53e- 6      5.23
 9 mu         0.9      1.24     0.0994     9.70e-10     21.0 
10 mu_1       0.1      1.09     0.000549   1.09e-15     45.4 
11 mu_1       0.2      1.31     0.0248     1.43e-10     88.3 
12 mu_1       0.3      1.32     0.188      1.41e- 7     60.0 
13 mu_1       0.4      1.27     0.590      1.87e- 5     22.4 
14 mu_1       0.5      1.18     0.852      8.32e- 4     14.8 
15 mu_1       0.6      1.08     0.938      1.39e- 3      6.81
16 mu_1       0.7      1.04     0.975      4.40e- 5      4.68
17 mu_1       0.8      1.05     0.568      3.39e- 7      6.39
18 mu_1       0.9      1.27     0.0647     8.29e-11     23.4 
19 mu_0       0.1      0.640    0.0000316  0            35.3 
20 mu_0       0.2      1.09     0.00314    0            66.2 
21 mu_0       0.3      1.30     0.0465     0            77.2 
22 mu_0       0.4      1.32     0.199      0            44.8 
23 mu_0       0.5      1.25     0.585      0            16.4 
24 mu_0       0.6      1.14     0.883      0            11.4 
25 mu_0       0.7      1.05     0.900      0             5.87
26 mu_0       0.8      1.01     0.882      0             5.65
27 mu_0       0.9      0.927    0.200      0             8.26
[1] "Total run time was 380.262 seconds"
