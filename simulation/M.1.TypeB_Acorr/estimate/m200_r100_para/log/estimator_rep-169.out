
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
Loading required package: Matrix

Attaching package: ‘Matrix’

The following objects are masked from ‘package:tidyr’:

    expand, pack, unpack

[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: para"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 200"
[1] "N_total: 2569"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 8 11 12 13 12 10 11 10 15 19 15 15 15 14  7 13 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04405 0.37971 0.64607 1.00000 4.16002 
[1] "event indicator table: "

   0    1 
1563 1006 
[1] "treatment indicator table: "

   0    1 
 886 1683 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "     Cluster: 103"
[1] "     Cluster: 108"
[1] "     Cluster: 109"
[1] "     Cluster: 110"
[1] "     Cluster: 111"
[1] "     Cluster: 112"
[1] "     Cluster: 116"
[1] "     Cluster: 118"
[1] "     Cluster: 119"
[1] "     Cluster: 120"
[1] "     Cluster: 122"
[1] "     Cluster: 123"
[1] "     Cluster: 124"
[1] "     Cluster: 125"
[1] "     Cluster: 128"
[1] "     Cluster: 132"
[1] "     Cluster: 133"
[1] "     Cluster: 135"
[1] "     Cluster: 138"
[1] "     Cluster: 139"
[1] "     Cluster: 140"
[1] "     Cluster: 142"
[1] "     Cluster: 144"
[1] "     Cluster: 145"
[1] "     Cluster: 146"
[1] "     Cluster: 148"
[1] "     Cluster: 149"
[1] "     Cluster: 150"
[1] "     Cluster: 151"
[1] "     Cluster: 153"
[1] "     Cluster: 154"
[1] "     Cluster: 155"
[1] "     Cluster: 156"
[1] "     Cluster: 159"
[1] "     Cluster: 160"
[1] "     Cluster: 164"
[1] "     Cluster: 168"
[1] "     Cluster: 170"
[1] "     Cluster: 175"
[1] "     Cluster: 176"
[1] "     Cluster: 177"
[1] "     Cluster: 180"
[1] "     Cluster: 181"
[1] "     Cluster: 182"
[1] "     Cluster: 183"
[1] "     Cluster: 187"
[1] "     Cluster: 189"
[1] "     Cluster: 190"
[1] "     Cluster: 193"
[1] "     Cluster: 197"
[1] "     Cluster: 199"
[1] "     Cluster: 200"
[1] "   Split: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 101"
[1] "     Cluster: 102"
[1] "     Cluster: 104"
[1] "     Cluster: 105"
[1] "     Cluster: 106"
[1] "     Cluster: 107"
[1] "     Cluster: 113"
[1] "     Cluster: 114"
[1] "     Cluster: 115"
[1] "     Cluster: 117"
[1] "     Cluster: 121"
[1] "     Cluster: 126"
[1] "     Cluster: 127"
[1] "     Cluster: 129"
[1] "     Cluster: 130"
[1] "     Cluster: 131"
[1] "     Cluster: 134"
[1] "     Cluster: 136"
[1] "     Cluster: 137"
[1] "     Cluster: 141"
[1] "     Cluster: 143"
[1] "     Cluster: 147"
[1] "     Cluster: 152"
[1] "     Cluster: 157"
[1] "     Cluster: 158"
[1] "     Cluster: 161"
[1] "     Cluster: 162"
[1] "     Cluster: 163"
[1] "     Cluster: 165"
[1] "     Cluster: 166"
[1] "     Cluster: 167"
[1] "     Cluster: 169"
[1] "     Cluster: 171"
[1] "     Cluster: 172"
[1] "     Cluster: 173"
[1] "     Cluster: 174"
[1] "     Cluster: 178"
[1] "     Cluster: 179"
[1] "     Cluster: 184"
[1] "     Cluster: 185"
[1] "     Cluster: 186"
[1] "     Cluster: 188"
[1] "     Cluster: 191"
[1] "     Cluster: 192"
[1] "     Cluster: 194"
[1] "     Cluster: 195"
[1] "     Cluster: 196"
[1] "     Cluster: 198"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 358.387 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.112 0.129 
 2 mu         0.1   0.2 0.361 0.149 
 3 mu         0.1   0.3 0.358 0.180 
 4 mu         0.1   0.4 0.517 0.227 
 5 mu         0.1   0.5 0.512 0.232 
 6 mu         0.2   0.1 0.163 0.0675
 7 mu         0.2   0.2 0.306 0.0826
 8 mu         0.2   0.3 0.345 0.0878
 9 mu         0.2   0.4 0.452 0.113 
10 mu         0.2   0.5 0.478 0.111 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.823        0.620 0.0000732     10.4 
 2 mu         0.2      0.948        0.933 0.00759       11.3 
 3 mu         0.3      0.983        0.993 0.0785         4.21
 4 mu         0.4      0.990        1     0.313          1.55
 5 mu         0.5      0.989        1     0.680          1.49
 6 mu         0.6      0.992        0.997 0.794          1.31
 7 mu         0.7      1.00         1     0.777          1.23
 8 mu         0.8      1.01         1     0.687          1.38
 9 mu         0.9      1.01         1     0.454          2.19
10 mu_1       0.1      0.922        0.904 0.000333      15.6 
11 mu_1       0.2      0.987        0.976 0.0180         8.51
12 mu_1       0.3      0.995        1     0.132          2.40
13 mu_1       0.4      0.993        1     0.424          1.50
14 mu_1       0.5      0.990        0.998 0.727          1.46
15 mu_1       0.6      0.994        0.997 0.808          1.26
16 mu_1       0.7      1.00         1     0.759          1.23
17 mu_1       0.8      1.01         1     0.680          1.39
18 mu_1       0.9      1.01         1     0.412          2.30
19 mu_0       0.1      0.812        0.589 0.0000443      9.82
20 mu_0       0.2      0.938        0.921 0.00498       12.0 
21 mu_0       0.3      0.977        0.983 0.0555         4.99
22 mu_0       0.4      0.988        1     0.239          1.66
23 mu_0       0.5      0.988        1     0.592          1.51
24 mu_0       0.6      0.990        1.00  0.756          1.40
25 mu_0       0.7      0.997        1.00  0.802          1.29
26 mu_0       0.8      1.01         1.01  0.714          1.33
27 mu_0       0.9      1.02         1     0.665          1.49
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       3.07   0.0000128   3.66e-17    447.  
 2 mu         0.2       2.29   0.00240     1.71e-11    174.  
 3 mu         0.3       2.36   0.0331      3.31e- 8     59.8 
 4 mu         0.4       2.35   0.184       6.71e- 6    104.  
 5 mu         0.5       1.90   0.578       3.88e- 4     95.8 
 6 mu         0.6       1.40   0.968       8.43e- 4     46.1 
 7 mu         0.7       1.24   1.05        9.86e- 6     10.2 
 8 mu         0.8       1.24   1.01        1.71e- 8      5.84
 9 mu         0.9       1.11   0.270       2.94e-13      9.74
10 mu_1       0.1       1.25   0.0000868   0            37.4 
11 mu_1       0.2       1.80   0.00659     0            42.7 
12 mu_1       0.3       2.27   0.0711      0            80.8 
13 mu_1       0.4       2.21   0.311       0           113.  
14 mu_1       0.5       1.72   0.805       0            83.8 
15 mu_1       0.6       1.32   1.04        0            33.6 
16 mu_1       0.7       1.24   1.11        0             6.36
17 mu_1       0.8       1.23   0.961       0             6.64
18 mu_1       0.9       1.10   0.201       0            10.8 
19 mu_0       0.1       3.27   0.00000383  0           496.  
20 mu_0       0.2       2.42   0.000838    0           218.  
21 mu_0       0.3       2.40   0.0114      0            85.5 
22 mu_0       0.4       2.45   0.0826      0            97.2 
23 mu_0       0.5       2.09   0.333       0           108.  
24 mu_0       0.6       1.53   0.871       0            64.8 
25 mu_0       0.7       1.25   1.07        0            19.1 
26 mu_0       0.8       1.26   1.19        0             4.65
27 mu_0       0.9       1.22   0.629       0             8.63
[1] "Total run time was 361.972 seconds"
